// Class Phoenix.Ability_Character_Interface
// Size: 0x28 (Inherited: 0x28)
struct UAbility_Character_Interface : UInterface {

	void StopCustomAbility(); // Function Phoenix.Ability_Character_Interface.StopCustomAbility // (Native|Public|BlueprintCallable) // @ game+0x318b7c0
	void PlayCustomAbility(struct UAblAbility* InAbility, bool bPreventReactions); // Function Phoenix.Ability_Character_Interface.PlayCustomAbility // (Native|Public|BlueprintCallable) // @ game+0x318b6f0
};

// Class Phoenix.ablAbilityDoneTaskScratchPad
// Size: 0x58 (Inherited: 0x50)
struct UablAbilityDoneTaskScratchPad : UAblBranchTaskScratchPad {
	bool bDone; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.ablAbilityDoneTask
// Size: 0xa0 (Inherited: 0x70)
struct UablAbilityDoneTask : UAblAbilityTask {
	enum class EEnemy_Ability NextAbility; // 0x70(0x01)
	bool bDelayBranchIfNextIsIdle; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
	struct TArray<enum class EEnemyAIState> DelayBranchStates; // 0x78(0x10)
	struct TArray<struct UAblBranchCondition*> Conditions; // 0x88(0x10)
	bool bMustPassAllConditions; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.AblAddLinearImpulseBaseTask
// Size: 0x70 (Inherited: 0x70)
struct UAblAddLinearImpulseBaseTask : UAblAbilityTask {
};

// Class Phoenix.AblAddLinearImpulseTask
// Size: 0x90 (Inherited: 0x70)
struct UAblAddLinearImpulseTask : UAblAddLinearImpulseBaseTask {
	struct FVector ImpulseDirection; // 0x70(0x0c)
	float ImpulseDamping; // 0x7c(0x04)
	float ImpulseStrengthMin; // 0x80(0x04)
	float ImpulseStrengthMax; // 0x84(0x04)
	enum class EAblAddLinearImpulseDirectionType DirectionType; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.AblAvaMotionWarpSyncPointUpdaterScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblAvaMotionWarpSyncPointUpdaterScratchpad : UObject {
};

// Class Phoenix.AblAvaMotionWarpSyncPointUpdater
// Size: 0x28 (Inherited: 0x28)
struct UAblAvaMotionWarpSyncPointUpdater : UObject {
};

// Class Phoenix.AblAddOrUpdateAvaMotionWarpSyncPointScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblAddOrUpdateAvaMotionWarpSyncPointScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAmbulatory_MovementComponent*> MovementComponents; // 0x28(0x10)
	struct UAblAvaMotionWarpSyncPointUpdaterScratchpad* UpdaterScratchpad; // 0x38(0x08)
};

// Class Phoenix.AblAddOrUpdateAvaMotionWarpSyncPointTask
// Size: 0x88 (Inherited: 0x70)
struct UAblAddOrUpdateAvaMotionWarpSyncPointTask : UAblAbilityTask {
	struct FName SyncPointName; // 0x70(0x08)
	struct UAblAvaMotionWarpSyncPointUpdater* SyncPointUpdater; // 0x78(0x08)
	bool bUpdateSyncPointOnTick; // 0x80(0x01)
	bool bRemoveSyncPointOnEndOfTask; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
};

// Class Phoenix.AblAdjustCamTask
// Size: 0x70 (Inherited: 0x70)
struct UAblAdjustCamTask : UAblAbilityTask {
};

// Class Phoenix.AblAkEventLookupTask
// Size: 0xa0 (Inherited: 0x70)
struct UAblAkEventLookupTask : UAblAbilityTask {
	struct FGameplayTagContainer LookupTags; // 0x70(0x20)
	bool bFollow; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	struct FName SocketName; // 0x94(0x08)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.ablAkSetMurmurationRTPCTask
// Size: 0xa0 (Inherited: 0x70)
struct UablAkSetMurmurationRTPCTask : UAblAbilityTask {
	int32_t RTPC_Step; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct FString RTPC_Name; // 0x78(0x10)
	struct FName OnStartEventName; // 0x88(0x08)
	struct FName OnEndEventName; // 0x90(0x08)
	bool bPlayerOnly; // 0x98(0x01)
	bool bDecay; // 0x99(0x01)
	enum class EMurmurationValueType RTPC_ValueType; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Phoenix.ablAllowWalkOffLedgesTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablAllowWalkOffLedgesTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablAllowWalkOffLedgesTask
// Size: 0x78 (Inherited: 0x70)
struct UablAllowWalkOffLedgesTask : UAblAbilityTask {
	bool bAllowWalkOffLedges; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblAnimationAssetChooser_CreatureSlot
// Size: 0x48 (Inherited: 0x48)
struct UAblAnimationAssetChooser_CreatureSlot : UAmbulatoryAnimationAssetChooser {
};

// Class Phoenix.AblAnimationAssetChooser_WorldEvent
// Size: 0x48 (Inherited: 0x48)
struct UAblAnimationAssetChooser_WorldEvent : UAmbulatoryAnimationAssetChooser {
};

// Class Phoenix.FlightAnimationComponent
// Size: 0x128 (Inherited: 0xc8)
struct UFlightAnimationComponent : UActorComponent {
	struct FBoneReferenceEx RootBone; // 0xc8(0x10)
	struct FBoneReferenceEx NeckBone; // 0xd8(0x10)
	float MinLiftSpeedPercent; // 0xe8(0x04)
	float MaxLiftSpeedPercent; // 0xec(0x04)
	float MaxLiftAngle; // 0xf0(0x04)
	float MaxNeckRollAngle; // 0xf4(0x04)
	float MinAccelerationPercent; // 0xf8(0x04)
	float MaxAnimRate; // 0xfc(0x04)
	float MaxAccelerationPercent; // 0x100(0x04)
	float MinVelocityPercent; // 0x104(0x04)
	float MaxGlideTime; // 0x108(0x04)
	float MinGlideResetTime; // 0x10c(0x04)
	float GlideTimeDescentSpeedThreshold; // 0x110(0x04)
	char pad_114[0x14]; // 0x114(0x14)
};

// Class Phoenix.AblAnimationModifier_Flight
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimationModifier_Flight : UAblAnimationModifier {
};

// Class Phoenix.AblAnimationModifier_MountRider
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimationModifier_MountRider : UAblAnimationModifier {
};

// Class Phoenix.AnimMetaDataNPCStrafe
// Size: 0xb0 (Inherited: 0x28)
struct UAnimMetaDataNPCStrafe : UAnimMetaData {
	struct FRuntimeFloatCurve BlendInputToHipRotationCurve; // 0x28(0x88)
};

// Class Phoenix.AblAnimationModifier_NPCStrafe
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimationModifier_NPCStrafe : UAblAnimationModifier {
};

// Class Phoenix.AblAnimationModifier_ParryAdvance
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimationModifier_ParryAdvance : UAblAnimationModifier {
};

// Class Phoenix.QuadrupedSpineComponent
// Size: 0x3c0 (Inherited: 0xc8)
struct UQuadrupedSpineComponent : UActorComponent {
	bool bAffectPose; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FQuadrupedSpineBoneChain NeckChain; // 0xd0(0x38)
	struct FQuadrupedSpineBoneChain SpineChain; // 0x108(0x38)
	struct FQuadrupedSpineBoneChain TailChain; // 0x140(0x38)
	struct TArray<struct FQuadrupedSpineRebase> RebaseBones; // 0x178(0x10)
	float SpineInterpTime; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct FRuntimeFloatCurve SpeedToSpineInterpTimeMultiplier; // 0x190(0x88)
	struct FRuntimeFloatCurve SpeedToTurnRateMultiplier; // 0x218(0x88)
	float TurningFactor; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct FRuntimeFloatCurve SpeedToTurningFactor; // 0x2a8(0x88)
	float BlendDurationIntoRootMotionAnim; // 0x330(0x04)
	float BlendDurationOutOfRootMotionAnim; // 0x334(0x04)
	float RootMotionAngleRemainingToStartBlendingIntoBent; // 0x338(0x04)
	char pad_33C[0xc]; // 0x33c(0x0c)
	struct URootMotionModifier_QuadrupedSpine* RootMotionModifier; // 0x348(0x08)
	char pad_350[0x70]; // 0x350(0x70)

	float GetInterpTimeAtSpeed(struct UQuadrupedSpineComponent* InSpineComponent, float InNormalizedSpeed); // Function Phoenix.QuadrupedSpineComponent.GetInterpTimeAtSpeed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x318b620
};

// Class Phoenix.RootMotionModifier_QuadrupedSpine
// Size: 0x60 (Inherited: 0x50)
struct URootMotionModifier_QuadrupedSpine : URootMotionModifier {
	char pad_50[0x10]; // 0x50(0x10)
};

// Class Phoenix.RootMotionModifierProperties_QuadrupedSpine
// Size: 0x30 (Inherited: 0x30)
struct URootMotionModifierProperties_QuadrupedSpine : URootMotionModifierProperties {
};

// Class Phoenix.AnimMetaDataQuadrupedSpine
// Size: 0x250 (Inherited: 0x28)
struct UAnimMetaDataQuadrupedSpine : UAnimMetaData {
	bool bEnableSpineBending; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FRuntimeFloatCurve SpineStartCurve; // 0x30(0x88)
	struct FRuntimeFloatCurve SpineEndCurve; // 0xb8(0x88)
	struct FRuntimeFloatCurve TurnRateStartCurve; // 0x140(0x88)
	struct FRuntimeFloatCurve TurnRateEndCurve; // 0x1c8(0x88)
};

// Class Phoenix.AblAnimationModifier_QuadrupedSpine
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimationModifier_QuadrupedSpine : UAblAnimationModifier {
};

// Class Phoenix.AnimNotify_ResetQuadrupedSpineDirection
// Size: 0x38 (Inherited: 0x38)
struct UAnimNotify_ResetQuadrupedSpineDirection : UAnimNotify {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveQuadrupedSpine
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveQuadrupedSpine : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBranchConditionQuadrupedSpineAngle
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionQuadrupedSpineAngle : UAblBranchCondition {
	struct FVector2D AngleRange; // 0x30(0x08)
};

// Class Phoenix.AblAnimationModifier_WandCastAim
// Size: 0x58 (Inherited: 0x28)
struct UAblAnimationModifier_WandCastAim : UAblAnimationModifier {
	struct FBoneReferenceEx ShoulderBone; // 0x28(0x10)
	struct FName BoneName; // 0x38(0x08)
	struct FName EventName; // 0x40(0x08)
	float DefaultInterpTime; // 0x48(0x04)
	bool bLoop; // 0x4c(0x01)
	bool bAlwaysUseCurrentAimInfo; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)
	float AimYawInterpSpeed; // 0x50(0x04)
	float AimPitchInterpSpeed; // 0x54(0x04)
};

// Class Phoenix.AblAnimationTagChooser_AimModeTurnToFace
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_AimModeTurnToFace : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_Array
// Size: 0x60 (Inherited: 0x50)
struct UAblAnimationTagChooser_Array : UAblAnimationTagChooser {
	struct TArray<struct UAblAnimationTagChooser*> TagChooserArray; // 0x50(0x10)
};

// Class Phoenix.AblAnimationTagChooser_CapturedCreatureType
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_CapturedCreatureType : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_ClimbLadder
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_ClimbLadder : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_CreatureAnimationVariation
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_CreatureAnimationVariation : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_CreatureCurrentStance
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_CreatureCurrentStance : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_CreatureBecomeAwareStance
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_CreatureBecomeAwareStance : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_CreatureLastAnimNotify
// Size: 0x60 (Inherited: 0x50)
struct UAblAnimationTagChooser_CreatureLastAnimNotify : UAblAnimationTagChooser {
	struct TArray<struct FName> Names; // 0x50(0x10)
};

// Class Phoenix.AblAnimationTagChooser_CreatureTakeoff
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_CreatureTakeoff : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_TurnDirection
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_TurnDirection : UAblAnimationTagChooser {
	struct TArray<struct FVector2D> AngleRanges; // 0x50(0x10)
	struct UTurnDirectionTagChooser_TargetDirectionGetter* TargetDirectionGetter; // 0x60(0x08)
};

// Class Phoenix.AblAnimationTagChooser_CreatureTurnDirectionWithNavCheck
// Size: 0x78 (Inherited: 0x68)
struct UAblAnimationTagChooser_CreatureTurnDirectionWithNavCheck : UAblAnimationTagChooser_TurnDirection {
	struct TArray<struct FTurnDirectionNavMeshCheckSettings> NavMeshCheckSettings; // 0x68(0x10)
};

// Class Phoenix.TurnDirectionTagChooser_TargetDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnDirectionTagChooser_TargetDirectionGetter : UObject {
};

// Class Phoenix.TurnDirectionTagChooser_QuadrupedSpineAngleGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnDirectionTagChooser_QuadrupedSpineAngleGetter : UTurnDirectionTagChooser_TargetDirectionGetter {
};

// Class Phoenix.AblAnimationTagChooser_CrouchTurnMoveStart
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_CrouchTurnMoveStart : UAblAnimationTagChooser {
	bool bMotionMatching; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FVector FootPositionWeight; // 0x54(0x0c)
	struct FVector FootVelocityWeight; // 0x60(0x0c)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.AblAnimationTagChooser_CrouchTurnMoveStop
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_CrouchTurnMoveStop : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_DeathlyHallows
// Size: 0x98 (Inherited: 0x50)
struct UAblAnimationTagChooser_DeathlyHallows : UAblAnimationTagChooser {
	struct FGameplayTagContainer BaseTags; // 0x50(0x20)
	struct FGameplayTag LeftFootTag; // 0x70(0x08)
	struct FGameplayTag RightFootTag; // 0x78(0x08)
	struct FGameplayTag StoneTag; // 0x80(0x08)
	struct FGameplayTag WandTag; // 0x88(0x08)
	struct FGameplayTag CloakTag; // 0x90(0x08)
};

// Class Phoenix.AblAnimationTagChooser_DirectionalTurns
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_DirectionalTurns : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_DirectionBased
// Size: 0x60 (Inherited: 0x50)
struct UAblAnimationTagChooser_DirectionBased : UAblAnimationTagChooser {
	int32_t NumAngles; // 0x50(0x04)
	bool bWrapAngles; // 0x54(0x01)
	bool bSetFixedToDesiredDirection; // 0x55(0x01)
	bool bLeftFootAtEndOfList; // 0x56(0x01)
	char pad_57[0x1]; // 0x57(0x01)
	int32_t NumSpeeds; // 0x58(0x04)
	bool bUseFootPlacement; // 0x5c(0x01)
	enum class EDirectionType DirectionType; // 0x5d(0x01)
	bool bDebugDraw; // 0x5e(0x01)
	char pad_5F[0x1]; // 0x5f(0x01)
};

// Class Phoenix.AblAnimationTagChooser_DodgeDuck
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_DodgeDuck : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_DodgeRoll
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_DodgeRoll : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_Enemy
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_Enemy : UAblAnimationTagChooser {
	enum class EEnemy_TagContainer TagContainer; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.AblAnimationTagChooser_EnemyContainer
// Size: 0xc8 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyContainer : UAblAnimationTagChooser {
	enum class EEnemy_TagContainer ContainerSource; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct FGameplayTagContainer AttackTagContainer; // 0x58(0x20)
	bool bAddWeaponTags; // 0x78(0x01)
	bool bAddWeaponsTagsIfMatchAttackType; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
	struct FGameplayTagContainer WeaponTagsAttackTagContainer; // 0x80(0x20)
	bool bAddDirectionalTags; // 0xa0(0x01)
	bool bAddDirectionalTagsIfMatchAttackType; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
	struct FGameplayTagContainer DirectionalTagsAttackTagContainer; // 0xa8(0x20)
};

// Class Phoenix.AblAnimationTagChooser_EnemyAlert
// Size: 0xd0 (Inherited: 0xc8)
struct UAblAnimationTagChooser_EnemyAlert : UAblAnimationTagChooser_EnemyContainer {
	enum class EEnemy_AlertState AlertState; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.AblAnimationTagChooser_EnemyAttack
// Size: 0xc8 (Inherited: 0xc8)
struct UAblAnimationTagChooser_EnemyAttack : UAblAnimationTagChooser_EnemyContainer {
};

// Class Phoenix.AblAnimationTagChooser_EnemyCounterAttack
// Size: 0x80 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyCounterAttack : UAblAnimationTagChooser {
	struct FGameplayTagContainer CounterTagContainer; // 0x50(0x20)
	struct TArray<struct AEnemyAIWeapon*> RequiredList; // 0x70(0x10)
};

// Class Phoenix.AblAnimationTagChooser_EnemyDirectionBased
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyDirectionBased : UAblAnimationTagChooser {
	bool bCloseBackAngle; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.AblAppendToBaseChooser_EnemyDirectionToTarget
// Size: 0x38 (Inherited: 0x28)
struct UAblAppendToBaseChooser_EnemyDirectionToTarget : UAblAnimationTagChooser_AppendToBaseChooser {
	int32_t MinFrontAngle; // 0x28(0x04)
	int32_t MaxFrontAngle; // 0x2c(0x04)
	int32_t MinLeftAngle; // 0x30(0x04)
	int32_t MaxRightAngle; // 0x34(0x04)
};

// Class Phoenix.AblAnimationTagChooser_EnemyIdle
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyIdle : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_EnemyMove
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyMove : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_EnemyMovePivot
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyMovePivot : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_EnemyMoveStart
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyMoveStart : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_EnemyMoveStop
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyMoveStop : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_EnemyMoveType
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyMoveType : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_EnemyShuffle
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyShuffle : UAblAnimationTagChooser {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.AblAnimationTagChooser_EnemyTaunt
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyTaunt : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_EnemyTurnInPlace
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyTurnInPlace : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_EnemyType
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyType : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_EnemyWeapon
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_EnemyWeapon : UAblAnimationTagChooser {
	enum class EEnemy_WeaponSource WeaponSource; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.AblAnimationTagChooser_FallLandStudent
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_FallLandStudent : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_FeedPelletsToolReleaseType
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_FeedPelletsToolReleaseType : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_FlipendoFlourish
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_FlipendoFlourish : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_FootMatch
// Size: 0x78 (Inherited: 0x50)
struct UAblAnimationTagChooser_FootMatch : UAblAnimationTagChooser {
	float MinTimeIntoMotion; // 0x50(0x04)
	float TimeIntoMotion; // 0x54(0x04)
	float SourceTimeOffset; // 0x58(0x04)
	struct FVector FootPositionWeight; // 0x5c(0x0c)
	struct FVector FootVelocityWeight; // 0x68(0x0c)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.AblAnimationTagChooser_GaitSpeed
// Size: 0xa8 (Inherited: 0x50)
struct UAblAnimationTagChooser_GaitSpeed : UAblAnimationTagChooser {
	struct TMap<enum class EAblGaitSpeed, struct FGameplayTagContainer> GaitTags; // 0x50(0x50)
	enum class ESpeedType SpeedType; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.AblAnimationTagChooser_Getup
// Size: 0x60 (Inherited: 0x50)
struct UAblAnimationTagChooser_Getup : UAblAnimationTagChooser {
	struct TArray<struct FVector2D> AngleRanges; // 0x50(0x10)
};

// Class Phoenix.AblAnimationTagChooser_HandMatch
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_HandMatch : UAblAnimationTagChooser {
	struct FVector HandsPositionWeight; // 0x50(0x0c)
	struct FVector HandsVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_Idle
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Idle : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_IdleBreak
// Size: 0x98 (Inherited: 0x50)
struct UAblAnimationTagChooser_IdleBreak : UAblAnimationTagChooser {
	struct FGameplayTagContainer BaseTags; // 0x50(0x20)
	bool bFootMatch; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FGameplayTag LeftFootTag; // 0x74(0x08)
	struct FGameplayTag RightFootTag; // 0x7c(0x08)
	bool bIndoorOutdoorMatch; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct FGameplayTag OutdoorsTag; // 0x88(0x08)
	struct FGameplayTag IndoorsTag; // 0x90(0x08)
};

// Class Phoenix.AblAnimationTagChooser_IdleTurnToFace
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_IdleTurnToFace : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_Jump
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_Jump : UAblAnimationTagChooser {
	struct FVector2D FootMatchTimeRange; // 0x50(0x08)
	struct FVector FootPositionWeight; // 0x58(0x0c)
	struct FVector FootVelocityWeight; // 0x64(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_Jump_New
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_Jump_New : UAblAnimationTagChooser {
	struct FVector2D FootMatchTimeRange; // 0x50(0x08)
	struct FVector FootPositionWeight; // 0x58(0x0c)
	struct FVector FootVelocityWeight; // 0x64(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_Jump_Student
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Jump_Student : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_MountGait
// Size: 0xa0 (Inherited: 0x50)
struct UAblAnimationTagChooser_MountGait : UAblAnimationTagChooser {
	struct TMap<enum class ECreatureMovementSpeed, struct FGameplayTagContainer> GaitToTagsMap; // 0x50(0x50)
};

// Class Phoenix.AblAnimationTagChooser_MountLadder
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_MountLadder : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_MountType
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_MountType : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_MoveJump
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_MoveJump : UAblAnimationTagChooser {
	struct FVector2D FootMatchTimeRange; // 0x50(0x08)
	struct FVector FootPositionWeight; // 0x58(0x0c)
	struct FVector FootVelocityWeight; // 0x64(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_MoveJumpLand
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_MoveJumpLand : UAblAnimationTagChooser {
	struct FVector2D FootMatchTimeRange; // 0x50(0x08)
	struct FVector FootPositionWeight; // 0x58(0x0c)
	struct FVector FootVelocityWeight; // 0x64(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_MovingOverEdge
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_MovingOverEdge : UAblAnimationTagChooser {
	float TimeIntoMotion; // 0x50(0x04)
	struct FVector FootPositionWeight; // 0x54(0x0c)
	struct FVector FootVelocityWeight; // 0x60(0x0c)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.AblAnimationTagChooser_NPCImpactDirection
// Size: 0x88 (Inherited: 0x50)
struct UAblAnimationTagChooser_NPCImpactDirection : UAblAnimationTagChooser {
	struct FGameplayTag ReactionAnimationTag; // 0x50(0x08)
	struct FGameplayTag ReactFrontTag; // 0x58(0x08)
	struct FGameplayTag ReactBackTag; // 0x60(0x08)
	struct FGameplayTag ReactRightTag; // 0x68(0x08)
	struct FGameplayTag ReactLeftTag; // 0x70(0x08)
	struct FGameplayTag ReactUpTag; // 0x78(0x08)
	struct FGameplayTag ReactDownTag; // 0x80(0x08)
};

// Class Phoenix.AblAnimationTagChooser_Phase
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Phase : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_PhysicalReactionGetupPose
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_PhysicalReactionGetupPose : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_Pivot
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Pivot : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_Protego
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Protego : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_ProtegoParry
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_ProtegoParry : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_ProtegoRetaliate
// Size: 0x60 (Inherited: 0x50)
struct UAblAnimationTagChooser_ProtegoRetaliate : UAblAnimationTagChooser {
	struct TArray<struct USpellToolRecord*> SpellToEquip; // 0x50(0x10)
};

// Class Phoenix.AblAnimationTagChooser_RagdollBehavior
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_RagdollBehavior : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_Random
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Random : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_SlideRecovery
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_SlideRecovery : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_StairsAndSlopes
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_StairsAndSlopes : UAblAnimationTagChooser {
	enum class EStairsDirectionState StairsDirection; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.AblAnimationTagChooser_StealthTurnMoveStart
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_StealthTurnMoveStart : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_StealthTurnMoveStop
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_StealthTurnMoveStop : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_StepBack
// Size: 0x68 (Inherited: 0x50)
struct UAblAnimationTagChooser_StepBack : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
};

// Class Phoenix.AblAnimationTagChooser_Strafe
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Strafe : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_StrafeMoveLoop
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_StrafeMoveLoop : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_StrafeMoveStartStop
// Size: 0x78 (Inherited: 0x50)
struct UAblAnimationTagChooser_StrafeMoveStartStop : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
	float FootMatchSearchTime; // 0x68(0x04)
	bool bStopping; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	float StickFlickTime; // 0x70(0x04)
	float ShuffleStepInterpTime; // 0x74(0x04)
};

// Class Phoenix.AblAnimationTagChooser_Swim
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Swim : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_ThrowItem
// Size: 0x58 (Inherited: 0x50)
struct UAblAnimationTagChooser_ThrowItem : UAblAnimationTagChooser {
	float ThrowLongDistance; // 0x50(0x04)
	float ThrowMedDistance; // 0x54(0x04)
};

// Class Phoenix.TurnDirectionTagChooser_DesiredDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnDirectionTagChooser_DesiredDirectionGetter : UTurnDirectionTagChooser_TargetDirectionGetter {
};

// Class Phoenix.TurnDirectionTagChooser_DesiredWorldDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnDirectionTagChooser_DesiredWorldDirectionGetter : UTurnDirectionTagChooser_TargetDirectionGetter {
};

// Class Phoenix.TurnDirectionTagChooser_BlackboardDirectionGetter
// Size: 0x30 (Inherited: 0x28)
struct UTurnDirectionTagChooser_BlackboardDirectionGetter : UTurnDirectionTagChooser_TargetDirectionGetter {
	struct FName BlackboardKeyName; // 0x28(0x08)
};

// Class Phoenix.AblAnimationTagChooser_TurnMoveStart
// Size: 0x70 (Inherited: 0x50)
struct UAblAnimationTagChooser_TurnMoveStart : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
	float ShortStartTime; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.AblAnimationTagChooser_TurnMoveStop
// Size: 0x88 (Inherited: 0x50)
struct UAblAnimationTagChooser_TurnMoveStop : UAblAnimationTagChooser {
	struct FVector FootPositionWeight; // 0x50(0x0c)
	struct FVector FootVelocityWeight; // 0x5c(0x0c)
	float StickFlickTime; // 0x68(0x04)
	float ShortStopTime; // 0x6c(0x04)
	float ShuffleStepInterpTime; // 0x70(0x04)
	float PivotStopTime; // 0x74(0x04)
	float StartStopTime; // 0x78(0x04)
	float NoRootStopTime; // 0x7c(0x04)
	bool bEnableFwdStart2Stop; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Phoenix.AblAnimationTagChooser_WandCast
// Size: 0x80 (Inherited: 0x50)
struct UAblAnimationTagChooser_WandCast : UAblAnimationTagChooser {
	struct FGameplayTagContainer TooCloseToEnemyTag; // 0x50(0x20)
	float SpinMoveBlendTime; // 0x70(0x04)
	float MeleeMoveBlendTime; // 0x74(0x04)
	enum class EWandCastCommand WandCastCommand; // 0x78(0x01)
	bool bSampleYawRemainingFromCurve; // 0x79(0x01)
	char pad_7A[0x2]; // 0x7a(0x02)
	float YawRemainingSampleEndTime; // 0x7c(0x04)
};

// Class Phoenix.AblAnimationTagChooser_Wave
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_Wave : UAblAnimationTagChooser {
};

// Class Phoenix.AblAnimationTagChooser_WeaponVariant
// Size: 0x50 (Inherited: 0x50)
struct UAblAnimationTagChooser_WeaponVariant : UAblAnimationTagChooser {
};

// Class Phoenix.ablAnimDoneTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablAnimDoneTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablAnimDoneTask
// Size: 0x78 (Inherited: 0x70)
struct UablAnimDoneTask : UAblAbilityTask {
	enum class EEnemyAIAnimState State; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablAnimEndCallback_Enemy
// Size: 0x28 (Inherited: 0x28)
struct UablAnimEndCallback_Enemy : UAblAnimationEndCallback {
};

// Class Phoenix.ablAnimEventTaskScratchPad
// Size: 0x40 (Inherited: 0x28)
struct UablAnimEventTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.ablAnimEventTask
// Size: 0x90 (Inherited: 0x70)
struct UablAnimEventTask : UAblAbilityTask {
	enum class EEnemy_AbilityEvent Event; // 0x70(0x01)
	enum class EEnemy_AbilityEvent EndEvent; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float MinIntervalSeconds; // 0x74(0x04)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0x78(0x10)
	bool bMustPassAllConditions; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.AblAnimRateGetter_Flight
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimRateGetter_Flight : UAblAnimRateGetter {
};

// Class Phoenix.AblAnimRateGetter_IdleTurnInPlace
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimRateGetter_IdleTurnInPlace : UAblAnimRateGetter {
};

// Class Phoenix.AblAnimRateGetter_MoveFwdLoop
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimRateGetter_MoveFwdLoop : UAblAnimRateGetter {
};

// Class Phoenix.AblAnimRateGetter_OpenDoor
// Size: 0x30 (Inherited: 0x28)
struct UAblAnimRateGetter_OpenDoor : UAblAnimRateGetter {
	float MinPlayRate; // 0x28(0x04)
	float MaxPlayRate; // 0x2c(0x04)
};

// Class Phoenix.AblAnimRateGetter_Protego
// Size: 0x30 (Inherited: 0x28)
struct UAblAnimRateGetter_Protego : UAblAnimRateGetter {
	int32_t ImpactFrame; // 0x28(0x04)
	float MaxMultiplier; // 0x2c(0x04)
};

// Class Phoenix.AblAnimRateGetter_RagdollBehavior
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimRateGetter_RagdollBehavior : UAblAnimRateGetter {
};

// Class Phoenix.AblAnimRateGetter_SpeedAdjust
// Size: 0x40 (Inherited: 0x28)
struct UAblAnimRateGetter_SpeedAdjust : UAblAnimRateGetter {
	struct FVector2D AngleRange; // 0x28(0x08)
	struct FVector2D AnimRateRange; // 0x30(0x08)
	float StairsJogMultiplier; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblAnimRateGetter_StealthMoveFwdLoop
// Size: 0x30 (Inherited: 0x28)
struct UAblAnimRateGetter_StealthMoveFwdLoop : UAblAnimRateGetter {
	float MinWadingAnimRate; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblAnimRateGetter_Strafe
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimRateGetter_Strafe : UAblAnimRateGetter {
};

// Class Phoenix.AblAnimRateGetter_SyncAnimationPosition
// Size: 0xc0 (Inherited: 0x28)
struct UAblAnimRateGetter_SyncAnimationPosition : UAblAnimRateGetter {
	struct FRuntimeFloatCurve DeltaToPlayRate; // 0x28(0x88)
	float MinimumPlayRate; // 0xb0(0x04)
	float MaximumPlayRate; // 0xb4(0x04)
	struct UAblAbility* RequiredAbility; // 0xb8(0x08)
};

// Class Phoenix.AblAnimRateGetter_WandCast
// Size: 0x30 (Inherited: 0x28)
struct UAblAnimRateGetter_WandCast : UAblAnimRateGetter {
	float FireWandFrame; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablAnimStateTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablAnimStateTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablAnimStateTask
// Size: 0x78 (Inherited: 0x70)
struct UablAnimStateTask : UAblAbilityTask {
	enum class EEnemyAIAnimState State; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblAnimTransitionInOverriderer_Enemy
// Size: 0x28 (Inherited: 0x28)
struct UAblAnimTransitionInOverriderer_Enemy : UAblAnimTransitionInOverriderer {
};

// Class Phoenix.AblAppendToBaseChooser_FlipFlop
// Size: 0x68 (Inherited: 0x28)
struct UAblAppendToBaseChooser_FlipFlop : UAblAnimationTagChooser_AppendToBaseChooser {
	struct FGameplayTagContainer FirstTags; // 0x28(0x20)
	struct FGameplayTagContainer SecondTags; // 0x48(0x20)
};

// Class Phoenix.AblAppendToBaseChooser_InAir
// Size: 0x30 (Inherited: 0x28)
struct UAblAppendToBaseChooser_InAir : UAblAnimationTagChooser_AppendToBaseChooser {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblAppendToBaseChooser_NpcImpactDirection
// Size: 0x30 (Inherited: 0x28)
struct UAblAppendToBaseChooser_NpcImpactDirection : UAblAnimationTagChooser_AppendToBaseChooser {
	bool bAllowForwardBackwardOnly; // 0x28(0x01)
	bool bAllowLeftRightOnly; // 0x29(0x01)
	bool bInverse; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
};

// Class Phoenix.AblAppendToBaseChooser_NpcReactMunitionCheck
// Size: 0x78 (Inherited: 0x28)
struct UAblAppendToBaseChooser_NpcReactMunitionCheck : UAblAnimationTagChooser_AppendToBaseChooser {
	struct TArray<struct UInteractionArchitectAsset*> MunitionAssetsToFind; // 0x28(0x10)
	struct FGameplayTagContainer MunitionTagsToFind; // 0x38(0x20)
	struct FGameplayTagContainer AnimationTagsToAppend; // 0x58(0x20)
};

// Class Phoenix.AblAppendToBaseChooser_NpcReactVelocityDirection
// Size: 0x30 (Inherited: 0x28)
struct UAblAppendToBaseChooser_NpcReactVelocityDirection : UAblAnimationTagChooser_AppendToBaseChooser {
	bool bAllowForwardBackwardOnly; // 0x28(0x01)
	bool bAllowLeftRightOnly; // 0x29(0x01)
	bool bInverse; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
};

// Class Phoenix.AblAppendToBaseChooser_PoseMatching
// Size: 0x38 (Inherited: 0x28)
struct UAblAppendToBaseChooser_PoseMatching : UAblAnimationTagChooser_AppendToBaseChooser {
	struct TArray<struct FGameplayTagContainer> AnimationArchitectTags; // 0x28(0x10)
};

// Class Phoenix.AblAppendToBaseChooser_TrollSwing
// Size: 0x58 (Inherited: 0x28)
struct UAblAppendToBaseChooser_TrollSwing : UAblAnimationTagChooser_AppendToBaseChooser {
	struct FGameplayTag ForehandTag; // 0x28(0x08)
	struct FGameplayTag BackhandTag; // 0x30(0x08)
	struct FGameplayTag SplitTag; // 0x38(0x08)
	struct FGameplayTag FromRunTag; // 0x40(0x08)
	struct FGameplayTag StepBackTag; // 0x48(0x08)
	float StepBackDistance; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.AblAppendToBaseChooser_WeaponState
// Size: 0x28 (Inherited: 0x28)
struct UAblAppendToBaseChooser_WeaponState : UAblAnimationTagChooser_AppendToBaseChooser {
};

// Class Phoenix.AblTransformMultiChildScratchpad
// Size: 0xb0 (Inherited: 0x28)
struct UAblTransformMultiChildScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
	char pad_38[0x78]; // 0x38(0x78)
};

// Class Phoenix.AblApplyTransformMultiChildTask
// Size: 0x100 (Inherited: 0x70)
struct UAblApplyTransformMultiChildTask : UAblAbilityTask {
	struct FName AttachPointName; // 0x70(0x08)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x78(0x10)
	struct TArray<struct FAblTransformMultiChildTask> ChildTasks; // 0x88(0x10)
	struct FAlphaBlend BlendIn; // 0x98(0x30)
	bool RestoreValueOnEnd; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FAlphaBlend BlendOut; // 0xd0(0x30)
};

// Class Phoenix.ablAttackCollisionTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablAttackCollisionTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablAttackCollisionTask
// Size: 0x78 (Inherited: 0x70)
struct UablAttackCollisionTask : UAblAbilityTask {
	enum class AttackCollisionType CollisionType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablAttackHitboxTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablAttackHitboxTaskScratchPad : UAblAbilityTaskScratchPad {
	struct AMunitionType_Hitbox* MunitionInstance; // 0x28(0x08)
};

// Class Phoenix.ablAttackHitboxTask
// Size: 0xd8 (Inherited: 0x70)
struct UablAttackHitboxTask : UAblAbilityTask {
	struct AMunitionType_Hitbox* MunitionType; // 0x70(0x08)
	struct FName MunitionImpactType; // 0x78(0x08)
	struct FGameplayTagContainer MunitionTagContainer; // 0x80(0x20)
	struct UInteractionArchitectAsset* MunitionDataAsset; // 0xa0(0x08)
	struct FAblAbilityTargetTypeLocation HitboxLocation; // 0xa8(0x28)
	bool bAttachToSocket; // 0xd0(0x01)
	bool bNotifyParrySystem; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
};

// Class Phoenix.AblBallisticBounceBackTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UAblBallisticBounceBackTaskScratchPad : UAblAbilityTaskScratchPad {
	struct FVector VectorAwayFromAttacked; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBallisticBounceBackTask
// Size: 0x80 (Inherited: 0x70)
struct UAblBallisticBounceBackTask : UAblAbilityTask {
	float Speed; // 0x70(0x04)
	float Gravity; // 0x74(0x04)
	bool ChooseRandomDirection; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float MaxAngle; // 0x7c(0x04)
};

// Class Phoenix.AblBallisticFromReactionVelocityTask
// Size: 0x70 (Inherited: 0x70)
struct UAblBallisticFromReactionVelocityTask : UAblAbilityTask {
};

// Class Phoenix.AblBallisticTask
// Size: 0xa8 (Inherited: 0x70)
struct UAblBallisticTask : UAblAbilityTask {
	enum class EBallisticTaskDestinationSource DestSource; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FVector Destination; // 0x74(0x0c)
	float OverrideGravity; // 0x80(0x04)
	float ArcParamMin; // 0x84(0x04)
	float ArcParamMax; // 0x88(0x04)
	float TimeMult; // 0x8c(0x04)
	struct FVector TargetOffset; // 0x90(0x0c)
	float Distance; // 0x9c(0x04)
	float MaxDistance; // 0xa0(0x04)
	bool bIgnoreNonStatic; // 0xa4(0x01)
	bool bCollateralDamage; // 0xa5(0x01)
	char pad_A6[0x2]; // 0xa6(0x02)
};

// Class Phoenix.AblBallisticToTargetTask
// Size: 0xa8 (Inherited: 0x70)
struct UAblBallisticToTargetTask : UAblAbilityTask {
	float Speed; // 0x70(0x04)
	float OverrideGravity; // 0x74(0x04)
	float ArcParam; // 0x78(0x04)
	float TimeMult; // 0x7c(0x04)
	struct FVector TargetOffset; // 0x80(0x0c)
	float MaxDistance; // 0x8c(0x04)
	bool bBounce; // 0x90(0x01)
	bool bIgnoreNonStatic; // 0x91(0x01)
	bool bCollateralDamage; // 0x92(0x01)
	char pad_93[0x1]; // 0x93(0x01)
	float fRandomAngleDeviationMin; // 0x94(0x04)
	float fRandomAngleDeviationMax; // 0x98(0x04)
	float fRandomDistanceDeviationMin; // 0x9c(0x04)
	float fRandomDistanceDeviationMax; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_AimWand
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_AimWand : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_AttackAnticipation
// Size: 0x38 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_AttackAnticipation : UAblBlendSpaceParameterGetter {
	float DeadZoneAngle; // 0x28(0x04)
	float ClampDesiredAngle; // 0x2c(0x04)
	float ToExtremesSpeed; // 0x30(0x04)
	float ToZeroSpeed; // 0x34(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_BodyLean
// Size: 0x58 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_BodyLean : UAblBlendSpaceParameterGetter {
	struct FVector2D SpeedRange; // 0x28(0x08)
	struct FVector2D BlendSpaceMaxRange; // 0x30(0x08)
	struct FVector2D InterpSpeedRange; // 0x38(0x08)
	bool bUseSpringInterp; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float SpringHalflife; // 0x44(0x04)
	char pad_48[0x10]; // 0x48(0x10)

	void OnTeleport(struct AAmbulatory_Character* Character, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.AblBlendSpaceParameterGetter_BodyLean.OnTeleport // (Final|Native|Protected|HasDefaults) // @ game+0x3194d20
};

// Class Phoenix.AblBlendSpaceParameterGetter_BodyLean2D
// Size: 0x50 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_BodyLean2D : UAblBlendSpaceParameterGetter {
	float MinMaxForwardAcceleration; // 0x28(0x04)
	float MinMaxSideAcceleration; // 0x2c(0x04)
	float InterpAlphaX; // 0x30(0x04)
	float InterpAlphaY; // 0x34(0x04)
	char pad_38[0x18]; // 0x38(0x18)
};

// Class Phoenix.AblBlendSpaceParameterGetter_CastAnticipationPose
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_CastAnticipationPose : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_CenterOfMass
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_CenterOfMass : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_CombatLean
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_CombatLean : UAblBlendSpaceParameterGetter {
	float MinValue; // 0x28(0x04)
	float MaxValue; // 0x2c(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMove
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMove : UAblSpeedCompensateBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMovePivot
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMovePivot : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMoveSlopeLoop
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMoveSlopeLoop : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMoveStart
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMoveStart : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMoveStop
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMoveStop : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyMoveTurn
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyMoveTurn : UAblSpeedCompensateBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyProtego
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyProtego : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyShuffle
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyShuffle : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyTurnInPlace
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyTurnInPlace : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyTurnToPlayer
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyTurnToPlayer : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_EnemyTurnToTarget
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_EnemyTurnToTarget : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Fall
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Fall : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_FlyingBroom
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_FlyingBroom : UAblBlendSpaceParameterGetter {
	bool bUseUpAndDown; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.AblBlendSpaceParameterGetter_Hitch
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Hitch : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Jump
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Jump : UAblBlendSpaceParameterGetter {
	float ClampDesiredAngle; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_JumpLand2Move
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_JumpLand2Move : UAblBlendSpaceParameterGetter {
	float ClampDesiredAngle; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_Loot
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Loot : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_LumosHold
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_LumosHold : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MountRiderHeadTurn
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MountRiderHeadTurn : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Move
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Move : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveFlinchLoop
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveFlinchLoop : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveFwdLoop
// Size: 0x38 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveFwdLoop : UAblBlendSpaceParameterGetter {
	float InterpSpeed; // 0x28(0x04)
	float WadingInterpSpeed; // 0x2c(0x04)
	enum class ECustomInterpType InterpType; // 0x30(0x01)
	bool bBlendInputOnTransitionOut; // 0x31(0x01)
	bool bUseVelocity; // 0x32(0x01)
	char pad_33[0x5]; // 0x33(0x05)
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveStart
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveStart : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveStop
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveStop : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_MoveStrafe
// Size: 0x38 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_MoveStrafe : UAblBlendSpaceParameterGetter {
	float MagnitudeInterpSpeed; // 0x28(0x04)
	float AngleInterpSpeed; // 0x2c(0x04)
	bool bBlendInputOnTransitionOut; // 0x30(0x01)
	bool bUseVelocity; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.AblBlendSpaceParameterGetter_NPCFollowSpline
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_NPCFollowSpline : UAblSpeedCompensateBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_NpcHitch
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_NpcHitch : UAblBlendSpaceParameterGetter {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblBlendSpaceParameterGetter_ProceduralLocomotion
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_ProceduralLocomotion : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_RailTravelStatue
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_RailTravelStatue : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Rotation
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Rotation : UAblBlendSpaceParameterGetter {
	bool bUseAttachParent; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.AblBlendSpaceParameterGetter_SEMove
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_SEMove : UAblSpeedCompensateBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Slide
// Size: 0x50 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Slide : UAblBlendSpaceParameterGetter {
	float NonStickMax; // 0x28(0x04)
	float DeadZone; // 0x2c(0x04)
	enum class ECustomInterpType XInterpType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float XInterpSpeed; // 0x34(0x04)
	enum class ECustomInterpType XFastInterpType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float XFastInterpSpeed; // 0x3c(0x04)
	enum class ECustomInterpType YInterpType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float YInterpSpeed; // 0x44(0x04)
	bool bSlipAndFall; // 0x48(0x01)
	bool bReverseDirection; // 0x49(0x01)
	bool bGetBlendParamsFromLast; // 0x4a(0x01)
	char pad_4B[0x5]; // 0x4b(0x05)
};

// Class Phoenix.AblBlendSpaceParameterGetter_Speed
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Speed : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_Sprint
// Size: 0x50 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Sprint : UAblBlendSpaceParameterGetter {
	float MaxAngle; // 0x28(0x04)
	float AngleRatioNearZeroTolerance; // 0x2c(0x04)
	float XInterpInSpeed; // 0x30(0x04)
	enum class ECustomInterpType XInterpInType; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float XInterpOutSpeed; // 0x38(0x04)
	enum class ECustomInterpType XInterpOutType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float MinSlope; // 0x40(0x04)
	float MaxSlope; // 0x44(0x04)
	bool bBlendInputOnTransitionOut; // 0x48(0x01)
	bool bUseVelocity; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
};

// Class Phoenix.AblBlendSpaceParameterGetter_StairsAndSlopes
// Size: 0x38 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_StairsAndSlopes : UAblBlendSpaceParameterGetter {
	enum class EStairsDirectionState StairsDirection; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float MinSlope; // 0x2c(0x04)
	float MaxSlope; // 0x30(0x04)
	bool bBlendInputOnTransitionOut; // 0x34(0x01)
	bool bUseVelocity; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Phoenix.AblBlendSpaceParameterGetter_Strafe
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_Strafe : UAblBlendSpaceParameterGetter {
	float SpeedInterpSpeed; // 0x28(0x04)
	float AngleInterpSpeed; // 0x2c(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_StrafeMoveStart
// Size: 0x38 (Inherited: 0x38)
struct UAblBlendSpaceParameterGetter_StrafeMoveStart : UAblBlendSpaceParameterGetter_MoveStrafe {
};

// Class Phoenix.AblBlendSpaceParameterGetter_StrafeMoveStop
// Size: 0x48 (Inherited: 0x38)
struct UAblBlendSpaceParameterGetter_StrafeMoveStop : UAblBlendSpaceParameterGetter_MoveStrafe {
	bool bUseWorldSpeedTracker; // 0x38(0x01)
	bool bOverrideWalkSpeed; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float WalkSpeedOverride; // 0x3c(0x04)
	bool bOverrideJogSpeed; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float JogSpeedOverride; // 0x44(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_StrafePivot
// Size: 0x38 (Inherited: 0x38)
struct UAblBlendSpaceParameterGetter_StrafePivot : UAblBlendSpaceParameterGetter_MoveStrafe {
};

// Class Phoenix.AblBlendSpaceParameterGetter_StrafeUpperBody
// Size: 0x40 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_StrafeUpperBody : UAblBlendSpaceParameterGetter {
	struct FName HipBoneName; // 0x28(0x08)
	struct FVector HipForwardLocal; // 0x30(0x0c)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblBlendSpaceParameterGetter_StrafeUpperBodyTurn
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_StrafeUpperBodyTurn : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_SwimMove1D
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_SwimMove1D : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendSpaceParameterGetter_VelocityZ
// Size: 0x28 (Inherited: 0x28)
struct UAblBlendSpaceParameterGetter_VelocityZ : UAblBlendSpaceParameterGetter {
};

// Class Phoenix.AblBlendWeightMultiplierGetter_FallBlend
// Size: 0x30 (Inherited: 0x28)
struct UAblBlendWeightMultiplierGetter_FallBlend : UAblBlendWeightMultiplierGetter {
	float BlendSpeed; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblBranchActorTagCondition
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchActorTagCondition : UAblBranchCondition {
	struct FName TagName; // 0x30(0x08)
};

// Class Phoenix.AblBranchAllowSprintOnStairsCondition
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchAllowSprintOnStairsCondition : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionAnimMechanic
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionAnimMechanic : UAblBranchCondition {
	enum class EAnimMechanicType AnimMechanicType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionAnimSpeed
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionAnimSpeed : UAblBranchCondition {
	enum class EAnimSpeedType AnimSpeedType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionBasicMobilityMode
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionBasicMobilityMode : UAblBranchCondition {
	enum class EBasicMobilityMode BasicMobilityMode; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchBlackboardBoolCondition
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchBlackboardBoolCondition : UAblBranchCondition {
	struct FName BlackboardKeyName; // 0x30(0x08)
};

// Class Phoenix.AblBranchConditionBroomIdleBreak
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionBroomIdleBreak : UAblBranchCondition {
};

// Class Phoenix.AblBranchClimbingLadderStateCondition
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchClimbingLadderStateCondition : UAblBranchCondition {
	struct TArray<enum class EClimbingLadderState> LadderStates; // 0x30(0x10)
};

// Class Phoenix.AblBranchConditionCognitionTarget
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionCognitionTarget : UAblBranchCondition {
	struct UAISense_Cognition* CognitionSense; // 0x30(0x08)
	struct AActor* MatchActorType; // 0x38(0x08)
};

// Class Phoenix.ablBranchCondition_Broom
// Size: 0x38 (Inherited: 0x30)
struct UablBranchCondition_Broom : UAblBranchCondition {
	enum class EFlyingBroomState FlyingBroomCheckState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.ablBranchCondition_BroomCollide
// Size: 0x38 (Inherited: 0x30)
struct UablBranchCondition_BroomCollide : UAblBranchCondition {
	enum class EFlyingBroomHitObjectType FlyingBroomCheckHitObject; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.ablBranchCondition_CautionMode
// Size: 0x30 (Inherited: 0x30)
struct UablBranchCondition_CautionMode : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionEnemyAbilitySupported
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionEnemyAbilitySupported : UAblBranchCondition {
	enum class EEnemy_Ability Ability; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionEnemyCase
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionEnemyCase : UAblBranchCondition {
	enum class EAbilityTaskScratchPadCondition Condition; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float fMinTime; // 0x34(0x04)
	float fMaxTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblBranchConditionEnemyGroundDetection
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionEnemyGroundDetection : UAblBranchCondition {
	float OnGroundDistance; // 0x30(0x04)
	bool bIncludeCharacterHeightBounds; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.AblBranchConditionEnemyInSight
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionEnemyInSight : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionEnemyMoveEnd
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionEnemyMoveEnd : UAblBranchCondition {
	enum class EEnemyMoveEndType MoveType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float SlideLinkEndXYTolerance; // 0x34(0x04)
	float SlideLinkEndZTolerance; // 0x38(0x04)
	bool bSlideCheckSurfaceType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Phoenix.AblBranchConditionEnemyMoveHit
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionEnemyMoveHit : UAblBranchCondition {
	bool bOnlyTriggerOnGroundMatch; // 0x30(0x01)
	bool bOnGroundRequirement; // 0x31(0x01)
	bool bOnAirRequirement; // 0x32(0x01)
	bool bIgnoreHitAfterDeath; // 0x33(0x01)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionEnemyPhysics
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionEnemyPhysics : UAblBranchCondition {
	bool bOnPhysicsMovementStop; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionEnemyReachTarget
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionEnemyReachTarget : UAblBranchCondition {
	bool bOnlyTriggerOnGroundMatch; // 0x30(0x01)
	bool bOnGroundRequirement; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.AblBranchConditionEnemyStateDone
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionEnemyStateDone : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionVelocity
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionVelocity : UAblBranchCondition {
	bool bMinSpeed; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float MinSpeed; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionGameplayTag
// Size: 0x50 (Inherited: 0x28)
struct UAblBranchConditionGameplayTag : UAblTaskCondition {
	struct FGameplayTagContainer TagContainer; // 0x28(0x20)
	bool bInverse; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.AblAmbulatoryGroundDetectionScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblAmbulatoryGroundDetectionScratchpad : UAblTaskConditionScratchpad {
	struct UAmbulatory_MovementComponent* MovementComp; // 0x30(0x08)
};

// Class Phoenix.AblAmbulatoryGroundDetection
// Size: 0x30 (Inherited: 0x28)
struct UAblAmbulatoryGroundDetection : UAblTaskCondition {
	float OnGroundDistance; // 0x28(0x04)
	bool bGroundMustBeWalkable; // 0x2c(0x01)
	bool bGroundMustNotBePawn; // 0x2d(0x01)
	bool bInverse; // 0x2e(0x01)
	char pad_2F[0x1]; // 0x2f(0x01)
};

// Class Phoenix.AblBranchConditionMovementModeScratchpad
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionMovementModeScratchpad : UAblTaskConditionScratchpad {
	struct UCharacterMovementComponent* MovementComp; // 0x30(0x08)
	float TimeInMode; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblBranchConditionMovementMode
// Size: 0x30 (Inherited: 0x28)
struct UAblBranchConditionMovementMode : UAblTaskCondition {
	enum class EMovementMode MovementMode; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float MinDuration; // 0x2c(0x04)
};

// Class Phoenix.AblNoMovementBranchTaskScratchpad
// Size: 0x60 (Inherited: 0x50)
struct UAblNoMovementBranchTaskScratchpad : UAblBranchTaskScratchPad {
	char pad_50[0x10]; // 0x50(0x10)
};

// Class Phoenix.AblBranchConditionNoMovement
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionNoMovement : UAblBranchCondition {
	float DistanceSquaredTolerance; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionRPGTag
// Size: 0x38 (Inherited: 0x28)
struct UAblBranchConditionRPGTag : UAblTaskCondition {
	struct FGameplayTag RPGTag; // 0x28(0x08)
	bool bInverse; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionTimer
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionTimer : UAblBranchCondition {
	float CountdownTime; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionTimerScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionTimerScratchpad : UAblTaskConditionScratchpad {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Phoenix.AblBranchConditionTimer_New
// Size: 0x30 (Inherited: 0x28)
struct UAblBranchConditionTimer_New : UAblTaskCondition {
	float MinTime; // 0x28(0x04)
	float MaxTime; // 0x2c(0x04)
};

// Class Phoenix.AblBranchConditionVelocityScratchpad
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionVelocityScratchpad : UAblTaskConditionScratchpad {
};

// Class Phoenix.AblBranchConditionVelocity_New
// Size: 0x48 (Inherited: 0x28)
struct UAblBranchConditionVelocity_New : UAblTaskCondition {
	bool bSpeedIsGreaterThan; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float SpeedIsGreaterThan; // 0x2c(0x04)
	bool bSpeedIsLessThan; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float SpeedIsLessThan; // 0x34(0x04)
	bool bZIsGreaterThan; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float ZIsGreaterThan; // 0x3c(0x04)
	bool bZIsLessThan; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float ZIsLessThan; // 0x44(0x04)
};

// Class Phoenix.AblBranchCreatureContinueInteraction
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchCreatureContinueInteraction : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionCreatureIdleBreak
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionCreatureIdleBreak : UAblBranchCondition {
};

// Class Phoenix.ablBranchCreatureIsMountCondition
// Size: 0x30 (Inherited: 0x30)
struct UablBranchCreatureIsMountCondition : UAblBranchCondition {
};

// Class Phoenix.ablBranchConditionMountAnimNotify
// Size: 0x48 (Inherited: 0x40)
struct UablBranchConditionMountAnimNotify : UAblBranchConditionAnimNotify {
	bool bReturnTrueIfMount; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.AblCreatureNavLinkCondition
// Size: 0x38 (Inherited: 0x30)
struct UAblCreatureNavLinkCondition : UAblBranchCondition {
	enum class ECreatureNavLinkType LinkType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchCreaturePathTeleport
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchCreaturePathTeleport : UAblBranchCondition {
};

// Class Phoenix.AblBranchCreatureStance
// Size: 0x48 (Inherited: 0x30)
struct UAblBranchCreatureStance : UAblBranchCondition {
	bool bUseCurrentStance; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<enum class ECreatureStance> CreatureStances; // 0x38(0x10)
};

// Class Phoenix.AblBranchCreatureStoppingModeCondition
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchCreatureStoppingModeCondition : UAblBranchCondition {
	enum class ECreatureStoppingMode StoppingMode; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionDesiredDirectionDelta
// Size: 0x48 (Inherited: 0x30)
struct UAblBranchConditionDesiredDirectionDelta : UAblBranchCondition {
	enum class EDesiredDeltaSourceDirection UseSourceDirection; // 0x30(0x01)
	enum class EDesiredDeltaTargetTracker UseTracker; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float BufferSampleTime; // 0x34(0x04)
	bool bAbsoulteValue; // 0x38(0x01)
	enum class EDesiredDeltaOperator UseOperator; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	struct FVector2D AngleRange; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AblBranchConditionDiscreteSpeedChanged
// Size: 0x58 (Inherited: 0x30)
struct UAblBranchConditionDiscreteSpeedChanged : UAblBranchCondition {
	bool bSpeedsMustMatch; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<enum class EAblGaitSpeed> LastGaitSpeeds; // 0x38(0x10)
	struct TArray<enum class EAblGaitSpeed> NewGaitSpeeds; // 0x48(0x10)
};

// Class Phoenix.AblBranchConditionEdgeState
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionEdgeState : UAblBranchCondition {
	struct TArray<enum class EEdgeState> EdgeStates; // 0x30(0x10)
};

// Class Phoenix.AblBranchConditionFlightGliding
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionFlightGliding : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionFlightIsGliding
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionFlightIsGliding : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionFlying
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionFlying : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionCanFly
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionCanFly : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIsLanding
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsLanding : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionDesiredFlightState
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionDesiredFlightState : UAblBranchCondition {
	enum class ECreatureFlightState DesiredFlightState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionDesiredLandingType
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionDesiredLandingType : UAblBranchCondition {
	struct TArray<enum class ECreatureLandingType> LandingTypes; // 0x30(0x10)
};

// Class Phoenix.AblTaskCondition_IsFlying
// Size: 0x30 (Inherited: 0x28)
struct UAblTaskCondition_IsFlying : UAblTaskCondition {
	bool bNegate; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.AblBranchFromLightDirectional
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchFromLightDirectional : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionFullBodyState
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionFullBodyState : UAblBranchCondition {
	enum class EFullBodyState FullBodyState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionGaitSpeed
// Size: 0x48 (Inherited: 0x30)
struct UAblBranchConditionGaitSpeed : UAblBranchCondition {
	struct TArray<enum class EAblGaitSpeed> GaitSpeeds; // 0x30(0x10)
	enum class ESpeedType SpeedType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float BufferSampleTime; // 0x44(0x04)
};

// Class Phoenix.AblBranchConditionGaitSpeedScratchpad
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionGaitSpeedScratchpad : UAblTaskConditionScratchpad {
};

// Class Phoenix.AblBranchConditionGaitSpeed_New
// Size: 0x40 (Inherited: 0x28)
struct UAblBranchConditionGaitSpeed_New : UAblTaskCondition {
	struct TArray<enum class EAblGaitSpeed> GaitSpeeds; // 0x28(0x10)
	enum class ESpeedType SpeedType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float BufferSampleTime; // 0x3c(0x04)
};

// Class Phoenix.AblBranchConditionGameLogic
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionGameLogic : UAblBranchCondition {
	struct FName_GameLogicBoolResult BoolResultName; // 0x30(0x08)
};

// Class Phoenix.AblBranchConditionGetupFromPhysicalReaction
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionGetupFromPhysicalReaction : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionRecoverInAirFromPhysicalReaction
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionRecoverInAirFromPhysicalReaction : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionRecoverInWaterFromPhysicalReaction
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionRecoverInWaterFromPhysicalReaction : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionWasForcedOutOfRagdoll
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionWasForcedOutOfRagdoll : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIdleTimeElapsed
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionIdleTimeElapsed : UAblBranchCondition {
	float TimeElapsed; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionInCombatMode
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionInCombatMode : UAblBranchCondition {
	bool bCheckDelayedState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionInSocialMode
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionInSocialMode : UAblBranchCondition {
};

// Class Phoenix.AblBranchIsBroomMoving
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchIsBroomMoving : UAblBranchCondition {
	bool bCheckHorizontal; // 0x30(0x01)
	bool bCheckVertical; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.AblBranchConditionIsMovement
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsMovement : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIsSprinting
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsSprinting : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIsTesting
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsTesting : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionJumpHeight
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionJumpHeight : UAblBranchCondition {
	struct FVector2D Range; // 0x30(0x08)
};

// Class Phoenix.AblBranchConditionJumpType
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionJumpType : UAblBranchCondition {
	enum class EJumpingType JumpType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionMobilityType
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionMobilityType : UAblBranchCondition {
	enum class EMobilityActionState MobilityActionState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionMountFlyingSpeed
// Size: 0x48 (Inherited: 0x30)
struct UAblBranchConditionMountFlyingSpeed : UAblBranchCondition {
	struct TArray<enum class EMountFlyingGait> FlyingGaits; // 0x30(0x10)
	enum class ESpeedType SpeedType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float BufferSampleTime; // 0x44(0x04)
};

// Class Phoenix.AblBranchConditionMountIdleBreak
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionMountIdleBreak : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionMountRiderGaitSpeed
// Size: 0x48 (Inherited: 0x48)
struct UAblBranchConditionMountRiderGaitSpeed : UAblBranchConditionGaitSpeed {
};

// Class Phoenix.AblBranchMovementMode
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchMovementMode : UAblBranchCondition {
	struct TArray<enum class EMovementMode> MovementModes; // 0x30(0x10)
};

// Class Phoenix.AblBranchMovementPredictedCollision
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchMovementPredictedCollision : UAblBranchCondition {
	float MaxGlancingAngle; // 0x30(0x04)
	float MaxTimeFromNow; // 0x34(0x04)
};

// Class Phoenix.AblBranchMovementPredictedEvent
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchMovementPredictedEvent : UAblBranchCondition {
	struct FName EventName; // 0x30(0x08)
	float TimeThreshold; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblBranchMovementPredictedEventScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchMovementPredictedEventScratchpad : UAblTaskConditionScratchpad {
	struct UMovementPredictionComponent* MovementPredictionComponent; // 0x30(0x08)
};

// Class Phoenix.AblBranchMovementPredictedEvent_New
// Size: 0x38 (Inherited: 0x28)
struct UAblBranchMovementPredictedEvent_New : UAblTaskCondition {
	struct FName EventName; // 0x28(0x08)
	float TimeThreshold; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionNPCAttackingPlayer
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionNPCAttackingPlayer : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionPhase
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionPhase : UAblBranchCondition {
	struct TArray<struct FVector2D> PhaseRanges; // 0x30(0x10)
};

// Class Phoenix.AblBranchProbability
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchProbability : UAblBranchCondition {
	float Probability; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.RagdollDrivenAnimationChangeBranchTaskScratchPad
// Size: 0x58 (Inherited: 0x50)
struct URagdollDrivenAnimationChangeBranchTaskScratchPad : UAblBranchTaskScratchPad {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.RagdollDrivenAnimationChangeBranchTask
// Size: 0x118 (Inherited: 0x118)
struct URagdollDrivenAnimationChangeBranchTask : UAblBranchTask {
};

// Class Phoenix.AblBranchConditionRagdollDrivenAnimationChange
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionRagdollDrivenAnimationChange : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionRagdollBehaviorFound
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionRagdollBehaviorFound : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionRightArmState
// Size: 0x48 (Inherited: 0x30)
struct UAblBranchConditionRightArmState : UAblBranchCondition {
	struct TArray<enum class ERightArmState> RightArmStates; // 0x30(0x10)
	enum class ERightArmPriority RightArmPriority; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.AblBranchConditionSpeed
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionSpeed : UAblBranchCondition {
	enum class ESpeedType SpeedType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FVector2D SpeedRange; // 0x34(0x08)
	enum class ESpeedInclusivity Inclusivity; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Phoenix.AblBranchConditionStairsAndSlopes
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionStairsAndSlopes : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionStairsAndSlopesDirection
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionStairsAndSlopesDirection : UAblBranchCondition {
	enum class EStairsDirectionState StairsDirection; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionStairsAndSlopesOrientation
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionStairsAndSlopesOrientation : UAblBranchCondition {
	float MinAngle; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionStationState
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionStationState : UAblBranchCondition {
	enum class EStationState StationState; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionSwimFast
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionSwimFast : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionTargetTracker_AnyValidTargets
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionTargetTracker_AnyValidTargets : UAblBranchCondition {
	enum class EUseTargetTracker UseTracker; // 0x30(0x01)
	bool bReturnTrueIfTargetListEmptyThisFrame; // 0x31(0x01)
	enum class ETargetID MatchTargetID; // 0x32(0x01)
	enum class ETargetType MatchTargetType; // 0x33(0x01)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionTier3Pivot
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionTier3Pivot : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionUseStairs
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionUseStairs : UAblBranchCondition {
	float AllowableAngleRange; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblBranchConditionWading
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionWading : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionWaterDepth
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionWaterDepth : UAblBranchCondition {
	float GreaterThanWaterDepth; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.ablBroomDismountBlendOutOffsetsScratchPad
// Size: 0x48 (Inherited: 0x28)
struct UablBroomDismountBlendOutOffsetsScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Phoenix.ablBroomDismountBlendOutOffsetsTask
// Size: 0x70 (Inherited: 0x70)
struct UablBroomDismountBlendOutOffsetsTask : UAblAbilityTask {
};

// Class Phoenix.ablBroomMountKeepAboveGroundScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UablBroomMountKeepAboveGroundScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.ablBroomMountKeepAboveGroundTask
// Size: 0x80 (Inherited: 0x70)
struct UablBroomMountKeepAboveGroundTask : UAblAbilityTask {
	float MinHeightAboveGround; // 0x70(0x04)
	float MaxDeltaV; // 0x74(0x04)
	float VelocityEaseSpeed; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblCabbageMobilityTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UAblCabbageMobilityTaskScratchPad : UAblAbilityTaskScratchPad {
	bool bIsDone; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FVector VectorAwayFromAttacked; // 0x2c(0x0c)
};

// Class Phoenix.ablCabbageMobilityTask
// Size: 0xa0 (Inherited: 0x70)
struct UablCabbageMobilityTask : UAblAbilityTask {
	float Speed; // 0x70(0x04)
	float Gravity; // 0x74(0x04)
	float ArcParam; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct UAkAudioEvent* m_actorBounceSfx; // 0x80(0x08)
	enum class ECabbage_Mobility MobilityState; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float JumpBoost; // 0x8c(0x04)
	float MinBounceBack; // 0x90(0x04)
	float MaxBounceBack; // 0x94(0x04)
	float Deceleration; // 0x98(0x04)
	float LandingSpeed; // 0x9c(0x04)
};

// Class Phoenix.AblCameraStackAnimationTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblCameraStackAnimationTaskScratchPad : UAblAbilityTaskScratchPad {
	struct UAnimSequence* ChosenAnimSequence; // 0x28(0x08)
};

// Class Phoenix.AblCameraStackAnimationTask
// Size: 0x1f0 (Inherited: 0x70)
struct UAblCameraStackAnimationTask : UAblAbilityTask {
	struct TArray<struct UAnimSequence*> AnimSequences; // 0x70(0x10)
	enum class ECameraStackAnimationSelection SelectionMethod; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float BlendInDuration; // 0x84(0x04)
	float BlendOutDuration; // 0x88(0x04)
	float CrossBlendTimeOverlap; // 0x8c(0x04)
	bool bLazyBlendOut; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float RetargetingHeightOffset; // 0x94(0x04)
	char pad_98[0x8]; // 0x98(0x08)
	struct FCameraStackAnimData AnimData; // 0xa0(0x150)
};

// Class Phoenix.AblCameraStackContextTask
// Size: 0x80 (Inherited: 0x70)
struct UAblCameraStackContextTask : UAblAbilityTask {
	enum class EAblCameraStackContextOperation TaskStartOperation; // 0x70(0x01)
	enum class EAblCameraStackContextOperation TaskEndOperation; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FName ContextName; // 0x74(0x08)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblCapsulePhysicsScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblCapsulePhysicsScratchPad : UAblAbilityTaskScratchPad {
	bool bInitLockXRotation; // 0x28(0x01)
	bool bInitLockYRotation; // 0x29(0x01)
	bool bInitLockZRotation; // 0x2a(0x01)
	char pad_2B[0x1]; // 0x2b(0x01)
	float LinearDampening; // 0x2c(0x04)
};

// Class Phoenix.AblCapsulePhysicsTask
// Size: 0x80 (Inherited: 0x70)
struct UAblCapsulePhysicsTask : UAblAbilityTask {
	bool bEnablePhysicsAtStart; // 0x70(0x01)
	bool bEnableGravityAtStart; // 0x71(0x01)
	bool bEnablePhysicsAtEnd; // 0x72(0x01)
	bool bEnableGravityAtEnd; // 0x73(0x01)
	bool bLockXRotation; // 0x74(0x01)
	bool bLockYRotation; // 0x75(0x01)
	bool bLockZRotation; // 0x76(0x01)
	char pad_77[0x1]; // 0x77(0x01)
	float LinearDampening; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.ablCastSpellTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablCastSpellTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablCastSpellTask
// Size: 0x78 (Inherited: 0x70)
struct UablCastSpellTask : UAblAbilityTask {
	struct FName Socket; // 0x70(0x08)
};

// Class Phoenix.AblCentaurSpawnMunitionTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblCentaurSpawnMunitionTaskScratchPad : UAblAbilityTaskScratchPad {
	struct AActor* EquipArrowActor; // 0x28(0x08)
};

// Class Phoenix.ablCentaurSpawnMunitionTask
// Size: 0x98 (Inherited: 0x70)
struct UablCentaurSpawnMunitionTask : UAblAbilityTask {
	struct AActor* EquipArrowClass; // 0x70(0x08)
	struct AMunitionType_Base* MunitionClass; // 0x78(0x08)
	struct FName ArrowSocketName; // 0x80(0x08)
	float MunitionSocketOffsetX; // 0x88(0x04)
	struct FName BlackboardTargetActorKeyName; // 0x8c(0x08)
	bool bTrackTargetLocation; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
};

// Class Phoenix.AblChangeCollisionCapsuleDimensionsScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblChangeCollisionCapsuleDimensionsScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblChangeCollisionCapsuleDimensions
// Size: 0x78 (Inherited: 0x70)
struct UAblChangeCollisionCapsuleDimensions : UAblAbilityTask {
	float CollisionCapsuleHalfHeight; // 0x70(0x04)
	float CollisionCapsuleRadius; // 0x74(0x04)
};

// Class Phoenix.AblCheckJumpLandTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblCheckJumpLandTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblCheckJumpLandTask
// Size: 0x78 (Inherited: 0x70)
struct UAblCheckJumpLandTask : UAblAbilityTask {
	bool bIsPerformTask; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablClothTask
// Size: 0x78 (Inherited: 0x70)
struct UablClothTask : UAblAbilityTask {
	bool bEnableClothSimulation; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablClothOptionsScratchpad
// Size: 0xc8 (Inherited: 0x28)
struct UablClothOptionsScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0xa0]; // 0x28(0xa0)
};

// Class Phoenix.ablClothOptionsTask
// Size: 0x190 (Inherited: 0x70)
struct UablClothOptionsTask : UAblAbilityTask {
	bool bPiecesListIsInclusive; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct TArray<struct FCharacterPieceType> PiecesList; // 0x78(0x10)
	struct TSet<struct FClothingAssetName> ClothingAssetList; // 0x88(0x50)
	struct UIntProvider* IterationCount; // 0xd8(0x08)
	struct UIntProvider* MaxIterationCount; // 0xe0(0x08)
	struct UIntProvider* SubdivisionCount; // 0xe8(0x08)
	struct UFloatProvider* TeleportDistanceThreshold; // 0xf0(0x08)
	struct UFloatProvider* TeleportRotationThreshold; // 0xf8(0x08)
	struct UFloatProvider* ClothBlendWeight; // 0x100(0x08)
	struct UFloatProvider* ClothMaxDistanceScale; // 0x108(0x08)
	struct UFloatProvider* EdgeStiffness; // 0x110(0x08)
	struct UFloatProvider* BendingStiffness; // 0x118(0x08)
	struct UFloatProvider* AreaStiffness; // 0x120(0x08)
	struct UVector2DProvider* TetherStiffness; // 0x128(0x08)
	struct UFloatProvider* DampingCoefficient; // 0x130(0x08)
	struct UFloatProvider* DragCoefficient; // 0x138(0x08)
	struct UFloatProvider* LiftCoefficient; // 0x140(0x08)
	struct UVectorProvider* AdditionalWindVelocity; // 0x148(0x08)
	struct UFloatProvider* GravityScale; // 0x150(0x08)
	struct UVectorProvider* GravityOverride; // 0x158(0x08)
	struct UVector2DProvider* AnimDriveStiffness; // 0x160(0x08)
	struct UVector2DProvider* AnimDriveDamping; // 0x168(0x08)
	struct UFloatProvider* WindVelocityScale; // 0x170(0x08)
	struct UFloatProvider* LinearVelocityScale; // 0x178(0x08)
	struct UFloatProvider* AngularVelocityScale; // 0x180(0x08)
	struct UFloatProvider* FictitiousAngularScale; // 0x188(0x08)
};

// Class Phoenix.ablClothResetTask
// Size: 0x78 (Inherited: 0x70)
struct UablClothResetTask : UAblAbilityTask {
	enum class UablResetReset_ClothingTeleportMode ClothTeleportMode; // 0x70(0x01)
	bool bExecuteOnStart; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.AblCollisionBranchConditionScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblCollisionBranchConditionScratchpad : UAblTaskConditionScratchpad {
	char pad_30[0x8]; // 0x30(0x08)

	void HandleActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.AblCollisionBranchConditionScratchpad.HandleActorHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x31a3670
};

// Class Phoenix.AblCollisionBranchCondition
// Size: 0x50 (Inherited: 0x28)
struct UAblCollisionBranchCondition : UAblTaskCondition {
	enum class EAblCollisionBranchDetectionType DetectionType; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float DotProductLowerBound; // 0x2c(0x04)
	float DotProductUpperBound; // 0x30(0x04)
	float BranchOnImminentCollisionLength; // 0x34(0x04)
	float MinSpeed; // 0x38(0x04)
	bool bCheckForInheritance; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	struct TArray<struct AActor*> OtherActorMustBeA; // 0x40(0x10)
};

// Class Phoenix.AblComboAbility
// Size: 0xd0 (Inherited: 0xc8)
struct UAblComboAbility : UAblAbility {
	struct USpellToolRecord* ComboSpellToolRecord; // 0xc8(0x08)
};

// Class Phoenix.ablMotionAdjustTask
// Size: 0xd0 (Inherited: 0x70)
struct UablMotionAdjustTask : UAblAbilityTask {
	struct UablMotionAdjustTargetLocationGetter* TargetLocationGetter; // 0x70(0x08)
	bool bTrackTarget; // 0x78(0x01)
	bool bUseRootMotionForPrediction; // 0x79(0x01)
	bool bIgnoreMeshScale; // 0x7a(0x01)
	char pad_7B[0x1]; // 0x7b(0x01)
	float InterceptTime; // 0x7c(0x04)
	struct FVector InterceptOffset; // 0x80(0x0c)
	bool bLimitMaxImpulse; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	float MaxImpulse; // 0x90(0x04)
	enum class EAlphaBlendOption AdjustCurve; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	struct FAlphaBlend BlendIn; // 0x98(0x30)
	bool bCanAdjustZAxis; // 0xc8(0x01)
	bool bGuaranteeOnTargetAtTaskEnd; // 0xc9(0x01)
	enum class EMovementMode TaskEndMovementMode; // 0xca(0x01)
	bool bDebugDrawEnabled; // 0xcb(0x01)
	bool bDebugDrawTranslationCorrection; // 0xcc(0x01)
	bool bDebugDrawTarget; // 0xcd(0x01)
	bool bDebugDrawRootMotion; // 0xce(0x01)
	bool bDebugDrawTransform; // 0xcf(0x01)
};

// Class Phoenix.ablCreatureAttackMotionAdjustTask
// Size: 0xd8 (Inherited: 0xd0)
struct UablCreatureAttackMotionAdjustTask : UablMotionAdjustTask {
	struct UCreatureCombatAttackData* AttackData; // 0xd0(0x08)
};

// Class Phoenix.ablTurnAdjustTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UablTurnAdjustTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.ablCreatureAttackTurnAdjustTaskScratchPad
// Size: 0x58 (Inherited: 0x38)
struct UablCreatureAttackTurnAdjustTaskScratchPad : UablTurnAdjustTaskScratchPad {
	char pad_38[0x20]; // 0x38(0x20)
};

// Class Phoenix.ablTurnAdjustTask
// Size: 0xc0 (Inherited: 0x70)
struct UablTurnAdjustTask : UAblAbilityTask {
	float m_MaxAdjustAngle; // 0x70(0x04)
	bool m_TrackTarget; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	struct FAlphaBlend m_Blend; // 0x78(0x30)
	struct UTurnAdjust_TargetDirectionGetter* m_TargetDirectionGetter; // 0xa8(0x08)
	float m_YawOffset; // 0xb0(0x04)
	bool m_bOverrideRootMotionLookAheadTime; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	float m_RootMotionLookAheadTime; // 0xb8(0x04)
	bool m_bUseTaskEndTime; // 0xbc(0x01)
	bool bGuaranteeOnTargetAtTaskEnd; // 0xbd(0x01)
	bool m_bDebugDraw; // 0xbe(0x01)
	char pad_BF[0x1]; // 0xbf(0x01)
};

// Class Phoenix.ablCreatureAttackTurnAdjustTask
// Size: 0xc8 (Inherited: 0xc0)
struct UablCreatureAttackTurnAdjustTask : UablTurnAdjustTask {
	struct UCreatureCombatAttackData* AttackData; // 0xc0(0x08)
};

// Class Phoenix.AblCreatureCurrentAnimStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblCreatureCurrentAnimStateTask : UAblAbilityTask {
	enum class ECreatureStance CurrentStance; // 0x70(0x01)
	enum class ECreatureStance NextStance; // 0x71(0x01)
	enum class ECreatureMovementSpeed CurrentGait; // 0x72(0x01)
	enum class ECreatureMovementSpeed NextGait; // 0x73(0x01)
	bool bInIdleVariation; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// Class Phoenix.AblCreatureMakeNoiseTask
// Size: 0x80 (Inherited: 0x70)
struct UAblCreatureMakeNoiseTask : UAblAbilityTask {
	struct FName NoiseEventTag; // 0x70(0x08)
	float Loudness; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblCreatureMoveToDesiredDirectionOverrideTask
// Size: 0x78 (Inherited: 0x70)
struct UAblCreatureMoveToDesiredDirectionOverrideTask : UAblAbilityTask {
	struct FName TargetActorOrLocationKeyName; // 0x70(0x08)
};

// Class Phoenix.AblCreatureNavLinkTeleportTask
// Size: 0x70 (Inherited: 0x70)
struct UAblCreatureNavLinkTeleportTask : UAblAbilityTask {
};

// Class Phoenix.AblCreaturePathTeleportTask
// Size: 0x70 (Inherited: 0x70)
struct UAblCreaturePathTeleportTask : UAblAbilityTask {
};

// Class Phoenix.AblCreatureSetupPathTeleportTask
// Size: 0x78 (Inherited: 0x70)
struct UAblCreatureSetupPathTeleportTask : UAblAbilityTask {
	float TeleportChanceOnStart; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.ablDeathRespawnTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablDeathRespawnTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablDeathRespawnTask
// Size: 0x70 (Inherited: 0x70)
struct UablDeathRespawnTask : UAblAbilityTask {
};

// Class Phoenix.AblDisableAutoTargetingTask
// Size: 0x70 (Inherited: 0x70)
struct UAblDisableAutoTargetingTask : UAblAbilityTask {
};

// Class Phoenix.AblDisableCognitionSenseTask
// Size: 0x88 (Inherited: 0x70)
struct UAblDisableCognitionSenseTask : UAblAbilityTask {
	struct TArray<struct UAISense*> SensesToDisable; // 0x70(0x10)
	bool bForce; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Phoenix.ablDragonMobilityTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablDragonMobilityTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablDragonMobilityTask
// Size: 0x80 (Inherited: 0x70)
struct UablDragonMobilityTask : UAblAbilityTask {
	enum class EablEnemy_DragonMobilityType MobilityType; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float DistFromTarget; // 0x74(0x04)
	float HeightAboveTarget; // 0x78(0x04)
	float MoveSpeed; // 0x7c(0x04)
};

// Class Phoenix.AblDugbogLungeAttackTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UAblDugbogLungeAttackTaskScratchPad : UAblAbilityTaskScratchPad {
	bool bIsDone; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FVector AwayVector; // 0x2c(0x0c)
};

// Class Phoenix.ablDugbogLungeAttackTask
// Size: 0xa0 (Inherited: 0x70)
struct UablDugbogLungeAttackTask : UAblAbilityTask {
	float MaxSpeed; // 0x70(0x04)
	bool useOffset; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float ArcParam; // 0x78(0x04)
	float Gravity; // 0x7c(0x04)
	float SlamGravity; // 0x80(0x04)
	struct FVector TargetOffset; // 0x84(0x0c)
	float MaxHeightDelta; // 0x90(0x04)
	float MaxDistance; // 0x94(0x04)
	bool continueMove; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.ablEnemiesCowerTask
// Size: 0x98 (Inherited: 0x70)
struct UablEnemiesCowerTask : UAblAbilityTask {
	enum class EFacialEmotion FacialEmotion; // 0x70(0x01)
	enum class EManagedFacialEmotionPriority FacialEmotionPriority; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float TransitionTime; // 0x74(0x04)
	struct FGameplayTagContainer AnimTags; // 0x78(0x20)
};

// Class Phoenix.ablEnemy_AUSDecisionTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablEnemy_AUSDecisionTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablEnemy_AUSDecisionTask
// Size: 0x78 (Inherited: 0x70)
struct UablEnemy_AUSDecisionTask : UAblAbilityTask {
	float DecisionBranchChance; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.AblEnemyAnimNotify
// Size: 0x48 (Inherited: 0x40)
struct UAblEnemyAnimNotify : UAblAnimNotify {
	enum class EEnemy_AbilityEvent AbilityEvent; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.AblEnemyAttackTargetSyncPointUpdaterScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblEnemyAttackTargetSyncPointUpdaterScratchpad : UAblAvaMotionWarpSyncPointUpdaterScratchpad {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.AblEnemyAttackTargetSyncPointUpdater
// Size: 0x30 (Inherited: 0x28)
struct UAblEnemyAttackTargetSyncPointUpdater : UAblAvaMotionWarpSyncPointUpdater {
	float DesiredDistanceToTarget; // 0x28(0x04)
	bool bAllowPositiveTravel; // 0x2c(0x01)
	bool bAllowNegativeTravel; // 0x2d(0x01)
	char pad_2E[0x2]; // 0x2e(0x02)
};

// Class Phoenix.AblEnemyChannelingCustomConditional
// Size: 0x48 (Inherited: 0x30)
struct UAblEnemyChannelingCustomConditional : UAblChannelingBase {
	struct UAblAbility* BranchAbility; // 0x30(0x08)
	bool bBreakChannelingNearInstigator; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float NearRange; // 0x3c(0x04)
	struct UAblAbility* BreakBranchAbility; // 0x40(0x08)
};

// Class Phoenix.AblEnemyDamageEventTask
// Size: 0xa0 (Inherited: 0x98)
struct UAblEnemyDamageEventTask : UAblDamageEventTask {
	bool bUseDamageSystem; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.ablEnemyDynamicAbility
// Size: 0xc8 (Inherited: 0xc8)
struct UablEnemyDynamicAbility : UAblAbility {
};

// Class Phoenix.AblEnemyDynamicBranchTaskScratchPad
// Size: 0x60 (Inherited: 0x50)
struct UAblEnemyDynamicBranchTaskScratchPad : UAblBranchTaskScratchPad {
	float ElapsedTime; // 0x50(0x04)
	enum class EEnemy_Ability TaskState; // 0x54(0x01)
	bool BranchCriteriaFromParent; // 0x55(0x01)
	char pad_56[0xa]; // 0x56(0x0a)
};

// Class Phoenix.AblEnemyDynamicBranchTask
// Size: 0x120 (Inherited: 0x118)
struct UAblEnemyDynamicBranchTask : UAblBranchTask {
	enum class EEnemy_Ability AbilityState; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// Class Phoenix.AblEnemyHoverTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblEnemyHoverTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblEnemyHoverTask
// Size: 0x90 (Inherited: 0x70)
struct UAblEnemyHoverTask : UAblAbilityTask {
	enum class EEnemyHoverTaskMode Mode; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float HoverTime; // 0x74(0x04)
	struct UNiagaraSystem* AttackerLocationVFX; // 0x78(0x08)
	struct UNiagaraSystem* TargetLocationVFX; // 0x80(0x08)
	struct UNiagaraSystem* AttackLandVFX; // 0x88(0x08)
};

// Class Phoenix.AblEnemyMaintainVelocityTask
// Size: 0x78 (Inherited: 0x70)
struct UAblEnemyMaintainVelocityTask : UAblAbilityTask {
	float Speed; // 0x70(0x04)
	float Gravity; // 0x74(0x04)
};

// Class Phoenix.AblEnemyMoveTaskScratchPad
// Size: 0xc0 (Inherited: 0x28)
struct UAblEnemyMoveTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
	struct FEnemyMoveTaskEntry MoveData; // 0x30(0x90)
};

// Class Phoenix.AblEnemyMoveTask
// Size: 0xe8 (Inherited: 0x70)
struct UAblEnemyMoveTask : UAblAbilityTask {
	enum class EAblAbilityTargetType m_Target; // 0x70(0x01)
	enum class EAblAbilityEnemyMoveVelocitySource VelocitySource; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FVector CustomVelocity; // 0x74(0x0c)
	float CustomSpeed; // 0x80(0x04)
	float ZDirectionOffset; // 0x84(0x04)
	bool bRestoreMovementMode; // 0x88(0x01)
	bool bApplyGravity; // 0x89(0x01)
	char pad_8A[0x2]; // 0x8a(0x02)
	float GravityMultiplier; // 0x8c(0x04)
	float MaxDownwardVelocityDueToGravity; // 0x90(0x04)
	bool bOverrideJumpArc; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	float OverrideJumpArc; // 0x98(0x04)
	bool bForceApplyingGravityForJumps; // 0x9c(0x01)
	bool bDebugDrawJump; // 0x9d(0x01)
	char pad_9E[0x2]; // 0x9e(0x02)
	float SlideSpeed; // 0xa0(0x04)
	float SlideTargetTolerance; // 0xa4(0x04)
	float ZeroVelocityTolerance; // 0xa8(0x04)
	bool bApplyVelocityTowardsInstigator; // 0xac(0x01)
	char pad_AD[0x3]; // 0xad(0x03)
	float NoMovementOccuredTolerance; // 0xb0(0x04)
	float AcceptanceDistance; // 0xb4(0x04)
	bool bDiminishVelocity; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float TimeToStop; // 0xbc(0x04)
	float DegreeOfEaseOutCurve; // 0xc0(0x04)
	bool bCanVaryTowardsInstigator; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct UCurveFloat* VaryingCurve; // 0xc8(0x08)
	float MinimumDistance; // 0xd0(0x04)
	bool bDiminishVelocityDueToGravity; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	float OnGroundDetectionDistance; // 0xd8(0x04)
	bool bIgnoreAllFloorHits; // 0xdc(0x01)
	bool bSlideAcrossGroundInitially; // 0xdd(0x01)
	bool bSlideAcrossGroundAlways; // 0xde(0x01)
	bool bLockZPosition; // 0xdf(0x01)
	bool bCutOffMovement; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float CutoffDistance; // 0xe4(0x04)
};

// Class Phoenix.ablExecuteTaskSubScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablExecuteTaskSubScratchPad : UObject {
};

// Class Phoenix.ExecuteTask
// Size: 0x28 (Inherited: 0x28)
struct UExecuteTask : UObject {
};

// Class Phoenix.ablExecuteTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablExecuteTaskScratchPad : UAblAbilityTaskScratchPad {
	struct UablExecuteTaskSubScratchPad* SubTaskScratchPad; // 0x28(0x08)
};

// Class Phoenix.ablExecuteTask
// Size: 0x78 (Inherited: 0x70)
struct UablExecuteTask : UAblAbilityTask {
	struct UExecuteTask* ExecuteTask; // 0x70(0x08)
};

// Class Phoenix.ablFacialAnimationScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UablFacialAnimationScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.ablFacialAnimationStateTask
// Size: 0xa8 (Inherited: 0x70)
struct UablFacialAnimationStateTask : UAblAbilityTask {
	struct FFacialAnimation FacialAnimation; // 0x70(0x30)
	enum class EManagedFacialAnimationPriority FacialAnimationPriority; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.ablFacialEmotionScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UablFacialEmotionScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablFacialEmotionStateTask
// Size: 0x98 (Inherited: 0x70)
struct UablFacialEmotionStateTask : UAblAbilityTask {
	enum class EFacialEmotion FacialEmotion; // 0x70(0x01)
	enum class EManagedFacialEmotionPriority FacialEmotionPriority; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float TransitionTime; // 0x74(0x04)
	struct FGameplayTagContainer AnimTags; // 0x78(0x20)
};

// Class Phoenix.AblFlightAnimStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblFlightAnimStateTask : UAblAbilityTask {
	bool bIsGliding; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblFlyToLocationScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblFlyToLocationScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblFlyToLocationTaskBase
// Size: 0x70 (Inherited: 0x70)
struct UAblFlyToLocationTaskBase : UAblAbilityTask {
};

// Class Phoenix.AblGameLogicSwitchBranchTaskScratchPad
// Size: 0x48 (Inherited: 0x28)
struct UAblGameLogicSwitchBranchTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct UGameLogicBoolBase*> BoolResults; // 0x28(0x10)
	struct TArray<struct UAblAbility*> Abilities; // 0x38(0x10)
};

// Class Phoenix.AblGameLogicSwitchBranchTask
// Size: 0x138 (Inherited: 0x70)
struct UAblGameLogicSwitchBranchTask : UAblAbilityTask {
	struct TMap<struct FName_GameLogicBoolResult, struct UAblAbility*> BoolResultToAbility; // 0x70(0x50)
	struct UAblAbility* DefaultAbility; // 0xc0(0x08)
	bool m_CopyTargetsOnBranch; // 0xc8(0x01)
	bool m_bOverrideTransitionBlend; // 0xc9(0x01)
	bool m_bOverrideTransitionBlendOut; // 0xca(0x01)
	char pad_CB[0x5]; // 0xcb(0x05)
	struct FAlphaBlend m_TransitionBlend; // 0xd0(0x30)
	struct FAlphaBlend m_TransitionBlendOut; // 0x100(0x30)
	bool bClampBlendOutTime; // 0x130(0x01)
	enum class EEvaluatorRootMotion m_UseSourceRootMotion; // 0x131(0x01)
	enum class EEvaluatorRootMotion m_UseDestRootMotion; // 0x132(0x01)
	bool m_OverrideRootMotion; // 0x133(0x01)
	bool m_OverrideBlendTickStyle; // 0x134(0x01)
	enum class EAnimBlendTickStyle m_BlendTickStyle; // 0x135(0x01)
	char pad_136[0x2]; // 0x136(0x02)
};

// Class Phoenix.ablGameLogicTask
// Size: 0x80 (Inherited: 0x70)
struct UablGameLogicTask : UAblAbilityTask {
	struct FName_GameLogicVarBool BoolVar; // 0x70(0x08)
	struct FName_GameLogicVarInt32 Int32Var; // 0x78(0x08)
};

// Class Phoenix.AblGameRenderStencil
// Size: 0x80 (Inherited: 0x70)
struct UAblGameRenderStencil : UAblAbilityTask {
	struct FStencilManagerEffectName StencilEffect; // 0x70(0x08)
	bool resetStencilOnExit; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.AblHeadTrackingTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblHeadTrackingTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblHeadTrackingTask
// Size: 0x70 (Inherited: 0x70)
struct UAblHeadTrackingTask : UAblAbilityTask {
};

// Class Phoenix.AblHideAndDisableCharacterScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblHideAndDisableCharacterScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblHideAndDisableCharacterTask
// Size: 0x70 (Inherited: 0x70)
struct UAblHideAndDisableCharacterTask : UAblAbilityTask {
};

// Class Phoenix.ablIKBlendTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablIKBlendTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablIKBlendTask
// Size: 0x80 (Inherited: 0x70)
struct UablIKBlendTask : UAblAbilityTask {
	bool bDisableAllIK; // 0x70(0x01)
	bool bDisableFloorContact; // 0x71(0x01)
	bool bDisableLookAt; // 0x72(0x01)
	bool bDisablePoseFixup; // 0x73(0x01)
	float BlendOutDuration; // 0x74(0x04)
	float BlendInDuration; // 0x78(0x04)
	enum class EAnimationDirectionSource LowestAllowedLookAtPriority; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
};

// Class Phoenix.ablIKLedgeContactTask
// Size: 0x80 (Inherited: 0x70)
struct UablIKLedgeContactTask : UAblAbilityTask {
	float BlendInDuration; // 0x70(0x04)
	float BlendOutDuration; // 0x74(0x04)
	bool bLockHandsToLedge; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.ablIKPoseFixupTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UablIKPoseFixupTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.ablIKPoseFixupTask
// Size: 0x130 (Inherited: 0x70)
struct UablIKPoseFixupTask : UAblAbilityTask {
	struct FIKPoseFixupDefinition Definition; // 0x70(0xc0)
};

// Class Phoenix.ablImpulseToTargetTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablImpulseToTargetTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablImpulseToTargetTask
// Size: 0xa8 (Inherited: 0x70)
struct UablImpulseToTargetTask : UAblAbilityTask {
	float DistFromTarget; // 0x70(0x04)
	float MaxTravelDist; // 0x74(0x04)
	bool bAllowNegative; // 0x78(0x01)
	bool bAllowPositive; // 0x79(0x01)
	bool bStopOnTargetHit; // 0x7a(0x01)
	bool bAddCapsuleRadiusToDistanceFromTarget; // 0x7b(0x01)
	float CapsuleRadiusMultiplier; // 0x7c(0x04)
	bool bAddTargetCapsuleRadiusToDistanceFromTarget; // 0x80(0x01)
	bool bOnlyTowardsAvatar; // 0x81(0x01)
	bool bApplyCurrentHeightAsOffset; // 0x82(0x01)
	bool bApplyCustomOffset; // 0x83(0x01)
	struct FVector CustomOffset; // 0x84(0x0c)
	bool bUseForImpact; // 0x90(0x01)
	bool bTrackTarget; // 0x91(0x01)
	bool bTrackLateral; // 0x92(0x01)
	char pad_93[0x1]; // 0x93(0x01)
	float TrackTargetMinDist; // 0x94(0x04)
	float TrackTargetMaxDist; // 0x98(0x04)
	bool bUseMaxHeadingFromFwd; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float MaxHeadingFromFwd; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.ablInputContextTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablInputContextTaskScratchPad : UAblAbilityTaskScratchPad {
	bool bAllowModifyContexts; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)

	void LeafNodeSwitched(); // Function Phoenix.ablInputContextTaskScratchPad.LeafNodeSwitched // (Final|Native|Public) // @ game+0x31abe60
};

// Class Phoenix.ablInputContextTask
// Size: 0x88 (Inherited: 0x70)
struct UablInputContextTask : UAblAbilityTask {
	struct TArray<struct FInputContextWithType> Contexts; // 0x70(0x10)
	enum class EContextTaskOperationType ContextTaskOperation; // 0x80(0x01)
	bool bOnlyDoOperationDuringCombatMode; // 0x81(0x01)
	bool bOnlyDoOperationInNonCombatMode; // 0x82(0x01)
	char pad_83[0x5]; // 0x83(0x05)
};

// Class Phoenix.AblJuggernautTask
// Size: 0x70 (Inherited: 0x70)
struct UAblJuggernautTask : UAblAbilityTask {
};

// Class Phoenix.ablJumpAdjustTaskScratchPad
// Size: 0x68 (Inherited: 0x28)
struct UablJumpAdjustTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Phoenix.ablJumpAdjustTask
// Size: 0xd8 (Inherited: 0x70)
struct UablJumpAdjustTask : UAblAbilityTask {
	struct FVector2D NormalLandingOffset; // 0x70(0x08)
	struct FVector2D IdealKneeLandingOffset; // 0x78(0x08)
	struct FVector2D IdealWaistLandingOffset; // 0x80(0x08)
	struct FVector2D IdealHandLandingOffset; // 0x88(0x08)
	float MaximumLedgeHeight; // 0x90(0x04)
	bool bLimitMaxImpulse; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	float MaxImpulse; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct FAlphaBlend BlendIn; // 0xa0(0x30)
	bool bDebugDrawEnabled; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
};

// Class Phoenix.AblJumpTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblJumpTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblJumpTask
// Size: 0x70 (Inherited: 0x70)
struct UAblJumpTask : UAblAbilityTask {
};

// Class Phoenix.AblLeavingNavMeshScratchpad
// Size: 0x30 (Inherited: 0x30)
struct UAblLeavingNavMeshScratchpad : UAblTaskConditionScratchpad {
};

// Class Phoenix.AblLeavingNavMeshTaskCondition
// Size: 0x38 (Inherited: 0x28)
struct UAblLeavingNavMeshTaskCondition : UAblTaskCondition {
	float MinSpeed; // 0x28(0x04)
	float Distance; // 0x2c(0x04)
	float DotProductCheck; // 0x30(0x04)
	bool bCheckForCollision; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.ablLedgeAssistTaskScratchPad
// Size: 0x88 (Inherited: 0x28)
struct UablLedgeAssistTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct FLedgeAssistTaskEntry> InProgressTurn; // 0x28(0x10)
	struct FVector StartingRootPos; // 0x38(0x0c)
	struct FVector DeltaRootPos; // 0x44(0x0c)
	struct FVector DeltaAdded; // 0x50(0x0c)
	struct FRotator DeltaRotation; // 0x5c(0x0c)
	struct FRotator RotationAdded; // 0x68(0x0c)
	float ElapsedTime; // 0x74(0x04)
	float AblitityLength; // 0x78(0x04)
	struct FRotator StartingRotation; // 0x7c(0x0c)
};

// Class Phoenix.ablLedgeAssistTask
// Size: 0x90 (Inherited: 0x70)
struct UablLedgeAssistTask : UAblAbilityTask {
	float DesiredRootUpOffsetM; // 0x70(0x04)
	float DesiredRootNormalOffsetM; // 0x74(0x04)
	float DesiredRootUpOffsetF; // 0x78(0x04)
	float DesiredRootNormalOffsetF; // 0x7c(0x04)
	float DesiredRootUpOffsetC; // 0x80(0x04)
	bool AlignRotation; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	float RotationOffset; // 0x88(0x04)
	bool AlignToMount; // 0x8c(0x01)
	bool TurnOffCollisionDuringAlign; // 0x8d(0x01)
	char pad_8E[0x2]; // 0x8e(0x02)
};

// Class Phoenix.AblLookupBranchTask
// Size: 0x110 (Inherited: 0x70)
struct UAblLookupBranchTask : UAblAbilityTask {
	struct UInteractionArchitectAsset* InteractionArchitectAsset; // 0x70(0x08)
	enum class EInteractionProject Project; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FGameplayTagContainer Tags; // 0x80(0x20)
	struct FGameplayTagContainer TargetTags; // 0xa0(0x20)
	struct TArray<struct UAblBranchCondition*> Conditions; // 0xc0(0x10)
	bool bMustPassAllConditions; // 0xd0(0x01)
	bool bCopyTargetsOnBranch; // 0xd1(0x01)
	bool bOverrideTransitionBlend; // 0xd2(0x01)
	char pad_D3[0x5]; // 0xd3(0x05)
	struct FAlphaBlend TransitionBlend; // 0xd8(0x30)
	bool bClampBlendOutTime; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
};

// Class Phoenix.AblConditionalLookupBranchTask
// Size: 0xf8 (Inherited: 0xc0)
struct UAblConditionalLookupBranchTask : UAblConditionalBranchTaskBase {
	struct UInteractionArchitectAsset* InteractionArchitectAsset; // 0xc0(0x08)
	enum class EInteractionProject Project; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FGameplayTagContainer Tags; // 0xd0(0x20)
	bool bAllowBranchingIntoCurrentAbility; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
};

// Class Phoenix.ablMotionAdjustTargetLocationGetter
// Size: 0x28 (Inherited: 0x28)
struct UablMotionAdjustTargetLocationGetter : UObject {
};

// Class Phoenix.ablMotionAdjustCreatureAttackLocationGetter
// Size: 0x28 (Inherited: 0x28)
struct UablMotionAdjustCreatureAttackLocationGetter : UablMotionAdjustTargetLocationGetter {
};

// Class Phoenix.ablMotionAdjustBlackboardLocationGetter
// Size: 0x30 (Inherited: 0x28)
struct UablMotionAdjustBlackboardLocationGetter : UablMotionAdjustTargetLocationGetter {
	struct FName BlackboardKeyName; // 0x28(0x08)
};

// Class Phoenix.ablMotionAdjustLedgeLocationGetter
// Size: 0x28 (Inherited: 0x28)
struct UablMotionAdjustLedgeLocationGetter : UablMotionAdjustTargetLocationGetter {
};

// Class Phoenix.ablMotionAdjustJumpDownLocationGetter
// Size: 0x28 (Inherited: 0x28)
struct UablMotionAdjustJumpDownLocationGetter : UablMotionAdjustTargetLocationGetter {
};

// Class Phoenix.ablMotionAdjustClimbingLadderLocationGetter
// Size: 0x30 (Inherited: 0x28)
struct UablMotionAdjustClimbingLadderLocationGetter : UablMotionAdjustTargetLocationGetter {
	enum class EClimbingLadderState ClimbingLadderState; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.ablMotionAdjustTaskScratchPad
// Size: 0x90 (Inherited: 0x28)
struct UablMotionAdjustTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x68]; // 0x28(0x68)
};

// Class Phoenix.AblTaskMotionWarpWindowFinder
// Size: 0x38 (Inherited: 0x38)
struct UAblTaskMotionWarpWindowFinder : UAvaMotionWarpWindowFinder {
};

// Class Phoenix.AblMotionWarpScratchpad
// Size: 0x50 (Inherited: 0x28)
struct UAblMotionWarpScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x18]; // 0x28(0x18)
	struct TArray<struct UAblTaskConditionScratchpad*> BranchConditionScratchpads; // 0x40(0x10)
};

// Class Phoenix.AblMotionWarpTask
// Size: 0x90 (Inherited: 0x70)
struct UAblMotionWarpTask : UAblAbilityTask {
	struct UAvaMotionWarpingModifierConfig* RootMotionModifierConfig; // 0x70(0x08)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0x78(0x10)
	bool bMustPassAllConditions; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.AblMotionWarpWindowFinder
// Size: 0x40 (Inherited: 0x38)
struct UAblMotionWarpWindowFinder : UAvaMotionWarpWindowFinder {
	struct UAblAbilityComponent* AblAbilityComponent; // 0x38(0x08)
};

// Class Phoenix.AblMountFlightAnimStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblMountFlightAnimStateTask : UAblAbilityTask {
	enum class EMountFlyingGait MountFlyingGait; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblMountPlayingIdleBreakTask
// Size: 0x70 (Inherited: 0x70)
struct UAblMountPlayingIdleBreakTask : UAblAbilityTask {
};

// Class Phoenix.AblMountIdleBreakCameraTask
// Size: 0x70 (Inherited: 0x70)
struct UAblMountIdleBreakCameraTask : UAblAbilityTask {
};

// Class Phoenix.AblMountRiderAbleEventTask
// Size: 0x78 (Inherited: 0x70)
struct UAblMountRiderAbleEventTask : UAblAbilityTask {
	struct FName EventName; // 0x70(0x08)
};

// Class Phoenix.AblMountTransitionAdjustTask
// Size: 0x120 (Inherited: 0x70)
struct UAblMountTransitionAdjustTask : UAblAbilityTask {
	struct FName CreatureMountSocketName; // 0x70(0x08)
	struct FName CreatureTransitionBoneName; // 0x78(0x08)
	struct FName CreatureAttachSocketName; // 0x80(0x08)
	float AttachBlendTime; // 0x88(0x04)
	float MaxInterpolateFactor; // 0x8c(0x04)
	struct FRuntimeFloatCurve InterpolateWeightCurve; // 0x90(0x88)
	bool bDrawDebug; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// Class Phoenix.MatchAnimationPositionCharacterGetter
// Size: 0x28 (Inherited: 0x28)
struct UMatchAnimationPositionCharacterGetter : UObject {
};

// Class Phoenix.MatchAnimationPositionMountRiderGetter
// Size: 0x28 (Inherited: 0x28)
struct UMatchAnimationPositionMountRiderGetter : UMatchAnimationPositionCharacterGetter {
};

// Class Phoenix.AblMovementModeTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblMovementModeTaskScratchPad : UAblAbilityTaskScratchPad {
	enum class EMovementMode OriginalMovementMode; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.AblMovementModeTask
// Size: 0x78 (Inherited: 0x70)
struct UAblMovementModeTask : UAblAbilityTask {
	enum class EMovementMode StartMovement; // 0x70(0x01)
	bool bUseEndMovement; // 0x71(0x01)
	enum class EMovementMode EndMovement; // 0x72(0x01)
	char pad_73[0x5]; // 0x73(0x05)
};

// Class Phoenix.AblMoveTask
// Size: 0xb0 (Inherited: 0x70)
struct UAblMoveTask : UAblAbilityTask {
	enum class EAblMoveTaskVelocitySource VelocitySource; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FVector CustomVelocity; // 0x74(0x0c)
	enum class EAblMoveTaskBallisticDestinationSource DestSource; // 0x80(0x01)
	bool bApplyGravity; // 0x81(0x01)
	char pad_82[0x2]; // 0x82(0x02)
	float OverrideGravity; // 0x84(0x04)
	float ArcParamMin; // 0x88(0x04)
	float ArcParamMax; // 0x8c(0x04)
	float TimeMult; // 0x90(0x04)
	struct FVector TargetOffset; // 0x94(0x0c)
	float Distance; // 0xa0(0x04)
	float MaxDistance; // 0xa4(0x04)
	bool bIgnoreNonStatic; // 0xa8(0x01)
	bool bCollateralDamage; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)
};

// Class Phoenix.ablNamedEventTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablNamedEventTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablNamedEventTask
// Size: 0x78 (Inherited: 0x70)
struct UablNamedEventTask : UAblAbilityTask {
	struct FName Event; // 0x70(0x08)
};

// Class Phoenix.AblNewCamTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblNewCamTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblNewCamTask
// Size: 0xa8 (Inherited: 0x70)
struct UAblNewCamTask : UAblAbilityTask {
	struct TArray<struct FCameraProperties> camProperties; // 0x70(0x10)
	float customCameraWeight; // 0x80(0x04)
	enum class LookAtType LookAtTarget; // 0x84(0x01)
	bool alwaysLookAtTarget; // 0x85(0x01)
	bool SequentiallyPlayAllCameras; // 0x86(0x01)
	bool Disable; // 0x87(0x01)
	char pad_88[0x20]; // 0x88(0x20)
};

// Class Phoenix.ablNiagaraPlayEffectTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UablNiagaraPlayEffectTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0xc]; // 0x2c(0x0c)
};

// Class Phoenix.ablNiagaraPlayEffectTask
// Size: 0xb0 (Inherited: 0x70)
struct UablNiagaraPlayEffectTask : UAblAbilityTask {
	struct UNiagaraSystem* NiagaraVFX; // 0x70(0x08)
	bool bAttachToWand; // 0x78(0x01)
	bool bAttachToSocket; // 0x79(0x01)
	char pad_7A[0x2]; // 0x7a(0x02)
	struct FName BlackboardKeyName; // 0x7c(0x08)
	bool bDestroyAtTaskEnd; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	float DestroyComponentDelay; // 0x88(0x04)
	struct FName m_Socket; // 0x8c(0x08)
	bool bUseSpawnRateMultiply; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	float SpawnRateMultiply; // 0x98(0x04)
	char pad_9C[0x14]; // 0x9c(0x14)

	void DestroyNiagraEffects(struct UNiagaraComponent* InNiagaraComponent); // Function Phoenix.ablNiagaraPlayEffectTask.DestroyNiagraEffects // (Final|Native|Protected) // @ game+0x31abdd0
};

// Class Phoenix.ablNPC_AnimUtilTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablNPC_AnimUtilTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablNPC_AnimUtilTask
// Size: 0x78 (Inherited: 0x70)
struct UablNPC_AnimUtilTask : UAblAbilityTask {
	enum class EEnemy_Ability BranchToAbilityOnRelease; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.NPCAbl_BranchCondition_MoveTurn
// Size: 0x38 (Inherited: 0x30)
struct UNPCAbl_BranchCondition_MoveTurn : UAblBranchCondition {
	float MinThresholdAngleDeg; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.AblNPC_DilateTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_DilateTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_DilateTask
// Size: 0x80 (Inherited: 0x70)
struct UAblNPC_DilateTask : UAblAbilityTask {
	enum class ENPC_DilateSource Source; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float DilationParam; // 0x74(0x04)
	float DilationTime; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.ablNPC_MobilityTurnAssistTask
// Size: 0x78 (Inherited: 0x70)
struct UablNPC_MobilityTurnAssistTask : UAblAbilityTask {
	enum class ENPC_TurnAssist TurnAssistMode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblNPC_ParryAdvanceTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_ParryAdvanceTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_ParryAdvanceTask
// Size: 0x90 (Inherited: 0x70)
struct UAblNPC_ParryAdvanceTask : UAblAbilityTask {
	enum class EEnemy_ParryWindowType Type; // 0x70(0x01)
	bool bKeepWindowOpen; // 0x71(0x01)
	bool bTriggerFiredEvent; // 0x72(0x01)
	enum class EEnemy_ParryType FiredEventType; // 0x73(0x01)
	bool bOverrideDBParryLeadIn; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float ParryLeadIn; // 0x78(0x04)
	bool bOverrideDBParryToRelease; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	float ParryToRelease; // 0x80(0x04)
	bool bOverrideDBCounterType; // 0x84(0x01)
	enum class EEnemy_ParryCounterType OverrideCounterType; // 0x85(0x01)
	bool bOverrideDBResponseType; // 0x86(0x01)
	enum class EEnemy_ParryResponseType OverrideResponseType; // 0x87(0x01)
	bool bOverrideDBCounterStepDirection; // 0x88(0x01)
	enum class EEnemy_ParryCounterStepDirection OverrideCounterStepDirection; // 0x89(0x01)
	bool bOverrideDBCounterStyle; // 0x8a(0x01)
	enum class EEnemy_ParryCounterStyle OverrideCounterStyle; // 0x8b(0x01)
	bool bOverrideDBDodgeStyle; // 0x8c(0x01)
	enum class EEnemy_ParryDodgeStyle OverrideDodgeStyle; // 0x8d(0x01)
	char pad_8E[0x2]; // 0x8e(0x02)
};

// Class Phoenix.AblNPC_ParryAnimationFireTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_ParryAnimationFireTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_ParryAnimationFireTask
// Size: 0x70 (Inherited: 0x70)
struct UAblNPC_ParryAnimationFireTask : UAblAbilityTask {
};

// Class Phoenix.AblNPC_ParryExternalLeadInTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_ParryExternalLeadInTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_ParryExternalLeadInTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNPC_ParryExternalLeadInTask : UAblAbilityTask {
	float DistanceTrigger; // 0x70(0x04)
	float AdditionalLeadInTime; // 0x74(0x04)
};

// Class Phoenix.AblNPC_ParryLeadInLoopingTaskScratchPad
// Size: 0x40 (Inherited: 0x28)
struct UAblNPC_ParryLeadInLoopingTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.AblNPC_ParryLeadInLoopingTask
// Size: 0x90 (Inherited: 0x70)
struct UAblNPC_ParryLeadInLoopingTask : UAblAbilityTask {
	bool bOverrideRunAtDataLeadInTime; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float ParryLeadIn; // 0x74(0x04)
	bool bOverrideDBParryToRelease; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float ParryToRelease; // 0x7c(0x04)
	bool bOverrideDBCounterType; // 0x80(0x01)
	enum class EEnemy_ParryCounterType OverrideCounterType; // 0x81(0x01)
	bool bOverrideDBResponseType; // 0x82(0x01)
	enum class EEnemy_ParryResponseType OverrideResponseType; // 0x83(0x01)
	bool bOverrideDBCounterStepDirection; // 0x84(0x01)
	enum class EEnemy_ParryCounterStepDirection OverrideCounterStepDirection; // 0x85(0x01)
	bool bOverrideDBCounterStyle; // 0x86(0x01)
	enum class EEnemy_ParryCounterStyle OverrideCounterStyle; // 0x87(0x01)
	bool bOverrideDBDodgeStyle; // 0x88(0x01)
	enum class EEnemy_ParryDodgeStyle OverrideDodgeStyle; // 0x89(0x01)
	bool bParryWindowPersistPastImpact; // 0x8a(0x01)
	bool bParryWindowForceCloseOnTaskEnd; // 0x8b(0x01)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.AblNPC_ParryLeadInPreLoopingTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UAblNPC_ParryLeadInPreLoopingTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblNPC_ParryLeadInPreLoopingTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNPC_ParryLeadInPreLoopingTask : UAblAbilityTask {
	bool bParryWindowPersistPastImpact; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblNPC_ParryLeadInTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_ParryLeadInTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_ParryLeadInTask
// Size: 0x80 (Inherited: 0x70)
struct UAblNPC_ParryLeadInTask : UAblAbilityTask {
	bool bOverrideDBParryLeadIn; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float ParryLeadIn; // 0x74(0x04)
	float CustomProjectileSpeed; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblNPC_ParryReleaseTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblNPC_ParryReleaseTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNPC_ParryReleaseTask
// Size: 0x80 (Inherited: 0x70)
struct UAblNPC_ParryReleaseTask : UAblAbilityTask {
	bool bOverrideDBParryToRelease; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float ParryToRelease; // 0x74(0x04)
	bool bTriggerFiredEvent; // 0x78(0x01)
	enum class EEnemy_ParryType FiredEventType; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.AblNPC_PhysicalReactionTask
// Size: 0x88 (Inherited: 0x70)
struct UAblNPC_PhysicalReactionTask : UAblAbilityTask {
	enum class EPhysicalReactionTaskAction Action; // 0x70(0x01)
	enum class EImpactReactionStrength ReactionStrength; // 0x71(0x01)
	bool bBlendBackOnTaskEnd; // 0x72(0x01)
	enum class ERagdollDrivingSetting SetPoseDrivingMode; // 0x73(0x01)
	enum class ERagdollPoseDrivingMode PoseDrivingMode; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float PoseDrivingBlendDuration; // 0x78(0x04)
	bool bSetCenterOfMassDrivingModes; // 0x7c(0x01)
	enum class ERagdollCOMLocationDrivingMode LocationDrivingMode; // 0x7d(0x01)
	enum class ERagdollCOMRotationDrivingMode RotationDrivingMode; // 0x7e(0x01)
	bool bEnableCcd; // 0x7f(0x01)
	float CcdTime; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.AblNPC_PhysicalReactionBlendBackTask
// Size: 0x70 (Inherited: 0x70)
struct UAblNPC_PhysicalReactionBlendBackTask : UAblAbilityTask {
};

// Class Phoenix.AblNPC_PhysicalReactionCOMVelocityTask
// Size: 0x80 (Inherited: 0x70)
struct UAblNPC_PhysicalReactionCOMVelocityTask : UAblAbilityTask {
	enum class EAblNpcReactCapsuleImpulseVelocitySource VelocitySource; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float Magnitude; // 0x74(0x04)
	float Angle; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblPhysicsBallisticToTargetScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblPhysicsBallisticToTargetScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Phoenix.AblNPC_PhysicsBallisticToTargetTask
// Size: 0xd0 (Inherited: 0x70)
struct UAblNPC_PhysicsBallisticToTargetTask : UAblAbilityTask {
	enum class ENPC_PhysicsBallisticType Type; // 0x70(0x01)
	bool bUseTarget; // 0x71(0x01)
	enum class ENPC_PhysicsBallisticToTargetTaskMode Mode; // 0x72(0x01)
	enum class ENPC_PhysicsBallisticToTargetTaskMode EndMode; // 0x73(0x01)
	bool bBallisticFromAttackData; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float OverrideGravity; // 0x78(0x04)
	bool bTrackTarget; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	float ArcParam; // 0x80(0x04)
	float TimeMult; // 0x84(0x04)
	struct FVector TargetOffset; // 0x88(0x0c)
	float TargetVelocityPredictionTime; // 0x94(0x04)
	float MaxDistance; // 0x98(0x04)
	bool bIgnoreCollisionUntilApex; // 0x9c(0x01)
	bool bIgnoreNonStatic; // 0x9d(0x01)
	bool bCollateralDamage; // 0x9e(0x01)
	char pad_9F[0x1]; // 0x9f(0x01)
	float fRandomAngleDeviationMin; // 0xa0(0x04)
	float fRandomAngleDeviationMax; // 0xa4(0x04)
	float fRandomDistanceDeviationMin; // 0xa8(0x04)
	float fRandomDistanceDeviationMax; // 0xac(0x04)
	struct FName TargetPointName; // 0xb0(0x08)
	float PhysicsOnGroundMinTime; // 0xb8(0x04)
	float PhysicsOnGroundTimeout; // 0xbc(0x04)
	float PhysicsMinTime; // 0xc0(0x04)
	float PhysicsTimeout; // 0xc4(0x04)
	float MovementStopTolerance; // 0xc8(0x04)
	bool bDisableCollisionResolution; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
};

// Class Phoenix.ablNPC_SpawnJumpSplineWaitTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablNPC_SpawnJumpSplineWaitTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablNPC_SpawnJumpSplineWaitTask
// Size: 0x78 (Inherited: 0x70)
struct UablNPC_SpawnJumpSplineWaitTask : UAblAbilityTask {
	enum class EEnemy_Ability BranchToAbilityOnRelease; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablNPC_SplitTaskScratchPad
// Size: 0x58 (Inherited: 0x50)
struct UablNPC_SplitTaskScratchPad : UAblBranchTaskScratchPad {
	bool bDone; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.ablNPC_SplitTask
// Size: 0xb0 (Inherited: 0x70)
struct UablNPC_SplitTask : UAblAbilityTask {
	enum class ENPC_Split SplitMode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FGameplayTagContainer ContextTags; // 0x78(0x20)
	struct TArray<struct UEnemyAIAttackData*> m_PossibleSplits; // 0x98(0x10)
	bool bIgnoreSelectRanges; // 0xa8(0x01)
	bool bIgnoreMinAttackAngle; // 0xa9(0x01)
	bool bGetSplitFromCurrentAttackData; // 0xaa(0x01)
	char pad_AB[0x5]; // 0xab(0x05)
};

// Class Phoenix.AblNPC_TargetableToggleScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblNPC_TargetableToggleScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblNPC_TargetableToggleTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNPC_TargetableToggleTask : UAblAbilityTask {
	bool bRegisterAsTargetableAtStart; // 0x70(0x01)
	bool bRegisterAsTargetableAtEnd; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.ablNPC_TurnAssistTask
// Size: 0x80 (Inherited: 0x70)
struct UablNPC_TurnAssistTask : UAblAbilityTask {
	enum class ENPC_TurnAssist TurnAssistMode; // 0x70(0x01)
	bool bUseFixedDirection; // 0x71(0x01)
	enum class EablNPC_FixedSource FixedSource; // 0x72(0x01)
	char pad_73[0x1]; // 0x73(0x01)
	float FixedRelativeAngle; // 0x74(0x04)
	bool bFollowPlayer; // 0x78(0x01)
	bool bTurnToPlayer; // 0x79(0x01)
	bool bFollowTarget; // 0x7a(0x01)
	bool bTurnToTarget; // 0x7b(0x01)
	bool bFollowInstigator; // 0x7c(0x01)
	bool bTurnToInstigator; // 0x7d(0x01)
	bool bIgnoreTargetTracker; // 0x7e(0x01)
	char pad_7F[0x1]; // 0x7f(0x01)
};

// Class Phoenix.AblNPCAbilityScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblNPCAbilityScratchPad : UAblAbilityBaseScratchPad {
};

// Class Phoenix.AblNPCAbility
// Size: 0xc8 (Inherited: 0xc8)
struct UAblNPCAbility : UAblAbility {
};

// Class Phoenix.AblNpcBakedPoseRigidbodyScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblNpcBakedPoseRigidbodyScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x20]; // 0x28(0x20)

	void OnBakedRigidBodyAttachedEvent(); // Function Phoenix.AblNpcBakedPoseRigidbodyScratchpad.OnBakedRigidBodyAttachedEvent // (Final|Native|Public) // @ game+0x31af120
};

// Class Phoenix.AblNpcBakedPoseRigidbodyTask
// Size: 0x98 (Inherited: 0x70)
struct UAblNpcBakedPoseRigidbodyTask : UAblAbilityTask {
	bool bAttachBakedPoseOnTaskStart; // 0x70(0x01)
	bool bRemoveBakedPoseOnTaskStart; // 0x71(0x01)
	bool bAttachBakedPoseOnTaskEnd; // 0x72(0x01)
	bool bRemoveBakedPoseOnTaskEnd; // 0x73(0x01)
	bool bApplyForcesToBakedPose; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	struct FVector LinearVelocity; // 0x78(0x0c)
	struct FVector AngularVelocityInDegrees; // 0x84(0x0c)
	bool bVelocityAwayFromInstigator; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.AblNpcCapsuleScalingScratchpad
// Size: 0x90 (Inherited: 0x28)
struct UAblNpcCapsuleScalingScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x68]; // 0x28(0x68)
};

// Class Phoenix.AblNpcCapsuleScalingTask
// Size: 0xb0 (Inherited: 0x70)
struct UAblNpcCapsuleScalingTask : UAblAbilityTask {
	bool bUseHeightAsRadius; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float RadiusMultiplier; // 0x74(0x04)
	float HalfHeightMultiplier; // 0x78(0x04)
	bool bRestoreAtEndTask; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	struct FAlphaBlend BlendTime; // 0x80(0x30)
};

// Class Phoenix.AblNpcCollisionBranchCondition
// Size: 0x48 (Inherited: 0x30)
struct UAblNpcCollisionBranchCondition : UAblBranchCondition {
	enum class EAblNpcCollisionDetectionType DetectionType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float DotProductLowerBound; // 0x34(0x04)
	float DotProductUpperBound; // 0x38(0x04)
	float BranchOnImminentCollisionLength; // 0x3c(0x04)
	float MinSpeed; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AblNpcCollisionBranchTaskScratchPad
// Size: 0xe8 (Inherited: 0x50)
struct UAblNpcCollisionBranchTaskScratchPad : UAblBranchTaskScratchPad {
	char pad_50[0x98]; // 0x50(0x98)

	void OnNpcCapsuleHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.AblNpcCollisionBranchTaskScratchPad.OnNpcCapsuleHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x31af140
};

// Class Phoenix.AblNpcCollisionBranchTask
// Size: 0x118 (Inherited: 0x118)
struct UAblNpcCollisionBranchTask : UAblBranchTask {
};

// Class Phoenix.AblNpcCollisionScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblNpcCollisionScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Phoenix.AblNpcCollisionTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcCollisionTask : UAblAbilityTask {
	bool bOverrideSpellResponse; // 0x70(0x01)
	bool bOverrideWeaponResponse; // 0x71(0x01)
	bool bOverrideAimConeResponse; // 0x72(0x01)
	bool bOverridePawnResponse; // 0x73(0x01)
	enum class ECollisionResponse TaskSpellResponse; // 0x74(0x01)
	enum class ECollisionResponse TaskWeaponResponse; // 0x75(0x01)
	enum class ECollisionResponse TaskAimConeResponse; // 0x76(0x01)
	enum class ECollisionResponse TaskPawnResponse; // 0x77(0x01)
};

// Class Phoenix.AblNPCDynamicBranchChannelingConditional
// Size: 0x70 (Inherited: 0x30)
struct UAblNPCDynamicBranchChannelingConditional : UAblChannelingBase {
	bool m_CopyTargetsOnBranch; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FAlphaBlend m_TransitionBlend; // 0x38(0x30)
	enum class EEnemy_Ability AbilityState; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Phoenix.AblNpcFeetIkScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblNpcFeetIkScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblNpcFeetIkTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcFeetIkTask : UAblAbilityTask {
	enum class EAblNpcReactEventAction IkOnTaskStartEvent; // 0x70(0x01)
	enum class EAblNpcReactEventAction IkOnTaskEndEvent; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.AblNpcForceFeedbackScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblNpcForceFeedbackScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UAblTaskConditionScratchpad*> ConditionScratchpads; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.AblNpcForceFeedbackTask
// Size: 0xa0 (Inherited: 0x70)
struct UAblNpcForceFeedbackTask : UAblAbilityTask {
	struct UForceFeedbackEffect* ForceFeedbackEffect; // 0x70(0x08)
	struct FName FeedbackTagName; // 0x78(0x08)
	bool bStopFeedbackAtTaskEnd; // 0x80(0x01)
	bool bLoop; // 0x81(0x01)
	bool bOnlyRumbleIfInstigatorIsPlayer; // 0x82(0x01)
	bool bUseAttenuation; // 0x83(0x01)
	char pad_84[0x4]; // 0x84(0x04)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0x88(0x10)
	bool bMustPassAllConditions; // 0x98(0x01)
	bool bOnlyCheckConditionsOnTaskStart; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
};

// Class Phoenix.AblNpcHeadTrackingScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblNpcHeadTrackingScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblNpcHeadTrackingTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcHeadTrackingTask : UAblAbilityTask {
	bool bEnableHeadTracking; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblNpcHitPauseScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblNpcHitPauseScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblNpcHitPauseTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcHitPauseTask : UAblAbilityTask {
	float Time; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.AblNpcMoveInDirectionScratchpad
// Size: 0x78 (Inherited: 0x28)
struct UAblNpcMoveInDirectionScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Phoenix.AblNpcMoveInDirectionTask
// Size: 0xc0 (Inherited: 0x70)
struct UAblNpcMoveInDirectionTask : UAblAbilityTask {
	enum class ENpcMoveDirectionType DirectionType; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FVector Direction; // 0x74(0x0c)
	float MinSpeed; // 0x80(0x04)
	float MaxSpeed; // 0x84(0x04)
	float RandAngleCone; // 0x88(0x04)
	enum class EMovementMode MovementMode; // 0x8c(0x01)
	bool bModifyGravityAtTaskStart; // 0x8d(0x01)
	char pad_8E[0x2]; // 0x8e(0x02)
	float GravityScaleAtTaskStart; // 0x90(0x04)
	bool bRestoreGravityScaleAtTaskEnd; // 0x94(0x01)
	bool bAddMomentumAtTaskEnd; // 0x95(0x01)
	bool bIgnoreZ; // 0x96(0x01)
	bool bUseNpcMaxHeight; // 0x97(0x01)
	bool bOverrideMaxHeight; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float MaxHeightOverride; // 0x9c(0x04)
	bool bUseCurveSpeedManipulation; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct TArray<struct UCurveFloat*> Curves; // 0xa8(0x10)
	bool bLoopCurve; // 0xb8(0x01)
	bool bRandStartTimeOnCurve; // 0xb9(0x01)
	bool bUseCurveValueAsMultiplier; // 0xba(0x01)
	bool bFitCurveToTaskDuration; // 0xbb(0x01)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class Phoenix.ablNPCPhysicsTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablNPCPhysicsTaskScratchPad : UAblAbilityTaskScratchPad {
	float ElapsedTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ablNPCPhysicsTask
// Size: 0x78 (Inherited: 0x70)
struct UablNPCPhysicsTask : UAblAbilityTask {
	bool bOverrideCapsulePhysicsSettings; // 0x70(0x01)
	bool bEnableCapsuleGravity; // 0x71(0x01)
	bool bSimulateCapsulePhysics; // 0x72(0x01)
	char pad_73[0x5]; // 0x73(0x05)
};

// Class Phoenix.AblNpcPopupScratchpad
// Size: 0x60 (Inherited: 0x28)
struct UAblNpcPopupScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x38]; // 0x28(0x38)
};

// Class Phoenix.AblNpcPopupTask
// Size: 0xc0 (Inherited: 0x70)
struct UAblNpcPopupTask : UAblAbilityTask {
	enum class EAblNpcPopupDirection PopupDirection; // 0x70(0x01)
	bool bUseMagnitudeAndAngle; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float Magnitude; // 0x74(0x04)
	float MagnitudeVariance; // 0x78(0x04)
	float Angle; // 0x7c(0x04)
	float AngleVariance; // 0x80(0x04)
	float MagnitudeHorz; // 0x84(0x04)
	float MagnitudeVert; // 0x88(0x04)
	float HorizontalDamping; // 0x8c(0x04)
	float CollisionVsFloorInitialDamping; // 0x90(0x04)
	float CollisionVsFloorDamping; // 0x94(0x04)
	bool bUseNpcMaxHeight; // 0x98(0x01)
	bool bOverrideMaxHeight; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	float MaxHeightOverride; // 0x9c(0x04)
	bool bModifyGravityAtTaskStart; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float GravityScaleAtTaskStart; // 0xa4(0x04)
	bool bModifyGravityAtMaxHeight; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	float GravityScaleAtMaxHeight; // 0xac(0x04)
	bool bModifyGravityAtApex; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float GravityScaleAtApex; // 0xb4(0x04)
	bool bRestoreGravityScaleAtTaskEnd; // 0xb8(0x01)
	bool bStompVelocityAtTaskStart; // 0xb9(0x01)
	bool bStompVelocityAtTaskEnd; // 0xba(0x01)
	bool bIgnoreInAirCollisions; // 0xbb(0x01)
	enum class EMovementMode MovementMode; // 0xbc(0x01)
	char pad_BD[0x3]; // 0xbd(0x03)
};

// Class Phoenix.AblNpcReactAnimRateModifierScratchpad
// Size: 0x58 (Inherited: 0x28)
struct UAblNpcReactAnimRateModifierScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Phoenix.AblNpcReactAnimRateModifierTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcReactAnimRateModifierTask : UAblAbilityTask {
	float TargetValue; // 0x70(0x04)
	enum class EAlphaBlendOption AlphaBlendOption; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// Class Phoenix.AblNpcReactFlyToLocation
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcReactFlyToLocation : UAblFlyToLocationTaskBase {
	enum class ENpcReactFlyToLocationOption TargetLocation; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblNpcReactGravityScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblNpcReactGravityScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNpcReactGravityTask
// Size: 0x98 (Inherited: 0x70)
struct UAblNpcReactGravityTask : UAblAbilityTask {
	bool bModifyGravityAtTaskStart; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float TaskStartGravityMultiplier; // 0x74(0x04)
	bool bModifyGravityAtTaskEnd; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float TaskEndGravityMultiplier; // 0x7c(0x04)
	bool bRestoreGravityAtTaskEnd; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct TArray<struct UAblAbility*> AbilitiesToIgnoreTaskEndGravityRestoration; // 0x88(0x10)
};

// Class Phoenix.AblNpcReactMoveToScratchpad
// Size: 0x88 (Inherited: 0x28)
struct UAblNpcReactMoveToScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x60]; // 0x28(0x60)
};

// Class Phoenix.AblNpcReactMoveToTask
// Size: 0xa0 (Inherited: 0x70)
struct UAblNpcReactMoveToTask : UAblAbilityTask {
	enum class EAblNpcReactMoveToDestinationType DestinationType; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FVector CustomDestination; // 0x74(0x0c)
	enum class EAblNpcReactMoveToSpeedType SpeedType; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct UCurveFloat* Curve; // 0x88(0x08)
	float CustomSpeed; // 0x90(0x04)
	bool bTrackTarget; // 0x94(0x01)
	bool bStompVelocityAtStart; // 0x95(0x01)
	bool bDoNotAllowHorizontalMovementAwayFromInstigator; // 0x96(0x01)
	bool bUseMaxHeight; // 0x97(0x01)
	bool bIgnoreCapsuleHalfHeight; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.AblPlayObjectArchitectVfxScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblPlayObjectArchitectVfxScratchpad : UAblAbilityTaskScratchPad {
	struct UNiagaraComponent* NiagaraComp; // 0x28(0x08)
	struct UParticleSystemComponent* ParticleComp; // 0x30(0x08)
	struct TArray<struct UAblTaskConditionScratchpad*> ConditionScratchpads; // 0x38(0x10)
};

// Class Phoenix.AblNpcReactPlayObjectArchitectVfxScratchpad
// Size: 0x58 (Inherited: 0x48)
struct UAblNpcReactPlayObjectArchitectVfxScratchpad : UAblPlayObjectArchitectVfxScratchpad {
	char pad_48[0x10]; // 0x48(0x10)
};

// Class Phoenix.AblPlayObjectArchitectVfxTaskBase
// Size: 0xc8 (Inherited: 0x70)
struct UAblPlayObjectArchitectVfxTaskBase : UAblAbilityTask {
	struct FGameplayTagContainer BaseObjectArchitectTags; // 0x70(0x20)
	struct TArray<struct UAblObjectArchitectTagChooser*> TagChoosers; // 0x90(0x10)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0xa0(0x10)
	bool bSpawnSystemAttached; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FName AttachPointName; // 0xb4(0x08)
	bool bAutoDestroy; // 0xbc(0x01)
	bool bDeactivateAtTaskEnd; // 0xbd(0x01)
	bool bDestroyAtTaskEnd; // 0xbe(0x01)
	bool bIncludeActorScale; // 0xbf(0x01)
	enum class EAttachLocation AttachLocation; // 0xc0(0x01)
	enum class EObjectArchitectVfxWorldLocalType WorldOrLocalSpace; // 0xc1(0x01)
	char pad_C2[0x6]; // 0xc2(0x06)
};

// Class Phoenix.AblPlayObjectArchitectVfxTask
// Size: 0x108 (Inherited: 0xc8)
struct UAblPlayObjectArchitectVfxTask : UAblPlayObjectArchitectVfxTaskBase {
	struct FVector Location; // 0xc8(0x0c)
	struct FRotator Rotation; // 0xd4(0x0c)
	struct FVector Scale; // 0xe0(0x0c)
	float LifeSpan; // 0xec(0x04)
	struct FVector DecalSize; // 0xf0(0x0c)
	float FadeInTime; // 0xfc(0x04)
	float FadeOutTime; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
};

// Class Phoenix.AblNpcReactPlayObjectArchitectVfxTask
// Size: 0x108 (Inherited: 0x108)
struct UAblNpcReactPlayObjectArchitectVfxTask : UAblPlayObjectArchitectVfxTask {
};

// Class Phoenix.AblNpcReactPopupScratchpad
// Size: 0x70 (Inherited: 0x60)
struct UAblNpcReactPopupScratchpad : UAblNpcPopupScratchpad {
	struct UAblReactionData* ReactionData; // 0x60(0x08)
	char pad_68[0x8]; // 0x68(0x08)
};

// Class Phoenix.AblNpcReactPopupTask
// Size: 0xd0 (Inherited: 0xc0)
struct UAblNpcReactPopupTask : UAblNpcPopupTask {
	bool bUseReactionPopupType; // 0xc0(0x01)
	enum class EAblNpcReactPopupTaskType ReactPopupType; // 0xc1(0x01)
	bool bInvertReactPopupTypeDirection; // 0xc2(0x01)
	bool bConvertReactPopupTypeDirectionTo2D; // 0xc3(0x01)
	bool bUseReactionVelocityIfSendTargetExists; // 0xc4(0x01)
	bool bUseReactionDataMagnitude; // 0xc5(0x01)
	bool bModifyGravityAtReactionEnd; // 0xc6(0x01)
	char pad_C7[0x1]; // 0xc7(0x01)
	float GravityScaleAtReactionEnd; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Phoenix.AblNpcRotateScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblNpcRotateScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblNpcRotateTask
// Size: 0x98 (Inherited: 0x70)
struct UAblNpcRotateTask : UAblAbilityTask {
	bool bRotateAroundX; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float MinRotationSpeedX; // 0x74(0x04)
	float MaxRotationSpeedX; // 0x78(0x04)
	bool bRotateAroundY; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	float MinRotationSpeedY; // 0x80(0x04)
	float MaxRotationSpeedY; // 0x84(0x04)
	bool bRotateAroundZ; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float MinRotationSpeedZ; // 0x8c(0x04)
	float MaxRotationSpeedZ; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.AblNpcScaleScratchpad
// Size: 0xb0 (Inherited: 0x28)
struct UAblNpcScaleScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x88]; // 0x28(0x88)
};

// Class Phoenix.AblNpcScaleTask
// Size: 0x88 (Inherited: 0x70)
struct UAblNpcScaleTask : UAblAbilityTask {
	float ScaleStart; // 0x70(0x04)
	float ScaleEnd; // 0x74(0x04)
	bool bScaleToPreviousValue; // 0x78(0x01)
	bool bRestoreScaleAtTaskEnd; // 0x79(0x01)
	bool bUseCurve; // 0x7a(0x01)
	char pad_7B[0x5]; // 0x7b(0x05)
	struct UCurveFloat* Curve; // 0x80(0x08)
};

// Class Phoenix.AblSetCharacterTagsTaskScratchPad
// Size: 0x40 (Inherited: 0x28)
struct UAblSetCharacterTagsTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.AblSetCharacterTagsTask
// Size: 0xb0 (Inherited: 0x70)
struct UAblSetCharacterTagsTask : UAblAbilityTask {
	struct FGameplayTagContainer CharacterTags; // 0x70(0x20)
	bool RemoveTagsAtEndOfTask; // 0x90(0x01)
	bool AddTheseTags; // 0x91(0x01)
	bool RemoveTheseTags; // 0x92(0x01)
	char pad_93[0x5]; // 0x93(0x05)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x98(0x10)
	bool bMustPassAllConditions; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.AblNpcSpawnMunitionTask
// Size: 0x98 (Inherited: 0x70)
struct UAblNpcSpawnMunitionTask : UAblAbilityTask {
	struct AMunitionType_Base* MunitionClass; // 0x70(0x08)
	bool bUseReactionInstigatorAsMunitionInstigator; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0x80(0x10)
	bool bMustPassAllConditions; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.AblNpcStartReactionScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblNpcStartReactionScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.AblNpcStartReactionTask
// Size: 0x108 (Inherited: 0x70)
struct UAblNpcStartReactionTask : UAblAbilityTask {
	struct UAblReactionAbility* ReactionAbility; // 0x70(0x08)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x78(0x10)
	bool bStartReactionOnlyOnce; // 0x88(0x01)
	bool bMustPassAllConditions; // 0x89(0x01)
	bool bUseCurrentReactionData; // 0x8a(0x01)
	char pad_8B[0x5]; // 0x8b(0x05)
	struct FQueueReactionParams ReactionParams; // 0x90(0x78)
};

// Class Phoenix.AblAddPassiveReactionScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblAddPassiveReactionScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
};

// Class Phoenix.AblAddPassiveReactionTask
// Size: 0x88 (Inherited: 0x70)
struct UAblAddPassiveReactionTask : UAblAbilityTask {
	struct UAblReactionAbility* PassiveReactionAbility; // 0x70(0x08)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x78(0x10)
};

// Class Phoenix.AblNpcTargetingModifierScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblNpcTargetingModifierScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNpcTargetingModifierTask
// Size: 0x88 (Inherited: 0x70)
struct UAblNpcTargetingModifierTask : UAblAbilityTask {
	bool bModifyTargetingModifierAtTaskStart; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float TargetingModifierAtTaskStart; // 0x74(0x04)
	bool bModifyTargetingModifierAtTaskEnd; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float TargetingModifierAtTaskEnd; // 0x7c(0x04)
	bool bRestoreTargetingModifierAtTaskEnd; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Phoenix.AblDisarmEventListenerScratchpad
// Size: 0x38 (Inherited: 0x38)
struct UAblDisarmEventListenerScratchpad : UAblCustomEventListenerOnceScratchpad {
};

// Class Phoenix.AblDisarmEventListenerTask
// Size: 0x78 (Inherited: 0x78)
struct UAblDisarmEventListenerTask : UAblCustomEventListenerOnceTask {
};

// Class Phoenix.AblRootMotionModifiersEventListenerScratchpad
// Size: 0x38 (Inherited: 0x38)
struct UAblRootMotionModifiersEventListenerScratchpad : UAblCustomEventListenerStartEndScratchpad {
};

// Class Phoenix.AblRootMotionModifiersEventListenerTask
// Size: 0x90 (Inherited: 0x80)
struct UAblRootMotionModifiersEventListenerTask : UAblCustomEventListenerStartEndTask {
	struct TArray<struct URootMotionModifierProperties*> RootMotionModifiers; // 0x80(0x10)
};

// Class Phoenix.AblCustomEventFiredOnMeshOverlapScratchpad
// Size: 0x88 (Inherited: 0x28)
struct UAblCustomEventFiredOnMeshOverlapScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x60]; // 0x28(0x60)

	void HandleOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.AblCustomEventFiredOnMeshOverlapScratchpad.HandleOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x31b51f0
};

// Class Phoenix.AblCustomEventFiredOnMeshOverlapTask
// Size: 0x90 (Inherited: 0x70)
struct UAblCustomEventFiredOnMeshOverlapTask : UAblAbilityTask {
	struct TArray<struct FName> BodyNames; // 0x70(0x10)
	struct FName CollisionProfileName; // 0x80(0x08)
	struct FName CustomEventName; // 0x88(0x08)
};

// Class Phoenix.AblRipApartScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblRipApartScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.AblRipApartTask
// Size: 0x180 (Inherited: 0x70)
struct UAblRipApartTask : UAblAbilityTask {
	bool bReinitPose; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct TMap<struct FGameplayTag, struct USkeletalMesh*> BodyMeshes; // 0x78(0x50)
	struct TMap<struct FGameplayTag, struct USkeletalMesh*> LegMeshes; // 0xc8(0x50)
	struct TArray<struct FName> BodyLegSocketNames; // 0x118(0x10)
	struct FName LegFxSocketName; // 0x128(0x08)
	struct FGameplayTagContainer LegSocketParticleTags; // 0x130(0x20)
	struct FGameplayTagContainer LegParticleTags; // 0x150(0x20)
	float MinImpulse; // 0x170(0x04)
	float MaxImpulse; // 0x174(0x04)
	bool bSpawnActorInstead; // 0x178(0x01)
	char pad_179[0x3]; // 0x179(0x03)
	float LegLifetime; // 0x17c(0x04)
};

// Class Phoenix.AblTransformIntoTask
// Size: 0x90 (Inherited: 0x70)
struct UAblTransformIntoTask : UAblAbilityTask {
	struct FString CreatureName; // 0x70(0x10)
	struct UAblAbility* CreatureSpawnAbility; // 0x80(0x08)
	bool bSetTransformedCreatureToWild; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.AblTransformIntoNoDeathScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblTransformIntoNoDeathScratchpad : UAblAbilityTaskScratchPad {
	struct AActor* SpawnedCreature; // 0x28(0x08)
};

// Class Phoenix.AblTransformIntoNoDeathTask
// Size: 0x88 (Inherited: 0x70)
struct UAblTransformIntoNoDeathTask : UAblAbilityTask {
	struct FString CreatureName; // 0x70(0x10)
	struct UAblAbility* CreatureSpawnAbility; // 0x80(0x08)
};

// Class Phoenix.AblRagdollForceToNavMeshTask
// Size: 0x78 (Inherited: 0x70)
struct UAblRagdollForceToNavMeshTask : UAblAbilityTask {
	float Force; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.AblDieOnNextImpactReactionScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblDieOnNextImpactReactionScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)

	void HandleActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.AblDieOnNextImpactReactionScratchpad.HandleActorHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x31b5050
};

// Class Phoenix.AblDieOnNextImpactReactionTask
// Size: 0x70 (Inherited: 0x70)
struct UAblDieOnNextImpactReactionTask : UAblAbilityTask {
};

// Class Phoenix.AblSetMaxHeightModifiersScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblSetMaxHeightModifiersScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> ConditionScratchpads; // 0x28(0x10)
};

// Class Phoenix.AblSetMaxHeightModifiersTask
// Size: 0x98 (Inherited: 0x70)
struct UAblSetMaxHeightModifiersTask : UAblAbilityTask {
	bool bEnableMaxHeightModifiers; // 0x70(0x01)
	bool bOverrideMaxHeightValue; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float OverrideMaxHeightValue; // 0x74(0x04)
	enum class EStandardManagedPriority Priority; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct TArray<struct UAblTaskCondition*> Conditions; // 0x80(0x10)
	bool bMustPassAllConditions; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.AblSetPheonixCharacterMovementModeScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblSetPheonixCharacterMovementModeScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblSetPhoenixCharacterMovementModeTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetPhoenixCharacterMovementModeTask : UAblAbilityTask {
	enum class EMovementMode MovementMode; // 0x70(0x01)
	enum class EManagedMovementModePriority Priority; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.ablNPC_TurnAssistImpulseTask
// Size: 0x80 (Inherited: 0x70)
struct UablNPC_TurnAssistImpulseTask : UAblAbilityTask {
	enum class ENPC_TurnAssistType TurnAssistType; // 0x70(0x01)
	bool bAllowFollow; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float RelativeAngle; // 0x74(0x04)
	enum class ENPC_TurnAssist TurnAssistMode; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.AblNPCTurnToTaskScratchPad
// Size: 0x70 (Inherited: 0x28)
struct UAblNPCTurnToTaskScratchPad : UAblAbilityTaskScratchPad {
	struct AActor* ActorToTrack; // 0x28(0x08)
	struct FRotator TargetRotation; // 0x30(0x0c)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FAlphaBlend TurningBlend; // 0x40(0x30)
};

// Class Phoenix.AblNPCTurnToTask
// Size: 0xc0 (Inherited: 0x70)
struct UAblNPCTurnToTask : UAblAbilityTask {
	enum class EAblNPCTurnToTaskDestination RotationTarget; // 0x70(0x01)
	bool bTrackTarget; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FRotator RotationOffset; // 0x74(0x0c)
	bool SetYaw; // 0x80(0x01)
	bool SetPitch; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct FAlphaBlend Blend; // 0x88(0x30)
	char pad_B8[0x8]; // 0xb8(0x08)
};

// Class Phoenix.AblNpcVulnerabilityScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblNpcVulnerabilityScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblNpcVulnerabilityTask
// Size: 0x78 (Inherited: 0x70)
struct UAblNpcVulnerabilityTask : UAblAbilityTask {
	bool bModifyVulnerabilityAtTaskStart; // 0x70(0x01)
	bool bVulnerabilityAtTaskStart; // 0x71(0x01)
	bool bModifyVulnerabilityAtTaskEnd; // 0x72(0x01)
	bool bVulnerabilityAtTaskEnd; // 0x73(0x01)
	bool bRestoreVulnerabilityAtTaskEnd; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// Class Phoenix.AblObjectArchitectTagChooser
// Size: 0x28 (Inherited: 0x28)
struct UAblObjectArchitectTagChooser : UObject {
};

// Class Phoenix.AblObjectArchitectTagChooser_EnemyClass
// Size: 0x28 (Inherited: 0x28)
struct UAblObjectArchitectTagChooser_EnemyClass : UAblObjectArchitectTagChooser {
};

// Class Phoenix.AblObjectArchitectTagChooser_EnemyFaction
// Size: 0x28 (Inherited: 0x28)
struct UAblObjectArchitectTagChooser_EnemyFaction : UAblObjectArchitectTagChooser {
};

// Class Phoenix.AblBranchConditionIsNearDeathKneeling
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsNearDeathKneeling : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIsDazed
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIsDazed : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionIfDead
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionIfDead : UAblBranchCondition {
};

// Class Phoenix.AblObjectStateBranchCondition
// Size: 0x38 (Inherited: 0x30)
struct UAblObjectStateBranchCondition : UAblBranchCondition {
	enum class EObjectStateBranchCondition ObjectStateBranchCondition; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblBranchConditionObjectStateScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionObjectStateScratchpad : UAblTaskConditionScratchpad {
	struct UObjectStateInfo* ObjectStateInfo; // 0x30(0x08)
};

// Class Phoenix.AblBranchConditionObjectState_New
// Size: 0x60 (Inherited: 0x28)
struct UAblBranchConditionObjectState_New : UAblTaskCondition {
	bool bCheckDeathState; // 0x28(0x01)
	enum class EObjectStateBranchCondition ObjectStateBranchCondition; // 0x29(0x01)
	bool bCheckDatabaseId; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
	struct TArray<struct FName> DatabaseIds; // 0x30(0x10)
	bool bCheckSubtypeId; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct TArray<struct FName> SubtypeIds; // 0x48(0x10)
	bool bInWater; // 0x58(0x01)
	bool bNotInWater; // 0x59(0x01)
	bool bInvert; // 0x5a(0x01)
	char pad_5B[0x5]; // 0x5b(0x05)
};

// Class Phoenix.AblObjectStateDropLootTask
// Size: 0x90 (Inherited: 0x70)
struct UAblObjectStateDropLootTask : UAblAbilityTask {
	bool bSpawnOnFloor; // 0x70(0x01)
	bool bApplyImpulse; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	struct FVector ImpulseDirection; // 0x74(0x0c)
	float ImpulseDirectionRandAngle; // 0x80(0x04)
	float MinImpulse; // 0x84(0x04)
	float MaxImpulse; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.AblObjectStateImpulseIgnoreTask
// Size: 0x78 (Inherited: 0x70)
struct UAblObjectStateImpulseIgnoreTask : UAblAbilityTask {
	bool bUseTaskDuration; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float ImpulseIgnoreDuration; // 0x74(0x04)
};

// Class Phoenix.AblOpportunityWindowTagTaskScratchPad
// Size: 0x68 (Inherited: 0x28)
struct UAblOpportunityWindowTagTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Phoenix.ablOpportunityWindowTagTask
// Size: 0xd0 (Inherited: 0x70)
struct UablOpportunityWindowTagTask : UAblAbilityTask {
	struct FName SpellName; // 0x70(0x08)
	struct FGameplayTagContainer CharacterTags; // 0x78(0x20)
	enum class ETagOperation TagOperation; // 0x98(0x01)
	bool RemoveTagsAtEndOfTask; // 0x99(0x01)
	bool bCheckDatabaseId; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
	struct TArray<struct FName> DatabaseIds; // 0xa0(0x10)
	bool bCheckSubtypeId; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct TArray<struct FName> SubtypeIds; // 0xb8(0x10)
	struct FGameplayTag DuelTechniqueEventTag; // 0xc8(0x08)
};

// Class Phoenix.AblOpportunityWindowTask_ModifyAOECastScratchPad
// Size: 0x70 (Inherited: 0x68)
struct UAblOpportunityWindowTask_ModifyAOECastScratchPad : UAblOpportunityWindowTagTaskScratchPad {
	char pad_68[0x8]; // 0x68(0x08)
};

// Class Phoenix.ablOpportunityWindowTask_ModifyAOECast
// Size: 0xd8 (Inherited: 0xd0)
struct UablOpportunityWindowTask_ModifyAOECast : UablOpportunityWindowTagTask {
	enum class EOpportunityType OpportunityType; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float RemainingLifeTime; // 0xd4(0x04)
};

// Class Phoenix.ablPhysicalBodyBlendTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UablPhysicalBodyBlendTaskScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.ablPhysicalBodyBlendTask
// Size: 0x90 (Inherited: 0x70)
struct UablPhysicalBodyBlendTask : UAblAbilityTask {
	struct TArray<struct FPhysicalBodyNameWeightPair> PerBoneBlendWeights; // 0x70(0x10)
	float BlendInTime; // 0x80(0x04)
	enum class EAlphaBlendOption BlendInOption; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	float BlendOutTime; // 0x88(0x04)
	enum class EAlphaBlendOption BlendOutOption; // 0x8c(0x01)
	bool bContinous; // 0x8d(0x01)
	char pad_8E[0x2]; // 0x8e(0x02)
};

// Class Phoenix.AblPhysicalReactionTask
// Size: 0x88 (Inherited: 0x70)
struct UAblPhysicalReactionTask : UAblAbilityTask {
	enum class EPhysicalReactionTaskAction Action; // 0x70(0x01)
	enum class EImpactReactionStrength ReactionStrength; // 0x71(0x01)
	bool bBlendBackOnTaskEnd; // 0x72(0x01)
	enum class ERagdollDrivingSetting SetPoseDrivingMode; // 0x73(0x01)
	enum class ERagdollPoseDrivingMode PoseDrivingMode; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float PoseDrivingBlendDuration; // 0x78(0x04)
	bool bSetCenterOfMassDrivingModes; // 0x7c(0x01)
	enum class ERagdollCOMLocationDrivingMode LocationDrivingMode; // 0x7d(0x01)
	enum class ERagdollCOMRotationDrivingMode RotationDrivingMode; // 0x7e(0x01)
	bool bEnableCcd; // 0x7f(0x01)
	float CcdTime; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.AblPhysicalReactionBlendBackTask
// Size: 0x80 (Inherited: 0x70)
struct UAblPhysicalReactionBlendBackTask : UAblAbilityTask {
	bool bForcePopOutOfRagdollImmediately; // 0x70(0x01)
	bool bOverrideBlendDuration; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float BlendDurationOverride; // 0x74(0x04)
	bool bStationaryCapsuleWhileBlending; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.AblPhysicalReactionCOMVelocityTask
// Size: 0x80 (Inherited: 0x70)
struct UAblPhysicalReactionCOMVelocityTask : UAblAbilityTask {
	enum class EAblNpcReactCapsuleImpulseVelocitySource VelocitySource; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float Magnitude; // 0x74(0x04)
	float Angle; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.AblPhysicalReactionConstraintContextTask
// Size: 0x78 (Inherited: 0x70)
struct UAblPhysicalReactionConstraintContextTask : UAblAbilityTask {
	struct FName ConstraintContext; // 0x70(0x08)
};

// Class Phoenix.AblPlayDialogTaskScratchPad
// Size: 0x40 (Inherited: 0x28)
struct UAblPlayDialogTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct TWeakObjectPtr<struct UAudioComponent>> AttachedDialogs; // 0x28(0x10)
	int32_t DialogEventId; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblPlayDialogTask
// Size: 0xf0 (Inherited: 0x70)
struct UAblPlayDialogTask : UAblAbilityTask {
	struct FDialogueConversationReference DialogEventReference; // 0x70(0x10)
	struct UAvaAudioDialogueEvent* DialogEvent; // 0x80(0x08)
	struct FName EventName; // 0x88(0x08)
	struct FAudioDialogueFlags AudioDialogueFlags; // 0x90(0x07)
	bool bStopWhenAttachedToDestroyed; // 0x97(0x01)
	bool bStopDialogueOnEndTask; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct TSet<struct FName> AllowedSubtypeIDs; // 0xa0(0x50)
};

// Class Phoenix.AblPlayMultiFxAssetBaseTask
// Size: 0xa0 (Inherited: 0x70)
struct UAblPlayMultiFxAssetBaseTask : UAblAbilityTask {
	struct FVector Location; // 0x70(0x0c)
	struct FRotator Rotation; // 0x7c(0x0c)
	struct FName AttachPointName; // 0x88(0x08)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x90(0x10)
};

// Class Phoenix.AblPlayObjectArchitectMultiFxAssetTask
// Size: 0xd0 (Inherited: 0xa0)
struct UAblPlayObjectArchitectMultiFxAssetTask : UAblPlayMultiFxAssetBaseTask {
	struct FGameplayTagContainer BaseObjectArchitectTags; // 0xa0(0x20)
	struct TArray<struct UAblObjectArchitectTagChooser*> TagChoosers; // 0xc0(0x10)
};

// Class Phoenix.AblPlayMultiFxAssetNpcTask
// Size: 0xd0 (Inherited: 0xd0)
struct UAblPlayMultiFxAssetNpcTask : UAblPlayObjectArchitectMultiFxAssetTask {
};

// Class Phoenix.AblPlayMultiFxAssetScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblPlayMultiFxAssetScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.AblPlayMultiFxAssetTask
// Size: 0xa8 (Inherited: 0xa0)
struct UAblPlayMultiFxAssetTask : UAblPlayMultiFxAssetBaseTask {
	struct UMultiFX2Asset* FXAsset; // 0xa0(0x08)
};

// Class Phoenix.AblPlayMultiFxScratchpad
// Size: 0x58 (Inherited: 0x28)
struct UAblPlayMultiFxScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x30(0x10)
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Phoenix.AblPlayMultiFxTask
// Size: 0xd0 (Inherited: 0x70)
struct UAblPlayMultiFxTask : UAblAbilityTask {
	struct FName MultiFXHandleName; // 0x70(0x08)
	struct TArray<struct UMultiFX2_Base*> FX; // 0x78(0x10)
	struct FVector Location; // 0x88(0x0c)
	struct FRotator Rotation; // 0x94(0x0c)
	struct FName AttachPointName; // 0xa0(0x08)
	bool bShutdownPreviousEffect; // 0xa8(0x01)
	bool bDeactivateOnTaskEnd; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0xb0(0x10)
	struct TArray<struct FAblMultiFxChildTask> ChildTasks; // 0xc0(0x10)
};

// Class Phoenix.AblPlayObjectArchitectVfxWithRandomTraitsTask
// Size: 0x140 (Inherited: 0xc8)
struct UAblPlayObjectArchitectVfxWithRandomTraitsTask : UAblPlayObjectArchitectVfxTaskBase {
	struct FVector LocationMin; // 0xc8(0x0c)
	struct FVector LocationMax; // 0xd4(0x0c)
	struct FRotator RotationMin; // 0xe0(0x0c)
	struct FRotator RotationMax; // 0xec(0x0c)
	struct FVector ScaleMin; // 0xf8(0x0c)
	struct FVector ScaleMax; // 0x104(0x0c)
	float LifeSpanMin; // 0x110(0x04)
	float LifeSpanMax; // 0x114(0x04)
	float FadeInTimeMin; // 0x118(0x04)
	float FadeInTimeMax; // 0x11c(0x04)
	float FadeOutTimeMin; // 0x120(0x04)
	float FadeOutTimeMax; // 0x124(0x04)
	struct FVector DecalSizeMin; // 0x128(0x0c)
	struct FVector DecalSizeMax; // 0x134(0x0c)
};

// Class Phoenix.AblPlayPostAkEventScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UAblPlayPostAkEventScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblPlayPostAkEvent
// Size: 0x90 (Inherited: 0x70)
struct UAblPlayPostAkEvent : UAblAbilityTask {
	struct UAkAudioEvent* AkEvent; // 0x70(0x08)
	struct FName EventName; // 0x78(0x08)
	bool bStopWhenAttachedToDestroyed; // 0x80(0x01)
	bool bPlayerOnly; // 0x81(0x01)
	bool bPlayerInstigationOnly; // 0x82(0x01)
	char pad_83[0x5]; // 0x83(0x05)
	struct UAkAudioEvent* EventToPostOnTaskEnd; // 0x88(0x08)
};

// Class Phoenix.AblPostAccessibilityAudioCueTask
// Size: 0x78 (Inherited: 0x70)
struct UAblPostAccessibilityAudioCueTask : UAblAbilityTask {
	enum class EAccessibilityAudioCueEventType AudioCueEventType; // 0x70(0x01)
	bool bOneShot; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.ablPreStartMoveBodyLeanTask
// Size: 0x80 (Inherited: 0x70)
struct UablPreStartMoveBodyLeanTask : UAblAbilityTask {
	struct FName PlayOnChannel; // 0x70(0x08)
	struct UObject* BodyLeanAbilityClass; // 0x78(0x08)
};

// Class Phoenix.AblPushAwayFromInstigatorScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblPushAwayFromInstigatorScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblPushAwayFromInstigatorTask
// Size: 0x80 (Inherited: 0x70)
struct UAblPushAwayFromInstigatorTask : UAblAbilityTask {
	float Distance; // 0x70(0x04)
	float Speed; // 0x74(0x04)
	bool bContinuousDistanceCheck; // 0x78(0x01)
	bool bIncludeCapsuleSizeInDistanceCheck; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.AblRagdollBehaviorChangedConditionScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblRagdollBehaviorChangedConditionScratchpad : UAblTaskConditionScratchpad {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Phoenix.AblRagdollBehaviorChangedBranchCondition
// Size: 0x28 (Inherited: 0x28)
struct UAblRagdollBehaviorChangedBranchCondition : UAblTaskCondition {
};

// Class Phoenix.AblHasRagdollBehaviorBranchCondition
// Size: 0x28 (Inherited: 0x28)
struct UAblHasRagdollBehaviorBranchCondition : UAblTaskCondition {
};

// Class Phoenix.AblRagdollControlCompConditionScratchpad
// Size: 0x40 (Inherited: 0x30)
struct UAblRagdollControlCompConditionScratchpad : UAblTaskConditionScratchpad {
	struct URagdollControlComponent* RagdollControlComp; // 0x30(0x08)
	struct UIcarus3DMovementComponent* FlightMovementComp; // 0x38(0x08)
};

// Class Phoenix.AblCanRagdollRecoverBranchCondition
// Size: 0x30 (Inherited: 0x28)
struct UAblCanRagdollRecoverBranchCondition : UAblTaskCondition {
	bool bCheckForRecoverOnGround; // 0x28(0x01)
	bool bCheckForRecoverInWater; // 0x29(0x01)
	bool bCheckForRecoverInAir; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
};

// Class Phoenix.AblRagdollReactionAbility
// Size: 0xe0 (Inherited: 0xe0)
struct UAblRagdollReactionAbility : UAblReactionAbility {
};

// Class Phoenix.AblBranchConditionReactionEnded
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchConditionReactionEnded : UAblBranchCondition {
};

// Class Phoenix.AblBranchConditionReactionEndingScratchpad
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionReactionEndingScratchpad : UAblTaskConditionScratchpad {
	struct UAblReactionComponent* ReactionComp; // 0x30(0x08)
	struct UAblReactionData* ReactionData; // 0x38(0x08)
};

// Class Phoenix.AblBranchConditionReactionEnding_New
// Size: 0x28 (Inherited: 0x28)
struct UAblBranchConditionReactionEnding_New : UAblTaskCondition {
};

// Class Phoenix.AblBranchConditionReactionDataScratchpad
// Size: 0x38 (Inherited: 0x30)
struct UAblBranchConditionReactionDataScratchpad : UAblTaskConditionScratchpad {
	struct TWeakObjectPtr<struct UNPC_ReactionComponent> ReactionComp; // 0x30(0x08)
};

// Class Phoenix.AblTaskCondition_ReactionData
// Size: 0x78 (Inherited: 0x28)
struct UAblTaskCondition_ReactionData : UAblTaskCondition {
	bool bCompareImpactDirectionWithActorForward; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float ImpactDotForwardMin; // 0x2c(0x04)
	float ImpactDotForwardMax; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FGameplayTagContainer RequiredMunitionTags; // 0x38(0x20)
	struct FGameplayTagContainer UnallowedMunitionTags; // 0x58(0x20)
};

// Class Phoenix.AblReactionPlayMultiFxTask
// Size: 0xd8 (Inherited: 0xd0)
struct UAblReactionPlayMultiFxTask : UAblPlayMultiFxTask {
	enum class EReactionPlayMultiFxTaskType ReactionInfoType; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
};

// Class Phoenix.AblReactionSyncPointUpdaterScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblReactionSyncPointUpdaterScratchpad : UAblAvaMotionWarpSyncPointUpdaterScratchpad {
};

// Class Phoenix.AblReactionSyncPointUpdater
// Size: 0x38 (Inherited: 0x28)
struct UAblReactionSyncPointUpdater : UAblAvaMotionWarpSyncPointUpdater {
	enum class EReactionLocationSyncPointType LocationType; // 0x28(0x01)
	enum class EReactionRotationSyncPointType RotationType; // 0x29(0x01)
	char pad_2A[0x2]; // 0x2a(0x02)
	struct FVector LocationOffset; // 0x2c(0x0c)
};

// Class Phoenix.AblReactionsCapsuleScalingScratchpad
// Size: 0x88 (Inherited: 0x28)
struct UAblReactionsCapsuleScalingScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x60]; // 0x28(0x60)
};

// Class Phoenix.AblReactionsCapsuleScalingTask
// Size: 0xb0 (Inherited: 0x70)
struct UAblReactionsCapsuleScalingTask : UAblAbilityTask {
	bool bUseHeightAsRadius; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float RadiusMultiplier; // 0x74(0x04)
	float HalfHeightMultiplier; // 0x78(0x04)
	bool bRestoreAtEndTask; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	struct FAlphaBlend BlendTime; // 0x80(0x30)
};

// Class Phoenix.AblReactionsEndComboTask
// Size: 0x70 (Inherited: 0x70)
struct UAblReactionsEndComboTask : UAblAbilityTask {
};

// Class Phoenix.AblReactionsDamageTask
// Size: 0xa0 (Inherited: 0x70)
struct UAblReactionsDamageTask : UAblAbilityTask {
	bool bUseTagsFromReactionData; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FGameplayTagContainer AdditionalGameplayTags; // 0x78(0x20)
	float Damage; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.AblReactionSpecialEffectTask
// Size: 0x80 (Inherited: 0x70)
struct UAblReactionSpecialEffectTask : UAblAbilityTask {
	struct FGameplayTag SpecialEffectTag; // 0x70(0x08)
	float Duration; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.ablRepresentInventoryItemTaskScratchPad
// Size: 0x138 (Inherited: 0x28)
struct UablRepresentInventoryItemTaskScratchPad : UAblAbilityTaskScratchPad {
	struct ABiped_Player* BipedPlayer; // 0x28(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x30(0x08)
	struct AActor* SpawnedActor; // 0x38(0x08)
	struct FInventoryResult InventoryResult; // 0x40(0x88)
	struct FItemProperties ItemProperties; // 0xc8(0x6c)
	char pad_134[0x4]; // 0x134(0x04)
};

// Class Phoenix.ablRepresentInventoryItemTask
// Size: 0xa8 (Inherited: 0x70)
struct UablRepresentInventoryItemTask : UAblAbilityTask {
	struct AActor* SpawnClass; // 0x70(0x08)
	struct AActor* TemplateClass; // 0x78(0x08)
	struct AMunitionType_Base* MunitionTemplateClass; // 0x80(0x08)
	struct FVector Scale; // 0x88(0x0c)
	struct FName AttachSocket; // 0x94(0x08)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UCurveFloat* AlphaCurve; // 0xa0(0x08)
};

// Class Phoenix.RootMotionModifier_ButtSlide
// Size: 0x60 (Inherited: 0x50)
struct URootMotionModifier_ButtSlide : URootMotionModifier {
	struct FVector LastVelocity; // 0x50(0x0c)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.RootMotionModifierProperties_ButtSlide
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_ButtSlide : URootMotionModifierProperties {
	float DownwardForce; // 0x30(0x04)
	float Friction; // 0x34(0x04)
	enum class ECustomInterpType RotationInterpType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float RotationInterpSpeed; // 0x3c(0x04)
};

// Class Phoenix.RootMotionModifier_CharacterScale
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_CharacterScale : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_CharacterScale
// Size: 0x30 (Inherited: 0x30)
struct URootMotionModifierProperties_CharacterScale : URootMotionModifierProperties {
};

// Class Phoenix.RootMotionModifier_DodgeDuckAssist
// Size: 0x68 (Inherited: 0x50)
struct URootMotionModifier_DodgeDuckAssist : URootMotionModifier {
	struct FVector DesiredFacingDirection; // 0x50(0x0c)
	float AngleOffset; // 0x5c(0x04)
	float YawRecovery; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_DodgeDuckAssist.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31bd9e0
};

// Class Phoenix.RootMotionModifierProperties_DodgeDuckAssist
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_DodgeDuckAssist : URootMotionModifierProperties {
	bool bInstantRecovery; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float YawRecoverySpeed; // 0x34(0x04)
	float TurnAssistSpeed; // 0x38(0x04)
	enum class ECustomInterpType TurnAssistType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Phoenix.RootMotionModifier_DodgeRoll
// Size: 0xb0 (Inherited: 0x50)
struct URootMotionModifier_DodgeRoll : URootMotionModifier {
	char pad_50[0x60]; // 0x50(0x60)
};

// Class Phoenix.RootMotionModifierProperties_DodgeRoll
// Size: 0x60 (Inherited: 0x30)
struct URootMotionModifierProperties_DodgeRoll : URootMotionModifierProperties {
	bool bShadowBlink; // 0x30(0x01)
	bool bShadowBlinkWithTarget; // 0x31(0x01)
	enum class ECustomInterpType TurnToFaceInterpType; // 0x32(0x01)
	char pad_33[0x1]; // 0x33(0x01)
	float TurnToFaceInterpSpeed; // 0x34(0x04)
	float TurnToFaceInterpTime; // 0x38(0x04)
	enum class ECustomInterpType RotationInterpType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float RotationInterpSpeed; // 0x40(0x04)
	float RotationInterpTime; // 0x44(0x04)
	float TranslationMultiplier; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UCurveFloat* TranslationMultiplierCurve; // 0x50(0x08)
	float BlinkSpeed; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.RootMotionModifier_Dueling
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_Dueling : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_Dueling
// Size: 0x38 (Inherited: 0x30)
struct URootMotionModifierProperties_Dueling : URootMotionModifierProperties {
	float HorizontalRootMotionAmount; // 0x30(0x04)
	float VerticalRootMotionAmount; // 0x34(0x04)
};

// Class Phoenix.RootMotionModifier_EdgeCheck
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_EdgeCheck : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_EdgeCheck
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_EdgeCheck : URootMotionModifierProperties {
	float DetectMaxDistance; // 0x30(0x04)
	float ComputeEdgeAtThreshhold; // 0x34(0x04)
	float TraceRadius; // 0x38(0x04)
	bool bDebugDraw; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float SafeDistanceFromEdge; // 0x40(0x04)
	float EdgeOffsetSpeed; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_FacingAssist
// Size: 0x80 (Inherited: 0x50)
struct URootMotionModifier_FacingAssist : URootMotionModifier {
	struct FVector StartDirection; // 0x50(0x0c)
	struct FVector CurrentDirection; // 0x5c(0x0c)
	struct FVector DesiredDirection; // 0x68(0x0c)
	float StartHeading; // 0x74(0x04)
	float ElapsedTime; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_FacingAssist.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31bdb10
};

// Class Phoenix.RootMotionModifierProperties_FacingAssist
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_FacingAssist : URootMotionModifierProperties {
	enum class ERootMotionModTurnAssistUseDirection UseDirection; // 0x30(0x01)
	bool bFaceNegativeDirectionIfCloser; // 0x31(0x01)
	bool bIgnoreTargetTracker; // 0x32(0x01)
	bool bAllowDesiredDirectionUpdates; // 0x33(0x01)
	bool bRotateRootTranslationIntoDesiredDirection; // 0x34(0x01)
	enum class ECustomInterpType InterpType; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float InterpSpeed; // 0x38(0x04)
	float InterpTime; // 0x3c(0x04)
	bool bDebug; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.RootMotionModifier_FallingAssist
// Size: 0x60 (Inherited: 0x50)
struct URootMotionModifier_FallingAssist : URootMotionModifier {
	struct FVector CurrentVelocityXZ; // 0x50(0x0c)
	float ElapsedTime; // 0x5c(0x04)
};

// Class Phoenix.RootMotionModifierProperties_FallingAssist
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_FallingAssist : URootMotionModifierProperties {
	float MinSpeed; // 0x30(0x04)
	float MaxSpeed; // 0x34(0x04)
	float InterpToZero; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.RootMotionModifier_FastTravelPort
// Size: 0x78 (Inherited: 0x50)
struct URootMotionModifier_FastTravelPort : URootMotionModifier {
	struct TArray<struct TWeakObjectPtr<struct USceneComponent>> TravelerComponents; // 0x50(0x10)
	struct TArray<struct TWeakObjectPtr<struct USceneComponent>> PortalComponents; // 0x60(0x10)
	float ElapsedTime; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.RootMotionModifierProperties_FastTravelPort
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_FastTravelPort : URootMotionModifierProperties {
	bool bAllowYawRotation; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float YawToTargetThreshold; // 0x34(0x04)
	float TimeToRotateToTarget; // 0x38(0x04)
	bool bAllowTranslation; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float TimeToTranslateToTarget; // 0x40(0x04)
	bool bDebug; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Phoenix.RootMotionModifier_FollowSpline
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifier_FollowSpline : URootMotionModifier {
	float Speed; // 0x50(0x04)
	float InitialMaxOffsetRadius; // 0x54(0x04)
};

// Class Phoenix.RootMotionModifierProperties_FollowSpline
// Size: 0x60 (Inherited: 0x30)
struct URootMotionModifierProperties_FollowSpline : URootMotionModifierProperties {
	float StartSpeed; // 0x30(0x04)
	bool bUseActualSpeedAsStartSpeed; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float Acceleration; // 0x38(0x04)
	float MinSpeed; // 0x3c(0x04)
	float MaxSpeed; // 0x40(0x04)
	float RotationSpeed; // 0x44(0x04)
	float MaxOffsetRadius; // 0x48(0x04)
	float HoritzontalSpeed; // 0x4c(0x04)
	struct FBTCustomAction SendActionAtEndOfSpline; // 0x50(0x0c)
	bool bDebug; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class Phoenix.RootMotionModProperties_Interact
// Size: 0x50 (Inherited: 0x28)
struct URootMotionModProperties_Interact : UObject {
	enum class EInteractTurnToFaceRules TurnToFaceRule; // 0x28(0x01)
	enum class EInteractUseTargetAxis UseTargetAxisForFacing; // 0x29(0x01)
	enum class ECustomInterpType RotateInterpType; // 0x2a(0x01)
	char pad_2B[0x1]; // 0x2b(0x01)
	float RotateInterpSpeed; // 0x2c(0x04)
	float RotateInterpTime; // 0x30(0x04)
	enum class EInteractOffsetRules OffsetRule; // 0x34(0x01)
	enum class EInteractUseTargetAxis UseTargetAxisForOffset; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float MinOffset; // 0x38(0x04)
	float MaxOffset; // 0x3c(0x04)
	enum class ECustomInterpType OffsetInterpType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float OffsetInterpSpeed; // 0x44(0x04)
	float OffsetInterpTime; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.RootMotionModifier_Interact
// Size: 0x80 (Inherited: 0x50)
struct URootMotionModifier_Interact : URootMotionModifier {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Phoenix.RootMotionModifierProperties_Interact
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_Interact : URootMotionModifierProperties {
	enum class EInteractUseTargetTracker UseTargetTracker; // 0x30(0x01)
	bool bUseActorFromTracker; // 0x31(0x01)
	enum class ETargetID SpecificTargetID; // 0x32(0x01)
	char pad_33[0x5]; // 0x33(0x05)
	struct URootMotionModProperties_Interact* Properties; // 0x38(0x08)
};

// Class Phoenix.RootMotionModifier_InterpToForwardSpeed
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifier_InterpToForwardSpeed : URootMotionModifier {
	float CurrentSpeed; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.RootMotionModifierProperties_InterpToForwardSpeed
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_InterpToForwardSpeed : URootMotionModifierProperties {
	enum class ERootMotModDesiredSpeed DesiredSpeedState; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float DesiredSpeed; // 0x34(0x04)
	float MinSpeed; // 0x38(0x04)
	float MaxSpeed; // 0x3c(0x04)
	float InterpSpeed; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_InterpToStop
// Size: 0x68 (Inherited: 0x50)
struct URootMotionModifier_InterpToStop : URootMotionModifier {
	float StartSpeed; // 0x50(0x04)
	float CurrentSpeed; // 0x54(0x04)
	float InterpTime; // 0x58(0x04)
	char pad_5C[0xc]; // 0x5c(0x0c)
};

// Class Phoenix.RootMotionModifierProperties_InterpToStop
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_InterpToStop : URootMotionModifierProperties {
	enum class ECustomInterpType ToStopInterpType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float ToStopInterpSpeed; // 0x34(0x04)
	float ToStopTotalTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.RootMotionModifier_JumpControl
// Size: 0x70 (Inherited: 0x50)
struct URootMotionModifier_JumpControl : URootMotionModifier {
	char pad_50[0x20]; // 0x50(0x20)
};

// Class Phoenix.RootMotionModifierProperties_JumpControl
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_JumpControl : URootMotionModifierProperties {
	float InitialSpeed; // 0x30(0x04)
	float MaxSpeed; // 0x34(0x04)
	float AccelerationInterpSpeed; // 0x38(0x04)
	float BrakingInterpSpeed; // 0x3c(0x04)
	enum class EJumpControlType JumpControlType; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float BlendInTime; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_JumpNudge
// Size: 0x98 (Inherited: 0x50)
struct URootMotionModifier_JumpNudge : URootMotionModifier {
	char pad_50[0x48]; // 0x50(0x48)
};

// Class Phoenix.RootMotionModifierProperties_JumpNudge
// Size: 0x90 (Inherited: 0x30)
struct URootMotionModifierProperties_JumpNudge : URootMotionModifierProperties {
	float TimeWhenPlayerCanChangeJumpType; // 0x30(0x04)
	enum class ECustomInterpType TurnToFaceInterpType; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float TurnToFaceInterpSpeed; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UCurveFloat* DeadZoneCurve; // 0x40(0x08)
	struct FVector2D MaxStrafeSpeed; // 0x48(0x08)
	enum class ECustomInterpType StrafeInterpType; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float StrafeInterpSpeed; // 0x54(0x04)
	enum class ECustomInterpType StrafeRotationInterpType; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	float StrafeRotationInterpSpeed; // 0x5c(0x04)
	enum class ECustomInterpType StrafeTranslationInterpType; // 0x60(0x01)
	char pad_61[0x3]; // 0x61(0x03)
	float StrafeTranslationInterpSpeed; // 0x64(0x04)
	enum class ECustomInterpType ShortJumpRotationInterpType; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float ShortJumpRotationInterpSpeed; // 0x6c(0x04)
	enum class ECustomInterpType LongJumpRotationInterpType; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float LongJumpRotationInterpSpeed; // 0x74(0x04)
	float LongJumpMinStickPercentage; // 0x78(0x04)
	float LongJumpPullBackOnStickPercentage; // 0x7c(0x04)
	enum class ECustomInterpType SprintJumpRotationInterpType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float SprintJumpRotationInterpSpeed; // 0x84(0x04)
	float SprintJumpMinStickPercentage; // 0x88(0x04)
	float SprintJumpPullBackOnStickPercentage; // 0x8c(0x04)
};

// Class Phoenix.RootMotionModifier_Move
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifier_Move : URootMotionModifier {
	float StartingSpeed; // 0x50(0x04)
	float ElapsedTime; // 0x54(0x04)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_Move.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31c1840
	void CharacterRotatedBySupport(struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_Move.CharacterRotatedBySupport // (Final|Native|Public|HasDefaults) // @ game+0x31c1690
};

// Class Phoenix.RootMotionModifierProperties_Move
// Size: 0x50 (Inherited: 0x30)
struct URootMotionModifierProperties_Move : URootMotionModifierProperties {
	enum class EMoveDirectionRule MoveDirectionRule; // 0x30(0x01)
	enum class EMoveMinSpeedRule MoveMinSpeedRule; // 0x31(0x01)
	enum class EMoveMaxSpeedRule MoveMaxSpeedRule; // 0x32(0x01)
	enum class EMoveInterpRule MoveInterpRule; // 0x33(0x01)
	bool bNegateDirection; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float FixedMinSpeed; // 0x38(0x04)
	float FixedMaxSpeed; // 0x3c(0x04)
	float InterpSpeed; // 0x40(0x04)
	bool bOverrideWalkSpeed; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	float WalkSpeedOverride; // 0x48(0x04)
	bool bEnabled; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
};

// Class Phoenix.RootMotionModifier_Multiplier
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_Multiplier : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_Multiplier
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_Multiplier : URootMotionModifierProperties {
	enum class EMultiplierType MultiplyType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float XAxis_Multiplier; // 0x34(0x04)
	float YAxis_Multiplier; // 0x38(0x04)
	float ZAxis_Multiplier; // 0x3c(0x04)
	float Multiplier; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_NPCFollowSpline
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifier_NPCFollowSpline : URootMotionModifier {
	float Speed; // 0x50(0x04)
	float InitialMaxOffsetRadius; // 0x54(0x04)
};

// Class Phoenix.RootMotionModifierProperties_NPCFollowSpline
// Size: 0x60 (Inherited: 0x30)
struct URootMotionModifierProperties_NPCFollowSpline : URootMotionModifierProperties {
	float StartSpeed; // 0x30(0x04)
	bool bUseActualSpeedAsStartSpeed; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float Acceleration; // 0x38(0x04)
	float MinSpeed; // 0x3c(0x04)
	float MaxSpeed; // 0x40(0x04)
	float RotationSpeed; // 0x44(0x04)
	float MaxOffsetRadius; // 0x48(0x04)
	float HoritzontalSpeed; // 0x4c(0x04)
	struct FBTCustomAction SendActionAtEndOfSpline; // 0x50(0x0c)
	bool bDebug; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class Phoenix.RootMotionModifier_NPCMobilityTurnAssist
// Size: 0x80 (Inherited: 0x50)
struct URootMotionModifier_NPCMobilityTurnAssist : URootMotionModifier {
	struct FVector RootMotionRotationDirection; // 0x50(0x0c)
	struct FVector RootMotionTranslationDirection; // 0x5c(0x0c)
	float ElapsedTime; // 0x68(0x04)
	struct FVector TranslateVec; // 0x6c(0x0c)
	bool bApplyTranslateVec; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_NPCMobilityTurnAssist.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31c1920
	void CharacterRotatedBySupport(struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_NPCMobilityTurnAssist.CharacterRotatedBySupport // (Final|Native|Public|HasDefaults) // @ game+0x31c1720
};

// Class Phoenix.RootMotionModifierProperties_NPCMobilityTurnAssist
// Size: 0x38 (Inherited: 0x30)
struct URootMotionModifierProperties_NPCMobilityTurnAssist : URootMotionModifierProperties {
	enum class ENPC_TurnAssist TurnAssistMode; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.RootMotionModifier_NPCStrafe
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_NPCStrafe : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_NPCStrafe
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_NPCStrafe : URootMotionModifierProperties {
	struct TArray<struct FDbSingleColumnInfo> SubtypeIds; // 0x30(0x10)
};

// Class Phoenix.RootMotionModifier_ScaleZToPlayer
// Size: 0x68 (Inherited: 0x50)
struct URootMotionModifier_ScaleZToPlayer : URootMotionModifier {
	char pad_50[0x18]; // 0x50(0x18)
};

// Class Phoenix.RootMotionModifierProperties_ScaleZToPlayer
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_ScaleZToPlayer : URootMotionModifierProperties {
	struct USkeletalMesh* SkeletalMesh; // 0x30(0x08)
	struct FName BoneName; // 0x38(0x08)
};

// Class Phoenix.RootMotionModifier_Shuffle
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_Shuffle : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_Shuffle
// Size: 0x30 (Inherited: 0x30)
struct URootMotionModifierProperties_Shuffle : URootMotionModifierProperties {
};

// Class Phoenix.RootMotionModifier_Slide
// Size: 0x60 (Inherited: 0x50)
struct URootMotionModifier_Slide : URootMotionModifier {
	struct FVector CurrentVelocity; // 0x50(0x0c)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.RootMotionModifierProperties_Slide
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_Slide : URootMotionModifierProperties {
	float DesiredSlopeSpeed; // 0x30(0x04)
	enum class ECustomInterpType SlopeVelocityInterpType; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float SlopeVelocityInterpSpeed; // 0x38(0x04)
	enum class ECustomInterpType ToFlatGroundInterpType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float ToFlatGroundInterpSpeed; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_StopAtEdge
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_StopAtEdge : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_StopAtEdge
// Size: 0x40 (Inherited: 0x30)
struct URootMotionModifierProperties_StopAtEdge : URootMotionModifierProperties {
	float TraceStartUp; // 0x30(0x04)
	float TraceEndDown; // 0x34(0x04)
	float DesiredDistanceFromEdge; // 0x38(0x04)
	bool bDebug; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Phoenix.RootMotionModifier_Strafe
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifier_Strafe : URootMotionModifier {
	float ElapsedTime; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_Strafe.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31c1840
	void CharacterRotatedBySupport(struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_Strafe.CharacterRotatedBySupport // (Final|Native|Public|HasDefaults) // @ game+0x31c1690
};

// Class Phoenix.RootMotionModifierProperties_Strafe
// Size: 0x38 (Inherited: 0x30)
struct URootMotionModifierProperties_Strafe : URootMotionModifierProperties {
	float Acceleration; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.RootMotionModifier_TargetTracker
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_TargetTracker : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_TargetTracker
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_TargetTracker : URootMotionModifierProperties {
	enum class ERootMotionModTargetType TargetType; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FVector Offset; // 0x34(0x0c)
	bool bGetActorFromTracker; // 0x40(0x01)
	enum class ETargetID GetActorFromTargetID; // 0x41(0x01)
	enum class ECustomInterpType InterpType; // 0x42(0x01)
	char pad_43[0x1]; // 0x43(0x01)
	float InterpSpeed; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_Telescope
// Size: 0x80 (Inherited: 0x50)
struct URootMotionModifier_Telescope : URootMotionModifier {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Phoenix.RootMotionModifierProperties_Telescope
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_Telescope : URootMotionModifierProperties {
	struct FVector Offset; // 0x30(0x0c)
	enum class ECustomInterpType InterpType; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float InterpSpeed; // 0x40(0x04)
	float InterpTime; // 0x44(0x04)
};

// Class Phoenix.RootMotionModifier_TurnAssist
// Size: 0xd8 (Inherited: 0x50)
struct URootMotionModifier_TurnAssist : URootMotionModifier {
	struct FVector CurrentDirection; // 0x50(0x0c)
	struct FVector TargetDirection; // 0x5c(0x0c)
	struct FVector DesiredDirection; // 0x68(0x0c)
	struct FVector RootMotionRotationDirection; // 0x74(0x0c)
	struct FVector RootMotionTranslationDirection; // 0x80(0x0c)
	float RootYawRemaining; // 0x8c(0x04)
	float RootYawOffset; // 0x90(0x04)
	float RootYawSampleTime; // 0x94(0x04)
	bool bRootYawRemainingInitialized; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ElapsedTime; // 0x9c(0x04)
	float ScaledElapsedTime; // 0xa0(0x04)
	bool bValidFacingTargets; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	struct FVector TestVector; // 0xa8(0x0c)
	char pad_B4[0x24]; // 0xb4(0x24)

	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_TurnAssist.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x31c1a00
	void CharacterRotatedBySupport(struct FRotator AmountRotated); // Function Phoenix.RootMotionModifier_TurnAssist.CharacterRotatedBySupport // (Final|Native|Public|HasDefaults) // @ game+0x31c17b0
};

// Class Phoenix.RootMotionModifierProperties_TurnAssist
// Size: 0x98 (Inherited: 0x30)
struct URootMotionModifierProperties_TurnAssist : URootMotionModifierProperties {
	enum class ERootMotionModTurnAssistUseDirection UseDirection; // 0x30(0x01)
	enum class ERootMotionModTurnAssistMethod UseMethod; // 0x31(0x01)
	enum class ECustomInterpType RotationInterpType; // 0x32(0x01)
	char pad_33[0x1]; // 0x33(0x01)
	float RegularSpeedRotationInterpSpeed; // 0x34(0x04)
	bool bScaleRotationBasedOnSpeed; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float LowSpeedRotationInterpSpeed; // 0x3c(0x04)
	struct FVector2D SpeedRange; // 0x40(0x08)
	float SpringHalflife; // 0x48(0x04)
	float SpringLowSpeedHalflifeMultiplier; // 0x4c(0x04)
	bool bAdjustTranslationBasedOnTurn; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FVector2D TranslationAdjustAngleRange; // 0x54(0x08)
	float TranslationAdjustMinMultiplier; // 0x5c(0x04)
	bool bUseFixedDirection; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
	struct UCurveFloat* TurnAssistCurve; // 0x68(0x08)
	struct UCurveFloat* TurnAssistTimeMultiplier; // 0x70(0x08)
	float MinRotationScaleBasedOnSpeed; // 0x78(0x04)
	struct FVector2D AllowedRangeFromFallLine; // 0x7c(0x08)
	bool bIgnoreTargetTracker; // 0x84(0x01)
	bool bAllowDesiredDirectionUpdates; // 0x85(0x01)
	char pad_86[0x2]; // 0x86(0x02)
	float DesiredDirectionUpdateDuration; // 0x88(0x04)
	bool bDebug; // 0x8c(0x01)
	enum class ECustomInterpType SplineRotationInterpType; // 0x8d(0x01)
	char pad_8E[0x2]; // 0x8e(0x02)
	float SplineRotationInterpSpeed; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.RootMotionModifier_WandCastTranslation
// Size: 0x50 (Inherited: 0x50)
struct URootMotionModifier_WandCastTranslation : URootMotionModifier {
};

// Class Phoenix.RootMotionModifierProperties_WandCastTranslation
// Size: 0x30 (Inherited: 0x30)
struct URootMotionModifierProperties_WandCastTranslation : URootMotionModifierProperties {
};

// Class Phoenix.AblRootMotionModifiersScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblRootMotionModifiersScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct UAblTaskConditionScratchpad*> TaskConditionScratchpads; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.ablRootMotionModifiersTask
// Size: 0x98 (Inherited: 0x70)
struct UablRootMotionModifiersTask : UAblAbilityTask {
	struct TArray<struct URootMotionModifierProperties*> m_RootMotionModifierPropertiesArray; // 0x70(0x10)
	struct TArray<struct UAblTaskCondition*> TaskConditions; // 0x80(0x10)
	bool bMustPassAllConditions; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.RootMotionModifierUltimate_SplineLock
// Size: 0x58 (Inherited: 0x50)
struct URootMotionModifierUltimate_SplineLock : URootMotionModifierUltimate {
	float SplineRightOffset; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.RootMotionModifierProperties_SplineLock
// Size: 0x48 (Inherited: 0x30)
struct URootMotionModifierProperties_SplineLock : URootMotionModifierProperties {
	float MaxOffset; // 0x30(0x04)
	bool bAllowReverseDirection; // 0x34(0x01)
	bool bAllowOrientReverseDirection; // 0x35(0x01)
	bool bLimitToEndPoints; // 0x36(0x01)
	enum class ECustomInterpType OffsetInterpType; // 0x37(0x01)
	float OffsetInterpSpeed; // 0x38(0x04)
	bool bLockIn2D; // 0x3c(0x01)
	bool bZeroOutRootMotionNotInSplineDirection; // 0x3d(0x01)
	bool bOrientToSplineDirection; // 0x3e(0x01)
	enum class ECustomInterpType RotationInterpType; // 0x3f(0x01)
	float RotationInterpSpeed; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AblScaleCharacterScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblScaleCharacterScratchPad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblScaleCharacter
// Size: 0x80 (Inherited: 0x70)
struct UAblScaleCharacter : UAblAbilityTask {
	bool bUseDefaultMaleScale; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float Scale; // 0x74(0x04)
	float BlendInTime; // 0x78(0x04)
	float BlendOutTime; // 0x7c(0x04)
};

// Class Phoenix.AblSetAllowRMMomentum
// Size: 0x78 (Inherited: 0x70)
struct UAblSetAllowRMMomentum : UAblAbilityTask {
	bool RemoveRMMomentumAtEndOfTask; // 0x70(0x01)
	bool AddRMMomentum; // 0x71(0x01)
	bool RemoveRMMomentum; // 0x72(0x01)
	char pad_73[0x5]; // 0x73(0x05)
};

// Class Phoenix.AblSetAnimFootStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetAnimFootStateTask : UAblAbilityTask {
	enum class EBasicMobilityFootState FootState; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSetAnimMechanicTypeTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetAnimMechanicTypeTask : UAblAbilityTask {
	enum class EAnimMechanicType AnimMechanicType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSetAnimSpeedTypeTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetAnimSpeedTypeTask : UAblAbilityTask {
	enum class EAnimSpeedType AnimSpeedType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSetCollisionResolutionScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblSetCollisionResolutionScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblSetCollisionResolutionTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetCollisionResolutionTask : UAblAbilityTask {
	enum class ECollisionResolutionTaskType CollisionResolutionType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSetHeadTrackingStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetHeadTrackingStateTask : UAblAbilityTask {
	enum class EHeadTrackingState HeadTrackingState; // 0x70(0x01)
	bool bUseEndState; // 0x71(0x01)
	enum class EHeadTrackingState EndHeadTrackingState; // 0x72(0x01)
	enum class EHeadTrackingPriority HeadTrackingPriority; // 0x73(0x01)
	bool bBroadcastChange; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// Class Phoenix.AblSetMeshHiddenInGameTaskScratchPad
// Size: 0x38 (Inherited: 0x28)
struct UAblSetMeshHiddenInGameTaskScratchPad : UAblAbilityTaskScratchPad {
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x28(0x08)
	bool OriginalHiddenValue; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.AblSetMeshHiddenInGameTask
// Size: 0x80 (Inherited: 0x70)
struct UAblSetMeshHiddenInGameTask : UAblAbilityTask {
	struct USkeletalMesh* SkeletalMeshTargetInOwner; // 0x70(0x08)
	bool RestoreHiddenValueAtEndOfTask; // 0x78(0x01)
	bool SetHiddenValue; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.AblSetReactionsEnabledScratchpad
// Size: 0x28 (Inherited: 0x28)
struct UAblSetReactionsEnabledScratchpad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.AblSetReactionsEnabledTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetReactionsEnabledTask : UAblAbilityTask {
	bool bReactionsEnabled; // 0x70(0x01)
	enum class EStandardManagedPriority Priority; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.AblSetRightArmStateTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetRightArmStateTask : UAblAbilityTask {
	enum class ERightArmState RightArmState; // 0x70(0x01)
	bool bUseEndState; // 0x71(0x01)
	enum class ERightArmState EndRightArmState; // 0x72(0x01)
	enum class ERightArmPriority RightArmPriority; // 0x73(0x01)
	bool bBroadcastChange; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
};

// Class Phoenix.AblSetTagNotify
// Size: 0x50 (Inherited: 0x40)
struct UAblSetTagNotify : UAblAnimNotify {
	struct FGameplayTag EventTag; // 0x40(0x08)
	bool AddThisTag; // 0x48(0x01)
	bool RemoveThisTag; // 0x49(0x01)
	bool ApplyToAnimationArchitect; // 0x4a(0x01)
	bool ApplyToInteractionArchitect; // 0x4b(0x01)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.AblSetVsPhysicsCollisionResolutionEnabledScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblSetVsPhysicsCollisionResolutionEnabledScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.AblSetVsPhysicsCollisionResolutionEnabledTask
// Size: 0x78 (Inherited: 0x70)
struct UAblSetVsPhysicsCollisionResolutionEnabledTask : UAblAbilityTask {
	bool bEnabled; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSkinFXTask
// Size: 0x80 (Inherited: 0x70)
struct UAblSkinFXTask : UAblAbilityTask {
	struct FName skinEffectName; // 0x70(0x08)
	bool bEndEffectOnExit; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.AblBranchConditionSlopeSlideDoneScratchpad
// Size: 0x40 (Inherited: 0x30)
struct UAblBranchConditionSlopeSlideDoneScratchpad : UAblTaskConditionScratchpad {
	struct UAmbulatory_MovementComponent* MovementComp; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.AblBranchConditionSlopeSlideDone
// Size: 0x30 (Inherited: 0x28)
struct UAblBranchConditionSlopeSlideDone : UAblTaskCondition {
	float Timer; // 0x28(0x04)
	enum class EPhysicalSurface SurfaceType; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Phoenix.AblSlopeSlideTaskScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblSlopeSlideTaskScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.AblSlopeSlideTask
// Size: 0x88 (Inherited: 0x70)
struct UAblSlopeSlideTask : UAblAbilityTask {
	float DesiredSlopeSpeed; // 0x70(0x04)
	enum class ECustomInterpType SlopeVelocityInterpType; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float SlopeVelocityInterpSpeed; // 0x78(0x04)
	enum class ECustomInterpType ToFlatGroundInterpType; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	float ToFlatGroundInterpSpeed; // 0x80(0x04)
	float SlopeFriction; // 0x84(0x04)
};

// Class Phoenix.AblSpawnInteractActorTask
// Size: 0xd0 (Inherited: 0xd0)
struct UAblSpawnInteractActorTask : UAblSpawnActorTask {
};

// Class Phoenix.ablSpawnMunitionTaskScratchPad
// Size: 0x28 (Inherited: 0x28)
struct UablSpawnMunitionTaskScratchPad : UAblAbilityTaskScratchPad {
};

// Class Phoenix.ablSpawnMunitionTask
// Size: 0x80 (Inherited: 0x70)
struct UablSpawnMunitionTask : UAblAbilityTask {
	struct AMunitionType_Base* MunitionClass; // 0x70(0x08)
	bool bUseSelfActorAsInstigator; // 0x78(0x01)
	bool bUseSelfActorAsMunitionOwner; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.AblSpiderFallTumbleScratchpad
// Size: 0x40 (Inherited: 0x28)
struct UAblSpiderFallTumbleScratchpad : UAblAbilityTaskScratchPad {
	struct UAmbulatory_MovementComponent* AmbulatoryMovementComponent; // 0x28(0x08)
	char pad_30[0x10]; // 0x30(0x10)
};

// Class Phoenix.AblSpiderFallTumbleTask
// Size: 0xe8 (Inherited: 0x70)
struct UAblSpiderFallTumbleTask : UAblAbilityTask {
	struct AActor* ParentClass; // 0x70(0x08)
	struct UAblReactionAbility* ReactionAbility; // 0x78(0x08)
	struct UAblReactionAbility* ProtegoReactionAbility; // 0x80(0x08)
	struct UAblReactionAbility* SplatAbility; // 0x88(0x08)
	float BranchAtFloorHeight; // 0x90(0x04)
	float MaxSplatSpeed; // 0x94(0x04)
	float RandRadianAngle; // 0x98(0x04)
	float FloorImpactDamping; // 0x9c(0x04)
	float FloorImpactDampingVariance; // 0xa0(0x04)
	float MinSpeed; // 0xa4(0x04)
	float MaxSpeed; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UParticleSystem* ProtegoParticleSystem; // 0xb0(0x08)
	struct FAlphaBlend AnimationBlendOutOverride; // 0xb8(0x30)

	void HandleBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Phoenix.AblSpiderFallTumbleTask.HandleBeginOverlap // (Final|Native|Public) // @ game+0x31c6500
};

// Class Phoenix.AblStartPositionGetter_AnimNotify
// Size: 0x30 (Inherited: 0x28)
struct UAblStartPositionGetter_AnimNotify : UAblStartPositionGetter {
	struct FName AnimNotifyEventName; // 0x28(0x08)
};

// Class Phoenix.AblStartPositionGetter_FootMatch
// Size: 0x50 (Inherited: 0x28)
struct UAblStartPositionGetter_FootMatch : UAblStartPositionGetter {
	struct FVector FootPositionWeight; // 0x28(0x0c)
	struct FVector FootVelocityWeight; // 0x34(0x0c)
	float MinStartTime; // 0x40(0x04)
	float MaxStartTime; // 0x44(0x04)
	float SourceTimeOffset; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.AblStartPositionGetter_NpcFootMatch
// Size: 0x50 (Inherited: 0x50)
struct UAblStartPositionGetter_NpcFootMatch : UAblStartPositionGetter_FootMatch {
};

// Class Phoenix.AblStartPositionGetter_MatchAnimationPosition
// Size: 0x30 (Inherited: 0x28)
struct UAblStartPositionGetter_MatchAnimationPosition : UAblStartPositionGetter {
	struct UMatchAnimationPositionCharacterGetter* SourceCharacterGetter; // 0x28(0x08)
};

// Class Phoenix.MatchAnimationPositionAttachParentGetter
// Size: 0x28 (Inherited: 0x28)
struct UMatchAnimationPositionAttachParentGetter : UMatchAnimationPositionCharacterGetter {
};

// Class Phoenix.AblStartPositionGetter_MountRider
// Size: 0x38 (Inherited: 0x30)
struct UAblStartPositionGetter_MountRider : UAblStartPositionGetter_MatchAnimationPosition {
	struct UAblAbility* RequiredAbility; // 0x30(0x08)
};

// Class Phoenix.AblStartPositionGetter_MatchPrevious
// Size: 0x28 (Inherited: 0x28)
struct UAblStartPositionGetter_MatchPrevious : UAblStartPositionGetter {
};

// Class Phoenix.ablStartPositionGetter_NPCSpawnAnim
// Size: 0x28 (Inherited: 0x28)
struct UablStartPositionGetter_NPCSpawnAnim : UAblStartPositionGetter {
};

// Class Phoenix.AblStartPositionGetter_PhaseMatch
// Size: 0x28 (Inherited: 0x28)
struct UAblStartPositionGetter_PhaseMatch : UAblStartPositionGetter {
};

// Class Phoenix.AblStartPositionGetter_Protego
// Size: 0x30 (Inherited: 0x28)
struct UAblStartPositionGetter_Protego : UAblStartPositionGetter {
	int32_t ImpactFrame; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.AblStartPositionGetter_TimeMatch
// Size: 0x30 (Inherited: 0x28)
struct UAblStartPositionGetter_TimeMatch : UAblStartPositionGetter {
	bool bOnlyTimeMatchIfAnimInstanceAgrees; // 0x28(0x01)
	bool bSetFixedDirectionForTurnAssist; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.ablStartPositionGetter_TrollSwing
// Size: 0x30 (Inherited: 0x28)
struct UablStartPositionGetter_TrollSwing : UAblStartPositionGetter {
	float ForehandStartTime; // 0x28(0x04)
	float BackhandStartTime; // 0x2c(0x04)
};

// Class Phoenix.AblSuperSlamScratchpad
// Size: 0x130 (Inherited: 0x28)
struct UAblSuperSlamScratchpad : UAblAbilityTaskScratchPad {
	char pad_28[0xe8]; // 0x28(0xe8)
	struct APhysicsConstraintActor* PhysicsConstraintActor; // 0x110(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComp; // 0x118(0x08)
	struct URagdollControlComponent* RagdollControlComp; // 0x120(0x08)
	char pad_128[0x8]; // 0x128(0x08)
};

// Class Phoenix.AblSuperSlamVelocityDampenerTask
// Size: 0x80 (Inherited: 0x70)
struct UAblSuperSlamVelocityDampenerTask : UAblAbilityTask {
	float AngularVelocityMultiplier; // 0x70(0x04)
	float LinearVelocityMultiplier; // 0x74(0x04)
	float AngularDamping; // 0x78(0x04)
	float LinearDamping; // 0x7c(0x04)
};

// Class Phoenix.AblSuperSlamSpawnPhysicsActorScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblSuperSlamSpawnPhysicsActorScratchpad : UAblAbilityTaskScratchPad {
	struct TArray<struct AStaticMeshActor*> Actors; // 0x28(0x10)
};

// Class Phoenix.AblSuperSlamSpawnPhysicsActorTask
// Size: 0xe0 (Inherited: 0x70)
struct UAblSuperSlamSpawnPhysicsActorTask : UAblAbilityTask {
	int32_t MinNumberOfItems; // 0x70(0x04)
	int32_t MaxNumberOfItems; // 0x74(0x04)
	float ConeAngle; // 0x78(0x04)
	float MinForce; // 0x7c(0x04)
	float MaxForce; // 0x80(0x04)
	float MinAngularForce; // 0x84(0x04)
	float MaxAngularForce; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct TMap<struct FName, struct FMeshArrayHolder> MeshHolders; // 0x90(0x50)
};

// Class Phoenix.AblSuperSlamTask
// Size: 0x90 (Inherited: 0x70)
struct UAblSuperSlamTask : UAblAbilityTask {
	struct TArray<struct FAblSuperSlamCurveData> Curves; // 0x70(0x10)
	struct TArray<struct UMultiFX2_Base*> HitFx; // 0x80(0x10)
};

// Class Phoenix.AblSuperSlamForceHelperScratchpad
// Size: 0x38 (Inherited: 0x28)
struct UAblSuperSlamForceHelperScratchpad : UAblAbilityTaskScratchPad {
	struct USkeletalMeshComponent* SkeletalMeshComp; // 0x28(0x08)
	struct UAblSuperSlamScratchpad* SuperSlamScratchpad; // 0x30(0x08)
};

// Class Phoenix.AblSuperSlamForceHelperTask
// Size: 0x70 (Inherited: 0x70)
struct UAblSuperSlamForceHelperTask : UAblAbilityTask {
};

// Class Phoenix.AblSuperSlamSetCurveTask
// Size: 0x80 (Inherited: 0x70)
struct UAblSuperSlamSetCurveTask : UAblAbilityTask {
	struct TArray<struct FAblSuperSlamCurveData> Curves; // 0x70(0x10)
};

// Class Phoenix.AblSuspendEnemies
// Size: 0x78 (Inherited: 0x70)
struct UAblSuspendEnemies : UAblAbilityTask {
	bool bDisableSuspendHideForCombatPlants; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.AblSyncCameraTimeDilationTask
// Size: 0x70 (Inherited: 0x70)
struct UAblSyncCameraTimeDilationTask : UAblAbilityTask {
};

// Class Phoenix.AblTargetTrackerTaskScratchPad
// Size: 0x30 (Inherited: 0x28)
struct UAblTargetTrackerTaskScratchPad : UAblAbilityTaskScratchPad {
	struct UTargetTracker* TargetTracker; // 0x28(0x08)
};

// Class Phoenix.AblTargetTrackerTask
// Size: 0x78 (Inherited: 0x70)
struct UAblTargetTrackerTask : UAblAbilityTask {
	enum class ETask_TargetTrackerType TargetTrackerType; // 0x70(0x01)
	enum class ETask_TargetType TargetType; // 0x71(0x01)
	enum class ETargetID TargetPriority; // 0x72(0x01)
	char pad_73[0x5]; // 0x73(0x05)
};

// Class Phoenix.AblTaskConditionScratchpad_DamageOverTime
// Size: 0x40 (Inherited: 0x30)
struct UAblTaskConditionScratchpad_DamageOverTime : UAblTaskConditionScratchpad {
	char pad_30[0x10]; // 0x30(0x10)

	void OnDoT_End(struct UActorComponent* ActorComp); // Function Phoenix.AblTaskConditionScratchpad_DamageOverTime.OnDoT_End // (Final|Native|Public) // @ game+0x31cd410
};

// Class Phoenix.AblTaskCondition_DamageOverTime
// Size: 0x30 (Inherited: 0x28)
struct UAblTaskCondition_DamageOverTime : UAblTaskCondition {
	struct FName DoT_Type; // 0x28(0x08)
};

// Class Phoenix.AblTaskConditionScratchpad_HermesMessage
// Size: 0x40 (Inherited: 0x30)
struct UAblTaskConditionScratchpad_HermesMessage : UAblTaskConditionScratchpad {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class Phoenix.AblTaskCondition_HermesMessage
// Size: 0x30 (Inherited: 0x28)
struct UAblTaskCondition_HermesMessage : UAblTaskCondition {
	struct FName HermesMessageName; // 0x28(0x08)
};

// Class Phoenix.AblTaskConditionScratchpad_HitBySpell
// Size: 0x48 (Inherited: 0x30)
struct UAblTaskConditionScratchpad_HitBySpell : UAblTaskConditionScratchpad {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.AblTaskCondition_HitBySpell
// Size: 0x30 (Inherited: 0x28)
struct UAblTaskCondition_HitBySpell : UAblTaskCondition {
	struct FName SpellName; // 0x28(0x08)
};

// Class Phoenix.AblTaskConditionScratchpad_InteractionArchitectChild
// Size: 0x38 (Inherited: 0x30)
struct UAblTaskConditionScratchpad_InteractionArchitectChild : UAblTaskConditionScratchpad {
	struct UInteractionArchitectAsset* InteractionArchitectAsset; // 0x30(0x08)
};

// Class Phoenix.AblTaskCondition_InteractionArchitectChild
// Size: 0x38 (Inherited: 0x28)
struct UAblTaskCondition_InteractionArchitectChild : UAblTaskCondition {
	struct UInteractionArchitectAsset* Parent; // 0x28(0x08)
	bool bIncludeSelf; // 0x30(0x01)
	enum class EInteractionProject Project; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.AblTaskConditionScratchpad_OppugnoProxy
// Size: 0x78 (Inherited: 0x30)
struct UAblTaskConditionScratchpad_OppugnoProxy : UAblTaskConditionScratchpad {
	struct AWorldObject* instancedProxy; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
	struct AActor* EnemyOwner; // 0x48(0x08)
	char pad_50[0x28]; // 0x50(0x28)

	void OnActiveSpellToolChanged(struct ATool* ActivatedSpell, struct ATool* DeactivatedSpell); // Function Phoenix.AblTaskConditionScratchpad_OppugnoProxy.OnActiveSpellToolChanged // (Final|Native|Public) // @ game+0x31cd1a0
};

// Class Phoenix.AblTaskCondition_OppugnoProxy
// Size: 0x40 (Inherited: 0x28)
struct UAblTaskCondition_OppugnoProxy : UAblTaskCondition {
	struct AWorldObject* OppugnoProxy; // 0x28(0x08)
	float ProxyOppugnoWeight; // 0x30(0x04)
	struct FGameplayTag DuelTechniqueEventTag; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.AblTetherLocPointUpdaterScratchpad
// Size: 0x48 (Inherited: 0x28)
struct UAblTetherLocPointUpdaterScratchpad : UAblAvaMotionWarpSyncPointUpdaterScratchpad {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Phoenix.AblTetherLocSyncPointUpdater
// Size: 0x60 (Inherited: 0x28)
struct UAblTetherLocSyncPointUpdater : UAblAvaMotionWarpSyncPointUpdater {
	float TetherDistance; // 0x28(0x04)
	float TetherDistanceRandomFloor; // 0x2c(0x04)
	float TetherDistanceRandomCeiling; // 0x30(0x04)
	enum class EStartVecMethod StartVectorMethod; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct FVector ReferenceVector; // 0x38(0x0c)
	float MinRandomAngle; // 0x44(0x04)
	float MaxRandomAngle; // 0x48(0x04)
	float MaxTetherAngle; // 0x4c(0x04)
	int32_t Divisions; // 0x50(0x04)
	bool bInApplyTether; // 0x54(0x01)
	enum class ENPC_Tether TetherType; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	float DesiredDistanceToTarget; // 0x58(0x04)
	bool bAllowPositiveTravel; // 0x5c(0x01)
	bool bAllowNegativeTravel; // 0x5d(0x01)
	char pad_5E[0x2]; // 0x5e(0x02)
};

// Class Phoenix.ablToggleIKDriversTask
// Size: 0x80 (Inherited: 0x70)
struct UablToggleIKDriversTask : UAblAbilityTask {
	enum class EStandardManagedPriority IKPriority; // 0x70(0x01)
	bool bEnableIK; // 0x71(0x01)
	bool bEnableFloorContact; // 0x72(0x01)
	bool bEnableLookat; // 0x73(0x01)
	bool bEnablePoseFixup; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float BlendInDuration; // 0x78(0x04)
	float BlendOutDuration; // 0x7c(0x04)
};

// Class Phoenix.TurnAdjust_TargetDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_TargetDirectionGetter : UObject {
};

// Class Phoenix.TurnAdjust_DesiredDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_DesiredDirectionGetter : UTurnAdjust_TargetDirectionGetter {
};

// Class Phoenix.TurnAdjust_BlackboardDirectionGetter
// Size: 0x30 (Inherited: 0x28)
struct UTurnAdjust_BlackboardDirectionGetter : UTurnAdjust_TargetDirectionGetter {
	struct FName BlackboardKeyName; // 0x28(0x08)
};

// Class Phoenix.TurnAdjust_ToBlackboardLocationGetter
// Size: 0x30 (Inherited: 0x28)
struct UTurnAdjust_ToBlackboardLocationGetter : UTurnAdjust_TargetDirectionGetter {
	struct FName BlackboardKeyName; // 0x28(0x08)
};

// Class Phoenix.TurnAdjust_LedgeNormalGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_LedgeNormalGetter : UTurnAdjust_TargetDirectionGetter {
};

// Class Phoenix.TurnAdjust_TowardsLedgeDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_TowardsLedgeDirectionGetter : UTurnAdjust_TargetDirectionGetter {
};

// Class Phoenix.TurnAdjust_JumpDownDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_JumpDownDirectionGetter : UTurnAdjust_TargetDirectionGetter {
};

// Class Phoenix.TurnAdjust_ClimbingLadderDirectionGetter
// Size: 0x28 (Inherited: 0x28)
struct UTurnAdjust_ClimbingLadderDirectionGetter : UTurnAdjust_TargetDirectionGetter {
};

// Class Phoenix.ablTurnAssistTaskScratchPad
// Size: 0x88 (Inherited: 0x28)
struct UablTurnAssistTaskScratchPad : UAblAbilityTaskScratchPad {
	struct TArray<struct FTurnAssistTaskEntry> InProgressTurn; // 0x28(0x10)
	struct FAlphaBlend TurningBlend; // 0x38(0x30)
	struct FVector CurrentDirection; // 0x68(0x0c)
	struct FVector DesiredDirection; // 0x74(0x0c)
	float FixedDeltaAngle; // 0x80(0x04)
	float ElapsedTime; // 0x84(0x04)
};

// Class Phoenix.ablTurnAssistTask
// Size: 0xb8 (Inherited: 0x70)
struct UablTurnAssistTask : UAblAbilityTask {
	enum class ETurnAssistUseDirection UseDirection; // 0x70(0x01)
	bool bUseFixedDirection; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
	struct UCurveFloat* FixedDeltaTurnAssistCurve; // 0x78(0x08)
	struct UCurveFloat* TurnAssistCurve; // 0x80(0x08)
	struct UCurveFloat* TurnAssistTimeMultiplier; // 0x88(0x08)
	bool bScaleRotationBasedOnSpeed; // 0x90(0x01)
	char pad_91[0x3]; // 0x91(0x03)
	float MinRotationScaleBasedOnSpeed; // 0x94(0x04)
	struct FVector2D AllowedRangeFromFallLine; // 0x98(0x08)
	struct UCurveFloat* StrafeTurnAssistCurve; // 0xa0(0x08)
	struct UCurveFloat* StrafeTurnAssistTimeMultiplier; // 0xa8(0x08)
	bool bIgnoreTargetTracker; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// Class Phoenix.AblUsingStairsAnimsTask
// Size: 0x70 (Inherited: 0x70)
struct UAblUsingStairsAnimsTask : UAblAbilityTask {
};

// Class Phoenix.ablWandCastComboNextTask
// Size: 0xb8 (Inherited: 0x70)
struct UablWandCastComboNextTask : UAblAbilityTask {
	enum class EWandComboType ComboType; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct UAblAbility* NextComboAbility; // 0x78(0x08)
	struct FGameplayTagContainer PerksRequiredForPauseCombo; // 0x80(0x20)
	struct UAblAbility* PauseComboAbility; // 0xa0(0x08)
	int32_t FinisherAtFrame; // 0xa8(0x04)
	int32_t ResetAtFrame; // 0xac(0x04)
	struct UAblAbility* NextLightComboAbility; // 0xb0(0x08)
};

// Class Phoenix.ablWandCastComboResetTask
// Size: 0x78 (Inherited: 0x70)
struct UablWandCastComboResetTask : UAblAbilityTask {
	bool bResetWandCastState; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.ablWandCastContextsTaskScratchPad
// Size: 0x88 (Inherited: 0x28)
struct UablWandCastContextsTaskScratchPad : UAblAbilityTaskScratchPad {
	enum class EWandCastType WandCastType; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TMap<int32_t, bool> FrameReachedMap; // 0x30(0x50)
	float ElapsedTime; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.ablWandCastContextsTask
// Size: 0xc0 (Inherited: 0x70)
struct UablWandCastContextsTask : UAblAbilityTask {
	struct TMap<enum class EWandCastType, struct FFrameToContexts> WandCastTypeToContextMap; // 0x70(0x50)
};

// Class Phoenix.AblZeroVelocity
// Size: 0x78 (Inherited: 0x70)
struct UAblZeroVelocity : UAblAbilityTask {
	bool bZeroLinearVelocity; // 0x70(0x01)
	bool bZeroAngularVelocity; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.SpellTool
// Size: 0x7e8 (Inherited: 0x2e0)
struct ASpellTool : ATool {
	struct FBTCustomAction SpellStartAction; // 0x2e0(0x0c)
	struct FBTCustomAction SpellStopAction; // 0x2ec(0x0c)
	struct TMap<struct FName, struct UObject*> ExecutionClassMap; // 0x2f8(0x50)
	bool bHeavyCast; // 0x348(0x01)
	enum class ELeftArmState LeftArmState; // 0x349(0x01)
	enum class ERightArmState RightArmState; // 0x34a(0x01)
	char pad_34B[0x5]; // 0x34b(0x05)
	struct TArray<struct UMultiFX2_Base*> PrepMuzzleFX2; // 0x350(0x10)
	struct UAkAudioEvent* PrepMuzzleMotionFX; // 0x360(0x08)
	bool bKillPrepFXWhenMuzzleFXStart; // 0x368(0x01)
	char pad_369[0x7]; // 0x369(0x07)
	struct TArray<struct UMultiFX2_Base*> MuzzleFX2; // 0x370(0x10)
	struct UAkAudioEvent* MuzzleMotionFX; // 0x380(0x08)
	struct UAkAudioEvent* EndMuzzleMotionFX; // 0x388(0x08)
	struct TArray<struct UMultiFX2_Base*> ProjectileFiredFX2; // 0x390(0x10)
	bool ProjectileFiredFX2EndsWithMunition; // 0x3a0(0x01)
	char pad_3A1[0x7]; // 0x3a1(0x07)
	struct UAkAudioEvent* ProjectileMotionFX; // 0x3a8(0x08)
	struct UAkAudioEvent* ProjectileSfx; // 0x3b0(0x08)
	struct TArray<struct FImpactLevelData> ImpactLevelDataArray; // 0x3b8(0x10)
	bool PlaceDecal; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct UMaterialInterface* DecalMaterial; // 0x3d0(0x08)
	struct FVector DecalSize; // 0x3d8(0x0c)
	float DecalFadeInDelay; // 0x3e4(0x04)
	float DecalFadeInTime; // 0x3e8(0x04)
	float DecalLifeSpan; // 0x3ec(0x04)
	float DecalFadeTime; // 0x3f0(0x04)
	bool DecalRandomOrientation; // 0x3f4(0x01)
	char pad_3F5[0x3]; // 0x3f5(0x03)
	struct UObject* Decal3D; // 0x3f8(0x08)
	bool Decal3DRandomOrientation; // 0x400(0x01)
	char pad_401[0x7]; // 0x401(0x07)
	struct TArray<struct UMultiFX2_Base*> DestroyedPieceFX2; // 0x408(0x10)
	float DestroyedPieceFXRadius; // 0x418(0x04)
	enum class EGameEventLocation GameEventLocation; // 0x41c(0x01)
	char pad_41D[0x3]; // 0x41d(0x03)
	struct FGameplayTagContainer GameEventTagContainer; // 0x420(0x20)
	enum class EGameEvent_Intensity GameEventIntensity; // 0x440(0x01)
	char pad_441[0x3]; // 0x441(0x03)
	float GameEventDuration; // 0x444(0x04)
	float GameEventRange; // 0x448(0x04)
	float GameEventFalloff; // 0x44c(0x04)
	struct FName DatabaseName; // 0x450(0x08)
	struct FGameplayTagContainer MunitionTagContainer; // 0x458(0x20)
	struct UInteractionArchitectAsset* MunitionDataAsset; // 0x478(0x08)
	struct FGameplayTagContainer EndMunitionTagContainer; // 0x480(0x20)
	enum class EAttackState AttackState; // 0x4a0(0x01)
	char pad_4A1[0x7]; // 0x4a1(0x07)
	struct UObject* SpellImpactComponent; // 0x4a8(0x08)
	struct FGameplayTagContainer GameplayStateTags; // 0x4b0(0x20)
	struct TArray<struct UMultiFX2_Base*> StateEffectFX2; // 0x4d0(0x10)
	struct TArray<struct UStateEffectComponent*> TerminatePreviousEffects; // 0x4e0(0x10)
	bool bEnableCCDOnTarget; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	float PreSpawnMunitionDelay; // 0x4f4(0x04)
	bool bActivateAllPerks; // 0x4f8(0x01)
	char pad_4F9[0x7]; // 0x4f9(0x07)
	struct TArray<struct FAbilityFunction> AbilityFunctions; // 0x500(0x10)
	bool bAoe; // 0x510(0x01)
	bool bAOEAtTargetLocation; // 0x511(0x01)
	bool bAffectTeammates; // 0x512(0x01)
	bool bOnlyAffectsMovable; // 0x513(0x01)
	bool bCanAffectBroken; // 0x514(0x01)
	bool bCanAffectPlayer; // 0x515(0x01)
	bool bSetWandCastTargetTrackers; // 0x516(0x01)
	char pad_517[0x1]; // 0x517(0x01)
	struct TArray<struct AMunitionType_Base*> DeflectMunitionActors; // 0x518(0x10)
	bool SpawnAllDeflectMunitionActors; // 0x528(0x01)
	char pad_529[0x3]; // 0x529(0x03)
	struct TWeakObjectPtr<struct AMunitionType_Base> LastMunitionFired; // 0x52c(0x08)
	bool bPlayersUseImprovedTargeting; // 0x534(0x01)
	char pad_535[0x3]; // 0x535(0x03)
	struct UTriggerEffect* SpellActiveTriggerEffect; // 0x538(0x08)
	struct ULEDFadeEffect* PrepLEDEffect; // 0x540(0x08)
	struct ULEDFadeEffect* StartLEDEffect; // 0x548(0x08)
	struct ULEDFadeEffect* EndLEDEffect; // 0x550(0x08)
	char pad_558[0x20]; // 0x558(0x20)
	struct AActor* OverrideSourceActor; // 0x578(0x08)
	struct AActor* OverrideTargetActor; // 0x580(0x08)
	struct USceneComponent* OverrideTargetComponent; // 0x588(0x08)
	struct AActor* OverrideCharacter; // 0x590(0x08)
	struct TArray<struct AMunitionType_Base*> CachedMunitionArray; // 0x598(0x10)
	char pad_5A8[0x98]; // 0x5a8(0x98)
	struct UInteractionArchitectAsset* LevelDataAsset; // 0x640(0x08)
	char pad_648[0x90]; // 0x648(0x90)
	struct UActorComponent* ImpactComponent; // 0x6d8(0x08)
	char pad_6E0[0xd8]; // 0x6e0(0xd8)
	struct UTriggerEffect* pSpellActiveTriggerEffect; // 0x7b8(0x08)
	bool bAffectsRightTrigger; // 0x7c0(0x01)
	bool bAffectsLeftTrigger; // 0x7c1(0x01)
	char pad_7C2[0x6]; // 0x7c2(0x06)
	struct ULEDFadeEffect* pPrepLEDEffect; // 0x7c8(0x08)
	struct ULEDFadeEffect* pStartLEDEffect; // 0x7d0(0x08)
	struct ULEDFadeEffect* pEndLEDEffect; // 0x7d8(0x08)
	struct UAkComponent* ProjectileAkComponent; // 0x7e0(0x08)

	void TriggerReleased(bool bForce, bool bFromStop); // Function Phoenix.SpellTool.TriggerReleased // (Native|Public|BlueprintCallable) // @ game+0x347b9d0
	void StopActive(); // Function Phoenix.SpellTool.StopActive // (Final|Native|Public|BlueprintCallable) // @ game+0x347b9a0
	void StartChannelingAction(); // Function Phoenix.SpellTool.StartChannelingAction // (Native|Public|BlueprintCallable) // @ game+0x3311b80
	bool Start(); // Function Phoenix.SpellTool.Start // (Native|Public|BlueprintCallable) // @ game+0x1545d30
	void SpellFlourish(); // Function Phoenix.SpellTool.SpellFlourish // (Native|Public|BlueprintCallable) // @ game+0x3310210
	void SetIgnoreActors(struct TArray<struct AActor*> i_Ignores); // Function Phoenix.SpellTool.SetIgnoreActors // (Native|Public|BlueprintCallable) // @ game+0x347b5a0
	void SetDestinationActor(struct AActor* InActor); // Function Phoenix.SpellTool.SetDestinationActor // (Final|Native|Public|BlueprintCallable) // @ game+0x347b510
	void SetAffectImmuneToSpells(bool bAffectImmune); // Function Phoenix.SpellTool.SetAffectImmuneToSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x347b480
	void ReassignBeamTarget(struct AActor* CurrentActor, struct USceneComponent* NewComponent); // Function Phoenix.SpellTool.ReassignBeamTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x347b3a0
	void ReactionStart(struct UAblReactionData* InReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.SpellTool.ReactionStart // (Final|Native|Protected) // @ game+0x347b2d0
	void ReactionEnd(struct UAblReactionData* InReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.SpellTool.ReactionEnd // (Final|Native|Protected) // @ game+0x347b200
	void PreSpawnMunition(); // Function Phoenix.SpellTool.PreSpawnMunition // (Final|Native|Public|BlueprintCallable) // @ game+0x347b1e0
	void Prep(); // Function Phoenix.SpellTool.Prep // (Native|Public|BlueprintCallable) // @ game+0x31e06f0
	void PlayHitActorFX(struct FHitResult& HitResult); // Function Phoenix.SpellTool.PlayHitActorFX // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x347b100
	void OwnerHasStartedCasting(struct FName WandCastName); // Function Phoenix.SpellTool.OwnerHasStartedCasting // (Native|Public|BlueprintCallable) // @ game+0x347b070
	void OnStop(); // Function Phoenix.SpellTool.OnStop // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStart(); // Function Phoenix.SpellTool.OnStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnProtegoBlocked(struct AMunitionType_Base* InMunitionInstance, struct AActor* Target, struct FHitResult& Hit, struct FVector ImpactDirection); // Function Phoenix.SpellTool.OnProtegoBlocked // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnPrep(); // Function Phoenix.SpellTool.OnPrep // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnMunitionOverlap(struct AMunitionType_Base* MunitionInstance, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.SpellTool.OnMunitionOverlap // (Native|Public|HasOutParms) // @ game+0x347aee0
	void OnMunitionImpactDamage(struct AMunitionType_Base* MunitionInstance, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.SpellTool.OnMunitionImpactDamage // (Native|Public|HasOutParms) // @ game+0x347ad50
	void OnMunitionImpact(struct AMunitionType_Base* MunitionInstance, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.SpellTool.OnMunitionImpact // (Native|Public|HasOutParms) // @ game+0x347abc0
	void OnMunitionFired(struct AActor* Target, struct FVector TargetLocation, struct AMunitionType_Base* BaseMunition, struct FGameplayTagContainer& InMunitionTagContainer); // Function Phoenix.SpellTool.OnMunitionFired // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnMunitionDestroyed(struct AMunitionType_Base* InMunitionInstance); // Function Phoenix.SpellTool.OnMunitionDestroyed // (Native|Public) // @ game+0x347ab30
	void OnFizzle(); // Function Phoenix.SpellTool.OnFizzle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCastSpell(struct AActor* Target, struct FVector& Location, struct FVector& MuzzleLocation); // Function Phoenix.SpellTool.OnCastSpell // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnCanAffectTarget(struct AActor* Target, bool bInCanAffectTarget); // Function Phoenix.SpellTool.OnCanAffectTarget // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAffectTarget(struct AActor* Target, struct USceneComponent* Component, bool bInTargetAffected); // Function Phoenix.SpellTool.OnAffectTarget // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool IsToolUsedByPlayer(); // Function Phoenix.SpellTool.IsToolUsedByPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347ab00
	bool IsStopped(); // Function Phoenix.SpellTool.IsStopped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347aad0
	bool IsStarted_K2(); // Function Phoenix.SpellTool.IsStarted_K2 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347aab0
	bool IsChanneling(); // Function Phoenix.SpellTool.IsChanneling // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347aa80
	bool IsBeastCaptureSpell(); // Function Phoenix.SpellTool.IsBeastCaptureSpell // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347aa50
	bool HasUpgradedMechanics(); // Function Phoenix.SpellTool.HasUpgradedMechanics // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347aa10
	bool HasUpgrade(enum class ESpellUpgrades Upgrade); // Function Phoenix.SpellTool.HasUpgrade // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a980
	struct AWandTool* GetWand(); // Function Phoenix.SpellTool.GetWand // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a950
	struct FName GetSpellType(); // Function Phoenix.SpellTool.GetSpellType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a8e0
	struct USpellToolRecord* GetSpellToolRecord(); // Function Phoenix.SpellTool.GetSpellToolRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a8b0
	enum class ESpellCategory GetSpellCategory(); // Function Phoenix.SpellTool.GetSpellCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a890
	struct AActor* GetSourceActor(); // Function Phoenix.SpellTool.GetSourceActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a860
	float GetProjectileSpeed(); // Function Phoenix.SpellTool.GetProjectileSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a830
	struct FVector GetMuzzleLocation(); // Function Phoenix.SpellTool.GetMuzzleLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a620
	struct AMunitionType_Base* GetMunitionActor(); // Function Phoenix.SpellTool.GetMunitionActor // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a5e0
	float GetMaxRange(); // Function Phoenix.SpellTool.GetMaxRange // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a5a0
	enum class EImpactTypes GetImpactType(); // Function Phoenix.SpellTool.GetImpactType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a560
	struct UObject* GetExecutionClassFromKeyWord(struct FName KeyWord); // Function Phoenix.SpellTool.GetExecutionClassFromKeyWord // (Native|Public|BlueprintCallable) // @ game+0x347a4c0
	float GetDuration(bool bTargetIsACharacter); // Function Phoenix.SpellTool.GetDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a410
	struct AActor* GetCharacterActor(); // Function Phoenix.SpellTool.GetCharacterActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a1c0
	struct ACharacter* GetCharacter(); // Function Phoenix.SpellTool.GetCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a150
	struct AActor* GetActiveTarget(); // Function Phoenix.SpellTool.GetActiveTarget // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x330e3d0
	struct AMunitionType_Base* GetActiveMunition(); // Function Phoenix.SpellTool.GetActiveMunition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a0e0
	void ForceStop(); // Function Phoenix.SpellTool.ForceStop // (Native|Public|BlueprintCallable) // @ game+0x347a0c0
	void FireOnHitBySpell(struct AActor* InTargetActor, struct AActor* InInstigator, struct FGameplayTagContainer& InMunitionTagContainer, struct FHitResult& HitResult, struct FVector& ImpactDirection); // Function Phoenix.SpellTool.FireOnHitBySpell // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3479ea0
	void Failed_K2(); // Function Phoenix.SpellTool.Failed_K2 // (Final|Native|Public|BlueprintCallable) // @ game+0x3479e80
	void EndToggleSpell(bool bForcedExternally); // Function Phoenix.SpellTool.EndToggleSpell // (Native|Public|BlueprintCallable) // @ game+0x3479df0
	struct UActorComponent* CreateImpactComponent(struct AActor* InTargetActor, struct FMunitionImpactData& InMunitionImpactData); // Function Phoenix.SpellTool.CreateImpactComponent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3479c60
	float CalculateCharacterDamage(struct AActor* InTarget, bool& OutWillKillTarget); // Function Phoenix.SpellTool.CalculateCharacterDamage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3479af0
	bool BreaksShield(struct AActor* Target, struct FGameplayTagContainer& InTagContainer); // Function Phoenix.SpellTool.BreaksShield // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34799f0
	void Abort(); // Function Phoenix.SpellTool.Abort // (Native|Public|BlueprintCallable) // @ game+0x330e3b0
};

// Class Phoenix.ChannelingSpellTool
// Size: 0x958 (Inherited: 0x7e8)
struct AChannelingSpellTool : ASpellTool {
	struct FBTCustomAction FlourishAction; // 0x7e8(0x0c)
	struct FBTCustomAction ChannelingAction; // 0x7f4(0x0c)
	struct TArray<struct UMultiFX2_Base*> TapActivateFX2; // 0x800(0x10)
	struct TArray<struct UMultiFX2_Base*> ChargingFX2; // 0x810(0x10)
	struct TArray<struct UMultiFX2_Base*> ChargedFX2; // 0x820(0x10)
	struct TArray<struct UMultiFX2_Base*> ChargedActivateFX2; // 0x830(0x10)
	struct TArray<struct UMultiFX2_Base*> RibbonFX2; // 0x840(0x10)
	bool ChargeVersionAvailable; // 0x850(0x01)
	char pad_851[0x7]; // 0x851(0x07)
	struct TArray<struct UMultiFX2_Base*> ChargingMuzzleFX2; // 0x858(0x10)
	struct TArray<struct UMultiFX2_Base*> ChargedMuzzleFX2; // 0x868(0x10)
	struct TArray<struct UMultiFX2_Base*> EndMuzzleFX2; // 0x878(0x10)
	bool DUMMY; // 0x888(0x01)
	char pad_889[0x7]; // 0x889(0x07)
	struct TArray<struct UMultiFX2_Base*> BeamFX2; // 0x890(0x10)
	bool bSetTargetTrackers; // 0x8a0(0x01)
	bool Dummy2; // 0x8a1(0x01)
	char pad_8A2[0x6]; // 0x8a2(0x06)
	struct FGameplayTagContainer ChargedMunitionTagContainer; // 0x8a8(0x20)
	struct UInteractionArchitectAsset* ChargedMunitionDataAsset; // 0x8c8(0x08)
	struct FVector BeamTarget; // 0x8d0(0x0c)
	char pad_8DC[0x4]; // 0x8dc(0x04)
	struct AActor* BeamTargetActor; // 0x8e0(0x08)
	char pad_8E8[0x70]; // 0x8e8(0x70)

	void OnCharged(); // Function Phoenix.ChannelingSpellTool.OnCharged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivateTap(struct AActor* Target); // Function Phoenix.ChannelingSpellTool.OnActivateTap // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivateCharged(struct AActor* Target); // Function Phoenix.ChannelingSpellTool.OnActivateCharged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool HasMinChannelingTimeBeenMet(); // Function Phoenix.ChannelingSpellTool.HasMinChannelingTimeBeenMet // (Final|Native|Public|BlueprintCallable) // @ game+0x32302d0
};

// Class Phoenix.AccioSpellTool
// Size: 0xae0 (Inherited: 0x958)
struct AAccioSpellTool : AChannelingSpellTool {
	struct TArray<struct FAccioLevelData> LevelDataArray; // 0x958(0x10)
	struct TArray<struct FAccioDampingSphere> DampingSpheres; // 0x968(0x10)
	float AccioEndThreshold; // 0x978(0x04)
	float AccioHoverDistance; // 0x97c(0x04)
	float AccioHoverHeight; // 0x980(0x04)
	float AccioEndSpellTime; // 0x984(0x04)
	float SlidingDotMin; // 0x988(0x04)
	float SlidingMinVel; // 0x98c(0x04)
	float AccioEndVelocityScale; // 0x990(0x04)
	float FlyingBookPullVelocity; // 0x994(0x04)
	float FlyingBookHideDistance; // 0x998(0x04)
	float FlyingBookSlowStartScale; // 0x99c(0x04)
	float MinDamageDealt; // 0x9a0(0x04)
	float MaxDamageDealt; // 0x9a4(0x04)
	float MinDamageDealtCharacter; // 0x9a8(0x04)
	float MaxDamageDealtCharacter; // 0x9ac(0x04)
	float MinDamageTaken; // 0x9b0(0x04)
	float MaxDamageTaken; // 0x9b4(0x04)
	float MinDamageTakenCharacter; // 0x9b8(0x04)
	float MaxDamageTakenCharacter; // 0x9bc(0x04)
	float AccioCharacterHoverDistance; // 0x9c0(0x04)
	float AccioCharacterHoverHeight; // 0x9c4(0x04)
	struct USpellToolRecord* WingardiumSpellToolRecord; // 0x9c8(0x08)
	float ExtendedRange; // 0x9d0(0x04)
	char pad_9D4[0x4]; // 0x9d4(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x9d8(0x08)
	bool bSkipTriggerReaction; // 0x9e0(0x01)
	char pad_9E1[0x3]; // 0x9e1(0x03)
	float PullCharacterObjectVelocityMultiplier; // 0x9e4(0x04)
	char pad_9E8[0x98]; // 0x9e8(0x98)
	struct AWingardiumBulletTimeSpellTool* WingardiumSpellTool; // 0xa80(0x08)
	char pad_A88[0x58]; // 0xa88(0x58)

	void StartAccioBall(); // Function Phoenix.AccioSpellTool.StartAccioBall // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31cd920
	void PullCharacter(struct FHitResult& HitResult); // Function Phoenix.AccioSpellTool.PullCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x31cd4e0
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.AccioSpellTool.OnActorHit // (Native|Public|HasOutParms|HasDefaults) // @ game+0x31cd270
	void EndAccioBall(); // Function Phoenix.AccioSpellTool.EndAccioBall // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31cc490
};

// Class Phoenix.AchievementManager
// Size: 0x498 (Inherited: 0x28)
struct UAchievementManager : UObject {
	char pad_28[0x470]; // 0x28(0x470)

	void SetHomeworkWatcher(enum class EHomeworkType HomeworkType, struct FString HomeworkName, struct AActor* Caller, bool bEnable, bool AssertIfNotFound); // Function Phoenix.AchievementManager.SetHomeworkWatcher // (Final|Native|Public|BlueprintCallable) // @ game+0x31cd760
	void SetAchievementWatcher(struct FName AchievementID, struct AActor* Caller, bool bEnable); // Function Phoenix.AchievementManager.SetAchievementWatcher // (Final|Native|Public|BlueprintCallable) // @ game+0x31cd650
	void ResetAchievement(struct FName AchievementID); // Function Phoenix.AchievementManager.ResetAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x31cd5c0
	void OnSaveGameLoaded(); // Function Phoenix.AchievementManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x31cd4c0
	void OnNewGame(); // Function Phoenix.AchievementManager.OnNewGame // (Final|Native|Public) // @ game+0x31cd4a0
	bool IsHomeworkComplete(enum class EHomeworkType HomeworkType, struct FString HomeworkName, bool AssertIfNotFound); // Function Phoenix.AchievementManager.IsHomeworkComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x31cd070
	bool IsFieldGuideComplete(); // Function Phoenix.AchievementManager.IsFieldGuideComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x31cd040
	bool IsAchievementComplete(struct FName AchievementID); // Function Phoenix.AchievementManager.IsAchievementComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x31ccfa0
	bool IsAchievementActive(struct FName AchievementID); // Function Phoenix.AchievementManager.IsAchievementActive // (Final|Native|Public|BlueprintCallable) // @ game+0x31ccf00
	void HandleStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.AchievementManager.HandleStatChanged // (Final|Native|Private) // @ game+0x31ccdf0
	struct UAchievementManager* GetPure(); // Function Phoenix.AchievementManager.GetPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31cc4b0
	struct TArray<struct FKnowledgeAchievementResult> GetKnowledgeChallengesForSubject(struct FName KnowledgeSubject); // Function Phoenix.AchievementManager.GetKnowledgeChallengesForSubject // (Final|Native|Public|BlueprintCallable) // @ game+0x31ccd10
	int32_t GetHomeworkInstances(enum class EHomeworkType HomeworkType, struct FString HomeworkName, bool AssertIfNotFound); // Function Phoenix.AchievementManager.GetHomeworkInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x31ccbe0
	float GetFieldGuideCompletionPercentPerCategory(struct FAchievementCategory Category); // Function Phoenix.AchievementManager.GetFieldGuideCompletionPercentPerCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x31ccad0
	float GetFieldGuideCompletionPercent(); // Function Phoenix.AchievementManager.GetFieldGuideCompletionPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x31ccaa0
	int32_t GetDelayedRewardsCount(); // Function Phoenix.AchievementManager.GetDelayedRewardsCount // (Final|Native|Public|BlueprintCallable) // @ game+0x31cca70
	struct TArray<struct FKnowledgeAchievementResult> GetDelayedRewards(); // Function Phoenix.AchievementManager.GetDelayedRewards // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc9f0
	struct FKnowledgeAchievementResult GetChallengeLevel(struct FName AchievementID); // Function Phoenix.AchievementManager.GetChallengeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc8d0
	struct TMap<struct FName, struct FAchievementCategory> GetChallengeCategories(); // Function Phoenix.AchievementManager.GetChallengeCategories // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc7b0
	struct TArray<struct FKnowledgeAchievementResult> GetChalkboardChallengesForClass(struct FName ClassPrefix); // Function Phoenix.AchievementManager.GetChalkboardChallengesForClass // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc6d0
	struct FName GetAchievementType(struct FName AchievementID); // Function Phoenix.AchievementManager.GetAchievementType // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc640
	int32_t GetAchievementInstances(struct FName AchievementID); // Function Phoenix.AchievementManager.GetAchievementInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc5a0
	int32_t GetAchievementInstanceGoal(struct FName AchievementID); // Function Phoenix.AchievementManager.GetAchievementInstanceGoal // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc500
	struct UAchievementManager* Get(); // Function Phoenix.AchievementManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31cc4b0
	void DebugCompleteAllChallenges(); // Function Phoenix.AchievementManager.DebugCompleteAllChallenges // (Final|Exec|Native|Public) // @ game+0x1074730
	void DebugAwardChallenge(struct FString ChallengeID); // Function Phoenix.AchievementManager.DebugAwardChallenge // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void DebugAwardAchievement(struct FString AchievementID); // Function Phoenix.AchievementManager.DebugAwardAchievement // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void DebugAchievementShowState(struct FString AchievementID); // Function Phoenix.AchievementManager.DebugAchievementShowState // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void DebugAchievementResetSteam(); // Function Phoenix.AchievementManager.DebugAchievementResetSteam // (Final|Exec|Native|Public) // @ game+0x1074730
	void DebugAchievementOneOfEach(struct FString AchievementID, struct FString ObjectName); // Function Phoenix.AchievementManager.DebugAchievementOneOfEach // (Final|Exec|Native|Public) // @ game+0x31cc220
	void DebugAchievementIncrease(struct FString AchievementID, int32_t Amount); // Function Phoenix.AchievementManager.DebugAchievementIncrease // (Final|Exec|Native|Public) // @ game+0x31cc0f0
	bool ClaimReward(struct FKnowledgeAchievementResult achievement, struct FAchievementReward reward); // Function Phoenix.AchievementManager.ClaimReward // (Final|Native|Public|BlueprintCallable) // @ game+0x31cbf40
	void AwardOnUnlock(struct FName LockId); // Function Phoenix.AchievementManager.AwardOnUnlock // (Final|Native|Public|BlueprintCallable) // @ game+0x31cbc70
	void AwardOneTimeHomework(enum class EHomeworkType HomeworkType, struct FString HomeworkName, bool AssertIfNotFound); // Function Phoenix.AchievementManager.AwardOneTimeHomework // (Final|Native|Public|BlueprintCallable) // @ game+0x31cbe10
	void AwardOneTimeAchievement(struct FName AchievementID, bool CheckRulesFirst, bool AssertIfNotOneTime); // Function Phoenix.AchievementManager.AwardOneTimeAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x31cbd00
	bool ApplyWhitelistInstance(struct FName AchievementID, struct FName InstanceName); // Function Phoenix.AchievementManager.ApplyWhitelistInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x31cbba0
	bool ApplyOneOfEachInstance(struct FName AchievementID, struct FName InstanceName, bool isInternal); // Function Phoenix.AchievementManager.ApplyOneOfEachInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x31cba90
	void ApplyKnowledgeAction(struct FName KnowledgeSubject, struct FName KnowledgeAction, struct FName KnowledgeCategoryOverride); // Function Phoenix.AchievementManager.ApplyKnowledgeAction // (Final|Native|Public|BlueprintCallable) // @ game+0x31cb980
	void ApplyHomework(enum class EHomeworkType HomeworkType, struct FString HomeworkName, int32_t Count, bool AssertIfNotFound); // Function Phoenix.AchievementManager.ApplyHomework // (Final|Native|Public|BlueprintCallable) // @ game+0x31cb810
	void ApplyAchievementIncrease(struct FName AchievementID, int32_t Count, bool CheckRulesFirst, bool AssertIfNotAccumluate); // Function Phoenix.AchievementManager.ApplyAchievementIncrease // (Final|Native|Public|BlueprintCallable) // @ game+0x31cb6b0
	bool AnyDelayedRewards(); // Function Phoenix.AchievementManager.AnyDelayedRewards // (Final|Native|Public|BlueprintCallable) // @ game+0x31cb680
};

// Class Phoenix.Acknowledgement
// Size: 0x68 (Inherited: 0x28)
struct UAcknowledgement : UObject {
	char pad_28[0x40]; // 0x28(0x40)

	void EventExecute(bool bNewResult); // Function Phoenix.Acknowledgement.EventExecute // (Final|Native|Public) // @ game+0x31d07a0
};

// Class Phoenix.AcknowledgementEnumsBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UAcknowledgementEnumsBlueprintLibrary : UBlueprintFunctionLibrary {

	struct FName GetEAcknowledgementSpeakerTypeNameFromID(enum class EAcknowledgementSpeakerType inID); // Function Phoenix.AcknowledgementEnumsBlueprintLibrary.GetEAcknowledgementSpeakerTypeNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d0ac0
	enum class EAcknowledgementSpeakerType GetEAcknowledgementSpeakerTypeFromName(struct FName& strName); // Function Phoenix.AcknowledgementEnumsBlueprintLibrary.GetEAcknowledgementSpeakerTypeFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31d0a00
	struct FName GetEAcknowledgementRuleTypeNameFromID(enum class EAcknowledgementRuleType inID); // Function Phoenix.AcknowledgementEnumsBlueprintLibrary.GetEAcknowledgementRuleTypeNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d0960
	enum class EAcknowledgementRuleType GetEAcknowledgementRuleTypeFromName(struct FName& strName); // Function Phoenix.AcknowledgementEnumsBlueprintLibrary.GetEAcknowledgementRuleTypeFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31d08a0
};

// Class Phoenix.AcknowledgementManager
// Size: 0x4a0 (Inherited: 0x28)
struct UAcknowledgementManager : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct FMulticastInlineDelegate AcknowledgementStatChangedEvent; // 0x40(0x10)
	struct FMulticastInlineDelegate AcknowledgementEvent; // 0x50(0x10)
	char pad_60[0xa0]; // 0x60(0xa0)
	struct UGameLogicObject* AcknowledgementLogicContainer; // 0x100(0x08)
	struct TMap<struct FName, struct UAcknowledgement*> Acknowledgements; // 0x108(0x50)
	struct TMap<struct FName, struct UAcknowledgement*> TimeBasedAcknowledgements; // 0x158(0x50)
	char pad_1A8[0x2f8]; // 0x1a8(0x2f8)

	void UpdateMiscStatStatic(struct FName Key, struct FString Value); // Function Phoenix.AcknowledgementManager.UpdateMiscStatStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d2210
	void UpdateMiscIntStatStatic(struct FName Key, int32_t Value); // Function Phoenix.AcknowledgementManager.UpdateMiscIntStatStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d2150
	void UpdateMiscBoolStatStatic(struct FName Key, bool bValue); // Function Phoenix.AcknowledgementManager.UpdateMiscBoolStatStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d2090
	void SetSpecialSpeakerForAcknowledgement(struct AActor* InSpecialSpeaker); // Function Phoenix.AcknowledgementManager.SetSpecialSpeakerForAcknowledgement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d1ce0
	void SetSpecialSpeakerByDBIDForAcknowledgement(struct FName& InSpecialSpeakerName); // Function Phoenix.AcknowledgementManager.SetSpecialSpeakerByDBIDForAcknowledgement // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31d1c60
	void OnSaveGameLoaded(); // Function Phoenix.AcknowledgementManager.OnSaveGameLoaded // (Final|Native|Protected) // @ game+0x31d1620
	void OnPreLoadGame(); // Function Phoenix.AcknowledgementManager.OnPreLoadGame // (Final|Native|Protected) // @ game+0x31d1600
	void OnNewGame(); // Function Phoenix.AcknowledgementManager.OnNewGame // (Final|Native|Protected) // @ game+0x31d1600
	void HandleStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.AcknowledgementManager.HandleStatChanged // (Final|Native|Private) // @ game+0x31d0f00
	void HandleHouseChestAcknowledgement(); // Function Phoenix.AcknowledgementManager.HandleHouseChestAcknowledgement // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0c80
	void HandleFleshLoaded(struct AActor* InFleshActor); // Function Phoenix.AcknowledgementManager.HandleFleshLoaded // (Final|Native|Public) // @ game+0x31d0bf0
	struct UAcknowledgementManager* GetAcknowledgementManager(); // Function Phoenix.AcknowledgementManager.GetAcknowledgementManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31d0850
	struct UAcknowledgementManager* Get(); // Function Phoenix.AcknowledgementManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31d0850
};

// Class Phoenix.HUDElementGroup
// Size: 0x2e8 (Inherited: 0x268)
struct UHUDElementGroup : UUserWidget {
	enum class UIHUDGroups MyGroup; // 0x268(0x01)
	enum class ESlateVisibility DesiredHiddenState; // 0x269(0x01)
	char pad_26A[0x7e]; // 0x26a(0x7e)

	void ShowHUDElement(struct UObject* Provider); // Function Phoenix.HUDElementGroup.ShowHUDElement // (Native|Public|BlueprintCallable) // @ game+0x3306300
	void HideHUDElement(struct UObject* Provider); // Function Phoenix.HUDElementGroup.HideHUDElement // (Native|Public|BlueprintCallable) // @ game+0x33051d0
	bool GetShouldBeHidden(); // Function Phoenix.HUDElementGroup.GetShouldBeHidden // (Final|Native|Public) // @ game+0x33050d0
};

// Class Phoenix.ActionDiamondRing
// Size: 0x318 (Inherited: 0x2e8)
struct UActionDiamondRing : UHUDElementGroup {
	int32_t HighlightedSpellIndex; // 0x2e8(0x04)
	char pad_2EC[0x2c]; // 0x2ec(0x2c)

	void UpdateMiniDiamond(int32_t GroupIndex); // Function Phoenix.ActionDiamondRing.UpdateMiniDiamond // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowMiniDiamond(); // Function Phoenix.ActionDiamondRing.ShowMiniDiamond // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowButtonCallouts(bool Show); // Function Phoenix.ActionDiamondRing.ShowButtonCallouts // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowHUDElement(bool IgnoreLocks); // Function Phoenix.ActionDiamondRing.OnShowHUDElement // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowButtonsChanged(bool Show); // Function Phoenix.ActionDiamondRing.OnShowButtonsChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHideHUDElement(enum class ESlateVisibility HiddenState); // Function Phoenix.ActionDiamondRing.OnHideHUDElement // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFocusChanged(struct AActor* Actor, float Delta); // Function Phoenix.ActionDiamondRing.OnFocusChanged // (Final|Native|Public) // @ game+0x31d1530
	void NewDiamondSelected(); // Function Phoenix.ActionDiamondRing.NewDiamondSelected // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CollectItemData(int32_t GroupIndex); // Function Phoenix.ActionDiamondRing.CollectItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0600
	void AddItemWidgetToArray(struct UActionRingItem* Item); // Function Phoenix.ActionDiamondRing.AddItemWidgetToArray // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0480
};

// Class Phoenix.ActionItemWidget
// Size: 0x268 (Inherited: 0x268)
struct UActionItemWidget : UUserWidget {

	void ExecuteAction(); // Function Phoenix.ActionItemWidget.ExecuteAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void CollectItemData(int32_t LoadoutIndex, int32_t ItemIndex, struct UImage* ItemIcon); // Function Phoenix.ActionItemWidget.CollectItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0690
};

// Class Phoenix.ActionRingItem
// Size: 0x2a0 (Inherited: 0x268)
struct UActionRingItem : UUserWidget {
	char pad_268[0x38]; // 0x268(0x38)

	void ToggleSelectionHighlight(bool Show); // Function Phoenix.ActionRingItem.ToggleSelectionHighlight // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSubWidgetVisibility(enum class EUIQActionBarType ItemType); // Function Phoenix.ActionRingItem.SetSubWidgetVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSpellTool(); // Function Phoenix.ActionRingItem.SetSpellTool // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1d60
	void SetItemInventoryData(); // Function Phoenix.ActionRingItem.SetItemInventoryData // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1c20
	void SetItemData(enum class UIActionModes ActionMode, int32_t iGroupIndex, int32_t iMacroIndex, int32_t iItemIndex, bool ShowNone); // Function Phoenix.ActionRingItem.SetItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x31d19f0
	void OnUpdateMeter(float pct, bool IsASpell); // Function Phoenix.ActionRingItem.OnUpdateMeter // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnToggleEmptyItem(bool IsEmpty); // Function Phoenix.ActionRingItem.OnToggleEmptyItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellWhitelistDeactivated(struct UObject* InCaller); // Function Phoenix.ActionRingItem.OnSpellWhitelistDeactivated // (Final|Native|Public) // @ game+0x31d1960
	void OnSpellWhitelistActivated(struct UObject* InCaller); // Function Phoenix.ActionRingItem.OnSpellWhitelistActivated // (Final|Native|Public) // @ game+0x31d18d0
	void OnSpellCooldownChanged(struct FName SpellName, float CooldownPct); // Function Phoenix.ActionRingItem.OnSpellCooldownChanged // (Final|Native|Public) // @ game+0x31d1800
	void OnSpellCleared(struct UObject* InCaller, struct FName& SpellName); // Function Phoenix.ActionRingItem.OnSpellCleared // (Final|Native|Public|HasOutParms) // @ game+0x31d1720
	void OnSpellCastFailed(); // Function Phoenix.ActionRingItem.OnSpellCastFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellBlacklisted(struct UObject* InCaller, struct FName& SpellName); // Function Phoenix.ActionRingItem.OnSpellBlacklisted // (Final|Native|Public|HasOutParms) // @ game+0x31d1640
	void OnSetItemInventoryData(bool IsConsumable, int32_t ItemCount); // Function Phoenix.ActionRingItem.OnSetItemInventoryData // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnOverlayTextureLoaded(struct UTexture2D* Texture); // Function Phoenix.ActionRingItem.OnOverlayTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnItemIconTextureLoaded(struct UTexture2D* Texture); // Function Phoenix.ActionRingItem.OnItemIconTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIconTextureLoaded(struct UTexture2D* Texture); // Function Phoenix.ActionRingItem.OnIconTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIconGlowTextureLoaded(struct UTexture2D* Texture); // Function Phoenix.ActionRingItem.OnIconGlowTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHideItemCount(); // Function Phoenix.ActionRingItem.OnHideItemCount // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCreateBipedPlayer(struct UObject* InCaller); // Function Phoenix.ActionRingItem.OnCreateBipedPlayer // (Final|Native|Public) // @ game+0x31d14a0
	void MarkSpellAsBlacklisted(); // Function Phoenix.ActionRingItem.MarkSpellAsBlacklisted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LoadOverlayCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.ActionRingItem.LoadOverlayCallback // (Final|Native|Private) // @ game+0x31d12d0
	void LoadItemIconCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.ActionRingItem.LoadItemIconCallback // (Final|Native|Private) // @ game+0x31d1200
	void LoadIconGlowCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.ActionRingItem.LoadIconGlowCallback // (Final|Native|Private) // @ game+0x31d1130
	void LoadIconCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.ActionRingItem.LoadIconCallback // (Final|Native|Private) // @ game+0x31d1060
	void HandleSpellCastFailed(struct UObject* InCaller, struct FString SpellStr); // Function Phoenix.ActionRingItem.HandleSpellCastFailed // (Final|Native|Public) // @ game+0x31d0e20
	enum class ESpellCategory GetSpellCategory(); // Function Phoenix.ActionRingItem.GetSpellCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0b60
	void ClearSpellAsBlacklisted(); // Function Phoenix.ActionRingItem.ClearSpellAsBlacklisted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PhoenixUserWidget
// Size: 0x328 (Inherited: 0x2c8)
struct UPhoenixUserWidget : UUMGFocusWidget {
	struct FMulticastInlineDelegate IntroStartedEvent; // 0x2c8(0x10)
	struct FMulticastInlineDelegate IntroEndedEvent; // 0x2d8(0x10)
	struct FMulticastInlineDelegate OutroStartedEvent; // 0x2e8(0x10)
	struct FMulticastInlineDelegate OutroEndedEvent; // 0x2f8(0x10)
	float DefaultIntroDuration; // 0x308(0x04)
	float DefaultOutroDuration; // 0x30c(0x04)
	bool InterruptMenuReaderOnDestruct; // 0x310(0x01)
	char pad_311[0x17]; // 0x311(0x17)

	void TriggerOutro(int32_t OutroType); // Function Phoenix.PhoenixUserWidget.TriggerOutro // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7a80
	void TriggerIntro(int32_t IntroType); // Function Phoenix.PhoenixUserWidget.TriggerIntro // (Final|Native|Public|BlueprintCallable) // @ game+0x33f79f0
	void TriggerCustomOutro(int32_t OutroType, float OutroDuration); // Function Phoenix.PhoenixUserWidget.TriggerCustomOutro // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7920
	void TriggerCustomIntro(int32_t IntroType, float IntroDuration); // Function Phoenix.PhoenixUserWidget.TriggerCustomIntro // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7850
	void ReadMenu(int32_t DepthLevel, enum class EMenuReaderInterruptType InterruptType, struct UObject* InterruptOwnerFilter); // Function Phoenix.PhoenixUserWidget.ReadMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x33f71f0
	void PhoenixUserWidgetIntEvent__DelegateSignature(struct UPhoenixUserWidget* PhoenixUserWidget, int32_t IntParam); // DelegateFunction Phoenix.PhoenixUserWidget.PhoenixUserWidgetIntEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OverrideInitialIntroType(int32_t IntroType); // Function Phoenix.PhoenixUserWidget.OverrideInitialIntroType // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7060
	void OnOutroStarted(int32_t OutroType, float OutroDuration); // Function Phoenix.PhoenixUserWidget.OnOutroStarted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnOutroEnded(int32_t OutroType); // Function Phoenix.PhoenixUserWidget.OnOutroEnded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIntroStarted(int32_t IntroType, float IntroDuration); // Function Phoenix.PhoenixUserWidget.OnIntroStarted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIntroEnded(int32_t IntroType); // Function Phoenix.PhoenixUserWidget.OnIntroEnded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool IsTransitionInProgress(); // Function Phoenix.PhoenixUserWidget.IsTransitionInProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33f7030
	bool IsCurrentTransitionAnIntro(); // Function Phoenix.PhoenixUserWidget.IsCurrentTransitionAnIntro // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33f7000
	void InterruptMenuReader(enum class EMenuReaderInterruptType InterruptType, struct UObject* InterruptOwnerFilter); // Function Phoenix.PhoenixUserWidget.InterruptMenuReader // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6f30
	int32_t GetCurrentTransitionType(); // Function Phoenix.PhoenixUserWidget.GetCurrentTransitionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33f6ca0
	float GetCurrentTransitionProgress(); // Function Phoenix.PhoenixUserWidget.GetCurrentTransitionProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33f6c70
	struct TArray<struct FString> GatherMenuReaderStrings(int32_t DepthLevel); // Function Phoenix.PhoenixUserWidget.GatherMenuReaderStrings // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
};

// Class Phoenix.Screen
// Size: 0x370 (Inherited: 0x328)
struct UScreen : UPhoenixUserWidget {
	enum class EUIScreenType ScreenType; // 0x328(0x01)
	enum class EUIPopupPriority PopupPriority; // 0x329(0x01)
	bool ShouldShowCursor; // 0x32a(0x01)
	bool ShouldHideCursorOnRemove; // 0x32b(0x01)
	struct FVector2D CursorPositionOverride; // 0x32c(0x08)
	bool HandleBackButton; // 0x334(0x01)
	enum class EMouseLockMode MouseLockMode; // 0x335(0x01)
	bool bAutoAcquireUMGFocus; // 0x336(0x01)
	char pad_337[0x1]; // 0x337(0x01)
	struct TArray<enum class EUMGInputAction> IgnoredFocusInputActions; // 0x338(0x10)
	struct TArray<enum class EUMGInputAxis> IgnoredFocusInputAxis; // 0x348(0x10)
	char pad_358[0x18]; // 0x358(0x18)

	void ScreenUnregisterAllUMGInputAxis(); // Function Phoenix.Screen.ScreenUnregisterAllUMGInputAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x34606a0
	void ScreenUnregisterAllUMGInputActions(enum class EInputEvent InputEvent); // Function Phoenix.Screen.ScreenUnregisterAllUMGInputActions // (Final|Native|Public|BlueprintCallable) // @ game+0x3460620
	void ScreenRegisterAllUMGInputAxis(); // Function Phoenix.Screen.ScreenRegisterAllUMGInputAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x3460600
	void ScreenRegisterAllUMGInputActions(enum class EInputEvent InputEvent); // Function Phoenix.Screen.ScreenRegisterAllUMGInputActions // (Final|Native|Public|BlueprintCallable) // @ game+0x3460580
	void OnScreenOutroComplete(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.Screen.OnScreenOutroComplete // (Final|Native|Protected) // @ game+0x3460450
	bool IsInputEnabled(); // Function Phoenix.Screen.IsInputEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3460250
	int32_t GetZOrderOffsetForScreenType(enum class EUIScreenType InScreenType); // Function Phoenix.Screen.GetZOrderOffsetForScreenType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34601d0
	void GatherMastermindExtraScreenStrings(struct TArray<struct FString>& outExtraScreenStrings); // Function Phoenix.Screen.GatherMastermindExtraScreenStrings // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void CloseScreenWithOutro(); // Function Phoenix.Screen.CloseScreenWithOutro // (Final|Native|Public|BlueprintCallable) // @ game+0x345fad0
	void ClassLoaded(); // Function Phoenix.Screen.ClassLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.ActionSelectionBase
// Size: 0x370 (Inherited: 0x370)
struct UActionSelectionBase : UScreen {
};

// Class Phoenix.ActionSelectionScreenBase
// Size: 0x458 (Inherited: 0x370)
struct UActionSelectionScreenBase : UScreen {
	struct UCommonActionsBase* CommonActionsCode; // 0x370(0x08)
	struct FString CurrentHighlightedItem; // 0x378(0x10)
	struct FString CurrentHighlightedItemVariation; // 0x388(0x10)
	struct FName CurrentHighlightedItemHolder; // 0x398(0x08)
	enum class EUIQActionBarType CurrentHighlightedItemType; // 0x3a0(0x01)
	bool IsSpellVideoShowing; // 0x3a1(0x01)
	char pad_3A2[0x2]; // 0x3a2(0x02)
	struct FName TutorialName; // 0x3a4(0x08)
	struct FName SlotTutorialStepName; // 0x3ac(0x08)
	bool CurrentHighlightedItemIsUnlocked; // 0x3b4(0x01)
	bool CurrentHighlightedItemIsBlacklisted; // 0x3b5(0x01)
	bool InSlottingMode; // 0x3b6(0x01)
	char pad_3B7[0x1]; // 0x3b7(0x01)
	struct FString TutorializedSpell; // 0x3b8(0x10)
	bool RequestedSpellSlotted; // 0x3c8(0x01)
	bool NeedsAutosave; // 0x3c9(0x01)
	bool LeviosoTutorialActive; // 0x3ca(0x01)
	bool AccioTutorialActive; // 0x3cb(0x01)
	bool VanishmentTutorialActive; // 0x3cc(0x01)
	bool ConjurationTutorialActive; // 0x3cd(0x01)
	bool CreatureBrushTutorialActive; // 0x3ce(0x01)
	bool CreatureFeedTutorialActive; // 0x3cf(0x01)
	bool AlterationTutorialActive; // 0x3d0(0x01)
	bool EquippingIncendioTutorialActive; // 0x3d1(0x01)
	char pad_3D2[0x86]; // 0x3d2(0x86)

	void UpdateMacroCode(struct FString ItemName, struct FString Variation, struct FName HolderID, enum class EUIQActionBarType ItemType); // Function Phoenix.ActionSelectionScreenBase.UpdateMacroCode // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1ea0
	void ToggleListenForSpellSlottingEvents(bool ShouldListen); // Function Phoenix.ActionSelectionScreenBase.ToggleListenForSpellSlottingEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1e10
	void ToggleListenForSpellGroupEvents(bool ShouldListen); // Function Phoenix.ActionSelectionScreenBase.ToggleListenForSpellGroupEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1d80
	void SetSlottedSpells(); // Function Phoenix.ActionSelectionScreenBase.SetSlottedSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1c40
	void SetItemDataCode(int32_t GroupId); // Function Phoenix.ActionSelectionScreenBase.SetItemDataCode // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1b90
	void OnSpellSelectedBP(struct UObject* SpellObject); // Function Phoenix.ActionSelectionScreenBase.OnSpellSelectedBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellHoveredBP(struct UObject* SpellObject); // Function Phoenix.ActionSelectionScreenBase.OnSpellHoveredBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowButtonsChanged(bool Show); // Function Phoenix.ActionSelectionScreenBase.OnShowButtonsChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetSlottedSpells(struct TArray<struct FString>& SlottedSpells); // Function Phoenix.ActionSelectionScreenBase.OnSetSlottedSpells // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnRequestedSpellSlotted(struct FString SpellName); // Function Phoenix.ActionSelectionScreenBase.OnRequestedSpellSlotted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHideSpellPreviewer(); // Function Phoenix.ActionSelectionScreenBase.OnHideSpellPreviewer // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHideCursor(); // Function Phoenix.ActionSelectionScreenBase.OnHideCursor // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHandleRightTriggerRelease(); // Function Phoenix.ActionSelectionScreenBase.OnHandleRightTriggerRelease // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHandleRightTriggerPress(); // Function Phoenix.ActionSelectionScreenBase.OnHandleRightTriggerPress // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHandleDirectionalButtonInput(); // Function Phoenix.ActionSelectionScreenBase.OnHandleDirectionalButtonInput // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnExitRequested(); // Function Phoenix.ActionSelectionScreenBase.OnExitRequested // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnChangeDiamondTop(); // Function Phoenix.ActionSelectionScreenBase.OnChangeDiamondTop // (Final|Native|Public) // @ game+0x31d1480
	void OnChangeDiamondRight(); // Function Phoenix.ActionSelectionScreenBase.OnChangeDiamondRight // (Final|Native|Public) // @ game+0x31d1460
	void OnChangeDiamondLeft(); // Function Phoenix.ActionSelectionScreenBase.OnChangeDiamondLeft // (Final|Native|Public) // @ game+0x31d1440
	void OnChangeDiamondBottom(); // Function Phoenix.ActionSelectionScreenBase.OnChangeDiamondBottom // (Final|Native|Public) // @ game+0x31d1420
	void OnCastTopSpell(); // Function Phoenix.ActionSelectionScreenBase.OnCastTopSpell // (Final|Native|Public) // @ game+0x31d1400
	void OnCastRightSpell(); // Function Phoenix.ActionSelectionScreenBase.OnCastRightSpell // (Final|Native|Public) // @ game+0x31d13e0
	void OnCastLeftSpell(); // Function Phoenix.ActionSelectionScreenBase.OnCastLeftSpell // (Final|Native|Public) // @ game+0x31d13c0
	void OnCastBottomSpell(); // Function Phoenix.ActionSelectionScreenBase.OnCastBottomSpell // (Final|Native|Public) // @ game+0x31d13a0
	void HideCursorIfInTutorial(); // Function Phoenix.ActionSelectionScreenBase.HideCursorIfInTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1040
	bool HandleViewSpellButtonPress(); // Function Phoenix.ActionSelectionScreenBase.HandleViewSpellButtonPress // (Final|Native|Public|BlueprintCallable) // @ game+0x31d1010
	bool HandleRightTriggerRelease(); // Function Phoenix.ActionSelectionScreenBase.HandleRightTriggerRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0df0
	bool HandleRightTriggerPress(); // Function Phoenix.ActionSelectionScreenBase.HandleRightTriggerPress // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0dc0
	bool HandleKeyUp(enum class EUMGInputAction InputAction); // Function Phoenix.ActionSelectionScreenBase.HandleKeyUp // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0d30
	bool HandleKeyDown(enum class EUMGInputAction InputAction); // Function Phoenix.ActionSelectionScreenBase.HandleKeyDown // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0ca0
	bool HandleCloseScreenButtonPress(); // Function Phoenix.ActionSelectionScreenBase.HandleCloseScreenButtonPress // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0bc0
	bool HandleBackButtonPress(); // Function Phoenix.ActionSelectionScreenBase.HandleBackButtonPress // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0b90
	void ExitActionSelection(); // Function Phoenix.ActionSelectionScreenBase.ExitActionSelection // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0830
	bool CanSlotSpell(); // Function Phoenix.ActionSelectionScreenBase.CanSlotSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x31d05d0
	bool CanExitScreen(); // Function Phoenix.ActionSelectionScreenBase.CanExitScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x31d05a0
	void AttachCommonAction(struct UCommonActionsBase* ActionsWidget); // Function Phoenix.ActionSelectionScreenBase.AttachCommonAction // (Final|Native|Public|BlueprintCallable) // @ game+0x31d0510
};

// Class Phoenix.ActionSelectionScreenBase_Controller
// Size: 0x478 (Inherited: 0x458)
struct UActionSelectionScreenBase_Controller : UActionSelectionScreenBase {
	char pad_458[0x20]; // 0x458(0x20)

	void OnSpellModifierRelease(); // Function Phoenix.ActionSelectionScreenBase_Controller.OnSpellModifierRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x31d7880
	void OnSpellModifierPress(); // Function Phoenix.ActionSelectionScreenBase_Controller.OnSpellModifierPress // (Final|Native|Public|BlueprintCallable) // @ game+0x31d7860
};

// Class Phoenix.Actor_ByCharacterID
// Size: 0xc0 (Inherited: 0x38)
struct UActor_ByCharacterID : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FSpawnSelectInfo DBInfo; // 0x40(0x80)
};

// Class Phoenix.Actor_ByStat
// Size: 0x58 (Inherited: 0x38)
struct UActor_ByStat : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FStatList Stat; // 0x40(0x08)
	struct TArray<struct FActorByStat> Actors; // 0x48(0x10)
};

// Class Phoenix.Actor_CharactersWand
// Size: 0x38 (Inherited: 0x38)
struct UActor_CharactersWand : UActorProvider {
};

// Class Phoenix.Actor_Companion
// Size: 0x38 (Inherited: 0x38)
struct UActor_Companion : UActorProvider {
};

// Class Phoenix.Actor_CreatureReleasedFromInventory
// Size: 0x108 (Inherited: 0x38)
struct UActor_CreatureReleasedFromInventory : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	bool bGetSavedCreature; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FString SavedCreatureID; // 0x48(0x10)
	struct FDbSingleColumnInfo DBInfo; // 0x58(0x88)
	bool bUseExistingDOV; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct UActorProvider* ExistingDOV; // 0xe8(0x08)
	struct FName NurturingSpaceOverride; // 0xf0(0x08)
	char pad_F8[0x10]; // 0xf8(0x10)
};

// Class Phoenix.Actor_FromDOV_SpawnedCallback
// Size: 0x38 (Inherited: 0x28)
struct UActor_FromDOV_SpawnedCallback : UObject {
	struct UObject* Caller; // 0x28(0x08)
	struct UActor_FromDOV* Provider; // 0x30(0x08)

	void ObjectSpawnCallback(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.Actor_FromDOV_SpawnedCallback.ObjectSpawnCallback // (Final|Native|Public|HasOutParms) // @ game+0x31d7780
};

// Class Phoenix.Actor_FromDOV
// Size: 0x68 (Inherited: 0x38)
struct UActor_FromDOV : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FWorldActorReference DOVActorReference; // 0x40(0x20)
	struct FName SpawnGroupName; // 0x60(0x08)
};

// Class Phoenix.Actor_FromDOVWithName_SpawnedCallback
// Size: 0x38 (Inherited: 0x28)
struct UActor_FromDOVWithName_SpawnedCallback : UObject {
	struct UObject* Caller; // 0x28(0x08)
	struct UActor_FromDOVWithName* Provider; // 0x30(0x08)

	void ObjectSpawnCallback(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.Actor_FromDOVWithName_SpawnedCallback.ObjectSpawnCallback // (Final|Native|Public|HasOutParms) // @ game+0x31d76a0
};

// Class Phoenix.Actor_FromDOVWithName
// Size: 0x50 (Inherited: 0x38)
struct UActor_FromDOVWithName : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FName DOVActorName; // 0x40(0x08)
	struct FName SpawnGroupName; // 0x48(0x08)
};

// Class Phoenix.Actor_DOVWithName
// Size: 0x40 (Inherited: 0x38)
struct UActor_DOVWithName : UActorProvider {
	struct FName DOVActorName; // 0x38(0x08)
};

// Class Phoenix.Actor_FromSE
// Size: 0x48 (Inherited: 0x38)
struct UActor_FromSE : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct UScheduledEntity* ScheduledEntity; // 0x40(0x08)
};

// Class Phoenix.Actor_FromStreamingPlaceholder
// Size: 0x60 (Inherited: 0x38)
struct UActor_FromStreamingPlaceholder : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FWorldActorReference StreamingPlaceholder; // 0x40(0x20)
};

// Class Phoenix.Actor_FromT3Pool
// Size: 0x210 (Inherited: 0x38)
struct UActor_FromT3Pool : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	bool bUseBoundParameter; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct UStringProvider* ActorDbIdProvider; // 0x48(0x08)
	struct FDbDoubleColumnInfo CharacterIdInfo; // 0x50(0xd8)
	struct FDbSingleColumnInfo CharacterLookIdInfo; // 0x128(0x88)
	struct UTransformProvider* PlacementLocation; // 0x1b0(0x08)
	bool bStartWithoutActors; // 0x1b8(0x01)
	char pad_1B9[0x57]; // 0x1b9(0x57)
};

// Class Phoenix.Actor_MissionPerformTasks
// Size: 0x48 (Inherited: 0x38)
struct UActor_MissionPerformTasks : UActorProvider {
	struct FName MissionID; // 0x38(0x08)
	int32_t MissionUID; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.Actor_MissionSplineFollower
// Size: 0x48 (Inherited: 0x38)
struct UActor_MissionSplineFollower : UActorProvider {
	struct FName MissionID; // 0x38(0x08)
	int32_t MissionUID; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.Actor_MissionStation
// Size: 0x48 (Inherited: 0x38)
struct UActor_MissionStation : UActorProvider {
	struct FName MissionID; // 0x38(0x08)
	int32_t MissionUID; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.Actor_MountCreature
// Size: 0x48 (Inherited: 0x38)
struct UActor_MountCreature : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct ACreatureMountHandler* MountHandlerClass; // 0x40(0x08)
};

// Class Phoenix.Actor_NamedCreature
// Size: 0xf8 (Inherited: 0x38)
struct UActor_NamedCreature : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FDbSingleColumnInfo DBInfo; // 0x40(0x88)
	bool bUseExistingDOV; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	struct FName DOVName; // 0xcc(0x08)
	char pad_D4[0x24]; // 0xd4(0x24)
};

// Class Phoenix.Actor_SanctuaryZoneStreaming
// Size: 0x50 (Inherited: 0x38)
struct UActor_SanctuaryZoneStreaming : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FName ZoneName; // 0x40(0x08)
	bool bWaitForParallelStreamingComplete; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.ActorSpawnFromDOVCallback
// Size: 0x38 (Inherited: 0x28)
struct UActorSpawnFromDOVCallback : UObject {
	struct UObject* Caller; // 0x28(0x08)
	struct UActor_SpawnFromDOVBase* Provider; // 0x30(0x08)

	void ObjectSpawnCallback(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.ActorSpawnFromDOVCallback.ObjectSpawnCallback // (Final|Native|Public|HasOutParms) // @ game+0x31d75c0
};

// Class Phoenix.Actor_SpawnFromDOVBase
// Size: 0x50 (Inherited: 0x38)
struct UActor_SpawnFromDOVBase : UActorProvider {
	char pad_38[0x8]; // 0x38(0x08)
	struct FName SpawnGroupName; // 0x40(0x08)
	bool bKeepAliveAtEndOfScenerig; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.Actor_SpawnFromDOV
// Size: 0x70 (Inherited: 0x50)
struct UActor_SpawnFromDOV : UActor_SpawnFromDOVBase {
	struct FWorldActorReference DOVActorReference; // 0x50(0x20)
};

// Class Phoenix.Actor_SpawnFromDOVWithName
// Size: 0x58 (Inherited: 0x50)
struct UActor_SpawnFromDOVWithName : UActor_SpawnFromDOVBase {
	struct FName DOVActorName; // 0x50(0x08)
};

// Class Phoenix.AIDataProvider_CreatureApproachRange
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureApproachRange : UAIDataProvider_QueryParams {
	bool bRandomizeRange; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.AIDataProvider_CreatureTurnApproachRadius
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureTurnApproachRadius : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureTrotApproachRadius
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureTrotApproachRadius : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureRunApproachRadius
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureRunApproachRadius : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureGrazingMin
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureGrazingMin : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureGrazingMax
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureGrazingMax : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureGrazingWait
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CreatureGrazingWait : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CreatureCirclingTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureCirclingTime : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreaturePerchingTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreaturePerchingTime : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureExploreWaitTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureExploreWaitTime : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureExploreRange
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureExploreRange : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureExploreRangeFromHerdLocation
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureExploreRangeFromHerdLocation : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureNewHerdLocationRange
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureNewHerdLocationRange : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureForageRange
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureForageRange : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureForageLookAroundTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureForageLookAroundTime : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureRelaxTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureRelaxTime : UAIDataProvider_QueryParams {
	enum class ECreatureStance Stance; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureScaledCapsuleRadius
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureScaledCapsuleRadius : UAIDataProvider_QueryParams {
	float Multiplier; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.AIDataProvider_CreatureCombat_RepositionDistance
// Size: 0x50 (Inherited: 0x40)
struct UAIDataProvider_CreatureCombat_RepositionDistance : UAIDataProvider_QueryParams {
	struct UCreatureCombatRepositionData* CombatData; // 0x40(0x08)
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.AIDataProvider_CreatureCombat_AttackDistance
// Size: 0x50 (Inherited: 0x40)
struct UAIDataProvider_CreatureCombat_AttackDistance : UAIDataProvider_QueryParams {
	struct UCreatureCombatAttackData* CombatData; // 0x40(0x08)
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.AIDataProvider_CreatureCombat_AttackImpactTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureCombat_AttackImpactTime : UAIDataProvider_QueryParams {
	struct UCreatureCombatAttackData* CombatData; // 0x40(0x08)
};

// Class Phoenix.AIDataProvider_CreatureCombat_AttackCommitTime
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CreatureCombat_AttackCommitTime : UAIDataProvider_QueryParams {
	struct UCreatureCombatAttackData* CombatData; // 0x40(0x08)
};

// Class Phoenix.AISense_CogGroup_Aim
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_Aim : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_AutoTarget
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_AutoTarget : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_Climb
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_Climb : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_Interact
// Size: 0x1a0 (Inherited: 0x188)
struct UAISense_CogGroup_Interact : UAISense_CogGroup {
	char pad_188[0x18]; // 0x188(0x18)
};

// Class Phoenix.AISense_CogGroup_Oppugno
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_Oppugno : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_Reparo
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_Reparo : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_Station
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_Station : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_StealthInteract
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_StealthInteract : UAISense_CogGroup {
};

// Class Phoenix.AISense_CogGroup_TargetOfInterest
// Size: 0x188 (Inherited: 0x188)
struct UAISense_CogGroup_TargetOfInterest : UAISense_CogGroup {
};

// Class Phoenix.AISense_Creature
// Size: 0x90 (Inherited: 0x80)
struct UAISense_Creature : UAISense {
	char pad_80[0x10]; // 0x80(0x10)
};

// Class Phoenix.AISense_NPC
// Size: 0x80 (Inherited: 0x80)
struct UAISense_NPC : UAISense {
};

// Class Phoenix.AISense_EnemyAITarget
// Size: 0x80 (Inherited: 0x80)
struct UAISense_EnemyAITarget : UAISense_NPC {
};

// Class Phoenix.AISense_EnemyAIWeapon
// Size: 0x80 (Inherited: 0x80)
struct UAISense_EnemyAIWeapon : UAISense_NPC {
};

// Class Phoenix.AISense_GameEvent
// Size: 0x80 (Inherited: 0x80)
struct UAISense_GameEvent : UAISense {

	void ReportGameEvent(struct UObject* WorldContextObject, struct FGameplayTagContainer TagContainer, struct FVector Location, enum class EGameEvent_Intensity Intensity, float Duration, float Range, float Falloff, struct AActor* Instigator, bool bTrackBackToInstigator, struct AActor* Target, struct FName Name); // Function Phoenix.AISense_GameEvent.ReportGameEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31d78a0
};

// Class Phoenix.AISense_Magic
// Size: 0xe8 (Inherited: 0x80)
struct UAISense_Magic : UAISense {
	struct TArray<struct FAIMagicEvent> MagicEvents; // 0x80(0x10)
	float SpeedOfMagicFeelSq; // 0x90(0x04)
	char pad_94[0x54]; // 0x94(0x54)

	void ReportMagicEvent(struct UObject* WorldContextObject, struct FVector MagicLocation, float Power, struct AActor* Instigator, float MaxRange, struct FName Tag); // Function Phoenix.AISense_Magic.ReportMagicEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31d7c20
};

// Class Phoenix.AISense_NearbyCreatures
// Size: 0x90 (Inherited: 0x80)
struct UAISense_NearbyCreatures : UAISense {
	char pad_80[0x10]; // 0x80(0x10)
};

// Class Phoenix.AISense_NPCCrimeScene
// Size: 0x80 (Inherited: 0x80)
struct UAISense_NPCCrimeScene : UAISense_NPC {
};

// Class Phoenix.AISense_Smell
// Size: 0x80 (Inherited: 0x80)
struct UAISense_Smell : UAISense {
};

// Class Phoenix.AISenseConfig_Creature
// Size: 0x60 (Inherited: 0x48)
struct UAISenseConfig_Creature : UAISenseConfig {
	struct UAISense_Creature* Implementation; // 0x48(0x08)
	float LowerRadius; // 0x50(0x04)
	float UpperRadius; // 0x54(0x04)
	float AwarenessMultiplier; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.AISenseConfig_NPC
// Size: 0x60 (Inherited: 0x48)
struct UAISenseConfig_NPC : UAISenseConfig {
	bool bEnabled; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float UpdateInterval; // 0x4c(0x04)
	float EvaluateRadius; // 0x50(0x04)
	bool bStartActive; // 0x54(0x01)
	char pad_55[0xb]; // 0x55(0x0b)
};

// Class Phoenix.AISenseConfig_EnemyAITarget
// Size: 0x328 (Inherited: 0x60)
struct UAISenseConfig_EnemyAITarget : UAISenseConfig_NPC {
	struct UAISense_EnemyAITarget* Implementation; // 0x60(0x08)
	enum class EPerceptionPointEvaluateSource EvaluateSource; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct TArray<struct FString> ExcludeTagList; // 0x70(0x10)
	struct TArray<struct APerceptionPointArea*> ForceTargetVolumeList; // 0x80(0x10)
	struct TArray<struct APerceptionPointArea*> ForceTargetExcludeVolumeList; // 0x90(0x10)
	bool bOverrideDistanceRequirement; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct TArray<struct APerceptionPointArea*> PerceiveVolumeList; // 0xa8(0x10)
	float PerceiveRadius; // 0xb8(0x04)
	float LoseRadius; // 0xbc(0x04)
	float HeightDifference; // 0xc0(0x04)
	float EvaluateInterval; // 0xc4(0x04)
	struct UEnemy_TargetSenseAsset* TargetSenseAsset; // 0xc8(0x08)
	struct UEnemy_TargetSenseAsset* NPCTargetSenseAsset; // 0xd0(0x08)
	struct UEnemy_TargetSenseAsset* NonCombatSenseAsset; // 0xd8(0x08)
	struct FEnemy_TargetSense_LOS LOS; // 0xe0(0x1c)
	struct FEnemy_TargetSense_FOV FieldOfView; // 0xfc(0x1bc)
	struct FEnemy_TargetSense_Remember Remember; // 0x2b8(0x10)
	struct FEnemy_TargetSense_TAS TAS; // 0x2c8(0x28)
	struct FEnemy_TargetSense_DisillusionmentScale DisillusionmentScale; // 0x2f0(0x04)
	char pad_2F4[0x4]; // 0x2f4(0x04)
	struct TArray<struct APerceptionPointArea*> TeamateShareVolumeList; // 0x2f8(0x10)
	char pad_308[0x20]; // 0x308(0x20)
};

// Class Phoenix.AISenseConfig_EnemyAIWeapon
// Size: 0x80 (Inherited: 0x60)
struct UAISenseConfig_EnemyAIWeapon : UAISenseConfig_NPC {
	struct UAISense_EnemyAIWeapon* Implementation; // 0x60(0x08)
	bool bOverrideDistanceRequirement; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float PerceiveRadius; // 0x6c(0x04)
	struct TArray<struct APerceptionPointArea*> PerceiveVolumeList; // 0x70(0x10)
};

// Class Phoenix.AISenseConfig_GameEvent
// Size: 0x58 (Inherited: 0x48)
struct UAISenseConfig_GameEvent : UAISenseConfig {
	struct UAISense_GameEvent* Implementation; // 0x48(0x08)
	struct UPlayer_FootfallDataAsset* FootfallDataAsset; // 0x50(0x08)
};

// Class Phoenix.AISenseConfig_Magic
// Size: 0x58 (Inherited: 0x48)
struct UAISenseConfig_Magic : UAISenseConfig {
	float MagicSensingRange; // 0x48(0x04)
	float LoSMagicSensingRange; // 0x4c(0x04)
	char bUseLoSMagicSensing : 1; // 0x50(0x01)
	char pad_50_1 : 7; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	struct FAISenseAffiliationFilter DetectionByAffiliation; // 0x54(0x04)
};

// Class Phoenix.AISenseConfig_NearbyCreatures
// Size: 0x50 (Inherited: 0x48)
struct UAISenseConfig_NearbyCreatures : UAISenseConfig {
	float Range; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.NPC_CrimeSceneSenseAsset
// Size: 0x60 (Inherited: 0x30)
struct UNPC_CrimeSceneSenseAsset : UDataAsset {
	struct FNPC_CrimeSceneSense CrimeSceneSense; // 0x30(0x30)
};

// Class Phoenix.AISenseConfig_NPCCrimeScene
// Size: 0x80 (Inherited: 0x60)
struct UAISenseConfig_NPCCrimeScene : UAISenseConfig_NPC {
	struct UAISense_NPCCrimeScene* Implementation; // 0x60(0x08)
	struct UNPC_CrimeSceneSenseAsset* SenseAsset; // 0x68(0x08)
	float PerceiveRadius; // 0x70(0x04)
	float LoseRadius; // 0x74(0x04)
	float HeightDifference; // 0x78(0x04)
	float EvaluateInterval; // 0x7c(0x04)
};

// Class Phoenix.AISenseConfig_Smell
// Size: 0x58 (Inherited: 0x48)
struct UAISenseConfig_Smell : UAISenseConfig {
	struct UAISense_Smell* Implementation; // 0x48(0x08)
	float Range; // 0x50(0x04)
	bool bDisplayDebugSphere; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
};

// Class Phoenix.AISenseEvent_GameEvent
// Size: 0xb8 (Inherited: 0x28)
struct UAISenseEvent_GameEvent : UAISenseEvent {
	struct FAIGameEvent Event; // 0x28(0x90)
};

// Class Phoenix.AISenseEvent_Magic
// Size: 0x58 (Inherited: 0x28)
struct UAISenseEvent_Magic : UAISenseEvent {
	struct FAIMagicEvent Event; // 0x28(0x30)
};

// Class Phoenix.AlohomoraLevelHelper
// Size: 0x28 (Inherited: 0x28)
struct UAlohomoraLevelHelper : UObject {

	void SwitchAlohomoraLevel(enum class EAlohomoraLevel& AlohomoraLevel); // Function Phoenix.AlohomoraLevelHelper.SwitchAlohomoraLevel // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31dcf20
	void SetAlohomoraLevel(enum class EAlohomoraLevel AlohomoraLevel); // Function Phoenix.AlohomoraLevelHelper.SetAlohomoraLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dcca0
	bool IsAlohomoraLevel(enum class EAlohomoraLevel AlohomoraLevel); // Function Phoenix.AlohomoraLevelHelper.IsAlohomoraLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dca60
	enum class EAlohomoraLevel GetAlohomoraLevel(); // Function Phoenix.AlohomoraLevelHelper.GetAlohomoraLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db0a0
};

// Class Phoenix.AmbientCreatureSpawnManager
// Size: 0x270 (Inherited: 0x28)
struct UAmbientCreatureSpawnManager : UObject {
	char pad_28[0x248]; // 0x28(0x248)

	void SetSpawningEnabled(bool bEnabled); // Function Phoenix.AmbientCreatureSpawnManager.SetSpawningEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x31dce10
	struct UAmbientCreatureSpawnManager* Get(); // Function Phoenix.AmbientCreatureSpawnManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31db050
	void CullAllCreatures(bool bFadeOut); // Function Phoenix.AmbientCreatureSpawnManager.CullAllCreatures // (Final|Native|Public|BlueprintCallable) // @ game+0x31dafc0
};

// Class Phoenix.AmbientCreatureSpawnVolume
// Size: 0x300 (Inherited: 0x250)
struct AAmbientCreatureSpawnVolume : ATriggerBox {
	enum class EAmbientCreatureSpawnVolumeType VolumeType; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct FDbSingleColumnInfo CreatureGroupSelector; // 0x258(0x88)
	enum class EAmbientCreatureSpawnVolumePriority VolumePriority; // 0x2e0(0x04)
	float RangeMultiplier; // 0x2e4(0x04)
	bool bSuppressSpawning; // 0x2e8(0x01)
	char pad_2E9[0x17]; // 0x2e9(0x17)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.AmbientCreatureSpawnVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x31dcbb0
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.AmbientCreatureSpawnVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x31dcae0
};

// Class Phoenix.AmbientGhost_AnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UAmbientGhost_AnimInstance : UAnimInstance {
	bool bWaveEnabled; // 0x2b8(0x01)

	void WaveCompleted(); // Function Phoenix.AmbientGhost_AnimInstance.WaveCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x31dcfa0
};

// Class Phoenix.AmbientGhost_Character
// Size: 0x540 (Inherited: 0x4e0)
struct AAmbientGhost_Character : ACharacter {
	char pad_4E0[0x10]; // 0x4e0(0x10)
	struct USplineComponent* SplineComponent; // 0x4f0(0x08)
	float DistanceAlongSpline; // 0x4f8(0x04)
	float TravelDirection; // 0x4fc(0x04)
	float TravelSpeed; // 0x500(0x04)
	float YawSpeed; // 0x504(0x04)
	float TurnToFacePlayerSpeed; // 0x508(0x04)
	float DistanceAtWhichGhostFacesPlayer; // 0x50c(0x04)
	float VerticalDistanceAtWhichGhostFacesPlayer; // 0x510(0x04)
	float OuterRadius; // 0x514(0x04)
	float OuterRadiusVerticalDistance; // 0x518(0x04)
	float InnerRadius; // 0x51c(0x04)
	float InnerRadiusVerticalDistance; // 0x520(0x04)
	struct TWeakObjectPtr<struct UAmbientGhost_AnimInstance> AmbientGhostAnimInstance; // 0x524(0x08)
	char pad_52C[0x14]; // 0x52c(0x14)

	void ExitedOuterRadius(); // Function Phoenix.AmbientGhost_Character.ExitedOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExitedInnerRadius(); // Function Phoenix.AmbientGhost_Character.ExitedInnerRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredOuterRadius(); // Function Phoenix.AmbientGhost_Character.EnteredOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredInnerRadius(); // Function Phoenix.AmbientGhost_Character.EnteredInnerRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AmbientPaintingActor
// Size: 0x2d0 (Inherited: 0x248)
struct AAmbientPaintingActor : AActor {
	char pad_248[0x10]; // 0x248(0x10)
	struct USceneComponent* RootSceneComponent; // 0x258(0x08)
	struct UStaticMeshComponent* FrameT; // 0x260(0x08)
	struct FDataTableRowHandle AtlasHandle; // 0x268(0x10)
	struct FDataTableRowHandle PaintingHandle; // 0x278(0x10)
	struct UMaterialInterface* PaintingMaterial; // 0x288(0x08)
	struct UDataTable* AmbientPaintingsLibraryDT; // 0x290(0x08)
	struct UPhysicalResponseComponent* PhysicalResponse; // 0x298(0x08)
	struct UBinkMediaPlayer* BinkMediaPlayer; // 0x2a0(0x08)
	char pad_2A8[0x10]; // 0x2a8(0x10)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x2b8(0x08)
	char pad_2C0[0x10]; // 0x2c0(0x10)
};

// Class Phoenix.AmbientPaintingBudgeter
// Size: 0xa0 (Inherited: 0x40)
struct UAmbientPaintingBudgeter : UBudgeter {
	char pad_40[0x60]; // 0x40(0x60)
};

// Class Phoenix.AmbientPaintingBudgeterInterface
// Size: 0x28 (Inherited: 0x28)
struct UAmbientPaintingBudgeterInterface : UInterface {
};

// Class Phoenix.AmbulatoryAnimTask_TurnAssist
// Size: 0xa8 (Inherited: 0x58)
struct UAmbulatoryAnimTask_TurnAssist : UAmbulatoryTurnAssistAnimTask {
	struct FAlphaBlend TurningBlend; // 0x58(0x30)
	struct FVector CurrentDirection; // 0x88(0x0c)
	struct FVector DesiredDirection; // 0x94(0x0c)
	float ElapsedTime; // 0xa0(0x04)
	bool bTimerReset; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
};

// Class Phoenix.AnalyticsManager
// Size: 0x238 (Inherited: 0x28)
struct UAnalyticsManager : UObject {
	char pad_28[0x210]; // 0x28(0x210)

	void SetUsingFloo(bool UsingFloo); // Function Phoenix.AnalyticsManager.SetUsingFloo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dcea0
	void SetSaveSlot(int32_t SaveSlot); // Function Phoenix.AnalyticsManager.SetSaveSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dcd90
	void SetNaturalPlaythrough(bool bNatural); // Function Phoenix.AnalyticsManager.SetNaturalPlaythrough // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dcd10
	void OnSaveGameLoaded(); // Function Phoenix.AnalyticsManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x31dcc80
	void HeartbeatUpdateMountState(struct FString MountType); // Function Phoenix.AnalyticsManager.HeartbeatUpdateMountState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dc980
	void HandleSphinxPuzzle(struct FString Name, struct FString Type, enum class EInteractiveState InteractiveState); // Function Phoenix.AnalyticsManager.HandleSphinxPuzzle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dc7e0
	void HandleSpellFunnel(bool Conjuration, int32_t StepNumber, struct FString FunnelAction, struct FString Selection, struct FString Transformation, struct FString Color, struct FString SelectionID); // Function Phoenix.AnalyticsManager.HandleSpellFunnel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dc440
	void HandleResourceFlow(struct FString Resource, float ChangeAmount, float FinalAmount, struct FString Source, struct FString SourceDetail, struct FString ResourceFlowID, struct FString ResourceCategory); // Function Phoenix.AnalyticsManager.HandleResourceFlow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dc0b0
	void HandlePuzzle(struct FString PuzzleName, bool Start, struct FString PuzzleType); // Function Phoenix.AnalyticsManager.HandlePuzzle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dbf00
	void HandlePlayerAvatarUpdate(struct FString PresetType, struct FString PresetValue); // Function Phoenix.AnalyticsManager.HandlePlayerAvatarUpdate // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dbd90
	void HandleOptionSet(struct FString OptionName, struct FString OptionType, struct FString StringValue, bool BoolValue, float FloatValue); // Function Phoenix.AnalyticsManager.HandleOptionSet // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dbb00
	void HandleNPCAction(struct FString NPCID, struct FString Action, struct FString ActionDetail, struct FString ConversationID, struct FString DialogueText, int32_t ChoiceNum, int32_t NumChoices); // Function Phoenix.AnalyticsManager.HandleNPCAction // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db780
	void HandleMenuItemSelect(struct FName menuItemName, struct FString selectAction); // Function Phoenix.AnalyticsManager.HandleMenuItemSelect // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db660
	void HandleMenuAction(struct FString MenuName, struct FString Action, struct FString Selection, struct FString SelectionDetail, bool LockedToPage); // Function Phoenix.AnalyticsManager.HandleMenuAction // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db390
	void HandleInteraction(struct AActor* Target); // Function Phoenix.AnalyticsManager.HandleInteraction // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db310
	void HandleFirstTimeLaunch(); // Function Phoenix.AnalyticsManager.HandleFirstTimeLaunch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db2f0
	void HandleConversationChoice(struct FString DialogueID, int32_t ChoiceNum, int32_t NumChoices); // Function Phoenix.AnalyticsManager.HandleConversationChoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db190
	struct FString GetCharacterID(); // Function Phoenix.AnalyticsManager.GetCharacterID // (Final|Native|Public|BlueprintCallable) // @ game+0x31db0d0
	struct UAnalyticsManager* Get(); // Function Phoenix.AnalyticsManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31db070
	void AnalyticsEventAction(struct FString ActionName, struct FString SubactionName, bool ActionResult, struct FString ResultExplained, struct FString ActionDetail); // Function Phoenix.AnalyticsManager.AnalyticsEventAction // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31dacf0
};

// Class Phoenix.AncientGate
// Size: 0x290 (Inherited: 0x248)
struct AAncientGate : AActor {
	struct USceneComponent* m_CurrentLeft; // 0x248(0x08)
	struct USceneComponent* m_CurrentRight; // 0x250(0x08)
	char pad_258[0x38]; // 0x258(0x38)

	void SetAllCollisions(struct TArray<struct AActor*> i_RedTarget, struct TArray<struct AActor*> i_BlueTarget, struct TMap<struct AActor*, bool> i_PassThroughCheck, bool bIsRed); // Function Phoenix.AncientGate.SetAllCollisions // (Final|Native|Protected|BlueprintCallable) // @ game+0x31e1980
	void SetActorCollision(struct AActor* i_Actor, enum class ECollisionResponse i_Response, struct TMap<struct AActor*, bool> i_PassThroughCheck); // Function Phoenix.AncientGate.SetActorCollision // (Final|Native|Protected|BlueprintCallable) // @ game+0x31e17a0
	void Rotating(); // Function Phoenix.AncientGate.Rotating // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void Recall(struct AActor* Who, struct AActor* Pedestal); // Function Phoenix.AncientGate.Recall // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1690
	void MaterialSetup(struct TArray<struct AActor*>& i_Target, struct TMap<struct UMaterialSwapComponent*, struct AActor*>& i_Materials, struct FLinearColor& i_Color); // Function Phoenix.AncientGate.MaterialSetup // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x31e1310
	void MaterialCutoutFlip(struct TMap<struct UMaterialSwapComponent*, struct AActor*> i_RedMaterials, struct TMap<struct UMaterialSwapComponent*, struct AActor*> i_BlueMaterials, struct UMaterialParameterCollection* i_Collection, bool bIsRedSide); // Function Phoenix.AncientGate.MaterialCutoutFlip // (Final|Native|Protected|BlueprintCallable) // @ game+0x31e0ff0
	void InitialMaterialSetup(struct TArray<struct AActor*> i_RedTarget, struct TArray<struct AActor*> i_BlueTarget, struct TMap<struct UMaterialSwapComponent*, struct AActor*>& i_RedMaterials, struct TMap<struct UMaterialSwapComponent*, struct AActor*>& i_BlueMaterials, struct FLinearColor i_RedColor, struct FLinearColor i_BlueColor); // Function Phoenix.AncientGate.InitialMaterialSetup // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31e0710
	void AncientGateSetup(struct USceneComponent* i_ArrowComponent, struct USceneComponent* i_LeftPoint, struct USceneComponent* i_RightPoint, struct FLinearColor i_RedColor, struct FLinearColor i_BlueColor); // Function Phoenix.AncientGate.AncientGateSetup // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x31e0080
};

// Class Phoenix.AncientGateManager
// Size: 0x28 (Inherited: 0x28)
struct UAncientGateManager : UObject {

	void SetAncientGateCollision(struct AActor* Actor, enum class ECollisionResponse CollisionResponse); // Function Phoenix.AncientGateManager.SetAncientGateCollision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e1c80
	void GetAncientGatePrimitives(struct AActor* Actor, struct TArray<struct UActorComponent*>& Primitives); // Function Phoenix.AncientGateManager.GetAncientGatePrimitives // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31e0570
	struct UAncientGateManager* Get(); // Function Phoenix.AncientGateManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e0520
};

// Class Phoenix.AncientMagicEffect
// Size: 0xd0 (Inherited: 0xc8)
struct UAncientMagicEffect : UActorComponent {
	bool LockPlayerWhileActive; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.AncientMagicEffect_Nova
// Size: 0x100 (Inherited: 0xd0)
struct UAncientMagicEffect_Nova : UAncientMagicEffect {
	struct AActor* NovaClass; // 0xd0(0x08)
	float NovaExpandSpeed; // 0xd8(0x04)
	float NovaExpandDistance; // 0xdc(0x04)
	bool HidePlayerWhileActive; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct AAncientMagicNova* NovaActor; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)

	void NovaFinished(struct UObject* Object); // Function Phoenix.AncientMagicEffect_Nova.NovaFinished // (Final|Native|Public) // @ game+0x31e1510
};

// Class Phoenix.AncientMagicEffect_Test
// Size: 0x100 (Inherited: 0xd0)
struct UAncientMagicEffect_Test : UAncientMagicEffect {
	struct AActor* NovaClass; // 0xd0(0x08)
	float NovaExpandSpeed; // 0xd8(0x04)
	float NovaExpandDistance; // 0xdc(0x04)
	struct AActor* NovaActor; // 0xe0(0x08)
	struct TArray<struct AActor*> NotifyList; // 0xe8(0x10)
	char pad_F8[0x8]; // 0xf8(0x08)

	void CollisionDetected(struct AActor* Actor); // Function Phoenix.AncientMagicEffect_Test.CollisionDetected // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0250
};

// Class Phoenix.AncientMagicHotSpot
// Size: 0x328 (Inherited: 0x248)
struct AAncientMagicHotSpot : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	bool bDebugDraw; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	float HotSpotHeightAllowed; // 0x254(0x04)
	float OuterRadiusMaxAngle; // 0x258(0x04)
	float OuterRadiusActiveMaxAngle; // 0x25c(0x04)
	bool bOuterAngleUseCameraFacing; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float OuterAngleRatioInterpToSpeed; // 0x264(0x04)
	float OuterAngleRatioInterpOutSpeed; // 0x268(0x04)
	float OuterRadius; // 0x26c(0x04)
	float MinOuterAngleRatio; // 0x270(0x04)
	float MinOuterRadiusRatio; // 0x274(0x04)
	bool bInsideOuterRadius; // 0x278(0x01)
	bool bInsideCollision; // 0x279(0x01)
	char pad_27A[0x2]; // 0x27a(0x02)
	float InnerRadiusMaxAngle; // 0x27c(0x04)
	bool bInnerAngleUseCameraFacing; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float InnerAngleRatioInterpToSpeed; // 0x284(0x04)
	float InnerAngleRatioInterpOutSpeed; // 0x288(0x04)
	float InnerRadius; // 0x28c(0x04)
	float ExitInnerRadius; // 0x290(0x04)
	float MinInnerAngleRatio; // 0x294(0x04)
	float MinInnerRadiusRatio; // 0x298(0x04)
	bool bInsideInnerRadius; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float HotSpotRadius; // 0x2a0(0x04)
	float HotSpotRumbleDeadZone; // 0x2a4(0x04)
	bool bInsideHotSpotRadius; // 0x2a8(0x01)
	bool bUseDiscoverAbility; // 0x2a9(0x01)
	bool bHotSpotActive; // 0x2aa(0x01)
	bool bTriggerAOEMunition; // 0x2ab(0x01)
	int32_t NumberOfUses; // 0x2ac(0x04)
	float Cooldown; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct FMulticastInlineDelegate OnCompletedDelagate; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnCancelledDelagate; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnEndedDelagate; // 0x2d8(0x10)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSourceComponent; // 0x2e8(0x08)
	struct TWeakObjectPtr<struct ABiped_Player> PlayerActor; // 0x2f0(0x08)
	struct UNiagaraComponent* VFXPulseComponent; // 0x2f8(0x08)
	char pad_300[0x28]; // 0x300(0x28)

	void UpdateVFX(float AngleRatio, float DistanceRatio); // Function Phoenix.AncientMagicHotSpot.UpdateVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1ff0
	void UpdateOuterRadius(float AngleRatio, float DistanceRatio); // Function Phoenix.AncientMagicHotSpot.UpdateOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateInnerRadius(float AngleRatio, float Ratio); // Function Phoenix.AncientMagicHotSpot.UpdateInnerRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateHotSpotRadius(); // Function Phoenix.AncientMagicHotSpot.UpdateHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateHotSpot(); // Function Phoenix.AncientMagicHotSpot.UpdateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UnHide(); // Function Phoenix.AncientMagicHotSpot.UnHide // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x169c650
	void TrackFootPlants(); // Function Phoenix.AncientMagicHotSpot.TrackFootPlants // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1fb0
	void StopTrackingFootPlants(); // Function Phoenix.AncientMagicHotSpot.StopTrackingFootPlants // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1f70
	void StartVFX(struct UNiagaraSystem* InAsset); // Function Phoenix.AncientMagicHotSpot.StartVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1ee0
	void Reactivate(); // Function Phoenix.AncientMagicHotSpot.Reactivate // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1670
	void PlayerIsInHotSpot(struct AActor* InPlayerActor, bool bInHotSpot); // Function Phoenix.AncientMagicHotSpot.PlayerIsInHotSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x31e15a0
	void NovaComplete(); // Function Phoenix.AncientMagicHotSpot.NovaComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LogList(struct TArray<struct AActor*>& LogActorList, struct FString HeaderInfo, struct FString PerActorInfo, struct FString PerActorExtraInfo); // Function Phoenix.AncientMagicHotSpot.LogList // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x31e0d80
	void Log(struct FString Info, struct UObject* LogObjectName, struct FString ExtraInfo); // Function Phoenix.AncientMagicHotSpot.Log // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x31e0bd0
	bool IsHotspotBeingForcedActive(); // Function Phoenix.AncientMagicHotSpot.IsHotspotBeingForcedActive // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0bb0
	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.AncientMagicHotSpot.Interact // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e0b20
	void HotSpotWasForcedInactive(); // Function Phoenix.AncientMagicHotSpot.HotSpotWasForcedInactive // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HotSpotWasForcedActive(); // Function Phoenix.AncientMagicHotSpot.HotSpotWasForcedActive // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideRevealOBJ(); // Function Phoenix.AncientMagicHotSpot.HideRevealOBJ // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e06f0
	void HideHideOBJ(); // Function Phoenix.AncientMagicHotSpot.HideHideOBJ // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e06d0
	void GetLoggingIsEnabled(bool& bLoggingIsEnabled); // Function Phoenix.AncientMagicHotSpot.GetLoggingIsEnabled // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e0650
	void ForceDeactivateHotSpot(); // Function Phoenix.AncientMagicHotSpot.ForceDeactivateHotSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0500
	void ForceActivateHotSpot(struct AActor* InPlayerActor, float InRadiiMultiplier, float InHeightMultiplier); // Function Phoenix.AncientMagicHotSpot.ForceActivateHotSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x31e03f0
	void FootPlantOccurred(struct FVector FootLocation, struct FRotator FootRotator); // Function Phoenix.AncientMagicHotSpot.FootPlantOccurred // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void FireWand(); // Function Phoenix.AncientMagicHotSpot.FireWand // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03d0
	void ExitedOuterRadius(); // Function Phoenix.AncientMagicHotSpot.ExitedOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExitedInnerRadius(); // Function Phoenix.AncientMagicHotSpot.ExitedInnerRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExitedHotSpotRadius(); // Function Phoenix.AncientMagicHotSpot.ExitedHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredOuterRadius(); // Function Phoenix.AncientMagicHotSpot.EnteredOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredInnerRadius(); // Function Phoenix.AncientMagicHotSpot.EnteredInnerRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredHotSpotRadius(); // Function Phoenix.AncientMagicHotSpot.EnteredHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnableInteract(); // Function Phoenix.AncientMagicHotSpot.EnableInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03b0
	void Done(bool DeactivateHotSpot); // Function Phoenix.AncientMagicHotSpot.Done // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0320
	void DestroyVFX(); // Function Phoenix.AncientMagicHotSpot.DestroyVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x31e02e0
	void DeactivateHotSpot(); // Function Phoenix.AncientMagicHotSpot.DeactivateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ActivateHotSpot(); // Function Phoenix.AncientMagicHotSpot.ActivateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AncientMagicNova
// Size: 0x268 (Inherited: 0x248)
struct AAncientMagicNova : AActor {
	float ExpandSpeed; // 0x248(0x04)
	float MaxExpandSize; // 0x24c(0x04)
	char pad_250[0x18]; // 0x250(0x18)

	void SetNotifyObject(struct UObject* Object); // Function Phoenix.AncientMagicNova.SetNotifyObject // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1dd0
};

// Class Phoenix.AncientMagicTarget
// Size: 0x250 (Inherited: 0x248)
struct AAncientMagicTarget : AActor {
	bool Discovered; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)

	void SetDebugVisible(bool DebugVisibleIn); // Function Phoenix.AncientMagicTarget.SetDebugVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1d40
	void Reset(); // Function Phoenix.AncientMagicTarget.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1760
	void OnReset(); // Function Phoenix.AncientMagicTarget.OnReset // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDiscover(); // Function Phoenix.AncientMagicTarget.OnDiscover // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Discover(); // Function Phoenix.AncientMagicTarget.Discover // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0300
};

// Class Phoenix.AncientMagicWaypoint
// Size: 0x258 (Inherited: 0x248)
struct AAncientMagicWaypoint : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct TWeakObjectPtr<struct ABiped_Player> BipedPlayer; // 0x250(0x08)

	void TrackFootPlants(); // Function Phoenix.AncientMagicWaypoint.TrackFootPlants // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1fd0
	void StopTrackingFootPlants(); // Function Phoenix.AncientMagicWaypoint.StopTrackingFootPlants // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1f90
	void FootPlantOccurred(struct FVector FootLocation, struct FRotator FootRotator); // Function Phoenix.AncientMagicWaypoint.FootPlantOccurred // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AncientMagicWidget
// Size: 0x270 (Inherited: 0x268)
struct UAncientMagicWidget : UUserWidget {
	struct UImage* Reticule; // 0x268(0x08)

	void ShowDiscoverProgressButton(bool Show); // Function Phoenix.AncientMagicWidget.ShowDiscoverProgressButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetReticuleScale(float Scale); // Function Phoenix.AncientMagicWidget.SetReticuleScale // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1e60
	void SetProgress(float Progress); // Function Phoenix.AncientMagicWidget.SetProgress // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AnimationClip_SharedRandom
// Size: 0x40 (Inherited: 0x28)
struct UAnimationClip_SharedRandom : UAnimationClipProvider {
	bool AvoidPickingSameTwice; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<struct FAnimationClip_SharedRandomEntry> Entries; // 0x30(0x10)
};

// Class Phoenix.AnimationClipState_StationStoryContent
// Size: 0xa0 (Inherited: 0x28)
struct UAnimationClipState_StationStoryContent : UObject {
	char pad_28[0x78]; // 0x28(0x78)
};

// Class Phoenix.AnimationClip_StationStoryContent
// Size: 0x40 (Inherited: 0x28)
struct UAnimationClip_StationStoryContent : UAnimationClipProvider {
	enum class EStationStoryContent_ClipType ClipType; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t CharacterIndex; // 0x2c(0x04)
	struct FActionParameter_Object StoryContentParameter; // 0x30(0x10)
};

// Class Phoenix.AnimationClip_TagLookupAndMatchTransform
// Size: 0x88 (Inherited: 0x70)
struct UAnimationClip_TagLookupAndMatchTransform : UAnimationClip_TagLookup {
	struct UTransformProvider* TransformToMatchProvider; // 0x70(0x08)
	struct UTransformProvider* AnchorTransformProvider; // 0x78(0x08)
	enum class AnimationMatchFlags AnimationMatchFlag; // 0x80(0x01)
	enum class AnimationTypeToFetch FetchAnims; // 0x81(0x01)
	bool bSearchAnimationArchitect; // 0x82(0x01)
	char pad_83[0x5]; // 0x83(0x05)
};

// Class Phoenix.AnimNotify_AkEvent_Lookup
// Size: 0x70 (Inherited: 0x38)
struct UAnimNotify_AkEvent_Lookup : UAnimNotify {
	struct FGameplayTagContainer LookupTags; // 0x38(0x20)
	bool bFollow; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FName SocketName; // 0x5c(0x08)
	bool bObstructionAndOcclusion; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	float MaxDistanceToListener; // 0x68(0x04)
	bool bUseMotionListener; // 0x6c(0x01)
	bool bUsePlayerOrientation; // 0x6d(0x01)
	char pad_6E[0x2]; // 0x6e(0x02)
};

// Class Phoenix.AnimNotify_Ak_Lookup_IsMounted
// Size: 0x70 (Inherited: 0x70)
struct UAnimNotify_Ak_Lookup_IsMounted : UAnimNotify_AkEvent_Lookup {
};

// Class Phoenix.AnimNotify_AkEvent_Ava
// Size: 0x58 (Inherited: 0x38)
struct UAnimNotify_AkEvent_Ava : UAnimNotify {
	struct UAkAudioEvent* AkAudioEvent; // 0x38(0x08)
	struct FName SocketName; // 0x40(0x08)
	bool bFollow; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float MaxDistanceToListener; // 0x4c(0x04)
	enum class EOcclusionOption OcclusionOption; // 0x50(0x01)
	enum class EOcclusionTestMethod OcclusionMethod; // 0x51(0x01)
	bool bAutoDestroy; // 0x52(0x01)
	bool bTickSpatialVolumes; // 0x53(0x01)
	bool bOnlyWhenMovingOnGround; // 0x54(0x01)
	bool bUseMotionListener; // 0x55(0x01)
	bool bUsePlayerOrientatedMotionListener; // 0x56(0x01)
	bool bOnlyPlayer; // 0x57(0x01)
};

// Class Phoenix.AnimNotify_CreatureAttackImpact
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_CreatureAttackImpact : UAnimNotify {
	struct FName SocketName; // 0x38(0x08)
};

// Class Phoenix.AnimNotify_CreatureAudioBase
// Size: 0x78 (Inherited: 0x38)
struct UAnimNotify_CreatureAudioBase : UAnimNotify {
	struct FGameplayTagContainer LookupTags; // 0x38(0x20)
	struct FName SpawnBaseName; // 0x58(0x08)
	struct FName SocketName; // 0x60(0x08)
	enum class ECreatureImpactSize ImpactSize; // 0x68(0x04)
	float KickupDirection; // 0x6c(0x04)
	float KickupRotation; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.AnimNotify_CreatureFootstep
// Size: 0x78 (Inherited: 0x78)
struct UAnimNotify_CreatureFootstep : UAnimNotify_CreatureAudioBase {
};

// Class Phoenix.AnimNotify_CreatureBodyfall
// Size: 0x78 (Inherited: 0x78)
struct UAnimNotify_CreatureBodyfall : UAnimNotify_CreatureAudioBase {
};

// Class Phoenix.AnimNotify_ManageBones
// Size: 0x58 (Inherited: 0x30)
struct UAnimNotify_ManageBones : UAnimNotifyState {
	bool RightArm; // 0x30(0x01)
	bool LeftArm; // 0x31(0x01)
	bool BothArms; // 0x32(0x01)
	char pad_33[0x25]; // 0x33(0x25)
};

// Class Phoenix.AnimNotify_PlayAvaAudioDialogue
// Size: 0x60 (Inherited: 0x38)
struct UAnimNotify_PlayAvaAudioDialogue : UAnimNotify {
	struct FDialogueConversationReference DialogueEventReference; // 0x38(0x10)
	struct UAvaAudioDialogueEvent* DialogueEvent; // 0x48(0x08)
	struct FString DialogueEventName; // 0x50(0x10)
};

// Class Phoenix.AnimNotify_PlayNiagaraEffectOnWand
// Size: 0xa0 (Inherited: 0xa0)
struct UAnimNotify_PlayNiagaraEffectOnWand : UAnimNotify_PlayNiagaraEffect {
};

// Class Phoenix.AnimNotify_PlaySharedParticleEffect
// Size: 0x98 (Inherited: 0x38)
struct UAnimNotify_PlaySharedParticleEffect : UAnimNotify {
	bool bAttached; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName SocketName; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
	struct TMap<struct USkeletalMesh*, struct FMappedParticleEffect> SharedParticleEffects; // 0x48(0x50)
};

// Class Phoenix.AnimNotify_RiderAbleEvent
// Size: 0x40 (Inherited: 0x38)
struct UAnimNotify_RiderAbleEvent : UAnimNotify {
	struct FName EventName; // 0x38(0x08)
};

// Class Phoenix.AnimNotify_RiderDialogue
// Size: 0x98 (Inherited: 0x38)
struct UAnimNotify_RiderDialogue : UAnimNotify {
	struct TArray<struct FDialogueConversationReference> DialogueEventReferences; // 0x38(0x10)
	struct TMap<struct FString, struct FAnimNotify_RiderDialogue_DialogueReferenceList> PerCreatureDialogueEvents; // 0x48(0x50)
};

// Class Phoenix.AnimNotify_SendHermesMessage
// Size: 0x48 (Inherited: 0x38)
struct UAnimNotify_SendHermesMessage : UAnimNotify {
	struct FName Message; // 0x38(0x08)
	bool bExecuteAll; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.AnimNotify_SharedAkEvent
// Size: 0x98 (Inherited: 0x38)
struct UAnimNotify_SharedAkEvent : UAnimNotify {
	bool bFollow; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FName SocketName; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)
	struct TMap<struct USkeletalMesh*, struct UAkAudioEvent*> SharedAkEvents; // 0x48(0x50)
};

// Class Phoenix.AnimNotify_SubObject
// Size: 0x28 (Inherited: 0x28)
struct UAnimNotify_SubObject : UObject {
};

// Class Phoenix.AnimNotifyState_AddRipple
// Size: 0x118 (Inherited: 0x30)
struct UAnimNotifyState_AddRipple : UAnimNotifyState {
	struct TMap<struct FName, struct FName> BonesToTrack; // 0x30(0x50)
	float Radius; // 0x80(0x04)
	float IntensityMultiplier; // 0x84(0x04)
	struct FName SocketName; // 0x88(0x08)
	struct FRuntimeFloatCurve IntensityCurve; // 0x90(0x88)
};

// Class Phoenix.AnimNotifyState_SharedTimedParticleEffect
// Size: 0x88 (Inherited: 0x30)
struct UAnimNotifyState_SharedTimedParticleEffect : UAnimNotifyState {
	struct FName SocketName; // 0x30(0x08)
	struct TMap<struct USkeletalMesh*, struct FMappedTimedParticleEffect> SharedTimedParticleEffects; // 0x38(0x50)
};

// Class Phoenix.AnimNotifyState_SpawnActorBase
// Size: 0x50 (Inherited: 0x30)
struct UAnimNotifyState_SpawnActorBase : UAnimNotifyState {
	struct FName AttachSocket; // 0x30(0x08)
	struct UCurveFloat* AlphaCurve; // 0x38(0x08)
	struct AActor* SpawnedActor; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.AnimNotifyState_SpawnActor
// Size: 0x58 (Inherited: 0x50)
struct UAnimNotifyState_SpawnActor : UAnimNotifyState_SpawnActorBase {
	struct AActor* SpawnActorClass; // 0x50(0x08)
};

// Class Phoenix.AnimNotifyState_SpawnActorPhysical
// Size: 0x80 (Inherited: 0x30)
struct UAnimNotifyState_SpawnActorPhysical : UAnimNotifyState {
	struct AActor* SpawnActorClass; // 0x30(0x08)
	struct FName AttachSocket; // 0x38(0x08)
	struct UStaticMesh* StaticMeshOverride; // 0x40(0x08)
	struct FVector LocationOffset; // 0x48(0x0c)
	struct FRotator RotationOffset; // 0x54(0x0c)
	struct FVector Scale; // 0x60(0x0c)
	bool bTurnPhysicalAtEnd; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	float ActorLifeSpan; // 0x70(0x04)
	char pad_74[0xc]; // 0x74(0x0c)
};

// Class Phoenix.AnimShakeProvider
// Size: 0x28 (Inherited: 0x28)
struct UAnimShakeProvider : UFloatProvider {
};

// Class Phoenix.AnimTag_Emotion
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_Emotion : UAnimationArchitectTagProvider {
};

// Class Phoenix.AnimTag_Enemy_POIStance
// Size: 0x50 (Inherited: 0x28)
struct UAnimTag_Enemy_POIStance : UAnimationArchitectTagProvider {
	struct FGameplayTagContainer AnimTags; // 0x28(0x20)
	bool bDesiredPOIAttackStance; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.AnimTag_NPC_Mobility
// Size: 0x70 (Inherited: 0x28)
struct UAnimTag_NPC_Mobility : UAnimationArchitectTagProvider {
	struct FGameplayTagContainer AnimTags; // 0x28(0x20)
	struct TArray<enum class ENPC_Mobility> MobilityStates; // 0x48(0x10)
	bool bAdditionallyCheckAwareState; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct TArray<enum class ENPC_TargetAwareState> AwareStates; // 0x60(0x10)
};

// Class Phoenix.AnimTag_RigType
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_RigType : UAnimationArchitectTagProvider {
};

// Class Phoenix.AnimTag_StationGeneric
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_StationGeneric : UAnimationArchitectTagProvider {
};

// Class Phoenix.AnimTag_StationSocket
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_StationSocket : UAnimationArchitectTagProvider {
};

// Class Phoenix.AnimTag_StationStory
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_StationStory : UAnimationArchitectTagProvider {
};

// Class Phoenix.AnimTag_StationStoryPreFetch
// Size: 0x28 (Inherited: 0x28)
struct UAnimTag_StationStoryPreFetch : UAnimTag_StationStory {
};

// Class Phoenix.AntiSocialAAIController
// Size: 0x4f8 (Inherited: 0x458)
struct AAntiSocialAAIController : ASocialAIController {
	char pad_458[0xa0]; // 0x458(0xa0)
};

// Class Phoenix.AOESpellTool
// Size: 0x7f8 (Inherited: 0x7e8)
struct AAOESpellTool : ASpellTool {
	bool bTargetCharacter; // 0x7e8(0x01)
	bool bTargetObject; // 0x7e9(0x01)
	bool bPlayOnGround; // 0x7ea(0x01)
	char pad_7EB[0x1]; // 0x7eb(0x01)
	float NoTargetDistance; // 0x7ec(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x7f0(0x08)
};

// Class Phoenix.PostDeathParamsOverride
// Size: 0x300 (Inherited: 0x248)
struct APostDeathParamsOverride : AActor {
	char pad_248[0x1]; // 0x248(0x01)
	bool bUseCustomPreset; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)
	struct FDbSingleColumnInfo Preset; // 0x250(0x88)
	struct FPostDeath_Params CurrentParameters; // 0x2d8(0x18)
	char pad_2F0[0x10]; // 0x2f0(0x10)
};

// Class Phoenix.ApparitionSpellTool
// Size: 0x9d8 (Inherited: 0x958)
struct AApparitionSpellTool : AChannelingSpellTool {
	bool bShowDebug; // 0x958(0x01)
	char pad_959[0x7]; // 0x959(0x07)
	struct TArray<struct FApparitionLevelData> LevelDataArray; // 0x960(0x10)
	struct AActor* ApparitionActorClass; // 0x970(0x08)
	struct UParticleSystem* TeleportFX; // 0x978(0x08)
	bool bUseBulletTime; // 0x980(0x01)
	char pad_981[0x3]; // 0x981(0x03)
	float BulletTimeRate; // 0x984(0x04)
	struct UAkAudioEvent* TimeDilationSfx; // 0x988(0x08)
	float DistanceFromObstruction; // 0x990(0x04)
	float SweepSphereRadius; // 0x994(0x04)
	float SweepSegmentDistance; // 0x998(0x04)
	float GroundSweepDistance; // 0x99c(0x04)
	struct AActor* ApparitionActor; // 0x9a0(0x08)
	char pad_9A8[0x30]; // 0x9a8(0x30)

	void TeleportNow(); // Function Phoenix.ApparitionSpellTool.TeleportNow // (Native|Public|BlueprintCallable) // @ game+0x31e6820
	void SetDirection(float X, float Y); // Function Phoenix.ApparitionSpellTool.SetDirection // (Final|Native|Public|BlueprintCallable) // @ game+0x31e65a0
};

// Class Phoenix.StateEffectComponent
// Size: 0x190 (Inherited: 0xc8)
struct UStateEffectComponent : UActorComponent {
	struct FMulticastInlineDelegate OnEndEffect; // 0xc8(0x10)
	char pad_D8[0x10]; // 0xd8(0x10)
	struct UObjectStateInfo* ObjectStateInfo; // 0xe8(0x08)
	struct AActor* Instigator; // 0xf0(0x08)
	struct ASpellTool* SpellTool; // 0xf8(0x08)
	struct TArray<struct UMultiFX2_Base*> FX; // 0x100(0x10)
	struct TArray<struct UMultiFX2_Base*> endFX; // 0x110(0x10)
	struct TArray<struct UMultiFX2_Base*> BreakoutFX; // 0x120(0x10)
	char pad_130[0x60]; // 0x130(0x60)

	void SetDuration(float InDuration); // Function Phoenix.StateEffectComponent.SetDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x3486690
	void ResetDuration(); // Function Phoenix.StateEffectComponent.ResetDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x3486630
	float GetRemainingTime(); // Function Phoenix.StateEffectComponent.GetRemainingTime // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3485d20
	void EndEffect(); // Function Phoenix.StateEffectComponent.EndEffect // (Native|Public|BlueprintCallable) // @ game+0x1980b60
};

// Class Phoenix.ArrestoMomentumComponent
// Size: 0x208 (Inherited: 0x190)
struct UArrestoMomentumComponent : UStateEffectComponent {
	char pad_190[0x28]; // 0x190(0x28)
	struct FArrestoData ArrestoData; // 0x1b8(0x40)
	char pad_1F8[0x10]; // 0x1f8(0x10)

	void OnBroken(struct AActor* Actor); // Function Phoenix.ArrestoMomentumComponent.OnBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x31e6480
};

// Class Phoenix.ArrestoMomentumInterface
// Size: 0x28 (Inherited: 0x28)
struct UArrestoMomentumInterface : UInterface {

	void OnArrestoMomentumEnd(struct AActor* Instigator, struct UArrestoMomentumComponent* ArrestoMomentumComponent); // Function Phoenix.ArrestoMomentumInterface.OnArrestoMomentumEnd // (Native|Event|Public|BlueprintEvent) // @ game+0x31e63b0
	void OnArrestoMomentumBegin(struct AActor* Instigator, struct UArrestoMomentumComponent* ArrestoMomentumComponent, float TimeDilation); // Function Phoenix.ArrestoMomentumInterface.OnArrestoMomentumBegin // (Native|Event|Public|BlueprintEvent) // @ game+0x31e62a0
	bool DisallowArrestoMomentum(); // Function Phoenix.ArrestoMomentumInterface.DisallowArrestoMomentum // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FireOnceSpellTool
// Size: 0x868 (Inherited: 0x7e8)
struct AFireOnceSpellTool : ASpellTool {
	struct TArray<struct FAdditionalProjectiles> AdditionalProjectiles; // 0x7e8(0x10)
	char pad_7F8[0x70]; // 0x7f8(0x70)
};

// Class Phoenix.ArrestoMomentumSpellTool
// Size: 0x8b0 (Inherited: 0x868)
struct AArrestoMomentumSpellTool : AFireOnceSpellTool {
	float SlowDownTime; // 0x868(0x04)
	float SpeedUpTime; // 0x86c(0x04)
	float ObjectMassMax; // 0x870(0x04)
	float CharacterMassMax; // 0x874(0x04)
	float MaxLinearDamping; // 0x878(0x04)
	float MaxAngularDamping; // 0x87c(0x04)
	float CharacterTimeDilation; // 0x880(0x04)
	char pad_884[0x4]; // 0x884(0x04)
	struct TArray<struct UMultiFX2_Base*> ArrestoMomentumFX2; // 0x888(0x10)
	struct AMunitionType_Base* AOEMunition; // 0x898(0x08)
	char pad_8A0[0x10]; // 0x8a0(0x10)
};

// Class Phoenix.AssetWidgetInterface
// Size: 0x28 (Inherited: 0x28)
struct UAssetWidgetInterface : UInterface {

	bool OnIsAssetAcceptableForDrop(struct UObject* Asset); // Function Phoenix.AssetWidgetInterface.OnIsAssetAcceptableForDrop // (Event|Public|BlueprintEvent|Const) // @ game+0x38a7480
	bool OnAssetDropped(struct UObject* Asset); // Function Phoenix.AssetWidgetInterface.OnAssetDropped // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AssetWidget
// Size: 0x120 (Inherited: 0x108)
struct UAssetWidget : UWidget {
	struct UObject* Delegate; // 0x108(0x08)
	char pad_110[0x10]; // 0x110(0x10)

	struct UObject* SpawnObject(struct UObject* ObjectToSpawn); // Function Phoenix.AssetWidget.SpawnObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6790
	void ShowAssetsInContentBrowser(struct TArray<struct UObject*>& InAssets); // Function Phoenix.AssetWidget.ShowAssetsInContentBrowser // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31e66f0
	void ShowAssetInContentBrowser(struct UObject* Asset); // Function Phoenix.AssetWidget.ShowAssetInContentBrowser // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void SetAsset(struct UObject* InAsset); // Function Phoenix.AssetWidget.SetAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x31e6510
	struct UObject* GetSelectedAssetInContentBrowser(struct UObject* ObjectClass); // Function Phoenix.AssetWidget.GetSelectedAssetInContentBrowser // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31e6210
	struct UObject* GetGeneratedClassFromBlueprint(struct UBlueprint* Blueprint); // Function Phoenix.AssetWidget.GetGeneratedClassFromBlueprint // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31e6180
	struct UObject* GetAsset(); // Function Phoenix.AssetWidget.GetAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x31e6150
	struct UBlueprint* CastToBlueprint(struct UObject* Object); // Function Phoenix.AssetWidget.CastToBlueprint // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31e60c0
};

// Class Phoenix.AstronomyMiniGameSolutions
// Size: 0x28 (Inherited: 0x28)
struct UAstronomyMiniGameSolutions : UBlueprintFunctionLibrary {

	void UpdateAstronomyMiniGameSolvedLerp(struct AActor* Actor, struct FAstronomyMiniGameSolveState SolveState); // Function Phoenix.AstronomyMiniGameSolutions.UpdateAstronomyMiniGameSolvedLerp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f0340
	void UpdateAstronomyMiniGameSolve(struct AActor* Actor, struct FAstronomyMiniGameSolveState SolveState, bool& bIsSolved); // Function Phoenix.AstronomyMiniGameSolutions.UpdateAstronomyMiniGameSolve // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f0210
	void SetupAstronomyMiniGameSolve(struct AActor* Actor, struct FName PointOfInterest, struct FAstronomyMiniGameSolutionEntry& Solution, struct FAstronomyMiniGameSolveState SolveState, struct FString Extra); // Function Phoenix.AstronomyMiniGameSolutions.SetupAstronomyMiniGameSolve // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31efeb0
	void SetAstronomyMiniGameDone(struct AActor* Actor); // Function Phoenix.AstronomyMiniGameSolutions.SetAstronomyMiniGameDone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31efc60
	void GetAstronomyMiniGameSolved(bool& bIsSolved); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameSolved // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31ea580
	void GetAstronomyMiniGameSolution(struct UDataTable* SolutionTable, struct FName PointOfInterest, struct FAstronomyMiniGameSolutionEntry& Solution, bool& bValidSolution); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameSolution // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ea3b0
	void GetAstronomyMiniGameIsRunning(bool& bIsRunning); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameIsRunning // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31ea330
	void GetAstronomyMiniGameInfo(struct AActor*& Telescope, struct FName& PointOfInterest, struct FAstronomyMiniGameSolutionEntry& Solution, struct FAstronomyMiniGameSolveState& SolveState, bool& bIsValid); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31ea0f0
	float GetAstronomyMiniGameDistanceFromSolution(); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameDistanceFromSolution // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ea0c0
	void GetAstronomyMiniGameApproachRotationRollLerp(float& ApproachRotationRollLerp); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameApproachRotationRollLerp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31ea030
	void GetAstronomyMiniGameApproachRotationPitchYawLerp(float& ApproachRotationPitchYawLerp); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameApproachRotationPitchYawLerp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e9fa0
	void GetAstronomyMiniGameApproachLerp(float& ApproachLerp); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameApproachLerp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e9f10
	void GetAstronomyMiniGameApproachFOVLerp(float& ApproachFOVLerp); // Function Phoenix.AstronomyMiniGameSolutions.GetAstronomyMiniGameApproachFOVLerp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e9e80
	void AstronomyMiniGameSolutionLogRow(struct FName PointOfInterestRowName, struct FAstronomyMiniGameSolutionEntry Solution, bool bWithRowHeader); // Function Phoenix.AstronomyMiniGameSolutions.AstronomyMiniGameSolutionLogRow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e9840
	void AstronomyMiniGameConstellationOverride(int32_t& ConstellationOverride); // Function Phoenix.AstronomyMiniGameSolutions.AstronomyMiniGameConstellationOverride // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e97c0
	void AstronomyMiniGameAllowSolving(bool& bAllowSolving); // Function Phoenix.AstronomyMiniGameSolutions.AstronomyMiniGameAllowSolving // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31e9740
};

// Class Phoenix.AsyncLoadHelpers
// Size: 0x28 (Inherited: 0x28)
struct UAsyncLoadHelpers : UObject {
};

// Class Phoenix.AsyncLoadWrapper
// Size: 0x308 (Inherited: 0x268)
struct UAsyncLoadWrapper : UUserWidget {
	struct FSoftClassPath ChildWidgetClassRef; // 0x268(0x18)
	struct TMap<struct FString, struct FString> CallbackParameters; // 0x280(0x50)
	bool IsLoading; // 0x2d0(0x01)
	bool ClassIsLoaded; // 0x2d1(0x01)
	bool ChildInstantiated; // 0x2d2(0x01)
	bool ChildInitialized; // 0x2d3(0x01)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct FMulticastInlineDelegate OnChildLoadComplete; // 0x2d8(0x10)
	struct FMulticastInlineDelegate OnChildReady; // 0x2e8(0x10)
	struct UUserWidget* ChildWidgetInstance; // 0x2f8(0x08)
	struct UObject* LoadedChildClass; // 0x300(0x08)

	void SetThrobberVisibility(enum class ESlateVisibility NewVisibility); // Function Phoenix.AsyncLoadWrapper.SetThrobberVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetParent(struct UUserWidget* Parent); // Function Phoenix.AsyncLoadWrapper.SetParent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void InstantiateChild(); // Function Phoenix.AsyncLoadWrapper.InstantiateChild // (Final|Native|Public|BlueprintCallable) // @ game+0x31ea930
	void InitChild(); // Function Phoenix.AsyncLoadWrapper.InitChild // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct UCanvasPanel* GetAttachCanvas(); // Function Phoenix.AsyncLoadWrapper.GetAttachCanvas // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AsyncLoadChildClass(bool InstantiateImmediately); // Function Phoenix.AsyncLoadWrapper.AsyncLoadChildClass // (Final|Native|Public|BlueprintCallable) // @ game+0x31e99d0
};

// Class Phoenix.AsyncWidgetSwitcher
// Size: 0x158 (Inherited: 0x138)
struct UAsyncWidgetSwitcher : UWidgetSwitcher {
	bool ShouldPreloadAll; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct FMulticastInlineDelegate OnActiveWidgetDisplayable; // 0x140(0x10)
	char pad_150[0x8]; // 0x150(0x08)

	void SetParent(struct UUserWidget* NewParent); // Function Phoenix.AsyncWidgetSwitcher.SetParent // (Final|Native|Public|BlueprintCallable) // @ game+0x31efce0
	void OnActiveItemLoaded(struct UAsyncLoadWrapper* Item); // Function Phoenix.AsyncWidgetSwitcher.OnActiveItemLoaded // (Final|Native|Private) // @ game+0x31eadc0
};

// Class Phoenix.AudioMultiSourceActor
// Size: 0x2e0 (Inherited: 0x280)
struct AAudioMultiSourceActor : AVolume {
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> StaticMeshes; // 0x280(0x10)
	struct TArray<struct FAudioMultiSourceAudioEvent> Events; // 0x290(0x10)
	float DensityScale; // 0x2a0(0x04)
	uint32_t RandomSeed; // 0x2a4(0x04)
	float ClumpingFactor; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TArray<struct FVector> SamplePoints; // 0x2b0(0x10)
	bool bManuallyModifiedSamplePoints; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	struct FVector OnConstructionLocation; // 0x2c4(0x0c)
	struct TArray<struct UAkComponent*> AudioComponents; // 0x2d0(0x10)
};

// Class Phoenix.AuthoredPath
// Size: 0x260 (Inherited: 0x248)
struct AAuthoredPath : AActor {
	struct USplineComponent* PathComponent; // 0x248(0x08)
	struct FName Name; // 0x250(0x08)
	float SnapDistance; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)

	void SnapPoints(); // Function Phoenix.AuthoredPath.SnapPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void ReversePoints(); // Function Phoenix.AuthoredPath.ReversePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.NPC_Manager
// Size: 0xe0 (Inherited: 0x28)
struct UNPC_Manager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> NPCList; // 0x38(0x10)
	struct TArray<struct TWeakObjectPtr<struct APerceptionPoint>> PerceptionPointList; // 0x48(0x10)
	struct TArray<struct UNPC_QBUpdate*> QBUpdatePtrArray; // 0x58(0x10)
	struct TArray<struct UNPC_PerceptionUpdate*> PerceptionUpdatePtrArray; // 0x68(0x10)
	struct TArray<struct TWeakObjectPtr<struct UNPC_Component>> NPCComponentList; // 0x78(0x10)
	char pad_88[0x30]; // 0x88(0x30)
	struct FMulticastInlineDelegate GameEventStartDelegate; // 0xb8(0x10)
	struct FMulticastInlineDelegate GameEventEndDelegate; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
};

// Class Phoenix.AuthorityFig_Manager
// Size: 0xf0 (Inherited: 0xe0)
struct UAuthorityFig_Manager : UNPC_Manager {
	char pad_E0[0x10]; // 0xe0(0x10)
};

// Class Phoenix.AutomatedCapturePointOfInterest
// Size: 0x270 (Inherited: 0x270)
struct AAutomatedCapturePointOfInterest : ANavigationObjectBase {
};

// Class Phoenix.AutomationEnvironment
// Size: 0x90 (Inherited: 0x28)
struct UAutomationEnvironment : UObject {
	struct TArray<struct FString> EnvironmentSettings; // 0x28(0x10)
	char pad_38[0x58]; // 0x38(0x58)
};

// Class Phoenix.AvaAudio
// Size: 0x6b0 (Inherited: 0x28)
struct UAvaAudio : UObject {
	char pad_28[0x688]; // 0x28(0x688)

	void SetPlayerVoicePitch(int32_t PlayerVoicePitch, bool WriteToSave); // Function Phoenix.AvaAudio.SetPlayerVoicePitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31efdf0
	void OnSaveGameLoaded(); // Function Phoenix.AvaAudio.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x31eaeb0
	void OnNewGame(); // Function Phoenix.AvaAudio.OnNewGame // (Final|Native|Private) // @ game+0x31eae90
	void OnCurtainRaised(); // Function Phoenix.AvaAudio.OnCurtainRaised // (Final|Native|Public) // @ game+0x31eae70
	void OnCurtainLowered(); // Function Phoenix.AvaAudio.OnCurtainLowered // (Final|Native|Public) // @ game+0x31eae50
	int32_t GetPlayerVoicePitch(); // Function Phoenix.AvaAudio.GetPlayerVoicePitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ea630
};

// Class Phoenix.AvaAudioConvDataSREditorAccessors
// Size: 0x28 (Inherited: 0x28)
struct UAvaAudioConvDataSREditorAccessors : UBlueprintFunctionLibrary {
};

// Class Phoenix.AvaAudioLocationActor
// Size: 0x248 (Inherited: 0x248)
struct AAvaAudioLocationActor : AActor {
};

// Class Phoenix.AvaAudioGameplayStatics
// Size: 0x28 (Inherited: 0x28)
struct UAvaAudioGameplayStatics : UBlueprintFunctionLibrary {

	void WriteStringToSpeechLog(struct FString LogString); // Function Phoenix.AvaAudioGameplayStatics.WriteStringToSpeechLog // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f0420
	void StopPlayingID(int32_t& PlayingID); // Function Phoenix.AvaAudioGameplayStatics.StopPlayingID // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f0190
	void StopDialogue(int32_t DialogueHandle); // Function Phoenix.AvaAudioGameplayStatics.StopDialogue // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f0110
	bool SetPlayerGenderVoice(enum class EGenderVoice NewGenderVoice); // Function Phoenix.AvaAudioGameplayStatics.SetPlayerGenderVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31efd70
	void ResumeDialogueStartedPaused(int32_t DialogueHandle); // Function Phoenix.AvaAudioGameplayStatics.ResumeDialogueStartedPaused // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31efbe0
	void RequestDialogueCompleteNotification(int32_t DialogueHandle, struct FDelegate& Delegate_DialogueEventComplete); // Function Phoenix.AvaAudioGameplayStatics.RequestDialogueCompleteNotification // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31efb00
	void RemoveStateFromStackByName(struct FName stateGroup, struct FName State, int32_t Priority); // Function Phoenix.AvaAudioGameplayStatics.RemoveStateFromStackByName // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31efa00
	void RemoveStateFromStack(int32_t StackHandle); // Function Phoenix.AvaAudioGameplayStatics.RemoveStateFromStack // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ef980
	int32_t QueueDialogueEventWithParametersByReference(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Parameters, int32_t QueueToHandle, float QueueWithDelaySeconds, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventWithParametersByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ef670
	int32_t QueueDialogueEventWithParameters(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Parameters, int32_t QueueToHandle, float QueueWithDelaySeconds, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventWithParameters // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ef320
	int32_t QueueDialogueEventByReference(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, int32_t QueueToHandle, float QueueWithDelaySeconds, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventByReference // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ef0f0
	int32_t QueueDialogueEventAtLocationWithParametersByReference(struct FDialogueConversationReference DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, struct TMap<struct FString, struct FString>& Parameters, int32_t QueueToHandle, float QueueWithDelaySeconds, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventAtLocationWithParametersByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31eed70
	int32_t QueueDialogueEventAtLocationWithParameters(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, struct TMap<struct FString, struct FString>& Parameters, int32_t QueueToHandle, float QueueWithDelaySeconds, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventAtLocationWithParameters // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31ee9b0
	int32_t QueueDialogueEventAtLocationByReference(struct FDialogueConversationReference DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, int32_t QueueToHandle, float QueueWithDelaySeconds, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventAtLocationByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31ee730
	int32_t QueueDialogueEventAtLocation(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, int32_t QueueToHandle, float QueueWithDelaySeconds, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEventAtLocation // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31ee470
	int32_t QueueDialogueEvent(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, int32_t QueueToHandle, float QueueWithDelaySeconds, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.QueueDialogueEvent // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ee1f0
	bool QueryDialogueEventPotentialCast(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct TArray<struct FName>& Out_CharacterIDCast); // Function Phoenix.AvaAudioGameplayStatics.QueryDialogueEventPotentialCast // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ee060
	bool PrepareDialogueSequenceByReference_BP(struct FDialogueConversationReference DialogueEventName, struct TArray<struct AActor*>& Actors, struct TArray<struct FString>& In_AdditionalCharacterIDs, struct TArray<struct FAvaAudioPrepareDialogueSequenceResult>& Out_Results, enum class AvaAudioDialogueFlags flags, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueSequenceByReference_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ed940
	bool PrepareDialogueSequence_BP(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct TArray<struct AActor*>& Actors, struct TArray<struct FString>& In_AdditionalCharacterIDs, struct TArray<struct FAvaAudioPrepareDialogueSequenceResult>& Out_Results, enum class AvaAudioDialogueFlags flags, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueSequence_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31edcb0
	bool PrepareDialogueEventWithParametersByReference_BP(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& In_Parameters, struct TMap<struct FString, struct FString>& Out_Parameters, struct FAvaAudioDialogueMetaData& Out_MetaData, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueEventWithParametersByReference_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ecea0
	bool PrepareDialogueEventWithParameters_BP(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& In_Parameters, struct TMap<struct FString, struct FString>& Out_Parameters, struct FAvaAudioDialogueMetaData& Out_MetaData, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueEventWithParameters_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ed230
	bool PrepareDialogueEventByReference_BP(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Out_Parameters, struct FAvaAudioDialogueMetaData& Out_MetaData, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueEventByReference_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ecbc0
	bool PrepareDialogueEvent_BP(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Out_Parameters, struct FAvaAudioDialogueMetaData& Out_MetaData, bool bStartBuffering); // Function Phoenix.AvaAudioGameplayStatics.PrepareDialogueEvent_BP // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ed610
	void PostEventPlayerVoice(); // Function Phoenix.AvaAudioGameplayStatics.PostEventPlayerVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ecba0
	int32_t PostDialogueEventWithParametersByReference(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Parameters, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventWithParametersByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ec920
	int32_t PostDialogueEventWithParameters(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, struct TMap<struct FString, struct FString>& Parameters, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventWithParameters // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ec660
	int32_t PostDialogueEventByReference(struct FDialogueConversationReference DialogueEventName, struct AActor* Actor, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventByReference // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ec4c0
	int32_t PostDialogueEventAtLocationWithParametersByReference(struct FDialogueConversationReference DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, struct TMap<struct FString, struct FString>& Parameters, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventAtLocationWithParametersByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31ec1e0
	int32_t PostDialogueEventAtLocationWithParameters(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, struct TMap<struct FString, struct FString>& Parameters, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventAtLocationWithParameters // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31ebeb0
	int32_t PostDialogueEventAtLocationByReference(struct FDialogueConversationReference DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventAtLocationByReference // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31ebcb0
	int32_t PostDialogueEventAtLocation(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEventAtLocation // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31eba70
	int32_t PostDialogueEvent(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct AActor* Actor, bool bStopWhenAttachedToDestroyed, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PostDialogueEvent // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eb880
	int32_t PlayDialogueSequenceWithCharacterIDsByReference(struct FDialogueConversationReference DialogueEventName, struct TArray<struct AActor*> Actors, struct TArray<struct FString> In_AdditionalCharacterIDs, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PlayDialogueSequenceWithCharacterIDsByReference // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eb5a0
	int32_t PlayDialogueSequenceWithCharacterIDs(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct TArray<struct AActor*> Actors, struct TArray<struct FString> In_AdditionalCharacterIDs, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PlayDialogueSequenceWithCharacterIDs // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eb270
	int32_t PlayDialogueSequenceByReference(struct FDialogueConversationReference DialogueEventName, struct TArray<struct AActor*> Actors, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PlayDialogueSequenceByReference // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eb0c0
	int32_t PlayDialogueSequence(struct UAvaAudioDialogueEvent* DialogueEvent, struct FString DialogueEventName, struct TArray<struct AActor*> Actors, enum class AvaAudioDialogueFlags flags); // Function Phoenix.AvaAudioGameplayStatics.PlayDialogueSequence // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eaed0
	void MusicStackRemoveEventByName(struct FString EventName); // Function Phoenix.AvaAudioGameplayStatics.MusicStackRemoveEventByName // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ead30
	void MusicStackAddEventAtLocationByName(struct FString EventName, int32_t Priority, struct FVector Location, struct FRotator Orientation, struct UObject* WorldContextObject); // Function Phoenix.AvaAudioGameplayStatics.MusicStackAddEventAtLocationByName // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31eab70
	void LatchSpell(struct FName AudioSpellName, struct AActor* Actor); // Function Phoenix.AvaAudioGameplayStatics.LatchSpell // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31eaab0
	bool IsStateOnTopOfStack(struct FName stateGroup, struct FName State); // Function Phoenix.AvaAudioGameplayStatics.IsStateOnTopOfStack // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ea9e0
	bool IsDialogueEventActive(int32_t DialogueHandle); // Function Phoenix.AvaAudioGameplayStatics.IsDialogueEventActive // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31ea950
	void InitActorAudio(struct AActor* Actor); // Function Phoenix.AvaAudioGameplayStatics.InitActorAudio // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ea8b0
	void HermesBindAudioDialogueLineStartedData(struct FDelegate Delegate_AudioDialogueLineStartedData, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.AvaAudioGameplayStatics.HermesBindAudioDialogueLineStartedData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ea780
	void HermesBindAudioDialogueLineEndedData(struct FDelegate Delegate_AudioDialogueLineEndedData, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.AvaAudioGameplayStatics.HermesBindAudioDialogueLineEndedData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ea780
	void HermesAudioDialogueLineStartedDataDelegate__DelegateSignature(struct UObject* Caller, struct FAudioDialogueLineData& AudioDialogueLineData); // DelegateFunction Phoenix.AvaAudioGameplayStatics.HermesAudioDialogueLineStartedDataDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesAudioDialogueLineEndedDataDelegate__DelegateSignature(struct UObject* Caller, struct FAudioDialogueLineData& AudioDialogueLineData); // DelegateFunction Phoenix.AvaAudioGameplayStatics.HermesAudioDialogueLineEndedDataDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	bool GetSourcePlayPosition(int32_t DialogueHandle, float& Out_AudioSeconds, float& Out_LipsyncPrerollAdjustedSeconds); // Function Phoenix.AvaAudioGameplayStatics.GetSourcePlayPosition // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31ea660
	enum class EGenderVoice GetPlayerGenderVoice(); // Function Phoenix.AvaAudioGameplayStatics.GetPlayerGenderVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ea600
	bool DialogueSequenceReferenceIsValid(struct FDialogueSequenceReference& Reference); // Function Phoenix.AvaAudioGameplayStatics.DialogueSequenceReferenceIsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31e9dc0
	bool DialogueReferenceIsValid(struct FDialogueConversationReference DialogueReference); // Function Phoenix.AvaAudioGameplayStatics.DialogueReferenceIsValid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31e9cd0
	void DebugDialogueUnload(); // Function Phoenix.AvaAudioGameplayStatics.DebugDialogueUnload // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9cb0
	int32_t DebugDialoguePlay(struct AActor* Actor, struct FName lineID); // Function Phoenix.AvaAudioGameplayStatics.DebugDialoguePlay // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9be0
	void DebugDialogueLoad(); // Function Phoenix.AvaAudioGameplayStatics.DebugDialogueLoad // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9bc0
	void DebugDialogueChangeLanguage(struct FString Language); // Function Phoenix.AvaAudioGameplayStatics.DebugDialogueChangeLanguage // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9ae0
	void ClearDialogueCompleteNotification(int32_t DialogueHandle); // Function Phoenix.AvaAudioGameplayStatics.ClearDialogueCompleteNotification // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9a60
	int32_t AddStateToStack(struct FName stateGroup, struct FName State, int32_t Priority); // Function Phoenix.AvaAudioGameplayStatics.AddStateToStack // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31e9640
};

// Class Phoenix.AvaAudioHighLevelHelpers
// Size: 0x28 (Inherited: 0x28)
struct UAvaAudioHighLevelHelpers : UBlueprintFunctionLibrary {

	void UnregisterForcedACKWitness(struct FName CharacterID, bool bUnregisterAll); // Function Phoenix.AvaAudioHighLevelHelpers.UnregisterForcedACKWitness // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f4db0
	void UnregisterExclusiveMissionDialogue(struct FName& CharacterID, struct FString ExclusiveEventNamePattern, struct FName& FromMissionID); // Function Phoenix.AvaAudioHighLevelHelpers.UnregisterExclusiveMissionDialogue // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f4c40
	bool SetAudioToPortraitTransform(struct AActor* Actor, struct FTransform Transform); // Function Phoenix.AvaAudioHighLevelHelpers.SetAudioToPortraitTransform // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31f46b0
	bool RestoreAudioFromPortraitTransform(struct AActor* Actor); // Function Phoenix.AvaAudioHighLevelHelpers.RestoreAudioFromPortraitTransform // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f44c0
	void RegisterForcedACKWitness(struct FName CharacterID); // Function Phoenix.AvaAudioHighLevelHelpers.RegisterForcedACKWitness // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f42a0
	void RegisterExclusiveMissionDialogue(struct FName& CharacterID, struct FString ExclusiveEventNamePattern, struct FName& FromMissionID); // Function Phoenix.AvaAudioHighLevelHelpers.RegisterExclusiveMissionDialogue // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f4130
	void PlayGreetingForPlayerChatStarted(struct AActor* Actor, struct FString AudioConversationName); // Function Phoenix.AvaAudioHighLevelHelpers.PlayGreetingForPlayerChatStarted // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f3e90
	bool DEBUG_IsAvatarInSiteVolume(struct FString SiteName); // Function Phoenix.AvaAudioHighLevelHelpers.DEBUG_IsAvatarInSiteVolume // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x31f2ec0
};

// Class Phoenix.AvaAudioMurmurationComponent
// Size: 0x680 (Inherited: 0x620)
struct UAvaAudioMurmurationComponent : UAkComponent {
	char pad_620[0x60]; // 0x620(0x60)

	void UpdateHealthRTPCCallback(struct AActor* InActor, float Delta, bool bIndicateHUD); // Function Phoenix.AvaAudioMurmurationComponent.UpdateHealthRTPCCallback // (Final|Native|Public) // @ game+0x31f4f10
	void StartIntensityDecay(); // Function Phoenix.AvaAudioMurmurationComponent.StartIntensityDecay // (Final|Native|Public) // @ game+0x31f4af0
	void OnCharacterLoadComplete(struct AActor* Actor); // Function Phoenix.AvaAudioMurmurationComponent.OnCharacterLoadComplete // (Final|Native|Private) // @ game+0x31f3d50
	void OnAddOnMeshesChanged(struct AActor* Actor); // Function Phoenix.AvaAudioMurmurationComponent.OnAddOnMeshesChanged // (Final|Native|Private) // @ game+0x31f3cc0
	void IncrementRTPC(struct FString RTPC_Name, int32_t Increment, float InterpolationTime, bool bDecay); // Function Phoenix.AvaAudioMurmurationComponent.IncrementRTPC // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3350
	void AbsoluteRTPC(struct FString RTPC_Name, float RTPC_Value, float InterpolationTimeMs, bool bDecay); // Function Phoenix.AvaAudioMurmurationComponent.AbsoluteRTPC // (Final|Native|Public|BlueprintCallable) // @ game+0x31f2b30
};

// Class Phoenix.AvadaKedavraSpellTool
// Size: 0x880 (Inherited: 0x868)
struct AAvadaKedavraSpellTool : AFireOnceSpellTool {
	struct UCurveFloat* TimeDilationCurve; // 0x868(0x08)
	struct TArray<struct UMultiFX2_Base*> KillCursedFX2; // 0x870(0x10)
};

// Class Phoenix.AvaDialogueTrack
// Size: 0xb0 (Inherited: 0x90)
struct UAvaDialogueTrack : UMovieSceneNameableTrack {
	struct TArray<struct FMovieSceneObjectBindingID> EventReceivers; // 0x90(0x10)
	struct TArray<struct UMovieSceneSection*> Sections; // 0xa0(0x10)
};

// Class Phoenix.AvaDialogueTrackSection
// Size: 0x158 (Inherited: 0xe8)
struct UAvaDialogueTrackSection : UMovieSceneSection {
	struct FAvaDialogueTrackSectionData SectionData; // 0xe8(0x70)
};

// Class Phoenix.AvaStreamingManager
// Size: 0x2c0 (Inherited: 0x28)
struct UAvaStreamingManager : UObject {
	struct FMulticastInlineDelegate OnHighPriorityStreamingComplete; // 0x28(0x10)
	struct FMulticastInlineDelegate OnAsyncLoadAssetListComplete; // 0x38(0x10)
	struct FMulticastInlineDelegate OnStreamingBehaviorAboutToChangeEvent; // 0x48(0x10)
	struct FMulticastInlineDelegate OnStreamingBehaviorHasChangedEvent; // 0x58(0x10)
	char pad_68[0x188]; // 0x68(0x188)
	struct TArray<struct ULevel*> LevelsToKeep; // 0x1f0(0x10)
	char pad_200[0xa0]; // 0x200(0xa0)
	struct ULevelStreamingLatencyProfiler* LevelStreamingLatencyProfiler; // 0x2a0(0x08)
	struct APostProcessVolumeWithBlendDomain* LowEndFogCullingVolume; // 0x2a8(0x08)
	struct UMaterialInstanceDynamic* LowEndFogCullingMaterialInstanceDynamic; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void UpdateOverlaps(); // Function Phoenix.AvaStreamingManager.UpdateOverlaps // (Final|Native|Public|BlueprintCallable) // @ game+0x31f5030
	bool UnregisterInterestPointActor(struct AActor* InActor); // Function Phoenix.AvaStreamingManager.UnregisterInterestPointActor // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4e70
	void UnloadLevelInstance(struct ULevelStreaming* InLevel); // Function Phoenix.AvaStreamingManager.UnloadLevelInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f4bc0
	void UnloadAllButCurrentLevel(); // Function Phoenix.AvaStreamingManager.UnloadAllButCurrentLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4ba0
	void SuppressPauseStreamingAutoReset(bool bSuppress); // Function Phoenix.AvaStreamingManager.SuppressPauseStreamingAutoReset // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4b10
	void SetStreamingBehaviorMode(enum class EStreamingBehaviorMode BehaviorMode); // Function Phoenix.AvaStreamingManager.SetStreamingBehaviorMode // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4a70
	void SetLowEndFog(struct APostProcessVolumeWithBlendDomain* LowEndFog, struct UMaterialInterface* LowEndFogMaterialBase); // Function Phoenix.AvaStreamingManager.SetLowEndFog // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4910
	void ResumeStreaming(bool bForceImmediate, bool bResumeTileStreaming); // Function Phoenix.AvaStreamingManager.ResumeStreaming // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4550
	bool RegisterInterestPointActor(struct AActor* InActor, float InAdditionalRadius, bool InAffectsInteriors, bool InAffectsTileRegionVolumes); // Function Phoenix.AvaStreamingManager.RegisterInterestPointActor // (Final|Native|Public|BlueprintCallable) // @ game+0x31f4320
	void PreventInteriorLoads(bool bPrevent); // Function Phoenix.AvaStreamingManager.PreventInteriorLoads // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3fb0
	void PauseStreaming(bool bWorldTilesOnly); // Function Phoenix.AvaStreamingManager.PauseStreaming // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3e00
	void OnLoadScreenDismissed(); // Function Phoenix.AvaStreamingManager.OnLoadScreenDismissed // (Final|Native|Private) // @ game+0x31f3de0
	void LowerCurtainUntilStreamingComplete(); // Function Phoenix.AvaStreamingManager.LowerCurtainUntilStreamingComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3ca0
	void LoadGlobalLevels(); // Function Phoenix.AvaStreamingManager.LoadGlobalLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3c80
	bool IsTileRenderingEnabled(); // Function Phoenix.AvaStreamingManager.IsTileRenderingEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3c50
	bool IsStreamingPaused(); // Function Phoenix.AvaStreamingManager.IsStreamingPaused // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3c20
	bool IsStreamingCompleteFullCycle(bool bCheckOnlyLOD0, bool bUseDelay); // Function Phoenix.AvaStreamingManager.IsStreamingCompleteFullCycle // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3b00
	bool IsStreamingCompleteAtLocationFullCycle(struct FVector& InQueryPoint, bool InQueryWorldTiles, bool InUseSlowAccurateCheck, bool InConsiderFutureRequestAtLocation); // Function Phoenix.AvaStreamingManager.IsStreamingCompleteAtLocationFullCycle // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31f3930
	bool IsStreamingCompleteAtLocation(struct FVector& InQueryPoint, bool InQueryWorldTiles, bool InUseSlowAccurateCheck, bool InConsiderFutureRequestAtLocation, int32_t MinPriorityToCheck, bool bCheckTextureAndMeshStreaming); // Function Phoenix.AvaStreamingManager.IsStreamingCompleteAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31f36f0
	bool IsStreamingComplete(bool bCheckOnlyLOD0, bool bUseDelay, bool bConsiderUpdatePending, bool bConsiderUnloads); // Function Phoenix.AvaStreamingManager.IsStreamingComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x31f3550
	void InvalidateStreamingComplete(bool InRequireFullUpdates); // Function Phoenix.AvaStreamingManager.InvalidateStreamingComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x31f34c0
	enum class EStreamingBehaviorTactic GetStreamingBehaviorTactic(); // Function Phoenix.AvaStreamingManager.GetStreamingBehaviorTactic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31f3330
	enum class EStreamingBehaviorMode GetStreamingBehaviorMode(); // Function Phoenix.AvaStreamingManager.GetStreamingBehaviorMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31f3300
	struct UAvaStreamingManager* GetPure(); // Function Phoenix.AvaStreamingManager.GetPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31f2ff0
	struct UAvaStreamingManager* Get(); // Function Phoenix.AvaStreamingManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f2ff0
	void FlushStreaming(); // Function Phoenix.AvaStreamingManager.FlushStreaming // (Final|Native|Public|BlueprintCallable) // @ game+0x31f2fb0
	void AsyncLoadAssetList(struct UObject* WorldContextObject, struct TArray<struct TSoftObjectPtr<UObject>>& AssetsToStream, int32_t& UniqueId); // Function Phoenix.AvaStreamingManager.AsyncLoadAssetList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x31f2cc0
};

// Class Phoenix.AvaStreamingVolumeComponentBase
// Size: 0x260 (Inherited: 0x220)
struct UAvaStreamingVolumeComponentBase : USceneComponent {
	bool bForcedState; // 0x218(0x01)
	bool bHidesWithTiles; // 0x219(0x01)
	bool bShouldAffectTileStreaming; // 0x21a(0x01)
	bool bPauseTileStreaming; // 0x21b(0x01)
	bool bSupportsDitheredLODTransition; // 0x21c(0x01)
	int32_t TileRenderingMaxLod; // 0x220(0x04)
	float AdditionalBoundsRadius; // 0x224(0x04)
	bool bPreventExteriorRendering; // 0x228(0x01)
	bool bIgnoreShellVolumes; // 0x229(0x01)
	bool bIsDoorPreloadVolume; // 0x22a(0x01)
	bool bActiveWithFastTravelDoors; // 0x22b(0x01)
	enum class EVolumeLoadIdentifier VolumeLoadIdentifier; // 0x22c(0x01)
	char pad_232[0x2e]; // 0x232(0x2e)

	void SetForcedStateStatus(bool bForced); // Function Phoenix.AvaStreamingVolumeComponentBase.SetForcedStateStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1374530
	bool IsStateForced(); // Function Phoenix.AvaStreamingVolumeComponentBase.IsStateForced // (Final|Native|Public|BlueprintCallable) // @ game+0x1373dc0
};

// Class Phoenix.AvaStreamingLevelVolumeComponentBase
// Size: 0x290 (Inherited: 0x260)
struct UAvaStreamingLevelVolumeComponentBase : UAvaStreamingVolumeComponentBase {
	struct TSoftObjectPtr<UWorld> LevelToStream; // 0x258(0x28)
	struct AActor* LevelPlacementActor; // 0x280(0x08)
	struct ULevelStreamingDynamic* LoadedLevel; // 0x288(0x08)

	struct FRotator GetLevelRot(); // Function Phoenix.AvaStreamingLevelVolumeComponentBase.GetLevelRot // (Native|Public|HasDefaults) // @ game+0x31f31c0
	struct FVector GetLevelLoc(); // Function Phoenix.AvaStreamingLevelVolumeComponentBase.GetLevelLoc // (Native|Public|HasDefaults) // @ game+0x31f3180
};

// Class Phoenix.AvaStreamingVolumeComponent
// Size: 0x3d0 (Inherited: 0x290)
struct UAvaStreamingVolumeComponent : UAvaStreamingLevelVolumeComponentBase {
	bool bIsExterior; // 0x290(0x01)
	bool bExemptFromInteriorExteriorCulling; // 0x291(0x01)
	char pad_292[0x6]; // 0x292(0x06)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentLevelsToStream; // 0x298(0x10)
	struct TArray<float> LevelLODDistances; // 0x2a8(0x10)
	bool bShouldDitherLODTransitions; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float DependentLevelAdditionalBoundsRadius; // 0x2bc(0x04)
	bool bSwapsPrecomputedVisibility; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentSpringLevelsToStream; // 0x2c8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentSummerLevelsToStream; // 0x2d8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentFallLevelsToStream; // 0x2e8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentWinterLevelsToStream; // 0x2f8(0x10)
	struct TSoftObjectPtr<UWorld> LevelLodToStream0; // 0x308(0x28)
	struct TSoftObjectPtr<UWorld> LevelLodToStream1; // 0x330(0x28)
	struct TSoftObjectPtr<UWorld> LevelLodToStream2; // 0x358(0x28)
	int32_t LodLevel; // 0x380(0x04)
	char pad_384[0x14]; // 0x384(0x14)
	struct TArray<struct ULevelStreamingDynamic*> LoadedDependentLevels; // 0x398(0x10)
	struct TArray<struct ULevelStreamingDynamic*> LoadedDependentSeasonLevels; // 0x3a8(0x10)
	char pad_3B8[0x18]; // 0x3b8(0x18)

	void UpdateSeasonState(); // Function Phoenix.AvaStreamingVolumeComponent.UpdateSeasonState // (Native|Public) // @ game+0x31e1760
	void SetShouldBeVisible(bool InShouldBeVisible); // Function Phoenix.AvaStreamingVolumeComponent.SetShouldBeVisible // (Native|Public|BlueprintCallable) // @ game+0x31f49e0
	void SetShouldBeLoaded(bool InShouldBeLoaded); // Function Phoenix.AvaStreamingVolumeComponent.SetShouldBeLoaded // (Native|Public|BlueprintCallable) // @ game+0x1980ca0
	void SetLodTime(double InLodTime); // Function Phoenix.AvaStreamingVolumeComponent.SetLodTime // (Native|Public) // @ game+0x31f4880
	void SetLodLevel(int32_t InLodLevel); // Function Phoenix.AvaStreamingVolumeComponent.SetLodLevel // (Native|Public) // @ game+0x31f47f0
	void ProposeLodLevel(int32_t InLodLevel, struct FVector2D InBorderDist); // Function Phoenix.AvaStreamingVolumeComponent.ProposeLodLevel // (Native|Public|HasDefaults) // @ game+0x31f4060
	void PropagateState(); // Function Phoenix.AvaStreamingVolumeComponent.PropagateState // (Native|Public) // @ game+0x31f4040
	bool GetShouldBeVisible(); // Function Phoenix.AvaStreamingVolumeComponent.GetShouldBeVisible // (Native|Public|BlueprintCallable) // @ game+0x31f32d0
	bool GetShouldBeLoaded(); // Function Phoenix.AvaStreamingVolumeComponent.GetShouldBeLoaded // (Native|Public|BlueprintCallable) // @ game+0x31f32a0
	int32_t GetProposedLodLevel(); // Function Phoenix.AvaStreamingVolumeComponent.GetProposedLodLevel // (Native|Public) // @ game+0x31f3270
	double GetLodTime(); // Function Phoenix.AvaStreamingVolumeComponent.GetLodTime // (Native|Public) // @ game+0x31f3230
	int32_t GetLodLevel(); // Function Phoenix.AvaStreamingVolumeComponent.GetLodLevel // (Native|Public) // @ game+0x31f3200
	struct TArray<float> GetLODDistances(); // Function Phoenix.AvaStreamingVolumeComponent.GetLODDistances // (Native|Public) // @ game+0x31f3140
	struct ULevelStreamingDynamic* GetLoadedLevel(); // Function Phoenix.AvaStreamingVolumeComponent.GetLoadedLevel // (Native|Public) // @ game+0x31f3040
	void ForceUnload(); // Function Phoenix.AvaStreamingVolumeComponent.ForceUnload // (Native|Public|BlueprintCallable) // @ game+0x31f2fd0
	void ForceLoad(); // Function Phoenix.AvaStreamingVolumeComponent.ForceLoad // (Native|Public|BlueprintCallable) // @ game+0x17e3930
	bool CommitLodLevel(double InLodTime); // Function Phoenix.AvaStreamingVolumeComponent.CommitLodLevel // (Native|Public) // @ game+0x31f2e20
};

// Class Phoenix.AvaAssetStreamingVolumeComponent
// Size: 0x290 (Inherited: 0x260)
struct UAvaAssetStreamingVolumeComponent : UAvaStreamingVolumeComponentBase {
	struct TArray<struct TSoftObjectPtr<UObject>> AssetsToStream; // 0x258(0x10)
	char pad_270[0x18]; // 0x270(0x18)
	struct AActor* AssetOwner; // 0x288(0x08)

	void SetAssetOwner(struct AActor* NewOwner); // Function Phoenix.AvaAssetStreamingVolumeComponent.SetAssetOwner // (Native|Public) // @ game+0x31f4620
	struct TArray<struct FTransform> GetAssetTransforms(); // Function Phoenix.AvaAssetStreamingVolumeComponent.GetAssetTransforms // (Native|Public) // @ game+0x31f3070
	struct TArray<struct TSoftObjectPtr<UObject>> GetAssetsToStream(); // Function Phoenix.AvaAssetStreamingVolumeComponent.GetAssetsToStream // (Native|Public) // @ game+0x31f3100
	struct AActor* GetAssetOwner(); // Function Phoenix.AvaAssetStreamingVolumeComponent.GetAssetOwner // (Native|Public) // @ game+0x31f3040
};

// Class Phoenix.AvaTileRegionVolumeComponent
// Size: 0x2b0 (Inherited: 0x260)
struct UAvaTileRegionVolumeComponent : UAvaStreamingVolumeComponentBase {
	char UnloadCO_ : 1; // 0x258(0x01)
	char UnloadFO_ : 1; // 0x258(0x01)
	char UnloadHN_ : 1; // 0x258(0x01)
	char UnloadHS_ : 1; // 0x258(0x01)
	char UnloadSW_ : 1; // 0x258(0x01)
	char UnloadTU_ : 1; // 0x258(0x01)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceLoad; // 0x260(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceUnload; // 0x270(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceHide; // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToOnlyLoad; // 0x290(0x10)
	char pad_2A0_6 : 2; // 0x2a0(0x01)
	char pad_2A1[0xf]; // 0x2a1(0x0f)

	void RemoveTiles(); // Function Phoenix.AvaTileRegionVolumeComponent.RemoveTiles // (Final|Native|Public) // @ game+0x31f44a0
	void ForceUnload(); // Function Phoenix.AvaTileRegionVolumeComponent.ForceUnload // (Native|Public|BlueprintCallable) // @ game+0x31f2fd0
	void ForceLoad(); // Function Phoenix.AvaTileRegionVolumeComponent.ForceLoad // (Native|Public|BlueprintCallable) // @ game+0x17e3930
	void AddTiles(); // Function Phoenix.AvaTileRegionVolumeComponent.AddTiles // (Final|Native|Public) // @ game+0x31f2ca0
};

// Class Phoenix.AvaShellVolumeComponent
// Size: 0x2a0 (Inherited: 0x290)
struct UAvaShellVolumeComponent : UAvaStreamingLevelVolumeComponentBase {
	struct ATriggerBox* VolumeToIntersectAgainsStreamingVolumes; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class Phoenix.AvaStreamingVolumeSet
// Size: 0x268 (Inherited: 0x248)
struct AAvaStreamingVolumeSet : AActor {
	struct USceneComponent* SceneComponent; // 0x248(0x08)
	bool bHidesWithTiles; // 0x250(0x01)
	bool bShouldAffectTileStreaming; // 0x251(0x01)
	bool bPauseTileStreaming; // 0x252(0x01)
	char pad_253[0x1]; // 0x253(0x01)
	int32_t TileRenderingMaxLod; // 0x254(0x04)
	float AdditionalBoundsRadius; // 0x258(0x04)
	bool bPreventExteriorRendering; // 0x25c(0x01)
	bool bIgnoreShellVolumes; // 0x25d(0x01)
	enum class EVolumeLoadIdentifier VolumeLoadIdentifier; // 0x25e(0x01)
	char pad_25F[0x9]; // 0x25f(0x09)

	void SetForcedStateStatus(bool bForced); // Function Phoenix.AvaStreamingVolumeSet.SetForcedStateStatus // (Native|Public|BlueprintCallable) // @ game+0x1545db0
	bool IsStateForced(); // Function Phoenix.AvaStreamingVolumeSet.IsStateForced // (Native|Public|BlueprintCallable) // @ game+0x1545d00
	struct UAvaStreamingVolumeComponentBase* GetMaster(); // Function Phoenix.AvaStreamingVolumeSet.GetMaster // (Final|Native|Public|BlueprintCallable) // @ game+0x31f8b60
};

// Class Phoenix.AvaLevelStreamingVolumeSet
// Size: 0x3a8 (Inherited: 0x268)
struct AAvaLevelStreamingVolumeSet : AAvaStreamingVolumeSet {
	bool bIsExterior; // 0x268(0x01)
	bool bExemptFromInteriorExteriorCulling; // 0x269(0x01)
	char pad_26A[0x6]; // 0x26a(0x06)
	struct TSoftObjectPtr<UWorld> LevelToStream; // 0x270(0x28)
	bool bSwapsPrecomputedVisibility; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentLevelsToStream; // 0x2a0(0x10)
	float DependentLevelAdditionalBoundsRadius; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct AActor* LevelPlacementActor; // 0x2b8(0x08)
	struct TArray<float> LevelLODDistances; // 0x2c0(0x10)
	bool bShouldDitherLODTransitions; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentSpringLevelsToStream; // 0x2d8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentSummerLevelsToStream; // 0x2e8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentFallLevelsToStream; // 0x2f8(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> DependentWinterLevelsToStream; // 0x308(0x10)
	struct TSoftObjectPtr<UObject> LevelLodToStream0; // 0x318(0x28)
	struct TSoftObjectPtr<UObject> LevelLodToStream1; // 0x340(0x28)
	struct TSoftObjectPtr<UObject> LevelLodToStream2; // 0x368(0x28)
	struct ULevelStreamingDynamic* LoadedLevel; // 0x390(0x08)
	struct TArray<struct ULevelStreamingDynamic*> LoadedDependentLevels; // 0x398(0x10)

	void SetShouldBeVisible(bool InShouldBeVisible); // Function Phoenix.AvaLevelStreamingVolumeSet.SetShouldBeVisible // (Native|Public|BlueprintCallable) // @ game+0x31f9c50
	void SetShouldBeLoaded(bool InShouldBeLoaded); // Function Phoenix.AvaLevelStreamingVolumeSet.SetShouldBeLoaded // (Native|Public|BlueprintCallable) // @ game+0x31f9bc0
	struct TArray<float> GetLODDistances(); // Function Phoenix.AvaLevelStreamingVolumeSet.GetLODDistances // (Native|Public) // @ game+0x31f8a20
	struct ULevelStreamingDynamic* GetLoadedLevel(); // Function Phoenix.AvaLevelStreamingVolumeSet.GetLoadedLevel // (Native|Public) // @ game+0x31f8b30
	struct FRotator GetLevelRot(); // Function Phoenix.AvaLevelStreamingVolumeSet.GetLevelRot // (Native|Public|HasDefaults) // @ game+0x31f8af0
	struct FVector GetLevelLoc(); // Function Phoenix.AvaLevelStreamingVolumeSet.GetLevelLoc // (Native|Public|HasDefaults) // @ game+0x31f8ab0
	void ForceUnload(); // Function Phoenix.AvaLevelStreamingVolumeSet.ForceUnload // (Native|Public|BlueprintCallable) // @ game+0x31f7ff0
	void ForceLoad(); // Function Phoenix.AvaLevelStreamingVolumeSet.ForceLoad // (Native|Public|BlueprintCallable) // @ game+0x31f7fd0
};

// Class Phoenix.AvaAssetStreamingVolumeSet
// Size: 0x2a0 (Inherited: 0x268)
struct AAvaAssetStreamingVolumeSet : AAvaStreamingVolumeSet {
	struct TArray<struct TSoftObjectPtr<UObject>> AssetsToStream; // 0x268(0x10)
	char pad_278[0x20]; // 0x278(0x20)
	struct AActor* AssetOwner; // 0x298(0x08)

	void SetAssetOwner(struct AActor* NewOwner); // Function Phoenix.AvaAssetStreamingVolumeSet.SetAssetOwner // (Native|Public) // @ game+0x31f9a20
	struct TArray<struct FTransform> GetAssetTransforms(); // Function Phoenix.AvaAssetStreamingVolumeSet.GetAssetTransforms // (Native|Public) // @ game+0x31f8070
	struct TArray<struct TSoftObjectPtr<UObject>> GetAssetsToStream(); // Function Phoenix.AvaAssetStreamingVolumeSet.GetAssetsToStream // (Native|Public) // @ game+0x31f8100
	struct AActor* GetAssetOwner(); // Function Phoenix.AvaAssetStreamingVolumeSet.GetAssetOwner // (Native|Public) // @ game+0x31f8040
};

// Class Phoenix.AvaTileRegionVolumeSet
// Size: 0x2b0 (Inherited: 0x268)
struct AAvaTileRegionVolumeSet : AAvaStreamingVolumeSet {
	char UnloadCO_ : 1; // 0x268(0x01)
	char UnloadFO_ : 1; // 0x268(0x01)
	char UnloadHN_ : 1; // 0x268(0x01)
	char UnloadHS_ : 1; // 0x268(0x01)
	char UnloadSW_ : 1; // 0x268(0x01)
	char UnloadTU_ : 1; // 0x268(0x01)
	char pad_268_6 : 2; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceLoad; // 0x270(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceUnload; // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToForceHide; // 0x290(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> TilesToOnlyLoad; // 0x2a0(0x10)

	void ForceDeactivate(); // Function Phoenix.AvaTileRegionVolumeSet.ForceDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x31f7fb0
	void ForceActivate(); // Function Phoenix.AvaTileRegionVolumeSet.ForceActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x31f7f90
};

// Class Phoenix.AvaShellVolumeSet
// Size: 0x2a8 (Inherited: 0x268)
struct AAvaShellVolumeSet : AAvaStreamingVolumeSet {
	struct TSoftObjectPtr<UWorld> LevelToStream; // 0x268(0x28)
	struct AActor* LevelPlacementActor; // 0x290(0x08)
	struct ATriggerBox* VolumeToIntersectAgainsStreamingVolumes; // 0x298(0x08)
	struct ULevelStreamingDynamic* LoadedLevel; // 0x2a0(0x08)
};

// Class Phoenix.AvatarCreatorPage
// Size: 0x378 (Inherited: 0x328)
struct UAvatarCreatorPage : UPhoenixUserWidget {
	struct FMulticastInlineDelegate OnCreatorItemHovered; // 0x328(0x10)
	struct FMulticastInlineDelegate OnCreatorItemUnhovered; // 0x338(0x10)
	struct FMulticastInlineDelegate OnCreatorSliderHovered; // 0x348(0x10)
	struct FMulticastInlineDelegate OnCreatorSliderUnhovered; // 0x358(0x10)
	struct FMulticastInlineDelegate OnAllIconsLoaded; // 0x368(0x10)

	void SetPlayerVoicePitch(int32_t PlayerVoicePitch); // Function Phoenix.AvatarCreatorPage.SetPlayerVoicePitch // (Final|Native|Private|BlueprintCallable) // @ game+0x31f9b30
	int32_t GetPlayerVoicePitch(); // Function Phoenix.AvatarCreatorPage.GetPlayerVoicePitch // (Final|Native|Private|BlueprintCallable|BlueprintPure) // @ game+0x31f8bd0
};

// Class Phoenix.AvatarPresetOverride_Interface
// Size: 0x28 (Inherited: 0x28)
struct UAvatarPresetOverride_Interface : UInterface {

	struct FName GetFullbodyPreset(); // Function Phoenix.AvatarPresetOverride_Interface.GetFullbodyPreset // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AvatarPresetDefinition
// Size: 0x88 (Inherited: 0x30)
struct UAvatarPresetDefinition : UDataAsset {
	enum class EAvatarPresetType PresetType; // 0x30(0x01)
	enum class EGenderEnum Gender; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct TMap<struct FName, struct FCharacterPieceDefinition> CharacterItems; // 0x38(0x50)
};

// Class Phoenix.AvatarHouseGearMappings
// Size: 0x80 (Inherited: 0x30)
struct UAvatarHouseGearMappings : UDataAsset {
	struct TMap<struct FGearName, struct FHouseGear> HouseGearMapping; // 0x30(0x50)
};

// Class Phoenix.AvatarPresetsManager
// Size: 0x28 (Inherited: 0x28)
struct UAvatarPresetsManager : UObject {

	enum class EAvatarPresetType StringToPresetType(struct FString PresetType); // Function Phoenix.AvatarPresetsManager.StringToPresetType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31f9ce0
	bool SetPlayerGenderRig(enum class EGenderEnum NewGenderRig); // Function Phoenix.AvatarPresetsManager.SetPlayerGenderRig // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f9ab0
	bool SaveAvatarLook(struct FName RegistryId, struct TMap<enum class EAvatarPresetType, struct TSoftObjectPtr<UAvatarPresetDefinition>>& AvatarPresetDefinitions); // Function Phoenix.AvatarPresetsManager.SaveAvatarLook // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f98b0
	void ReleaseAllAvatarPresets(); // Function Phoenix.AvatarPresetsManager.ReleaseAllAvatarPresets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f9890
	struct FString PresetTypeToString(enum class EAvatarPresetType PresetType); // Function Phoenix.AvatarPresetsManager.PresetTypeToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31f97c0
	bool LoadPreset(struct UCustomizableCharacterComponent* CCC, enum class EAvatarPresetType PresetType, struct FName PresetName, struct FDelegate& OnCharacterLoadComplete, bool& IsLoading, bool bForceSync); // Function Phoenix.AvatarPresetsManager.LoadPreset // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f95c0
	void LoadLookFromArrays(struct AActor* Actor, enum class EGenderEnum Gender, struct TArray<struct FName> AvatarPresetIDs, struct TArray<struct FName> GearAppearanceIDs, struct FString GearTags, struct FDelegate& CharacterLoadComplete, struct FName HouseIDOverride); // Function Phoenix.AvatarPresetsManager.LoadLookFromArrays // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f92e0
	bool LoadFullBodyPreset(struct UCustomizableCharacterComponent* CCC, struct FName PresetName, struct FDelegate& OnCharacterLoadComplete, bool bForceSync, bool bShowDefaultAvatarGear); // Function Phoenix.AvatarPresetsManager.LoadFullBodyPreset // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f9120
	bool LoadAvatarPresetDefinitionsFromSaveGameDB(struct AActor* Actor, struct TMap<enum class EAvatarPresetType, struct TSoftObjectPtr<UAvatarPresetDefinition>>& OutPresetNames, enum class EGenderEnum& OutGender); // Function Phoenix.AvatarPresetsManager.LoadAvatarPresetDefinitionsFromSaveGameDB // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f8f70
	void LoadAllAvatarPresets(struct UObject* InWorldContextObject, struct FDelegate DelegateToCall, struct TArray<struct FName>& AdditionalGearAppearanceIDs); // Function Phoenix.AvatarPresetsManager.LoadAllAvatarPresets // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f8e30
	struct TArray<struct FString> GetPresetTypes(); // Function Phoenix.AvatarPresetsManager.GetPresetTypes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f8c00
	struct TArray<struct FName> GetPresetsOfType(enum class EGenderEnum Gender, enum class EAvatarPresetType PresetType, bool bIncludeHidden); // Function Phoenix.AvatarPresetsManager.GetPresetsOfType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f8ce0
	enum class EGenderEnum GetPlayerGenderRig(); // Function Phoenix.AvatarPresetsManager.GetPlayerGenderRig // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f8ba0
	struct TArray<struct FName> GetFullBodyPresetNames(enum class EGenderEnum Gender, bool bIncludeHidden); // Function Phoenix.AvatarPresetsManager.GetFullBodyPresetNames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f8910
	bool GetFullbodyPreset(struct FName FullBodyPresetName, enum class EGenderEnum& OutGender, struct TMap<enum class EAvatarPresetType, struct TSoftObjectPtr<UAvatarPresetDefinition>>& OutPresets); // Function Phoenix.AvatarPresetsManager.GetFullbodyPreset // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f8760
	bool GetFullBodyAvatarPresetNames(struct FName FullBodyPresetName, enum class EGenderEnum& OutGender, struct TMap<enum class EAvatarPresetType, struct FName>& OutPresetNames); // Function Phoenix.AvatarPresetsManager.GetFullBodyAvatarPresetNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x31f8580
	struct TMap<enum class EAvatarPresetType, struct FName> GetAvatarPresetNames(struct TMap<enum class EAvatarPresetType, struct TSoftObjectPtr<UAvatarPresetDefinition>>& AvatarPresetDefinitions); // Function Phoenix.AvatarPresetsManager.GetAvatarPresetNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x31f83f0
	struct FName GetAvatarPresetName(struct TSoftObjectPtr<UAvatarPresetDefinition> AvatarPresetDefinition); // Function Phoenix.AvatarPresetsManager.GetAvatarPresetName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31f82e0
	struct TSoftObjectPtr<UAvatarPresetDefinition> GetAvatarPresetDefinition(struct FName PresetName); // Function Phoenix.AvatarPresetsManager.GetAvatarPresetDefinition // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x31f8220
	struct UAvatarPresetsManager* Get(); // Function Phoenix.AvatarPresetsManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31f8010
};

// Class Phoenix.AvatarPresetsSettings
// Size: 0xa8 (Inherited: 0x28)
struct UAvatarPresetsSettings : UObject {
	struct FHumanCharacterId DefaultPIECharacter; // 0x28(0x08)
	struct FFullbodyAvatarPreset DefaultPIEFullBodyPreset; // 0x30(0x08)
	struct FGearHeadSlotName DefaultPIEHeadGear; // 0x38(0x10)
	struct FGearOutfitSlotName DefaultPIEOutfitGear; // 0x48(0x10)
	struct FGearBackSlotName DefaultPIEBackGear; // 0x58(0x10)
	enum class EHoodPosition DefaultPIEHoodPosition; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct FGearNeckSlotName DefaultPIENeckGear; // 0x70(0x10)
	struct FGearHandSlotName DefaultPIEHandGear; // 0x80(0x10)
	struct FGearFaceSlotName DefaultPIEFaceGear; // 0x90(0x10)
	struct FAvatarHouse DefaultPIEHouse; // 0xa0(0x08)
};

// Class Phoenix.AvaUserWidget
// Size: 0x328 (Inherited: 0x328)
struct UAvaUserWidget : UPhoenixUserWidget {

	void OnSynchronizeProperties(); // Function Phoenix.AvaUserWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Base_Character
// Size: 0x1660 (Inherited: 0xcc0)
struct ABase_Character : AAmbulatory_Character {
	char pad_CC0[0x40]; // 0xcc0(0x40)
	struct UPhoenixManagedCharacter* ManagedCharacter; // 0xd00(0x08)
	struct FMultiFXHandle ScratchFXHandle; // 0xd08(0x08)
	struct FMulticastInlineDelegate OnSpellSuccess; // 0xd10(0x10)
	struct UTraversalSettings* TraversalSettings; // 0xd20(0x08)
	float ShoulderFixupAlpha; // 0xd28(0x04)
	float FadeOutAlphaFactor; // 0xd2c(0x04)
	struct UCharacterStateInfo* CachedCharacterStateInfo; // 0xd30(0x08)
	char pad_D38[0x3d0]; // 0xd38(0x3d0)
	struct UClothSitComponent* ClothSitComponent; // 0x1108(0x08)
	char pad_1110[0x140]; // 0x1110(0x140)
	float DefaultMaxHeight; // 0x1250(0x04)
	char pad_1254[0x40c]; // 0x1254(0x40c)

	void StartSettingTargetableByAiState(bool bTargetable, enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.Base_Character.StartSettingTargetableByAiState // (Final|Native|Public|BlueprintCallable) // @ game+0x31ffc70
	void StartSettingMaxHeightValue(float bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.Base_Character.StartSettingMaxHeightValue // (Final|Native|Public|BlueprintCallable) // @ game+0x31ffb50
	void StartSettingMaxHeightEnabledValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.Base_Character.StartSettingMaxHeightEnabledValue // (Final|Native|Public|BlueprintCallable) // @ game+0x31ffa40
	void StartSettingLODOverride(int32_t LODOverride, struct UObject* Provider); // Function Phoenix.Base_Character.StartSettingLODOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff970
	void RunEQS_FindStations(enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.Base_Character.RunEQS_FindStations // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x31fe950
	void RunEQS_FindSocialReasonings(enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.Base_Character.RunEQS_FindSocialReasonings // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x31fe860
	void ReRegisterWithSignificanceManager(); // Function Phoenix.Base_Character.ReRegisterWithSignificanceManager // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd790
	void ReleaseFocusFromScriptedBehavior(struct FName InIdentifyingName); // Function Phoenix.Base_Character.ReleaseFocusFromScriptedBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x31fe7d0
	void PlayerSighted(); // Function Phoenix.Base_Character.PlayerSighted // (Native|Event|Public|BlueprintEvent) // @ game+0x31fd770
	bool Nevermind(); // Function Phoenix.Base_Character.Nevermind // (Native|Event|Public|BlueprintEvent) // @ game+0x31fd680
	bool IsTargetableByAi(); // Function Phoenix.Base_Character.IsTargetableByAi // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd650
	bool Goodbye(); // Function Phoenix.Base_Character.Goodbye // (Native|Event|Public|BlueprintEvent) // @ game+0x31fd590
	struct ASocialReasoning* GetSocialReasoning(); // Function Phoenix.Base_Character.GetSocialReasoning // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd4f0
	struct UObjectStateInfo* GetObjectStateInfo(); // Function Phoenix.Base_Character.GetObjectStateInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd120
	struct UCharacterStateInfo* GetCharacterStateInfo(); // Function Phoenix.Base_Character.GetCharacterStateInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd120
	void FinishSettingTargetableByAiState(enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.Base_Character.FinishSettingTargetableByAiState // (Final|Native|Public|BlueprintCallable) // @ game+0x31fccd0
	void FinishSettingMaxHeightValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.Base_Character.FinishSettingMaxHeightValue // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcc00
	void FinishSettingMaxHeightEnabledValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.Base_Character.FinishSettingMaxHeightEnabledValue // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcb30
	void FinishSettingLODOverride(struct UObject* Provider); // Function Phoenix.Base_Character.FinishSettingLODOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcaa0
	void ExcuseMe(); // Function Phoenix.Base_Character.ExcuseMe // (Native|Event|Public|BlueprintEvent) // @ game+0x31fca80
	void DisableCcd(); // Function Phoenix.Base_Character.DisableCcd // (Final|Native|Public) // @ game+0x31fca60
	void ConverseWithProxy(struct FSocialResponse& SocialResponse); // Function Phoenix.Base_Character.ConverseWithProxy // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x31fc970
	void Converse(struct FSocialResponse& SocialResponse); // Function Phoenix.Base_Character.Converse // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x31fc880
	void Chat(); // Function Phoenix.Base_Character.Chat // (Native|Event|Public|BlueprintEvent) // @ game+0x31fc860
	void CaptureFocusForScriptedBehavior(struct FName InIdentifyingName); // Function Phoenix.Base_Character.CaptureFocusForScriptedBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x31fc7d0
};

// Class Phoenix.Base_Character_Interface
// Size: 0x28 (Inherited: 0x28)
struct UBase_Character_Interface : UInterface {

	void OnUnFreeze(); // Function Phoenix.Base_Character_Interface.OnUnFreeze // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnResetFullRagdoll(); // Function Phoenix.Base_Character_Interface.OnResetFullRagdoll // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnFreeze(); // Function Phoenix.Base_Character_Interface.OnFreeze // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEnableFullRagdoll(); // Function Phoenix.Base_Character_Interface.OnEnableFullRagdoll // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnAboutToDie(); // Function Phoenix.Base_Character_Interface.OnAboutToDie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PhoenixBudgetedActor
// Size: 0x268 (Inherited: 0x248)
struct APhoenixBudgetedActor : AActor {
	char pad_248[0x18]; // 0x248(0x18)
	enum class ESignificanceBiasEnum DefaultSignificanceBias; // 0x260(0x01)
	bool bAllowRegistrationWithSignificanceManager; // 0x261(0x01)
	bool bAllowRegistrationWithLODBudgeter; // 0x262(0x01)
	bool bAllowRegistrationWithClothBudgeter; // 0x263(0x01)
	char pad_264[0x4]; // 0x264(0x04)
};

// Class Phoenix.BaseDestructibleArmor
// Size: 0x268 (Inherited: 0x268)
struct ABaseDestructibleArmor : APhoenixBudgetedActor {

	void HandlePeeves(struct AActor* Other); // Function Phoenix.BaseDestructibleArmor.HandlePeeves // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd5c0
};

// Class Phoenix.TestStateComponent
// Size: 0x398 (Inherited: 0xc8)
struct UTestStateComponent : UActorComponent {
	struct FObjectStateData ObjectStateData; // 0xc8(0x98)
	struct FRepairData RepairData; // 0x160(0x238)
};

// Class Phoenix.BaseStateComponent
// Size: 0x5a0 (Inherited: 0xc8)
struct UBaseStateComponent : UActorComponent {
	struct UMaterialPropertyData* MaterialPropertyData; // 0xc8(0x08)
	bool bOverrideMaterialProperties; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct FMaterialPropertyOverrideData MaterialPropertyOverrideData; // 0xd8(0xb0)
	struct FRepairData RepairData; // 0x188(0x238)
	struct AActor* OverrideRepairLocation; // 0x3c0(0x08)
	struct TMap<enum class EMarkupType, float> MarkupMap; // 0x3c8(0x50)
	struct FGameplayTagContainer ImmunityTagContainer; // 0x418(0x20)
	struct FGameplayTagContainer ImmuneUnlessCriticalTagContainer; // 0x438(0x20)
	bool bImmuneToEverythingExcept; // 0x458(0x01)
	char pad_459[0x7]; // 0x459(0x07)
	struct FGameplayTagContainer ImmuneToEverythingExceptTagContainer; // 0x460(0x20)
	struct FSpawnSelectInfo m_DbIdInfo; // 0x480(0x80)
	char pad_500[0x80]; // 0x500(0x80)
	struct TArray<struct FDynamicNavComponentInfo> DynamicNavigationComponentNames; // 0x580(0x10)
	char pad_590[0x10]; // 0x590(0x10)

	void SetRepairBaseMesh(struct UStaticMesh* Mesh); // Function Phoenix.BaseStateComponent.SetRepairBaseMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff650
	void SetDestructibleGeometryCollection(struct UGeometryCollection* GeometryCollection); // Function Phoenix.BaseStateComponent.SetDestructibleGeometryCollection // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff260
	struct UStaticMesh* GetRepairBaseMesh(); // Function Phoenix.BaseStateComponent.GetRepairBaseMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd4b0
	void AddMarkup(enum class EMarkupType i_Markup, float i_Value); // Function Phoenix.BaseStateComponent.AddMarkup // (Final|Native|Public|BlueprintCallable) // @ game+0x31fc6f0
};

// Class Phoenix.BeaconableObject
// Size: 0x28 (Inherited: 0x28)
struct UBeaconableObject : UInterface {

	struct FName GetUniqueBeaconId(); // Function Phoenix.BeaconableObject.GetUniqueBeaconId // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31fd550
};

// Class Phoenix.BeaconLocation
// Size: 0x418 (Inherited: 0x248)
struct ABeaconLocation : ATargetPoint {
	struct FVector HUDMarkerOffset; // 0x248(0x0c)
	char pad_254[0x4]; // 0x254(0x04)
	struct FDbDoubleColumnInfo ItemInfo; // 0x258(0xd8)
	struct FString BeaconID; // 0x330(0x10)
	struct FString BeaconName; // 0x340(0x10)
	struct FName BeaconableObjectID; // 0x350(0x08)
	enum class EBeaconType BeaconType; // 0x358(0x01)
	char pad_359[0x7]; // 0x359(0x07)
	struct FDbSingleColumnInfo BeaconIcon; // 0x360(0x88)
	struct FString DescriptionShort; // 0x3e8(0x10)
	uint32_t ActivationDistance; // 0x3f8(0x04)
	uint32_t EnterExitDistance; // 0x3fc(0x04)
	enum class EBeaconDisplayPriority BeaconPriority; // 0x400(0x01)
	bool bMakeDynamic; // 0x401(0x01)
	bool bHideWhenInactive; // 0x402(0x01)
	bool bShowInWorld; // 0x403(0x01)
	bool bStartInactive; // 0x404(0x01)
	bool bIsSaveLocation; // 0x405(0x01)
	bool bDrawDebug; // 0x406(0x01)
	char pad_407[0x1]; // 0x407(0x01)
	struct TWeakObjectPtr<struct AActor> ParentObject; // 0x408(0x08)
	char pad_410[0x8]; // 0x410(0x08)

	void SetStartInactive(bool inStartInactive); // Function Phoenix.BeaconLocation.SetStartInactive // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff770
	void SetShowInWorld(bool inShowInWorld); // Function Phoenix.BeaconLocation.SetShowInWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff6e0
	void SetParentObject(struct AActor* inParentObject); // Function Phoenix.BeaconLocation.SetParentObject // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff5c0
	void SetMakeDynamic(bool inMakeDynamic); // Function Phoenix.BeaconLocation.SetMakeDynamic // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff530
	void SetIsSaveLocation(bool isSaveLocation); // Function Phoenix.BeaconLocation.SetIsSaveLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff4a0
	void SetHudIconSuppressed(bool bInHudIconSuppressed); // Function Phoenix.BeaconLocation.SetHudIconSuppressed // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff410
	void SetHideWhenInactive(bool inHideWhenInactive); // Function Phoenix.BeaconLocation.SetHideWhenInactive // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff380
	void SetEnterExitDistance(int32_t InDistance); // Function Phoenix.BeaconLocation.SetEnterExitDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff2f0
	void SetDescriptionShort(struct FString inNewShortDesc); // Function Phoenix.BeaconLocation.SetDescriptionShort // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff150
	void SetBeaconType(enum class EBeaconType inBeaconType); // Function Phoenix.BeaconLocation.SetBeaconType // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff040
	void SetBeaconPriority(enum class EBeaconDisplayPriority InPriority); // Function Phoenix.BeaconLocation.SetBeaconPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x31fec50
	void SetBeaconName(struct FString inNewBeaconName); // Function Phoenix.BeaconLocation.SetBeaconName // (Final|Native|Public|BlueprintCallable) // @ game+0x31feb60
	void SetBeaconDebug(bool inDoDebug); // Function Phoenix.BeaconLocation.SetBeaconDebug // (Final|Native|Public|BlueprintCallable) // @ game+0x31fead0
	void SetBeaconableObjectID(struct FName inNewID); // Function Phoenix.BeaconLocation.SetBeaconableObjectID // (Final|Native|Public|BlueprintCallable) // @ game+0x31ff0c0
	void SetActivationDistance(int32_t InDistance); // Function Phoenix.BeaconLocation.SetActivationDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x31fea40
	bool GetStartInactive(); // Function Phoenix.BeaconLocation.GetStartInactive // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd530
	bool GetShowInWorld(); // Function Phoenix.BeaconLocation.GetShowInWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd4d0
	bool GetMakeDynamic(); // Function Phoenix.BeaconLocation.GetMakeDynamic // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd490
	bool GetIsSaveLocation(); // Function Phoenix.BeaconLocation.GetIsSaveLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd470
	bool GetHideWhenInactive(); // Function Phoenix.BeaconLocation.GetHideWhenInactive // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd450
	int32_t GetEnterExitDistance(); // Function Phoenix.BeaconLocation.GetEnterExitDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd430
	bool GetDrawDebug(); // Function Phoenix.BeaconLocation.GetDrawDebug // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd200
	struct FString GetDescriptionShort(); // Function Phoenix.BeaconLocation.GetDescriptionShort // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd140
	enum class EBeaconType GetBeaconType(); // Function Phoenix.BeaconLocation.GetBeaconType // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd0e0
	enum class EBeaconDisplayPriority GetBeaconPriority(); // Function Phoenix.BeaconLocation.GetBeaconPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd0c0
	struct FString GetBeaconName(); // Function Phoenix.BeaconLocation.GetBeaconName // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd000
	struct FString GetBeaconID(); // Function Phoenix.BeaconLocation.GetBeaconID // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcee0
	struct FDbSingleColumnInfo GetBeaconIcon(); // Function Phoenix.BeaconLocation.GetBeaconIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcfa0
	int32_t GetBeaconHandle(); // Function Phoenix.BeaconLocation.GetBeaconHandle // (Final|Native|Public|BlueprintCallable) // @ game+0x31fceb0
	struct FName GetBeaconableObjectID(); // Function Phoenix.BeaconLocation.GetBeaconableObjectID // (Final|Native|Public|BlueprintCallable) // @ game+0x31fd100
	int32_t GetActivationDistance(); // Function Phoenix.BeaconLocation.GetActivationDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x31fcdf0
};

// Class Phoenix.BeaconInfo
// Size: 0x1d0 (Inherited: 0x28)
struct UBeaconInfo : UObject {
	enum class EBeaconType BeaconType; // 0x28(0x01)
	enum class EBeaconSubType BeaconSubType; // 0x29(0x01)
	enum class EBeaconType LastBeaconType; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
	struct FString BeaconName; // 0x30(0x10)
	struct FString BeaconLocName; // 0x40(0x10)
	struct FString BeaconIcon; // 0x50(0x10)
	struct FString FastTravelLocationID; // 0x60(0x10)
	struct FString BeaconID; // 0x70(0x10)
	struct FName BeaconWorld; // 0x80(0x08)
	struct FName SanctuarySubworld; // 0x88(0x08)
	struct FName BeaconOwnerLocationID; // 0x90(0x08)
	struct FString DescriptionShort; // 0x98(0x10)
	struct FVector BeaconWorldPosition; // 0xa8(0x0c)
	char pad_B4[0x1c]; // 0xb4(0x1c)
	struct TWeakObjectPtr<struct AActor> DynamicBeaconObject; // 0xd0(0x08)
	struct TWeakObjectPtr<struct AActor> ParentActor; // 0xd8(0x08)
	struct TWeakObjectPtr<struct UScheduledEntity> DynamicBeaconScheduledEntity; // 0xe0(0x08)
	uint32_t BeaconHandle; // 0xe8(0x04)
	uint32_t ActivationDistance; // 0xec(0x04)
	uint32_t EnterExitDistance; // 0xf0(0x04)
	char DisplayPriority; // 0xf4(0x01)
	bool bIsBeaconActive; // 0xf5(0x01)
	char BeaconFlags; // 0xf6(0x01)
	char pad_F7[0x1]; // 0xf7(0x01)
	float BeaconScale; // 0xf8(0x04)
	bool bHudIconSuppressed; // 0xfc(0x01)
	bool bHasTracedInGameWorld; // 0xfd(0x01)
	char pad_FE[0x32]; // 0xfe(0x32)
	uint32_t BeaconRuntimeFlags; // 0x130(0x04)
	bool InEnterExitZone; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
	int32_t LastTransitionListIndex; // 0x138(0x04)
	enum class EBeaconState BeaconState; // 0x13c(0x01)
	char pad_13D[0x7]; // 0x13d(0x07)
	struct FBeaconDistanceRule BeaconDistanceRules[0x3]; // 0x144(0x48)
	char pad_18C[0x44]; // 0x18c(0x44)

	void SetupChestBeacon(struct FString pBeaconName, struct FVector pLocation, struct AActor* pParentActor); // Function Phoenix.BeaconInfo.SetupChestBeacon // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x31ff800
};

// Class Phoenix.BeaconManager
// Size: 0x240 (Inherited: 0x28)
struct UBeaconManager : UObject {
	char pad_28[0xb8]; // 0x28(0xb8)
	struct TArray<struct UBeaconInfo*> BeaconObjects; // 0xe0(0x10)
	struct TMap<int32_t, struct UBeaconInfo*> BeaconObjectsMap; // 0xf0(0x50)
	struct TArray<struct UBeaconInfo*> DynamicBeaconObjects; // 0x140(0x10)
	struct TArray<struct UBeaconInfo*> StaticBeaconObjectsWithWorldName; // 0x150(0x10)
	struct TArray<struct UBeaconInfo*> DiscoverableObjects; // 0x160(0x10)
	struct TArray<struct UBeaconInfo*> EnterExitObjects; // 0x170(0x10)
	struct TArray<struct UBeaconInfo*> HudBeaconObjects; // 0x180(0x10)
	struct TArray<struct UBeaconInfo*> CurrentProximityHudBeacons; // 0x190(0x10)
	struct TArray<struct UBeaconInfo*> WorldTransitionProxies; // 0x1a0(0x10)
	struct TArray<struct UBeaconInfo*> BroomRevelioHUDBeacons; // 0x1b0(0x10)
	char pad_1C0[0x80]; // 0x1c0(0x80)

	void UpdateExpansionTentPlayer(struct FVector teleportPosition); // Function Phoenix.BeaconManager.UpdateExpansionTentPlayer // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x31ffe10
	void UnRegisterBeaconByHandleBP(int64_t ObjectHandle); // Function Phoenix.BeaconManager.UnRegisterBeaconByHandleBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31ffd80
	void SetBeaconStateByName(enum class EBeaconType BeaconType, struct FString BeaconName, bool ActiveState); // Function Phoenix.BeaconManager.SetBeaconStateByName // (Final|Native|Public|BlueprintCallable) // @ game+0x31feec0
	void SetBeaconStateBP(int32_t ObjectHandle, enum class EBeaconState BeaconState); // Function Phoenix.BeaconManager.SetBeaconStateBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31fede0
	void SetBeaconRangesByHandle(int32_t ObjectHandle, int32_t InActivationDist, int32_t InEnterExitDist); // Function Phoenix.BeaconManager.SetBeaconRangesByHandle // (Final|Native|Public|BlueprintCallable) // @ game+0x31fecd0
	int64_t RegisterStaticBeaconBP(enum class EBeaconType BeaconType, struct FString BeaconName, struct FString BeaconIcon, struct FName& BeaconWorld, struct FVector BeaconPos, bool ShowOnHUD, bool ShowDistanceOnHud, struct FName BeaconableId); // Function Phoenix.BeaconManager.RegisterStaticBeaconBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31fe440
	void RegisterSanctuaryExit(struct FString SanctuaryWorldName); // Function Phoenix.BeaconManager.RegisterSanctuaryExit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31fe360
	void RegisterExpansionTent(struct FString tentID, struct FVector Position, bool bIsEntrance); // Function Phoenix.BeaconManager.RegisterExpansionTent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31fe1f0
	int64_t RegisterDynamicBeaconScheduledEntityBP(enum class EBeaconType BeaconType, struct FString BeaconName, struct FString BeaconIcon, struct FName& BeaconWorld, struct FVector BeaconPos, struct UScheduledEntity* NewBeaconScheduledEntity, bool ShowOnHUD, bool ShowDistanceOnHud); // Function Phoenix.BeaconManager.RegisterDynamicBeaconScheduledEntityBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31fde50
	int64_t RegisterDynamicBeaconObjectBP(enum class EBeaconType BeaconType, struct FString BeaconName, struct FString BeaconIcon, struct FName& BeaconWorld, struct FVector BeaconPos, struct AActor* NewBeaconObject, bool ShowOnHUD, bool ShowDistanceOnHud); // Function Phoenix.BeaconManager.RegisterDynamicBeaconObjectBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x31fdab0
	void RegisterDungeonExit(struct FVector Position, struct FName UID, bool Disable); // Function Phoenix.BeaconManager.RegisterDungeonExit // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31fd9a0
	void RegisterDungeonEntrance(struct FString DungeonName, struct FVector Position, float ZRot, struct FVector BeaconPosition, int32_t EntranceIndex); // Function Phoenix.BeaconManager.RegisterDungeonEntrance // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x31fd7b0
	void OnSaveGameLoaded(); // Function Phoenix.BeaconManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x31fd6b0
	void OnRevelioStart(float RevelioViewMeters); // Function Phoenix.BeaconManager.OnRevelioStart // (Final|Native|Public) // @ game+0x31fd6f0
	void OnRevelioEnd(); // Function Phoenix.BeaconManager.OnRevelioEnd // (Final|Native|Public) // @ game+0x31fd6d0
	void OnNewGame(); // Function Phoenix.BeaconManager.OnNewGame // (Final|Native|Public) // @ game+0x31fd6b0
	void GetDungeonReqirementsByName(struct FString DungeonName, struct TArray<struct FText>& RequiredSpells, struct TArray<struct FText>& CompletionSpells); // Function Phoenix.BeaconManager.GetDungeonReqirementsByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x31fd220
	struct UBeaconInfo* GetBeaconByHandleBP(int32_t ObjectHandle); // Function Phoenix.BeaconManager.GetBeaconByHandleBP // (Final|Native|Public|BlueprintCallable) // @ game+0x31fce10
	struct UBeaconManager* Get(); // Function Phoenix.BeaconManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31fcda0
};

// Class Phoenix.BindSphereToMaterialComponent
// Size: 0x260 (Inherited: 0x220)
struct UBindSphereToMaterialComponent : USceneComponent {
	char pad_220[0x18]; // 0x220(0x18)
	struct AStaticMeshActor* SphereToUse; // 0x238(0x08)
	struct FName NameOfSphereComponent; // 0x240(0x08)
	struct FName MaterialParamForCenter; // 0x248(0x08)
	struct FName MaterialParamForRadius; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
};

// Class Phoenix.DynamicObjectVolume
// Size: 0x1668 (Inherited: 0x248)
struct ADynamicObjectVolume : ATargetPoint {
	struct FObjectVisualizationInfo VolumeVisualization; // 0x248(0x0c)
	char pad_254[0x4]; // 0x254(0x04)
	struct FText Description; // 0x258(0x18)
	bool bShowActivationDistances; // 0x270(0x01)
	bool bEnableAutoActivation; // 0x271(0x01)
	char pad_272[0x2]; // 0x272(0x02)
	float TriggerDistance; // 0x274(0x04)
	float CullDistance; // 0x278(0x04)
	float TriggerCullDiff; // 0x27c(0x04)
	bool bMaintainTriggerCullDistance; // 0x280(0x01)
	bool bAllowContinuousSpawning; // 0x281(0x01)
	char pad_282[0x2]; // 0x282(0x02)
	int32_t ContinuousMaxActorCount; // 0x284(0x04)
	int32_t ContinuousMinActorCount; // 0x288(0x04)
	int32_t ContinuousTotalActorCount; // 0x28c(0x04)
	float ContinuousMinSpawnDelay; // 0x290(0x04)
	float ContinuousMaxSpawnDelay; // 0x294(0x04)
	bool bEnableSpawning; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct FString ScheduleTableFilter; // 0x2a0(0x10)
	bool bUseDiscoveredSpawnLocations; // 0x2b0(0x01)
	bool bDisableCombat; // 0x2b1(0x01)
	char pad_2B2[0x2]; // 0x2b2(0x02)
	struct FPerPlatformInt MaxActivated; // 0x2b4(0x04)
	bool bSpawnWhenActivated; // 0x2b8(0x01)
	bool bCullWhenDeactivated; // 0x2b9(0x01)
	bool bFadeOutWhenCulled; // 0x2ba(0x01)
	bool bOnlySpawnOnce; // 0x2bb(0x01)
	bool bApplyDelayToFirstGroup; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	float GroupMinDelay; // 0x2c0(0x04)
	float GroupMaxDelay; // 0x2c4(0x04)
	struct FString DOVGUID; // 0x2c8(0x10)
	enum class EDynamicObjectVolumeSpawnDistributionType distributionType; // 0x2d8(0x01)
	bool bLimitUseToDiscoveredLocations; // 0x2d9(0x01)
	bool bForceDiscoveredLocsToDesiredType; // 0x2da(0x01)
	char pad_2DB[0x5]; // 0x2db(0x05)
	struct FDbSingleColumnInfo DesiredSpawnCategoryType; // 0x2e0(0x88)
	enum class EDynamicObjectVolumeDiscoveryType DiscoveryType; // 0x368(0x01)
	char pad_369[0x7]; // 0x369(0x07)
	struct FDbSingleColumnInfo NamedRestrictionID; // 0x370(0x88)
	struct FDbEditorButtonWidget DBNamedRestrictionsButton; // 0x3f8(0x80)
	bool bCheckRestrictionsWhileActivated; // 0x478(0x01)
	char pad_479[0x7]; // 0x479(0x07)
	struct FDbSingleColumnInfo MissionItemSwapID; // 0x480(0x88)
	struct FDbSingleColumnInfo AssociatedLocationID; // 0x508(0x88)
	bool bQuestRelevantPassthrough; // 0x590(0x01)
	char pad_591[0x7]; // 0x591(0x07)
	struct FString ScheduleColumnFilter; // 0x598(0x10)
	struct FString ScheduleSearchFilter; // 0x5a8(0x10)
	struct FString ScheduleFilter; // 0x5b8(0x10)
	struct FDbSingleColumnInfo ScheduleFilterSelection; // 0x5c8(0x88)
	struct FString WorldID; // 0x650(0x10)
	struct TArray<struct FDOVScheduleData> CurrentSchedule; // 0x660(0x10)
	bool bOverrideWorldID; // 0x670(0x01)
	char pad_671[0x7]; // 0x671(0x07)
	struct FEnemy_CharacterParams EnemySpawnParams; // 0x678(0x490)
	bool bChangeSpawnedEnemyTeam; // 0xb08(0x01)
	char pad_B09[0x3]; // 0xb09(0x03)
	struct FName SpawnedEnemyTeamName; // 0xb0c(0x08)
	struct FGameplayTag OverrideGroupTag; // 0xb14(0x08)
	bool bUseAttackTicketOverride; // 0xb1c(0x01)
	char pad_B1D[0x3]; // 0xb1d(0x03)
	struct FDbSingleColumnInfo AttackTicketOverride; // 0xb20(0x88)
	struct FDbSingleColumnInfo LootGroupOverride; // 0xba8(0x88)
	struct FDbSingleColumnInfo WorldRegionLevelOverride; // 0xc30(0x88)
	struct FDbSingleColumnInfo WorldAdjustmentLevelOverride; // 0xcb8(0x88)
	struct FCreatureSpawnOverrides CreatureSpawnOverrides; // 0xd40(0x80)
	int32_t InventoryObjectUnitCount; // 0xdc0(0x04)
	enum class ESpawnVolumeType SpawnVolumeType; // 0xdc4(0x01)
	char pad_DC5[0x1]; // 0xdc5(0x01)
	bool bIsNotEncounter; // 0xdc6(0x01)
	bool bIsStaticSpawner; // 0xdc7(0x01)
	bool bDoAsyncDebugSpawning; // 0xdc8(0x01)
	bool bAllowIndexedSpawning; // 0xdc9(0x01)
	bool bGetRegionLevelOverrideFromLocation; // 0xdca(0x01)
	char pad_DCB[0x5]; // 0xdcb(0x05)
	struct TArray<struct FSpawnSelectInfo> ItemsToSpawn; // 0xdd0(0x10)
	struct TMap<struct FName, struct FDynamicObjectGroupInfo> SpawnGroups; // 0xde0(0x50)
	struct TArray<struct ADynamicObjectVolume*> LinkedDOVs; // 0xe30(0x10)
	int32_t ActivateLinksAt; // 0xe40(0x04)
	bool TriggerLinksOnStealth; // 0xe44(0x01)
	char pad_E45[0x3]; // 0xe45(0x03)
	struct FEncounterGroupInfo EncounterGroupInfo; // 0xe48(0x28)
	struct FDbEditorButtonWidget DBAccessButton; // 0xe70(0x80)
	struct FCustomButtonWidget SpawnerSearchButton; // 0xef0(0x30)
	struct UEncounterSpawnComponent* EncounterComponent; // 0xf20(0x08)
	bool bDestroyOnDeath; // 0xf28(0x01)
	bool bDissolveOnDeath; // 0xf29(0x01)
	bool bFadeOnDeath; // 0xf2a(0x01)
	bool bDoDeathCamOnLastDeath; // 0xf2b(0x01)
	bool bDoDeathCamBulletTime; // 0xf2c(0x01)
	char pad_F2D[0x3]; // 0xf2d(0x03)
	struct UPrimitiveComponent* VolumeComponent; // 0xf30(0x08)
	struct UManualNavigationInvokerComponent* NavInvokerComponent; // 0xf38(0x08)
	struct UMissionSpawnComponent* MissionComponent; // 0xf40(0x08)
	struct UOwnershipComponent* OwnershipComponent; // 0xf48(0x08)
	struct FMulticastInlineDelegate OnAllEnemiesDeadEvent; // 0xf50(0x10)
	char pad_F60[0x8]; // 0xf60(0x08)
	struct FMulticastInlineDelegate OnLinkedSequenceTriggeredEvent; // 0xf68(0x10)
	char pad_F78[0x8]; // 0xf78(0x08)
	struct FMulticastInlineDelegate OnContinuousSpawnTriggeredEvent; // 0xf80(0x10)
	struct FMulticastInlineDelegate OnAllEnemiesSpawned; // 0xf90(0x10)
	char pad_FA0[0x8]; // 0xfa0(0x08)
	struct FMulticastInlineDelegate OnSpawnVolumeActivated; // 0xfa8(0x10)
	struct FMulticastInlineDelegate OnSpawnVolumeDeactivated; // 0xfb8(0x10)
	struct FMulticastInlineDelegate OnActorSpawnedEvent; // 0xfc8(0x10)
	struct FMulticastInlineDelegate OnActorDiedEvent; // 0xfd8(0x10)
	struct FMulticastInlineDelegate OnFinishedSpawningEvent; // 0xfe8(0x10)
	struct FMulticastInlineDelegate OnScheduledEntityCreatedEvent; // 0xff8(0x10)
	struct FMulticastInlineDelegate OnActerSpawnInFinishedEvent; // 0x1008(0x10)
	struct UTextRenderComponent* DebugTextVisualizer; // 0x1018(0x08)
	char pad_1020[0xa]; // 0x1020(0x0a)
	bool isConstructed; // 0x102a(0x01)
	bool bFromNamedEncounter; // 0x102b(0x01)
	char pad_102C[0x63c]; // 0x102c(0x63c)

	void TerminateContinuousSpawning(); // Function Phoenix.DynamicObjectVolume.TerminateContinuousSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x32876c0
	void SetSpawnSequenceComplete(); // Function Phoenix.DynamicObjectVolume.SetSpawnSequenceComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x3287290
	void SetSpawnLocations(struct TArray<struct ASpawnLocation*> InSpawnLocations); // Function Phoenix.DynamicObjectVolume.SetSpawnLocations // (Final|Native|Public|BlueprintCallable) // @ game+0x32871a0
	void SetSpawnBoundsFromVectors(struct FVector& Min, struct FVector& Max); // Function Phoenix.DynamicObjectVolume.SetSpawnBoundsFromVectors // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32870c0
	void SetSpawnBounds(struct FBox& SpawnBounds); // Function Phoenix.DynamicObjectVolume.SetSpawnBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3287030
	void SetEnableSpawning(bool bSpawningEnabled, bool bCullActive); // Function Phoenix.DynamicObjectVolume.SetEnableSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x3286f60
	void SetAllowAutoActivation(bool bAllowAutoActivate); // Function Phoenix.DynamicObjectVolume.SetAllowAutoActivation // (Final|Native|Public|BlueprintCallable) // @ game+0x3286e40
	void ResetContinuousSpawning(); // Function Phoenix.DynamicObjectVolume.ResetContinuousSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x3286e20
	void OnFinishedSpawning(struct FName& GroupName); // Function Phoenix.DynamicObjectVolume.OnFinishedSpawning // (Final|Native|Public|HasOutParms) // @ game+0x3286ce0
	void OnActorSpawnPrep(struct FString SpawnGroup); // Function Phoenix.DynamicObjectVolume.OnActorSpawnPrep // (Final|Native|Public) // @ game+0x3286a30
	void OnActorSpawnInFinished(struct AActor* SpawnedActor); // Function Phoenix.DynamicObjectVolume.OnActorSpawnInFinished // (Final|Native|Public) // @ game+0x32869a0
	void OnActorSpawnFinished(struct AActor* SpawnedActor); // Function Phoenix.DynamicObjectVolume.OnActorSpawnFinished // (Final|Native|Public) // @ game+0x3286910
	void OnActorSpawnFinalize(struct AActor* SpawnedActor); // Function Phoenix.DynamicObjectVolume.OnActorSpawnFinalize // (Final|Native|Public) // @ game+0x3286880
	void OnActorSpawned(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.DynamicObjectVolume.OnActorSpawned // (Final|Native|Public|HasOutParms) // @ game+0x3286b20
	void OnActorDeadEvent(struct AActor* DeadActor); // Function Phoenix.DynamicObjectVolume.OnActorDeadEvent // (Final|Native|Public) // @ game+0x32867f0
	void ObjectLoaded(); // Function Phoenix.DynamicObjectVolume.ObjectLoaded // (Final|Native|Public) // @ game+0x32867b0
	void ObjectInfoComplete(struct FNPC_DbIdInfo InObjectIDs); // Function Phoenix.DynamicObjectVolume.ObjectInfoComplete // (Final|Native|Public) // @ game+0x32865f0
	bool IsSpawningEnabled(); // Function Phoenix.DynamicObjectVolume.IsSpawningEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3286450
	bool IsAutoActivationEnabled(); // Function Phoenix.DynamicObjectVolume.IsAutoActivationEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3286330
	void InitializeTags(struct FGameplayTagContainer InTagsToConsider); // Function Phoenix.DynamicObjectVolume.InitializeTags // (Final|Native|Public|BlueprintCallable) // @ game+0x3286250
	bool HasSpawned(); // Function Phoenix.DynamicObjectVolume.HasSpawned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3286220
	struct FVector GetVolumeExtents(); // Function Phoenix.DynamicObjectVolume.GetVolumeExtents // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32861e0
	struct FBox GetVolumeBounds(); // Function Phoenix.DynamicObjectVolume.GetVolumeBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3286190
	struct FBox GetSpawnBounds(); // Function Phoenix.DynamicObjectVolume.GetSpawnBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3286140
	int32_t GetSpawnActorCount(); // Function Phoenix.DynamicObjectVolume.GetSpawnActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x3286110
	int32_t GetObjectCount(); // Function Phoenix.DynamicObjectVolume.GetObjectCount // (Final|Native|Public|BlueprintCallable) // @ game+0x32860e0
	int32_t GetKillActorCount(); // Function Phoenix.DynamicObjectVolume.GetKillActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x32860b0
	void GetAllActiveInstances(struct TArray<struct AActor*>& OutInstances); // Function Phoenix.DynamicObjectVolume.GetAllActiveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3286000
	int32_t GetAliveActorCount(); // Function Phoenix.DynamicObjectVolume.GetAliveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x3285fd0
	bool GetActiveInstances(struct FString InSpawnGroup, struct TArray<struct AActor*>& OutInstances); // Function Phoenix.DynamicObjectVolume.GetActiveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3285e70
	int32_t GetActiveActorCount(); // Function Phoenix.DynamicObjectVolume.GetActiveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x3285e40
	void ForceSpawn(); // Function Phoenix.DynamicObjectVolume.ForceSpawn // (Final|Native|Public|BlueprintCallable) // @ game+0x3285dd0
	void ForceDeactivate(); // Function Phoenix.DynamicObjectVolume.ForceDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3285db0
	void ForceActivate(); // Function Phoenix.DynamicObjectVolume.ForceActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3285d90
	void EncounterDeactivate(); // Function Phoenix.DynamicObjectVolume.EncounterDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3285bc0
	void EncounterActivate(); // Function Phoenix.DynamicObjectVolume.EncounterActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3285ba0
	bool DoneSpawning(); // Function Phoenix.DynamicObjectVolume.DoneSpawning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3285b70
	void DestroySpawnedActor(struct AActor* actorToDestroy); // Function Phoenix.DynamicObjectVolume.DestroySpawnedActor // (Final|Native|Public) // @ game+0x3285a50
	void ContinuousSpawnDelayed(); // Function Phoenix.DynamicObjectVolume.ContinuousSpawnDelayed // (Final|Native|Protected) // @ game+0x3284eb0
	void ClearTeamShareVolumes(); // Function Phoenix.DynamicObjectVolume.ClearTeamShareVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284e90
	void ClearTargetExcludeVolumes(); // Function Phoenix.DynamicObjectVolume.ClearTargetExcludeVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284e70
	void ClearStayInVolumes(); // Function Phoenix.DynamicObjectVolume.ClearStayInVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284e50
	void ClearPerceiveVolumes(); // Function Phoenix.DynamicObjectVolume.ClearPerceiveVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284e30
	void ClearKillVolumes(); // Function Phoenix.DynamicObjectVolume.ClearKillVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284e10
	void ClearForcePerceiveVolumes(); // Function Phoenix.DynamicObjectVolume.ClearForcePerceiveVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284df0
	void ClearAliveVolumes(); // Function Phoenix.DynamicObjectVolume.ClearAliveVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x3284dd0
	void AttachEncompassingSpawners(struct FString ObjectName); // Function Phoenix.DynamicObjectVolume.AttachEncompassingSpawners // (Final|Native|Public) // @ game+0x3284ce0
	bool AllowLinkedEvent(); // Function Phoenix.DynamicObjectVolume.AllowLinkedEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3284cb0
	bool AllowAllDeadEvent(); // Function Phoenix.DynamicObjectVolume.AllowAllDeadEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3284c80
	void AddTeamShareVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddTeamShareVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284bf0
	void AddTargetExcludeVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddTargetExcludeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284b60
	void AddStayInVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddStayInVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284ad0
	void AddPerceiveVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddPerceiveVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284a40
	void AddKillVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddKillVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x32849b0
	void AddForcePerceiveVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddForcePerceiveVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284920
	void AddAliveVolume(struct APerceptionPointBox* InVolume); // Function Phoenix.DynamicObjectVolume.AddAliveVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3284890
};

// Class Phoenix.BiomeCreatureSpawner
// Size: 0x1670 (Inherited: 0x1668)
struct ABiomeCreatureSpawner : ADynamicObjectVolume {
	char pad_1668[0x8]; // 0x1668(0x08)
};

// Class Phoenix.Biped_AnimInstance
// Size: 0x980 (Inherited: 0x5e0)
struct UBiped_AnimInstance : UAmbulatory_AnimInstance {
	char pad_5E0[0x8]; // 0x5e0(0x08)
	enum class ESBlockedByWallAnimState BlockedByWallState; // 0x5e8(0x01)
	enum class EOpenDoorAnimState OpenDoorState; // 0x5e9(0x01)
	enum class EAttackState AttackState; // 0x5ea(0x01)
	enum class EParryState ParryState; // 0x5eb(0x01)
	enum class EParryState ParryStateNext; // 0x5ec(0x01)
	enum class EDodgeState DodgeState; // 0x5ed(0x01)
	enum class EStationState StationState; // 0x5ee(0x01)
	enum class EStationMode StationMode; // 0x5ef(0x01)
	enum class EFullBodyState FullBodyState; // 0x5f0(0x01)
	enum class EFullBodyState FullBodyStateLast; // 0x5f1(0x01)
	enum class EMobilityState MobilityTypeState; // 0x5f2(0x01)
	enum class EMobilityState MobilityTypeStateLast; // 0x5f3(0x01)
	enum class EHarvestState HarvestState; // 0x5f4(0x01)
	enum class EPartialBodyState PartialBodyState; // 0x5f5(0x01)
	char pad_5F6[0x2]; // 0x5f6(0x02)
	struct TMap<enum class ELeftArmPriority, enum class ELeftArmState> LeftArmStateMap; // 0x5f8(0x50)
	struct TMap<enum class ERightArmPriority, enum class ERightArmState> RightArmStateMap; // 0x648(0x50)
	int32_t LeftArmActiveCinematicCount; // 0x698(0x04)
	int32_t RightArmActiveCinematicCount; // 0x69c(0x04)
	struct TMap<enum class EHeadTrackingPriority, enum class EHeadTrackingState> HeadTrackingStateMap; // 0x6a0(0x50)
	struct TMap<enum class ECombatAdditivePriority, enum class ECombatAdditiveState> CombatAdditiveStateMap; // 0x6f0(0x50)
	enum class EAdditiveBodyState AdditiveBodyState; // 0x740(0x01)
	char pad_741[0x7]; // 0x741(0x07)
	struct UObject* CombatAdditiveAbility; // 0x748(0x08)
	bool IsInAir; // 0x750(0x01)
	bool IsCrouching; // 0x751(0x01)
	bool InLockOnMode; // 0x752(0x01)
	char pad_753[0x1]; // 0x753(0x01)
	float AmpedPercent; // 0x754(0x04)
	float InitialJumpAngle; // 0x758(0x04)
	char pad_75C[0x4]; // 0x75c(0x04)
	struct APickupTool* PickupTool; // 0x760(0x08)
	float PickupToolHeight; // 0x768(0x04)
	float PutdownToolHeight; // 0x76c(0x04)
	bool HoldingBucket; // 0x770(0x01)
	bool IsMultiHarvestPlot; // 0x771(0x01)
	char pad_772[0x2]; // 0x772(0x02)
	int32_t UseAimOffset; // 0x774(0x04)
	float AimOffsetYaw; // 0x778(0x04)
	float AimOffsetPitch; // 0x77c(0x04)
	float LastAimOffsetYaw; // 0x780(0x04)
	bool IsEquippingWand; // 0x784(0x01)
	bool IsWandEquipped; // 0x785(0x01)
	bool DoFullBodySpellIfInIdle; // 0x786(0x01)
	bool IsWandReady; // 0x787(0x01)
	bool bAdditiveTurnLeanActive; // 0x788(0x01)
	char pad_789[0x3]; // 0x789(0x03)
	float AdditiveLeanAngle; // 0x78c(0x04)
	struct FInventoryResult InventoryResult; // 0x790(0x88)
	struct FName FlooName; // 0x818(0x08)
	bool IsFlooUIFinished; // 0x820(0x01)
	bool IsFlooUICancelled; // 0x821(0x01)
	bool IsAdvanced; // 0x822(0x01)
	bool LoadFinished; // 0x823(0x01)
	bool TeleportFinished; // 0x824(0x01)
	bool BackAwayFromLedge; // 0x825(0x01)
	bool PlayBlockedByWallAnim; // 0x826(0x01)
	char pad_827[0x1]; // 0x827(0x01)
	struct FRotator LeftFootRotation; // 0x828(0x0c)
	struct FRotator RightFootRotation; // 0x834(0x0c)
	float LeftEffectorLoc; // 0x840(0x04)
	float RightEffectorLoc; // 0x844(0x04)
	struct FVector LeftJointLoc; // 0x848(0x0c)
	struct FVector RightJointLoc; // 0x854(0x0c)
	float HipsOffset; // 0x860(0x04)
	struct FVector GroundAcceleration; // 0x864(0x0c)
	struct FVector2D AdditiveReact; // 0x870(0x08)
	struct FEnemy_ParryTimeToImpactData ParryImpactData; // 0x878(0x30)
	struct FTargetedByMunition ProtegoTargetedByMuntion; // 0x8a8(0x30)
	char pad_8D8[0x10]; // 0x8d8(0x10)
	bool IsHoldingAttack; // 0x8e8(0x01)
	bool IsAbortingParry; // 0x8e9(0x01)
	bool IsAbortingAnim; // 0x8ea(0x01)
	bool bIsAnticipatingAttack; // 0x8eb(0x01)
	float AnticipationAngle; // 0x8ec(0x04)
	float ThrowDistance; // 0x8f0(0x04)
	float AngleToDesiredDirection; // 0x8f4(0x04)
	bool bFromLightDirectional; // 0x8f8(0x01)
	char pad_8F9[0x3]; // 0x8f9(0x03)
	float IdleTimeStamp; // 0x8fc(0x04)
	float CustomRootMotionMultiplier; // 0x900(0x04)
	char pad_904[0x4]; // 0x904(0x04)
	struct FMulticastInlineDelegate LeftArmStateChangedDelegate; // 0x908(0x10)
	struct FMulticastInlineDelegate RightArmStateChangedDelegate; // 0x918(0x10)
	struct FMulticastInlineDelegate CombatAdditiveStateChangedDelegate; // 0x928(0x10)
	struct TArray<struct AActor*> AttackingActorStack; // 0x938(0x10)
	struct TWeakObjectPtr<struct AActor> CurrentAttackingActor; // 0x948(0x08)
	char pad_950[0x30]; // 0x950(0x30)

	void StartSettingCinematicRightArmState(enum class ERightArmState InState, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.StartSettingCinematicRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203c40
	void StartSettingCinematicLeftArmState(enum class ELeftArmState InState, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.StartSettingCinematicLeftArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203b60
	void SetWandEquipped(bool WandEquipped); // Function Phoenix.Biped_AnimInstance.SetWandEquipped // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203990
	void SetUseAimOffset(bool InUseAimOffset); // Function Phoenix.Biped_AnimInstance.SetUseAimOffset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203900
	void SetStationState(enum class EStationState& InState); // Function Phoenix.Biped_AnimInstance.SetStationState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203860
	void SetStationMode(enum class EStationMode& InMode); // Function Phoenix.Biped_AnimInstance.SetStationMode // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32037c0
	void SetRightArmState(enum class ERightArmState InState, enum class ERightArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.SetRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32036b0
	void SetPickupTool(struct APickupTool* InPickupTool); // Function Phoenix.Biped_AnimInstance.SetPickupTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203620
	void SetPartialBodyState(enum class EPartialBodyState& InState); // Function Phoenix.Biped_AnimInstance.SetPartialBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203580
	void SetParryStateNext(enum class EParryState& InState); // Function Phoenix.Biped_AnimInstance.SetParryStateNext // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32034e0
	void SetParryState(enum class EParryState& InState); // Function Phoenix.Biped_AnimInstance.SetParryState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203440
	void SetMobilityStateLast(enum class EMobilityState& InState); // Function Phoenix.Biped_AnimInstance.SetMobilityStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32033a0
	void SetMobilityState(enum class EMobilityState& InState); // Function Phoenix.Biped_AnimInstance.SetMobilityState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203300
	void SetLeftArmState(enum class ELeftArmState InState, enum class ELeftArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.SetLeftArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32031f0
	void SetIsHoldingAttack(bool InHoldingAttack); // Function Phoenix.Biped_AnimInstance.SetIsHoldingAttack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203160
	void SetInventoryResult(struct FInventoryResult InInventoryResult); // Function Phoenix.Biped_AnimInstance.SetInventoryResult // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3203040
	void SetHeadTrackingState(enum class EHeadTrackingState InState, enum class EHeadTrackingPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.SetHeadTrackingState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202f30
	void SetHarvestState(enum class EHarvestState& InState); // Function Phoenix.Biped_AnimInstance.SetHarvestState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202e90
	void SetFullBodyStateLast(enum class EFullBodyState& InState); // Function Phoenix.Biped_AnimInstance.SetFullBodyStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202df0
	void SetFullBodyState(enum class EFullBodyState& InState); // Function Phoenix.Biped_AnimInstance.SetFullBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202d50
	void SetDodgeState(enum class EDodgeState& InState); // Function Phoenix.Biped_AnimInstance.SetDodgeState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202cb0
	void SetCombatAdditiveState(enum class ECombatAdditiveState InState, enum class ECombatAdditivePriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.SetCombatAdditiveState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202ba0
	void SetAttackState(enum class EAttackState& InState); // Function Phoenix.Biped_AnimInstance.SetAttackState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202b00
	void SetAmpedPercent(float InAmpedPercent); // Function Phoenix.Biped_AnimInstance.SetAmpedPercent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202a70
	void SetAdditiveBodyState(enum class EAdditiveBodyState& InState); // Function Phoenix.Biped_AnimInstance.SetAdditiveBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32029d0
	void SetAbortAnim(bool InAbortAnim); // Function Phoenix.Biped_AnimInstance.SetAbortAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202940
	void Set_DoFullBodySpellIfInIdle(bool bInDoFullBodySpellIfInIdle); // Function Phoenix.Biped_AnimInstance.Set_DoFullBodySpellIfInIdle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1a73e90
	void Set_AimOffsetYaw(float& InYaw); // Function Phoenix.Biped_AnimInstance.Set_AimOffsetYaw // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203ac0
	void Set_AimOffsetPitch(float& InPitch); // Function Phoenix.Biped_AnimInstance.Set_AimOffsetPitch // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3203a20
	void PushNewBasicMobilityMode(int32_t UniqueIDOverride, int32_t& UniqueId, enum class EBasicMobilityMode Mode); // Function Phoenix.Biped_AnimInstance.PushNewBasicMobilityMode // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3202820
	void PopBasicMobilityMode(int32_t UniqueId); // Function Phoenix.Biped_AnimInstance.PopBasicMobilityMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3202790
	void OnLeftArmStateChanged(enum class ELeftArmState InLeftArmState); // Function Phoenix.Biped_AnimInstance.OnLeftArmStateChanged // (Final|Native|Public) // @ game+0x3202710
	void OnCombatAdditiveStateChanged(enum class ECombatAdditiveState InCombatAdditiveState); // Function Phoenix.Biped_AnimInstance.OnCombatAdditiveStateChanged // (Final|Native|Public) // @ game+0x3202690
	void GetStationState(enum class EStationState& OutState); // Function Phoenix.Biped_AnimInstance.GetStationState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32024b0
	void GetStationMode(enum class EStationMode& OutMode); // Function Phoenix.Biped_AnimInstance.GetStationMode // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202410
	enum class ERightArmState GetRightArmState(enum class ERightArmPriority InPriority); // Function Phoenix.Biped_AnimInstance.GetRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202380
	struct APickupTool* GetPickupTool(); // Function Phoenix.Biped_AnimInstance.GetPickupTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3202350
	void GetPartialBodyState(enum class EPartialBodyState& OutState); // Function Phoenix.Biped_AnimInstance.GetPartialBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32022b0
	void GetParryStateNext(enum class EParryState& OutState); // Function Phoenix.Biped_AnimInstance.GetParryStateNext // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202210
	void GetParryState(enum class EParryState& OutState); // Function Phoenix.Biped_AnimInstance.GetParryState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202170
	int32_t GetNumberOfAttackingActors(); // Function Phoenix.Biped_AnimInstance.GetNumberOfAttackingActors // (Final|Native|Public|BlueprintCallable) // @ game+0x3202150
	void GetMobilityStateLast(enum class EMobilityState& OutState); // Function Phoenix.Biped_AnimInstance.GetMobilityStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32020b0
	void GetMobilityState(enum class EMobilityState& OutState); // Function Phoenix.Biped_AnimInstance.GetMobilityState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202010
	enum class ELeftArmState GetLeftArmState(); // Function Phoenix.Biped_AnimInstance.GetLeftArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3201fe0
	struct FInventoryResult GetInventoryResult(); // Function Phoenix.Biped_AnimInstance.GetInventoryResult // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3201ea0
	enum class EHeadTrackingState GetHeadTrackingState(); // Function Phoenix.Biped_AnimInstance.GetHeadTrackingState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3201e70
	void GetHarvestState(enum class EHarvestState& OutState); // Function Phoenix.Biped_AnimInstance.GetHarvestState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3201dd0
	void GetFullBodyStateLast(enum class EFullBodyState& OutState); // Function Phoenix.Biped_AnimInstance.GetFullBodyStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3201d30
	void GetFullBodyState(enum class EFullBodyState& OutState); // Function Phoenix.Biped_AnimInstance.GetFullBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3201c90
	struct AActor* GetFirstAttackingActorInStack(); // Function Phoenix.Biped_AnimInstance.GetFirstAttackingActorInStack // (Final|Native|Public|BlueprintCallable) // @ game+0x3201c50
	struct AActor* GetFirstAttackingActor(); // Function Phoenix.Biped_AnimInstance.GetFirstAttackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3201c10
	void GetDodgeState(enum class EDodgeState& OutState); // Function Phoenix.Biped_AnimInstance.GetDodgeState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3201b70
	enum class EBasicMobilityMode GetDefaultBasicMobilityMode(); // Function Phoenix.Biped_AnimInstance.GetDefaultBasicMobilityMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3201b30
	enum class EBasicMobilityMode GetCurrentBasicMobilityMode(); // Function Phoenix.Biped_AnimInstance.GetCurrentBasicMobilityMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3201af0
	void GetAttackState(enum class EAttackState& OutState); // Function Phoenix.Biped_AnimInstance.GetAttackState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3201a50
	void GetAdditiveBodyState(enum class EAdditiveBodyState& OutState); // Function Phoenix.Biped_AnimInstance.GetAdditiveBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32019b0
	bool GetAbortAnim(); // Function Phoenix.Biped_AnimInstance.GetAbortAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x3201980
	void Get_AimOffsetYaw(float& OutYaw); // Function Phoenix.Biped_AnimInstance.Get_AimOffsetYaw // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32025f0
	void Get_AimOffsetPitch(float& OutPitch); // Function Phoenix.Biped_AnimInstance.Get_AimOffsetPitch // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3202550
	void FullyResetBasicMobilityMode(); // Function Phoenix.Biped_AnimInstance.FullyResetBasicMobilityMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3201960
	void FinishSettingCinematicRightArmState(bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.FinishSettingCinematicRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1545f20
	void FinishSettingCinematicLeftArmState(bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance.FinishSettingCinematicLeftArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32018d0
	void ComputeAditiveReactDirection(struct AActor* InVictim, struct FVector& InTraceDirection); // Function Phoenix.Biped_AnimInstance.ComputeAditiveReactDirection // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x32017f0
};

// Class Phoenix.Biped_AnimInstance_Interface
// Size: 0x28 (Inherited: 0x28)
struct UBiped_AnimInstance_Interface : UInterface {

	void SetWandEquipped(bool WandEquipped); // Function Phoenix.Biped_AnimInstance_Interface.SetWandEquipped // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetUseAimOffset(bool InUseAimOffset); // Function Phoenix.Biped_AnimInstance_Interface.SetUseAimOffset // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetStationState(enum class EStationState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetStationState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetRightArmState(enum class ERightArmState InState, enum class ERightArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance_Interface.SetRightArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetRelaxWand(bool bInFlag); // Function Phoenix.Biped_AnimInstance_Interface.SetRelaxWand // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPickupTool(struct APickupTool* InPickupTool); // Function Phoenix.Biped_AnimInstance_Interface.SetPickupTool // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPartialBodyState(enum class EPartialBodyState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetPartialBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetParryStateNext(enum class EParryState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetParryStateNext // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetParryState(enum class EParryState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetParryState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetMobilityStateLast(enum class EMobilityState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetMobilityStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetMobilityState(enum class EMobilityState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetMobilityState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetLeftArmState(enum class ELeftArmState InState, enum class ELeftArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance_Interface.SetLeftArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIsHoldingAttack(bool InHoldingAttack); // Function Phoenix.Biped_AnimInstance_Interface.SetIsHoldingAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetInventoryResult(struct FInventoryResult InInventoryResult); // Function Phoenix.Biped_AnimInstance_Interface.SetInventoryResult // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetHeadTrackingState(enum class EHeadTrackingState InState, enum class EHeadTrackingPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance_Interface.SetHeadTrackingState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetHarvestState(enum class EHarvestState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetHarvestState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFullBodyStateLast(enum class EFullBodyState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetFullBodyStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFullBodyState(enum class EFullBodyState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetFullBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFireOnce(bool InFireOnce); // Function Phoenix.Biped_AnimInstance_Interface.SetFireOnce // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetDodgeState(enum class EDodgeState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetDodgeState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetCombatAdditiveState(enum class ECombatAdditiveState InState, enum class ECombatAdditivePriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_AnimInstance_Interface.SetCombatAdditiveState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetChannelSpellFlourish(bool InFlag); // Function Phoenix.Biped_AnimInstance_Interface.SetChannelSpellFlourish // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAttackState(enum class EAttackState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetAttackState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAmpedPercent(float InAmpedPercent); // Function Phoenix.Biped_AnimInstance_Interface.SetAmpedPercent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAdditiveBodyState(enum class EAdditiveBodyState& InState); // Function Phoenix.Biped_AnimInstance_Interface.SetAdditiveBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAbortAnim(bool InAbortAnim); // Function Phoenix.Biped_AnimInstance_Interface.SetAbortAnim // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Set_DoFullBodySpellIfInIdle(bool bInDoFullBodySpellIfInIdle); // Function Phoenix.Biped_AnimInstance_Interface.Set_DoFullBodySpellIfInIdle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Set_AimOffsetYaw(float& InYaw); // Function Phoenix.Biped_AnimInstance_Interface.Set_AimOffsetYaw // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Set_AimOffsetPitch(float& InPitch); // Function Phoenix.Biped_AnimInstance_Interface.Set_AimOffsetPitch // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetStationState(enum class EStationState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetStationState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class ERightArmState GetRightArmState(enum class ERightArmPriority InPriority); // Function Phoenix.Biped_AnimInstance_Interface.GetRightArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct APickupTool* GetPickupTool(); // Function Phoenix.Biped_AnimInstance_Interface.GetPickupTool // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetPartialBodyState(enum class EPartialBodyState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetPartialBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetParryStateNext(enum class EParryState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetParryStateNext // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetParryState(enum class EParryState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetParryState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetMobilityStateLast(enum class EMobilityState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetMobilityStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetMobilityState(enum class EMobilityState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetMobilityState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class ELeftArmState GetLeftArmState(); // Function Phoenix.Biped_AnimInstance_Interface.GetLeftArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FInventoryResult GetInventoryResult(); // Function Phoenix.Biped_AnimInstance_Interface.GetInventoryResult // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class EHeadTrackingState GetHeadTrackingState(); // Function Phoenix.Biped_AnimInstance_Interface.GetHeadTrackingState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetHarvestState(enum class EHarvestState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetHarvestState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetFullBodyStateLast(enum class EFullBodyState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetFullBodyStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetFullBodyState(enum class EFullBodyState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetFullBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetDodgeState(enum class EDodgeState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetDodgeState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetAttackState(enum class EAttackState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetAttackState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetAdditiveBodyState(enum class EAdditiveBodyState& OutState); // Function Phoenix.Biped_AnimInstance_Interface.GetAdditiveBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool GetAbortAnim(); // Function Phoenix.Biped_AnimInstance_Interface.GetAbortAnim // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	void Get_AimOffsetYaw(float& OutYaw); // Function Phoenix.Biped_AnimInstance_Interface.Get_AimOffsetYaw // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Get_AimOffsetPitch(float& OutPitch); // Function Phoenix.Biped_AnimInstance_Interface.Get_AimOffsetPitch // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ComputeAditiveReactDirection(struct AActor* InVictim, struct FVector& InTraceDirection); // Function Phoenix.Biped_AnimInstance_Interface.ComputeAditiveReactDirection // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ClearAttackState(); // Function Phoenix.Biped_AnimInstance_Interface.ClearAttackState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Biped_Character
// Size: 0x1a70 (Inherited: 0x1660)
struct ABiped_Character : ABase_Character {
	char pad_1660[0x8]; // 0x1660(0x08)
	struct UToolSetComponent* ToolSetComponent; // 0x1668(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSourceComponent; // 0x1670(0x08)
	struct UBTCustomComponent* BehaviorComp_Primary; // 0x1678(0x08)
	struct UBTCustomComponent* BehaviorComp_Secondary; // 0x1680(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x1688(0x08)
	struct UBipedStateComponent* ObjectStateComponent; // 0x1690(0x08)
	struct UContextFilterComponent* ContextFilterComponent; // 0x1698(0x08)
	struct URPGAbilityComponent* RPGAbilityComponent; // 0x16a0(0x08)
	struct UFacialComponent* FacialComponent; // 0x16a8(0x08)
	struct UAnimationComponent* AnimationComponent; // 0x16b0(0x08)
	float MAX_HEIGHT_FOR_CLIMB; // 0x16b8(0x04)
	float MAX_HEIGHT_FOR_HANG; // 0x16bc(0x04)
	float MAX_HEIGHT_FOR_JUMPWAIST; // 0x16c0(0x04)
	char pad_16C4[0x4]; // 0x16c4(0x04)
	struct AActor* ledgeActor; // 0x16c8(0x08)
	float CrouchCapsuleHalfHeight; // 0x16d0(0x04)
	float CrouchCapsuleRadius; // 0x16d4(0x04)
	float CrouchStartCapsuleBlendDuration; // 0x16d8(0x04)
	float CrouchEndCapsuleBlendDuration; // 0x16dc(0x04)
	enum class EParryState ParryState; // 0x16e0(0x01)
	char pad_16E1[0x7]; // 0x16e1(0x07)
	struct FMulticastInlineDelegate OnSpellCast; // 0x16e8(0x10)
	struct FMulticastInlineDelegate OnLumosStart; // 0x16f8(0x10)
	struct FMulticastInlineDelegate OnLumosEnd; // 0x1708(0x10)
	struct FMulticastInlineDelegate OnAccioStart; // 0x1718(0x10)
	struct FMulticastInlineDelegate OnAccioEnd; // 0x1728(0x10)
	struct FMulticastInlineDelegate OnProtegoStart; // 0x1738(0x10)
	struct FMulticastInlineDelegate OnProtegoEnd; // 0x1748(0x10)
	struct FMulticastInlineDelegate OnProtegoDeflected; // 0x1758(0x10)
	struct FMulticastInlineDelegate OnDisillusionmentStart; // 0x1768(0x10)
	struct FMulticastInlineDelegate OnDisillusionmentEnd; // 0x1778(0x10)
	struct FSpellLoadOutData SpellLoadOutData; // 0x1788(0x30)
	int32_t SpellCastHandle; // 0x17b8(0x04)
	char pad_17BC[0x4]; // 0x17bc(0x04)
	struct FGameplayProperty_Float DoubleItemAbilityDurationChanceModifier; // 0x17c0(0x90)
	struct FGameplayProperty_Float RefreshAllCooldownChanceModifier; // 0x1850(0x90)
	bool bIgnoreFallDamage; // 0x18e0(0x01)
	char pad_18E1[0x3]; // 0x18e1(0x03)
	float MaxAirHeight; // 0x18e4(0x04)
	float LastGroundHeight; // 0x18e8(0x04)
	char pad_18EC[0x4]; // 0x18ec(0x04)
	struct ABiped_Character* m_studentActorClassM; // 0x18f0(0x08)
	struct ABiped_Character* m_studentActorClassF; // 0x18f8(0x08)
	char pad_1900[0x170]; // 0x1900(0x170)

	void ZeroKinematicIntegratorLinearVelocity(); // Function Phoenix.Biped_Character.ZeroKinematicIntegratorLinearVelocity // (Final|Native|Public|BlueprintCallable) // @ game+0x3208460
	void ZeroKinematicIntegratorAngularVelocity(); // Function Phoenix.Biped_Character.ZeroKinematicIntegratorAngularVelocity // (Final|Native|Public|BlueprintCallable) // @ game+0x3208440
	void UnEquipWand(); // Function Phoenix.Biped_Character.UnEquipWand // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3208420
	void StartCrouching(struct UObject* Provider, enum class ETargetSpeedMode SpeedMode, enum class ETargetSpeedMode SpeedModifier); // Function Phoenix.Biped_Character.StartCrouching // (Native|Public|BlueprintCallable) // @ game+0x3208310
	void StairsStateHasChanged(enum class EStairsState InLastStairsState, enum class EStairsState InNewStairsState); // Function Phoenix.Biped_Character.StairsStateHasChanged // (Final|Native|Public) // @ game+0x3208240
	void SetTargetDirection(struct FVector i_targetDirection); // Function Phoenix.Biped_Character.SetTargetDirection // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32081b0
	void SetTargetDestination(struct FVector i_targetDestination); // Function Phoenix.Biped_Character.SetTargetDestination // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3208120
	void SetTargetComponent(struct UPrimitiveComponent* i_pTargetComponent); // Function Phoenix.Biped_Character.SetTargetComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x3208090
	void SetTargetBoneName(struct FName i_targetBoneName); // Function Phoenix.Biped_Character.SetTargetBoneName // (Final|Native|Public|BlueprintCallable) // @ game+0x3208000
	void SetSpellCastHandle(int32_t InSpellCastHandle); // Function Phoenix.Biped_Character.SetSpellCastHandle // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3207f70
	void SetSpell(int32_t Group, int32_t Index, struct USpellToolRecord* Spell); // Function Phoenix.Biped_Character.SetSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x3207e60
	void SetRightArmState(enum class ERightArmState InState, enum class ERightArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_Character.SetRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3207d50
	void SetRayCastActor(struct AActor* i_pRayCastActor); // Function Phoenix.Biped_Character.SetRayCastActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3207cc0
	void SetPickupTool(struct APickupTool* InPickupTool); // Function Phoenix.Biped_Character.SetPickupTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3207c30
	void SetPartialBodyState(enum class EPartialBodyState& InState); // Function Phoenix.Biped_Character.SetPartialBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3207b90
	void SetParryState(enum class EParryState& InState); // Function Phoenix.Biped_Character.SetParryState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3207af0
	void SetFullBodyStateLast(enum class EFullBodyState& InState); // Function Phoenix.Biped_Character.SetFullBodyStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3207a50
	void SetFullBodyState(enum class EFullBodyState& InState); // Function Phoenix.Biped_Character.SetFullBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32079b0
	void SetFinisherOptimalRatio(float OptimalRatio, enum class EDynamicForceFeedbackAction FeedbackAction); // Function Phoenix.Biped_Character.SetFinisherOptimalRatio // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32078e0
	void SetFinisher(int32_t Index, struct USpellToolRecord* Spell); // Function Phoenix.Biped_Character.SetFinisher // (Final|Native|Public|BlueprintCallable) // @ game+0x3207810
	void SetCombatReadyMode(bool Flag); // Function Phoenix.Biped_Character.SetCombatReadyMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3207780
	void SetAdditiveBodyState(enum class EAdditiveBodyState& InState); // Function Phoenix.Biped_Character.SetAdditiveBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32076e0
	struct FName ParkourJump(struct FName DefaultNode); // Function Phoenix.Biped_Character.ParkourJump // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3207640
	void OnSpellCast__DelegateSignature(struct AActor* Target, struct FVector Location, struct ASpellTool* Spell, struct FName SpellType, struct AMunitionType_Base* Munition); // DelegateFunction Phoenix.Biped_Character.OnSpellCast__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x38a7480
	void OnProtegoStart__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnProtegoStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnProtegoEnd__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnProtegoEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnProtegoDeflected__DelegateSignature(struct ASpellTool* Spell); // DelegateFunction Phoenix.Biped_Character.OnProtegoDeflected__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnLumosStart__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnLumosStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnLumosEnd__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnLumosEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnHoverDroneControlModeChanged(enum class EHoverDroneControlMode NewMode); // Function Phoenix.Biped_Character.OnHoverDroneControlModeChanged // (Final|Native|Public) // @ game+0x32075c0
	void OnEquippedChanged(struct ATool* ActivatedTool, struct ATool* DeactivatedTool); // Function Phoenix.Biped_Character.OnEquippedChanged // (Final|Native|Public) // @ game+0x32074f0
	void OnDisillusionmentStart__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnDisillusionmentStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnDisillusionmentEnd__DelegateSignature(); // DelegateFunction Phoenix.Biped_Character.OnDisillusionmentEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnAccioStart__DelegateSignature(struct AActor* Target, struct FVector Location); // DelegateFunction Phoenix.Biped_Character.OnAccioStart__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x38a7480
	void OnAccioEnd__DelegateSignature(struct AActor* Target); // DelegateFunction Phoenix.Biped_Character.OnAccioEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void Landed(struct FHitResult& Hit); // Function Phoenix.Biped_Character.Landed // (Final|Native|Public|HasOutParms) // @ game+0x3207410
	bool IsWandEquipped(); // Function Phoenix.Biped_Character.IsWandEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x32073e0
	bool IsDead(); // Function Phoenix.Biped_Character.IsDead // (Native|Event|Public|BlueprintEvent) // @ game+0x32073b0
	bool IsCurrentLedgeAnOverhang(); // Function Phoenix.Biped_Character.IsCurrentLedgeAnOverhang // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3207390
	bool IsBlockedByWall(); // Function Phoenix.Biped_Character.IsBlockedByWall // (Native|Public|BlueprintCallable) // @ game+0x3207360
	struct AWandTool* GetWand(); // Function Phoenix.Biped_Character.GetWand // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x3207330
	struct FVector GetToTargetDirection(); // Function Phoenix.Biped_Character.GetToTargetDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x32072e0
	struct FVector GetTargetDirection(); // Function Phoenix.Biped_Character.GetTargetDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3207290
	struct FVector GetTargetDestination(); // Function Phoenix.Biped_Character.GetTargetDestination // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x3207240
	struct UPrimitiveComponent* GetTargetComponent(); // Function Phoenix.Biped_Character.GetTargetComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3207200
	struct FName GetTargetBoneName(); // Function Phoenix.Biped_Character.GetTargetBoneName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32071c0
	bool GetSpellsByGroup(int32_t Group, struct TArray<struct USpellToolRecord*>& ToolRecordArray); // Function Phoenix.Biped_Character.GetSpellsByGroup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32070c0
	void GetSpellCastHandle(int32_t& OutSpellCastHandle); // Function Phoenix.Biped_Character.GetSpellCastHandle // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3207020
	struct USkeletalMeshComponent* GetSkeletalMesh(); // Function Phoenix.Biped_Character.GetSkeletalMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x3206ff0
	enum class ERightArmState GetRightArmState(enum class ERightArmPriority InPriority); // Function Phoenix.Biped_Character.GetRightArmState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206f60
	struct AActor* GetRayCastActor(); // Function Phoenix.Biped_Character.GetRayCastActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3206f20
	float GetPutdownToolHeight(); // Function Phoenix.Biped_Character.GetPutdownToolHeight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206ee0
	float GetPickupToolHeight(); // Function Phoenix.Biped_Character.GetPickupToolHeight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206ea0
	struct APickupTool* GetPickupTool(); // Function Phoenix.Biped_Character.GetPickupTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206e70
	void GetPartialBodyState(enum class EPartialBodyState& OutState); // Function Phoenix.Biped_Character.GetPartialBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206dd0
	void GetParryState(enum class EParryState& OutState); // Function Phoenix.Biped_Character.GetParryState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206d30
	struct FTransform GetOriginalLedgeTransform(); // Function Phoenix.Biped_Character.GetOriginalLedgeTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3206cf0
	struct AActor* GetLockedOnActor(); // Function Phoenix.Biped_Character.GetLockedOnActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206cc0
	struct FInventoryResult GetInventoryResult(); // Function Phoenix.Biped_Character.GetInventoryResult // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206b80
	struct AActor* GetHighlitActor(); // Function Phoenix.Biped_Character.GetHighlitActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206b50
	float GetHealth(); // Function Phoenix.Biped_Character.GetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x3206b20
	void GetFullBodyStateLast(enum class EFullBodyState& OutState); // Function Phoenix.Biped_Character.GetFullBodyStateLast // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206a80
	void GetFullBodyState(enum class EFullBodyState& OutState); // Function Phoenix.Biped_Character.GetFullBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32069e0
	bool GetFinishers(struct TArray<struct USpellToolRecord*>& ToolRecordArray); // Function Phoenix.Biped_Character.GetFinishers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3206920
	struct FName GetCharacterID(); // Function Phoenix.Biped_Character.GetCharacterID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32068e0
	struct AActor* GetBestLockOnActor(); // Function Phoenix.Biped_Character.GetBestLockOnActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32068b0
	struct AActor* GetBestAutoTargetActor(); // Function Phoenix.Biped_Character.GetBestAutoTargetActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206880
	struct FVector GetAutoTargetUpDirection(); // Function Phoenix.Biped_Character.GetAutoTargetUpDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3206830
	struct FVector GetAutoTargetFocusDirection(); // Function Phoenix.Biped_Character.GetAutoTargetFocusDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x32067e0
	void GetAdditiveBodyState(enum class EAdditiveBodyState& OutState); // Function Phoenix.Biped_Character.GetAdditiveBodyState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206740
	void FinishCrouching(struct UObject* Provider); // Function Phoenix.Biped_Character.FinishCrouching // (Final|Native|Public|BlueprintCallable) // @ game+0x32066b0
	void FacingTargetsListIsNowEmpty(enum class ETargetType LastTargetType, enum class ETargetID LastTargetID); // Function Phoenix.Biped_Character.FacingTargetsListIsNowEmpty // (Native|Public) // @ game+0x32065e0
	void FacingNotifyOfNewBestTarget(enum class ETargetType NewTargetType, enum class ETargetID NewTargetID); // Function Phoenix.Biped_Character.FacingNotifyOfNewBestTarget // (Native|Public) // @ game+0x3206510
	void EquipWand(); // Function Phoenix.Biped_Character.EquipWand // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32064f0
	void EnablePawnInteraction(bool bEnable); // Function Phoenix.Biped_Character.EnablePawnInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x3206460
	bool DetectFallIntoWater(); // Function Phoenix.Biped_Character.DetectFallIntoWater // (Final|Native|Public|BlueprintCallable) // @ game+0x3206430
	bool DetectDiveIntoWater(); // Function Phoenix.Biped_Character.DetectDiveIntoWater // (Final|Native|Public|BlueprintCallable) // @ game+0x3206400
	void ComputeAttack(struct AActor*& TargetActor); // Function Phoenix.Biped_Character.ComputeAttack // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206360
	float ComputeAngleToDesiredDirection(); // Function Phoenix.Biped_Character.ComputeAngleToDesiredDirection // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206320
	void ClimbLedgeStart(); // Function Phoenix.Biped_Character.ClimbLedgeStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3206300
	void ClimbLedgeEnd(); // Function Phoenix.Biped_Character.ClimbLedgeEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x32062e0
	void CleanUpFinisherSpell(); // Function Phoenix.Biped_Character.CleanUpFinisherSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32062c0
	bool CanLandOnLedge(); // Function Phoenix.Biped_Character.CanLandOnLedge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3206210
	void CancelCurrentSpell(bool RemoveDisillusionment); // Function Phoenix.Biped_Character.CancelCurrentSpell // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3206230
	void CalculateLedgePullUpState(enum class EClimbingLedgeState& OutState, enum class EJumpingType& OutType); // Function Phoenix.Biped_Character.CalculateLedgePullUpState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3206130
	void CalculateClimbingLedgeState(enum class EClimbingLedgeState& OutState, enum class EJumpingType& OutType); // Function Phoenix.Biped_Character.CalculateClimbingLedgeState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3206050
	bool AdjustHealth(float change, bool bDontKill); // Function Phoenix.Biped_Character.AdjustHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x3205f80
};

// Class Phoenix.Biped_Character_Interface
// Size: 0x28 (Inherited: 0x28)
struct UBiped_Character_Interface : UInterface {

	void UseInventoryItemByName(struct FName InventoryObjectID); // Function Phoenix.Biped_Character_Interface.UseInventoryItemByName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void UnLockOnToActor(); // Function Phoenix.Biped_Character_Interface.UnLockOnToActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void UnEquipWand(); // Function Phoenix.Biped_Character_Interface.UnEquipWand // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StopMove(); // Function Phoenix.Biped_Character_Interface.StopMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct APawn* SpawnStudent(struct ABiped_Character* StudentClass); // Function Phoenix.Biped_Character_Interface.SpawnStudent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AActor* SpawnLookAtTarget(struct AActor* SpawnActorClass); // Function Phoenix.Biped_Character_Interface.SpawnLookAtTarget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AActor* SpawnFaceTarget(struct AActor* SpawnActorClass); // Function Phoenix.Biped_Character_Interface.SpawnFaceTarget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetSpellCastHandle(int32_t InSpellCastHandle); // Function Phoenix.Biped_Character_Interface.SetSpellCastHandle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetRootMotionOffsets(struct FVector& TranslationOffset, struct FRotator& RotationOffset); // Function Phoenix.Biped_Character_Interface.SetRootMotionOffsets // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3212220
	void SetRootMotionOffset(); // Function Phoenix.Biped_Character_Interface.SetRootMotionOffset // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetRightArmState(enum class ERightArmState InState, enum class ERightArmPriority InPriority, bool bBroadcastChange); // Function Phoenix.Biped_Character_Interface.SetRightArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPickupTool(struct APickupTool* InPickupTool); // Function Phoenix.Biped_Character_Interface.SetPickupTool // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPhoenixCameraRotation(struct FRotator& DesiredRotation); // Function Phoenix.Biped_Character_Interface.SetPhoenixCameraRotation // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPhoenixCameraLookAt_TimeBased(struct FVector& LookAtPoint, float LookAtTime); // Function Phoenix.Biped_Character_Interface.SetPhoenixCameraLookAt_TimeBased // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPhoenixCameraLookAt_ActorAndTime(struct AActor* LookAtActor, float LookAtTime); // Function Phoenix.Biped_Character_Interface.SetPhoenixCameraLookAt_ActorAndTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPhoenixCameraLookAt_Actor(struct AActor* LookAtActor, float ScaleSpeed); // Function Phoenix.Biped_Character_Interface.SetPhoenixCameraLookAt_Actor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPhoenixCameraLookAt(struct FVector& LookAtPoint, float ScaleSpeed); // Function Phoenix.Biped_Character_Interface.SetPhoenixCameraLookAt // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPartialBodyState(enum class EPartialBodyState& InState); // Function Phoenix.Biped_Character_Interface.SetPartialBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetParryState(enum class EParryState& InState); // Function Phoenix.Biped_Character_Interface.SetParryState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFullBodyStateLast(enum class EFullBodyState& InState); // Function Phoenix.Biped_Character_Interface.SetFullBodyStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFullBodyState(enum class EFullBodyState& InState); // Function Phoenix.Biped_Character_Interface.SetFullBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFinisherOptimalRatio(float OptimalRatio, enum class EDynamicForceFeedbackAction FeedbackAction); // Function Phoenix.Biped_Character_Interface.SetFinisherOptimalRatio // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAdditiveBodyState(enum class EAdditiveBodyState& InState); // Function Phoenix.Biped_Character_Interface.SetAdditiveBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ResetPhoenixCameraRotation(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_Character_Interface.ResetPhoenixCameraRotation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RequestStick(float StickX, float StickY); // Function Phoenix.Biped_Character_Interface.RequestStick // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RequestMove(float StickX, float StickY, float DeltaTime, float& Speed, float& Direction, float& LookAtDirection); // Function Phoenix.Biped_Character_Interface.RequestMove // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ReleasePhoenixCameraLookAt(); // Function Phoenix.Biped_Character_Interface.ReleasePhoenixCameraLookAt // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ReadyModeStop(); // Function Phoenix.Biped_Character_Interface.ReadyModeStop // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ReadyModeStart(); // Function Phoenix.Biped_Character_Interface.ReadyModeStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool QuickActionInteract(); // Function Phoenix.Biped_Character_Interface.QuickActionInteract // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void PushDisableStack(struct FName_GameLogicVarInt32 StackName); // Function Phoenix.Biped_Character_Interface.PushDisableStack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool ProcessStick(float StickX, float StickY, float DeltaTime, struct UCurveFloat* DeadZoneCurve, struct UCurveFloat* SpeedCurve, struct UCurveFloat* SpeedGovernorCurve, float& WorldSpeed, struct FVector& WorldDirection, enum class ECustomInterpType InterpType, float InterpSpeed, float StickMagReductionDelayTimer); // Function Phoenix.Biped_Character_Interface.ProcessStick // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void PopDisableStack(struct FName_GameLogicVarInt32 StackName); // Function Phoenix.Biped_Character_Interface.PopDisableStack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void PauseMenuStart(); // Function Phoenix.Biped_Character_Interface.PauseMenuStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName ParkourJump(struct FName DefaultNode); // Function Phoenix.Biped_Character_Interface.ParkourJump // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void LockOnToActor(struct AActor* InLockOnActor); // Function Phoenix.Biped_Character_Interface.LockOnToActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void LockOnCamFlick(struct UStickFlickWatcherRecord* InStickFlickWatcherRecord); // Function Phoenix.Biped_Character_Interface.LockOnCamFlick // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void LockOnCameraMoving(bool bFlag); // Function Phoenix.Biped_Character_Interface.LockOnCameraMoving // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool IsInReadyMode(); // Function Phoenix.Biped_Character_Interface.IsInReadyMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool IsDead(); // Function Phoenix.Biped_Character_Interface.IsDead // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool InstaUseInventoryItem(); // Function Phoenix.Biped_Character_Interface.InstaUseInventoryItem // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool InLockOnMode(); // Function Phoenix.Biped_Character_Interface.InLockOnMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AWandTool* GetWand(); // Function Phoenix.Biped_Character_Interface.GetWand // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	struct FVector GetToTargetDirection(); // Function Phoenix.Biped_Character_Interface.GetToTargetDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320f3c0
	struct FVector GetTargetDirection(); // Function Phoenix.Biped_Character_Interface.GetTargetDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320f360
	struct FVector GetTargetDestination(); // Function Phoenix.Biped_Character_Interface.GetTargetDestination // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x320f320
	struct UPrimitiveComponent* GetTargetComponent(); // Function Phoenix.Biped_Character_Interface.GetTargetComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320f2f0
	struct FName GetTargetBoneName(); // Function Phoenix.Biped_Character_Interface.GetTargetBoneName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320f2b0
	void GetSpellCastHandle(int32_t& OutSpellCastHandle); // Function Phoenix.Biped_Character_Interface.GetSpellCastHandle // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct UCurveFloat* GetSpeedGovernorCurve(); // Function Phoenix.Biped_Character_Interface.GetSpeedGovernorCurve // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct UCurveFloat* GetSpeedCurve(bool& bIgnoreGovernor); // Function Phoenix.Biped_Character_Interface.GetSpeedCurve // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct USkeletalMeshComponent* GetSkeletalMesh(); // Function Phoenix.Biped_Character_Interface.GetSkeletalMesh // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	void GetRootMotionOffset(struct FVector& OutTranslationOffset); // Function Phoenix.Biped_Character_Interface.GetRootMotionOffset // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class ERightArmState GetRightArmState(enum class ERightArmPriority InPriority); // Function Phoenix.Biped_Character_Interface.GetRightArmState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	float GetPutdownToolHeight(); // Function Phoenix.Biped_Character_Interface.GetPutdownToolHeight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	float GetPickupToolHeight(); // Function Phoenix.Biped_Character_Interface.GetPickupToolHeight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct APickupTool* GetPickupTool(); // Function Phoenix.Biped_Character_Interface.GetPickupTool // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetPartialBodyState(enum class EPartialBodyState& OutState); // Function Phoenix.Biped_Character_Interface.GetPartialBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetParryState(enum class EParryState& OutState); // Function Phoenix.Biped_Character_Interface.GetParryState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FInventoryResult GetInventoryResult(); // Function Phoenix.Biped_Character_Interface.GetInventoryResult // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AActor* GetHighlitActor(); // Function Phoenix.Biped_Character_Interface.GetHighlitActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetFullBodyStateLast(enum class EFullBodyState& OutState); // Function Phoenix.Biped_Character_Interface.GetFullBodyStateLast // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GetFullBodyState(enum class EFullBodyState& OutState); // Function Phoenix.Biped_Character_Interface.GetFullBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FVector GetBestLockOnActor_WorldLocation(); // Function Phoenix.Biped_Character_Interface.GetBestLockOnActor_WorldLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FVector GetBestLockOnActor_ScreenLocation(); // Function Phoenix.Biped_Character_Interface.GetBestLockOnActor_ScreenLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AActor* GetBestLockOnActor(); // Function Phoenix.Biped_Character_Interface.GetBestLockOnActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FVector GetBestAutoTargetActor_WorldLocation(); // Function Phoenix.Biped_Character_Interface.GetBestAutoTargetActor_WorldLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct AActor* GetBestAutoTargetActor(); // Function Phoenix.Biped_Character_Interface.GetBestAutoTargetActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FVector GetAutoTargetUpDirection(); // Function Phoenix.Biped_Character_Interface.GetAutoTargetUpDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320e600
	struct FVector GetAutoTargetFocusDirection(); // Function Phoenix.Biped_Character_Interface.GetAutoTargetFocusDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320e5c0
	void GetAdditiveBodyState(enum class EAdditiveBodyState& OutState); // Function Phoenix.Biped_Character_Interface.GetAdditiveBodyState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void FullyResetPhoenixCamera(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_Character_Interface.FullyResetPhoenixCamera // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void FlooStart(); // Function Phoenix.Biped_Character_Interface.FlooStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EquipWand(); // Function Phoenix.Biped_Character_Interface.EquipWand // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ComputeReaction(struct FVector HitLocation, struct FVector TraceDirection, struct FString OverrideName, enum class EReactionState& ReactionState); // Function Phoenix.Biped_Character_Interface.ComputeReaction // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ComputeAttack(struct AActor*& TargetActor); // Function Phoenix.Biped_Character_Interface.ComputeAttack // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	float ComputeAngleToDesiredDirection(); // Function Phoenix.Biped_Character_Interface.ComputeAngleToDesiredDirection // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ClearStick(); // Function Phoenix.Biped_Character_Interface.ClearStick // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FVector CalculateLookAtDirection(); // Function Phoenix.Biped_Character_Interface.CalculateLookAtDirection // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void CalculateClimbingLedgeState(enum class EClimbingLedgeState& OutState, enum class EJumpingType& OutType); // Function Phoenix.Biped_Character_Interface.CalculateClimbingLedgeState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Biped_Interact_Interface
// Size: 0x28 (Inherited: 0x28)
struct UBiped_Interact_Interface : UInterface {

	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.Biped_Interact_Interface.Interact // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Biped_Lightweight
// Size: 0x1670 (Inherited: 0x1660)
struct ABiped_Lightweight : ABase_Character {
	struct UFacialComponent* FacialComponent; // 0x1658(0x08)
	struct UBipedStateComponent* ObjectStateComponent; // 0x1660(0x08)
};

// Class Phoenix.Biped_MovementComponent
// Size: 0x1040 (Inherited: 0xfa0)
struct UBiped_MovementComponent : UAmbulatory_MovementComponent {
	struct UPhysicsAsset* ClothCollisionPhysicsAsset; // 0xf98(0x08)
	bool bEnableStickyLedges; // 0xfa0(0x01)
	float MaxSpeedForStickyLedges; // 0xfa4(0x04)
	char pad_FAD[0x73]; // 0xfad(0x73)
	bool bAllowLanding; // 0x1020(0x01)
	char pad_1021[0x3]; // 0x1021(0x03)
	float DefaultWalkableFloorAngle; // 0x1024(0x04)
	float FallingWalkableFloorAngle; // 0x1028(0x04)
	float MaxFloorAngleForMovement; // 0x102c(0x04)
	struct TArray<struct USkeletalMeshComponent*> CollidingCloths; // 0x1030(0x10)
};

// Class Phoenix.Biped_Player
// Size: 0x3e50 (Inherited: 0x1a70)
struct ABiped_Player : ABiped_Character {
	char pad_1A70[0x18]; // 0x1a70(0x18)
	struct UConversationComponent* ConversationComponent; // 0x1a88(0x08)
	struct UCustomizableCharacterComponent* Customization; // 0x1a90(0x08)
	struct ASocialReasoning* PlayerSocialReasoning; // 0x1a98(0x08)
	char pad_1AA0[0x50]; // 0x1aa0(0x50)
	struct UToolSetComponent* InventoryToolSetComponent; // 0x1af0(0x08)
	bool bAllowFastWalk; // 0x1af8(0x01)
	char pad_1AF9[0x7]; // 0x1af9(0x07)
	struct UCurveFloat* WalkSlowModeSpeedCurve; // 0x1b00(0x08)
	struct UCurveFloat* WalkModeSpeedCurve; // 0x1b08(0x08)
	struct UCurveFloat* WalkOnlyModeSpeedCurve; // 0x1b10(0x08)
	struct UCurveFloat* WalkFastModeSpeedCurve; // 0x1b18(0x08)
	struct UCurveFloat* WalkFastOnlyModeSpeedCurve; // 0x1b20(0x08)
	struct UCurveFloat* JogModeSpeedCurve; // 0x1b28(0x08)
	struct UCurveFloat* JogOnlyModeSpeedCurve; // 0x1b30(0x08)
	struct UCurveFloat* SprintModeSpeedCurve; // 0x1b38(0x08)
	struct UCurveFloat* JogModeSpeedGovernorCurve; // 0x1b40(0x08)
	struct UObject* GryffindorMaleBedAbility; // 0x1b48(0x08)
	struct UObject* GryffindorFemaleBedAbility; // 0x1b50(0x08)
	struct UObject* RavenClawMaleBedAbility; // 0x1b58(0x08)
	struct UObject* RavenClawFemaleBedAbility; // 0x1b60(0x08)
	struct UObject* HufflePuffMaleBedAbility; // 0x1b68(0x08)
	struct UObject* HufflePuffFemaleBedAbility; // 0x1b70(0x08)
	struct UObject* SlytherinMaleBedAbility; // 0x1b78(0x08)
	struct UObject* SlytherinFemaleBedAbility; // 0x1b80(0x08)
	struct APlayer_AttackIndicator* AttackIndicatorActorClass; // 0x1b88(0x08)
	struct APlayer_AttackIndicator* AttackIndicatorActor; // 0x1b90(0x08)
	float InnerDeadZoneMin; // 0x1b98(0x04)
	float InnerDeadZoneMax; // 0x1b9c(0x04)
	float OuterDeadZone; // 0x1ba0(0x04)
	enum class EEdgeState EdgeState; // 0x1ba4(0x01)
	char pad_1BA5[0x3]; // 0x1ba5(0x03)
	struct FVector EdgeLocation; // 0x1ba8(0x0c)
	struct FVector EdgeNormal; // 0x1bb4(0x0c)
	float EdgeDistanceToGround; // 0x1bc0(0x04)
	float EdgeDistanceFromEdge; // 0x1bc4(0x04)
	struct FVector EdgeImpulse; // 0x1bc8(0x0c)
	char pad_1BD4[0x4]; // 0x1bd4(0x04)
	struct USplineComponent* SyncToSplineComponent; // 0x1bd8(0x08)
	float SyncToSplineDirection; // 0x1be0(0x04)
	float SyncToSplineDistance; // 0x1be4(0x04)
	struct UAblAbility* DefaultIdleAbility; // 0x1be8(0x08)
	int32_t MaxChompingCabbage; // 0x1bf0(0x04)
	int32_t MaxVenomousTentacula; // 0x1bf4(0x04)
	bool AllowPlayerCamContorlOnOtherActorCam; // 0x1bf8(0x01)
	bool InvertCameraPitchControl; // 0x1bf9(0x01)
	bool InvertCameraYawControl; // 0x1bfa(0x01)
	bool InvertMoveLeftRightControl; // 0x1bfb(0x01)
	bool InvertMoveForwardBackControl; // 0x1bfc(0x01)
	bool EnableFadeSystem; // 0x1bfd(0x01)
	char pad_1BFE[0x2]; // 0x1bfe(0x02)
	struct AFieldGuideHotSpot* PlayerInThisFieldGuideHotSpot; // 0x1c00(0x08)
	float FinisherDamage; // 0x1c08(0x04)
	float ElderWandFinisherDamage; // 0x1c0c(0x04)
	float MaxFocus; // 0x1c10(0x04)
	int32_t InitialNumBarsFilled; // 0x1c14(0x04)
	float FinisherFocusCost; // 0x1c18(0x04)
	float ManagedFinisherFocusCost; // 0x1c1c(0x04)
	float PushFocusCost; // 0x1c20(0x04)
	char pad_1C24[0x4]; // 0x1c24(0x04)
	struct TMap<struct FName, float> FocusMap; // 0x1c28(0x50)
	struct TArray<struct UMultiFX2_Base*> FinisherAvailableFX; // 0x1c78(0x10)
	float ComboResetTime; // 0x1c88(0x04)
	float AdditionalComboResetTimeOnParry; // 0x1c8c(0x04)
	int32_t CooldownPickupFirstTierSize; // 0x1c90(0x04)
	int32_t CooldownPickupTierSize; // 0x1c94(0x04)
	struct TArray<int32_t> CooldownPickupCountArray; // 0x1c98(0x10)
	float ExtendedCombatTime; // 0x1ca8(0x04)
	struct FDelegate ClothTargetsStartDelegate; // 0x1cac(0x10)
	struct FDelegate ClothTargetsEndDelegate; // 0x1cbc(0x10)
	float HealthIncreasePerLevel; // 0x1ccc(0x04)
	struct FName LeftFootSocketName; // 0x1cd0(0x08)
	struct FName RightFootSocketName; // 0x1cd8(0x08)
	struct UCurveFloat* LeftStickMagWalkingCurve; // 0x1ce0(0x08)
	struct UCurveFloat* LeftStickMagJoggingCurve; // 0x1ce8(0x08)
	float BulletTimeStartSeconds; // 0x1cf0(0x04)
	char pad_1CF4[0x4]; // 0x1cf4(0x04)
	struct UCurveFloat* BulletTimeDilationCurve; // 0x1cf8(0x08)
	float BulletTimeDurationSeconds; // 0x1d00(0x04)
	float BulletTimeDialation; // 0x1d04(0x04)
	float CutBackToPlayerCamAfterTimeDialationSec; // 0x1d08(0x04)
	char pad_1D0C[0x4]; // 0x1d0c(0x04)
	struct FWeightedBlendable DamageEffectBlendable; // 0x1d10(0x10)
	struct UMaterialInstanceDynamic* DamageEffectMaterialInstance; // 0x1d20(0x08)
	struct UCurveFloat* DamageEffectCurve; // 0x1d28(0x08)
	float DamageEffectDuration; // 0x1d30(0x04)
	float DamageEffectScale; // 0x1d34(0x04)
	struct TArray<struct UMultiFX2_Base*> CriticalHealthFX; // 0x1d38(0x10)
	struct UCurveFloat* CriticalHealthPulseTimeCurve; // 0x1d48(0x08)
	struct TArray<struct UMultiFX2_Base*> CriticalHealthPulseFX; // 0x1d50(0x10)
	float CriticalHealthFadeOutTime; // 0x1d60(0x04)
	char pad_1D64[0x4]; // 0x1d64(0x04)
	struct AActor* DamageDirectionClass; // 0x1d68(0x08)
	float PercentHealthRecoverdPerSecond; // 0x1d70(0x04)
	float SecondsAfterCombatBeforeRecoveryStarts; // 0x1d74(0x04)
	bool DoDamageOnNextLanding; // 0x1d78(0x01)
	bool UseDodgeCamera; // 0x1d79(0x01)
	bool InHoverDrone; // 0x1d7a(0x01)
	bool bLookAtHips; // 0x1d7b(0x01)
	float cameraOffsetScale; // 0x1d7c(0x04)
	bool bLockOutPlayerCamControl; // 0x1d80(0x01)
	bool bLockOutPlayerCamControlPitch; // 0x1d81(0x01)
	char pad_1D82[0xe]; // 0x1d82(0x0e)
	struct TArray<struct FGearItem> CachedGearPieces; // 0x1d90(0x10)
	struct FGameplayProperty_Float OffenseStat; // 0x1da0(0x90)
	struct FGameplayProperty_Float DefenseStat; // 0x1e30(0x90)
	struct FGameplayProperty_Float CooldownStat; // 0x1ec0(0x90)
	struct FGameplayProperty_Int InventorySizeModification; // 0x1f50(0x80)
	struct FGameplayProperty_Float HiddenAfterTakedownTime; // 0x1fd0(0x90)
	struct FGameplayProperty_Float StatDamageMultiplier; // 0x2060(0x90)
	struct FGameplayProperty_Float StatDamageReduction; // 0x20f0(0x90)
	struct FGameplayProperty_Float StatCooldownReduction; // 0x2180(0x90)
	struct FGameplayProperty_Float GainKnowledgeModifier; // 0x2210(0x90)
	struct FGameplayProperty_Float GainExperienceModifier; // 0x22a0(0x90)
	struct FGameplayProperty_Float CompanionBondingPointsModifier; // 0x2330(0x90)
	struct FGameplayProperty_Float VendorPricesModifier; // 0x23c0(0x90)
	struct FGameplayProperty_Float EnemyEvadeChanceModifier; // 0x2450(0x90)
	struct FGameplayProperty_Float EnemyProtegoChanceModifier; // 0x24e0(0x90)
	struct FGameplayProperty_Float EnemyAwarenessRateModifier; // 0x2570(0x90)
	struct FGameplayProperty_Float CriticalSuccessChanceModifier; // 0x2600(0x90)
	struct FGameplayProperty_Float LootDropCountModifier; // 0x2690(0x90)
	struct FGameplayProperty_Float LootDropRareChanceModifier; // 0x2720(0x90)
	struct FGameplayProperty_Float StealRateModifier; // 0x27b0(0x90)
	struct FGameplayProperty_Float CaptureToolRangeModifier; // 0x2840(0x90)
	struct FGameplayProperty_Float CaptureToolDecayPenaltyModifier; // 0x28d0(0x90)
	struct FGameplayProperty_Float CaptureToolCaptureSpeedModifier; // 0x2960(0x90)
	struct FGameplayProperty_Float CreatureAgroFleeDistanceModifier; // 0x29f0(0x90)
	struct FGameplayProperty_Float FocusModifier; // 0x2a80(0x90)
	struct FGameplayProperty_Float FocusOnHitModifier; // 0x2b10(0x90)
	struct FGameplayProperty_Float UseConsumeableForFreeChance; // 0x2ba0(0x90)
	struct FGameplayProperty_Float UsePotionForFreeChance; // 0x2c30(0x90)
	struct FGameplayProperty_Int ObscurePerkDistance; // 0x2cc0(0x80)
	struct FGameplayProperty_Float MaliciousPerkMultiplier; // 0x2d40(0x90)
	struct FGameplayProperty_Float ExpelliarmusLootDropChance; // 0x2dd0(0x90)
	struct FGameplayProperty_Int CombatAuxPerk; // 0x2e60(0x80)
	struct FGameplayProperty_Float CombatAuxPerkDuration; // 0x2ee0(0x90)
	struct FGameplayProperty_Float CombatAuxPerkCooldown; // 0x2f70(0x90)
	char pad_3000[0x8]; // 0x3000(0x08)
	struct FGameplayProperty_Int DirectAIPerk; // 0x3008(0x80)
	struct FGameplayProperty_Int ExtendedCompanionInventoryCapacity; // 0x3088(0x80)
	struct FGameplayProperty_Float PlantDamageModifier; // 0x3108(0x90)
	struct FGameplayProperty_Float VenomousTentaculaPoisonDamageModifier; // 0x3198(0x90)
	struct FGameplayProperty_Float VenomousTentaculaWeakenEnemyDuration; // 0x3228(0x90)
	struct FGameplayProperty_Float HealingCooldownGroupModifier; // 0x32b8(0x90)
	struct TWeakObjectPtr<struct AActor> LastStupefyTarget; // 0x3348(0x08)
	struct FGameplayProperty_Float CabbageVampireModifier; // 0x3350(0x90)
	struct FGameplayProperty_Float PlantDamageFocus; // 0x33e0(0x90)
	struct FGameplayProperty_Float PlayerStupifyPlantDamageModifier; // 0x3470(0x90)
	struct FGameplayProperty_Float MandrakeBonusReactionTime; // 0x3500(0x90)
	struct FGameplayProperty_Float PlantSummonHealthPercent; // 0x3590(0x90)
	struct FGameplayProperty_Float DifficultyAttackCooldownModifier; // 0x3620(0x90)
	struct FGameplayProperty_Float DisillusionmentModifier; // 0x36b0(0x90)
	struct FGameplayProperty_Float CrimeSceneInvestigationModifier; // 0x3740(0x90)
	struct FGameplayProperty_Float SneakOScopeWindupModifier; // 0x37d0(0x90)
	struct FGameplayProperty_Float SilencioRangeModifier; // 0x3860(0x90)
	bool bAllowEdgeCheck; // 0x38f0(0x01)
	bool bInCombatMode; // 0x38f1(0x01)
	bool bInCombatModeDelayed; // 0x38f2(0x01)
	char pad_38F3[0x5]; // 0x38f3(0x05)
	struct AActor* FollowActor; // 0x38f8(0x08)
	int32_t CautiousMode; // 0x3900(0x04)
	char pad_3904[0x4]; // 0x3904(0x04)
	struct FGameplayProperty_Int BonusAncientMagicBars; // 0x3908(0x80)
	struct FGameplayProperty_Int BonusSpellLoadouts; // 0x3988(0x80)
	char pad_3A08[0x10]; // 0x3a08(0x10)
	bool InStealthMode; // 0x3a18(0x01)
	char pad_3A19[0x7]; // 0x3a19(0x07)
	bool bIsInvisible; // 0x3a20(0x01)
	bool InCinematic; // 0x3a21(0x01)
	enum class EWandLinkResult WandLinkResult; // 0x3a22(0x01)
	char pad_3A23[0x1]; // 0x3a23(0x01)
	bool bHoldingProtegoParry; // 0x3a24(0x01)
	char pad_3A25[0x3]; // 0x3a25(0x03)
	struct AActor* EnemyDetectionFXClass; // 0x3a28(0x08)
	struct UAkAudioEvent* EnemyDetectionSFX; // 0x3a30(0x08)
	struct UAkAudioEvent* EnemyAlertSFX; // 0x3a38(0x08)
	struct UAkAudioEvent* EnemyAggroSFX; // 0x3a40(0x08)
	char pad_3A48[0x60]; // 0x3a48(0x60)
	struct FMulticastInlineDelegate OnSpellCooldownChanged; // 0x3aa8(0x10)
	struct FMulticastInlineDelegate OnFocusChanged; // 0x3ab8(0x10)
	struct TMap<struct FName, struct FSpellCooldownData> CooldownMap; // 0x3ac8(0x50)
	struct FMulticastInlineDelegate OnStationInteractionExitComplete; // 0x3b18(0x10)
	struct FVector DesiredFocusDirection; // 0x3b28(0x0c)
	bool bUseDesiredFocusDirection; // 0x3b34(0x01)
	char pad_3B35[0x3]; // 0x3b35(0x03)
	struct UVegetationInteractionComponent* VegetationInteraction; // 0x3b38(0x08)
	struct FMulticastInlineDelegate OnTeleportTo; // 0x3b40(0x10)
	char pad_3B50[0x8]; // 0x3b50(0x08)
	struct UAblAbility* LastCriticalFinisher; // 0x3b58(0x08)
	float TimeoutLookAtCameraDirection; // 0x3b60(0x04)
	char pad_3B64[0x26c]; // 0x3b64(0x26c)
	struct UAkComponent* MotionListenerCameraOrientation; // 0x3dd0(0x08)
	struct UAkComponent* MotionListenerPlayerOrientation; // 0x3dd8(0x08)
	struct AActor* DamageDirectionActor; // 0x3de0(0x08)
	char pad_3DE8[0x68]; // 0x3de8(0x68)

	bool UseNewConversations(); // Function Phoenix.Biped_Player.UseNewConversations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xe899c0
	bool UseInventoryItemByName(struct FName InventoryObjectID, struct FName HolderID); // Function Phoenix.Biped_Player.UseInventoryItemByName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3213220
	void UseFinisherFocus(); // Function Phoenix.Biped_Player.UseFinisherFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x3213200
	void UpdateFinsherAvailableFX(); // Function Phoenix.Biped_Player.UpdateFinsherAvailableFX // (Final|Native|Public|BlueprintCallable) // @ game+0x32131e0
	void UpdateDifficulty(); // Function Phoenix.Biped_Player.UpdateDifficulty // (Final|Native|Public|BlueprintCallable) // @ game+0x32131c0
	void UpdateCamMove(float DeltaTime); // Function Phoenix.Biped_Player.UpdateCamMove // (Final|Native|Public) // @ game+0x3213140
	bool ToadStatueTeleport(struct AActor* InDestinationActor, struct FVector InOffset); // Function Phoenix.Biped_Player.ToadStatueTeleport // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3213050
	void TargetSighted(struct UAISense* Sense, struct AActor* Target); // Function Phoenix.Biped_Player.TargetSighted // (Final|Native|Public) // @ game+0x3212f80
	void TargetLost(struct UAISense* Sense, struct AActor* OldTarget); // Function Phoenix.Biped_Player.TargetLost // (Final|Native|Public) // @ game+0x3212eb0
	void TargetChanged(struct UAISense* Sense, struct AActor* NewTarget, struct AActor* OldTarget); // Function Phoenix.Biped_Player.TargetChanged // (Final|Native|Public) // @ game+0x3212da0
	void SuspendStoryModeArmor(bool bFlag); // Function Phoenix.Biped_Player.SuspendStoryModeArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x3212d10
	bool StopPlayerInput(); // Function Phoenix.Biped_Player.StopPlayerInput // (Final|Native|Protected|BlueprintCallable) // @ game+0x3212ce0
	void StopMove(); // Function Phoenix.Biped_Player.StopMove // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3212cc0
	void StationInteractionExitComplete__DelegateSignature(); // DelegateFunction Phoenix.Biped_Player.StationInteractionExitComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	struct AActor* StartCriticalFinisher(); // Function Phoenix.Biped_Player.StartCriticalFinisher // (Final|Native|Public|BlueprintCallable) // @ game+0x3212c90
	void StartBulletTime(float Dilation, float Duration, bool DoFixedCam, float PlayerDilation, float EaseInDuration, float EaseOutDuration); // Function Phoenix.Biped_Player.StartBulletTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3212aa0
	void SpawnRockSlide(struct UObject* InActorClass, float ProjectForward); // Function Phoenix.Biped_Player.SpawnRockSlide // (Final|Native|Public|BlueprintCallable) // @ game+0x32129d0
	void SpawnItemMountCallback(struct UInventoryItemToolRecord* InToolRecord); // Function Phoenix.Biped_Player.SpawnItemMountCallback // (Final|Native|Protected) // @ game+0x3212940
	struct AActor* SpawnFaceTarget(struct AActor* SpawnActorClass); // Function Phoenix.Biped_Player.SpawnFaceTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32128a0
	bool ShadowBlinkTeleport(struct AActor* InBlinkTarget, float InBlinkDistanceFromTarget, bool bIsGate, bool bIsStealth, struct FVector& OutBlinkLocation, struct FRotator& OutBlinkRotation); // Function Phoenix.Biped_Player.ShadowBlinkTeleport // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3212670
	void SetWandStyle(struct FName WandStyle); // Function Phoenix.Biped_Player.SetWandStyle // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x32124b0
	void SetWandBaseStyle(struct FName InWandBase); // Function Phoenix.Biped_Player.SetWandBaseStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x3212420
	void SetUsingElderWand(bool bUsing); // Function Phoenix.Biped_Player.SetUsingElderWand // (Final|Native|Public|BlueprintCallable) // @ game+0x3212390
	void SetStartingMovementTime(float InStartingMovementTime); // Function Phoenix.Biped_Player.SetStartingMovementTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3212310
	bool SetPlayerSocialHeritage(enum class SocialHeritageStatusIDs NewHeritage); // Function Phoenix.Biped_Player.SetPlayerSocialHeritage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32121a0
	bool SetPlayerGenderPronoun(enum class EGenderPronoun NewGenderPronoun); // Function Phoenix.Biped_Player.SetPlayerGenderPronoun // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3212120
	void SetPhoenixCameraRotation(struct FRotator& DesiredRotation); // Function Phoenix.Biped_Player.SetPhoenixCameraRotation // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x3212090
	void SetPhoenixCameraLookAt_TimeBased(struct FVector& LookAtPoint, float LookAtTime); // Function Phoenix.Biped_Player.SetPhoenixCameraLookAt_TimeBased // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x3211fa0
	void SetPhoenixCameraLookAt_ActorAndTime(struct AActor* LookAtActor, float LookAtTime); // Function Phoenix.Biped_Player.SetPhoenixCameraLookAt_ActorAndTime // (Native|Event|Public|BlueprintEvent) // @ game+0x3211ec0
	void SetPhoenixCameraLookAt_Actor(struct AActor* LookAtActor, float ScaleSpeed); // Function Phoenix.Biped_Player.SetPhoenixCameraLookAt_Actor // (Native|Event|Public|BlueprintEvent) // @ game+0x3211de0
	void SetPhoenixCameraLookAt(struct FVector& LookAtPoint, float ScaleSpeed); // Function Phoenix.Biped_Player.SetPhoenixCameraLookAt // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x3211cf0
	void SetOverrideWandStyle(struct FName WandStyle); // Function Phoenix.Biped_Player.SetOverrideWandStyle // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x3211c60
	void SetMotionListener(struct UAkComponent* AkComponent, bool PlayerOrientation); // Function Phoenix.Biped_Player.SetMotionListener // (Final|Native|Public|BlueprintCallable) // @ game+0x3211b90
	void SetManagedAM(float Value); // Function Phoenix.Biped_Player.SetManagedAM // (Final|Native|Public|BlueprintCallable) // @ game+0x3211b10
	void SetLastSafeInteractLocation(struct FVector Location); // Function Phoenix.Biped_Player.SetLastSafeInteractLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3211a80
	void SetLastEdgeState(enum class EEdgeState InEdgeState); // Function Phoenix.Biped_Player.SetLastEdgeState // (Final|Native|Public|BlueprintCallable) // @ game+0x3211a00
	void SetInvulnerableTime(float invulnerableTime); // Function Phoenix.Biped_Player.SetInvulnerableTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3211980
	void SetInvulnerable(bool bInInvulnerable); // Function Phoenix.Biped_Player.SetInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x32118f0
	void SetInteractStickyTarget(bool bSet); // Function Phoenix.Biped_Player.SetInteractStickyTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3211860
	void SetInLockOnMode(bool bInFlag); // Function Phoenix.Biped_Player.SetInLockOnMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32117d0
	void SetHighlitActor(struct AActor* InHighlitActor); // Function Phoenix.Biped_Player.SetHighlitActor // (Final|Native|Public) // @ game+0x3211740
	void SetFieldGuideHotSpot(struct AFieldGuideHotSpot* InFieldGuideHotSpot); // Function Phoenix.Biped_Player.SetFieldGuideHotSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x32116b0
	void SetDodgeDirection(); // Function Phoenix.Biped_Player.SetDodgeDirection // (Final|Native|Protected|BlueprintCallable) // @ game+0x3211690
	void SetDisableCombatPlantHideOnSuspendEnemies(bool bInVal); // Function Phoenix.Biped_Player.SetDisableCombatPlantHideOnSuspendEnemies // (Final|Native|Public|BlueprintCallable) // @ game+0x3211600
	void SetCooldownRateScale(float RateScale); // Function Phoenix.Biped_Player.SetCooldownRateScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3211580
	void SetCauseOfDeath(enum class ECharacterDeathType InCauseOfDeath); // Function Phoenix.Biped_Player.SetCauseOfDeath // (Final|Native|Public|BlueprintCallable) // @ game+0x3211500
	void SetCameraStyle(struct FName CameraStyle); // Function Phoenix.Biped_Player.SetCameraStyle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3211480
	void SetAutoTargetingDirection(struct FVector InWorldDirection); // Function Phoenix.Biped_Player.SetAutoTargetingDirection // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32113f0
	void SetAccessibilitySpellToggle(bool ToggleOn); // Function Phoenix.Biped_Player.SetAccessibilitySpellToggle // (Final|Native|Public|BlueprintCallable) // @ game+0x3211360
	struct AActor* Set_WandCast_TargetTrackerTargets(bool bIgnoreTargets, struct AActor* InTargetOverride, struct FVector InTargetOverrideWorldLocation); // Function Phoenix.Biped_Player.Set_WandCast_TargetTrackerTargets // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3212540
	void SendCriticalMunitionImpactToTarget(struct AActor* TargetActor, struct FName UniqueTag, struct TArray<struct UInteractionArchitectAsset*>& MunitionDataAssets, struct FGameplayTagContainer& MunitionTagContainer, float Damage); // Function Phoenix.Biped_Player.SendCriticalMunitionImpactToTarget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3211170
	bool SafeTeleportTo(struct FVector& DestLocation, struct FRotator& DestRotation, bool bIsATest, bool bNoCheck); // Function Phoenix.Biped_Player.SafeTeleportTo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3210fd0
	bool RestorePlayerInput(); // Function Phoenix.Biped_Player.RestorePlayerInput // (Final|Native|Protected|BlueprintCallable) // @ game+0x3210fa0
	void RestoreHealth(); // Function Phoenix.Biped_Player.RestoreHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x3210f80
	void RestartComboTimeout(); // Function Phoenix.Biped_Player.RestartComboTimeout // (Final|Native|Public|BlueprintCallable) // @ game+0x3210f60
	void ResetStickTime(); // Function Phoenix.Biped_Player.ResetStickTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3210f40
	void ResetPhoenixCameraRotation(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_Player.ResetPhoenixCameraRotation // (Native|Event|Public|BlueprintEvent) // @ game+0x3210e60
	void ResetComboPoints(); // Function Phoenix.Biped_Player.ResetComboPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x3210e40
	void ResetCloth(); // Function Phoenix.Biped_Player.ResetCloth // (Final|Native|Public|BlueprintCallable) // @ game+0x3210e20
	void RequestStick(float StickX, float StickY); // Function Phoenix.Biped_Player.RequestStick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3210d50
	void RepairOrientation(); // Function Phoenix.Biped_Player.RepairOrientation // (Final|Native|Public|BlueprintCallable) // @ game+0x3210d30
	void ReleasePhoenixCameraLookAt(); // Function Phoenix.Biped_Player.ReleasePhoenixCameraLookAt // (Native|Event|Public|BlueprintEvent) // @ game+0x3210d10
	void RecordSafeLocation(); // Function Phoenix.Biped_Player.RecordSafeLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x3210cf0
	void RecordSafeInteractLocation(); // Function Phoenix.Biped_Player.RecordSafeInteractLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x3210cd0
	bool QuickActionInteract(int32_t Index); // Function Phoenix.Biped_Player.QuickActionInteract // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3210c30
	void PutPlayerIntoCinematicState(bool bFlag, bool bAlterAbilities); // Function Phoenix.Biped_Player.PutPlayerIntoCinematicState // (Final|Native|Protected|BlueprintCallable) // @ game+0x3210b60
	void PushDisableStack(struct FName_GameLogicVarInt32 StackName); // Function Phoenix.Biped_Player.PushDisableStack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3210ad0
	bool ProcessStick(float StickX, float StickY, float DeltaTime, struct UCurveFloat* DeadZoneCurve, struct UCurveFloat* SpeedCurve, struct UCurveFloat* SpeedGovernorCurve, float& WorldSpeed, struct FVector& WorldDirection, enum class ECustomInterpType InterpType, float InterpSpeed, float StickMagReductionDelayTimer); // Function Phoenix.Biped_Player.ProcessStick // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3210770
	bool ProcessFollowTarget(struct AActor* InFollowActor, struct UCurveFloat* SpeedCurve, float& OutWorldSpeed, struct FVector& OutWorldDirection); // Function Phoenix.Biped_Player.ProcessFollowTarget // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x32105e0
	void PopDisableStack(struct FName_GameLogicVarInt32 StackName); // Function Phoenix.Biped_Player.PopDisableStack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3210550
	void PlayerGetOutOfBed(struct AStation* BedStation, struct UObject* PlayerBedAbility); // Function Phoenix.Biped_Player.PlayerGetOutOfBed // (Final|Native|Protected|BlueprintCallable) // @ game+0x3210480
	bool PlacePlayerInBed(struct AStation*& BedStation, struct UObject*& PlayerBedAbility); // Function Phoenix.Biped_Player.PlacePlayerInBed // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x3210390
	bool PlaceOnGround(float DownDistance); // Function Phoenix.Biped_Player.PlaceOnGround // (Final|Native|Public|BlueprintCallable) // @ game+0x3210300
	void PauseMenuStart(); // Function Phoenix.Biped_Player.PauseMenuStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void PauseComboTimeout(); // Function Phoenix.Biped_Player.PauseComboTimeout // (Final|Native|Public|BlueprintCallable) // @ game+0x32102e0
	void OnTeleportTo__DelegateSignature(struct FVector PrevLocation, struct FRotator PrevRotation, bool bIsATest, bool bNoCheck, bool bSuccess); // DelegateFunction Phoenix.Biped_Player.OnTeleportTo__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x38a7480
	void OnSpellCooldownChanged__DelegateSignature(struct FName SpellName, float CooldownPct); // DelegateFunction Phoenix.Biped_Player.OnSpellCooldownChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnSaveGameLoaded(); // Function Phoenix.Biped_Player.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x32102c0
	void OnQuickItemSlotted(struct UObject* InCaller, struct FName& ItemName); // Function Phoenix.Biped_Player.OnQuickItemSlotted // (Final|Native|Protected|HasOutParms) // @ game+0x32101e0
	void OnNewGame(struct UObject* InCaller, bool bInIsIntro); // Function Phoenix.Biped_Player.OnNewGame // (Final|Native|Protected) // @ game+0x3210110
	void OnFocusChanged__DelegateSignature(struct AActor* Target, float InFocusChange); // DelegateFunction Phoenix.Biped_Player.OnFocusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnCurtainRaised(); // Function Phoenix.Biped_Player.OnCurtainRaised // (Final|Native|Public) // @ game+0x32100f0
	void OnCharacterLoadComplete(struct AActor* Actor); // Function Phoenix.Biped_Player.OnCharacterLoadComplete // (Final|Native|Protected) // @ game+0x3210060
	void OnBlackboardInitialized(bool bSuccess); // Function Phoenix.Biped_Player.OnBlackboardInitialized // (Final|Native|Protected) // @ game+0x320ffd0
	void OnAboutToSaveGame(); // Function Phoenix.Biped_Player.OnAboutToSaveGame // (Final|Native|Public) // @ game+0x320ffb0
	void OnAbilityAnimationBecameActive(); // Function Phoenix.Biped_Player.OnAbilityAnimationBecameActive // (Final|Native|Protected) // @ game+0x320ff90
	void NotifySucessfulBlock(); // Function Phoenix.Biped_Player.NotifySucessfulBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x320ff60
	void NotifyDodgeFinished(); // Function Phoenix.Biped_Player.NotifyDodgeFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x320ff30
	void LockOnCamFlick(struct UStickFlickWatcherRecord* InStickFlickWatcherRecord); // Function Phoenix.Biped_Player.LockOnCamFlick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320fe10
	void LockOnCameraMoving(bool bFlag); // Function Phoenix.Biped_Player.LockOnCameraMoving // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320fea0
	bool LoadInventoryItemByName(struct FName InventoryObjectID, struct FName HolderID); // Function Phoenix.Biped_Player.LoadInventoryItemByName // (Final|Native|Public|BlueprintCallable) // @ game+0x320fd40
	void LevelUp(); // Function Phoenix.Biped_Player.LevelUp // (Final|Native|Public|BlueprintCallable) // @ game+0x320fd20
	void LEDDamageEffect(struct AActor* InActor, struct AActor* InInstigator, float InDamage, struct FHitResult& InHit); // Function Phoenix.Biped_Player.LEDDamageEffect // (Final|Native|Protected|HasOutParms) // @ game+0x320fb70
	void LeafNodeSwitched(); // Function Phoenix.Biped_Player.LeafNodeSwitched // (Final|Native|Public) // @ game+0x320fd00
	bool IsVenomousTentaculaAtMax(); // Function Phoenix.Biped_Player.IsVenomousTentaculaAtMax // (Final|Native|Public|BlueprintCallable) // @ game+0x320fb40
	bool IsSwimming(); // Function Phoenix.Biped_Player.IsSwimming // (Final|Native|Public|BlueprintCallable) // @ game+0x320fb10
	bool IsPlayingIntro(); // Function Phoenix.Biped_Player.IsPlayingIntro // (Final|Native|Public|BlueprintCallable) // @ game+0x320faf0
	bool IsPerfectRetaliate(); // Function Phoenix.Biped_Player.IsPerfectRetaliate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320fad0
	bool IsManagedAMEnabled(); // Function Phoenix.Biped_Player.IsManagedAMEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x320fab0
	bool IsLockedOn(); // Function Phoenix.Biped_Player.IsLockedOn // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320fa80
	bool IsInventoryItemHighlighted(); // Function Phoenix.Biped_Player.IsInventoryItemHighlighted // (Final|Native|Public|BlueprintCallable) // @ game+0x320fa50
	bool IsInLockOnMode(); // Function Phoenix.Biped_Player.IsInLockOnMode // (Final|Native|Public|BlueprintCallable) // @ game+0x320fa30
	bool IsHoverDroneActive(); // Function Phoenix.Biped_Player.IsHoverDroneActive // (Final|Native|Public|BlueprintCallable) // @ game+0x320fa00
	bool IsFinisherAvailable(); // Function Phoenix.Biped_Player.IsFinisherAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x320f9d0
	bool IsCrawling(); // Function Phoenix.Biped_Player.IsCrawling // (Final|Native|Public|BlueprintCallable) // @ game+0x320f9a0
	bool IsChompingCabbageAtMax(); // Function Phoenix.Biped_Player.IsChompingCabbageAtMax // (Final|Native|Public|BlueprintCallable) // @ game+0x320f970
	bool IsCameraMoving(); // Function Phoenix.Biped_Player.IsCameraMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320f950
	bool IsAMPushAvailable(); // Function Phoenix.Biped_Player.IsAMPushAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x320f920
	void InteractingWithActor(struct AActor* InActor); // Function Phoenix.Biped_Player.InteractingWithActor // (Final|Native|Public|BlueprintCallable) // @ game+0x320f890
	bool InstaUseInventoryItem(); // Function Phoenix.Biped_Player.InstaUseInventoryItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320f860
	bool InLockOnMode(); // Function Phoenix.Biped_Player.InLockOnMode // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320f830
	bool InCombatModeDelayed(); // Function Phoenix.Biped_Player.InCombatModeDelayed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320f800
	bool InCombatMode(); // Function Phoenix.Biped_Player.InCombatMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320f7d0
	bool IgnoreRetaliateTarget(struct AActor* RetaliateTarget); // Function Phoenix.Biped_Player.IgnoreRetaliateTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x320f730
	void HighestEnemyChanged(struct AActor* InEnemyActor, int32_t InLevelDiff); // Function Phoenix.Biped_Player.HighestEnemyChanged // (Final|Native|Protected) // @ game+0x320f660
	void HideReticle(bool bHide); // Function Phoenix.Biped_Player.HideReticle // (Final|Native|Public) // @ game+0x320f5d0
	bool HasMandrakeTalent(); // Function Phoenix.Biped_Player.HasMandrakeTalent // (Final|Native|Public|BlueprintCallable) // @ game+0x320f5a0
	void HandleVenomousTentaculaCountChanged(); // Function Phoenix.Biped_Player.HandleVenomousTentaculaCountChanged // (Final|Native|Private) // @ game+0x320f4e0
	bool HandleDodgeUnblockable(struct AActor*& OutAttacker); // Function Phoenix.Biped_Player.HandleDodgeUnblockable // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x320f500
	void HandleChompingCabbageCountChanged(); // Function Phoenix.Biped_Player.HandleChompingCabbageCountChanged // (Final|Native|Private) // @ game+0x320f4e0
	void HandleActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.Biped_Player.HandleActorHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1a33910
	struct FName GetWandStyle(); // Function Phoenix.Biped_Player.GetWandStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320f4a0
	struct FName GetWandBaseStyle(); // Function Phoenix.Biped_Player.GetWandBaseStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320f460
	int32_t GetVenomousTentaculaMax(); // Function Phoenix.Biped_Player.GetVenomousTentaculaMax // (Final|Native|Public|BlueprintCallable) // @ game+0x320f430
	int32_t GetVenomousTentaculaCount(); // Function Phoenix.Biped_Player.GetVenomousTentaculaCount // (Final|Native|Public|BlueprintCallable) // @ game+0x320f400
	struct ABiped_Player* GetTheBipedPlayer(); // Function Phoenix.Biped_Player.GetTheBipedPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x320f3a0
	struct UCurveFloat* GetSpeedGovernorCurve(); // Function Phoenix.Biped_Player.GetSpeedGovernorCurve // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320f280
	struct UCurveFloat* GetSpeedCurve(bool& bIgnoreGovernor); // Function Phoenix.Biped_Player.GetSpeedCurve // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x320f1d0
	enum class SocialHeritageStatusIDs GetPlayerSocialHeritage(); // Function Phoenix.Biped_Player.GetPlayerSocialHeritage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320f1a0
	float GetPlayerMovementDuration(); // Function Phoenix.Biped_Player.GetPlayerMovementDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x320f170
	float GetPlayerLastUsedItemEffectiveness(); // Function Phoenix.Biped_Player.GetPlayerLastUsedItemEffectiveness // (Final|Native|Static|Public) // @ game+0x320f140
	enum class EGenderPronoun GetPlayerGenderPronoun(); // Function Phoenix.Biped_Player.GetPlayerGenderPronoun // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320f110
	int32_t GetPlantCount(struct FString trackerName); // Function Phoenix.Biped_Player.GetPlantCount // (Final|Native|Public|BlueprintCallable) // @ game+0x320f010
	int32_t GetOffenseStat(); // Function Phoenix.Biped_Player.GetOffenseStat // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320efd0
	void GetMoveStickValues(float& X, float& Y); // Function Phoenix.Biped_Player.GetMoveStickValues // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x320eef0
	struct UAkComponent* GetMotionListenerPlayerOrientation(); // Function Phoenix.Biped_Player.GetMotionListenerPlayerOrientation // (Final|Native|Public|BlueprintCallable) // @ game+0x320eed0
	struct UAkComponent* GetMotionListenerCameraOrientation(); // Function Phoenix.Biped_Player.GetMotionListenerCameraOrientation // (Final|Native|Public|BlueprintCallable) // @ game+0x320eeb0
	float GetMaxFocus(); // Function Phoenix.Biped_Player.GetMaxFocus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320ee90
	struct FVector GetLastSafeLocation(); // Function Phoenix.Biped_Player.GetLastSafeLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x320ee50
	struct FVector GetLastSafeInteractLocation(); // Function Phoenix.Biped_Player.GetLastSafeInteractLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x320ee10
	bool GetIsOnAMountOrInTransition(); // Function Phoenix.Biped_Player.GetIsOnAMountOrInTransition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320edf0
	int32_t GetInventorySizeModification(); // Function Phoenix.Biped_Player.GetInventorySizeModification // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320edd0
	float GetHiddenAfterTakedownTime(); // Function Phoenix.Biped_Player.GetHiddenAfterTakedownTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320edb0
	bool GetGameLogicBoolVariable(struct FName_GameLogicVarBool BoolVar); // Function Phoenix.Biped_Player.GetGameLogicBoolVariable // (Final|Native|Public|BlueprintCallable) // @ game+0x320ed10
	float GetFocusPercent(); // Function Phoenix.Biped_Player.GetFocusPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x320ece0
	float GetFocus(); // Function Phoenix.Biped_Player.GetFocus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320ecc0
	float GetFinisherDamage(); // Function Phoenix.Biped_Player.GetFinisherDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320ec80
	float GetExpectedDistanceFromTarget(bool bIgnoreTargets, struct AActor* InTargetOverride, bool& bFound, struct FVector& ToTarget); // Function Phoenix.Biped_Player.GetExpectedDistanceFromTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x320eaf0
	int32_t GetDefenseStat(); // Function Phoenix.Biped_Player.GetDefenseStat // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320eab0
	float GetCurrentCriticalHealthFadeOutPercent(); // Function Phoenix.Biped_Player.GetCurrentCriticalHealthFadeOutPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320ea80
	int32_t GetCooldownStat(); // Function Phoenix.Biped_Player.GetCooldownStat // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320ea40
	float GetCooldownRateScale(); // Function Phoenix.Biped_Player.GetCooldownRateScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320ea20
	float GetCooldownPercentByName(struct FName SpellName); // Function Phoenix.Biped_Player.GetCooldownPercentByName // (Final|Native|Public|BlueprintCallable) // @ game+0x320e980
	float GetCooldownPercent(struct USpellToolRecord* InSpellToolRecord); // Function Phoenix.Biped_Player.GetCooldownPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x320e8e0
	int32_t GetConsecutiveEnemyHits(); // Function Phoenix.Biped_Player.GetConsecutiveEnemyHits // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e8c0
	float GetCompanionsAtMaxLevel(); // Function Phoenix.Biped_Player.GetCompanionsAtMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e890
	float GetComboPoints(); // Function Phoenix.Biped_Player.GetComboPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e870
	int32_t GetChompingCabbageMax(); // Function Phoenix.Biped_Player.GetChompingCabbageMax // (Final|Native|Public|BlueprintCallable) // @ game+0x320e840
	int32_t GetChompingCabbageCount(); // Function Phoenix.Biped_Player.GetChompingCabbageCount // (Final|Native|Public|BlueprintCallable) // @ game+0x320e810
	enum class ECharacterDeathType GetCauseOfDeath(); // Function Phoenix.Biped_Player.GetCauseOfDeath // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x320e7f0
	int32_t GetBonusSpellLoadouts(); // Function Phoenix.Biped_Player.GetBonusSpellLoadouts // (Final|Native|Public|BlueprintCallable) // @ game+0x320e7c0
	int32_t GetBonusAncientMagicBars(); // Function Phoenix.Biped_Player.GetBonusAncientMagicBars // (Final|Native|Public|BlueprintCallable) // @ game+0x320e790
	struct UBiped_AnimInstance* GetBipedAnimInstance(); // Function Phoenix.Biped_Player.GetBipedAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e760
	struct FVector GetBestLockOnActor_WorldLocation(); // Function Phoenix.Biped_Player.GetBestLockOnActor_WorldLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320e720
	struct FVector GetBestLockOnActor_ScreenLocation(); // Function Phoenix.Biped_Player.GetBestLockOnActor_ScreenLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320e6e0
	struct FVector GetBestAutoTargetActor_WorldLocation(); // Function Phoenix.Biped_Player.GetBestAutoTargetActor_WorldLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320e6a0
	float GetBaseOffenseStat(); // Function Phoenix.Biped_Player.GetBaseOffenseStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e680
	float GetBaseDefenseStat(); // Function Phoenix.Biped_Player.GetBaseDefenseStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e660
	float GetBaseCooldownStat(); // Function Phoenix.Biped_Player.GetBaseCooldownStat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e640
	bool GetAccessibilitySpellToggle(); // Function Phoenix.Biped_Player.GetAccessibilitySpellToggle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x320e590
	void FullyResetPhoenixCamera(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_Player.FullyResetPhoenixCamera // (Native|Event|Public|BlueprintEvent) // @ game+0x320e4b0
	void ForceEndDisillusionment(); // Function Phoenix.Biped_Player.ForceEndDisillusionment // (Final|Native|Protected|BlueprintCallable) // @ game+0x320e490
	void EndCriticalFinisher(struct AActor* InTargetActor); // Function Phoenix.Biped_Player.EndCriticalFinisher // (Final|Native|Public|BlueprintCallable) // @ game+0x320e400
	void EndBulletTime(float EaseOutDuration); // Function Phoenix.Biped_Player.EndBulletTime // (Final|Native|Public|BlueprintCallable) // @ game+0x320e380
	void EnableManagedAM(bool Enabled); // Function Phoenix.Biped_Player.EnableManagedAM // (Final|Native|Public|BlueprintCallable) // @ game+0x320e2f0
	void DisablePlayerHealthRecovery(bool bDisable); // Function Phoenix.Biped_Player.DisablePlayerHealthRecovery // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320e270
	void DisableCooldownPickups(bool bDisable); // Function Phoenix.Biped_Player.DisableCooldownPickups // (Final|Native|Public|BlueprintCallable) // @ game+0x320e1e0
	void DetectEdgeChange(struct FVector TestActorLocation, float TraceRadius, bool bSendEvents, bool bDebugDraw); // Function Phoenix.Biped_Player.DetectEdgeChange // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x320e050
	void DEBUG_SetGlobalTimeDilation(struct UObject* WorldContextObject, float TimeDilation); // Function Phoenix.Biped_Player.DEBUG_SetGlobalTimeDilation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320de00
	void DamageDirectionEffect(struct AActor* InActor, struct AActor* InInstigator, float InDamage, struct FHitResult& InHit); // Function Phoenix.Biped_Player.DamageDirectionEffect // (Final|Native|Protected|HasOutParms) // @ game+0x320dec0
	bool CreateLinkToAttackingActor(enum class EEnemy_ParryButtonPressed ParryEventReason, bool& bOutDodgeWindow); // Function Phoenix.Biped_Player.CreateLinkToAttackingActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x320dd20
	void ComputeAimOffset(struct FName BoneName, float& Pitch, float& Yaw); // Function Phoenix.Biped_Player.ComputeAimOffset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x320dc00
	void CognitionTargetPlayerAwareStateChanged(enum class ENPC_TargetAwareState InAwareState); // Function Phoenix.Biped_Player.CognitionTargetPlayerAwareStateChanged // (Final|Native|Public) // @ game+0x320db80
	void CognitionTargetHealthChanged(struct AActor* Target, float InHealthChanged, bool bIndicateHUD); // Function Phoenix.Biped_Player.CognitionTargetHealthChanged // (Final|Native|Public) // @ game+0x320da60
	void ClearStick(); // Function Phoenix.Biped_Player.ClearStick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x320da40
	void ClearOverrideWandStyle(); // Function Phoenix.Biped_Player.ClearOverrideWandStyle // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x320da20
	void ClearInvulnerable(); // Function Phoenix.Biped_Player.ClearInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x320da00
	void ClearCustomCameras(); // Function Phoenix.Biped_Player.ClearCustomCameras // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320d9e0
	void ChangeManagedAM(float change); // Function Phoenix.Biped_Player.ChangeManagedAM // (Final|Native|Public|BlueprintCallable) // @ game+0x320d960
	void CameraStickLastMovedChanged(bool InCameraStickMoved); // Function Phoenix.Biped_Player.CameraStickLastMovedChanged // (Final|Native|Public) // @ game+0x320d8d0
	float CalculateVendorPricesModifier(struct FVendorTransactionInfo& Info); // Function Phoenix.Biped_Player.CalculateVendorPricesModifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x320d820
	float CalculateStealRateModifier(); // Function Phoenix.Biped_Player.CalculateStealRateModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x320d7f0
	float CalculateSneakOScopeWindupModifier(); // Function Phoenix.Biped_Player.CalculateSneakOScopeWindupModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x320d7c0
	float CalculateSilencioRangeModifier(); // Function Phoenix.Biped_Player.CalculateSilencioRangeModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x320d790
	float CalculatePlantDamageModifier(struct FName DbId); // Function Phoenix.Biped_Player.CalculatePlantDamageModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x320d6f0
	float CalculateMandrakeBonusReaction(); // Function Phoenix.Biped_Player.CalculateMandrakeBonusReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x320d6c0
	struct FVector CalculateLookAtDirection(); // Function Phoenix.Biped_Player.CalculateLookAtDirection // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x320d680
	int32_t CalculateExtendedCompanionInventoryCapacity(); // Function Phoenix.Biped_Player.CalculateExtendedCompanionInventoryCapacity // (Final|Native|Public|BlueprintCallable) // @ game+0x320d650
	bool AutoNavToTarget(struct AActor* InTarget, float InSpeed, float DistanceFromTarget); // Function Phoenix.Biped_Player.AutoNavToTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x320d540
	bool AllowStop(float InWorldSpeed, struct FVector InWorldDirection, float DeltaTime, float MinTime); // Function Phoenix.Biped_Player.AllowStop // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x320d3b0
	bool AllowMove(float InWorldSpeed, struct FVector InWorldDirection, float DeltaTime, float MinTime); // Function Phoenix.Biped_Player.AllowMove // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x320d220
	void AdjustFocusByName(struct FName Name, float ExternalFocusModifier); // Function Phoenix.Biped_Player.AdjustFocusByName // (Final|Native|Public|BlueprintCallable) // @ game+0x320d150
	void AdjustFocus(float change, float ExternalFocusModifier); // Function Phoenix.Biped_Player.AdjustFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x320d080
	void AdjustCooldownsByCategory(float Time, enum class ESpellCategory SpellCategory); // Function Phoenix.Biped_Player.AdjustCooldownsByCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x320cfb0
	void AdjustCooldown(struct FName SpellName, float Time, bool AddIfNoneExists); // Function Phoenix.Biped_Player.AdjustCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x320ce90
	void AdjustComboPoints(enum class EComboType ComboType, struct AActor* Target); // Function Phoenix.Biped_Player.AdjustComboPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x320cdc0
	void AddCustomCamera(struct UCameraComponent* customCam, float weight); // Function Phoenix.Biped_Player.AddCustomCamera // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x320cd00
};

// Class Phoenix.LockTargetScreenInfo
// Size: 0x40 (Inherited: 0x28)
struct ULockTargetScreenInfo : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.UserWidget_LockOnReticle
// Size: 0x2f0 (Inherited: 0x2e8)
struct UUserWidget_LockOnReticle : UHUDElementGroup {
	float CurrentScale; // 0x2e8(0x04)
	float ScaleMax; // 0x2ec(0x04)

	void SetLockOnVisibility(enum class ESlateVisibility InVisibility); // Function Phoenix.UserWidget_LockOnReticle.SetLockOnVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetAimModeVisibility(enum class ESlateVisibility InVisibility); // Function Phoenix.UserWidget_LockOnReticle.SetAimModeVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetAimModeCircleScale(float InScale); // Function Phoenix.UserWidget_LockOnReticle.SetAimModeCircleScale // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Actor_LockOnReticle
// Size: 0x330 (Inherited: 0x248)
struct AActor_LockOnReticle : AActor {
	float AimModeCircleGrowRate; // 0x248(0x04)
	float AimModeCircleShrinkRate; // 0x24c(0x04)
	float TargetingHorizontalStickAngle; // 0x250(0x04)
	float TargetingVerticalStickAngle; // 0x254(0x04)
	float FootprintRadius; // 0x258(0x04)
	float StickInnerDeadZone; // 0x25c(0x04)
	float StickOuterDeadZone; // 0x260(0x04)
	float MaxStickFlickMag; // 0x264(0x04)
	bool bFindNewTargetWhenLockonTargetLost; // 0x268(0x01)
	bool bReleaseTargetWhenLockonGoesInvalid; // 0x269(0x01)
	bool bFindNewTargetFromCenterOfScreen; // 0x26a(0x01)
	bool bScaleFootprint; // 0x26b(0x01)
	float MinCameraDistance; // 0x26c(0x04)
	float MaxCameraDistance; // 0x270(0x04)
	float MinFootprintScale; // 0x274(0x04)
	float MaxFootprintScale; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct UAkAudioEvent* LockOnToTargetSfx; // 0x280(0x08)
	struct UAkAudioEvent* FlickToTargetSfx; // 0x288(0x08)
	struct UAkAudioEvent* TargetReleasedSfx; // 0x290(0x08)
	struct UAkAudioEvent* TargetSwitchedWhenCurrentTargetLostSfx; // 0x298(0x08)
	struct TMap<uint32_t, struct ULockTargetScreenInfo*> LockTargetScreenInfoMap; // 0x2a0(0x50)
	char pad_2F0[0x18]; // 0x2f0(0x18)
	struct UUserWidget* LockOnReticleOffScreenWidgetClass; // 0x308(0x08)
	float StickResetTime; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	struct ABiped_PlayerController* BipedPlayerController; // 0x318(0x08)
	char pad_320[0x10]; // 0x320(0x10)

	void StickY(float AxisVal); // Function Phoenix.Actor_LockOnReticle.StickY // (Final|Native|Public) // @ game+0x3216f50
	void StickX(float AxisVal); // Function Phoenix.Actor_LockOnReticle.StickX // (Final|Native|Public) // @ game+0x3216ed0
	bool IsLockedOn(); // Function Phoenix.Actor_LockOnReticle.IsLockedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215cc0
	enum class ELockOnReticleType GetLockedOnType(); // Function Phoenix.Actor_LockOnReticle.GetLockedOnType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31e0bb0
};

// Class Phoenix.Biped_PlayerController
// Size: 0x950 (Inherited: 0x5b0)
struct ABiped_PlayerController : APlayerController {
	char pad_5B0[0x8]; // 0x5b0(0x08)
	bool UseAutoTargetCameraModes; // 0x5b8(0x01)
	char pad_5B9[0x3]; // 0x5b9(0x03)
	float AimModeFarDistanceRadius; // 0x5bc(0x04)
	float AimModeNarrowRadius; // 0x5c0(0x04)
	enum class ETargetingMode TargetingMode; // 0x5c4(0x01)
	char pad_5C5[0x3]; // 0x5c5(0x03)
	struct UCognitionComponent* CognitionComponent; // 0x5c8(0x08)
	struct UAISense* SenseForAutoTargeting; // 0x5d0(0x08)
	struct AActor* LockOnReticleActorClass; // 0x5d8(0x08)
	struct AActor_LockOnReticle* LockOnReticleActor; // 0x5e0(0x08)
	float LockOnReticleLookAtSpeedScalar; // 0x5e8(0x04)
	bool bAllowLockOn; // 0x5ec(0x01)
	char pad_5ED[0x3]; // 0x5ed(0x03)
	struct AOnScreenObjectIndicator* OppugnoIndicatorClass; // 0x5f0(0x08)
	struct AOnScreenObjectIndicator* OppugnoIndicatorActor; // 0x5f8(0x08)
	bool bTargetingCameraAllowed; // 0x600(0x01)
	char pad_601[0x3]; // 0x601(0x03)
	float AutoTargetDistance; // 0x604(0x04)
	float ReticuleVerticalScreenPosition; // 0x608(0x04)
	bool DoingAutoTargeting; // 0x60c(0x01)
	char pad_60D[0x3]; // 0x60d(0x03)
	struct TArray<struct UCogGroupEvaluation*> ShadowBlinkTargetEvaluationArray; // 0x610(0x10)
	char pad_620[0x10]; // 0x620(0x10)
	bool bNearInteractable; // 0x630(0x01)
	char pad_631[0x7]; // 0x631(0x07)
	struct AActor* CurrentInteractTarget; // 0x638(0x08)
	float InteractionRange; // 0x640(0x04)
	char pad_644[0x30c]; // 0x644(0x30c)

	void TutorialAutoTargetBitChanged(bool bNewValue); // Function Phoenix.Biped_PlayerController.TutorialAutoTargetBitChanged // (Final|Native|Public) // @ game+0x3217280
	void TargetSighted(struct UAISense* Sense, struct AActor* Target); // Function Phoenix.Biped_PlayerController.TargetSighted // (Final|Native|Public) // @ game+0x32171b0
	void TargetLost(struct UAISense* Sense, struct AActor* OldTarget); // Function Phoenix.Biped_PlayerController.TargetLost // (Final|Native|Public) // @ game+0x32170e0
	void TargetChanged(struct UAISense* Sense, struct AActor* NewTarget, struct AActor* OldTarget); // Function Phoenix.Biped_PlayerController.TargetChanged // (Final|Native|Public) // @ game+0x3216fd0
	void StickClick(bool bOnlyOn, bool bOnlyOff); // Function Phoenix.Biped_PlayerController.StickClick // (Final|Native|Public|BlueprintCallable) // @ game+0x3216e00
	void StartSettingSpecialAutoTarget(struct AActor* InSpecialActor, struct UObject* Provider); // Function Phoenix.Biped_PlayerController.StartSettingSpecialAutoTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3216d30
	void StartSettingAutoTargetAlwaysTargetActor(struct AActor* InTargetActor, struct UObject* Provider); // Function Phoenix.Biped_PlayerController.StartSettingAutoTargetAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3216c60
	void StartAimModeTimeDilation(float Dilation, float EaseIn); // Function Phoenix.Biped_PlayerController.StartAimModeTimeDilation // (Final|Native|Public|BlueprintCallable) // @ game+0x3216b90
	void SetTargetingMode(enum class ETargetingMode InMode, bool bLockOnInAimMode); // Function Phoenix.Biped_PlayerController.SetTargetingMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3216a30
	void SetSpecialAutoTarget(struct AActor* InSpecialActor); // Function Phoenix.Biped_PlayerController.SetSpecialAutoTarget // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32169a0
	void SetSenseEnabled(struct UAISense_CogGroup* InSense, bool bInFlag, bool bInForce); // Function Phoenix.Biped_PlayerController.SetSenseEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3216890
	void SetOppugnoAlwaysTargetActor(struct AActor* InActor); // Function Phoenix.Biped_PlayerController.SetOppugnoAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3216800
	void SetInteractStickyTarget(bool bSet); // Function Phoenix.Biped_PlayerController.SetInteractStickyTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3216770
	void SetCameraRotation(struct FRotator& DesiredRotation); // Function Phoenix.Biped_PlayerController.SetCameraRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32166e0
	void SetCameraLookAt_TimeBased(struct FVector& LookAtPoint, float LookAtTime); // Function Phoenix.Biped_PlayerController.SetCameraLookAt_TimeBased // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3216600
	void SetCameraLookAt_ActorAndTime(struct AActor* LookAtActor, float LookAtTime); // Function Phoenix.Biped_PlayerController.SetCameraLookAt_ActorAndTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3216530
	void SetCameraLookAt_Actor(struct AActor* LookAtActor, float SpeedScalar); // Function Phoenix.Biped_PlayerController.SetCameraLookAt_Actor // (Final|Native|Public|BlueprintCallable) // @ game+0x3216460
	void SetCameraLookAt(struct FVector& LookAtPoint, float SpeedScalar); // Function Phoenix.Biped_PlayerController.SetCameraLookAt // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3216380
	void SetAutoTargetAlwaysTargetActor(struct AActor* InActor); // Function Phoenix.Biped_PlayerController.SetAutoTargetAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32162f0
	void ResetCameraRotation(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_PlayerController.ResetCameraRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x3216220
	void ReleaseLockFromTarget(enum class ELockOnReticleType InLockOnType); // Function Phoenix.Biped_PlayerController.ReleaseLockFromTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x32161a0
	void ReleaseCameraLookAt(); // Function Phoenix.Biped_PlayerController.ReleaseCameraLookAt // (Final|Native|Public|BlueprintCallable) // @ game+0x3216180
	void PawnTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.Biped_PlayerController.PawnTeleported // (Final|Native|Public|HasDefaults) // @ game+0x3216050
	void OnInteractTargetRegistered(struct AActor* InTarget); // Function Phoenix.Biped_PlayerController.OnInteractTargetRegistered // (Final|Native|Public) // @ game+0x3215fc0
	void OnCurtainLowered(); // Function Phoenix.Biped_PlayerController.OnCurtainLowered // (Final|Native|Public) // @ game+0x3215fa0
	void MaxSpeedChanged(float InSpeed); // Function Phoenix.Biped_PlayerController.MaxSpeedChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x3215f20
	void LockOntoAutoTargetActor(enum class ELockOnReticleType InLockOnType, struct AActor* AutoTargetActor); // Function Phoenix.Biped_PlayerController.LockOntoAutoTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3215e50
	void IsTargetCritical(struct AActor* Target); // Function Phoenix.Biped_PlayerController.IsTargetCritical // (Final|Native|Public) // @ game+0x3215dc0
	bool IsSenseEnabled(struct UAISense_CogGroup* InSense); // Function Phoenix.Biped_PlayerController.IsSenseEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3215d20
	bool IsPlayerInAnimagusForm(struct UObject* WorldContextObject); // Function Phoenix.Biped_PlayerController.IsPlayerInAnimagusForm // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f044a0
	bool IsLockedOntoTarget(); // Function Phoenix.Biped_PlayerController.IsLockedOntoTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3215cf0
	bool IsActorInBestList(struct UAISense* SenseClass, struct AActor* TestActor); // Function Phoenix.Biped_PlayerController.IsActorInBestList // (Final|Native|Public|BlueprintCallable) // @ game+0x3215bf0
	void HermesOnForcedConversationDelegate__DelegateSignature(struct UObject* Caller, struct FForcedConversation& FForcedConversation); // DelegateFunction Phoenix.Biped_PlayerController.HermesOnForcedConversationDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesBindForcedConversation(struct FDelegate Delegate_OnForcedConversation, struct UObject* InOwner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.Biped_PlayerController.HermesBindForcedConversation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3215ac0
	struct UAISense_CogGroup_TargetOfInterest* GetTargetOfInterestSense(); // Function Phoenix.Biped_PlayerController.GetTargetOfInterestSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3215a60
	struct UAISense_CogGroup_Station* GetStationInteractSense(); // Function Phoenix.Biped_PlayerController.GetStationInteractSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3215a40
	struct UPlayerInput* GetPlayerInput(); // Function Phoenix.Biped_PlayerController.GetPlayerInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215a20
	struct AActor* GetOppugnoAlwaysTargetActor(); // Function Phoenix.Biped_PlayerController.GetOppugnoAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32159f0
	struct AActor* GetLockedOnActor(); // Function Phoenix.Biped_PlayerController.GetLockedOnActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32159c0
	bool GetLastValidMountLocation(struct FVector& OutLocation); // Function Phoenix.Biped_PlayerController.GetLastValidMountLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215920
	struct FRotator GetLastControlRotation(); // Function Phoenix.Biped_PlayerController.GetLastControlRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32158f0
	struct UAISense_CogGroup_Interact* GetInteractSense(); // Function Phoenix.Biped_PlayerController.GetInteractSense // (Final|Native|Public|BlueprintCallable) // @ game+0x32158d0
	struct UAISense_CogGroup_Climb* GetClimbSense(); // Function Phoenix.Biped_PlayerController.GetClimbSense // (Final|Native|Public|BlueprintCallable) // @ game+0x32158b0
	struct AActor* GetBestReparoActor(); // Function Phoenix.Biped_PlayerController.GetBestReparoActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215880
	struct AActor* GetBestOppugnoActor(); // Function Phoenix.Biped_PlayerController.GetBestOppugnoActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215850
	struct AActor* GetBestLockOnActor(); // Function Phoenix.Biped_PlayerController.GetBestLockOnActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215820
	struct FVector GetBestAutoTargetActor_WorldLocation(); // Function Phoenix.Biped_PlayerController.GetBestAutoTargetActor_WorldLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32157e0
	struct AActor* GetBestAutoTargetActor(); // Function Phoenix.Biped_PlayerController.GetBestAutoTargetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32157b0
	struct UAISense_CogGroup_AutoTarget* GetAutoTargetSense(); // Function Phoenix.Biped_PlayerController.GetAutoTargetSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3215790
	struct UAISense_CogGroup_Aim* GetAimSense(); // Function Phoenix.Biped_PlayerController.GetAimSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3215770
	float GetAimBlendParameter(); // Function Phoenix.Biped_PlayerController.GetAimBlendParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x3215740
	void FullyResetCamera(float ResetSpeed, struct UCurveFloat* ResetSpeedCurve); // Function Phoenix.Biped_PlayerController.FullyResetCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x3215670
	void FlushInputKeys(); // Function Phoenix.Biped_PlayerController.FlushInputKeys // (Final|Native|Public|BlueprintCallable) // @ game+0x3215650
	bool FlickToTarget(struct FVector2D StickFlickDirection); // Function Phoenix.Biped_PlayerController.FlickToTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32155c0
	void FinishSettingSpecialAutoTarget(struct UObject* Provider); // Function Phoenix.Biped_PlayerController.FinishSettingSpecialAutoTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3215530
	void FinishSettingAutoTargetAlwaysTargetActor(struct UObject* Provider); // Function Phoenix.Biped_PlayerController.FinishSettingAutoTargetAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32154a0
	void FinishAimModeTimeDilation(float EaseOut); // Function Phoenix.Biped_PlayerController.FinishAimModeTimeDilation // (Final|Native|Public|BlueprintCallable) // @ game+0x3215420
	void ClearOppugnoAlwaysTargetActor(); // Function Phoenix.Biped_PlayerController.ClearOppugnoAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3215400
	void ClearAutoTargetAlwaysTargetActor(); // Function Phoenix.Biped_PlayerController.ClearAutoTargetAlwaysTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32153e0
	void CanStickReset(bool& bCanReset); // Function Phoenix.Biped_PlayerController.CanStickReset // (Final|Native|Public|HasOutParms) // @ game+0x3215350
	void AutoTarget_UseShadowBlinkEval(); // Function Phoenix.Biped_PlayerController.AutoTarget_UseShadowBlinkEval // (Final|Native|Public|BlueprintCallable) // @ game+0x3215330
	void AutoTarget_UseDefaultUpDirectionClass(); // Function Phoenix.Biped_PlayerController.AutoTarget_UseDefaultUpDirectionClass // (Final|Native|Public|BlueprintCallable) // @ game+0x3215310
	void AutoTarget_UseDefaultPerceiverPointClass(); // Function Phoenix.Biped_PlayerController.AutoTarget_UseDefaultPerceiverPointClass // (Final|Native|Public|BlueprintCallable) // @ game+0x32152f0
	void AutoTarget_UseDefaultFocusDirectionClass(); // Function Phoenix.Biped_PlayerController.AutoTarget_UseDefaultFocusDirectionClass // (Final|Native|Public|BlueprintCallable) // @ game+0x32152d0
	void AutoTarget_UseDefaultEval(); // Function Phoenix.Biped_PlayerController.AutoTarget_UseDefaultEval // (Final|Native|Public|BlueprintCallable) // @ game+0x32152b0
	void AutoTarget_SetUpDirectionClass(struct UCogGroupUpDirection* InUpDirectionClass); // Function Phoenix.Biped_PlayerController.AutoTarget_SetUpDirectionClass // (Final|Native|Public|BlueprintCallable) // @ game+0x3215220
	void AutoTarget_SetPerceiverPointClass(struct UCogGroupPerceiverPoint* InPerceiverPointClass); // Function Phoenix.Biped_PlayerController.AutoTarget_SetPerceiverPointClass // (Final|Native|Public|BlueprintCallable) // @ game+0x3215190
	void AutoTarget_SetFocusDirectionClass(struct UCogGroupFocusDirection* InFocusDirectionClass); // Function Phoenix.Biped_PlayerController.AutoTarget_SetFocusDirectionClass // (Final|Native|Public|BlueprintCallable) // @ game+0x3215100
	void AllowLockOn(bool bFlag); // Function Phoenix.Biped_PlayerController.AllowLockOn // (Final|Native|Public|BlueprintCallable) // @ game+0x3215070
	void ActivateReparoSense(bool bFlag, bool bForce); // Function Phoenix.Biped_PlayerController.ActivateReparoSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3214fa0
	void ActivateOppugnoSense(bool bFlag, bool bForce); // Function Phoenix.Biped_PlayerController.ActivateOppugnoSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3214ed0
	void ActivateInteractSense(bool bFlag, bool bForce); // Function Phoenix.Biped_PlayerController.ActivateInteractSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3214e00
	void ActivateClimbSense(bool bFlag, bool bForce); // Function Phoenix.Biped_PlayerController.ActivateClimbSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3214d30
	void ActivateAutoTargetSense(bool bFlag, bool bForce); // Function Phoenix.Biped_PlayerController.ActivateAutoTargetSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3214c60
};

// Class Phoenix.BipedStateComponent
// Size: 0x8b0 (Inherited: 0x5a0)
struct UBipedStateComponent : UBaseStateComponent {
	struct FBipedStateData BipedStateData; // 0x5a0(0x280)
	struct FDbSingleColumnInfo TeamAsset; // 0x820(0x88)
	char pad_8A8[0x8]; // 0x8a8(0x08)

	void SetTeamName(struct FName InTeamName); // Function Phoenix.BipedStateComponent.SetTeamName // (Final|Native|Public) // @ game+0x3216b00
	struct FName GetTeamName(); // Function Phoenix.BipedStateComponent.GetTeamName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3215a80
};

// Class Phoenix.ObjectStateDataContainerBase
// Size: 0x28 (Inherited: 0x28)
struct UObjectStateDataContainerBase : UObject {
};

// Class Phoenix.BipedStateDataContainer
// Size: 0x2a8 (Inherited: 0x28)
struct UBipedStateDataContainer : UObjectStateDataContainerBase {
	struct FBipedStateData Data; // 0x28(0x280)
};

// Class Phoenix.ObjectStateInfo
// Size: 0x1e0 (Inherited: 0x28)
struct UObjectStateInfo : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnDestruct; // 0x30(0x10)
	struct FMulticastInlineDelegate OnRepair; // 0x40(0x10)
	struct FMulticastInlineDelegate OnHealthChanged; // 0x50(0x10)
	struct FMulticastInlineDelegate OnActorDamaged; // 0x60(0x10)
	struct FMulticastInlineDelegate OnEndAffectingSpells; // 0x70(0x10)
	struct FMulticastInlineDelegate OnEpiskeyHealing; // 0x80(0x10)
	struct FMulticastInlineDelegate OnActorRemoved; // 0x90(0x10)
	struct FMulticastInlineDelegate InWaterChangedDelegate; // 0xa0(0x10)
	enum class EWidgetType WidgetType; // 0xb0(0x01)
	char pad_B1[0x7f]; // 0xb1(0x7f)
	struct UMaterialPropertyData* MaterialPropertyData; // 0x130(0x08)
	struct AActor* Actor; // 0x138(0x08)
	struct TArray<struct FSavedMaterialsForMesh> SavedMaterialForMeshArray; // 0x140(0x10)
	struct UObjectStateDataContainerBase* ObjectStateData; // 0x150(0x08)
	char pad_158[0x18]; // 0x158(0x18)
	struct TArray<struct UActorComponent*> DynamicNavigationComponents; // 0x170(0x10)
	struct UOdcObstacleComponent* OdcObstacleComponent; // 0x180(0x08)
	struct URepairInfo* RepairInfo; // 0x188(0x08)
	struct UOdcObstacleComponent* DynamicNavigationAreaObstacleComponent; // 0x190(0x08)
	char pad_198[0x48]; // 0x198(0x48)

	bool WillRevealThruWalls(); // Function Phoenix.ObjectStateInfo.WillRevealThruWalls // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b7a30
	bool WillNearDeathKneel(); // Function Phoenix.ObjectStateInfo.WillNearDeathKneel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b7a00
	bool WasOnFireWhenKilled(); // Function Phoenix.ObjectStateInfo.WasOnFireWhenKilled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b79d0
	void UpdateUsability(); // Function Phoenix.ObjectStateInfo.UpdateUsability // (Final|Native|Public|BlueprintCallable) // @ game+0x33b79b0
	void UpdateActivation(); // Function Phoenix.ObjectStateInfo.UpdateActivation // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7990
	bool Unlock(float Value); // Function Phoenix.ObjectStateInfo.Unlock // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7900
	bool TreatAsCharacterForDamage(); // Function Phoenix.ObjectStateInfo.TreatAsCharacterForDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b78d0
	bool Thaw(); // Function Phoenix.ObjectStateInfo.Thaw // (Native|Public|BlueprintCallable) // @ game+0x23669b0
	bool TakeDamageFromCharacterCollisions(); // Function Phoenix.ObjectStateInfo.TakeDamageFromCharacterCollisions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b7880
	bool ShouldCreateCrimescene(struct AActor* Instigator); // Function Phoenix.ObjectStateInfo.ShouldCreateCrimescene // (Final|Native|Public|BlueprintCallable) // @ game+0x33b77e0
	void SetupSfx(struct UAkComponent* AkComponent); // Function Phoenix.ObjectStateInfo.SetupSfx // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7750
	void SetUnusable(float RestoreUsabilityTime); // Function Phoenix.ObjectStateInfo.SetUnusable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b76d0
	void SetTransformable(bool bTransform); // Function Phoenix.ObjectStateInfo.SetTransformable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7620
	void SetTargetable(bool bTargetable); // Function Phoenix.ObjectStateInfo.SetTargetable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7590
	void SetSpecialTargetPerceptionActive(bool bActive); // Function Phoenix.ObjectStateInfo.SetSpecialTargetPerceptionActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7500
	void SetSizeClass(enum class EObjectSizeClass NewSizeClass); // Function Phoenix.ObjectStateInfo.SetSizeClass // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7480
	void SetShowTargetUI(bool ShowUI); // Function Phoenix.ObjectStateInfo.SetShowTargetUI // (Final|Native|Public|BlueprintCallable) // @ game+0x33b73d0
	void SetSendTargetPriority(char Priority); // Function Phoenix.ObjectStateInfo.SetSendTargetPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7350
	void SetRepairInPlace(bool bInPlace); // Function Phoenix.ObjectStateInfo.SetRepairInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7220
	void SetRepairable(bool Repairable); // Function Phoenix.ObjectStateInfo.SetRepairable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b72c0
	void SetProtectedFromDamageAndSpells(bool bInProtected, struct UObject* InInstigator); // Function Phoenix.ObjectStateInfo.SetProtectedFromDamageAndSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x33b7150
	void SetPersistence(bool InPersistence); // Function Phoenix.ObjectStateInfo.SetPersistence // (Final|Native|Public|BlueprintCallable) // @ game+0x33b70a0
	void SetPercentCharred(float PercentCharred); // Function Phoenix.ObjectStateInfo.SetPercentCharred // (Native|Public|BlueprintCallable) // @ game+0x33b7010
	void SetMinOptimumAvatarDistance(float Distance); // Function Phoenix.ObjectStateInfo.SetMinOptimumAvatarDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6f50
	void SetMinDamageThreshold(float Threshold); // Function Phoenix.ObjectStateInfo.SetMinDamageThreshold // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6e90
	void SetMaxOptimumAvatarDistance(float Distance); // Function Phoenix.ObjectStateInfo.SetMaxOptimumAvatarDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6dd0
	void SetMaterialSwapped(bool bInMaterialSwapped); // Function Phoenix.ObjectStateInfo.SetMaterialSwapped // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6d40
	void SetMarkupValue(enum class EMarkupType MarkupType, float InValue); // Function Phoenix.ObjectStateInfo.SetMarkupValue // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6c70
	bool SetLocked(); // Function Phoenix.ObjectStateInfo.SetLocked // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6c40
	void SetJuggernaut(bool bInJuggernaut); // Function Phoenix.ObjectStateInfo.SetJuggernaut // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6bb0
	void SetIsABoss(bool bInIsABoss); // Function Phoenix.ObjectStateInfo.SetIsABoss // (Native|Public|BlueprintCallable) // @ game+0x33b6b20
	void SetInWaterVolume(bool inWater); // Function Phoenix.ObjectStateInfo.SetInWaterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6970
	void SetInWater(bool inWater, struct AActor* Instigator); // Function Phoenix.ObjectStateInfo.SetInWater // (Final|Native|Public|BlueprintCallable) // @ game+0x33b68a0
	void SetInvulnerableToDamage(bool Invulnerable); // Function Phoenix.ObjectStateInfo.SetInvulnerableToDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6a90
	bool SetInvulnerable(float InInvulnerableTime); // Function Phoenix.ObjectStateInfo.SetInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6a00
	void SetImpulseIgnoreTime(float Time); // Function Phoenix.ObjectStateInfo.SetImpulseIgnoreTime // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6820
	void SetImmuneToSpells(bool bImmune); // Function Phoenix.ObjectStateInfo.SetImmuneToSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6770
	void SetImmuneToEverythingExcept(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ObjectStateInfo.SetImmuneToEverythingExcept // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b66b0
	void SetHighlightWhenBroken(bool bHighlightWhenBroken); // Function Phoenix.ObjectStateInfo.SetHighlightWhenBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6620
	void SetHidden(bool bHidden); // Function Phoenix.ObjectStateInfo.SetHidden // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6590
	void SetHealthBarType(enum class EUIHealthBarType InType); // Function Phoenix.ObjectStateInfo.SetHealthBarType // (Native|Public|BlueprintCallable) // @ game+0x33b6510
	bool SetHealth(float Amount, bool bIndicateHUD); // Function Phoenix.ObjectStateInfo.SetHealth // (Native|Public|BlueprintCallable) // @ game+0x33b6430
	void SetFragile(bool Fragile); // Function Phoenix.ObjectStateInfo.SetFragile // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6380
	void SetForceNotBroken(bool bNotBroken); // Function Phoenix.ObjectStateInfo.SetForceNotBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x33b62f0
	void SetForceBroken(bool bBroken); // Function Phoenix.ObjectStateInfo.SetForceBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6260
	void SetFlammable(enum class EFlammableEnum InFlammable); // Function Phoenix.ObjectStateInfo.SetFlammable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b61b0
	void SetExplode(bool bInExplode); // Function Phoenix.ObjectStateInfo.SetExplode // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6100
	void SetEquipped(bool bInEquipped); // Function Phoenix.ObjectStateInfo.SetEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x33b6070
	void SetDieInWater(bool DieInWater); // Function Phoenix.ObjectStateInfo.SetDieInWater // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5fc0
	void SetDestructibleMeshByName(struct FString DestuctibleMeshName); // Function Phoenix.ObjectStateInfo.SetDestructibleMeshByName // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5ed0
	void SetDestructibleGeometryCollection(struct UGeometryCollection* DestructibleGeometryCollection); // Function Phoenix.ObjectStateInfo.SetDestructibleGeometryCollection // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5e40
	void SetDestroyedBaseByName(struct FString BaseName); // Function Phoenix.ObjectStateInfo.SetDestroyedBaseByName // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5d50
	void SetDestroyedBase(struct UStaticMesh* Base); // Function Phoenix.ObjectStateInfo.SetDestroyedBase // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5cc0
	void SetDazed(bool bInDazed); // Function Phoenix.ObjectStateInfo.SetDazed // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5c30
	void SetDamagable(bool Damagable); // Function Phoenix.ObjectStateInfo.SetDamagable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5b80
	void SetCurrentlyTargeted(bool CurrentlyTargeted); // Function Phoenix.ObjectStateInfo.SetCurrentlyTargeted // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5ad0
	void SetCanHighlight(bool bCanHighlight); // Function Phoenix.ObjectStateInfo.SetCanHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5a40
	void SetCanBecomeMovable(bool bCanBecomeMovable); // Function Phoenix.ObjectStateInfo.SetCanBecomeMovable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5990
	void SetBlocking(bool bInBlocking); // Function Phoenix.ObjectStateInfo.SetBlocking // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	void SetBaseHealth(float Health); // Function Phoenix.ObjectStateInfo.SetBaseHealth // (Native|Public|BlueprintCallable) // @ game+0x33b5900
	void RestoreUsability(bool repeat); // Function Phoenix.ObjectStateInfo.RestoreUsability // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5870
	void RestoreMaterial(); // Function Phoenix.ObjectStateInfo.RestoreMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5850
	void Reset(bool bOriginalLocation); // Function Phoenix.ObjectStateInfo.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x33b57c0
	bool RepairChildren(); // Function Phoenix.ObjectStateInfo.RepairChildren // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b5780
	void Repair(struct AActor* RepairInstigator, int32_t Item, bool Aoe, bool InOriginalLocation, bool InAutoComplete); // Function Phoenix.ObjectStateInfo.Repair // (Final|Native|Public|BlueprintCallable) // @ game+0x33b55d0
	void RemoveMagicEffects(struct TArray<struct UStateEffectComponent*>& EffectTypeList); // Function Phoenix.ObjectStateInfo.RemoveMagicEffects // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b5520
	void RemoveMagic(); // Function Phoenix.ObjectStateInfo.RemoveMagic // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5500
	void RemoveImmunity(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ObjectStateInfo.RemoveImmunity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b5440
	void RemoveImmuneUnlessCritical(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ObjectStateInfo.RemoveImmuneUnlessCritical // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b5380
	void RemoveAllStateEffects(); // Function Phoenix.ObjectStateInfo.RemoveAllStateEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5360
	void RemoveAllImmunity(); // Function Phoenix.ObjectStateInfo.RemoveAllImmunity // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5340
	void RemoveAllImmuneUnlessCritical(); // Function Phoenix.ObjectStateInfo.RemoveAllImmuneUnlessCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x33b5320
	void RemoveActorMagicEffects(struct AActor* InActor, struct TArray<struct UStateEffectComponent*>& EffectTypeList); // Function Phoenix.ObjectStateInfo.RemoveActorMagicEffects // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33b5240
	void OnRepair__DelegateSignature(struct AActor* RepairedActor); // DelegateFunction Phoenix.ObjectStateInfo.OnRepair__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnRemoved__DelegateSignature(struct AActor* DestroyedActor); // DelegateFunction Phoenix.ObjectStateInfo.OnRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnMunitionImpactDamage(struct UObject* i_caller, struct FMunitionImpactData& miData); // Function Phoenix.ObjectStateInfo.OnMunitionImpactDamage // (Native|Public|HasOutParms) // @ game+0x33b50b0
	void OnHealthChanged__DelegateSignature(struct AActor* Target, float InHealthChange, bool bIndicateHUD); // DelegateFunction Phoenix.ObjectStateInfo.OnHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnEspiskeyHealing__DelegateSignature(struct AActor* Instigator, float InHealthChange, struct AActor* Target); // DelegateFunction Phoenix.ObjectStateInfo.OnEspiskeyHealing__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnDestruct__DelegateSignature(struct AActor* DestroyedActor); // DelegateFunction Phoenix.ObjectStateInfo.OnDestruct__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnCurtainRaised(); // Function Phoenix.ObjectStateInfo.OnCurtainRaised // (Final|Native|Protected) // @ game+0x33b5090
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.ObjectStateInfo.OnActorHit // (Native|Public|HasOutParms|HasDefaults) // @ game+0x33b4ef0
	void OnActorDamaged__DelegateSignature(struct AActor* Target, struct AActor* Instigator, float Damage, struct FHitResult& Hit); // DelegateFunction Phoenix.ObjectStateInfo.OnActorDamaged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x38a7480
	void NotifyCriticalHit(); // Function Phoenix.ObjectStateInfo.NotifyCriticalHit // (Final|Native|Public|BlueprintCallable) // @ game+0x33b4e40
	bool IsWaterproof(); // Function Phoenix.ObjectStateInfo.IsWaterproof // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4e10
	bool IsUsableWhenRepaired(); // Function Phoenix.ObjectStateInfo.IsUsableWhenRepaired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4de0
	bool IsUsable(); // Function Phoenix.ObjectStateInfo.IsUsable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4db0
	bool IsUnusable(); // Function Phoenix.ObjectStateInfo.IsUnusable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4d80
	bool IsTransformable(); // Function Phoenix.ObjectStateInfo.IsTransformable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4d30
	bool IsTargetableWhenBroken(); // Function Phoenix.ObjectStateInfo.IsTargetableWhenBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4d00
	bool IsTargetable(); // Function Phoenix.ObjectStateInfo.IsTargetable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4cb0
	bool IsSpecialTargetPerceptionActive(); // Function Phoenix.ObjectStateInfo.IsSpecialTargetPerceptionActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4c60
	bool IsSimulatingPhysics(); // Function Phoenix.ObjectStateInfo.IsSimulatingPhysics // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4c30
	bool IsRevelioResource(); // Function Phoenix.ObjectStateInfo.IsRevelioResource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4be0
	bool IsResurrecting(); // Function Phoenix.ObjectStateInfo.IsResurrecting // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4bb0
	bool IsRepairInPlace(); // Function Phoenix.ObjectStateInfo.IsRepairInPlace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4b00
	bool IsRepairing(); // Function Phoenix.ObjectStateInfo.IsRepairing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4b80
	bool IsRepairable(); // Function Phoenix.ObjectStateInfo.IsRepairable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4b40
	bool IsProtectedFromDeath(); // Function Phoenix.ObjectStateInfo.IsProtectedFromDeath // (Native|Public|BlueprintCallable) // @ game+0x33b4ad0
	bool IsProtectedFromDamageAndSpells(); // Function Phoenix.ObjectStateInfo.IsProtectedFromDamageAndSpells // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c950
	bool IsProtectedCompanion(); // Function Phoenix.ObjectStateInfo.IsProtectedCompanion // (Native|Public|BlueprintCallable) // @ game+0x33b4aa0
	bool IsPointOnFire(struct FVector& Point, bool LimitToRing); // Function Phoenix.ObjectStateInfo.IsPointOnFire // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b49c0
	bool IsPetrified(); // Function Phoenix.ObjectStateInfo.IsPetrified // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4990
	bool IsPartiallyBroken(); // Function Phoenix.ObjectStateInfo.IsPartiallyBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4960
	bool IsOnFire(); // Function Phoenix.ObjectStateInfo.IsOnFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4930
	bool IsObstacleDisabled(); // Function Phoenix.ObjectStateInfo.IsObstacleDisabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33b4900
	bool IsObjectTypeWater(); // Function Phoenix.ObjectStateInfo.IsObjectTypeWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b48d0
	bool IsObjectTypePlant(); // Function Phoenix.ObjectStateInfo.IsObjectTypePlant // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b48a0
	bool IsObjectTypeInanimate(); // Function Phoenix.ObjectStateInfo.IsObjectTypeInanimate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4870
	bool IsObjectTypeAnimate(); // Function Phoenix.ObjectStateInfo.IsObjectTypeAnimate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4840
	bool IsNoDamageBreakable(); // Function Phoenix.ObjectStateInfo.IsNoDamageBreakable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b47f0
	bool IsNearDeathKneeling(); // Function Phoenix.ObjectStateInfo.IsNearDeathKneeling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b47c0
	bool IsMovable(); // Function Phoenix.ObjectStateInfo.IsMovable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4790
	bool IsMounted(); // Function Phoenix.ObjectStateInfo.IsMounted // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4760
	bool IsMaterialSwapped(); // Function Phoenix.ObjectStateInfo.IsMaterialSwapped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4730
	bool IsLocked(); // Function Phoenix.ObjectStateInfo.IsLocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4700
	bool IsLevitating(); // Function Phoenix.ObjectStateInfo.IsLevitating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b46d0
	bool IsInWaterVolume(); // Function Phoenix.ObjectStateInfo.IsInWaterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4610
	bool IsInWater(); // Function Phoenix.ObjectStateInfo.IsInWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b45e0
	bool IsInvulnerableToDamage(); // Function Phoenix.ObjectStateInfo.IsInvulnerableToDamage // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b46a0
	bool IsInvulnerable(); // Function Phoenix.ObjectStateInfo.IsInvulnerable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4670
	bool IsInteractive(); // Function Phoenix.ObjectStateInfo.IsInteractive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4640
	bool IsInNeedOfRepair(); // Function Phoenix.ObjectStateInfo.IsInNeedOfRepair // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b45b0
	bool IsImperiousControlled(); // Function Phoenix.ObjectStateInfo.IsImperiousControlled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4580
	bool IsImmuneToSpells(); // Function Phoenix.ObjectStateInfo.IsImmuneToSpells // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4530
	bool IsImmuneToFireDamage(); // Function Phoenix.ObjectStateInfo.IsImmuneToFireDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4500
	bool IsHidden(); // Function Phoenix.ObjectStateInfo.IsHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b44b0
	bool IsHealthZero(); // Function Phoenix.ObjectStateInfo.IsHealthZero // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4480
	bool IsHealthCritical(bool bIgnorePendingDamage); // Function Phoenix.ObjectStateInfo.IsHealthCritical // (Native|Public|BlueprintCallable) // @ game+0x33b43e0
	bool IsFrozen(); // Function Phoenix.ObjectStateInfo.IsFrozen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b43b0
	bool IsFreezable(); // Function Phoenix.ObjectStateInfo.IsFreezable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4380
	bool IsFragile(); // Function Phoenix.ObjectStateInfo.IsFragile // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4330
	bool IsFlammable(); // Function Phoenix.ObjectStateInfo.IsFlammable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4300
	bool IsFightClubOpponent(); // Function Phoenix.ObjectStateInfo.IsFightClubOpponent // (Native|Public|BlueprintCallable) // @ game+0x33b42d0
	bool IsFallDamageDisabled(); // Function Phoenix.ObjectStateInfo.IsFallDamageDisabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b42b0
	bool IsEquipped(); // Function Phoenix.ObjectStateInfo.IsEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4280
	bool IsDisillusioned(); // Function Phoenix.ObjectStateInfo.IsDisillusioned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4250
	bool IsDead(); // Function Phoenix.ObjectStateInfo.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4220
	bool IsDazed(); // Function Phoenix.ObjectStateInfo.IsDazed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b41f0
	bool IsDamagableWhenFrozen(); // Function Phoenix.ObjectStateInfo.IsDamagableWhenFrozen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4190
	bool IsDamagableWhenCharred(); // Function Phoenix.ObjectStateInfo.IsDamagableWhenCharred // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4130
	bool IsDamagableInPieces(); // Function Phoenix.ObjectStateInfo.IsDamagableInPieces // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b40e0
	bool IsDamagable(); // Function Phoenix.ObjectStateInfo.IsDamagable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4090
	bool IsCuttable(); // Function Phoenix.ObjectStateInfo.IsCuttable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aa190
	bool IsCursed(); // Function Phoenix.ObjectStateInfo.IsCursed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4060
	bool IsCrucioed(); // Function Phoenix.ObjectStateInfo.IsCrucioed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b4030
	bool IsCommonBreakable(); // Function Phoenix.ObjectStateInfo.IsCommonBreakable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3ff0
	bool IsCombatCursed(); // Function Phoenix.ObjectStateInfo.IsCombatCursed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3fc0
	bool IsCharred(); // Function Phoenix.ObjectStateInfo.IsCharred // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3f90
	bool IsCharacterOnGroundWithHitResult(struct AActor* InActor, struct FHitResult& OutHitResult); // Function Phoenix.ObjectStateInfo.IsCharacterOnGroundWithHitResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33b3e60
	bool IsCharacterOnGround(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.IsCharacterOnGround // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b3dd0
	bool IsBurning(); // Function Phoenix.ObjectStateInfo.IsBurning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3da0
	bool IsBrokenOrPartiallyBroken(); // Function Phoenix.ObjectStateInfo.IsBrokenOrPartiallyBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3d40
	bool IsBroken(); // Function Phoenix.ObjectStateInfo.IsBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3d10
	bool IsBlocking(); // Function Phoenix.ObjectStateInfo.IsBlocking // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3ce0
	bool IsBeingAffectedBySpells(); // Function Phoenix.ObjectStateInfo.IsBeingAffectedBySpells // (Final|Native|Public|BlueprintCallable) // @ game+0x33b3cb0
	bool IsAWolf(); // Function Phoenix.ObjectStateInfo.IsAWolf // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b39a0
	bool IsAWizard(); // Function Phoenix.ObjectStateInfo.IsAWizard // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3970
	bool IsAwake(); // Function Phoenix.ObjectStateInfo.IsAwake // (Final|Native|Public|BlueprintCallable) // @ game+0x33b3c80
	bool IsATroll(); // Function Phoenix.ObjectStateInfo.IsATroll // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3940
	bool IsATransformedCharacter(); // Function Phoenix.ObjectStateInfo.IsATransformedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3910
	bool IsAStudent(); // Function Phoenix.ObjectStateInfo.IsAStudent // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b38e0
	bool IsAStation(); // Function Phoenix.ObjectStateInfo.IsAStation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b38b0
	bool IsASpider(); // Function Phoenix.ObjectStateInfo.IsASpider // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3880
	bool IsArrestoMomentumed(); // Function Phoenix.ObjectStateInfo.IsArrestoMomentumed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3c50
	bool IsARagdoll(); // Function Phoenix.ObjectStateInfo.IsARagdoll // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3850
	bool IsAProtectedCharacterWhichCannotDie(); // Function Phoenix.ObjectStateInfo.IsAProtectedCharacterWhichCannotDie // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3820
	bool IsAProfessor(); // Function Phoenix.ObjectStateInfo.IsAProfessor // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b37f0
	bool IsAPortraitCharacter(); // Function Phoenix.ObjectStateInfo.IsAPortraitCharacter // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b37c0
	bool IsAPlayer(); // Function Phoenix.ObjectStateInfo.IsAPlayer // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3790
	bool IsAPlant(); // Function Phoenix.ObjectStateInfo.IsAPlant // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3760
	bool IsAnOppugnoTarget(); // Function Phoenix.ObjectStateInfo.IsAnOppugnoTarget // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3c20
	bool IsAnInferi(); // Function Phoenix.ObjectStateInfo.IsAnInferi // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3bf0
	bool IsAnEnvironment(); // Function Phoenix.ObjectStateInfo.IsAnEnvironment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3bc0
	bool IsAnEnemy(); // Function Phoenix.ObjectStateInfo.IsAnEnemy // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3b90
	bool IsANamedCharacter(); // Function Phoenix.ObjectStateInfo.IsANamedCharacter // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1340980
	bool IsAMount(); // Function Phoenix.ObjectStateInfo.IsAMount // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3730
	bool IsAMagicalCreatureWhichCannotDie(); // Function Phoenix.ObjectStateInfo.IsAMagicalCreatureWhichCannotDie // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3700
	bool IsAlly(struct AActor* ActorPtr); // Function Phoenix.ObjectStateInfo.IsAlly // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3af0
	bool IsALeader(); // Function Phoenix.ObjectStateInfo.IsALeader // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b36d0
	bool IsAJuggernaut(); // Function Phoenix.ObjectStateInfo.IsAJuggernaut // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b36a0
	bool IsAHouseElf(); // Function Phoenix.ObjectStateInfo.IsAHouseElf // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3329980
	bool IsAHobo(); // Function Phoenix.ObjectStateInfo.IsAHobo // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3670
	bool IsAGoblin(); // Function Phoenix.ObjectStateInfo.IsAGoblin // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3640
	bool IsAGhost(); // Function Phoenix.ObjectStateInfo.IsAGhost // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3610
	bool IsADugbog(); // Function Phoenix.ObjectStateInfo.IsADugbog // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b35e0
	bool IsADragon(); // Function Phoenix.ObjectStateInfo.IsADragon // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fcda80
	bool IsADarkWizard(); // Function Phoenix.ObjectStateInfo.IsADarkWizard // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b35b0
	bool IsActorSimulatingPhysics(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.IsActorSimulatingPhysics // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b3a60
	bool IsActorLeviosoActive(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.IsActorLeviosoActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b39d0
	bool IsACreature(); // Function Phoenix.ObjectStateInfo.IsACreature // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3580
	bool IsACompanion(); // Function Phoenix.ObjectStateInfo.IsACompanion // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3550
	bool IsACharacter(); // Function Phoenix.ObjectStateInfo.IsACharacter // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3520
	bool IsACentaur(); // Function Phoenix.ObjectStateInfo.IsACentaur // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33299b0
	bool IsABossCharacter(); // Function Phoenix.ObjectStateInfo.IsABossCharacter // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1980b10
	bool IsABiped(); // Function Phoenix.ObjectStateInfo.IsABiped // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b34f0
	void InWaterChangedDelegate__DelegateSignature(struct UObjectStateInfo* ObjectStateInfo, bool bOldInWater); // DelegateFunction Phoenix.ObjectStateInfo.InWaterChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool IgnoreMunitionImpactEvents(); // Function Phoenix.ObjectStateInfo.IgnoreMunitionImpactEvents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b34a0
	bool IgnoreLimitedCountRules(); // Function Phoenix.ObjectStateInfo.IgnoreLimitedCountRules // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3450
	bool IgnoreActorHitEvents(); // Function Phoenix.ObjectStateInfo.IgnoreActorHitEvents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3400
	bool HasStateEffect(); // Function Phoenix.ObjectStateInfo.HasStateEffect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b33d0
	bool HasOnFireDoT(); // Function Phoenix.ObjectStateInfo.HasOnFireDoT // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b33a0
	bool HasBecomeMovable(); // Function Phoenix.ObjectStateInfo.HasBecomeMovable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3370
	bool HasAffectingSpells(); // Function Phoenix.ObjectStateInfo.HasAffectingSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x33b3340
	float GetWetness(); // Function Phoenix.ObjectStateInfo.GetWetness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3310
	struct UVelocityTrackerComponent* GetVelocityTracker(); // Function Phoenix.ObjectStateInfo.GetVelocityTracker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b32d0
	float GetUIHealthPercent(); // Function Phoenix.ObjectStateInfo.GetUIHealthPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b32a0
	struct FName GetType(); // Function Phoenix.ObjectStateInfo.GetType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3260
	float GetTodaysPlayerGainedSoCapCount(); // Function Phoenix.ObjectStateInfo.GetTodaysPlayerGainedSoCapCount // (Final|Native|Static|Public) // @ game+0x33b2eb0
	float GetStudentsInInfirmary(); // Function Phoenix.ObjectStateInfo.GetStudentsInInfirmary // (Final|Native|Static|Public) // @ game+0x33b3230
	bool GetStartAsleep(); // Function Phoenix.ObjectStateInfo.GetStartAsleep // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3200
	float GetSizeClassOnFireDestroyedDamage(); // Function Phoenix.ObjectStateInfo.GetSizeClassOnFireDestroyedDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b31d0
	struct AMunitionType_Base* GetSizeClassOnFireDestroyedAOE(); // Function Phoenix.ObjectStateInfo.GetSizeClassOnFireDestroyedAOE // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3190
	float GetSizeClassFireDamageMultiplier(); // Function Phoenix.ObjectStateInfo.GetSizeClassFireDamageMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3160
	enum class EObjectSizeClass GetSizeClass(); // Function Phoenix.ObjectStateInfo.GetSizeClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3130
	bool GetShowTargetUI(); // Function Phoenix.ObjectStateInfo.GetShowTargetUI // (Final|Native|Public|BlueprintCallable) // @ game+0x33b30e0
	char GetSendTargetPriority(); // Function Phoenix.ObjectStateInfo.GetSendTargetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3080
	float GetRawCurrentHealth(); // Function Phoenix.ObjectStateInfo.GetRawCurrentHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b3050
	bool GetRagdollInfo(struct FVector& Location, struct FVector& Velocity); // Function Phoenix.ObjectStateInfo.GetRagdollInfo // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b2f50
	struct FName GetRagdollBoneName(); // Function Phoenix.ObjectStateInfo.GetRagdollBoneName // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2f10
	float GetPlayerPottedPlants(); // Function Phoenix.ObjectStateInfo.GetPlayerPottedPlants // (Final|Native|Static|Public) // @ game+0x33b2ee0
	float GetPlayerFriendsCount(); // Function Phoenix.ObjectStateInfo.GetPlayerFriendsCount // (Final|Native|Static|Public) // @ game+0x33b2eb0
	float GetPlayerEnemiesCount(); // Function Phoenix.ObjectStateInfo.GetPlayerEnemiesCount // (Final|Native|Static|Public) // @ game+0x33b2eb0
	float GetPlayerConsecutiveEnemyHits(); // Function Phoenix.ObjectStateInfo.GetPlayerConsecutiveEnemyHits // (Final|Native|Static|Public) // @ game+0x33b2e80
	float GetPlayerCompletedFactSheets(); // Function Phoenix.ObjectStateInfo.GetPlayerCompletedFactSheets // (Final|Native|Static|Public) // @ game+0x33b2e50
	bool GetPersistence(); // Function Phoenix.ObjectStateInfo.GetPersistence // (Final|Native|Public|BlueprintCallable) // @ game+0x33b2e00
	float GetPercentCharred(); // Function Phoenix.ObjectStateInfo.GetPercentCharred // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2dc0
	struct UObjectStateInfoData* GetObjectStateInfoData(); // Function Phoenix.ObjectStateInfo.GetObjectStateInfoData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b2da0
	enum class ENoiseSize GetObjectNoiseSize(); // Function Phoenix.ObjectStateInfo.GetObjectNoiseSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2d70
	float GetNormalHarvestCount(); // Function Phoenix.ObjectStateInfo.GetNormalHarvestCount // (Final|Native|Static|Public) // @ game+0x33b2d40
	void GetNonScaledActorBounds(struct AActor* InActor, bool bOnlyCollidingComponents, struct FVector& Origin, struct FVector& BoxExtent); // Function Phoenix.ObjectStateInfo.GetNonScaledActorBounds // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b2be0
	bool GetNeverAffectNavmesh(); // Function Phoenix.ObjectStateInfo.GetNeverAffectNavmesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2b90
	bool GetNavOverrideMobilityCheck(); // Function Phoenix.ObjectStateInfo.GetNavOverrideMobilityCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2b40
	float GetMinOptimumAvatarDistance(); // Function Phoenix.ObjectStateInfo.GetMinOptimumAvatarDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2af0
	float GetMinDamageThreshold(); // Function Phoenix.ObjectStateInfo.GetMinDamageThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2aa0
	float GetMaxOptimumAvatarDistance(); // Function Phoenix.ObjectStateInfo.GetMaxOptimumAvatarDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2a50
	float GetMaxHealth(); // Function Phoenix.ObjectStateInfo.GetMaxHealth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2a10
	struct UMaterialPropertyData* GetMaterialPropertyData(); // Function Phoenix.ObjectStateInfo.GetMaterialPropertyData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b29f0
	float GetMass(); // Function Phoenix.ObjectStateInfo.GetMass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b29d0
	bool GetMarkupValue(enum class EMarkupType MarkupType, float& OutValue); // Function Phoenix.ObjectStateInfo.GetMarkupValue // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b28f0
	float GetLockValue(); // Function Phoenix.ObjectStateInfo.GetLockValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b28c0
	float GetLevel(); // Function Phoenix.ObjectStateInfo.GetLevel // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2880
	bool GetLastDamageInReactionAdjustment(); // Function Phoenix.ObjectStateInfo.GetLastDamageInReactionAdjustment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2850
	bool GetKilledWithAvadaKedavra(); // Function Phoenix.ObjectStateInfo.GetKilledWithAvadaKedavra // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2820
	enum class EImpactTypes GetImpactType(); // Function Phoenix.ObjectStateInfo.GetImpactType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b27f0
	struct UAkAudioEvent* GetHitSfx(); // Function Phoenix.ObjectStateInfo.GetHitSfx // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b27c0
	float GetHealthPercentage(); // Function Phoenix.ObjectStateInfo.GetHealthPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2790
	enum class EUIHealthBarType GetHealthBarType(); // Function Phoenix.ObjectStateInfo.GetHealthBarType // (Native|Public|BlueprintCallable) // @ game+0x18e3710
	float GetHealth(); // Function Phoenix.ObjectStateInfo.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2760
	float GetFrozenDamageMultiplier(); // Function Phoenix.ObjectStateInfo.GetFrozenDamageMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2730
	float GetFireDamagePerSecond(); // Function Phoenix.ObjectStateInfo.GetFireDamagePerSecond // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2700
	float GetFireDamageFloor(); // Function Phoenix.ObjectStateInfo.GetFireDamageFloor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b26d0
	struct UAkAudioEvent* GetFastSfx(); // Function Phoenix.ObjectStateInfo.GetFastSfx // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b26a0
	bool GetDisplayDamage(); // Function Phoenix.ObjectStateInfo.GetDisplayDamage // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2670
	struct UStaticMesh* GetDestroyedBase(); // Function Phoenix.ObjectStateInfo.GetDestroyedBase // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2640
	struct FName GetDbVoiceId(); // Function Phoenix.ObjectStateInfo.GetDbVoiceId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b25f0
	struct FName GetDbTypeId(); // Function Phoenix.ObjectStateInfo.GetDbTypeId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b25a0
	struct FName GetDbSubtypeID(); // Function Phoenix.ObjectStateInfo.GetDbSubtypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2550
	struct FName GetDbPersistentId(); // Function Phoenix.ObjectStateInfo.GetDbPersistentId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2510
	struct FName GetDbLookId(); // Function Phoenix.ObjectStateInfo.GetDbLookId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b24c0
	struct FName GetDbId(); // Function Phoenix.ObjectStateInfo.GetDbId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2470
	struct FName GetDbGenderId(); // Function Phoenix.ObjectStateInfo.GetDbGenderId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2420
	struct FName GetDbEmoteVoiceId(); // Function Phoenix.ObjectStateInfo.GetDbEmoteVoiceId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b23d0
	struct FName GetDbClassId(); // Function Phoenix.ObjectStateInfo.GetDbClassId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2380
	float GetCursedEnemyCount(); // Function Phoenix.ObjectStateInfo.GetCursedEnemyCount // (Final|Native|Static|Public) // @ game+0x33b2350
	bool GetCurrentlyTargeted(); // Function Phoenix.ObjectStateInfo.GetCurrentlyTargeted // (Final|Native|Public|BlueprintCallable) // @ game+0x33b2300
	float GetCurrentItemEffectiveness(); // Function Phoenix.ObjectStateInfo.GetCurrentItemEffectiveness // (Final|Native|Static|Public) // @ game+0x320f140
	struct UPhoenixPhysicalMaterial* GetComponentPhoenixPhysicalMaterial(struct UPrimitiveComponent* InPrimComponent); // Function Phoenix.ObjectStateInfo.GetComponentPhoenixPhysicalMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b2270
	float GetCompanionLevel(); // Function Phoenix.ObjectStateInfo.GetCompanionLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2240
	float GetCharredDamageMultiplier(); // Function Phoenix.ObjectStateInfo.GetCharredDamageMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2210
	struct FVector GetBrokenPieceLocation(); // Function Phoenix.ObjectStateInfo.GetBrokenPieceLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b21d0
	enum class EBossStates GetBossState(); // Function Phoenix.ObjectStateInfo.GetBossState // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b21a0
	float GetBaseHealth(); // Function Phoenix.ObjectStateInfo.GetBaseHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b2150
	float GetActorMass(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.GetActorMass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b20c0
	struct UPrimitiveComponent* GetActorMainPrimitiveComponent(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.GetActorMainPrimitiveComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b2030
	enum class EImpactTypes GetActorImpactType(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.GetActorImpactType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b1fa0
	struct AActor* GetActor(); // Function Phoenix.ObjectStateInfo.GetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b1f80
	void ForceBreak(float InScale, bool InRestoreBroken); // Function Phoenix.ObjectStateInfo.ForceBreak // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1ea0
	void ForceAsleep(); // Function Phoenix.ObjectStateInfo.ForceAsleep // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1e80
	void ExtendNearDeathKneel(float KneelTime); // Function Phoenix.ObjectStateInfo.ExtendNearDeathKneel // (Native|Public|BlueprintCallable) // @ game+0x33b1df0
	void EndAffectingSpells__DelegateSignature(); // DelegateFunction Phoenix.ObjectStateInfo.EndAffectingSpells__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool EndAffectingSpells(); // Function Phoenix.ObjectStateInfo.EndAffectingSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1dc0
	struct AActor* DropLootContainer(struct FVector InLocation); // Function Phoenix.ObjectStateInfo.DropLootContainer // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33b1d20
	struct AActor* DropCooldownPickup(struct FVector InLocation); // Function Phoenix.ObjectStateInfo.DropCooldownPickup // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33b1c80
	bool DoHealing(float Amount, struct AActor* InInstigator, struct UPrimitiveComponent* PrimComp, int32_t Item, bool bAoe, bool InOriginalLocation, bool InAutoComplete); // Function Phoenix.ObjectStateInfo.DoHealing // (Native|Public|BlueprintCallable) // @ game+0x33b1a00
	bool DoFireDamage(float Amount, struct AActor* Instigator); // Function Phoenix.ObjectStateInfo.DoFireDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1930
	bool DoesExplode(); // Function Phoenix.ObjectStateInfo.DoesExplode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b1c30
	void DisableObjectState(bool bInDisabled); // Function Phoenix.ObjectStateInfo.DisableObjectState // (Final|Native|Public|BlueprintCallable) // @ game+0x33b18a0
	void DisableFallDamage(bool bDisable); // Function Phoenix.ObjectStateInfo.DisableFallDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b1820
	void DisableDamageMods(bool bDisable); // Function Phoenix.ObjectStateInfo.DisableDamageMods // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b17a0
	bool DiesInWater(); // Function Phoenix.ObjectStateInfo.DiesInWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b1750
	void DelayedRestoreUsability(float Delay); // Function Phoenix.ObjectStateInfo.DelayedRestoreUsability // (Final|Native|Public|BlueprintCallable) // @ game+0x33b16d0
	void DelayedRestoreBroken(float InTime); // Function Phoenix.ObjectStateInfo.DelayedRestoreBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1650
	void DelayedForceBreak(float InTime); // Function Phoenix.ObjectStateInfo.DelayedForceBreak // (Final|Native|Public|BlueprintCallable) // @ game+0x33b15d0
	bool DecreaseWetness(float Amount); // Function Phoenix.ObjectStateInfo.DecreaseWetness // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1540
	bool DecreaseFire(float Amount); // Function Phoenix.ObjectStateInfo.DecreaseFire // (Final|Native|Public|BlueprintCallable) // @ game+0x33b14b0
	void Deactivate(); // Function Phoenix.ObjectStateInfo.Deactivate // (Native|Public|BlueprintCallable) // @ game+0x235fd10
	void DamageInPieces(float InImpulseStr, float InDamage, struct FVector& InHitLocation, struct FVector& InHitDirection, float InRadius); // Function Phoenix.ObjectStateInfo.DamageInPieces // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b12d0
	void CreateNoise(enum class ENoiseSize NoiseSize, struct FVector& NoiseLocation, struct AActor* NoiseInstigator, struct FGameplayTagContainer EventContainer); // Function Phoenix.ObjectStateInfo.CreateNoise // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b1120
	void ClearInvulnerable(); // Function Phoenix.ObjectStateInfo.ClearInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1100
	void ClearImmuneToEverythingExcept(); // Function Phoenix.ObjectStateInfo.ClearImmuneToEverythingExcept // (Final|Native|Public|BlueprintCallable) // @ game+0x33b10e0
	void ClearCurrentVelocity(); // Function Phoenix.ObjectStateInfo.ClearCurrentVelocity // (Final|Native|Public|BlueprintCallable) // @ game+0x33b10b0
	void ClearCooldownPickupTargets(); // Function Phoenix.ObjectStateInfo.ClearCooldownPickupTargets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b1070
	void CheckObstacleSetup(); // Function Phoenix.ObjectStateInfo.CheckObstacleSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x33b1050
	bool CanHighlightWhenBroken(); // Function Phoenix.ObjectStateInfo.CanHighlightWhenBroken // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b1000
	bool CanHighlight(); // Function Phoenix.ObjectStateInfo.CanHighlight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b0fb0
	bool CanBeRepaired(); // Function Phoenix.ObjectStateInfo.CanBeRepaired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b0f10
	bool CanBecomeMovable(); // Function Phoenix.ObjectStateInfo.CanBecomeMovable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33b0f40
	void BreakStaticDestructibleMesh(float InImpulseStr, struct FVector& InHitLocation, struct FVector& InHitDirection, struct UParticleSystem* InDestroyEffects, float InEffectRadius, float InRadius, float AdditionalDestructionForce, float AngularForceMultiplier); // Function Phoenix.ObjectStateInfo.BreakStaticDestructibleMesh // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b0c80
	void BecomeMovable(bool bBecomeMovable); // Function Phoenix.ObjectStateInfo.BecomeMovable // (Final|Native|Public|BlueprintCallable) // @ game+0x33b0bf0
	bool AdjustHealth(float change, bool bIndicateHUD); // Function Phoenix.ObjectStateInfo.AdjustHealth // (Native|Public|BlueprintCallable) // @ game+0x33b0b10
	void AddImmunity(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ObjectStateInfo.AddImmunity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b0a50
	void AddImmuneUnlessCritical(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ObjectStateInfo.AddImmuneUnlessCritical // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33b0990
	void AddCooldownPickupTarget(struct FVector& InTarget); // Function Phoenix.ObjectStateInfo.AddCooldownPickupTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b08c0
	void ActorStopSimulatingPhysics(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.ActorStopSimulatingPhysics // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b0840
	void ActorStartSimulatingPhysics(struct AActor* InActor); // Function Phoenix.ObjectStateInfo.ActorStartSimulatingPhysics // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b07c0
	void ActorHitShake(float Damage, struct FVector& ImpactLocation); // Function Phoenix.ObjectStateInfo.ActorHitShake // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33b06e0
	void Activate(); // Function Phoenix.ObjectStateInfo.Activate // (Native|Public|BlueprintCallable) // @ game+0x12bf9d0
};

// Class Phoenix.CharacterStateInfo
// Size: 0xf90 (Inherited: 0x1e0)
struct UCharacterStateInfo : UObjectStateInfo {
	struct FMulticastInlineDelegate ChangedTeamsDelegate; // 0x1e0(0x10)
	struct FMulticastInlineDelegate m_onVulnerabilityChangedDelegate; // 0x1f0(0x10)
	struct FMulticastInlineDelegate OnCriticalHealthChanged; // 0x200(0x10)
	struct FMulticastInlineDelegate NearDeathKneelBeginDelegate; // 0x210(0x10)
	struct FMulticastInlineDelegate NearDeathKneelEndDelegate; // 0x220(0x10)
	struct FMulticastInlineDelegate FullHealthReachedDelegate; // 0x230(0x10)
	struct FMulticastInlineDelegate HealthThresholdReachedDelegate; // 0x240(0x10)
	struct AActor* BlockingActor; // 0x250(0x08)
	char pad_258[0x30]; // 0x258(0x30)
	struct FGameplayProperty_Float OutgoingDamageModifier; // 0x288(0x90)
	struct FGameplayProperty_Float DamageFocusModifier; // 0x318(0x90)
	struct FGameplayProperty_Float IncomingDamageModifier; // 0x3a8(0x90)
	struct FGameplayProperty_Float OwnedPlantOutgoingDamageModifier; // 0x438(0x90)
	struct FGameplayProperty_Float OwnedPlantIncomingDamageModifier; // 0x4c8(0x90)
	struct FGameplayProperty_Float ImperiusControlledOutgoingDamageModifier; // 0x558(0x90)
	struct FGameplayProperty_Float OppugnoOutgoingDamageModifier; // 0x5e8(0x90)
	struct FGameplayProperty_Float LifeLeech; // 0x678(0x90)
	struct FGameplayProperty_Float LifeLeechToCompanion; // 0x708(0x90)
	struct FGameplayProperty_Float LifeLeechToPlants; // 0x798(0x90)
	struct FGameplayProperty_Float BreakBlockChance; // 0x828(0x90)
	struct FGameplayProperty_Float CriticalHitChance; // 0x8b8(0x90)
	struct FGameplayProperty_Float SocapAmendModifier; // 0x948(0x90)
	struct FGameplayProperty_Float SocapDecayModifier; // 0x9d8(0x90)
	struct FGameplayProperty_Float SpellCooldownAmendModifier; // 0xa68(0x90)
	struct FGameplayProperty_Float SpellCooldownReduction; // 0xaf8(0x90)
	struct FGameplayProperty_Float SpellCooldownAdditiveMod; // 0xb88(0x90)
	struct FGameplayProperty_Float EnemySpellCooldownModifier; // 0xc18(0x90)
	struct FGameplayProperty_Float ItemEffectivenessModifier; // 0xca8(0x90)
	struct FGameplayProperty_Float DoubleEffectivenessChance; // 0xd38(0x90)
	struct FGameplayProperty_Float MaxHealth; // 0xdc8(0x90)
	struct FGameplayProperty_Float ThrownProjectileDistanceModifier; // 0xe58(0x90)
	struct FGameplayProperty_Int MaxActivePotionAbilities; // 0xee8(0x80)
	char pad_F68[0x28]; // 0xf68(0x28)

	bool WereSameTeam(struct AActor* ActorPtr1, struct AActor* ActorPtr2); // Function Phoenix.CharacterStateInfo.WereSameTeam // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3235e50
	bool WereAllies(struct AActor* ActorPtr1, struct AActor* ActorPtr2); // Function Phoenix.CharacterStateInfo.WereAllies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3235d80
	bool WasSameTeam(struct AActor* ActorPtr); // Function Phoenix.CharacterStateInfo.WasSameTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3235ce0
	bool WasAlly(struct AActor* ActorPtr); // Function Phoenix.CharacterStateInfo.WasAlly // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3235c40
	void StopIntervalHealthAdjust(); // Function Phoenix.CharacterStateInfo.StopIntervalHealthAdjust // (Native|Public|BlueprintCallable) // @ game+0x31e1670
	void StartIntervalHealthAdjust(float Interval, float Duration, float DeltaAmount); // Function Phoenix.CharacterStateInfo.StartIntervalHealthAdjust // (Native|Public|BlueprintCallable) // @ game+0x3235b20
	void SetVulnerable(bool bInIsVulnerable); // Function Phoenix.CharacterStateInfo.SetVulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x3235a90
	void SetTeammateAllyOverride(bool bOverride); // Function Phoenix.CharacterStateInfo.SetTeammateAllyOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x3235a00
	void SetTeamInteractionBetween(struct AActor* InteractorActorPtr, struct FName& InteracteeTeam, struct FName& InInteraction, int32_t Priority); // Function Phoenix.CharacterStateInfo.SetTeamInteractionBetween // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32358a0
	void SetTeamInteraction(struct FName& InteracteeTeam, struct FName& InInteraction, int32_t Priority); // Function Phoenix.CharacterStateInfo.SetTeamInteraction // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3235770
	void SetTeam(struct FName& InTeam); // Function Phoenix.CharacterStateInfo.SetTeam // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32356d0
	void SetRegenerationRate(float Rate); // Function Phoenix.CharacterStateInfo.SetRegenerationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x3235610
	void SetProtegoActive(bool bProtegoActive); // Function Phoenix.CharacterStateInfo.SetProtegoActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3235580
	void SetProtected(bool bInProtected); // Function Phoenix.CharacterStateInfo.SetProtected // (Final|Native|Public|BlueprintCallable) // @ game+0x32354c0
	void SetOverrideNearDeathRecoverTime(float Time); // Function Phoenix.CharacterStateInfo.SetOverrideNearDeathRecoverTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3235440
	void SetLootable(bool bInLootable); // Function Phoenix.CharacterStateInfo.SetLootable // (Final|Native|Public|BlueprintCallable) // @ game+0x32353b0
	void SetIsAsleep(bool bInAsleep); // Function Phoenix.CharacterStateInfo.SetIsAsleep // (Final|Native|Public|BlueprintCallable) // @ game+0x3235320
	void SetInvincible(bool bInIsInvincible); // Function Phoenix.CharacterStateInfo.SetInvincible // (Final|Native|Public|BlueprintCallable) // @ game+0x3235290
	void SetInteractionBetween(struct AActor* InteractorActorPtr, struct AActor* InteracteeActorPtr, struct FName& InInteraction, int32_t Priority); // Function Phoenix.CharacterStateInfo.SetInteractionBetween // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3235130
	void SetInteraction(struct AActor* InteracteeActorPtr, struct FName& InInteraction, int32_t Priority); // Function Phoenix.CharacterStateInfo.SetInteraction // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3235010
	void SetImperiusInstigator(struct AActor* InInstigatorPtr); // Function Phoenix.CharacterStateInfo.SetImperiusInstigator // (Final|Native|Public|BlueprintCallable) // @ game+0x3234f50
	void SetImperiusCharTakesFullDamage(bool TakesFullDamage); // Function Phoenix.CharacterStateInfo.SetImperiusCharTakesFullDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x3234ec0
	void SetIgnoreProtego(float Time); // Function Phoenix.CharacterStateInfo.SetIgnoreProtego // (Final|Native|Public|BlueprintCallable) // @ game+0x3234e40
	void SetIgnoreAllyAttacks(bool Ignore); // Function Phoenix.CharacterStateInfo.SetIgnoreAllyAttacks // (Final|Native|Public|BlueprintCallable) // @ game+0x3234d80
	void SetHealthThresholdArray(struct TArray<struct FHealthThreshold>& HealthThresholdArray); // Function Phoenix.CharacterStateInfo.SetHealthThresholdArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3234ca0
	void SetDamageable(bool bAttackable); // Function Phoenix.CharacterStateInfo.SetDamageable // (Final|Native|Public|BlueprintCallable) // @ game+0x3234c10
	void SetBlockingActor(struct AActor* InBlockingActor); // Function Phoenix.CharacterStateInfo.SetBlockingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3234b80
	void SetAttackable(bool bAttackable); // Function Phoenix.CharacterStateInfo.SetAttackable // (Final|Native|Public|BlueprintCallable) // @ game+0x3234af0
	void SetActorVulnerable(struct AActor* InActor, bool bInIsVulnerable); // Function Phoenix.CharacterStateInfo.SetActorVulnerable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234a30
	void SetActorToTeam(struct AActor* DestActor, struct AActor* SourceActor); // Function Phoenix.CharacterStateInfo.SetActorToTeam // (Final|Native|Public|BlueprintCallable) // @ game+0x3234960
	void SetActorInvincible(struct AActor* InActor, bool bInIsInvincible); // Function Phoenix.CharacterStateInfo.SetActorInvincible // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32348a0
	void SetActorAttackable(struct AActor* InActor, bool bInAttackable); // Function Phoenix.CharacterStateInfo.SetActorAttackable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32347e0
	void SetActiveAuthorityFigure(bool bActive); // Function Phoenix.CharacterStateInfo.SetActiveAuthorityFigure // (Final|Native|Public|BlueprintCallable) // @ game+0x3234750
	void RestoreLastTeam(); // Function Phoenix.CharacterStateInfo.RestoreLastTeam // (Final|Native|Public|BlueprintCallable) // @ game+0x3234730
	void RestoreInitialTeam(); // Function Phoenix.CharacterStateInfo.RestoreInitialTeam // (Final|Native|Public|BlueprintCallable) // @ game+0x3234710
	void RestoreHealthToMax(bool bRemoveTAK); // Function Phoenix.CharacterStateInfo.RestoreHealthToMax // (Native|Public|BlueprintCallable) // @ game+0x3234680
	void RestoreActorToLastTeam(struct AActor* DestActor); // Function Phoenix.CharacterStateInfo.RestoreActorToLastTeam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234600
	void RestoreActorToInitialTeam(struct AActor* DestActor); // Function Phoenix.CharacterStateInfo.RestoreActorToInitialTeam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234580
	void ResetTeamInteractionBetween(struct AActor* InteractorActorPtr, struct FName& InteracteeTeam); // Function Phoenix.CharacterStateInfo.ResetTeamInteractionBetween // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32344b0
	void ResetTeamInteraction(struct FName& InteracteeTeam); // Function Phoenix.CharacterStateInfo.ResetTeamInteraction // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3234410
	void ResetInteractionBetween(struct AActor* InteractorActorPtr, struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.ResetInteractionBetween // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234350
	void ResetInteraction(struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.ResetInteraction // (Native|Public|BlueprintCallable) // @ game+0x32342c0
	void ResetAllInteractionsFrom(struct AActor* InteractorActorPtr); // Function Phoenix.CharacterStateInfo.ResetAllInteractionsFrom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234240
	void ResetAllInteractions(); // Function Phoenix.CharacterStateInfo.ResetAllInteractions // (Native|Public|BlueprintCallable) // @ game+0x3234220
	bool IsVulnerable(); // Function Phoenix.CharacterStateInfo.IsVulnerable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32341f0
	bool IsUnaware(struct AActor* Source, struct AActor* Target); // Function Phoenix.CharacterStateInfo.IsUnaware // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3234120
	bool IsSameTeam(struct AActor* ActorPtr); // Function Phoenix.CharacterStateInfo.IsSameTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3234080
	bool IsProtegoActive(); // Function Phoenix.CharacterStateInfo.IsProtegoActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3234050
	bool IsProtected(); // Function Phoenix.CharacterStateInfo.IsProtected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3234000
	bool IsPlayerSpawnableAlly(struct AActor* ActorPtr); // Function Phoenix.CharacterStateInfo.IsPlayerSpawnableAlly // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3233f70
	bool IsLootable(); // Function Phoenix.CharacterStateInfo.IsLootable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233f40
	bool IsInvincible(); // Function Phoenix.CharacterStateInfo.IsInvincible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233f10
	bool IsIgnoringProtego(); // Function Phoenix.CharacterStateInfo.IsIgnoringProtego // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233ee0
	bool IsDueling(); // Function Phoenix.CharacterStateInfo.IsDueling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233eb0
	bool IsDamageable(); // Function Phoenix.CharacterStateInfo.IsDamageable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233e80
	bool IsAttackable(); // Function Phoenix.CharacterStateInfo.IsAttackable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233e50
	bool IsAsleep(); // Function Phoenix.CharacterStateInfo.IsAsleep // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233e20
	bool IsActorVulnerable(struct AActor* InActor); // Function Phoenix.CharacterStateInfo.IsActorVulnerable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233d90
	bool IsActorInvincible(struct AActor* InActor); // Function Phoenix.CharacterStateInfo.IsActorInvincible // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233d00
	bool IsActorAttackable(struct AActor* InActor); // Function Phoenix.CharacterStateInfo.IsActorAttackable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233c70
	bool IsActiveAuthorityFigure(); // Function Phoenix.CharacterStateInfo.IsActiveAuthorityFigure // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233c40
	bool ImmuneToFinisherDeath(); // Function Phoenix.CharacterStateInfo.ImmuneToFinisherDeath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233bf0
	bool HasInteractionBetween(struct AActor* InteractorActorPtr, struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.HasInteractionBetween // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233b20
	bool HasInteraction(struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.HasInteraction // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233a80
	bool HasChangedTeams(); // Function Phoenix.CharacterStateInfo.HasChangedTeams // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233a50
	struct FName GetTeamInteraction(struct AActor* InteracteeActorPtr, struct FName& Team); // Function Phoenix.CharacterStateInfo.GetTeamInteraction // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233970
	struct FName GetTeam(); // Function Phoenix.CharacterStateInfo.GetTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233930
	float GetRegenerationRate(); // Function Phoenix.CharacterStateInfo.GetRegenerationRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32338d0
	struct FString GetObjectClassName(struct AActor* InActor); // Function Phoenix.CharacterStateInfo.GetObjectClassName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233800
	float GetNumberOfHappyBeasts(); // Function Phoenix.CharacterStateInfo.GetNumberOfHappyBeasts // (Final|Native|Static|Public) // @ game+0x32337d0
	struct FName GetLastTeam(); // Function Phoenix.CharacterStateInfo.GetLastTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233790
	struct FName GetInteractionBetween(struct AActor* InteractorActorPtr, struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.GetInteractionBetween // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32336c0
	struct FName GetInteraction(struct AActor* InteracteeActorPtr); // Function Phoenix.CharacterStateInfo.GetInteraction // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233620
	struct FName GetInitialTeam(); // Function Phoenix.CharacterStateInfo.GetInitialTeam // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32335e0
	struct AActor* GetImperiusInstigator(); // Function Phoenix.CharacterStateInfo.GetImperiusInstigator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233580
	bool GetImperiusCharTakesFullDamage(); // Function Phoenix.CharacterStateInfo.GetImperiusCharTakesFullDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233530
	bool GetIgnoreAllyAttacks(); // Function Phoenix.CharacterStateInfo.GetIgnoreAllyAttacks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32334e0
	struct TArray<struct FHealthThreshold> GetHealthThresholdArray(); // Function Phoenix.CharacterStateInfo.GetHealthThresholdArray // (Final|Native|Public|BlueprintCallable) // @ game+0x3233490
	float GetGameEventRadius(); // Function Phoenix.CharacterStateInfo.GetGameEventRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233460
	float GetEvilEffectiveness(); // Function Phoenix.CharacterStateInfo.GetEvilEffectiveness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233430
	struct FName GetEnemyInteractionWith(struct AActor* InteractorActorPtr); // Function Phoenix.CharacterStateInfo.GetEnemyInteractionWith // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32333a0
	struct FName GetEnemyInteraction(struct FName InInteractorTeam); // Function Phoenix.CharacterStateInfo.GetEnemyInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233310
	struct UCharacterStateInfo* GetCharacterStateInfo(struct AActor* InActor); // Function Phoenix.CharacterStateInfo.GetCharacterStateInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3233280
	struct UBonySkeletonComponent* GetBonySkeleton(); // Function Phoenix.CharacterStateInfo.GetBonySkeleton // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3233220
	struct AActor* GetBlockingActor(); // Function Phoenix.CharacterStateInfo.GetBlockingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3233200
	struct FName GetActorTeam(struct AActor* DestActor); // Function Phoenix.CharacterStateInfo.GetActorTeam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3233170
	struct FName GetActorSubtypeID(struct AActor* ActorPtr); // Function Phoenix.CharacterStateInfo.GetActorSubtypeID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32330e0
	void EndNearDeathKneel(); // Function Phoenix.CharacterStateInfo.EndNearDeathKneel // (Native|Public|BlueprintCallable) // @ game+0x103db30
	void ClearOverrideNearDeathRecoverTime(); // Function Phoenix.CharacterStateInfo.ClearOverrideNearDeathRecoverTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32330b0
	void ClearIgnoreProtego(); // Function Phoenix.CharacterStateInfo.ClearIgnoreProtego // (Final|Native|Public|BlueprintCallable) // @ game+0x3233090
	void ChangeTeam(struct FName& InTeam); // Function Phoenix.CharacterStateInfo.ChangeTeam // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3232ff0
	void ChangeActorToTeam(struct AActor* DestActor, struct AActor* SourceActor); // Function Phoenix.CharacterStateInfo.ChangeActorToTeam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3232f30
	bool CanHitTarget(struct AActor* Attacker, struct AActor* Target); // Function Phoenix.CharacterStateInfo.CanHitTarget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3232e60
	bool AreSameTeam(struct AActor* ActorPtr1, struct AActor* ActorPtr2); // Function Phoenix.CharacterStateInfo.AreSameTeam // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3232d90
	bool AreAllies(struct AActor* ActorPtr1, struct AActor* ActorPtr2); // Function Phoenix.CharacterStateInfo.AreAllies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3232cc0
};

// Class Phoenix.BipedStateInfo
// Size: 0xf90 (Inherited: 0xf90)
struct UBipedStateInfo : UCharacterStateInfo {
};

// Class Phoenix.BlinkGate
// Size: 0x248 (Inherited: 0x248)
struct ABlinkGate : AActor {
};

// Class Phoenix.BlockedInterface
// Size: 0x28 (Inherited: 0x28)
struct UBlockedInterface : UInterface {

	void OnBlocked(struct AActor* Instigator, struct UInteractionArchitectAsset* DataAsset, enum class EBlockTiming BlockedTiming, struct FGameplayTagContainer MunitionTagContainer, struct FVector Throw, struct FVector ImpactDirection); // Function Phoenix.BlockedInterface.OnBlocked // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.BoilerPipe
// Size: 0x248 (Inherited: 0x248)
struct ABoilerPipe : AActor {
};

// Class Phoenix.BoneClusterActor
// Size: 0x260 (Inherited: 0x248)
struct ABoneClusterActor : AActor {
	char pad_248[0x18]; // 0x248(0x18)

	void RemoveStencilFromBones(struct TArray<struct UStaticMeshComponent*> Bones); // Function Phoenix.BoneClusterActor.RemoveStencilFromBones // (Final|Native|Public|BlueprintCallable) // @ game+0x321e400
	struct UPrimitiveComponent* GetClosestBoneComponent(struct FVector& SourceLocation); // Function Phoenix.BoneClusterActor.GetClosestBoneComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x321dfc0
	void ComputeBoneCloudCenterAndRadius(); // Function Phoenix.BoneClusterActor.ComputeBoneCloudCenterAndRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x321db60
};

// Class Phoenix.BonySkeletonComponent
// Size: 0x1d0 (Inherited: 0xc8)
struct UBonySkeletonComponent : UActorComponent {
	struct USkeletalMesh* SkeletonMesh; // 0xc8(0x08)
	struct UPhysicsAsset* SkeletonPhysiscsAssetOveride; // 0xd0(0x08)
	struct FBonySkeletonTimerProfiles TimerProfiles; // 0xd8(0x68)
	char pad_140[0x10]; // 0x140(0x10)
	struct USkeletalMeshComponent* SkeletonMeshComponent; // 0x150(0x08)
	struct FBonySkeletonTimerProfile ActiveTimerProfile; // 0x158(0x58)
	struct FBoneParticleTracker BoneParticles; // 0x1b0(0x10)
	struct USkinFXComponent* SkinFXComponent; // 0x1c0(0x08)
	float Age; // 0x1c8(0x04)
	bool bInitialized; // 0x1cc(0x01)
	char pad_1CD[0x3]; // 0x1cd(0x03)

	bool Initialize(struct FName ProfileName); // Function Phoenix.BonySkeletonComponent.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x321e2a0
	void Abort(); // Function Phoenix.BonySkeletonComponent.Abort // (Final|Native|Public|BlueprintCallable) // @ game+0x321d850
};

// Class Phoenix.Bool_ByStat
// Size: 0x38 (Inherited: 0x28)
struct UBool_ByStat : UBoolProvider {
	struct FName StatName; // 0x28(0x08)
	int32_t StatValue; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.Bool_DialogueArticy_Selectable
// Size: 0x38 (Inherited: 0x28)
struct UBool_DialogueArticy_Selectable : UBoolProvider {
	struct FDialogueLineReference DialogueLine; // 0x28(0x10)
};

// Class Phoenix.Bool_DialogueArticyCondition
// Size: 0x38 (Inherited: 0x28)
struct UBool_DialogueArticyCondition : UBoolProvider {
	struct FDialogueLineReference DialogueLine; // 0x28(0x10)
};

// Class Phoenix.Bool_PlayerGender
// Size: 0x30 (Inherited: 0x28)
struct UBool_PlayerGender : UBoolProvider {
	enum class ESexType PlayerGender; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Bool_PlayerGenderPronoun
// Size: 0x30 (Inherited: 0x28)
struct UBool_PlayerGenderPronoun : UBoolProvider {
	enum class EGenderPronoun Pronoun; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Bool_PlayerGenderRig
// Size: 0x30 (Inherited: 0x28)
struct UBool_PlayerGenderRig : UBoolProvider {
	enum class EGenderEnum Rig; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Bool_PlayerGenderVoice
// Size: 0x30 (Inherited: 0x28)
struct UBool_PlayerGenderVoice : UBoolProvider {
	enum class EGenderVoice Voice; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Bool_PlayerHouse
// Size: 0x30 (Inherited: 0x28)
struct UBool_PlayerHouse : UBoolProvider {
	enum class EBool_PlayerHouse PlayerHouse; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.BrewingManager
// Size: 0x180 (Inherited: 0x28)
struct UBrewingManager : UObject {
	char pad_28[0x68]; // 0x28(0x68)
	struct FGameplayProperty_Float BrewTimeMultiplier; // 0x90(0x90)
	char pad_120[0x10]; // 0x120(0x10)
	struct TMap<uint32_t, struct UBrewingSiteState*> ActiveBrewingSiteStates; // 0x130(0x50)

	void UnlockAllPotionRecipes(); // Function Phoenix.BrewingManager.UnlockAllPotionRecipes // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1074730
	void OnSaveGameLoaded(); // Function Phoenix.BrewingManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x321e3c0
	void OnNewGame(); // Function Phoenix.BrewingManager.OnNewGame // (Final|Native|Public) // @ game+0x321e3c0
	void OnGameToBeSaved(); // Function Phoenix.BrewingManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x321e3a0
	float GetBrewTimeMultiplier(); // Function Phoenix.BrewingManager.GetBrewTimeMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321dca0
	struct TArray<struct FName> GetBrewingUICategories(); // Function Phoenix.BrewingManager.GetBrewingUICategories // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321dec0
	void GetBrewingRecipes(struct TArray<struct FBrewingRecipe>& AvailableRecipes, struct TArray<struct FBrewingRecipe>& LockedRecipes); // Function Phoenix.BrewingManager.GetBrewingRecipes // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x321dcf0
	void GetAllPotions(int32_t AmountToGrant); // Function Phoenix.BrewingManager.GetAllPotions // (Final|Exec|Native|Public) // @ game+0x321dc10
	void GetAllPotionIngredients(int32_t AmountToGrant); // Function Phoenix.BrewingManager.GetAllPotionIngredients // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x321dc10
	struct UBrewingManager* BP_Get(); // Function Phoenix.BrewingManager.BP_Get // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x321d930
	bool AreOwnedIngredientsEnough(struct FBrewingRecipe& BrewingRecipe); // Function Phoenix.BrewingManager.AreOwnedIngredientsEnough // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x321d870
};

// Class Phoenix.InteractiveObjectActor
// Size: 0x298 (Inherited: 0x268)
struct AInteractiveObjectActor : APhoenixBudgetedActor {
	char pad_268[0x8]; // 0x268(0x08)
	struct UObjectStateComponent* ObjectState; // 0x270(0x08)
	char pad_278[0x20]; // 0x278(0x20)
};

// Class Phoenix.BrewingSite
// Size: 0x2d8 (Inherited: 0x298)
struct ABrewingSite : AInteractiveObjectActor {
	struct FMulticastInlineDelegate BrewingSiteBecomeActiveDelegate; // 0x298(0x10)
	struct FMulticastInlineDelegate BrewingSiteBecomeInactiveDelegate; // 0x2a8(0x10)
	char pad_2B8[0x10]; // 0x2b8(0x10)
	struct ABrewingSite* LeftNeighbor; // 0x2c8(0x08)
	struct ABrewingSite* RightNeighbor; // 0x2d0(0x08)

	void SetBrewingNeighborsFromChildComponents(struct TArray<struct UChildActorComponent*>& ChildComponents, bool bLoopNeighbors); // Function Phoenix.BrewingSite.SetBrewingNeighborsFromChildComponents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x321e4f0
	void OpenSiteUI(); // Function Phoenix.BrewingSite.OpenSiteUI // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	struct USkeletalMesh* GetCauldronSkeletalMesh(); // Function Phoenix.BrewingSite.GetCauldronSkeletalMesh // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x31f8040
	struct FName GetCauldronID(); // Function Phoenix.BrewingSite.GetCauldronID // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x321df80
	struct UBrewingSiteState* GetBrewingSiteState(); // Function Phoenix.BrewingSite.GetBrewingSiteState // (Final|Native|Public|BlueprintCallable) // @ game+0x321de50
	void DestroyPotion(struct FName CollectorID); // Function Phoenix.BrewingSite.DestroyPotion // (Final|Native|Public|BlueprintCallable) // @ game+0x321db80
	void CollectPotion(struct FName CollectorID, bool& bOutCollectedAnything, int32_t& OutYieldLeft); // Function Phoenix.BrewingSite.CollectPotion // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x321da40
	void BrewingSiteBecomeInactiveDelegate__DelegateSignature(); // DelegateFunction Phoenix.BrewingSite.BrewingSiteBecomeInactiveDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void BrewingSiteBecomeActiveDelegate__DelegateSignature(); // DelegateFunction Phoenix.BrewingSite.BrewingSiteBecomeActiveDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void BP_NotifyBrewingStateChange(enum class EBrewingState NewState, bool bIsInitialState); // Function Phoenix.BrewingSite.BP_NotifyBrewingStateChange // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BeginBrewingPotion(struct FBrewingRecipe& BrewingRecipe); // Function Phoenix.BrewingSite.BeginBrewingPotion // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x321d960
};

// Class Phoenix.BrewingSiteState
// Size: 0xc8 (Inherited: 0x28)
struct UBrewingSiteState : UObject {
	char pad_28[0xa0]; // 0x28(0xa0)

	void InstantlyCompleteBrewing(); // Function Phoenix.BrewingSiteState.InstantlyCompleteBrewing // (Final|Native|Public|BlueprintCallable) // @ game+0x321e340
	int32_t GetUncollectedYield(); // Function Phoenix.BrewingSiteState.GetUncollectedYield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e280
	int32_t GetRecipeYield(); // Function Phoenix.BrewingSiteState.GetRecipeYield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e260
	struct TArray<struct FRecipeIngredient> GetRecipeIngredients(); // Function Phoenix.BrewingSiteState.GetRecipeIngredients // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e1a0
	struct FName GetPotionID(); // Function Phoenix.BrewingSiteState.GetPotionID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e180
	struct FName GetOutputItemID(); // Function Phoenix.BrewingSiteState.GetOutputItemID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e160
	bool GetIsInSanctuary(); // Function Phoenix.BrewingSiteState.GetIsInSanctuary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e140
	bool GetHasInventorySpaceToCollectPotion(struct FName CollectorID, int32_t& OutYieldLeft); // Function Phoenix.BrewingSiteState.GetHasInventorySpaceToCollectPotion // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e060
	struct FTimespan GetBrewingTimeRemaining(); // Function Phoenix.BrewingSiteState.GetBrewingTimeRemaining // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x321de80
	enum class EBrewingState GetBrewingState(); // Function Phoenix.BrewingSiteState.GetBrewingState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x170d9c0
	float GetBrewingProgressRatio(); // Function Phoenix.BrewingSiteState.GetBrewingProgressRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321dcc0
};

// Class Phoenix.BroomRiderActionBase
// Size: 0x38 (Inherited: 0x28)
struct UBroomRiderActionBase : UObject {
	bool bActionEnabled; // 0x28(0x01)
	char pad_29[0xb]; // 0x29(0x0b)
	bool bPauseBroomOnCompleteAction; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.BroomRiderSubActionBase
// Size: 0x38 (Inherited: 0x38)
struct UBroomRiderSubActionBase : UBroomRiderActionBase {
};

// Class Phoenix.BroomRiderAction_WaitForPlayer
// Size: 0x48 (Inherited: 0x38)
struct UBroomRiderAction_WaitForPlayer : UBroomRiderActionBase {
	float Distance; // 0x38(0x04)
	char pad_3C[0xc]; // 0x3c(0x0c)
};

// Class Phoenix.BroomRiderAction_TravelToPoint
// Size: 0x148 (Inherited: 0x38)
struct UBroomRiderAction_TravelToPoint : UBroomRiderActionBase {
	struct TSoftObjectPtr<UFlyingBroomPhysics_Spline> BroomPhysicsData; // 0x38(0x28)
	struct UFlyingBroomPhysics_Spline* PrevBroomPhysicsData; // 0x60(0x08)
	bool bRestoreFlightDataOnFinish; // 0x68(0x01)
	bool bLoopUntilMessage; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct FString MessageName; // 0x70(0x10)
	int32_t Point; // 0x80(0x04)
	bool bKeepPlayerCloseToNPC; // 0x84(0x01)
	bool bSetStatOnPlayerLeaveNPC; // 0x85(0x01)
	char pad_86[0x2]; // 0x86(0x02)
	struct FDbSingleColumnInfo StatToSet; // 0x88(0x88)
	int32_t StatValueToSet; // 0x110(0x04)
	float MaxDistanceFromNPC; // 0x114(0x04)
	float DistanceBehindNPCToResetTo; // 0x118(0x04)
	enum class EBroomEnemyState BroomEnemyState; // 0x11c(0x01)
	char pad_11D[0x2b]; // 0x11d(0x2b)

	void CheckPlayerDistanceToNPC(); // Function Phoenix.BroomRiderAction_TravelToPoint.CheckPlayerDistanceToNPC // (Final|Native|Private) // @ game+0x321da20
};

// Class Phoenix.BroomRiderAction_PlayDialogue
// Size: 0x60 (Inherited: 0x38)
struct UBroomRiderAction_PlayDialogue : UBroomRiderSubActionBase {
	struct FDialogueConversationReference DialogueEvent; // 0x38(0x10)
	bool bWaitForDialogueToComplete; // 0x48(0x01)
	char pad_49[0x17]; // 0x49(0x17)

	void OnDialogueComplete(); // Function Phoenix.BroomRiderAction_PlayDialogue.OnDialogueComplete // (Final|Native|Private) // @ game+0x321e360
};

// Class Phoenix.BroomRiderAction_Delay
// Size: 0x48 (Inherited: 0x38)
struct UBroomRiderAction_Delay : UBroomRiderActionBase {
	float Delay; // 0x38(0x04)
	char pad_3C[0xc]; // 0x3c(0x0c)
};

// Class Phoenix.BroomRiderAction_BarrelRoll
// Size: 0x48 (Inherited: 0x38)
struct UBroomRiderAction_BarrelRoll : UBroomRiderActionBase {
	enum class EBarrelRollDirection RollDirection; // 0x38(0x04)
	char pad_3C[0xc]; // 0x3c(0x0c)
};

// Class Phoenix.BroomRiderAction_SendHermesMessage
// Size: 0x50 (Inherited: 0x38)
struct UBroomRiderAction_SendHermesMessage : UBroomRiderActionBase {
	struct FString MessageName; // 0x38(0x10)
	bool bOwned; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.BroomRiderAction_WaitForHermesMessage
// Size: 0x58 (Inherited: 0x38)
struct UBroomRiderAction_WaitForHermesMessage : UBroomRiderActionBase {
	struct FString MessageName; // 0x38(0x10)
	bool bPauseWhileWaiting; // 0x48(0x01)
	char pad_49[0xf]; // 0x49(0x0f)
};

// Class Phoenix.BroomActionSpline
// Size: 0x3a0 (Inherited: 0x248)
struct ABroomActionSpline : AActor {
	struct USplineComponent* SplineComponent; // 0x248(0x08)
	struct FName BroomActionSplineName; // 0x250(0x08)
	struct FDbSingleColumnInfo ScheduledEntityName; // 0x258(0x88)
	bool bForceHighLOD; // 0x2e0(0x01)
	bool bMountIfNotAlready; // 0x2e1(0x01)
	char pad_2E2[0x6]; // 0x2e2(0x06)
	struct AFlyingBroom* BroomToUse; // 0x2e8(0x08)
	struct UFlyingBroomPhysics* BroomPhysicsData; // 0x2f0(0x08)
	struct TArray<struct FBroomRiderActionContainer> ActionsToBePerformedContainer; // 0x2f8(0x10)
	char pad_308[0x19]; // 0x308(0x19)
	enum class EActionsCompleteBehaviour EndBehaviour; // 0x321(0x01)
	char pad_322[0x6]; // 0x322(0x06)
	struct ABroomActionSpline* NextBroomActionSpline; // 0x328(0x08)
	struct FGuid Guid; // 0x330(0x10)
	bool bSaveState; // 0x340(0x01)
	bool bSaveTaskState; // 0x341(0x01)
	char pad_342[0x36]; // 0x342(0x36)
	struct AFlyingBroom* NPCBroom; // 0x378(0x08)
	char pad_380[0x20]; // 0x380(0x20)

	void TriggerEndBehaviour(bool bOverrideEndBehaviour, enum class EActionsCompleteBehaviour EndBehaviourOverride); // Function Phoenix.BroomActionSpline.TriggerEndBehaviour // (Final|Native|Public|BlueprintCallable) // @ game+0x321e600
	void StartBroomActionSequence(); // Function Phoenix.BroomActionSpline.StartBroomActionSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x321e5e0
	void OnSaveGameLoaded(); // Function Phoenix.BroomActionSpline.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x321e3e0
	void OnGameToBeSaved(); // Function Phoenix.BroomActionSpline.OnGameToBeSaved // (Final|Native|Private) // @ game+0x321e380
};

// Class Phoenix.BroomChallengeScreen
// Size: 0x380 (Inherited: 0x370)
struct UBroomChallengeScreen : UScreen {
	struct FString RaceId; // 0x370(0x10)
};

// Class Phoenix.BroomFlightVFXActor
// Size: 0x370 (Inherited: 0x248)
struct ABroomFlightVFXActor : AActor {
	enum class ETraceTypeQuery MapTraceType; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	float Time; // 0x24c(0x04)
	float PitchMultiply; // 0x250(0x04)
	float YawMultiply; // 0x254(0x04)
	float YawStrength; // 0x258(0x04)
	struct FVector TargetLocation; // 0x25c(0x0c)
	struct TArray<struct FString> SpeedKeys; // 0x268(0x10)
	struct TArray<struct FVector2D> SpeedValues; // 0x278(0x10)
	struct TArray<struct FString> TimeKeys; // 0x288(0x10)
	struct TArray<struct FVector2D> TimeValues; // 0x298(0x10)
	struct UNiagaraComponent* SpawnedSystem; // 0x2a8(0x08)
	struct UMaterialInstanceDynamic* DynamicBroomMaterial; // 0x2b0(0x08)
	struct TMap<struct FString, struct FVector2D> BroomParams; // 0x2b8(0x50)
	struct TMap<struct FString, struct FVector2D> MatParams; // 0x308(0x50)
	char pad_358[0x8]; // 0x358(0x08)
	struct UPostProcessComponent* BroomPostProcess; // 0x360(0x08)
	struct UNiagaraComponent* BroomNiagara; // 0x368(0x08)

	struct UNiagaraComponent* SpawnNiagaraSystem(); // Function Phoenix.BroomFlightVFXActor.SpawnNiagaraSystem // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetupVFXRefs(); // Function Phoenix.BroomFlightVFXActor.SetupVFXRefs // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetupGroundVFX(); // Function Phoenix.BroomFlightVFXActor.SetupGroundVFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetupBroomTrailVFX(); // Function Phoenix.BroomFlightVFXActor.SetupBroomTrailVFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetupBoostGainVFX(); // Function Phoenix.BroomFlightVFXActor.SetupBoostGainVFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetRadialBlurToggleParameterValue(float ToggleAmount); // Function Phoenix.BroomFlightVFXActor.SetRadialBlurToggleParameterValue // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetRadialBlurParameterValues(float EffectAmount, struct FLinearColor TargetPos); // Function Phoenix.BroomFlightVFXActor.SetRadialBlurParameterValues // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	struct UPostProcessComponent* GetPostProcess(); // Function Phoenix.BroomFlightVFXActor.GetPostProcess // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	struct UNiagaraComponent* GetNiagara(); // Function Phoenix.BroomFlightVFXActor.GetNiagara // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	struct AFlyingBroom* GetBroomCapsule(); // Function Phoenix.BroomFlightVFXActor.GetBroomCapsule // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void DestroyNiagaraAndPostProcessComponent(); // Function Phoenix.BroomFlightVFXActor.DestroyNiagaraAndPostProcessComponent // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void CreateBroomMaterialDynamic(); // Function Phoenix.BroomFlightVFXActor.CreateBroomMaterialDynamic // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.InventoryItemTool
// Size: 0x430 (Inherited: 0x2e0)
struct AInventoryItemTool : ATool {
	struct FInventoryResult InventoryResult; // 0x2e0(0x88)
	struct FItemProperties ItemProperties; // 0x368(0x6c)
	bool bTriggerAbilityOnConsume; // 0x3d4(0x01)
	char pad_3D5[0x3]; // 0x3d5(0x03)
	struct FSelectableName CustomAbilityName; // 0x3d8(0x08)
	struct UObject* UseItemAbility; // 0x3e0(0x08)
	struct UObject* EquipItemAbility; // 0x3e8(0x08)
	struct UObject* HoldItemAbility; // 0x3f0(0x08)
	struct UObject* HandOnlyItemAbility; // 0x3f8(0x08)
	enum class ELeftArmState LeftArmState; // 0x400(0x01)
	enum class ERightArmState RightArmState; // 0x401(0x01)
	enum class EHeadTrackingState HeadTrackingState; // 0x402(0x01)
	bool bDisableRiderHandIK; // 0x403(0x01)
	float MinUsageTime; // 0x404(0x04)
	float MaxUsageTime; // 0x408(0x04)
	float UnEquipTimer; // 0x40c(0x04)
	bool bStartUnequipTimerOnConsume; // 0x410(0x01)
	bool bAllowUseWhenCountIsZero; // 0x411(0x01)
	bool bIgnoresTargets; // 0x412(0x01)
	bool bHideWhenDepleted; // 0x413(0x01)
	struct FName_GameLogicVarBool ContextToSet; // 0x414(0x08)
	bool bUseItemOnEndSelection; // 0x41c(0x01)
	bool bHasCustomAnimation; // 0x41d(0x01)
	char pad_41E[0x12]; // 0x41e(0x12)

	void UseItem(); // Function Phoenix.InventoryItemTool.UseItem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3311b80
	void UnequipTool(); // Function Phoenix.InventoryItemTool.UnequipTool // (Final|Native|Protected|BlueprintCallable) // @ game+0x33117b0
	void TimeOutTimerExpired(); // Function Phoenix.InventoryItemTool.TimeOutTimerExpired // (Final|Native|Public) // @ game+0x33117b0
	void StartUnequipTimer(); // Function Phoenix.InventoryItemTool.StartUnequipTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x3310d10
	struct AMunitionType_Base* SpawnMunition(struct AMunitionType_Base* MunitionClass, struct FVector SourceLocation); // Function Phoenix.InventoryItemTool.SpawnMunition // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3310c20
	void SpawnInventoryObject(bool bFlag); // Function Phoenix.InventoryItemTool.SpawnInventoryObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1545f20
	void SetSpeedBasedOnDistance(struct AMunitionType_Base* Munition, float Time, float MinSpeed, float MaxSpeed); // Function Phoenix.InventoryItemTool.SetSpeedBasedOnDistance // (Native|Public|BlueprintCallable) // @ game+0x3310a50
	void OnItemConsumed(); // Function Phoenix.InventoryItemTool.OnItemConsumed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x169e4a0
	void OnHidden(bool bFlag); // Function Phoenix.InventoryItemTool.OnHidden // (Native|Event|Public|BlueprintEvent) // @ game+0x3234680
	void OnDeactivate(); // Function Phoenix.InventoryItemTool.OnDeactivate // (Native|Event|Public|BlueprintEvent) // @ game+0x3310210
	void OnCustomAnimation(); // Function Phoenix.InventoryItemTool.OnCustomAnimation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31f7ff0
	void OnActivate(); // Function Phoenix.InventoryItemTool.OnActivate // (Native|Event|Public|BlueprintEvent) // @ game+0x3310030
	bool ItemHasCustomAnimation(); // Function Phoenix.InventoryItemTool.ItemHasCustomAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x330fff0
	void ItemEvent(struct FName EventName); // Function Phoenix.InventoryItemTool.ItemEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x330ff60
	enum class ELeftArmState GetLeftArmState(struct FName Mechanic); // Function Phoenix.InventoryItemTool.GetLeftArmState // (Native|Public|BlueprintCallable) // @ game+0x330f100
	struct UInventoryItemToolRecord* GetInventoryItemToolRecord(); // Function Phoenix.InventoryItemTool.GetInventoryItemToolRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x330e920
	struct ACharacter* GetCharacter(); // Function Phoenix.InventoryItemTool.GetCharacter // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x330e3d0
	void FullBodyItemUsageCompleted(); // Function Phoenix.InventoryItemTool.FullBodyItemUsageCompleted // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e06d0
	void EndItemUsage(); // Function Phoenix.InventoryItemTool.EndItemUsage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x330e3b0
	void EndItemSelection(); // Function Phoenix.InventoryItemTool.EndItemSelection // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x169c790
	bool ConsumeItem(); // Function Phoenix.InventoryItemTool.ConsumeItem // (Native|Public|BlueprintCallable) // @ game+0x330e160
	struct FVector ComputeVelocityToTarget(struct AActor* ProjectileActor, float Time, float MinSpeed, float MaxSpeed); // Function Phoenix.InventoryItemTool.ComputeVelocityToTarget // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x330dfd0
	void CancelUnequipTimer(); // Function Phoenix.InventoryItemTool.CancelUnequipTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x330df30
	void BeginItemUsage(); // Function Phoenix.InventoryItemTool.BeginItemUsage // (Native|Event|Public|BlueprintEvent) // @ game+0x330dd70
};

// Class Phoenix.BroomItemTool
// Size: 0x4a8 (Inherited: 0x430)
struct ABroomItemTool : AInventoryItemTool {
	struct AFlyingBroom* FlyingBroomClass; // 0x430(0x08)
	struct AFlyingBroom* FlyingBroomProp; // 0x438(0x08)
	float SpeedBoostUnavailableMessageTimeout; // 0x440(0x04)
	float SpeedBoostOnCooldownMessageTimeout; // 0x444(0x04)
	struct TSoftObjectPtr<UAnimationArchitectAsset> RiderAnimationSetArchitectAsset; // 0x448(0x28)
	struct UAnimationArchitectAsset* LoadedAnims; // 0x470(0x08)
	char pad_478[0x30]; // 0x478(0x30)

	void SpawnAndMountBroom(bool bUseTransition, bool bInDestroyAfterMount); // Function Phoenix.BroomItemTool.SpawnAndMountBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x3221c60
	void OnAnimsLoaded(bool bUseTransition); // Function Phoenix.BroomItemTool.OnAnimsLoaded // (Final|Native|Public) // @ game+0x32218d0
	void MountBroom(bool bUseTransition); // Function Phoenix.BroomItemTool.MountBroom // (Final|Native|Public) // @ game+0x3221840
};

// Class Phoenix.BroomPreviewLocator
// Size: 0x248 (Inherited: 0x248)
struct ABroomPreviewLocator : AActor {
};

// Class Phoenix.BroomRiderSpawner
// Size: 0x290 (Inherited: 0x248)
struct ABroomRiderSpawner : AActor {
	struct USplineComponent* BroomSpline; // 0x248(0x08)
	struct UFlyingBroomPhysics_Spline* FlyingBroomPhysics; // 0x250(0x08)
	struct FMulticastInlineDelegate OnScheduledEntityLoaded; // 0x258(0x10)
	struct TArray<struct AFlyingBroom*> SpawnedBrooms; // 0x268(0x10)
	struct TArray<struct FSpawnedStudent> SpawnedBroomStudents; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)

	void ScheduledEntityLoaded__DelegateSignature(struct UScheduledEntity* ScheduledEntity, struct AFlyingBroom* FlyingBroom, struct AEnemyBroomRider_AiController* BroomRiderAIController); // DelegateFunction Phoenix.BroomRiderSpawner.ScheduledEntityLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool RequestBroomNPC(enum class EHoboType HoboType, enum class HouseIds InHouse, enum class EGenderEnum InGender, struct TArray<struct FString>& ValidVoiceIDs, struct AFlyingBroom* FlyingBroom, enum class EBroomEnemyState StudentAISpawnState, float MaxSpeed); // Function Phoenix.BroomRiderSpawner.RequestBroomNPC // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32219f0
	void OnFleshLoadComplete(struct AActor* ScheduledEntityActor); // Function Phoenix.BroomRiderSpawner.OnFleshLoadComplete // (Final|Native|Private) // @ game+0x3221960
	void DestroyAllRiders(); // Function Phoenix.BroomRiderSpawner.DestroyAllRiders // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
};

// Class Phoenix.BroomSpline
// Size: 0x278 (Inherited: 0x248)
struct ABroomSpline : AActor {
	struct USplineComponent* Spline; // 0x248(0x08)
	struct TSoftObjectPtr<AActor> SplineToCopy; // 0x250(0x28)

	void GetSplinePointWorldPositions(struct TArray<struct FVector>& OutSplinePathPoints); // Function Phoenix.BroomSpline.GetSplinePointWorldPositions // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3221790
	void CopySelectedSpline(); // Function Phoenix.BroomSpline.CopySelectedSpline // (Final|Native|Public) // @ game+0x3221770
};

// Class Phoenix.BroomSplineRecorderComponent
// Size: 0x270 (Inherited: 0x220)
struct UBroomSplineRecorderComponent : USceneComponent {
	struct FMulticastInlineDelegate BroomSplineRecordDelegate; // 0x218(0x10)
	struct FMulticastInlineDelegate BroomSplinePlaybackDelegate; // 0x228(0x10)
	struct FMulticastInlineDelegate BroomSplineStopPlaybackDelegate; // 0x238(0x10)
	struct FString SplineToPlay; // 0x248(0x10)
	struct FString SplineToStop; // 0x258(0x10)

	void SaveSplineToEditor(struct USplineComponent* SplineToSave); // Function Phoenix.BroomSplineRecorderComponent.SaveSplineToEditor // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	bool IsRecording(); // Function Phoenix.BroomSplineRecorderComponent.IsRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x19e8aa0
};

// Class Phoenix.BTDecorator_CreatureAttackAvailable
// Size: 0x98 (Inherited: 0x68)
struct UBTDecorator_CreatureAttackAvailable : UBTDecorator {
	struct UCreatureCombatAttackData* AttackData; // 0x68(0x08)
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
};

// Class Phoenix.BTDecorator_CreatureCombatSubtreeAvailable
// Size: 0x70 (Inherited: 0x68)
struct UBTDecorator_CreatureCombatSubtreeAvailable : UBTDecorator {
	struct UCreatureCombatData* CombatData; // 0x68(0x08)
};

// Class Phoenix.BTDecorator_Creature_CanHerd
// Size: 0x68 (Inherited: 0x68)
struct UBTDecorator_Creature_CanHerd : UBTDecorator {
};

// Class Phoenix.BTDecorator_Creature_CanGraze
// Size: 0x68 (Inherited: 0x68)
struct UBTDecorator_Creature_CanGraze : UBTDecorator {
};

// Class Phoenix.BTDecorator_Creature_Gait
// Size: 0xc0 (Inherited: 0x68)
struct UBTDecorator_Creature_Gait : UBTDecorator {
	struct TSet<enum class ECreatureMovementSpeed> Gaits; // 0x68(0x50)
	bool bAllowGaitTransition; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Phoenix.BTDecorator_Creature_Stance
// Size: 0xc0 (Inherited: 0x68)
struct UBTDecorator_Creature_Stance : UBTDecorator {
	struct TSet<enum class ECreatureStance> Stances; // 0x68(0x50)
	bool bAllowStanceTransition; // 0xb8(0x01)
	bool bAllowIdleVariation; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)
};

// Class Phoenix.BTDecorator_CreatureCheckNavmeshAreaFlag
// Size: 0xe0 (Inherited: 0x68)
struct UBTDecorator_CreatureCheckNavmeshAreaFlag : UBTDecorator {
	bool bUseCreaturePreferredAreaFlags; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	struct FOdcFlags CustomAreaFlags; // 0x6c(0x04)
	struct FAIDataProviderFloatValue ParameterizedHorizontalQueryRadius; // 0x70(0x38)
	struct FAIDataProviderFloatValue ParameterizedVerticalQueryRadius; // 0xa8(0x38)
};

// Class Phoenix.BTDCustomLoopCount
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount : UObject {
};

// Class Phoenix.BTDecorator_CustomLoop
// Size: 0x70 (Inherited: 0x68)
struct UBTDecorator_CustomLoop : UBTDecorator {
	struct UBTDCustomLoopCount* LoopCount; // 0x68(0x08)
};

// Class Phoenix.BTDCustomLoopCount_BlackboardInt
// Size: 0x50 (Inherited: 0x28)
struct UBTDCustomLoopCount_BlackboardInt : UBTDCustomLoopCount {
	struct FBlackboardKeySelector BlackboardKey; // 0x28(0x28)
};

// Class Phoenix.BTDCustomLoopCount_CreatureCombat_MaxNumChainedAttacks
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount_CreatureCombat_MaxNumChainedAttacks : UBTDCustomLoopCount {
};

// Class Phoenix.BTDCustomLoopCount_CreatureCombat_NumBehaviorCyclesBeforeReposition
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount_CreatureCombat_NumBehaviorCyclesBeforeReposition : UBTDCustomLoopCount {
};

// Class Phoenix.BTDCustomLoopCount_CreatureIdle_NumExploreCycles
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount_CreatureIdle_NumExploreCycles : UBTDCustomLoopCount {
};

// Class Phoenix.BTDCustomLoopCount_CreatureIdle_NumRestCycles
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount_CreatureIdle_NumRestCycles : UBTDCustomLoopCount {
};

// Class Phoenix.BTDCustomLoopCount_CreatureIdle_NumForageCycles
// Size: 0x28 (Inherited: 0x28)
struct UBTDCustomLoopCount_CreatureIdle_NumForageCycles : UBTDCustomLoopCount {
};

// Class Phoenix.BTDecorator_HasActorTag
// Size: 0x70 (Inherited: 0x68)
struct UBTDecorator_HasActorTag : UBTDecorator {
	struct FName TagName; // 0x68(0x08)
};

// Class Phoenix.BTDecorator_IsPositionNearNavMesh
// Size: 0x98 (Inherited: 0x68)
struct UBTDecorator_IsPositionNearNavMesh : UBTDecorator {
	struct FBlackboardKeySelector LocationKey; // 0x68(0x28)
	float MaxDistanceToNavMesh; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.BTDecorator_MovementMode
// Size: 0xb8 (Inherited: 0x68)
struct UBTDecorator_MovementMode : UBTDecorator {
	struct TSet<enum class EMovementMode> MovementModes; // 0x68(0x50)
};

// Class Phoenix.BTDecorator_ShouldFlyTo
// Size: 0x90 (Inherited: 0x68)
struct UBTDecorator_ShouldFlyTo : UBTDecorator {
	struct FBlackboardKeySelector TargetKey; // 0x68(0x28)
};

// Class Phoenix.BTService_360Sight
// Size: 0x78 (Inherited: 0x70)
struct UBTService_360Sight : UBTService {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.BTService_Camera_EstimateFallDuration
// Size: 0xc8 (Inherited: 0x70)
struct UBTService_Camera_EstimateFallDuration : UBTService {
	float MaxFallDuration; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct FBlackboardKeySelector EstimatedFallDurationKey; // 0x78(0x28)
	struct FBlackboardKeySelector TotalFallDurationKey; // 0xa0(0x28)
};

// Class Phoenix.BTService_CameraBase
// Size: 0x70 (Inherited: 0x70)
struct UBTService_CameraBase : UBTService {
};

// Class Phoenix.BTService_CameraCombat
// Size: 0x130 (Inherited: 0x70)
struct UBTService_CameraCombat : UBTService_CameraBase {
	char pad_70[0x8]; // 0x70(0x08)
	struct FBlackboardKeySelector InCombatKey; // 0x78(0x28)
	char pad_A0[0x18]; // 0xa0(0x18)
	struct FBlackboardKeySelector NumAwareEnemiesKey; // 0xb8(0x28)
	struct FBlackboardKeySelector NumAggroEnemiesKey; // 0xe0(0x28)
	struct FBlackboardKeySelector NumAttackingEnemiesKey; // 0x108(0x28)
};

// Class Phoenix.BTService_CameraInput
// Size: 0x1c0 (Inherited: 0x70)
struct UBTService_CameraInput : UBTService_CameraBase {
	char pad_70[0x8]; // 0x70(0x08)
	struct FBlackboardKeySelector LookingKey; // 0x78(0x28)
	char pad_A0[0x8]; // 0xa0(0x08)
	struct FBlackboardKeySelector TargetingKey; // 0xa8(0x28)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct FBlackboardKeySelector ResettingKey; // 0xd8(0x28)
	char pad_100[0x8]; // 0x100(0x08)
	struct FBlackboardKeySelector LastInputKey; // 0x108(0x28)
	struct TSet<enum class ELastCameraInput> LastInputTypes; // 0x130(0x50)
	char pad_180[0x8]; // 0x180(0x08)
	struct FBlackboardKeySelector TransfigIsContextSetKey; // 0x188(0x28)
	struct FInputContextWithType TransfigIsContextSetType; // 0x1b0(0x0c)
	char pad_1BC[0x4]; // 0x1bc(0x04)
};

// Class Phoenix.BTService_CameraLookAt
// Size: 0xd0 (Inherited: 0x70)
struct UBTService_CameraLookAt : UBTService_CameraBase {
	char pad_70[0x8]; // 0x70(0x08)
	struct FBlackboardKeySelector LookAtStrengthKey; // 0x78(0x28)
	char pad_A0[0x8]; // 0xa0(0x08)
	struct FBlackboardKeySelector UserInputActiveKey; // 0xa8(0x28)
};

// Class Phoenix.BTService_CameraMain
// Size: 0x998 (Inherited: 0x70)
struct UBTService_CameraMain : UBTService_CameraBase {
	char pad_70[0x8]; // 0x70(0x08)
	struct FBlackboardKeySelector DodgingKey; // 0x78(0x28)
	char pad_A0[0x8]; // 0xa0(0x08)
	struct FBlackboardKeySelector SlidingKey; // 0xa8(0x28)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct FBlackboardKeySelector SwimmingKey; // 0xd8(0x28)
	char pad_100[0x8]; // 0x100(0x08)
	struct FBlackboardKeySelector SprintingKey; // 0x108(0x28)
	char pad_130[0x8]; // 0x130(0x08)
	struct FBlackboardKeySelector LookingKey; // 0x138(0x28)
	struct FBlackboardKeySelector TimeSinceLastInputKey; // 0x160(0x28)
	char pad_188[0x8]; // 0x188(0x08)
	struct FBlackboardKeySelector TargetingKey; // 0x190(0x28)
	char pad_1B8[0x8]; // 0x1b8(0x08)
	struct FBlackboardKeySelector StairGlidingKey; // 0x1c0(0x28)
	struct FGameplayTag StairGlidingTag; // 0x1e8(0x08)
	char pad_1F0[0x8]; // 0x1f0(0x08)
	struct FBlackboardKeySelector FlyingBroomKey; // 0x1f8(0x28)
	char pad_220[0x8]; // 0x220(0x08)
	struct FBlackboardKeySelector BroomIsMountingKey; // 0x228(0x28)
	char pad_250[0x8]; // 0x250(0x08)
	struct FBlackboardKeySelector BroomIsInFastFlightKey; // 0x258(0x28)
	char pad_280[0x8]; // 0x280(0x08)
	struct FBlackboardKeySelector BroomBoostOrTurboKey; // 0x288(0x28)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct FBlackboardKeySelector SplineFlyingBroomKey; // 0x2b8(0x28)
	char pad_2E0[0x8]; // 0x2e0(0x08)
	struct FBlackboardKeySelector ShadowSprintingKey; // 0x2e8(0x28)
	char pad_310[0x10]; // 0x310(0x10)
	struct FBlackboardKeySelector MountIDKey; // 0x320(0x28)
	char pad_348[0x8]; // 0x348(0x08)
	struct FBlackboardKeySelector ClimbingLedgeKey; // 0x350(0x28)
	struct FBlackboardKeySelector ClimbingLedgeStateKey; // 0x378(0x28)
	char pad_3A0[0x8]; // 0x3a0(0x08)
	struct FBlackboardKeySelector ClimbingLadderKey; // 0x3a8(0x28)
	char pad_3D0[0x8]; // 0x3d0(0x08)
	struct FBlackboardKeySelector CrouchingKey; // 0x3d8(0x28)
	char pad_400[0x8]; // 0x400(0x08)
	struct FBlackboardKeySelector FallingKey; // 0x408(0x28)
	struct TSet<enum class EJumpingType> FallingJumpStates; // 0x430(0x50)
	char pad_480[0x8]; // 0x480(0x08)
	struct FBlackboardKeySelector JumpingKey; // 0x488(0x28)
	struct FBlackboardKeySelector JumpingTypeKey; // 0x4b0(0x28)
	struct TSet<enum class EJumpingType> JumpingJumpStates; // 0x4d8(0x50)
	struct TSet<enum class EClimbingLedgeState> JumpingClimbingLedgeStates; // 0x528(0x50)
	char pad_578[0x8]; // 0x578(0x08)
	struct FBlackboardKeySelector MoveFocusSecondaryTargetKey; // 0x580(0x28)
	char pad_5A8[0x8]; // 0x5a8(0x08)
	struct FBlackboardKeySelector LockOnSecondaryTargetKey; // 0x5b0(0x28)
	char pad_5D8[0x8]; // 0x5d8(0x08)
	struct FBlackboardKeySelector AimModeSecondaryTargetKey; // 0x5e0(0x28)
	char pad_608[0x8]; // 0x608(0x08)
	struct FBlackboardKeySelector StationaryTransfigSecondaryTargetKey; // 0x610(0x28)
	char pad_638[0x8]; // 0x638(0x08)
	struct FBlackboardKeySelector KillCamSecondaryTargetKey; // 0x640(0x28)
	char pad_668[0x8]; // 0x668(0x08)
	struct FBlackboardKeySelector SpellSecondaryTargetKey; // 0x670(0x28)
	char pad_698[0x8]; // 0x698(0x08)
	struct FBlackboardKeySelector HasSpellCastTargetKey; // 0x6a0(0x28)
	float SpellCastTargetTimeout; // 0x6c8(0x04)
	char pad_6CC[0x4]; // 0x6cc(0x04)
	struct FBlackboardKeySelector TransfigIsContextSetKey; // 0x6d0(0x28)
	struct FInputContextWithType TransfigIsContextSetType; // 0x6f8(0x0c)
	char pad_704[0x4]; // 0x704(0x04)
	struct FBlackboardKeySelector CaptureIsContextSetKey; // 0x708(0x28)
	struct FInputContextWithType CaptureIsContextSetType; // 0x730(0x0c)
	char pad_73C[0x4]; // 0x73c(0x04)
	struct FBlackboardKeySelector CaptureIsSuccessfulKey; // 0x740(0x28)
	struct FInputContextWithType CaptureInProgressContextKey; // 0x768(0x0c)
	char pad_774[0x4]; // 0x774(0x04)
	struct FBlackboardKeySelector DuelingIsContextSetKey; // 0x778(0x28)
	struct FInputContextWithType DuelingIsContextSetType; // 0x7a0(0x0c)
	char pad_7AC[0x4]; // 0x7ac(0x04)
	struct FBlackboardKeySelector IsCreatureInteractionActiveKey; // 0x7b0(0x28)
	char pad_7D8[0x10]; // 0x7d8(0x10)
	struct FBlackboardKeySelector ActiveSpellKey; // 0x7e8(0x28)
	char pad_810[0x8]; // 0x810(0x08)
	struct FBlackboardKeySelector IsChargingSpellKey; // 0x818(0x28)
	struct FInputContextWithType IsChargingSpellContext; // 0x840(0x0c)
	char pad_84C[0x4]; // 0x84c(0x04)
	struct TSet<struct FName> ChargingSpellNames; // 0x850(0x50)
	char pad_8A0[0x8]; // 0x8a0(0x08)
	struct FBlackboardKeySelector RequestedAnimationIdKey; // 0x8a8(0x28)
	char pad_8D0[0x8]; // 0x8d0(0x08)
	struct FBlackboardKeySelector LookAtStrengthKey; // 0x8d8(0x28)
	char pad_900[0x8]; // 0x900(0x08)
	struct FBlackboardKeySelector HasLookAtOverrideActorKey; // 0x908(0x28)
	char pad_930[0x8]; // 0x930(0x08)
	struct FBlackboardKeySelector InFullBodyReactionKey; // 0x938(0x28)
	struct FInputContextWithType FullBodyReactionContext; // 0x960(0x0c)
	char pad_96C[0x4]; // 0x96c(0x04)
	struct FBlackboardKeySelector IsRagdollingKey; // 0x970(0x28)
};

// Class Phoenix.BTService_CameraMount
// Size: 0x220 (Inherited: 0x70)
struct UBTService_CameraMount : UBTService_CameraBase {
	char pad_70[0x8]; // 0x70(0x08)
	struct FBlackboardKeySelector MountingCreatureKey; // 0x78(0x28)
	char pad_A0[0x8]; // 0xa0(0x08)
	struct FBlackboardKeySelector DismountingCreatureKey; // 0xa8(0x28)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct FBlackboardKeySelector TrotMountOrDismountKey; // 0xd8(0x28)
	char pad_100[0x8]; // 0x100(0x08)
	struct FBlackboardKeySelector MountGaitKey; // 0x108(0x28)
	char pad_130[0x8]; // 0x130(0x08)
	struct FBlackboardKeySelector MountMovementStateKey; // 0x138(0x28)
	char pad_160[0x8]; // 0x160(0x08)
	struct FBlackboardKeySelector MountTakingOffKey; // 0x168(0x28)
	char pad_190[0x8]; // 0x190(0x08)
	struct FBlackboardKeySelector MountMovementModeKey; // 0x198(0x28)
	char pad_1C0[0x8]; // 0x1c0(0x08)
	struct FBlackboardKeySelector MountChargingKey; // 0x1c8(0x28)
	char pad_1F0[0x8]; // 0x1f0(0x08)
	struct FBlackboardKeySelector MountIdleBreakKey; // 0x1f8(0x28)
};

// Class Phoenix.BTService_Creature_ActiveCombatData
// Size: 0x80 (Inherited: 0x70)
struct UBTService_Creature_ActiveCombatData : UBTService {
	struct UCreatureCombatData* CombatData; // 0x70(0x08)
	bool bMarkActive; // 0x78(0x01)
	bool bExecutingAttack; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.BTService_Creature_AttackThreat
// Size: 0xa0 (Inherited: 0x70)
struct UBTService_Creature_AttackThreat : UBTService {
	enum class EEnemy_AttackThreatState AttackThreatState; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FBlackboardKeySelector TargetActorKey; // 0x78(0x28)
};

// Class Phoenix.BTService_Creature_AwareState
// Size: 0xa8 (Inherited: 0x70)
struct UBTService_Creature_AwareState : UBTService {
	enum class ENPC_TargetAwareState SelectedAwareState; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FBlackboardKeySelector TargetActorKey; // 0x78(0x28)
	bool bObserveBlackboardValue; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.BTService_Creature_DesiredWorldDirection
// Size: 0x70 (Inherited: 0x70)
struct UBTService_Creature_DesiredWorldDirection : UBTService {
};

// Class Phoenix.BTService_Creature_DisableShutdown
// Size: 0x70 (Inherited: 0x70)
struct UBTService_Creature_DisableShutdown : UBTService {
};

// Class Phoenix.BTService_Creature_IdleBreaks
// Size: 0x78 (Inherited: 0x70)
struct UBTService_Creature_IdleBreaks : UBTService {
	bool bCanUseIdleBreaks; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.BTService_Creature_LookAt
// Size: 0xa8 (Inherited: 0x70)
struct UBTService_Creature_LookAt : UBTService {
	enum class ECreatureLookAtBehaviorMode Mode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FBlackboardKeySelector TargetKey; // 0x78(0x28)
	bool bLookAtTarget; // 0xa0(0x01)
	bool bAimAtTarget; // 0xa1(0x01)
	bool bUrgentTarget; // 0xa2(0x01)
	char pad_A3[0x5]; // 0xa3(0x05)
};

// Class Phoenix.BTService_Creature_MissingNavmeshChecker
// Size: 0xa8 (Inherited: 0xa8)
struct UBTService_Creature_MissingNavmeshChecker : UBTService_MissingNavmeshChecker {
};

// Class Phoenix.BTService_Creature_ModifyAreaFlags
// Size: 0x78 (Inherited: 0x70)
struct UBTService_Creature_ModifyAreaFlags : UBTService {
	bool bReplace; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FOdcFlags AreaUsageFlags; // 0x74(0x04)
};

// Class Phoenix.BTService_Creature_OverlapChecker
// Size: 0xa0 (Inherited: 0x70)
struct UBTService_Creature_OverlapChecker : UBTService {
	struct FName TagName; // 0x70(0x08)
	struct FBlackboardKeySelector OverlappingActorBlackboardKey; // 0x78(0x28)
};

// Class Phoenix.BTService_Creature_ReservePerch
// Size: 0x70 (Inherited: 0x70)
struct UBTService_Creature_ReservePerch : UBTService {
};

// Class Phoenix.BTService_Creature_SetDesiredDirection
// Size: 0x98 (Inherited: 0x70)
struct UBTService_Creature_SetDesiredDirection : UBTService {
	struct FBlackboardKeySelector TargetActorOrLocationKey; // 0x70(0x28)
};

// Class Phoenix.BTService_Creature_ShouldExitCage
// Size: 0xe8 (Inherited: 0x70)
struct UBTService_Creature_ShouldExitCage : UBTService {
	struct FBlackboardKeySelector CageBlackboardKey; // 0x70(0x28)
	struct FBlackboardKeySelector ShouldExitBlackboardKey; // 0x98(0x28)
	struct FBlackboardKeySelector TargetBlackboardKey; // 0xc0(0x28)
};

// Class Phoenix.BTService_Creature_ShouldExitSlot
// Size: 0x98 (Inherited: 0x70)
struct UBTService_Creature_ShouldExitSlot : UBTService {
	struct FBlackboardKeySelector BlackboardKey; // 0x70(0x28)
};

// Class Phoenix.BTService_Creature_TargetPrediction
// Size: 0x168 (Inherited: 0x70)
struct UBTService_Creature_TargetPrediction : UBTService {
	struct FBlackboardKeySelector TargetActorKey; // 0x70(0x28)
	struct FBlackboardKeySelector PredictedLocationKey; // 0x98(0x28)
	float LookAheadTime; // 0xc0(0x04)
	bool bUseParameterizedLookAheadTime; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct FAIDataProviderFloatValue ParameterizedLookAheadTime; // 0xc8(0x38)
	enum class ECreatureTargetPredictionLookAheadOption LookAheadOption; // 0x100(0x04)
	float TargetVelocityInterpSpeed; // 0x104(0x04)
	bool bCommit; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float CommitTime; // 0x10c(0x04)
	bool bUseParameterizedCommitTime; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct FAIDataProviderFloatValue ParameterizedCommitTime; // 0x118(0x38)
	bool bSetDesiredDirection; // 0x150(0x01)
	bool bClampToDistanceRange; // 0x151(0x01)
	bool bClampToHeadingRange; // 0x152(0x01)
	bool bClampToStraightLineReachableOnNavmesh; // 0x153(0x01)
	float MaxStraightLineReachableAngleOffset; // 0x154(0x04)
	enum class ECreatureTargetPredictionStraightLineReachableOption StraightLineReachableOption; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
	struct UCreatureCombatAttackData* AttackData; // 0x160(0x08)
};

// Class Phoenix.BTService_Creature_TestPerchValid
// Size: 0x70 (Inherited: 0x70)
struct UBTService_Creature_TestPerchValid : UBTService {
};

// Class Phoenix.BTService_ListenForActorDamaged
// Size: 0x100 (Inherited: 0x70)
struct UBTService_ListenForActorDamaged : UBTService {
	struct FBlackboardKeySelector InstigatorKey; // 0x70(0x28)
	struct FBlackboardKeySelector VictimKey; // 0x98(0x28)
	struct FBlackboardKeySelector ResultKey; // 0xc0(0x28)
	bool bResetResultOnActivation; // 0xe8(0x01)
	bool bResetResultOnDeactivation; // 0xe9(0x01)
	bool bStopListeningAfterFirstSuccess; // 0xea(0x01)
	char pad_EB[0x15]; // 0xeb(0x15)
};

// Class Phoenix.BTService_MissionACKEQS
// Size: 0x108 (Inherited: 0xf0)
struct UBTService_MissionACKEQS : UBTService_RunEQS {
	char pad_F0[0x18]; // 0xf0(0x18)
};

// Class Phoenix.BTService_ScopedTag
// Size: 0x80 (Inherited: 0x70)
struct UBTService_ScopedTag : UBTService {
	struct FName TagName; // 0x70(0x08)
	bool bAddUnique; // 0x78(0x01)
	bool bRemoveAll; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Phoenix.BTService_SocialActionWitnessEQS
// Size: 0x120 (Inherited: 0xf0)
struct UBTService_SocialActionWitnessEQS : UBTService_RunEQS {
	char pad_F0[0x30]; // 0xf0(0x30)
};

// Class Phoenix.BTService_SocialReasoning
// Size: 0xd0 (Inherited: 0xd0)
struct UBTService_SocialReasoning : UBTService_AvaAITree {

	void Think(struct ASocialReasoning* SocialReasoning, struct FTimeEvent& TimeEvent); // Function Phoenix.BTService_SocialReasoning.Think // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void RunEQS_FindStations(struct ASocialReasoning* SocialReasoning, enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.BTService_SocialReasoning.RunEQS_FindStations // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void RunEQS_FindSocialReasonings(struct ASocialReasoning* SocialReasoning, enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.BTService_SocialReasoning.RunEQS_FindSocialReasonings // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void PlayerSighted(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.PlayerSighted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PerformTask_WaitForPlayer(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.PerformTask_WaitForPlayer // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PerformTask_MoveToStation(struct ASocialReasoning* SocialReasoning, struct UStationComponent* InStation, enum class EStationInteraction InStationInteractionType, struct FName InActionName, int32_t InConnectionIndex, float InStationUseDuration, bool InSkipValidationForTeleport); // Function Phoenix.BTService_SocialReasoning.PerformTask_MoveToStation // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PerformTask_MoveToLocation(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.PerformTask_MoveToLocation // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InteractionCallback(struct ASocialReasoning* SocialReasoning, struct UStationComponent* InStation); // Function Phoenix.BTService_SocialReasoning.InteractionCallback // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExecuteEQSQueryFinished(struct FQueryFinishedData& QueryFinishedDelegate, struct UEnvQueryInstanceBlueprintWrapper* QueryInstance, enum class EEnvQueryStatus QueryStatus); // Function Phoenix.BTService_SocialReasoning.ExecuteEQSQueryFinished // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x3225660
	void Companionship(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.Companionship // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Combat(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.Combat // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Chat(struct ASocialReasoning* SocialReasoning); // Function Phoenix.BTService_SocialReasoning.Chat // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.BTT_Biped_Talk_Helper
// Size: 0x28 (Inherited: 0x28)
struct UBTT_Biped_Talk_Helper : UBlueprintHelper {

	struct USceneRig* GetBTTBipedTalkSceneRig(); // Function Phoenix.BTT_Biped_Talk_Helper.GetBTTBipedTalkSceneRig // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3225790
};

// Class Phoenix.BTT_Camera_NotifyBlendComplete
// Size: 0x70 (Inherited: 0x70)
struct UBTT_Camera_NotifyBlendComplete : UBTT_Camera_Base {
};

// Class Phoenix.BTT_Enemy_FleeApparate
// Size: 0x98 (Inherited: 0x70)
struct UBTT_Enemy_FleeApparate : UBTTaskNode {
	char pad_70[0x28]; // 0x70(0x28)
};

// Class Phoenix.BTT_Enemy_InitTree
// Size: 0x98 (Inherited: 0x70)
struct UBTT_Enemy_InitTree : UBTTaskNode {
	struct FGameplayTag Tree; // 0x70(0x08)
	bool bForceEntry; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct TArray<enum class EEnemy_Ability> AbilityList; // 0x80(0x10)
	float Timeout; // 0x90(0x04)
	enum class EEnemy_InitTreeTimeoutAction TimeoutAction; // 0x94(0x01)
	bool AbortMove; // 0x95(0x01)
	char pad_96[0x2]; // 0x96(0x02)
};

// Class Phoenix.BTT_MoveToWithRadius
// Size: 0xb0 (Inherited: 0xb0)
struct UBTT_MoveToWithRadius : UBTTask_MoveTo {
};

// Class Phoenix.BTT_WaitForever
// Size: 0x70 (Inherited: 0x70)
struct UBTT_WaitForever : UBTTaskNode {
};

// Class Phoenix.BTTask_AddActorTag
// Size: 0x80 (Inherited: 0x70)
struct UBTTask_AddActorTag : UBTTaskNode {
	struct FName TagName; // 0x70(0x08)
	bool bAddUnique; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.BTTask_CopyActorLocation
// Size: 0xc0 (Inherited: 0x70)
struct UBTTask_CopyActorLocation : UBTTaskNode {
	struct FBlackboardKeySelector ActorKey; // 0x70(0x28)
	struct FBlackboardKeySelector LocationKey; // 0x98(0x28)
};

// Class Phoenix.BTTask_CopyBlackboardValue
// Size: 0xc0 (Inherited: 0x70)
struct UBTTask_CopyBlackboardValue : UBTTaskNode {
	struct FBlackboardKeySelector FromKey; // 0x70(0x28)
	struct FBlackboardKeySelector ToKey; // 0x98(0x28)
};

// Class Phoenix.BTTask_CopyBlackboardVector
// Size: 0xc0 (Inherited: 0xc0)
struct UBTTask_CopyBlackboardVector : UBTTask_CopyBlackboardValue {
};

// Class Phoenix.BTTask_CopyBlackboardInt
// Size: 0xc0 (Inherited: 0xc0)
struct UBTTask_CopyBlackboardInt : UBTTask_CopyBlackboardValue {
};

// Class Phoenix.BTTask_CopyBlackboardFloat
// Size: 0xc0 (Inherited: 0xc0)
struct UBTTask_CopyBlackboardFloat : UBTTask_CopyBlackboardValue {
};

// Class Phoenix.BTTask_CopyBlackboardBool
// Size: 0xc0 (Inherited: 0xc0)
struct UBTTask_CopyBlackboardBool : UBTTask_CopyBlackboardValue {
};

// Class Phoenix.BTTask_CopyBlackboardActor
// Size: 0xc0 (Inherited: 0xc0)
struct UBTTask_CopyBlackboardActor : UBTTask_CopyBlackboardValue {
};

// Class Phoenix.BTTask_Creature_ArrivedAtPathNode
// Size: 0x98 (Inherited: 0x70)
struct UBTTask_Creature_ArrivedAtPathNode : UBTTaskNode {
	struct FBlackboardKeySelector PathNodeKey; // 0x70(0x28)
};

// Class Phoenix.BTTask_Creature_BehaviorComplete
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_BehaviorComplete : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_BroadcastHerdLocation
// Size: 0xc0 (Inherited: 0x70)
struct UBTTask_Creature_BroadcastHerdLocation : UBTTaskNode {
	struct FBlackboardKeySelector InputLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector BroadcastLocationKey; // 0x98(0x28)
};

// Class Phoenix.BTTask_Creature_Circle_Flying
// Size: 0x130 (Inherited: 0x70)
struct UBTTask_Creature_Circle_Flying : UBTTaskNode {
	struct FBlackboardKeySelector CircleCenterKey; // 0x70(0x28)
	struct FBlackboardKeySelector CircleRadiusKey; // 0x98(0x28)
	float Height; // 0xc0(0x04)
	float HeightRandomDeviation; // 0xc4(0x04)
	enum class ECirclingDirection Direction; // 0xc8(0x01)
	char pad_C9[0x67]; // 0xc9(0x67)
};

// Class Phoenix.BTTask_Creature_EnableFlyingMovement
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_EnableFlyingMovement : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_FeedAtLocation
// Size: 0xc8 (Inherited: 0x70)
struct UBTTask_Creature_FeedAtLocation : UBTTaskNode {
	struct FBlackboardKeySelector FeedActorKey; // 0x70(0x28)
	struct FBlackboardKeySelector MoveToLocationKey; // 0x98(0x28)
	float ExtraFeedOffset; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class Phoenix.BTTask_Creature_FetchActorFromCreature
// Size: 0xe8 (Inherited: 0x70)
struct UBTTask_Creature_FetchActorFromCreature : UBTTaskNode {
	struct FBlackboardKeySelector TargetCreatureKey; // 0x70(0x28)
	struct FBlackboardKeySelector FetchActorKey; // 0x98(0x28)
	struct FBlackboardKeySelector OutputKey; // 0xc0(0x28)
};

// Class Phoenix.BTTask_Creature_FindCirclingLocation
// Size: 0x160 (Inherited: 0x70)
struct UBTTask_Creature_FindCirclingLocation : UBTTaskNode {
	struct FBlackboardKeySelector SearchRootLocationKey; // 0x70(0x28)
	struct FAIDataProviderFloatValue ParameterizedMinSearchRadius; // 0x98(0x38)
	struct FAIDataProviderFloatValue ParameterizedMaxSearchRadius; // 0xd0(0x38)
	struct FBlackboardKeySelector CircleCenterLocationKey; // 0x108(0x28)
	struct FBlackboardKeySelector CircleRadiusKey; // 0x130(0x28)
	int32_t SearchTicks; // 0x158(0x04)
	int32_t SearchTriesPerTick; // 0x15c(0x04)
};

// Class Phoenix.BTTask_Creature_FindClosestNavmeshLocation
// Size: 0xd0 (Inherited: 0x70)
struct UBTTask_Creature_FindClosestNavmeshLocation : UBTTaskNode {
	struct FBlackboardKeySelector SearchRootLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SearchResultLocationKey; // 0x98(0x28)
	bool bUseCreaturePreferredAreaFlags; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	struct FOdcFlags CustomAreaFlags; // 0xc4(0x04)
	bool bCheckReachable; // 0xc8(0x01)
	bool bFailIfNoLocationFound; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// Class Phoenix.BTTask_Creature_FindLandingConfiguration
// Size: 0x15d8 (Inherited: 0x70)
struct UBTTask_Creature_FindLandingConfiguration : UBTTaskNode {
	bool bUseCurrentPerch; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FBlackboardKeySelector TargetLocationKey; // 0x78(0x28)
	struct FBlackboardKeySelector LandASAPKey; // 0xa0(0x28)
	struct FBlackboardKeySelector LandingLocationKey; // 0xc8(0x28)
	struct FBlackboardKeySelector ApproachLocationKey; // 0xf0(0x28)
	struct FBlackboardKeySelector LandingDirectionKey; // 0x118(0x28)
	struct FBlackboardKeySelector LandingTypeKey; // 0x140(0x28)
	struct FBlackboardKeySelector IsPerchedKey; // 0x168(0x28)
	char pad_190[0x1448]; // 0x190(0x1448)
};

// Class Phoenix.BTTask_Creature_FindPerch
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_FindPerch : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_FindRandomReachableLocation
// Size: 0x1c8 (Inherited: 0x70)
struct UBTTask_Creature_FindRandomReachableLocation : UBTTaskNode {
	struct FAIDataProviderFloatValue ParameterizedMinSearchRadius; // 0x70(0x38)
	struct FAIDataProviderFloatValue ParameterizedMaxSearchRadius; // 0xa8(0x38)
	float LocationTestRadius; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct FAIDataProviderFloatValue ParameterizedLocationTestRadius; // 0xe8(0x38)
	bool bCheckLocationHasPreferredAreaFlag; // 0x120(0x01)
	bool bCheckLocationForDistanceToPath; // 0x121(0x01)
	bool bCheckLocationForMaxGroundSlope; // 0x122(0x01)
	char pad_123[0x5]; // 0x123(0x05)
	struct FBlackboardKeySelector SearchRootLocationKey; // 0x128(0x28)
	struct FBlackboardKeySelector SearchResultLocationKey; // 0x150(0x28)
	bool bUseMaxHeadingAngle; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
	struct FBlackboardKeySelector ForwardDirectionKey; // 0x180(0x28)
	float MaxHeadingAngleFromForward; // 0x1a8(0x04)
	bool bUseTether; // 0x1ac(0x01)
	bool bFailIfNoLocationFound; // 0x1ad(0x01)
	bool bReportErrorOnFailure; // 0x1ae(0x01)
	char pad_1AF[0x1]; // 0x1af(0x01)
	struct FName ErrorName; // 0x1b0(0x08)
	float ErrorTimeout; // 0x1b8(0x04)
	int32_t SearchTicks; // 0x1bc(0x04)
	int32_t SearchTriesPerTick; // 0x1c0(0x04)
	int32_t SearchReductions; // 0x1c4(0x04)
};

// Class Phoenix.BTTask_Creature_FindTakeoffConfiguration
// Size: 0xb0 (Inherited: 0x70)
struct UBTTask_Creature_FindTakeoffConfiguration : UBTTaskNode {
	struct TArray<struct FGameplayTagContainer> TakeoffAnimationArray; // 0x70(0x10)
	struct FBlackboardKeySelector MoveTargetLocationKey; // 0x80(0x28)
	int32_t MaxTakeoffTestsPerTick; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Phoenix.BTTask_Creature_Flee
// Size: 0xe0 (Inherited: 0x70)
struct UBTTask_Creature_Flee : UBTTaskNode {
	float AcceptableRadius; // 0x70(0x04)
	enum class ECreatureMovementSpeed MaximumMovementSpeed; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	struct FBlackboardKeySelector FleeTargetActorKey; // 0x78(0x28)
	bool bFollowLeader; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct FBlackboardKeySelector LeadActorKey; // 0xa8(0x28)
	bool bMatchLeadActorGait; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	int32_t SecondsBeforeFade; // 0xd4(0x04)
	float SecondsBeforeFinishingTask; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class Phoenix.BTTask_Creature_Flee_Flying
// Size: 0xf8 (Inherited: 0x70)
struct UBTTask_Creature_Flee_Flying : UBTTaskNode {
	struct FBlackboardKeySelector FleeTargetActorKey; // 0x70(0x28)
	char pad_98[0x60]; // 0x98(0x60)
};

// Class Phoenix.BTTask_Creature_KeepFlying
// Size: 0x98 (Inherited: 0x70)
struct UBTTask_Creature_KeepFlying : UBTTaskNode {
	char pad_70[0x28]; // 0x70(0x28)
};

// Class Phoenix.BTTask_Creature_Landing
// Size: 0xe8 (Inherited: 0x70)
struct UBTTask_Creature_Landing : UBTTaskNode {
	struct FBlackboardKeySelector LandingLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector LandingTypeKey; // 0x98(0x28)
	struct FBlackboardKeySelector IsPerchedKey; // 0xc0(0x28)
};

// Class Phoenix.BTTask_Creature_MoveTo
// Size: 0x158 (Inherited: 0xb0)
struct UBTTask_Creature_MoveTo : UBTTask_MoveTo {
	bool bUseApproachRange; // 0xb0(0x01)
	bool bUseParametrizedRadius; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
	struct FAIDataProviderFloatValue ParametrizedAcceptableRadius; // 0xb8(0x38)
	bool bKeepPreviousSpeed; // 0xf0(0x01)
	enum class ECreatureMoveToSpeedSetting SpeedSetting; // 0xf1(0x01)
	enum class ECreatureMovementSpeed SpeedChange; // 0xf2(0x01)
	bool bKeepPreviousPathEndMode; // 0xf3(0x01)
	enum class ECreaturePathEndMode PathEndModeChange; // 0xf4(0x01)
	bool bCheckTargetHasPreferredAreaFlag; // 0xf5(0x01)
	bool bCheckLocationStoppingDistancePastTarget; // 0xf6(0x01)
	bool bStoreStoppingDistance; // 0xf7(0x01)
	struct FBlackboardKeySelector StoppingDistanceLocationBlackboardKey; // 0xf8(0x28)
	bool bReportErrorOnFailure; // 0x120(0x01)
	bool bDisableReportOnStoppingDistanceFailure; // 0x121(0x01)
	char pad_122[0x2]; // 0x122(0x02)
	struct FName ErrorName; // 0x124(0x08)
	char pad_12C[0x4]; // 0x12c(0x04)
	struct FBlackboardKeySelector ErrorAccessoryKey; // 0x130(0x28)
};

// Class Phoenix.BTTask_Creature_MoveToWithDirection_Flying
// Size: 0xc0 (Inherited: 0x70)
struct UBTTask_Creature_MoveToWithDirection_Flying : UBTTaskNode {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector TargetDirectionKey; // 0x98(0x28)
};

// Class Phoenix.BTTask_Creature_PlaceGroupCoordinatedTagOnActor
// Size: 0xa8 (Inherited: 0x70)
struct UBTTask_Creature_PlaceGroupCoordinatedTagOnActor : UBTTaskNode {
	struct FName TagID; // 0x70(0x08)
	struct FBlackboardKeySelector ActorBlackboardKey; // 0x78(0x28)
	float LifeTime; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.BTTask_Creature_PlaceGroupCoordinatedTagsOnActors
// Size: 0x80 (Inherited: 0x70)
struct UBTTask_Creature_PlaceGroupCoordinatedTagsOnActors : UBTTaskNode {
	struct TArray<struct FTagPlacementOrder> AllOrders; // 0x70(0x10)
};

// Class Phoenix.BTTask_Creature_PlaceGroupCoordinatedTagOnLocation
// Size: 0xb0 (Inherited: 0x70)
struct UBTTask_Creature_PlaceGroupCoordinatedTagOnLocation : UBTTaskNode {
	struct FName TagID; // 0x70(0x08)
	struct FBlackboardKeySelector LocationBlackboardKey; // 0x78(0x28)
	float LocationRadius; // 0xa0(0x04)
	float LifeTime; // 0xa4(0x04)
	bool bRemoveExistingTags; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.BTTask_Creature_RandomizeApproachRange
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_RandomizeApproachRange : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_RandomizeExploreBehaviorLoops
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_RandomizeExploreBehaviorLoops : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_RandomizeIdleBehaviorLoops
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_Creature_RandomizeIdleBehaviorLoops : UBTTaskNode {
	bool bAdjustForTimeOfDayIfWild; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.BTTask_Creature_RandomizeForageBehaviorLoops
// Size: 0x70 (Inherited: 0x70)
struct UBTTask_Creature_RandomizeForageBehaviorLoops : UBTTaskNode {
};

// Class Phoenix.BTTask_Creature_RemoveGroupCoordinatedTagFromActor
// Size: 0xa8 (Inherited: 0x70)
struct UBTTask_Creature_RemoveGroupCoordinatedTagFromActor : UBTTaskNode {
	struct FName TagID; // 0x70(0x08)
	struct FBlackboardKeySelector ActorBlackboardKey; // 0x78(0x28)
	bool bMustBeOwnedBySelf; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.BTTask_Creature_RemoveGroupCoordinatedTagsFromActor
// Size: 0xb0 (Inherited: 0x70)
struct UBTTask_Creature_RemoveGroupCoordinatedTagsFromActor : UBTTaskNode {
	struct TArray<struct FName> TagIDs; // 0x70(0x10)
	struct FBlackboardKeySelector ActorBlackboardKey; // 0x80(0x28)
	bool bMustBeOwnedBySelf; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.BTTask_Creature_RemoveGroupCoordinatedTagsOfOwnerWithID
// Size: 0xa8 (Inherited: 0x70)
struct UBTTask_Creature_RemoveGroupCoordinatedTagsOfOwnerWithID : UBTTaskNode {
	enum class ECreatureGroupCoordinationTagTypesToRemove TagType; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FName TagID; // 0x74(0x08)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct FBlackboardKeySelector OwnerBlackboardKey; // 0x80(0x28)
};

// Class Phoenix.BTTask_Creature_ReportDebugError
// Size: 0x90 (Inherited: 0x70)
struct UBTTask_Creature_ReportDebugError : UBTTaskNode {
	struct FString ErrorText; // 0x70(0x10)
	bool bPersistent; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float LifeTime; // 0x84(0x04)
	bool bRemoveExistingPersistentErrors; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.BTTask_Creature_SetDesiredFlightState
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_Creature_SetDesiredFlightState : UBTTaskNode {
	enum class ECreatureFlightState FlightState; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.BTTask_Creature_SetGaitSpeed
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_Creature_SetGaitSpeed : UBTTaskNode {
	bool bSetGait; // 0x70(0x01)
	enum class ECreatureMovementSpeed Gait; // 0x71(0x01)
	bool bSetPathEndMode; // 0x72(0x01)
	enum class ECreaturePathEndMode PathEndMode; // 0x73(0x01)
	bool bSetStoppingMode; // 0x74(0x01)
	enum class ECreatureStoppingMode StoppingMode; // 0x75(0x01)
	char pad_76[0x2]; // 0x76(0x02)
};

// Class Phoenix.BTTask_Creature_SetSlopeHeadingTarget
// Size: 0xc8 (Inherited: 0x70)
struct UBTTask_Creature_SetSlopeHeadingTarget : UBTTaskNode {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector FacingTargetLocationKey; // 0x98(0x28)
	float MinNormalZValue; // 0xc0(0x04)
	float FacingMoveToLocationOffset; // 0xc4(0x04)
};

// Class Phoenix.BTTask_Creature_SetStance
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_Creature_SetStance : UBTTaskNode {
	enum class ECreatureStance Stance; // 0x70(0x01)
	bool bWait; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.BTTask_Creature_Takeoff
// Size: 0x88 (Inherited: 0x70)
struct UBTTask_Creature_Takeoff : UBTTaskNode {
	char pad_70[0x18]; // 0x70(0x18)
};

// Class Phoenix.BTTask_Creature_WaitUntilStationary
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_Creature_WaitUntilStationary : UBTTaskNode {
	bool bAllowAnimationTransition; // 0x70(0x01)
	bool bAllowIdleVariation; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.BTTask_GetDirectionBetween
// Size: 0xf0 (Inherited: 0x70)
struct UBTTask_GetDirectionBetween : UBTTaskNode {
	struct FBlackboardKeySelector FromLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector ToLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector ResultDirectionKey; // 0xc0(0x28)
	bool b2D; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.BTTask_RemoveActorTag
// Size: 0x80 (Inherited: 0x70)
struct UBTTask_RemoveActorTag : UBTTaskNode {
	struct FName TagName; // 0x70(0x08)
	bool bRemoveAll; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.BTTask_SendHermesMessage
// Size: 0x78 (Inherited: 0x70)
struct UBTTask_SendHermesMessage : UBTTaskNode {
	struct FName MessageName; // 0x70(0x08)
};

// Class Phoenix.BTTask_SetBlackboardValue
// Size: 0x98 (Inherited: 0x70)
struct UBTTask_SetBlackboardValue : UBTTaskNode {
	struct FBlackboardKeySelector Key; // 0x70(0x28)
};

// Class Phoenix.BTTask_SetBlackboardInt
// Size: 0xa0 (Inherited: 0x98)
struct UBTTask_SetBlackboardInt : UBTTask_SetBlackboardValue {
	int32_t Value; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.BTTask_SetBlackboardFloat
// Size: 0xa0 (Inherited: 0x98)
struct UBTTask_SetBlackboardFloat : UBTTask_SetBlackboardValue {
	float Value; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.BTTask_SetBlackboardBool
// Size: 0xa0 (Inherited: 0x98)
struct UBTTask_SetBlackboardBool : UBTTask_SetBlackboardValue {
	bool Value; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.BTTask_WaitBlackboardTimeWithDeviation
// Size: 0xa8 (Inherited: 0x78)
struct UBTTask_WaitBlackboardTimeWithDeviation : UBTTask_Wait {
	struct FBlackboardKeySelector BlackboardKey; // 0x78(0x28)
	float Deviation; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.BTTask_WaitForHermesMessage
// Size: 0x88 (Inherited: 0x70)
struct UBTTask_WaitForHermesMessage : UBTTaskNode {
	struct FName MessageName; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class Phoenix.BTTask_WaitProviderTime
// Size: 0xb8 (Inherited: 0x78)
struct UBTTask_WaitProviderTime : UBTTask_Wait {
	struct FAIDataProviderFloatValue ParameterizedWaitTime; // 0x78(0x38)
	float Deviation; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Phoenix.BuildNavDataCommandlet
// Size: 0x80 (Inherited: 0x80)
struct UBuildNavDataCommandlet : UCommandlet {
};

// Class Phoenix.CallOutAttachmentInterface
// Size: 0x28 (Inherited: 0x28)
struct UCallOutAttachmentInterface : UInterface {
};

// Class Phoenix.CallOutComponent
// Size: 0x700 (Inherited: 0x5d0)
struct UCallOutComponent : UWidgetComponent {
	bool OnScreen; // 0x5d0(0x01)
	bool targeted; // 0x5d1(0x01)
	bool EnemytoPlayer; // 0x5d2(0x01)
	char pad_5D3[0x5]; // 0x5d3(0x05)
	struct FMulticastInlineDelegate OnAssociatedBeaconUpdated; // 0x5d8(0x10)
	char pad_5E8[0x28]; // 0x5e8(0x28)
	struct FName BeaconIconName; // 0x610(0x08)
	struct FString BeaconTrackingBorder; // 0x618(0x10)
	struct FLinearColor BeaconColor; // 0x628(0x10)
	float BeaconSize; // 0x638(0x04)
	bool IsBeaconTracked; // 0x63c(0x01)
	struct FAttackStateInfo CurrentAttackStateInfo; // 0x63d(0x02)
	char pad_63F[0x1]; // 0x63f(0x01)
	struct FAwareStateInfo CurrentAwareStateInfo; // 0x640(0x08)
	float PostAlertKeepActiveTime; // 0x648(0x04)
	char pad_64C[0x84]; // 0x64c(0x84)
	struct UEnemyAIComponent* EnemyAIComp; // 0x6d0(0x08)
	struct UScheduledEntity* MyScheduledEntity; // 0x6d8(0x08)
	struct UWidget* OffScreenWidget; // 0x6e0(0x08)
	struct UWidget* OffScreenArrow; // 0x6e8(0x08)
	struct UCanvasPanelSlot* OffscreenWidgetHudSlot; // 0x6f0(0x08)
	char pad_6F8[0x8]; // 0x6f8(0x08)

	void UpdateCallOutUI(); // Function Phoenix.CallOutComponent.UpdateCallOutUI // (Native|Event|Public|BlueprintEvent) // @ game+0x1986d50
	void ShowWidgetForThisCallout(); // Function Phoenix.CallOutComponent.ShowWidgetForThisCallout // (Native|Event|Public|BlueprintEvent) // @ game+0x3229070
	void OnOutroEnded(struct UPhoenixUserWidget* BaseItem, int32_t OutroType); // Function Phoenix.CallOutComponent.OnOutroEnded // (Final|Native|Private) // @ game+0x3228fa0
	void HideWidgetForThisCallout(); // Function Phoenix.CallOutComponent.HideWidgetForThisCallout // (Native|Event|Public|BlueprintEvent) // @ game+0x3228f80
	void AwareStateInfoHandler(struct UObject* i_caller, struct FAwareStateInfo& AwareStateInfo); // Function Phoenix.CallOutComponent.AwareStateInfoHandler // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3228ea0
	void AttackThreatDataHandler(struct UObject* i_caller, struct FEnemy_AttackThreatData& AttackThreatData); // Function Phoenix.CallOutComponent.AttackThreatDataHandler // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3228db0
};

// Class Phoenix.CameraFixupActorAction
// Size: 0x40 (Inherited: 0x28)
struct UCameraFixupActorAction : UObject {
	struct FSceneRigStage_ActorReference Actor; // 0x28(0x10)
	bool Enabled; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.CameraFixupAdjustBoneFraming
// Size: 0x60 (Inherited: 0x30)
struct UCameraFixupAdjustBoneFraming : UCameraFixupOperation {
	struct UTransformProvider* TargetBone; // 0x30(0x08)
	struct UTransformProvider* ReferenceBone; // 0x38(0x08)
	struct UFloatProvider* DeadDistanceProvider; // 0x40(0x08)
	bool bRotate; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UFloatProvider* WeightProvider; // 0x50(0x08)
	char DrawDebug : 1; // 0x58(0x01)
	char pad_58_1 : 7; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// Class Phoenix.CameraFixupAdjustBoneFramingState
// Size: 0xc0 (Inherited: 0x40)
struct UCameraFixupAdjustBoneFramingState : UCameraFixupOperationState {
	char pad_40[0x10]; // 0x40(0x10)
	struct UTransformProvider* TargetBone; // 0x50(0x08)
	struct UTransformProvider* ReferenceBone; // 0x58(0x08)
	char pad_60[0x60]; // 0x60(0x60)
};

// Class Phoenix.CameraFixupOperations
// Size: 0x68 (Inherited: 0x30)
struct UCameraFixupOperations : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct USceneRigStage_SimpleConversation* StageClass; // 0x38(0x08)
	struct USceneRig_SimpleConversation* SceneRigClass; // 0x40(0x08)
	struct TArray<struct UCameraFixupOperation*> Operations; // 0x48(0x10)
	struct TArray<struct UCameraFixupActorAction*> ActorActions; // 0x58(0x10)
};

// Class Phoenix.CameraFixupVisibilityActorAction
// Size: 0x48 (Inherited: 0x40)
struct UCameraFixupVisibilityActorAction : UCameraFixupActorAction {
	enum class EManagedVisibilityPriority Priority; // 0x40(0x01)
	bool ShouldBeHidden; // 0x41(0x01)
	bool IncludeChildActors; // 0x42(0x01)
	char pad_43[0x5]; // 0x43(0x05)
};

// Class Phoenix.CameraHeightRenderSettingsComponent
// Size: 0xaf0 (Inherited: 0xae0)
struct UCameraHeightRenderSettingsComponent : URenderSettingsComponent {
	float StartEffectHeightMeters; // 0xad8(0x04)
	float FullEffectHeightMeters; // 0xadc(0x04)
	enum class EWorldBaseHeightAffect Base; // 0xae0(0x01)
	char pad_AE9[0x7]; // 0xae9(0x07)
};

// Class Phoenix.CameraHeightWithCullingRenderSettingsComponent
// Size: 0xb10 (Inherited: 0xaf0)
struct UCameraHeightWithCullingRenderSettingsComponent : UCameraHeightRenderSettingsComponent {
	struct TArray<struct FCameraHeightRenderSettingsCullVolume> CullVolumes; // 0xae8(0x10)
	struct TArray<struct FCameraHeightRenderSettingsCullVolume> SortedCullVolumes; // 0xaf8(0x10)
};

// Class Phoenix.CameraHeightWithPlayerRequirementsRenderSettingsComponent
// Size: 0xb20 (Inherited: 0xb10)
struct UCameraHeightWithPlayerRequirementsRenderSettingsComponent : UCameraHeightWithCullingRenderSettingsComponent {
	struct TArray<struct FName_GameLogicVarBool> PlayerRequirements; // 0xb08(0x10)
};

// Class Phoenix.RenderSettingsCustomBlendDomainCameraHeight
// Size: 0x38 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainCameraHeight : URenderSettingsCustomBlendDomain {
	float StartHeightMeters; // 0x28(0x04)
	float FullHeightMeters; // 0x2c(0x04)
	enum class EWorldBaseHeightAffect Base; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.RenderSettingsCustomBlendDomainPlayerRequirement
// Size: 0x30 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainPlayerRequirement : URenderSettingsCustomBlendDomain {
	struct FName_GameLogicVarBool PlayerRequirement; // 0x28(0x08)
};

// Class Phoenix.RenderSettingsCustomBlendDomainPlayerResult
// Size: 0x30 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainPlayerResult : URenderSettingsCustomBlendDomain {
	struct FName_GameLogicBoolResult PlayerResult; // 0x28(0x08)
};

// Class Phoenix.RenderSettingsCustomBlendDomainPlayerAimBlend
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainPlayerAimBlend : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.CameraTag_Conversation
// Size: 0x40 (Inherited: 0x28)
struct UCameraTag_Conversation : UAnimationArchitectTagProvider {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.Candles
// Size: 0x420 (Inherited: 0x258)
struct ACandles : AStaticMeshActor {
	bool bStartLit; // 0x258(0x01)
	bool bGIOnlyLight; // 0x259(0x01)
	bool bSimulatePhysics; // 0x25a(0x01)
	bool bStartAsleep; // 0x25b(0x01)
	bool bDestructible; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FLinearColor LightColor; // 0x260(0x10)
	bool bLightTemperature; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	float LightTemperature; // 0x274(0x04)
	bool bCastShadow; // 0x278(0x01)
	bool bCastVolumetricShadow; // 0x279(0x01)
	enum class ELightUnits PointLightUnit; // 0x27a(0x01)
	char pad_27B[0x1]; // 0x27b(0x01)
	float PointLightIntensity; // 0x27c(0x04)
	float CustomLightRadius; // 0x280(0x04)
	float SourceRadius_PL; // 0x284(0x04)
	float ShadowResolution_PL; // 0x288(0x04)
	float ContactShadowLength_PL; // 0x28c(0x04)
	float MSRShadowCaster_PL; // 0x290(0x04)
	float VolumetricScattering_PL; // 0x294(0x04)
	float IndirectLighting_PL; // 0x298(0x04)
	float MinDistance_PL; // 0x29c(0x04)
	float MaxDrawDistance_PL; // 0x2a0(0x04)
	bool bCustomLightPosition; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	struct FVector CustomLightPosition; // 0x2a8(0x0c)
	bool bCustomLightRotation; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	struct FRotator CustomLightRotation; // 0x2b8(0x0c)
	bool bUseLightTexture; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	struct UTexture* LightTexture; // 0x2c8(0x08)
	struct TArray<struct FWCullingPlane> CullingPlanes; // 0x2d0(0x10)
	bool bSpotlight; // 0x2e0(0x01)
	bool bSpotlightVolumetricShadow; // 0x2e1(0x01)
	enum class ELightUnits SpotlightUnit; // 0x2e2(0x01)
	char pad_2E3[0x1]; // 0x2e3(0x01)
	float SpotlightIntensity; // 0x2e4(0x04)
	float AttenuationRadius_SL; // 0x2e8(0x04)
	float SourceRadius_SL; // 0x2ec(0x04)
	float ShadowResolution_SL; // 0x2f0(0x04)
	float ShadowBias_SL; // 0x2f4(0x04)
	float ShadowSlopeBias_SL; // 0x2f8(0x04)
	float InnerConeAngle; // 0x2fc(0x04)
	float OuterConeAngle; // 0x300(0x04)
	float ContactShadowLength_SL; // 0x304(0x04)
	float MSRShadowCaster_SL; // 0x308(0x04)
	float VolumetricScattering_SL; // 0x30c(0x04)
	float IndirectLighting_SL; // 0x310(0x04)
	float MaxDrawDistance_SL; // 0x314(0x04)
	struct FVector SpotlightLocation; // 0x318(0x0c)
	struct FRotator SpotlightRotation; // 0x324(0x0c)
	struct TArray<struct FWCullingPlane> SpotlightCullingPlanes; // 0x330(0x10)
	float WaveSpeed1; // 0x340(0x04)
	float WaveSpeed2; // 0x344(0x04)
	float MinIntensity; // 0x348(0x04)
	float IntensityNoiseSpeed; // 0x34c(0x04)
	float IntensityNoiseFactor; // 0x350(0x04)
	bool bDayNightModulate; // 0x354(0x01)
	char pad_355[0x3]; // 0x355(0x03)
	float DayIntensityMod; // 0x358(0x04)
	struct FLinearColor DayColorMod; // 0x35c(0x10)
	float NightIntensityMod; // 0x36c(0x04)
	struct FLinearColor NightColorMod; // 0x370(0x10)
	struct UStaticMeshComponent* CandleMeshComp; // 0x380(0x08)
	struct UPointLightComponent* PointLightComp; // 0x388(0x08)
	struct USpotLightComponent* SpotLightComp; // 0x390(0x08)
	struct UAnimatedLightComponent* AnimatedLightComp; // 0x398(0x08)
	struct UDayNightLocalLightControllerComponent* LightControllerComp; // 0x3a0(0x08)
	struct UObjectStateInfo* CandleObjectState; // 0x3a8(0x08)
	struct TArray<struct UStaticMeshComponent*> CandleList; // 0x3b0(0x10)
	struct TArray<struct UMaterialBillboardComponent*> FlameMatList; // 0x3c0(0x10)
	bool bMovable; // 0x3d0(0x01)
	char pad_3D1[0x7]; // 0x3d1(0x07)
	struct UMaterialInstance* NoGlowMaterial; // 0x3d8(0x08)
	struct FTransform DPC_InitialTransform; // 0x3e0(0x30)
	enum class ELightUnits PreviousPLUnit; // 0x410(0x01)
	enum class ELightUnits PreviousSLUnit; // 0x411(0x01)
	char pad_412[0xe]; // 0x412(0x0e)

	void SetUpLights(struct UPointLightComponent* curPL, struct USpotLightComponent* curSL); // Function Phoenix.Candles.SetUpLights // (Final|Native|Protected|BlueprintCallable) // @ game+0x322cf70
	void ResetLightColor(); // Function Phoenix.Candles.ResetLightColor // (Final|Native|Public|BlueprintCallable) // @ game+0x322ceb0
	void CrossLightTickRange(bool bin); // Function Phoenix.Candles.CrossLightTickRange // (Final|Native|Protected|BlueprintCallable) // @ game+0x322c130
	void ChangeLightColor(struct FLinearColor i_Color, float i_temperature); // Function Phoenix.Candles.ChangeLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x322c060
	bool CandleSetup(struct UObjectStateComponent* i_ObjectStateComp, char i_CandleType, struct UAnimatedLightComponent* i_AnimatedLight, struct UPointLightComponent* i_PL, struct USpotLightComponent* i_SL); // Function Phoenix.Candles.CandleSetup // (Final|Native|Protected|BlueprintCallable) // @ game+0x322bec0
};

// Class Phoenix.CaptureDeviceItemTool
// Size: 0x700 (Inherited: 0x430)
struct ACaptureDeviceItemTool : AInventoryItemTool {
	struct UCapturingWidget* WidgetClass; // 0x430(0x08)
	float PerceptionNoiseEventLoudness; // 0x438(0x04)
	float PerceptionNoiseEventMaxRange; // 0x43c(0x04)
	bool TriggersSight; // 0x440(0x01)
	bool TriggersHearing; // 0x441(0x01)
	enum class ETargetSpeedMode UsingToolSpeedMode; // 0x442(0x01)
	char pad_443[0x1]; // 0x443(0x01)
	float GracePeriodTime; // 0x444(0x04)
	struct UAkAudioEvent* BeastCapture_MusicStartEvent; // 0x448(0x08)
	struct UAkAudioEvent* BeastCapture_MusicStopEvent; // 0x450(0x08)
	struct UAkAudioEvent* BeastCapture_SuccessStingerEvent; // 0x458(0x08)
	struct FGameplayTagContainer ReactionTagContainer; // 0x460(0x20)
	char pad_480[0x8]; // 0x480(0x08)
	enum class ECaptureState CurrentCaptureState; // 0x488(0x01)
	char pad_489[0x7]; // 0x489(0x07)
	struct ABiped_Player* BipedPlayer; // 0x490(0x08)
	char pad_498[0x4]; // 0x498(0x04)
	float CurrentDistance; // 0x49c(0x04)
	char pad_4A0[0x8]; // 0x4a0(0x08)
	struct UCapturingWidget* CaptureWidget; // 0x4a8(0x08)
	bool bEnableIntermediateGates; // 0x4b0(0x01)
	char pad_4B1[0x27]; // 0x4b1(0x27)
	struct TSet<struct FName> LargeTargetTypeNames; // 0x4d8(0x50)
	char pad_528[0x1c8]; // 0x528(0x1c8)
	struct FName OutOfRangeTutorialStat; // 0x6f0(0x08)
	struct FName OutOfRangeTutorial; // 0x6f8(0x08)

	void PlayCaptureStinger(); // Function Phoenix.CaptureDeviceItemTool.PlayCaptureStinger // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x322ce70
	void OnConfirmCapture(); // Function Phoenix.CaptureDeviceItemTool.OnConfirmCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x322c6a0
	void OnCompletedGate(bool bIsFinalGate); // Function Phoenix.CaptureDeviceItemTool.OnCompletedGate // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnCaptureStateChanged(enum class ECaptureState PreviousState, enum class ECaptureState NewState); // Function Phoenix.CaptureDeviceItemTool.OnCaptureStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnCancelCapture(); // Function Phoenix.CaptureDeviceItemTool.OnCancelCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x322c680
	bool IsTargetConsideredLarge(); // Function Phoenix.CaptureDeviceItemTool.IsTargetConsideredLarge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c540
	void InvalidateCachedMeshBounds(struct USkinnedMeshComponent* InMeshComponent); // Function Phoenix.CaptureDeviceItemTool.InvalidateCachedMeshBounds // (Final|Native|Public|BlueprintCallable) // @ game+0x322c370
	int32_t GetTotalNumGates(); // Function Phoenix.CaptureDeviceItemTool.GetTotalNumGates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c300
	struct AActor* GetTargetActor(); // Function Phoenix.CaptureDeviceItemTool.GetTargetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c2d0
	float GetProgressTowardNextGate(); // Function Phoenix.CaptureDeviceItemTool.GetProgressTowardNextGate // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x322c2a0
	int32_t GetNumGatesPassed(); // Function Phoenix.CaptureDeviceItemTool.GetNumGatesPassed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c280
	float GetMaxCapturingDistance(); // Function Phoenix.CaptureDeviceItemTool.GetMaxCapturingDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x322c250
	bool GetIsGateActive(); // Function Phoenix.CaptureDeviceItemTool.GetIsGateActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c230
	float GetCapturingProgress(); // Function Phoenix.CaptureDeviceItemTool.GetCapturingProgress // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x322c200
	void FinishSucceeding(); // Function Phoenix.CaptureDeviceItemTool.FinishSucceeding // (Final|Native|Protected|BlueprintCallable) // @ game+0x322c1e0
	void FinishCancelling(); // Function Phoenix.CaptureDeviceItemTool.FinishCancelling // (Final|Native|Protected|BlueprintCallable) // @ game+0x322c1c0
	void BeginCapturing(); // Function Phoenix.CaptureDeviceItemTool.BeginCapturing // (Final|Native|Public|BlueprintCallable) // @ game+0x322bd90
};

// Class Phoenix.CapturingWidget
// Size: 0x310 (Inherited: 0x2e8)
struct UCapturingWidget : UHUDElementGroup {
	struct ACaptureDeviceItemTool* CaptureDevice; // 0x2e8(0x08)
	struct USceneComponent* AttachedComponent; // 0x2f0(0x08)
	bool bIsProjectedFromOffscreen; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	struct FVector2D ProjectionDirection; // 0x2fc(0x08)
	char pad_304[0xc]; // 0x304(0x0c)

	void Show(); // Function Phoenix.CapturingWidget.Show // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RemoveFromHUD(); // Function Phoenix.CapturingWidget.RemoveFromHUD // (Final|Native|Public|BlueprintCallable) // @ game+0x322ce90
	void HideWhenReady(float HideAfterTime); // Function Phoenix.CapturingWidget.HideWhenReady // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WorldEventActor
// Size: 0x280 (Inherited: 0x248)
struct AWorldEventActor : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct TArray<struct UScheduledEntity*> Participants; // 0x250(0x10)
	struct UAnimationArchitectComponent* AnimationArcitectComponent; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	bool SetTemporaryAnimationOnCharacter(struct ANPC_Character* Character, int32_t AnimationIndex); // Function Phoenix.WorldEventActor.SetTemporaryAnimationOnCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2f00
	bool SetSpecificAnimationOnCharacter(struct ANPC_Character* Character, struct UAnimationArchitectAsset* AnimationArchitectAsset); // Function Phoenix.WorldEventActor.SetSpecificAnimationOnCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2da0
	struct UScheduledEntity* RequestHobo(struct FVector& InLocation, enum class EHoboType HoboType, enum class HouseIds InHouse, enum class EGenderEnum InGender, struct TArray<struct FString>& ValidVoiceIDs); // Function Phoenix.WorldEventActor.RequestHobo // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34e27e0
	struct UScheduledEntity* RequestCustomHobo(struct FString HoboName, struct FVector& InLocation, bool InIsMale); // Function Phoenix.WorldEventActor.RequestCustomHobo // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34e26a0
	bool RemoveDynamicActivityFromSE(struct UScheduledEntity* ScheduledEntity, struct FString ActivityID); // Function Phoenix.WorldEventActor.RemoveDynamicActivityFromSE // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e25b0
	bool ReleaseTemporaryAnimationFromCharacter(struct ANPC_Character* Character); // Function Phoenix.WorldEventActor.ReleaseTemporaryAnimationFromCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e24f0
	void ReleaseHobo(struct UScheduledEntity* InScheduledEntity, bool InDestroyImmediate); // Function Phoenix.WorldEventActor.ReleaseHobo // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2420
	void ReleaseAllHobos(bool InDestroyImmediate); // Function Phoenix.WorldEventActor.ReleaseAllHobos // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2370
	void PlayGhostStory(struct UScheduledEntity* InScheduledEntity, struct FName Story, struct FName Emotion); // Function Phoenix.WorldEventActor.PlayGhostStory // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2260
	void OnStartTriggerOverlapped(struct UWorldEventSocketComponent* Socket); // Function Phoenix.WorldEventActor.OnStartTriggerOverlapped // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnNoStartTriggerFound(); // Function Phoenix.WorldEventActor.OnNoStartTriggerFound // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void MarkStageAsIncomplete(int32_t Stage); // Function Phoenix.WorldEventActor.MarkStageAsIncomplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e1ed0
	void MarkStageAsCompleted(int32_t Stage); // Function Phoenix.WorldEventActor.MarkStageAsCompleted // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e1e40
	bool IsStageCompleted(int32_t Stage); // Function Phoenix.WorldEventActor.IsStageCompleted // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e1cf0
	bool InsertDynamicActivityOnSE(struct UScheduledEntity* ScheduledEntity, struct FString ActivityID, struct FString LocationID); // Function Phoenix.WorldEventActor.InsertDynamicActivityOnSE // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e1ba0
	void HitResult(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.WorldEventActor.HitResult // (Final|Native|Private|HasOutParms) // @ game+0x34e1980
	struct AWorldEventLocationActor* GetWorldEventLocatorActor(); // Function Phoenix.WorldEventActor.GetWorldEventLocatorActor // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e1950
	struct TArray<struct FLootSlot> GetRandomLoot(struct FString Category); // Function Phoenix.WorldEventActor.GetRandomLoot // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e17b0
	int32_t GetNumOfWorldEventHobos(); // Function Phoenix.WorldEventActor.GetNumOfWorldEventHobos // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e14d0
	int32_t GetNextUncompleteStage(); // Function Phoenix.WorldEventActor.GetNextUncompleteStage // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e14a0
	enum class HouseIds GetLocationBasedStudentHouse(); // Function Phoenix.WorldEventActor.GetLocationBasedStudentHouse // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e13a0
	bool FindStudentOnFreeTime(struct FVector& InLocation, float InRadius, bool InAllowFindHobos, struct ABase_Character*& OutActor, struct UScheduledEntity*& OutScheduledEntity); // Function Phoenix.WorldEventActor.FindStudentOnFreeTime // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34e0fc0
	void EnableConversationSense(struct UScheduledEntity* SE, bool bEnable); // Function Phoenix.WorldEventActor.EnableConversationSense // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0ef0
	void EnableChildActorComponent(struct UChildActorComponent* ChildActorComponent); // Function Phoenix.WorldEventActor.EnableChildActorComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0e60
	void EnableCharacter(struct ABase_Character* Character); // Function Phoenix.WorldEventActor.EnableCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0dd0
	void DisableChildActorComponent(struct UChildActorComponent* ChildActorComponent); // Function Phoenix.WorldEventActor.DisableChildActorComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0d40
	void DisableCharacter(struct ABase_Character* Character); // Function Phoenix.WorldEventActor.DisableCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0cb0
	bool CheckCondition(struct UWorldEventCondition* Conditon); // Function Phoenix.WorldEventActor.CheckCondition // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e0c10
};

// Class Phoenix.CartMoverBase
// Size: 0x358 (Inherited: 0x280)
struct ACartMoverBase : AWorldEventActor {
	struct FMulticastInlineDelegate OnCartReachedEndOfSpline; // 0x280(0x10)
	bool bCartStopping; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float TargetSpeed; // 0x294(0x04)
	float InterpSpeed; // 0x298(0x04)
	float SwingLimiter; // 0x29c(0x04)
	float SwingAngle; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct FTimerHandle RestartTimer; // 0x2a8(0x08)
	struct UTimelineComponent* TailGateTimeline; // 0x2b0(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> SlowingSocialAgents; // 0x2b8(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> BlockingSocialAgents; // 0x2c8(0x10)
	struct TSoftObjectPtr<USplineComponent> Spline; // 0x2d8(0x28)
	char pad_300[0x58]; // 0x300(0x58)

	void SetMaxSpeed(float InMaxSpeed); // Function Phoenix.CartMoverBase.SetMaxSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x322cef0
	void ResumeMovement(); // Function Phoenix.CartMoverBase.ResumeMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x322ced0
	void PauseMovement(); // Function Phoenix.CartMoverBase.PauseMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x322ce50
	void OnStopBoxEndOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.CartMoverBase.OnStopBoxEndOverlap // (Final|Native|Private) // @ game+0x322ccf0
	void OnStopBoxBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.CartMoverBase.OnStopBoxBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x322cad0
	void OnSlowDownBoxEndOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.CartMoverBase.OnSlowDownBoxEndOverlap // (Final|Native|Private) // @ game+0x322c970
	void OnSlowDownBoxBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.CartMoverBase.OnSlowDownBoxBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x322c750
	void OnDetectedEnemyDeath(struct AActor* EnemyAI); // Function Phoenix.CartMoverBase.OnDetectedEnemyDeath // (Final|Native|Private) // @ game+0x322c6c0
	void MoveAlongSpline(struct FCartSetup& InCartSetup, float DeltaTime); // Function Phoenix.CartMoverBase.MoveAlongSpline // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x322c570
	bool IsCharacter(struct AActor* ObstructingActor); // Function Phoenix.CartMoverBase.IsCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c4a0
	bool IsCartBlocking(struct AActor* ObstructingActor); // Function Phoenix.CartMoverBase.IsCartBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x322c400
	bool HasStopped(); // Function Phoenix.CartMoverBase.HasStopped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c340
	bool HasReachedEndOfSpline(); // Function Phoenix.CartMoverBase.HasReachedEndOfSpline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x322c320
	void BeginMovement(struct FCartSetup& InCartSetup, bool bStartFromBeginning); // Function Phoenix.CartMoverBase.BeginMovement // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x322bdb0
};

// Class Phoenix.CastingSlotWidget
// Size: 0x280 (Inherited: 0x268)
struct UCastingSlotWidget : UUserWidget {
	enum class ESpellDirection SpellDirection; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct FString SpellIconName; // 0x270(0x10)

	void SetImage(struct FString ImageName); // Function Phoenix.CastingSlotWidget.SetImage // (Final|Native|Public|BlueprintCallable) // @ game+0x32306d0
	void OnSynchronizeProperties(); // Function Phoenix.CastingSlotWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetSpellIcon(); // Function Phoenix.CastingSlotWidget.OnSetSpellIcon // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CategoryNavBarWidget
// Size: 0x288 (Inherited: 0x268)
struct UCategoryNavBarWidget : UUserWidget {
	struct TArray<struct FText> CategoryNames; // 0x268(0x10)
	int32_t CurCategoryIndex; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct UImage* BackgroundImage; // 0x280(0x08)

	void PrevCategory(); // Function Phoenix.CategoryNavBarWidget.PrevCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x32306b0
	void OnUnhover(struct UIconButtonWidget* hoveredButton); // Function Phoenix.CategoryNavBarWidget.OnUnhover // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHover(struct UIconButtonWidget* hoveredButton); // Function Phoenix.CategoryNavBarWidget.OnHover // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnClick(int32_t SelectedCategory); // Function Phoenix.CategoryNavBarWidget.OnClick // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCategoryButtonUnHover(struct UIconButtonWidget* Button); // Function Phoenix.CategoryNavBarWidget.OnCategoryButtonUnHover // (Final|Native|Public) // @ game+0x3230620
	void OnCategoryButtonHover(struct UIconButtonWidget* Button); // Function Phoenix.CategoryNavBarWidget.OnCategoryButtonHover // (Final|Native|Public) // @ game+0x3230590
	void OnCategoryButtonClicked(struct UIconButtonWidget* Button); // Function Phoenix.CategoryNavBarWidget.OnCategoryButtonClicked // (Final|Native|Public) // @ game+0x3230500
	void NextCategory(); // Function Phoenix.CategoryNavBarWidget.NextCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x32304e0
	void InitializeButton(struct UIconButtonWidget* Button, struct FText buttonIcon); // Function Phoenix.CategoryNavBarWidget.InitializeButton // (Final|Native|Public|BlueprintCallable) // @ game+0x32302f0
	int32_t GetIndexOfButton(struct UIconButtonWidget* Button); // Function Phoenix.CategoryNavBarWidget.GetIndexOfButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct FText GetCurrentCategory(); // Function Phoenix.CategoryNavBarWidget.GetCurrentCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x3230230
	struct UIconButtonWidget* GetButtonByIndex(int32_t Index); // Function Phoenix.CategoryNavBarWidget.GetButtonByIndex // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddCategory(struct FText NewCategory); // Function Phoenix.CategoryNavBarWidget.AddCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x3230150
};

// Class Phoenix.NPC_AnimInstance
// Size: 0x670 (Inherited: 0x5e0)
struct UNPC_AnimInstance : UAmbulatory_AnimInstance {
	char pad_5E0[0x8]; // 0x5e0(0x08)
	enum class EEnemyAIAnimState State; // 0x5e8(0x01)
	enum class EEnemyAIAnimState LastState; // 0x5e9(0x01)
	enum class EEnemy_AnimMainState MainState; // 0x5ea(0x01)
	enum class EEnemy_AnimMainState LastMainState; // 0x5eb(0x01)
	float LookAtAlpha; // 0x5ec(0x04)
	struct TWeakObjectPtr<struct UAnimationAsset> ParryAnimAsset; // 0x5f0(0x08)
	float ParryAnimTime; // 0x5f8(0x04)
	bool bParryAnimTimeSet; // 0x5fc(0x01)
	enum class ENPC_SpawnState SpawnState; // 0x5fd(0x01)
	enum class EEnemy_Ability ActiveAbility; // 0x5fe(0x01)
	char pad_5FF[0x71]; // 0x5ff(0x71)

	void SetState(enum class EEnemyAIAnimState& InState); // Function Phoenix.NPC_AnimInstance.SetState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x338fa60
	void SetMainState(enum class EEnemy_AnimMainState& InState); // Function Phoenix.NPC_AnimInstance.SetMainState // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x338f550
	void SetAnimSpawnState(enum class ENPC_SpawnState InAnimSpawnState); // Function Phoenix.NPC_AnimInstance.SetAnimSpawnState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x338f1e0
	void SetAbilityActive(enum class EEnemy_Ability InAbility, bool bUse); // Function Phoenix.NPC_AnimInstance.SetAbilityActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x338efe0
	void OnTeleport(struct AAmbulatory_Character* Character, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.NPC_AnimInstance.OnTeleport // (Final|Native|Public|HasDefaults) // @ game+0x338eb90
	void HandleHeadTracking(struct AActor* Owner); // Function Phoenix.NPC_AnimInstance.HandleHeadTracking // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x338dc90
	enum class EEnemyAIAnimState GetState(); // Function Phoenix.NPC_AnimInstance.GetState // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x338dc00
	enum class EEnemy_AnimMainState GetMainState(); // Function Phoenix.NPC_AnimInstance.GetMainState // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x338d9b0
	enum class ENPC_SpawnState GetAnimSpawnState(); // Function Phoenix.NPC_AnimInstance.GetAnimSpawnState // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x338d8d0
	enum class EEnemy_Ability GetActiveAbility(); // Function Phoenix.NPC_AnimInstance.GetActiveAbility // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x338d880
	bool GetAbilityActive(enum class EEnemy_Ability InAbility); // Function Phoenix.NPC_AnimInstance.GetAbilityActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x338d7f0
};

// Class Phoenix.CentaurAnimInstance
// Size: 0x670 (Inherited: 0x670)
struct UCentaurAnimInstance : UNPC_AnimInstance {
	bool bLeftHandBowHold; // 0x668(0x01)
};

// Class Phoenix.CentaurCombatComponent
// Size: 0x1d8 (Inherited: 0xc8)
struct UCentaurCombatComponent : UActorComponent {
	struct FCentaurRepositionDescriptor RepositionDescriptor; // 0xc8(0x20)
	struct TMap<struct FName, struct FCentaurAttackDescriptor> AttackDescriptors; // 0xe8(0x50)
	bool bUseStanceVariation; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	float StanceVariationAPercentage; // 0x13c(0x04)
	struct FGameplayTagContainer AAStanceTags_A; // 0x140(0x20)
	struct FGameplayTagContainer AAStanceTags_B; // 0x160(0x20)
	struct FGameplayTagContainer IAStanceTags_A; // 0x180(0x20)
	struct FGameplayTagContainer IAStanceTags_B; // 0x1a0(0x20)
	struct TArray<struct AActor*> PerceivedCombatTargets; // 0x1c0(0x10)
	char pad_1D0[0x8]; // 0x1d0(0x08)

	bool IsUsingStanceA(); // Function Phoenix.CentaurCombatComponent.IsUsingStanceA // (Final|Native|Public|BlueprintCallable) // @ game+0x32304c0
};

// Class Phoenix.AIDataProvider_CentaurCombat_RepositionDistance
// Size: 0x40 (Inherited: 0x40)
struct UAIDataProvider_CentaurCombat_RepositionDistance : UAIDataProvider_QueryParams {
};

// Class Phoenix.AIDataProvider_CentaurCombat_RepositionRange
// Size: 0x48 (Inherited: 0x40)
struct UAIDataProvider_CentaurCombat_RepositionRange : UAIDataProvider_QueryParams {
	enum class ECreatureDataProviderValueRangeType RangeType; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.CentaurCombatTargetsEnvQueryContext
// Size: 0x28 (Inherited: 0x28)
struct UCentaurCombatTargetsEnvQueryContext : UEnvQueryContext {
};

// Class Phoenix.ChainRenderComponent
// Size: 0x5f0 (Inherited: 0x5c0)
struct UChainRenderComponent : UInstancedStaticMeshComponent {
	float InstanceDistance; // 0x5c0(0x04)
	struct FRotator InstanceRotation; // 0x5c4(0x0c)
	struct FRotator RotationBetweenInstances; // 0x5d0(0x0c)
	struct FVector InstanceScale; // 0x5dc(0x0c)
	float DistanceOffset; // 0x5e8(0x04)
	char pad_5EC[0x4]; // 0x5ec(0x04)

	void SetSpline(struct USplineComponent* InSplineComponent); // Function Phoenix.ChainRenderComponent.SetSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x32307c0
};

// Class Phoenix.CharacterBoneProjector
// Size: 0x108 (Inherited: 0x28)
struct UCharacterBoneProjector : UObject {
	struct TArray<struct FCharacterBoneProjection> Projections; // 0x28(0x10)
	struct TArray<struct FCharacterBoneProjectionState> ProjectionStates; // 0x38(0x10)
	struct FCharacterBoneProjectionParams ProjectionParams; // 0x48(0x04)
	struct FCharacterBoneProjectionResults ProjectionResults; // 0x4c(0x54)
	struct FSimpleBoneInfoCache BoneCache; // 0xa0(0x60)
	bool bStatesInitialized; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)

	void Update(struct AActor* Owner, float dt); // Function Phoenix.CharacterBoneProjector.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x3230870
	bool StatesInitialized(); // Function Phoenix.CharacterBoneProjector.StatesInitialized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3230850
	bool InitializeState(struct AActor* Owner); // Function Phoenix.CharacterBoneProjector.InitializeState // (Final|Native|Public|BlueprintCallable) // @ game+0x3230420
};

// Class Phoenix.CharacterBoneProjectorComponent
// Size: 0xd8 (Inherited: 0xc8)
struct UCharacterBoneProjectorComponent : UActorComponent {
	struct UCharacterBoneProjector* Projector; // 0xc8(0x08)
	bool bDebugDraw; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
};

// Class Phoenix.SceneRigCharacterOptionsAsset
// Size: 0xe8 (Inherited: 0x30)
struct USceneRigCharacterOptionsAsset : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	bool bDisableURO; // 0x38(0x01)
	enum class EControlBehaviors ControlBehaviors; // 0x39(0x01)
	bool bCancelAbilities; // 0x3a(0x01)
	bool bDisableProceduralEyes; // 0x3b(0x01)
	int32_t LODOverride; // 0x3c(0x04)
	bool AlwaysTickPoseAndRefreshBones; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float BoundsScale; // 0x44(0x04)
	bool bEnableReactions; // 0x48(0x01)
	bool bForceDismount; // 0x49(0x01)
	enum class EManagedMovementModePriority MovementModePriority; // 0x4a(0x01)
	bool bUseCustomMovementMode; // 0x4b(0x01)
	bool bSanityCheckTransforms; // 0x4c(0x01)
	enum class ECharacterOptionsCollisionResponse CollisionResponse; // 0x4d(0x01)
	enum class EStandardManagedPriority SocializationPriority; // 0x4e(0x01)
	bool bDisableSocialization; // 0x4f(0x01)
	enum class EStandardManagedPriority IKPriority; // 0x50(0x01)
	bool bEnableIK; // 0x51(0x01)
	bool bEnableFloorContact; // 0x52(0x01)
	char pad_53[0x5]; // 0x53(0x05)
	struct UBoolProvider* EnableFloorContactProvider; // 0x58(0x08)
	bool bEnableLookat; // 0x60(0x01)
	bool bEnablePoseFixup; // 0x61(0x01)
	char pad_62[0x2]; // 0x62(0x02)
	float IKBlendDurationOnEnter; // 0x64(0x04)
	float IKBlendDurationOnExit; // 0x68(0x04)
	enum class EAnimationDirectionSource LowestAllowedLookAtPriority; // 0x6c(0x01)
	bool bDisablePostProcessBlueprint; // 0x6d(0x01)
	enum class EStandardManagedPriority ScalePriority; // 0x6e(0x01)
	bool ScaleRootMotion; // 0x6f(0x01)
	bool UnityScale; // 0x70(0x01)
	bool OverrideRootMotionTranslationScale; // 0x71(0x01)
	char pad_72[0x2]; // 0x72(0x02)
	float RootMotionTranslationScale; // 0x74(0x04)
	struct TSet<struct FString> TickingBlackList; // 0x78(0x50)
	bool DisableAudioOcclusion; // 0xc8(0x01)
	bool bRemoveSpellEffects; // 0xc9(0x01)
	bool bOverrideDisableSpells; // 0xca(0x01)
	bool bDisableSpells; // 0xcb(0x01)
	bool bRemoveGuideSpline; // 0xcc(0x01)
	enum class EStandardManagedPriority DisableSpellsPriority; // 0xcd(0x01)
	bool bSetRightArmState; // 0xce(0x01)
	enum class ERightArmState RightArmState; // 0xcf(0x01)
	bool bSetLeftArmState; // 0xd0(0x01)
	enum class ELeftArmState LeftArmState; // 0xd1(0x01)
	bool bOverrideIsTargetableByAi; // 0xd2(0x01)
	bool bIsTargetableByAi; // 0xd3(0x01)
	enum class EStandardManagedPriority TargetableByAiPriority; // 0xd4(0x01)
	bool bOverrideIsAiSuspended; // 0xd5(0x01)
	bool bSuspendAi; // 0xd6(0x01)
	char pad_D7[0x1]; // 0xd7(0x01)
	struct UIntProvider* SynchronizationMethodProvider; // 0xd8(0x08)
	bool ReleaseFleshLockOnFinish; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Phoenix.SceneRigCharacterOptions
// Size: 0x28 (Inherited: 0x28)
struct USceneRigCharacterOptions : UInterface {
};

// Class Phoenix.CharacterShutdownProvider_Interface
// Size: 0x28 (Inherited: 0x28)
struct UCharacterShutdownProvider_Interface : UInterface {
};

// Class Phoenix.CharacterStateComponent
// Size: 0x820 (Inherited: 0x5a0)
struct UCharacterStateComponent : UBaseStateComponent {
	struct FCharacterStateData CharacterStateData; // 0x5a0(0x280)
};

// Class Phoenix.CharacterStateHUD
// Size: 0x338 (Inherited: 0x338)
struct ACharacterStateHUD : AAmbulatoryHUD {

	void ToggleCharacterStateHUD(); // Function Phoenix.CharacterStateHUD.ToggleCharacterStateHUD // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.CharacterStateHUDWidgetStyle
// Size: 0x2cb0 (Inherited: 0x30)
struct UCharacterStateHUDWidgetStyle : USlateWidgetStyleContainerBase {
	struct FCharacterStateHUDStyle CharacterStateHUDWidgetStyle; // 0x30(0x2c80)
};

// Class Phoenix.CharacterStateDataContainer
// Size: 0x2a8 (Inherited: 0x28)
struct UCharacterStateDataContainer : UObjectStateDataContainerBase {
	struct FCharacterStateData Data; // 0x28(0x280)
};

// Class Phoenix.CheckboxWidget
// Size: 0x320 (Inherited: 0x268)
struct UCheckboxWidget : UUserWidget {
	bool PreTranslateText; // 0x268(0x01)
	bool IsChecked; // 0x269(0x01)
	char pad_26A[0x6]; // 0x26a(0x06)
	struct FText CheckboxLabelText; // 0x270(0x18)
	struct FSlateColor CompletedColor; // 0x288(0x28)
	struct FSlateColor CurrentColor; // 0x2b0(0x28)
	struct FSlateColor FutureColor; // 0x2d8(0x28)
	struct UCheckBox* TheCheckbox; // 0x300(0x08)
	struct UPhoenixTextBlock* CheckboxTextBlock; // 0x308(0x08)
	struct FMulticastInlineDelegate OnCheckboxStateChange; // 0x310(0x10)

	void StateChanged(bool State); // Function Phoenix.CheckboxWidget.StateChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x323fcf0
	void SetProperties(struct FText Label, int32_t Index); // Function Phoenix.CheckboxWidget.SetProperties // (Final|Native|Public|BlueprintCallable) // @ game+0x323fb10
	void SetCheckboxOnOff(struct FText Label, bool checked); // Function Phoenix.CheckboxWidget.SetCheckboxOnOff // (Final|Native|Public|BlueprintCallable) // @ game+0x323f860
	void OnSynchronizeProperties(); // Function Phoenix.CheckboxWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.ChompingCabbage_InvTool
// Size: 0x450 (Inherited: 0x430)
struct AChompingCabbage_InvTool : AInventoryItemTool {
	struct AEnemy_Character* CabbageEnemyClass; // 0x430(0x08)
	struct FVector SpawnOffset; // 0x438(0x0c)
	struct FVector ThrowVelocity; // 0x444(0x0c)

	void SpawnChompingCabbageEnemy(); // Function Phoenix.ChompingCabbage_InvTool.SpawnChompingCabbageEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x323fcd0
};

// Class Phoenix.Cine_Character
// Size: 0x4e0 (Inherited: 0x4e0)
struct ACine_Character : ACharacter {
};

// Class Phoenix.Cine_SkeletalMeshComponent
// Size: 0xf30 (Inherited: 0xf30)
struct UCine_SkeletalMeshComponent : USkeletalMeshComponent {
};

// Class Phoenix.CinematicBatch
// Size: 0x48 (Inherited: 0x30)
struct UCinematicBatch : UDataAsset {
	struct FCinematicId ShotgunCinematicID; // 0x30(0x08)
	struct TArray<struct FCinematicRenderJob> Jobs; // 0x38(0x10)
};

// Class Phoenix.CinematicBatchHUD
// Size: 0x278 (Inherited: 0x268)
struct UCinematicBatchHUD : UUserWidget {
	struct USceneRig* SceneRig; // 0x268(0x08)
	struct UAnimationComponent* CameraAnimationComponent; // 0x270(0x08)

	void SetFixedFrameRate(); // Function Phoenix.CinematicBatchHUD.SetFixedFrameRate // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323faf0
	float GetCinematicBatchHUDSRLength(struct USceneRigPlayer* SceneRigPlayer, struct USceneRig* SceneRig, bool bInFrames); // Function Phoenix.CinematicBatchHUD.GetCinematicBatchHUDSRLength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f640
	struct UAnimationComponent* GetAnimationComponent(struct APlayerCameraManager* CameraManager); // Function Phoenix.CinematicBatchHUD.GetAnimationComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f410
	float GetActiveSRCurrentFrame(struct USceneRigPlayer* SceneRigPlayer); // Function Phoenix.CinematicBatchHUD.GetActiveSRCurrentFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f0f0
	float GetActiveShotTotalFrames(struct UAnimationComponent* AnimationComponent); // Function Phoenix.CinematicBatchHUD.GetActiveShotTotalFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f380
	struct FString GetActiveShotName(struct UAnimationComponent* AnimationComponent); // Function Phoenix.CinematicBatchHUD.GetActiveShotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f2b0
	float GetActiveShotFrame(struct UAnimationComponent* AnimationComponent); // Function Phoenix.CinematicBatchHUD.GetActiveShotFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f220
};

// Class Phoenix.CinematicMissionDailiesHUD
// Size: 0x2b0 (Inherited: 0x278)
struct UCinematicMissionDailiesHUD : UCinematicBatchHUD {
	struct FString SceneRigName; // 0x278(0x10)
	struct FString StoryGraphName; // 0x288(0x10)
	struct FString MissionID; // 0x298(0x10)
	bool bTotalFramesSet; // 0x2a8(0x01)
	bool bHasSceneRigBeenInitialized; // 0x2a9(0x01)
	char pad_2AA[0x6]; // 0x2aa(0x06)

	void UpdateStoryGraphName(struct FString NewSGName); // Function Phoenix.CinematicMissionDailiesHUD.UpdateStoryGraphName // (Final|Native|Public|BlueprintCallable) // @ game+0x323ff60
	void UpdateSceneRigName(struct FString NewSRName); // Function Phoenix.CinematicMissionDailiesHUD.UpdateSceneRigName // (Final|Native|Public|BlueprintCallable) // @ game+0x323fe70
	void UpdateMissionID(struct FString NewMissionID); // Function Phoenix.CinematicMissionDailiesHUD.UpdateMissionID // (Final|Native|Public|BlueprintCallable) // @ game+0x323fd80
	void ShowSR(); // Function Phoenix.CinematicMissionDailiesHUD.ShowSR // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowSG(); // Function Phoenix.CinematicMissionDailiesHUD.ShowSG // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowFrames(); // Function Phoenix.CinematicMissionDailiesHUD.ShowFrames // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSceneRig(struct USceneRig* InSceneRig); // Function Phoenix.CinematicMissionDailiesHUD.SetSceneRig // (Final|Native|Public|BlueprintCallable) // @ game+0x323fc40
	void OnSceneRigChanged(); // Function Phoenix.CinematicMissionDailiesHUD.OnSceneRigChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideSR(); // Function Phoenix.CinematicMissionDailiesHUD.HideSR // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideSG(); // Function Phoenix.CinematicMissionDailiesHUD.HideSG // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideFrames(); // Function Phoenix.CinematicMissionDailiesHUD.HideFrames // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	float GetHUDSRLength(struct USceneRigPlayer* SceneRigPlayer, struct USceneRig* InSceneRig, bool bInFrames); // Function Phoenix.CinematicMissionDailiesHUD.GetHUDSRLength // (Final|Native|Public|BlueprintCallable) // @ game+0x323f750
	float GetActiveSRFrame(struct USceneRigPlayer* SceneRigPlayer); // Function Phoenix.CinematicMissionDailiesHUD.GetActiveSRFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x323f180
};

// Class Phoenix.CleanNameToDisplayName
// Size: 0x80 (Inherited: 0x30)
struct UCleanNameToDisplayName : UDataAsset {
	struct TMap<struct FName, struct FRegionBannerData> CleanNameToDisplayNameMap; // 0x30(0x50)
};

// Class Phoenix.CharacterMount_Interface
// Size: 0x28 (Inherited: 0x28)
struct UCharacterMount_Interface : UInterface {

	void SetClothTargetsStartDelegate(struct FDelegate& Delegate); // Function Phoenix.CharacterMount_Interface.SetClothTargetsStartDelegate // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x323fa40
	void SetClothTargetsEndDelegate(struct FDelegate& Delegate); // Function Phoenix.CharacterMount_Interface.SetClothTargetsEndDelegate // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x323f990
};

// Class Phoenix.ClothInteractorBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UClothInteractorBlueprintLibrary : UBlueprintFunctionLibrary {

	struct UChaosClothSharedSimConfig* GetChaosClothSharedSimConfig(struct USkeletalMesh* SkeletalMesh, struct UChaosClothingInteractor* ChaosClothingInteractor); // Function Phoenix.ClothInteractorBlueprintLibrary.GetChaosClothSharedSimConfig // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f570
	struct UChaosClothConfig* GetChaosClothConfig(struct USkeletalMesh* SkeletalMesh, struct UChaosClothingInteractor* ChaosClothingInteractor); // Function Phoenix.ClothInteractorBlueprintLibrary.GetChaosClothConfig // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x323f4a0
	struct FVector EvaluateVectorClothInteractorValue(struct FVectorClothInteractorValue& ClothInteractorValue, struct FVector& DefaultValue, float BlendAlpha); // Function Phoenix.ClothInteractorBlueprintLibrary.EvaluateVectorClothInteractorValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x323ef90
	struct FVector2D EvaluateVector2DClothInteractorValue(struct FVector2DClothInteractorValue& ClothInteractorValue, struct FVector2D& DefaultValue, float BlendAlpha); // Function Phoenix.ClothInteractorBlueprintLibrary.EvaluateVector2DClothInteractorValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x323ee40
	int32_t EvaluateIntClothInteractorValue(struct FIntClothInteractorValue& ClothInteractorValue, int32_t& DefaultValue, float BlendAlpha); // Function Phoenix.ClothInteractorBlueprintLibrary.EvaluateIntClothInteractorValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x323ed10
	float EvaluateFloatClothInteractorValue(struct FFloatClothInteractorValue& ClothInteractorValue, float& DefaultValue, float BlendAlpha); // Function Phoenix.ClothInteractorBlueprintLibrary.EvaluateFloatClothInteractorValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x323ebe0
	bool EvaluateBoolClothInteractorValue(struct FBoolClothInteractorValue& ClothInteractorValue, bool& DefaultValue, float BlendAlpha); // Function Phoenix.ClothInteractorBlueprintLibrary.EvaluateBoolClothInteractorValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x323eab0
};

// Class Phoenix.ClothSitComponent
// Size: 0x118 (Inherited: 0xc8)
struct UClothSitComponent : UActorComponent {
	char pad_C8[0x50]; // 0xc8(0x50)
};

// Class Phoenix.CogGroupDebug_Phoenix
// Size: 0x58 (Inherited: 0x48)
struct UCogGroupDebug_Phoenix : UCogGroupDebug {
	char pad_48[0x10]; // 0x48(0x10)
};

// Class Phoenix.CogGroupDebug_Phoenix_Aim
// Size: 0x58 (Inherited: 0x58)
struct UCogGroupDebug_Phoenix_Aim : UCogGroupDebug_Phoenix {
};

// Class Phoenix.CogGroupEvaluation_Health
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_Health : UCogGroupEvaluation {
	float HealthMin; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.CogGroupEvaluation_Ally
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_Ally : UCogGroupEvaluation {
	bool bFailOnAllyInAdventureMode; // 0x30(0x01)
	bool bFailOnNonAllyInSocialMode; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.CogGroupEvaluation_Companion
// Size: 0x30 (Inherited: 0x30)
struct UCogGroupEvaluation_Companion : UCogGroupEvaluation {
};

// Class Phoenix.CogGroupEvaluation_OnScreenSticky
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_OnScreenSticky : UCogGroupEvaluation {
	float ScreenBorder; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.CogGroupEvaluation_OnScreenAggro
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_OnScreenAggro : UCogGroupEvaluation {
	float ScreenBorder; // 0x30(0x04)
	float OffscreenMultiplier; // 0x34(0x04)
};

// Class Phoenix.CogGroupEvaluation_OnScreenSpecial
// Size: 0x38 (Inherited: 0x38)
struct UCogGroupEvaluation_OnScreenSpecial : UCogGroupEvaluation_OnScreen {
};

// Class Phoenix.CogGroupEvaluation_FOVSticky
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_FOVSticky : UCogGroupEvaluation {
	float FOV; // 0x30(0x04)
	bool bAutoAcceptIfFootprintOverlap; // 0x34(0x01)
	bool bUseTargetFootprintForFOV; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Phoenix.CogGroupEvaluation_FOVFocused
// Size: 0x40 (Inherited: 0x38)
struct UCogGroupEvaluation_FOVFocused : UCogGroupEvaluation_FOV {
	float NotFocusedMultiplier; // 0x38(0x04)
	float ScreenBorder; // 0x3c(0x04)
};

// Class Phoenix.CogGroupEvaluation_CombinedTargeting
// Size: 0x78 (Inherited: 0x50)
struct UCogGroupEvaluation_CombinedTargeting : UCogGroupEvaluation_CombinedBase {
	float MaxFOVForScoringEnemies; // 0x50(0x04)
	float MinFOVScoreForEnemies; // 0x54(0x04)
	float MinHeightScore; // 0x58(0x04)
	float NearDistanceBoostPctNonCombat; // 0x5c(0x04)
	float NearDistanceBoostPctCombatGamepad; // 0x60(0x04)
	float NearDistanceBoostPctCombatMouse; // 0x64(0x04)
	float BelowMouseCursorBoostPct; // 0x68(0x04)
	float SpellComboBoostPct; // 0x6c(0x04)
	float StickyBoostPct; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.CogGroupBestTargetProcess_TrackTargetIsWeak
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupBestTargetProcess_TrackTargetIsWeak : UCogGroupBestTargetProcess {
};

// Class Phoenix.CogGroupBestTargetProcess_TrackTargetIsInAttackAwareness
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupBestTargetProcess_TrackTargetIsInAttackAwareness : UCogGroupBestTargetProcess {
};

// Class Phoenix.CogGroupEvaluation_SecondOrder_FOVSticky
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupEvaluation_SecondOrder_FOVSticky : UCogGroupEvaluation_SecondOrder {
};

// Class Phoenix.CogGroupEvaluation_StairsSpline
// Size: 0x38 (Inherited: 0x30)
struct UCogGroupEvaluation_StairsSpline : UCogGroupEvaluation {
	float MaxAngleIntoSpline; // 0x30(0x04)
	float MaxDistanceFromSpline; // 0x34(0x04)
};

// Class Phoenix.CogGroupEvaluation_SecondOrder_SocialMode
// Size: 0x30 (Inherited: 0x30)
struct UCogGroupEvaluation_SecondOrder_SocialMode : UCogGroupEvaluation {
};

// Class Phoenix.CogGroupEvaluation_Interact_DisallowInCombat
// Size: 0x30 (Inherited: 0x30)
struct UCogGroupEvaluation_Interact_DisallowInCombat : UCogGroupEvaluation {
};

// Class Phoenix.CogGroupEvaluation_ModeDistance
// Size: 0x40 (Inherited: 0x38)
struct UCogGroupEvaluation_ModeDistance : UCogGroupEvaluation_Distance {
	float PriorityNearDistance; // 0x38(0x04)
	float PriorityFarDistance; // 0x3c(0x04)
};

// Class Phoenix.CogGroupEvaluation_LockOn_LOS
// Size: 0x30 (Inherited: 0x30)
struct UCogGroupEvaluation_LockOn_LOS : UCogGroupEvaluation {
};

// Class Phoenix.CogGroupEvaluation_SecondOrder_LOSStation
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupEvaluation_SecondOrder_LOSStation : UCogGroupEvaluation_SecondOrder {
};

// Class Phoenix.CogGroupEvaluation_SecondOrder_ExclusiveWithInteractionTarget
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupEvaluation_SecondOrder_ExclusiveWithInteractionTarget : UCogGroupEvaluation_SecondOrder {
};

// Class Phoenix.CogGroupFocusDirection_MovementCameraHybrid
// Size: 0x30 (Inherited: 0x28)
struct UCogGroupFocusDirection_MovementCameraHybrid : UCogGroupFocusDirection {
	bool bRequiredCameraMovementToUseCameraFocus; // 0x28(0x01)
	bool bCameraDirectionHasPriority; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.CogGroupFocusDirection_CameraRayCast
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupFocusDirection_CameraRayCast : UCogGroupFocusDirection {
};

// Class Phoenix.CogGroupFocusDirection_CameraWithPitchOffset
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupFocusDirection_CameraWithPitchOffset : UCogGroupFocusDirection {
};

// Class Phoenix.CogGroupPerceiverPoint_GamepadMouseHybrid
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupPerceiverPoint_GamepadMouseHybrid : UCogGroupPerceiverPoint {
};

// Class Phoenix.CogGroupUpDirection_CameraWithPitchOffset
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupUpDirection_CameraWithPitchOffset : UCogGroupUpDirection {
};

// Class Phoenix.CogGroupUpDirection_MovementCameraHybrid
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupUpDirection_MovementCameraHybrid : UCogGroupUpDirection {
};

// Class Phoenix.CogGroupUpDirection_CameraRayCast
// Size: 0x28 (Inherited: 0x28)
struct UCogGroupUpDirection_CameraRayCast : UCogGroupUpDirection {
};

// Class Phoenix.CogTargetAimSceneComponent
// Size: 0x250 (Inherited: 0x230)
struct UCogTargetAimSceneComponent : UCogTargetSceneComponent {
	float Timer; // 0x230(0x04)
	char pad_234[0x1c]; // 0x234(0x1c)

	void TimerExpired(); // Function Phoenix.CogTargetAimSceneComponent.TimerExpired // (Final|Native|Public) // @ game+0x3245420
};

// Class Phoenix.TabPageWidget
// Size: 0x3c8 (Inherited: 0x328)
struct UTabPageWidget : UPhoenixUserWidget {
	struct FString Source; // 0x328(0x10)
	struct FString Destination; // 0x338(0x10)
	float ParallaxRate; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct TArray<struct FLegendItemData> MenuLegend; // 0x350(0x10)
	struct UPhoenixUserWidget* TabParentWidget; // 0x360(0x08)
	struct FMulticastInlineDelegate OnAutosaveRequested; // 0x368(0x10)
	struct FMulticastInlineDelegate OnMenuReadLegendRequested; // 0x378(0x10)
	struct FMulticastInlineDelegate OnNewLegendRequested; // 0x388(0x10)
	struct FMulticastInlineDelegate OnNewTabRequested; // 0x398(0x10)
	struct FMulticastInlineDelegate OnLegendInputHeldChanged; // 0x3a8(0x10)
	struct FMulticastInlineDelegate OnExitMenuRequested; // 0x3b8(0x10)

	void SetTabParentWidget(struct UPhoenixUserWidget* InTabParentWidget); // Function Phoenix.TabPageWidget.SetTabParentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x3494610
	void OnLegendItemHoldEnd(struct ULegendItem* LegendItem, bool HoldWasCompleted); // Function Phoenix.TabPageWidget.OnLegendItemHoldEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void LeaveFromPage(); // Function Phoenix.TabPageWidget.LeaveFromPage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool HandleInput(struct FKey Input); // Function Phoenix.TabPageWidget.HandleInput // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GoToPage(struct TArray<struct FString>& DestinationStack); // Function Phoenix.TabPageWidget.GoToPage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CollectionsScreen
// Size: 0x418 (Inherited: 0x3c8)
struct UCollectionsScreen : UTabPageWidget {
	char pad_3C8[0x50]; // 0x3c8(0x50)

	struct TArray<struct FName> GetUsedInRecipesForCollectionItem(struct FName CollectionItem, struct FName CollectionCategory, bool IncludeLocked); // Function Phoenix.CollectionsScreen.GetUsedInRecipesForCollectionItem // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x32449c0
};

// Class Phoenix.CombatChallengeResultsBase
// Size: 0x388 (Inherited: 0x370)
struct UCombatChallengeResultsBase : UScreen {
	struct FString TitleText; // 0x370(0x10)
	bool ResultIsAVictory; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)

	void ShowResultsScreen(); // Function Phoenix.CombatChallengeResultsBase.ShowResultsScreen // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RestartFromDeath(); // Function Phoenix.CombatChallengeResultsBase.RestartFromDeath // (Final|Native|Public|BlueprintCallable) // @ game+0x3244f20
	void OnPostGameSave(); // Function Phoenix.CombatChallengeResultsBase.OnPostGameSave // (Final|Native|Public) // @ game+0x3244df0
	void ExitRequested(); // Function Phoenix.CombatChallengeResultsBase.ExitRequested // (Final|Native|Public|BlueprintCallable) // @ game+0x32447f0
};

// Class Phoenix.CombatCursedComponent
// Size: 0x1d0 (Inherited: 0x190)
struct UCombatCursedComponent : UStateEffectComponent {
	struct FCombatCursedData Data; // 0x190(0x20)
	char pad_1B0[0x10]; // 0x1b0(0x10)
	struct UGameplayPropertyMod* ModAdded; // 0x1c0(0x08)
	char pad_1C8[0x8]; // 0x1c8(0x08)
};

// Class Phoenix.CombatDOVCollection
// Size: 0x210 (Inherited: 0x28)
struct UCombatDOVCollection : UObject {
	struct TSet<struct ADynamicObjectVolume*> IncludedDynamicObjectVolumes; // 0x28(0x50)
	struct TSet<struct AEncounterVolume*> IncludedEncounterVolumes; // 0x78(0x50)
	struct TSet<struct ADynamicObjectVolume*> ExcludedDynamicObjectVolumes; // 0xc8(0x50)
	struct TSet<struct AEncounterVolume*> ExcludedEncounterVolumes; // 0x118(0x50)
	struct TSet<struct ADynamicObjectVolume*> ResolvedDOVCollection; // 0x168(0x50)
	struct TSet<struct ADynamicObjectVolume*> UnrestrictedResolvedDOVCollection; // 0x1b8(0x50)
	char pad_208[0x8]; // 0x208(0x08)
};

// Class Phoenix.CombativePlantComponent
// Size: 0x1e0 (Inherited: 0xc8)
struct UCombativePlantComponent : UActorComponent {
	bool bCanBePickedUp; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FMulticastInlineDelegate OnDealDamage; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnCabbagePerkActivate; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnCinematicStartedEvent; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnCinematicFinishedEvent; // 0x100(0x10)
	struct UAkAudioEvent* RecallAudioEffect; // 0x110(0x08)
	struct UNiagaraSystem* RecallVisualEffect; // 0x118(0x08)
	struct UAblAbility* RespondToPlayerAbility; // 0x120(0x08)
	struct FGameplayTagContainer PerkFinalAttackContainer; // 0x128(0x20)
	float SwitchTime; // 0x148(0x04)
	bool bPlayerIsInstigator; // 0x14c(0x01)
	bool bShouldEmitPerceptionEvents; // 0x14d(0x01)
	char pad_14E[0x2]; // 0x14e(0x02)
	float PerceptionEventTimePeriod; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x158(0x08)
	char pad_160[0x80]; // 0x160(0x80)

	void PickedUp(struct AInventoryObject* InInventoryObject, int32_t InCount); // Function Phoenix.CombativePlantComponent.PickedUp // (Final|Native|Public|BlueprintCallable) // @ game+0x3244e30
	void OnRecall(); // Function Phoenix.CombativePlantComponent.OnRecall // (Final|Native|Public) // @ game+0x3244e10
	void OnDealDamage__DelegateSignature(struct AActor* AttackTarget, float Damage, struct FHitResult& Hit); // DelegateFunction Phoenix.CombativePlantComponent.OnDealDamage__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x38a7480
	void OnCinematicChange__DelegateSignature(); // DelegateFunction Phoenix.CombativePlantComponent.OnCinematicChange__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnCabbagePerkActivate__DelegateSignature(); // DelegateFunction Phoenix.CombativePlantComponent.OnCabbagePerkActivate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void GenerateFocus(struct AActor* InActor, float InDamage, struct FHitResult& InHit); // Function Phoenix.CombativePlantComponent.GenerateFocus // (Final|Native|Public|HasOutParms) // @ game+0x3244810
	void EmitPerceptionEvent(); // Function Phoenix.CombativePlantComponent.EmitPerceptionEvent // (Final|Native|Private) // @ game+0x3244670
	void DisablePickup(); // Function Phoenix.CombativePlantComponent.DisablePickup // (Final|Native|Private|BlueprintCallable) // @ game+0x13244f0
	bool AddObjectToInventory(struct AActor* InInventoryHolder); // Function Phoenix.CombativePlantComponent.AddObjectToInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x32442c0
};

// Class Phoenix.CombatParryButtonCallout
// Size: 0x330 (Inherited: 0x328)
struct UCombatParryButtonCallout : UPhoenixUserWidget {
	enum class ECombatParryType CombatParryType; // 0x328(0x01)
	bool bInPerfectTimingWindow; // 0x329(0x01)
	char pad_32A[0x2]; // 0x32a(0x02)
	float ExpectedLifetime; // 0x32c(0x04)

	void SetPerfectTimingState(bool bPerfectTiming); // Function Phoenix.CombatParryButtonCallout.SetPerfectTimingState // (Final|Native|Public|BlueprintCallable) // @ game+0x32450d0
	void SetParryType(enum class ECombatParryType ParryType); // Function Phoenix.CombatParryButtonCallout.SetParryType // (Final|Native|Public|BlueprintCallable) // @ game+0x3245050
	void SetExpectedLifetime(float LifeTime); // Function Phoenix.CombatParryButtonCallout.SetExpectedLifetime // (Final|Native|Public) // @ game+0x3244f40
	void OnInputDeviceChanged(); // Function Phoenix.CombatParryButtonCallout.OnInputDeviceChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BlueprintSetPerfectTimingState(bool bPerfectTiming); // Function Phoenix.CombatParryButtonCallout.BlueprintSetPerfectTimingState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BlueprintSetParryType(enum class ECombatParryType ParryType); // Function Phoenix.CombatParryButtonCallout.BlueprintSetParryType // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CombatParryWidget
// Size: 0x368 (Inherited: 0x328)
struct UCombatParryWidget : UPhoenixUserWidget {
	struct UCombatParryButtonCallout* CombatParryButtonCallout0; // 0x328(0x08)
	struct UCombatParryButtonCallout* CombatParryButtonCallout1; // 0x330(0x08)
	struct UCombatParryButtonCallout* CombatParryButtonCallout2; // 0x338(0x08)
	struct UCombatParryButtonCallout* CombatParryButtonCalloutForOutro; // 0x340(0x08)
	struct TArray<struct FCombatParryInfo> CombatParryInfos; // 0x348(0x10)
	struct TArray<struct UCombatParryButtonCallout*> CombatParryButtonCallouts; // 0x358(0x10)

	void CombatParryInfoTimerFinished(struct UObject* Caller, int32_t WindowID, int32_t ParryType); // Function Phoenix.CombatParryWidget.CombatParryInfoTimerFinished // (Final|Native|Private) // @ game+0x3244560
};

// Class Phoenix.CombatVolume
// Size: 0x4a0 (Inherited: 0x248)
struct ACombatVolume : ATargetPoint {
	char pad_248[0x20]; // 0x248(0x20)
	struct UCombatVolumeGroup* OwningGroup; // 0x268(0x08)
	struct FColor WireColor; // 0x270(0x04)
	bool bStartEncounterOnEnter; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	float PlayerClearDistance; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct UBoxComponent* BoxComponent; // 0x280(0x08)
	struct TSet<struct ADynamicObjectVolume*> OverlappedDOVs; // 0x288(0x50)
	struct TSet<struct AEncounterVolume*> OverlappedEncounterVolumes; // 0x2d8(0x50)
	struct FCustomButtonWidget VolumesRefreshButton; // 0x328(0x30)
	struct UCombatDOVCollection* LinkedDOVCollection; // 0x358(0x08)
	struct TSet<struct TWeakObjectPtr<struct AExplosiveBarrel>> ExplosiveBarrels; // 0x360(0x50)
	struct TSet<struct TWeakObjectPtr<struct AActor>> Throwables; // 0x3b0(0x50)
	struct TSet<struct TWeakObjectPtr<struct AActor>> SendTargets; // 0x400(0x50)
	char pad_450[0x50]; // 0x450(0x50)

	void OnActorSpawnInFinished(struct AActor* SpawnedActor); // Function Phoenix.CombatVolume.OnActorSpawnInFinished // (Final|Native|Private) // @ game+0x3244d60
	void OnActorDeadEvent(struct AActor* DeadActor); // Function Phoenix.CombatVolume.OnActorDeadEvent // (Final|Native|Private) // @ game+0x3244cd0
	struct UCombatVolumeGroup* GetGroup(); // Function Phoenix.CombatVolume.GetGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3244990
	void EndOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.CombatVolume.EndOverlap // (Final|Native|Protected) // @ game+0x3244690
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.CombatVolume.BeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x3244340
};

// Class Phoenix.CombatVolumeGroup
// Size: 0x138 (Inherited: 0x28)
struct UCombatVolumeGroup : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate EncounterStartedEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate EncounterEndedEvent; // 0x40(0x10)
	struct FMulticastInlineDelegate CombatVolumeGroupDeathDelegate; // 0x50(0x10)
	struct FMulticastInlineDelegate CombatVolumeGroupActorSpawnedDelegate; // 0x60(0x10)
	struct FMulticastInlineDelegate CombatVolumeGroupDestroyedEvent; // 0x70(0x10)
	struct TSet<struct ACombatVolume*> VolumesInGroup; // 0x80(0x50)
	bool bEnableDuelTechniques; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct FEncounterDuelTechniqueOverride> DuelTechniqueOverrides; // 0xd8(0x10)
	struct TSet<struct ADynamicObjectVolume*> DOVsAggregated; // 0xe8(0x50)

	bool TryStartEncounter(); // Function Phoenix.CombatVolumeGroup.TryStartEncounter // (Final|Native|Public|BlueprintCallable) // @ game+0x32454d0
	bool IsActiveForCurrentEncounter(); // Function Phoenix.CombatVolumeGroup.IsActiveForCurrentEncounter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3244ca0
	struct TSet<struct ACombatVolume*> GetVolumes(); // Function Phoenix.CombatVolumeGroup.GetVolumes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3244b20
	void EncounterStartedEvent__DelegateSignature(); // DelegateFunction Phoenix.CombatVolumeGroup.EncounterStartedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void EncounterEndedEvent__DelegateSignature(enum class EEncounterEndReason EndReason); // DelegateFunction Phoenix.CombatVolumeGroup.EncounterEndedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void CombatVolumeGroupDestroyed__DelegateSignature(struct UCombatVolumeGroup* Group); // DelegateFunction Phoenix.CombatVolumeGroup.CombatVolumeGroupDestroyed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void CombatVolumeGroupDeathDelegate__DelegateSignature(struct ACombatVolume* CombatVolume, struct AActor* DeadActor); // DelegateFunction Phoenix.CombatVolumeGroup.CombatVolumeGroupDeathDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void CombatVolumeGroupActorSpawnedDelegate__DelegateSignature(struct ACombatVolume* CombatVolume, struct AActor* SpawnedActor); // DelegateFunction Phoenix.CombatVolumeGroup.CombatVolumeGroupActorSpawnedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
};

// Class Phoenix.ComboHelperHud
// Size: 0x308 (Inherited: 0x2e8)
struct UComboHelperHud : UHUDElementGroup {
	char pad_2E8[0x20]; // 0x2e8(0x20)

	void SpellSuccess(); // Function Phoenix.ComboHelperHud.SpellSuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x3245400
	void SpellFailure(); // Function Phoenix.ComboHelperHud.SpellFailure // (Final|Native|Public|BlueprintCallable) // @ game+0x32453e0
	void ShowComboHelper(bool bShow); // Function Phoenix.ComboHelperHud.ShowComboHelper // (Final|Native|Public|BlueprintCallable) // @ game+0x32452c0
	void SetRequiredSpells(struct TArray<struct FString>& SpellNames); // Function Phoenix.ComboHelperHud.SetRequiredSpells // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3245160
	void ResetCombo(); // Function Phoenix.ComboHelperHud.ResetCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x3244f00
	void OnSpellSucceeded(int32_t NumSucceeded); // Function Phoenix.ComboHelperHud.OnSpellSucceeded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellFailed(int32_t NumSucceeded); // Function Phoenix.ComboHelperHud.OnSpellFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowComboHelperChanged(bool bShow); // Function Phoenix.ComboHelperHud.OnShowComboHelperChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnRequiredSpellsChanged(struct TArray<struct FString>& SpellNames, int32_t NumSpells); // Function Phoenix.ComboHelperHud.OnRequiredSpellsChanged // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnComboReset(); // Function Phoenix.ComboHelperHud.OnComboReset // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnComboCompleted(); // Function Phoenix.ComboHelperHud.OnComboCompleted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.ComboHUD_Base
// Size: 0x2e8 (Inherited: 0x2e8)
struct UComboHUD_Base : UHUDElementGroup {
};

// Class Phoenix.CommonActionsBase
// Size: 0x288 (Inherited: 0x268)
struct UCommonActionsBase : UUserWidget {
	int32_t AvailableGroups; // 0x268(0x04)
	int32_t CurrentGroupIndex; // 0x26c(0x04)
	char pad_270[0x10]; // 0x270(0x10)
	struct USpellSelectionDiamondBase* MainLoadout; // 0x280(0x08)

	void ToggleButtonCallouts(bool IsSlotting); // Function Phoenix.CommonActionsBase.ToggleButtonCallouts // (Final|Native|Public|BlueprintCallable) // @ game+0x3245440
	void ShowSelected(int32_t GroupIndex); // Function Phoenix.CommonActionsBase.ShowSelected // (Final|Native|Public|BlueprintCallable) // @ game+0x3245350
	void SetSelectedIndex(int32_t Index); // Function Phoenix.CommonActionsBase.SetSelectedIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x3245230
	void SetMainLoadout(struct USpellSelectionDiamondBase* Loadout); // Function Phoenix.CommonActionsBase.SetMainLoadout // (Final|Native|Public|BlueprintCallable) // @ game+0x1ab6fe0
	void SetItemData(int32_t GroupIndex); // Function Phoenix.CommonActionsBase.SetItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x3244fc0
	void PopulateMainLoadout(); // Function Phoenix.CommonActionsBase.PopulateMainLoadout // (Final|Native|Public|BlueprintCallable) // @ game+0x3244ee0
	void OnToggleButtonCallouts(bool IsSlotting); // Function Phoenix.CommonActionsBase.OnToggleButtonCallouts // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowSpellGroupDiamond(); // Function Phoenix.CommonActionsBase.OnShowSpellGroupDiamond // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHideSpellGroupDiamond(); // Function Phoenix.CommonActionsBase.OnHideSpellGroupDiamond // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivateMiniDiamond(bool Activate); // Function Phoenix.CommonActionsBase.OnActivateMiniDiamond // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleDPadUp(); // Function Phoenix.CommonActionsBase.HandleDPadUp // (Final|Native|Public|BlueprintCallable) // @ game+0x3244c80
	void HandleDPadRight(); // Function Phoenix.CommonActionsBase.HandleDPadRight // (Final|Native|Public|BlueprintCallable) // @ game+0x3244c60
	void HandleDPadLeft(); // Function Phoenix.CommonActionsBase.HandleDPadLeft // (Final|Native|Public|BlueprintCallable) // @ game+0x3244c40
	void HandleDPadDown(); // Function Phoenix.CommonActionsBase.HandleDPadDown // (Final|Native|Public|BlueprintCallable) // @ game+0x3244c20
	void AddMiniSelectionItem(struct UMiniSelectionDiamondBase* Item); // Function Phoenix.CommonActionsBase.AddMiniSelectionItem // (Final|Native|Public|BlueprintCallable) // @ game+0x3244230
	void AddItemToGroup(struct FString ItemName, struct FString Variation, struct FName HolderID, int32_t Amount, enum class EUIQActionBarType ItemType); // Function Phoenix.CommonActionsBase.AddItemToGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x3243ff0
	void ActivateCurrentMiniDiamond(bool Activate); // Function Phoenix.CommonActionsBase.ActivateCurrentMiniDiamond // (Final|Native|Public|BlueprintCallable) // @ game+0x3243f60
};

// Class Phoenix.Enemy_Manager
// Size: 0x1b8 (Inherited: 0xe0)
struct UEnemy_Manager : UNPC_Manager {
	char pad_E0[0xb0]; // 0xe0(0xb0)
	struct TArray<struct FEnemy_AttackGroup> AttackGroupList; // 0x190(0x10)
	char pad_1A0[0x18]; // 0x1a0(0x18)
};

// Class Phoenix.Companion_Manager
// Size: 0x1b8 (Inherited: 0x1b8)
struct UCompanion_Manager : UEnemy_Manager {
};

// Class Phoenix.NPC_PerceptionChoice
// Size: 0x28 (Inherited: 0x28)
struct UNPC_PerceptionChoice : UObject {
};

// Class Phoenix.Enemy_PerceptionChoice
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_PerceptionChoice : UNPC_PerceptionChoice {
};

// Class Phoenix.Companion_PerceptionChoice
// Size: 0x28 (Inherited: 0x28)
struct UCompanion_PerceptionChoice : UEnemy_PerceptionChoice {
};

// Class Phoenix.CompanionBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UCompanionBlueprintLibrary : UBlueprintFunctionLibrary {

	bool IsCompanionPawn(struct AActor* TargetActor); // Function Phoenix.CompanionBlueprintLibrary.IsCompanionPawn // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x32482b0
	bool HasCompanionOverlaps(struct AActor* TargetActor); // Function Phoenix.CompanionBlueprintLibrary.HasCompanionOverlaps // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3248020
};

// Class Phoenix.CompanionManager
// Size: 0x1f8 (Inherited: 0x28)
struct UCompanionManager : UObject {
	char pad_28[0x40]; // 0x28(0x40)
	struct UCompanionConfigData* Config; // 0x68(0x08)
	char pad_70[0xe8]; // 0x70(0xe8)
	struct TArray<struct FCompanionVolumeEntry> CompanionSettingsVolumesPerEntity; // 0x158(0x10)
	char pad_168[0x90]; // 0x168(0x90)

	bool TryCompanionTeleportBP(struct UScheduledEntity* ScheduledEntity, struct FVector& TargetLocation, struct FRotator& TargetRotation); // Function Phoenix.CompanionManager.TryCompanionTeleportBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3249cd0
	bool TryCompanionTeleportBehindPlayer(); // Function Phoenix.CompanionManager.TryCompanionTeleportBehindPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x3249e00
	void TryCompanionPlayerRescue(); // Function Phoenix.CompanionManager.TryCompanionPlayerRescue // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void StopPrimaryCompanionCustomAbility(); // Function Phoenix.CompanionManager.StopPrimaryCompanionCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3249cb0
	void StopMovement(bool InStopMovement); // Function Phoenix.CompanionManager.StopMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x3249c20
	void StopCompanionForcedWaiting(); // Function Phoenix.CompanionManager.StopCompanionForcedWaiting // (Final|Native|Public|BlueprintCallable) // @ game+0x3249c00
	void StartPrimaryCompanionCustomAbility(struct UAblAbility* Ability); // Function Phoenix.CompanionManager.StartPrimaryCompanionCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3249b70
	void StartFadeOut(); // Function Phoenix.CompanionManager.StartFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x3249b50
	void StartFadeIn(); // Function Phoenix.CompanionManager.StartFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x3249b30
	void SetSystemicCompanionBP(struct FString Name, bool bEnable); // Function Phoenix.CompanionManager.SetSystemicCompanionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3249930
	void SetCompanionSettingDataToConfigBP(struct FString Name); // Function Phoenix.CompanionManager.SetCompanionSettingDataToConfigBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32498a0
	void SetCompanionSettingDataBP(struct FString Name, struct FCompanionSettingData InCompanionSettingData); // Function Phoenix.CompanionManager.SetCompanionSettingDataBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3249690
	void SetCompanionIsIdleFlag(struct AActor* InCompanionActor, bool InBCompanionIsIdle); // Function Phoenix.CompanionManager.SetCompanionIsIdleFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x32495c0
	void SetCompanionForcedWaitLocation(struct FVector& InWaitLocation, struct FVector& InWaitDirection); // Function Phoenix.CompanionManager.SetCompanionForcedWaitLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32494e0
	void SetCompanionBP(struct FString Name, bool bEnable); // Function Phoenix.CompanionManager.SetCompanionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32493b0
	void RestoreCompanionHealth(); // Function Phoenix.CompanionManager.RestoreCompanionHealth // (Final|Native|Protected|BlueprintCallable) // @ game+0x3249300
	void PlayVoiceOverForPawn(struct FString VOEventName, struct APawn* Pawn); // Function Phoenix.CompanionManager.PlayVoiceOverForPawn // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32491d0
	bool PlayVoiceOver(struct FString VOEventName, enum class EVoiceOverCompanionSelection Selection, enum class EVoiceOverConditions Condition); // Function Phoenix.CompanionManager.PlayVoiceOver // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3249050
	void OnSaveGameLoaded(); // Function Phoenix.CompanionManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3248f20
	void OnPlayerEnterLeaveCompanionSettingsVolume(struct AActor* Volume, struct FCompanionVolumeSettings& Settings, bool bInside); // Function Phoenix.CompanionManager.OnPlayerEnterLeaveCompanionSettingsVolume // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3248de0
	void OnPawnEnterLeaveCompanionSettingsVolume(struct AActor* Volume, struct APawn* Pawn, struct FCompanionVolumeSettings& Settings, bool bInside); // Function Phoenix.CompanionManager.OnPawnEnterLeaveCompanionSettingsVolume // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3248c50
	void OnCompanionRemoved(struct AActor* Companion); // Function Phoenix.CompanionManager.OnCompanionRemoved // (Final|Native|Protected) // @ game+0x32488b0
	void OnCompanionReady(struct UScheduledEntity* companionScheduledEntity); // Function Phoenix.CompanionManager.OnCompanionReady // (Final|Native|Protected) // @ game+0x3248af0
	void OnCompanionHealing(struct AActor* Instigator, float InHealthChange, struct AActor* TargetActor); // Function Phoenix.CompanionManager.OnCompanionHealing // (Final|Native|Protected) // @ game+0x32489d0
	void OnCompanionDismissed(struct FName CompanionName); // Function Phoenix.CompanionManager.OnCompanionDismissed // (Final|Native|Protected) // @ game+0x3248940
	void OnCompanionDied(struct AActor* Companion); // Function Phoenix.CompanionManager.OnCompanionDied // (Final|Native|Protected) // @ game+0x32488b0
	void OnCompanionDamaged(struct AActor* InActor, struct AActor* InInstigator, float InDamage, struct FHitResult& InHit); // Function Phoenix.CompanionManager.OnCompanionDamaged // (Final|Native|Protected|HasOutParms) // @ game+0x3248720
	void OnCharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.CompanionManager.OnCharacterTeleported // (Final|Native|Protected|HasDefaults) // @ game+0x32485f0
	void OnAboutToSaveGame(); // Function Phoenix.CompanionManager.OnAboutToSaveGame // (Final|Native|Public) // @ game+0x3248500
	bool MoveToLocation(struct FVector InCharacterLocation, struct APawn* InCompanionPawn); // Function Phoenix.CompanionManager.MoveToLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x3248410
	bool IsCompanionWaitingBP(struct APawn* Pawn, struct FVector& WaitLocation); // Function Phoenix.CompanionManager.IsCompanionWaitingBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3248340
	bool IsCharacterCompanion(struct UScheduledEntity* entity); // Function Phoenix.CompanionManager.IsCharacterCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3248210
	struct TArray<struct FName> IdentitiesAllowedToAddOnCompanion(struct FName& InCompanionName); // Function Phoenix.CompanionManager.IdentitiesAllowedToAddOnCompanion // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3248140
	bool HasPrimaryFollowingCompanion(); // Function Phoenix.CompanionManager.HasPrimaryFollowingCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3248110
	bool HasPrimaryCompanion(); // Function Phoenix.CompanionManager.HasPrimaryCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32480e0
	bool HasCompanionToRescuePlayer(); // Function Phoenix.CompanionManager.HasCompanionToRescuePlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32480b0
	bool HasAnyCompanion(); // Function Phoenix.CompanionManager.HasAnyCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247ff0
	void HandleFleshLoaded(struct AActor* FleshActor); // Function Phoenix.CompanionManager.HandleFleshLoaded // (Final|Native|Public) // @ game+0x3247f60
	void HandleCompanionInteractionBP(int32_t Index); // Function Phoenix.CompanionManager.HandleCompanionInteractionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x25dc920
	void HandleActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpluse, struct FHitResult& Hit); // Function Phoenix.CompanionManager.HandleActorHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x3247dc0
	struct TArray<struct FName> GetUnlockedSystemicCompanions(); // Function Phoenix.CompanionManager.GetUnlockedSystemicCompanions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247d70
	struct APawn* GetPrimaryCompanionPawn(); // Function Phoenix.CompanionManager.GetPrimaryCompanionPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247d40
	struct FName GetPrimaryCompanionNameBP(); // Function Phoenix.CompanionManager.GetPrimaryCompanionNameBP // (Final|Native|Public|BlueprintCallable) // @ game+0x3247d00
	struct FString GetForcedCompanionName(); // Function Phoenix.CompanionManager.GetForcedCompanionName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247cb0
	struct TArray<struct FName> GetDisabledSystemicCompanions(); // Function Phoenix.CompanionManager.GetDisabledSystemicCompanions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247c60
	bool GetCompanionSettingDataFromActorBP(struct AActor* companionActor, struct FCompanionSettingData& OutCompanionSettingData); // Function Phoenix.CompanionManager.GetCompanionSettingDataFromActorBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3247b60
	bool GetCompanionSettingDataBP(struct FString Name, struct FCompanionSettingData& OutCompanionSettingData); // Function Phoenix.CompanionManager.GetCompanionSettingDataBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3247a50
	struct FName GetCompanionNameWithMostCompanionshipTime(); // Function Phoenix.CompanionManager.GetCompanionNameWithMostCompanionshipTime // (Final|Native|Protected|BlueprintCallable) // @ game+0x3247a10
	struct UCompanionManager* GetCompanionManager(); // Function Phoenix.CompanionManager.GetCompanionManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3247550
	struct FString GetCompanionInteractionTextBP(struct AActor* interactionActor, int32_t Index); // Function Phoenix.CompanionManager.GetCompanionInteractionTextBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3247900
	bool GetCompanionFollowParamsBP(struct APawn* Pawn, struct FCompanionFollowParams& Params); // Function Phoenix.CompanionManager.GetCompanionFollowParamsBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32477d0
	struct TArray<struct FName> GetAllPossibleSystemicCompanions(); // Function Phoenix.CompanionManager.GetAllPossibleSystemicCompanions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247780
	bool GetActivePrimaryCompanionPawnAndName(struct APawn*& CompanionPawn, struct FName& OutCompanionName, bool bIsFemale); // Function Phoenix.CompanionManager.GetActivePrimaryCompanionPawnAndName // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247640
	bool GetActivePrimaryCompanionPawn(struct APawn*& CompanionPawn); // Function Phoenix.CompanionManager.GetActivePrimaryCompanionPawn // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32475a0
	struct UCompanionManager* Get(); // Function Phoenix.CompanionManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3247550
	void DisableSystemicCompanionsForDungeons(bool bDisable); // Function Phoenix.CompanionManager.DisableSystemicCompanionsForDungeons // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32474d0
	bool ChooseLocation(struct APawn* InCompanionPawn, struct FVector& OutDestination); // Function Phoenix.CompanionManager.ChooseLocation // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32473f0
	void ChangeCompanionInvulnerableBP(struct FName& InCompanionName, bool InBMakeInvulnerable); // Function Phoenix.CompanionManager.ChangeCompanionInvulnerableBP // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x3247310
	bool CanSystemicallyCompanionable(struct FName& InNPCName); // Function Phoenix.CompanionManager.CanSystemicallyCompanionable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x3247250
	bool CanMoveCompanionBP(struct APawn* Pawn, struct FCompanionFollowParams& Params); // Function Phoenix.CompanionManager.CanMoveCompanionBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3247120
	void CancelAttackForAllCompanions(); // Function Phoenix.CompanionManager.CancelAttackForAllCompanions // (Final|Native|Public|BlueprintCallable) // @ game+0x32472f0
	bool CanAddIdentity(struct FName& InCompanionName); // Function Phoenix.CompanionManager.CanAddIdentity // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3247080
	bool AreSystemicCompanionsDisabled(); // Function Phoenix.CompanionManager.AreSystemicCompanionsDisabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3247050
	void AddIdentityToCompanion(struct FName& InCompanionName, struct FName& InIdentityName); // Function Phoenix.CompanionManager.AddIdentityToCompanion // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3246f70
};

// Class Phoenix.CompanionSettings
// Size: 0x178 (Inherited: 0x28)
struct UCompanionSettings : UObject {
	struct FSoftObjectPath CompanionConfigData; // 0x28(0x18)
	struct FDbSingleColumnInfo TestCompanionName; // 0x40(0x88)
	struct TMap<enum class SocialSemanticIDs, struct FCompanionIdentityBuff> BuffsPerIdentity; // 0xc8(0x50)
	struct TArray<uint32_t> BuffLevels; // 0x118(0x10)
	struct FOdcPathSpec CompanionPathSpecs; // 0x128(0x50)
};

// Class Phoenix.CompanionConfigData
// Size: 0x120 (Inherited: 0x30)
struct UCompanionConfigData : UDataAsset {
	struct FCompanionSettingData CompanionSettingData; // 0x30(0x80)
	enum class SocialCapitalStatusIDs SoCapStatusOnDismissal; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	struct FGameplayTag DisillusionmentPerkTag; // 0xb4(0x08)
	struct FName CompanionForbiddenAreaMessage; // 0xbc(0x08)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TMap<enum class ECompanionVO, struct FString> EventNameMap; // 0xc8(0x50)
	float ForcedCompanionPlaybackProbability; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
};

// Class Phoenix.CompanionStatsTriggers
// Size: 0xc0 (Inherited: 0x28)
struct UCompanionStatsTriggers : UObject {
	char pad_28[0x98]; // 0x28(0x98)

	void OnStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.CompanionStatsTriggers.OnStatChanged // (Final|Native|Protected) // @ game+0x3248f40
};

// Class Phoenix.CompanionTeleportVolume
// Size: 0x298 (Inherited: 0x248)
struct ACompanionTeleportVolume : AActor {
	struct UBoxComponent* CollisionComponent; // 0x248(0x08)
	char pad_250[0x1c]; // 0x250(0x1c)
	bool bIsAlwaysActive; // 0x26c(0x01)
	bool bTriggerOnEnter; // 0x26d(0x01)
	char pad_26E[0x1a]; // 0x26e(0x1a)
	struct TArray<struct AActor*> Locators; // 0x288(0x10)

	void SetTemporarilyActive(bool bActive, float Timeout); // Function Phoenix.CompanionTeleportVolume.SetTemporarilyActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3249a60
	void SetActive(bool bActive); // Function Phoenix.CompanionTeleportVolume.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3249320
	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CompanionTeleportVolume.OnEndOverlap // (Final|Native|Public) // @ game+0x3248b80
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CompanionTeleportVolume.OnBeginOverlap // (Final|Native|Public) // @ game+0x3248520
};

// Class Phoenix.CompendiumModelSpawner
// Size: 0x268 (Inherited: 0x248)
struct ACompendiumModelSpawner : AActor {
	char pad_248[0x20]; // 0x248(0x20)

	void UnloadModelClass(); // Function Phoenix.CompendiumModelSpawner.UnloadModelClass // (Final|Native|Protected|BlueprintCallable) // @ game+0x324d9d0
	void ForceMountAssetsToBeResident(struct USkeletalMeshComponent* MountSK); // Function Phoenix.CompendiumModelSpawner.ForceMountAssetsToBeResident // (Final|Native|Protected|BlueprintCallable) // @ game+0x324d160
	void BP_OnModelClassLoaded(struct FString ItemName); // Function Phoenix.CompendiumModelSpawner.BP_OnModelClassLoaded // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BP_LODsLoaded(); // Function Phoenix.CompendiumModelSpawner.BP_LODsLoaded // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void AsyncLoadModelClassFromDbId(struct FString InItemName); // Function Phoenix.CompendiumModelSpawner.AsyncLoadModelClassFromDbId // (Final|Native|Protected|BlueprintCallable) // @ game+0x324cc10
};

// Class Phoenix.ConsumablePotionItemTool
// Size: 0x488 (Inherited: 0x430)
struct AConsumablePotionItemTool : AInventoryItemTool {
	struct UStaticMeshComponent* PotionMesh; // 0x430(0x08)
	struct UNiagaraComponent* LiquidParticleSystem; // 0x438(0x08)
	float LiquidDrainTime; // 0x440(0x04)
	char pad_444[0x4]; // 0x444(0x04)
	struct UParticleSystem* PotionConsumeVFX; // 0x448(0x08)
	struct UNiagaraSystem* NiagaraPotionConsumeVFX; // 0x450(0x08)
	struct FName VFXBoneAttachmentName; // 0x458(0x08)
	struct UNiagaraComponent* PotionConsumeNiagaraComponent; // 0x460(0x08)
	struct APotionBottlePhysics* PotionBottlePhysicsClass; // 0x468(0x08)
	char pad_470[0x18]; // 0x470(0x18)

	void ThrowPotionBottleTimerExpired(); // Function Phoenix.ConsumablePotionItemTool.ThrowPotionBottleTimerExpired // (Final|Native|Private) // @ game+0x3254050
	void ThrowPotionBottle(); // Function Phoenix.ConsumablePotionItemTool.ThrowPotionBottle // (Final|Native|Public|BlueprintCallable) // @ game+0x3254030
	void DrinkPotion(); // Function Phoenix.ConsumablePotionItemTool.DrinkPotion // (Final|Native|Public|BlueprintCallable) // @ game+0x3252310
};

// Class Phoenix.CompletePolyjuiceItemTool
// Size: 0x488 (Inherited: 0x488)
struct ACompletePolyjuiceItemTool : AConsumablePotionItemTool {
};

// Class Phoenix.ConfringoSpellTool
// Size: 0x990 (Inherited: 0x868)
struct AConfringoSpellTool : AFireOnceSpellTool {
	float CharacterThrowRadius; // 0x868(0x04)
	float TargetPhysicsImpulse; // 0x86c(0x04)
	float BasePhysicsImpulse; // 0x870(0x04)
	float MassScaledPhysicsImpulse; // 0x874(0x04)
	float BaseTorque; // 0x878(0x04)
	float MassScaleTorque; // 0x87c(0x04)
	float CharacterBasePhysicsImpulse; // 0x880(0x04)
	float CharacterMassScaledPhysicsImpulse; // 0x884(0x04)
	float CharacterBaseTorque; // 0x888(0x04)
	float CharacterMassScaleTorque; // 0x88c(0x04)
	int32_t ObjectTargetingPercent; // 0x890(0x04)
	float ObjectMaxVelocity; // 0x894(0x04)
	float AOECharacterDamage; // 0x898(0x04)
	float AOEObjectDamage; // 0x89c(0x04)
	float UpgradeCharacterDamage; // 0x8a0(0x04)
	float UpgradeObjectDamage; // 0x8a4(0x04)
	float UpgradeCharacterThrowRadius; // 0x8a8(0x04)
	float UpgradeTargetPhysicsImpulse; // 0x8ac(0x04)
	float UpgradeBasePhysicsImpulse; // 0x8b0(0x04)
	float UpgradeMassScaledPhysicsImpulse; // 0x8b4(0x04)
	float UpgradeCharacterBasePhysicsImpulse; // 0x8b8(0x04)
	float UpgradeCharacterMassScaledPhysicsImpulse; // 0x8bc(0x04)
	int32_t UpgradeObjectTargetingPercent; // 0x8c0(0x04)
	float UpgradeObjectMaxVelocity; // 0x8c4(0x04)
	float UpgradeAOECharacterDamage; // 0x8c8(0x04)
	float UpgradeAOEObjectDamage; // 0x8cc(0x04)
	bool DamageCaster; // 0x8d0(0x01)
	bool bCurseTarget; // 0x8d1(0x01)
	char pad_8D2[0x6]; // 0x8d2(0x06)
	struct FGameplayTagContainer AOEMunitionTagContainer; // 0x8d8(0x20)
	struct UInteractionArchitectAsset* AOEMunitionDataAsset; // 0x8f8(0x08)
	struct UObject* DecalComponent; // 0x900(0x08)
	float ThrowTargetHalfAngle; // 0x908(0x04)
	float ThrowTargetAngleZ; // 0x90c(0x04)
	bool Taboo; // 0x910(0x01)
	char pad_911[0x3]; // 0x911(0x03)
	float ThrowMinZThreshold; // 0x914(0x04)
	float ThrowMaxZThreshold; // 0x918(0x04)
	float BurnRateScale; // 0x91c(0x04)
	float TalentBombardaCooldownRecovery; // 0x920(0x04)
	int32_t TalentRecoveryCharacterNum; // 0x924(0x04)
	float TalentProjectileDistance; // 0x928(0x04)
	float TalentProjectileIgnoreNearDistance; // 0x92c(0x04)
	float TalentProjectileDelay; // 0x930(0x04)
	float TalentProjectileDamage; // 0x934(0x04)
	int32_t TalentProjectileCount; // 0x938(0x04)
	int32_t TalentProjectileTargetHalfAngleXY; // 0x93c(0x04)
	struct AMunitionType_Base* TalentProjectileMunition; // 0x940(0x08)
	float MinDamageDealt; // 0x948(0x04)
	float MaxDamageDealt; // 0x94c(0x04)
	float MinDamageDealtCharacter; // 0x950(0x04)
	float MaxDamageDealtCharacter; // 0x954(0x04)
	float MinDamageTaken; // 0x958(0x04)
	float MaxDamageTaken; // 0x95c(0x04)
	float MinDamageTakenCharacter; // 0x960(0x04)
	float MaxDamageTakenCharacter; // 0x964(0x04)
	struct AMunitionType_Base* OpportunityWindowAOEMunition; // 0x968(0x08)
	char pad_970[0x20]; // 0x970(0x20)

	float GetExplosionRadius(); // Function Phoenix.ConfringoSpellTool.GetExplosionRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x324d2b0
	void AddOnFireDoT(struct AActor* Target); // Function Phoenix.ConfringoSpellTool.AddOnFireDoT // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.ConfundoComponent
// Size: 0x1b8 (Inherited: 0x190)
struct UConfundoComponent : UStateEffectComponent {
	struct FConfundoData ConfundoData; // 0x190(0x18)
	char pad_1A8[0x10]; // 0x1a8(0x10)
};

// Class Phoenix.ConfundoSpellTool
// Size: 0x880 (Inherited: 0x868)
struct AConfundoSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> ConfundoFX2; // 0x868(0x10)
	float DazeTime; // 0x878(0x04)
	char pad_87C[0x4]; // 0x87c(0x04)
};

// Class Phoenix.ConjurationBoundsComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UConjurationBoundsComponent : UBoxComponent {
};

// Class Phoenix.ConjurationGroundPlacementAreaComponent
// Size: 0x510 (Inherited: 0x480)
struct UConjurationGroundPlacementAreaComponent : UPrimitiveComponent {
	struct FConjurationSurfaceMeshBuildParams BuildParams; // 0x480(0x14)
	char pad_494[0x7c]; // 0x494(0x7c)

	bool DoesShapeFitBP(struct TArray<struct FVector> InVertices, struct FTransform InTransform); // Function Phoenix.ConjurationGroundPlacementAreaComponent.DoesShapeFitBP // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x324ce40
	void BuildMesh(); // Function Phoenix.ConjurationGroundPlacementAreaComponent.BuildMesh // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.ConjurationGroundPlacementAreaActor
// Size: 0x250 (Inherited: 0x248)
struct AConjurationGroundPlacementAreaActor : AActor {
	struct UConjurationGroundPlacementAreaComponent* GroundPlacementAreaComponent; // 0x248(0x08)

	void BuildMesh(); // Function Phoenix.ConjurationGroundPlacementAreaActor.BuildMesh // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.ConjurationPreviewEffect
// Size: 0x260 (Inherited: 0x248)
struct AConjurationPreviewEffect : AActor {
	float SpawnTimeLimit; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct AActor* TargetPreviewActor; // 0x250(0x08)
	enum class EConjurationSpawnState SpawnState; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)

	void UpdateFXBlueprint(float DeltaTime); // Function Phoenix.ConjurationPreviewEffect.UpdateFXBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnEndSpawnOutBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnEndSpawnOutBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnEndSpawnInBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnEndSpawnInBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnEndSpawnedBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnEndSpawnedBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBeginSpawnOutBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnBeginSpawnOutBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBeginSpawnInBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnBeginSpawnInBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBeginSpawnedBlueprint(); // Function Phoenix.ConjurationPreviewEffect.OnBeginSpawnedBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void InitializeBlueprint(); // Function Phoenix.ConjurationPreviewEffect.InitializeBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	float GetSpawnPercent(); // Function Phoenix.ConjurationPreviewEffect.GetSpawnPercent // (Final|Native|Protected|BlueprintCallable) // @ game+0x324d4d0
};

// Class Phoenix.ConjurationSnappingComponentBase
// Size: 0x4f0 (Inherited: 0x4b0)
struct UConjurationSnappingComponentBase : UBoxComponent {
	char pad_4B0[0x40]; // 0x4b0(0x40)
};

// Class Phoenix.ConjurationSnappingFootprintComponent
// Size: 0x4f0 (Inherited: 0x4f0)
struct UConjurationSnappingFootprintComponent : UConjurationSnappingComponentBase {
};

// Class Phoenix.ConjurationSnappingWallComponent
// Size: 0x4f0 (Inherited: 0x4f0)
struct UConjurationSnappingWallComponent : UConjurationSnappingComponentBase {
};

// Class Phoenix.TransfigurationSpellToolBase
// Size: 0xaa8 (Inherited: 0x958)
struct ATransfigurationSpellToolBase : AChannelingSpellTool {
	struct FBTCustomAction TransfigurationAction; // 0x958(0x0c)
	char pad_964[0x1c]; // 0x964(0x1c)
	struct FName ObjectCategoryName; // 0x980(0x08)
	struct TArray<struct FLockableTransfigurationItem> TransformationOptions; // 0x988(0x10)
	struct FLockableTransfigurationItem SelectedTransformationOption; // 0x998(0x70)
	struct TArray<struct FLockableTransfigurationItem> ColorOptions; // 0xa08(0x10)
	struct FLockableTransfigurationItem SelectedColorOption; // 0xa18(0x70)
	struct TArray<struct FName> CategoryBreadcrumbs; // 0xa88(0x10)
	float TwirlDirection; // 0xa98(0x04)
	char pad_A9C[0x4]; // 0xa9c(0x04)
	float HoldingDurationBeforeTransfigurationTimerStart; // 0xaa0(0x04)
	bool bWaitForCharacterAnimations; // 0xaa4(0x01)
	char pad_AA5[0x3]; // 0xaa5(0x03)

	void TransformObject_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.TransformObject_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a99e0
	void SetTransformComponentRef(struct UTransformationSpellToolComponent* TC); // Function Phoenix.TransfigurationSpellToolBase.SetTransformComponentRef // (Final|Native|Public|BlueprintCallable) // @ game+0x34a98c0
	void ScaleUp(); // Function Phoenix.TransfigurationSpellToolBase.ScaleUp // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9780
	void ScaleDown(); // Function Phoenix.TransfigurationSpellToolBase.ScaleDown // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9760
	void RotateRight_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.RotateRight_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9740
	void RotateRight(); // Function Phoenix.TransfigurationSpellToolBase.RotateRight // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9720
	void RotateLeft_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.RotateLeft_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9700
	void RotateLeft(); // Function Phoenix.TransfigurationSpellToolBase.RotateLeft // (Final|Native|Public|BlueprintCallable) // @ game+0x34a96e0
	bool PrevTransformation(); // Function Phoenix.TransfigurationSpellToolBase.PrevTransformation // (Final|Native|Public|BlueprintCallable) // @ game+0x34a96b0
	void PrevColor(); // Function Phoenix.TransfigurationSpellToolBase.PrevColor // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9690
	void PrepareToExit(); // Function Phoenix.TransfigurationSpellToolBase.PrepareToExit // (Native|Public|BlueprintCallable) // @ game+0x34a9670
	void PrepareToBack(); // Function Phoenix.TransfigurationSpellToolBase.PrepareToBack // (Native|Public|BlueprintCallable) // @ game+0x34a9650
	bool NextTransformation(); // Function Phoenix.TransfigurationSpellToolBase.NextTransformation // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9550
	void NextColor(); // Function Phoenix.TransfigurationSpellToolBase.NextColor // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9530
	bool IsObjectStationary(); // Function Phoenix.TransfigurationSpellToolBase.IsObjectStationary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9500
	bool IsObjectScalable(); // Function Phoenix.TransfigurationSpellToolBase.IsObjectScalable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a94d0
	bool IsObjectRotatable(); // Function Phoenix.TransfigurationSpellToolBase.IsObjectRotatable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a94a0
	bool HasTransformationOptions(); // Function Phoenix.TransfigurationSpellToolBase.HasTransformationOptions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9470
	bool HasColorOptions(); // Function Phoenix.TransfigurationSpellToolBase.HasColorOptions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9440
	float GetTransfigurationDuration(); // Function Phoenix.TransfigurationSpellToolBase.GetTransfigurationDuration // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9400
	struct TArray<struct FTransfigurationResource> GetRequiredResources(); // Function Phoenix.TransfigurationSpellToolBase.GetRequiredResources // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9380
	struct ATransfigurationPreviewActor* GetPreviewActor(); // Function Phoenix.TransfigurationSpellToolBase.GetPreviewActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9350
	enum class ETransfigurationPlacementError GetPlacementError(); // Function Phoenix.TransfigurationSpellToolBase.GetPlacementError // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9320
	float GetHoldingDurationBeforeTransfigurationTimerStart(); // Function Phoenix.TransfigurationSpellToolBase.GetHoldingDurationBeforeTransfigurationTimerStart // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9300
	void Exit(); // Function Phoenix.TransfigurationSpellToolBase.Exit // (Native|Public|BlueprintCallable) // @ game+0x34a92e0
	bool DoesObjectSupportSnapping(); // Function Phoenix.TransfigurationSpellToolBase.DoesObjectSupportSnapping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a92b0
	bool ConsumesSanctuaryContextResources(); // Function Phoenix.TransfigurationSpellToolBase.ConsumesSanctuaryContextResources // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9280
	void ConjurePreview_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.ConjurePreview_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9260
	void ConfirmTransfiguration_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.ConfirmTransfiguration_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9240
	bool ConfirmTransfiguration(); // Function Phoenix.TransfigurationSpellToolBase.ConfirmTransfiguration // (Final|Native|Public|BlueprintCallable) // @ game+0x34a9210
	void ColorObject_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.ColorObject_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a91f0
	bool CanPlaceItem(); // Function Phoenix.TransfigurationSpellToolBase.CanPlaceItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a91a0
	void CancelPreview_FromMotion(); // Function Phoenix.TransfigurationSpellToolBase.CancelPreview_FromMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x34a91d0
	void Back(); // Function Phoenix.TransfigurationSpellToolBase.Back // (Native|Public|BlueprintCallable) // @ game+0x34a9180
	bool AreResourceRequirementsMet(); // Function Phoenix.TransfigurationSpellToolBase.AreResourceRequirementsMet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a9150
};

// Class Phoenix.ConjurationSpellTool
// Size: 0xb70 (Inherited: 0xaa8)
struct AConjurationSpellTool : ATransfigurationSpellToolBase {
	int32_t SelectedCategory; // 0xaa8(0x04)
	int32_t SelectedSubcategory; // 0xaac(0x04)
	int32_t SelectedIcon; // 0xab0(0x04)
	struct FName CurrentItemID; // 0xab4(0x08)
	char pad_ABC[0x44]; // 0xabc(0x44)
	struct TArray<struct FConjuredHistoryItem> LastConjuredItems; // 0xb00(0x10)
	char pad_B10[0x28]; // 0xb10(0x28)
	float MovementThresholdToSpawnNextPreview; // 0xb38(0x04)
	float AngleThresholdToSpawnNextPreview; // 0xb3c(0x04)
	float MinConjurationDuration; // 0xb40(0x04)
	float MaxConjurationDuration; // 0xb44(0x04)
	int32_t MaxNumItemsForConjurationDurationMax; // 0xb48(0x04)
	bool bUseDefaultVanishmentForSingleObjectUndo; // 0xb4c(0x01)
	char pad_B4D[0x3]; // 0xb4d(0x03)
	struct ATransfigurationPreviewActor* UndoPreviewActorClass; // 0xb50(0x08)
	float MinSecondsBetweenUndoVanishments; // 0xb58(0x04)
	char pad_B5C[0x4]; // 0xb5c(0x04)
	struct TArray<struct ATransformationStyleBase*> TransformationStyles; // 0xb60(0x10)

	void UpdatePreviewResourceRequirementsMet(); // Function Phoenix.ConjurationSpellTool.UpdatePreviewResourceRequirementsMet // (Final|Native|Public) // @ game+0x324da70
	void UpdateHoldConjuring(float TimeRatio); // Function Phoenix.ConjurationSpellTool.UpdateHoldConjuring // (Final|Native|Public|BlueprintCallable) // @ game+0x324d9f0
	void UndoLastConjuredItem(); // Function Phoenix.ConjurationSpellTool.UndoLastConjuredItem // (Final|Native|Public|BlueprintCallable) // @ game+0x324d9b0
	void StartHoldConjuring(); // Function Phoenix.ConjurationSpellTool.StartHoldConjuring // (Final|Native|Public|BlueprintCallable) // @ game+0x324d990
	void ShowItemPreview(struct FName InItemID, struct FName InColorID); // Function Phoenix.ConjurationSpellTool.ShowItemPreview // (Final|Native|Public|BlueprintCallable) // @ game+0x324d8c0
	void SetCategory(struct FName CategoryID); // Function Phoenix.ConjurationSpellTool.SetCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x324d830
	struct TArray<struct FLockableTransfigurationItem> GetSubCategories(struct FName CategoryName); // Function Phoenix.ConjurationSpellTool.GetSubCategories // (Final|Native|Public|BlueprintCallable) // @ game+0x324d520
	struct TArray<struct FLockableTransfigurationItem> GetItemList(); // Function Phoenix.ConjurationSpellTool.GetItemList // (Final|Native|Public|BlueprintCallable) // @ game+0x324d480
	struct FLockableTransfigurationItem GetItemData(struct FName ItemOrCategoryName); // Function Phoenix.ConjurationSpellTool.GetItemData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x324d2d0
	struct FName GetCurrentCategory(); // Function Phoenix.ConjurationSpellTool.GetCurrentCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x324d270
	struct FString GetCategoryTextKey(); // Function Phoenix.ConjurationSpellTool.GetCategoryTextKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x324d1f0
	void FinishHoldConjuring(); // Function Phoenix.ConjurationSpellTool.FinishHoldConjuring // (Final|Native|Public|BlueprintCallable) // @ game+0x324d140
	void ConjureMenuFullStop(); // Function Phoenix.ConjurationSpellTool.ConjureMenuFullStop // (Final|Native|Public|BlueprintCallable) // @ game+0x324cd80
	bool CanUndoLastItem(); // Function Phoenix.ConjurationSpellTool.CanUndoLastItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x324ccb0
	void CannotHoldConjuring(); // Function Phoenix.ConjurationSpellTool.CannotHoldConjuring // (Final|Native|Public|BlueprintCallable) // @ game+0x324cd60
	void CancelHoldConjuring(float TimeRatio); // Function Phoenix.ConjurationSpellTool.CancelHoldConjuring // (Final|Native|Public|BlueprintCallable) // @ game+0x324cce0
};

// Class Phoenix.ConjurationStreamingVolume
// Size: 0x290 (Inherited: 0x280)
struct AConjurationStreamingVolume : AVolume {
	char pad_280[0x10]; // 0x280(0x10)
};

// Class Phoenix.ConjurationSurfaceMeshActor
// Size: 0x390 (Inherited: 0x248)
struct AConjurationSurfaceMeshActor : AActor {
	struct UBoxComponent* VolumeComponent; // 0x248(0x08)
	struct UConjurationSurfaceMeshComponent* SurfaceMeshComponent; // 0x250(0x08)
	struct FName SurfaceTag; // 0x258(0x08)
	struct FConjurationSurfaceMeshBuildParams BuildParams; // 0x260(0x14)
	char pad_274[0x4]; // 0x274(0x04)
	struct FDbSingleColumnInfo RequiredLockID; // 0x278(0x88)
	struct FDbSingleColumnInfo ProhibitedLockID; // 0x300(0x88)
	char pad_388[0x8]; // 0x388(0x08)

	void BuildMesh(); // Function Phoenix.ConjurationSurfaceMeshActor.BuildMesh // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.ConjurationSurfaceMeshComponent
// Size: 0x530 (Inherited: 0x480)
struct UConjurationSurfaceMeshComponent : UPrimitiveComponent {
	struct FConjurationSurfaceMeshBuildParams BuildParams; // 0x480(0x14)
	char pad_494[0x9c]; // 0x494(0x9c)

	void RemoveShapeComponent(struct UConjurationSurfaceShapeComponent* InShapeComponent); // Function Phoenix.ConjurationSurfaceMeshComponent.RemoveShapeComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x324d7a0
	void RemoveShape(int32_t ShapeID); // Function Phoenix.ConjurationSurfaceMeshComponent.RemoveShape // (Final|Native|Public|BlueprintCallable) // @ game+0x324d710
	void MoveShape(int32_t ShapeID, struct FTransform InNewTransform); // Function Phoenix.ConjurationSurfaceMeshComponent.MoveShape // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x324d5d0
	bool DoesShapeFitBP(struct TArray<struct FVector> InVertices, struct FTransform InTransform); // Function Phoenix.ConjurationSurfaceMeshComponent.DoesShapeFitBP // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x324cfc0
	bool DoesShapeComponentFitBP(struct UConjurationSurfaceShapeComponent* InShape); // Function Phoenix.ConjurationSurfaceMeshComponent.DoesShapeComponentFitBP // (Final|Native|Public|BlueprintCallable) // @ game+0x324cda0
	void BuildMesh(); // Function Phoenix.ConjurationSurfaceMeshComponent.BuildMesh // (Final|Native|Public) // @ game+0x1074730
	struct TArray<int32_t> AddShapeComponent(struct UConjurationSurfaceShapeComponent* InShapeComponent, struct FTransform& InTransform); // Function Phoenix.ConjurationSurfaceMeshComponent.AddShapeComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x324caa0
	int32_t AddShape(struct TArray<struct FVector> InVertices, struct FTransform InTransform); // Function Phoenix.ConjurationSurfaceMeshComponent.AddShape // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x324c920
};

// Class Phoenix.ConjurationSurfaceShapeComponent
// Size: 0x4a0 (Inherited: 0x480)
struct UConjurationSurfaceShapeComponent : UPrimitiveComponent {
	char pad_480[0x20]; // 0x480(0x20)

	int32_t GetNumShapes(); // Function Phoenix.ConjurationSurfaceShapeComponent.GetNumShapes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252b50
	void BuildShapeFromMeshes(); // Function Phoenix.ConjurationSurfaceShapeComponent.BuildShapeFromMeshes // (Final|Native|Public) // @ game+0x3252110
	void BuildShapeFromCollision(); // Function Phoenix.ConjurationSurfaceShapeComponent.BuildShapeFromCollision // (Final|Native|Public) // @ game+0x32520f0
};

// Class Phoenix.ConjurationWallAlignmentComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UConjurationWallAlignmentComponent : UBoxComponent {
};

// Class Phoenix.ConjuredActorComponent
// Size: 0x3f0 (Inherited: 0x250)
struct UConjuredActorComponent : UChildActorComponent {
	struct FDbSingleColumnInfo ObjectCategory; // 0x250(0x88)
	struct FDbSingleColumnInfo ObjectID; // 0x2d8(0x88)
	struct FDbSingleColumnInfo ColorOverride; // 0x360(0x88)
	char pad_3E8[0x8]; // 0x3e8(0x08)
};

// Class Phoenix.ConjuredDragonComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UConjuredDragonComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)

	void HeadTrackActor(struct AActor* InActor); // Function Phoenix.ConjuredDragonComponent.HeadTrackActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3252c10
	void EndEncounter(); // Function Phoenix.ConjuredDragonComponent.EndEncounter // (Final|Native|Public|BlueprintCallable) // @ game+0x3252350
	void BeginEncounter(); // Function Phoenix.ConjuredDragonComponent.BeginEncounter // (Final|Native|Public|BlueprintCallable) // @ game+0x3251ef0
	void ApproachVector(struct FVector& Out, struct FVector& curr, struct FVector& Dest, float Rate, float dt); // Function Phoenix.ConjuredDragonComponent.ApproachVector // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3251d10
	float ApproachScalar(float curr, float Dest, float Rate, float dt); // Function Phoenix.ConjuredDragonComponent.ApproachScalar // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3251ba0
};

// Class Phoenix.Construction_Interface
// Size: 0x28 (Inherited: 0x28)
struct UConstruction_Interface : UInterface {

	void Construct(struct FTransform& Transform); // Function Phoenix.Construction_Interface.Construct // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3252160
};

// Class Phoenix.PotionBottlePhysics
// Size: 0x278 (Inherited: 0x248)
struct APotionBottlePhysics : AActor {
	struct UStaticMeshComponent* PotionMesh; // 0x248(0x08)
	struct FVector ThrowLinearVelocity; // 0x250(0x0c)
	struct FVector ThrowAngularVelocity; // 0x25c(0x0c)
	float FadeDelay; // 0x268(0x04)
	float FadeDuration; // 0x26c(0x04)
	char pad_270[0x8]; // 0x270(0x08)
};

// Class Phoenix.WorldObject
// Size: 0x2b0 (Inherited: 0x298)
struct AWorldObject : AInteractiveObjectActor {
	char pad_298[0x18]; // 0x298(0x18)

	bool TryCreateBeacon(); // Function Phoenix.WorldObject.TryCreateBeacon // (Final|Native|Protected) // @ game+0x34eaff0
	void OnAboutToSaveGame(); // Function Phoenix.WorldObject.OnAboutToSaveGame // (Final|Native|Protected) // @ game+0x34eabd0
	void NotifyCurrentState(enum class EInteractiveState CurrentObjectState); // Function Phoenix.WorldObject.NotifyCurrentState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Container
// Size: 0x3c0 (Inherited: 0x2b0)
struct AContainer : AWorldObject {
	char pad_2B0[0x10]; // 0x2b0(0x10)
	bool Open; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	int32_t PropIndex; // 0x2c4(0x04)
	char pad_2C8[0x8]; // 0x2c8(0x08)
	struct FTransform Lid_Transform; // 0x2d0(0x30)
	float Lid_Rot_X; // 0x300(0x04)
	float RandomZRotation; // 0x304(0x04)
	struct TMap<struct TSoftObjectPtr<UStaticMesh>, bool> MeshSelect; // 0x308(0x50)
	int32_t EnvInt; // 0x358(0x04)
	bool SimulatePhysics; // 0x35c(0x01)
	bool AutoSelectLoot; // 0x35d(0x01)
	char pad_35E[0x2]; // 0x35e(0x02)
	int32_t LockLevel; // 0x360(0x04)
	struct FName KeyName; // 0x364(0x08)
	struct FDatabaseLockList Lock_KeyName; // 0x36c(0x08)
	struct FName Stat_KeyName; // 0x374(0x08)
	struct FStatList Stat_KeyName2; // 0x37c(0x08)
	int32_t Stat_MinValue; // 0x384(0x04)
	int64_t ExpiryTime; // 0x388(0x08)
	struct TArray<struct AActor*> Target; // 0x390(0x10)
	struct FName BeaconableObjectID; // 0x3a0(0x08)
	int32_t SerializedContainerVersion; // 0x3a8(0x04)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct UPadlockComponent* PadlockComponent; // 0x3b0(0x08)
	char pad_3B8[0x8]; // 0x3b8(0x08)
};

// Class Phoenix.ContentsInterface
// Size: 0x28 (Inherited: 0x28)
struct UContentsInterface : UInterface {
};

// Class Phoenix.ControlTest
// Size: 0x2b0 (Inherited: 0x248)
struct AControlTest : ATargetPoint {
	struct FString m_subjectName; // 0x248(0x10)
	float m_maxDisplacement; // 0x258(0x04)
	char pad_25C[0x54]; // 0x25c(0x54)

	void SetLogWidget(struct UUserWidget* i_logWidget); // Function Phoenix.ControlTest.SetLogWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void SetCommandVelocity(struct FVector& i_velocity); // Function Phoenix.ControlTest.SetCommandVelocity // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3253600
};

// Class Phoenix.ConvergeTest
// Size: 0x298 (Inherited: 0x248)
struct AConvergeTest : AActor {
	struct FName m_convergeTag1; // 0x248(0x08)
	struct FName m_convergeTag2; // 0x250(0x08)
	float m_radius; // 0x258(0x04)
	float m_desiredSpeed; // 0x25c(0x04)
	uint32_t m_pathCount; // 0x260(0x04)
	bool m_opposing; // 0x264(0x01)
	char pad_265[0x33]; // 0x265(0x33)
};

// Class Phoenix.ConversationActor
// Size: 0x858 (Inherited: 0x528)
struct AConversationActor : AStoryGraphActor {
	char pad_528[0x18]; // 0x528(0x18)
	struct FSceneRigStage_Actor interactionActor; // 0x540(0x18)
	struct FSceneRigStage_Actor LocalPlayer; // 0x558(0x18)
	struct FSceneRigStage_Actor Camera; // 0x570(0x18)
	struct FSceneRigStage_String DialogueSequenceID; // 0x588(0x18)
	struct FSceneRigStage_String DialogueEventName; // 0x5a0(0x18)
	struct FSceneRigStage_Int DialogueFlags; // 0x5b8(0x18)
	struct FSceneRigStage_Transform AvatarHead; // 0x5d0(0x18)
	struct FSceneRigStage_Transform AvatarRoot; // 0x5e8(0x18)
	struct FSceneRigStage_Transform AvatarRootFinal; // 0x600(0x18)
	struct FSceneRigStage_Transform A1Head; // 0x618(0x18)
	struct FSceneRigStage_Transform A1Root; // 0x630(0x18)
	struct FSceneRigStage_Transform A1RootFinal; // 0x648(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeOut; // 0x660(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeIn; // 0x678(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeOut; // 0x690(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeIn; // 0x6a8(0x18)
	struct FSceneRigStage_Int SynchronizationMethod; // 0x6c0(0x18)
	struct FSceneRigStage_Bool EnableLightRig; // 0x6d8(0x18)
	struct FSceneRigStage_Bool UsesSkyColors; // 0x6f0(0x18)
	struct FSceneRigStage_Float KeyLightColorTemperature; // 0x708(0x18)
	struct FSceneRigStage_Float RimLightColorTemperature; // 0x720(0x18)
	struct FSceneRigStage_Float FillLightColorTemperature; // 0x738(0x18)
	struct FSceneRigStage_Float KeyLightIntensity; // 0x750(0x18)
	struct FSceneRigStage_Float RimLightIntensity; // 0x768(0x18)
	struct FSceneRigStage_Float FillLightIntensity; // 0x780(0x18)
	char pad_798[0xc0]; // 0x798(0xc0)
};

// Class Phoenix.ConversationComponent
// Size: 0x500 (Inherited: 0xc8)
struct UConversationComponent : UActorComponent {
	char pad_C8[0xa8]; // 0xc8(0xa8)
	struct UConversationState* ConversationState; // 0x170(0x08)
	struct TMap<struct FName, struct UConversationState*> PreInitializedConversationMap; // 0x178(0x50)
	struct TWeakObjectPtr<struct UScheduledEntity> RequestingFleshForSE; // 0x1c8(0x08)
	struct TWeakObjectPtr<struct AActor> RequestingInteractionActor; // 0x1d0(0x08)
	char pad_1D8[0x1e8]; // 0x1d8(0x1e8)
	struct TMap<struct FName, struct UStoryGraph_Conversation*> VendorConditionalConversationMap; // 0x3c0(0x50)
	char pad_410[0x40]; // 0x410(0x40)
	struct TArray<struct FStaticConversationRegistrationPerUser> StaticRegistrations; // 0x450(0x10)
	char pad_460[0x8]; // 0x460(0x08)
	struct UStationArchitectAsset* ConversationSceneRigs; // 0x468(0x08)
	struct USceneRig_SimpleConversation* PresentChoicesSR; // 0x470(0x08)
	struct UStoryGraph_Conversation* VendorStoryGraph; // 0x478(0x08)
	struct TArray<struct FStaticVendorEntry> StaticVendorEntries; // 0x480(0x10)
	char pad_490[0x70]; // 0x490(0x70)

	void UnregisterConversation(struct FName CharacterID, struct FName ConversationID); // Function Phoenix.ConversationComponent.UnregisterConversation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3254130
	void UnregisterAllConversation(struct FName CharacterID); // Function Phoenix.ConversationComponent.UnregisterAllConversation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32540b0
	bool StartConversationWithAssetBP(struct FName CharacterID, struct FName ConversationID, struct UStoryGraph_Conversation* ConversationAsset); // Function Phoenix.ConversationComponent.StartConversationWithAssetBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3253e80
	bool StartConversationWithActorBP(struct AActor* interactionActor, struct FName ConversationID, struct FDelegate OnConversationStarted, struct FDelegate OnConversationFinished); // Function Phoenix.ConversationComponent.StartConversationWithActorBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3253d10
	bool StartConversationBP(struct FName CharacterID, struct FName ConversationID, struct FDelegate OnConversationStarted, struct FDelegate OnConversationFinished); // Function Phoenix.ConversationComponent.StartConversationBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3253ba0
	void SetBranchIDStateUsed(struct FName BranchID); // Function Phoenix.ConversationComponent.SetBranchIDStateUsed // (Final|Native|Public|BlueprintCallable) // @ game+0x3253570
	void RegisterVendorConversationBP(struct AActor* InteractingActor, struct UConversationComponent* ConversationComponent); // Function Phoenix.ConversationComponent.RegisterVendorConversationBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32533a0
	void RegisterConversationNoCallbacksBP(struct FName CharacterID, struct FName ConversationID, enum class EConversationType ConversationType); // Function Phoenix.ConversationComponent.RegisterConversationNoCallbacksBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32532a0
	void RegisterConversationBP(struct FName CharacterID, struct FName ConversationID, struct FDelegate OnConversationStarted, struct FDelegate OnConversationFinished, enum class EConversationType ConversationType); // Function Phoenix.ConversationComponent.RegisterConversationBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32530e0
	void OnSaveGameLoaded(); // Function Phoenix.ConversationComponent.OnSaveGameLoaded // (Final|Native|Protected) // @ game+0x3253080
	bool NewConversations(); // Function Phoenix.ConversationComponent.NewConversations // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x244cc00
	struct UConversationState* GetCurrentConversation(); // Function Phoenix.ConversationComponent.GetCurrentConversation // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3252ac0
	bool GetConversationOptions(struct AActor* interactionActor, struct FName CharacterID, struct UTimeRig_StoryGraphNode* SGNode, struct TArray<struct FConversationOption>& UIParameters, struct TArray<struct FName>& BranchIDs); // Function Phoenix.ConversationComponent.GetConversationOptions // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252870
	bool GetConversationLastLineID(struct UTimeRig_StoryGraphNode* SGNode, struct FName& LastLineID); // Function Phoenix.ConversationComponent.GetConversationLastLineID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252790
	struct UConversationComponent* Get(); // Function Phoenix.ConversationComponent.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3252630
	void BindGenericConversationStart(struct FDelegate& OnConversationStarted); // Function Phoenix.ConversationComponent.BindGenericConversationStart // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3252050
	void BindGenericConversationFinish(struct FDelegate& OnConversationFinished); // Function Phoenix.ConversationComponent.BindGenericConversationFinish // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3251fb0
	bool BeginInteraction(struct AActor* interactionActor); // Function Phoenix.ConversationComponent.BeginInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x3251f10
};

// Class Phoenix.ConversationState
// Size: 0x620 (Inherited: 0x28)
struct UConversationState : UObject {
	char pad_28[0x2b8]; // 0x28(0x2b8)
	struct AStoryGraphActor* LegacyConversationActor; // 0x2e0(0x08)
	struct AConversationActor* OwnedConversationActor; // 0x2e8(0x08)
	struct UStoryGraph_Conversation* CurrentConversation; // 0x2f0(0x08)
	char pad_2F8[0x328]; // 0x2f8(0x328)
};

// Class Phoenix.ConveyorBelt
// Size: 0x248 (Inherited: 0x248)
struct AConveyorBelt : AActor {
};

// Class Phoenix.CooldownPickup
// Size: 0x308 (Inherited: 0x248)
struct ACooldownPickup : AActor {
	struct TArray<struct UMultiFX2_Base*> SpawnFX; // 0x248(0x10)
	struct TArray<struct UMultiFX2_Base*> CollectedFX; // 0x258(0x10)
	struct TArray<struct UMultiFX2_Base*> FizzleFX; // 0x268(0x10)
	struct UPrimitiveComponent* Prim; // 0x278(0x08)
	char pad_280[0x88]; // 0x280(0x88)

	void UnpauseAndShow(); // Function Phoenix.CooldownPickup.UnpauseAndShow // (Final|Native|Public|BlueprintCallable) // @ game+0x3254090
	void PauseAndHide(); // Function Phoenix.CooldownPickup.PauseAndHide // (Final|Native|Public|BlueprintCallable) // @ game+0x32530a0
	void OnPickedUp(struct AActor* InActor); // Function Phoenix.CooldownPickup.OnPickedUp // (Final|Native|Public|BlueprintCallable) // @ game+0x3252ff0
	float GetDisablePickupTime(); // Function Phoenix.CooldownPickup.GetDisablePickupTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252b10
	bool CanPickup(); // Function Phoenix.CooldownPickup.CanPickup // (Final|Native|Public|BlueprintCallable) // @ game+0x3252130
};

// Class Phoenix.NPC_Component
// Size: 0x1ec0 (Inherited: 0xc8)
struct UNPC_Component : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct UInteractionArchitectAsset* DefaultMunitionInteractionArchitectAsset; // 0xd0(0x08)
	bool bEnableAnimationTickOptimization; // 0xd8(0x01)
	bool bEnableShutdownOptimization; // 0xd9(0x01)
	char pad_DA[0x2]; // 0xda(0x02)
	float FootprintSize; // 0xdc(0x04)
	bool bDestroyOnDeath; // 0xe0(0x01)
	bool bSidekick; // 0xe1(0x01)
	bool bAllowBackLight; // 0xe2(0x01)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct TArray<struct FNPC_SpawnLocationMap> SpawnLocationMap; // 0xe8(0x10)
	enum class ENPC_Spawn SpawnType; // 0xf8(0x01)
	bool bPerceptionCanInterruptSpawn; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct UInteractionArchitectAsset* SpawnInteractionArchitectAsset; // 0x100(0x08)
	struct TArray<struct FNPC_SpawnData> SpawnList; // 0x108(0x10)
	float SpawnCollisionRadius; // 0x118(0x04)
	float SpawnCollisionImpulse; // 0x11c(0x04)
	float SpawnCollisionScaledForce; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TArray<struct FNPC_AbilityChannelMap> AbilityChannelMap; // 0x128(0x10)
	enum class ENPC_AbilityChannel DefaultChannel; // 0x138(0x01)
	char pad_139[0x7]; // 0x139(0x07)
	struct TArray<struct FNPC_AbilityChannel> AbilityChannelList; // 0x140(0x10)
	struct UAblAbility* IdleAbility; // 0x150(0x08)
	struct UAblAbility* WanderIdleAbility; // 0x158(0x08)
	struct UAblAbility* SpawnStartAbility; // 0x160(0x08)
	struct UAblAbility* MoveAbility; // 0x168(0x08)
	struct UAblAbility* MoveStopAbility; // 0x170(0x08)
	struct UAblAbility* MoveStartAbility; // 0x178(0x08)
	struct UAblAbility* MovePivotAbility; // 0x180(0x08)
	struct UAblAbility* SecondaryAttackAbility; // 0x188(0x08)
	struct UAblAbility* HealAttackAbility; // 0x190(0x08)
	struct UAblAbility* ReparoAttackAbility; // 0x198(0x08)
	struct UAblAbility* JumpSplineAbility; // 0x1a0(0x08)
	struct UAblAbility* CustomSpellAbility; // 0x1a8(0x08)
	struct UAblAbility* NeutralEmotionAbility; // 0x1b0(0x08)
	struct UAblAbility* FollowSplineAbility; // 0x1b8(0x08)
	struct UAblAbility* FollowSplineIdleAbility; // 0x1c0(0x08)
	struct UAblReactionAbility* WoundedKneelAbility; // 0x1c8(0x08)
	struct UAblReactionAbility* DazedAbility; // 0x1d0(0x08)
	struct UAblReactionAbility* DeadAbility; // 0x1d8(0x08)
	struct UAblAbility* DisillusionmentAbilityEnter; // 0x1e0(0x08)
	struct UAblAbility* DisillusionmentAbilityExit; // 0x1e8(0x08)
	bool bIdleTimeoutFailsafe; // 0x1f0(0x01)
	char pad_1F1[0x7]; // 0x1f1(0x07)
	struct USpellToolRecord* HealSpellToolRecord; // 0x1f8(0x08)
	struct USpellToolRecord* ReparoSpellToolRecord; // 0x200(0x08)
	struct USpellToolRecord* CustomSpellToolRecord; // 0x208(0x08)
	struct USpellToolRecord* DisillusionmentSpellToolRecord; // 0x210(0x08)
	struct TArray<struct FNPC_TurnAssistDataContainer> TurnAssistDataContainer; // 0x218(0x10)
	struct TArray<struct FNPC_MobilityUberData> MobilityUberDataArray; // 0x228(0x10)
	struct TArray<struct FNPC_MobilityTransition> MobilityTransitionArray; // 0x238(0x10)
	struct TArray<struct UNPC_MobilityDataContainerAsset*> MobilityDataContainerAsset; // 0x248(0x10)
	struct TArray<struct FNPC_MobilityDataContainer> MobilityDataContainer; // 0x258(0x10)
	bool bRegisterAsTargetSource; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct UNPC_PerceptionChoice* PerceptionChoice; // 0x270(0x08)
	bool bRandomizeScaleOnSpawn; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float MinScale; // 0x27c(0x04)
	float MaxScale; // 0x280(0x04)
	float OppositeDirectionFleeValidDistance; // 0x284(0x04)
	bool bEnterOnFireState; // 0x288(0x01)
	bool bUseOnFireStateBehavior; // 0x289(0x01)
	bool bBroadcastAudioHeartbeat; // 0x28a(0x01)
	char pad_28B[0x1]; // 0x28b(0x01)
	float AudioHeartbeatDist; // 0x28c(0x04)
	bool bDoDirectionAvoidance; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float RepulsorRadiusMultiplier; // 0x294(0x04)
	float RepulsorRadiusCushionMultiplier; // 0x298(0x04)
	float RepulsorDetectionRadiusMultiplier; // 0x29c(0x04)
	float ResolveBlockedAllowableAngle; // 0x2a0(0x04)
	bool bUseDirectionFilter; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	float DirectionFilterRate; // 0x2a8(0x04)
	float DirectionFilterRateMin; // 0x2ac(0x04)
	float DirectionFilterRateMax; // 0x2b0(0x04)
	float DirectionAvoidanceInterval; // 0x2b4(0x04)
	float AvoidanceSlowdownScale; // 0x2b8(0x04)
	struct FGameplayTag MoveTag; // 0x2bc(0x08)
	struct FGameplayTag MoveStopTag; // 0x2c4(0x08)
	struct FGameplayTag MoveStartTag; // 0x2cc(0x08)
	struct FGameplayTag MovePivotTag; // 0x2d4(0x08)
	float MovePivotMinAngle; // 0x2dc(0x04)
	float OverrideNavRadius; // 0x2e0(0x04)
	float NavFitRadius; // 0x2e4(0x04)
	float NavFitVerticalRadius; // 0x2e8(0x04)
	float NavFitMoveTolerance; // 0x2ec(0x04)
	float NavReachableDownRadius; // 0x2f0(0x04)
	float NavReachableUpRadius; // 0x2f4(0x04)
	float NavReachableRadius; // 0x2f8(0x04)
	enum class ENPC_WaterResponse WaterResponse; // 0x2fc(0x01)
	char pad_2FD[0x3]; // 0x2fd(0x03)
	float LOSRadius; // 0x300(0x04)
	float AlertUIRate; // 0x304(0x04)
	float TASSenseHoldTime; // 0x308(0x04)
	struct FGameplayTag DeadGameplayTag; // 0x30c(0x08)
	char pad_314[0x4]; // 0x314(0x04)
	struct FGameplayTagContainer NPCTypeTagContainer; // 0x318(0x20)
	struct TArray<struct FNPC_LosingTarget> LosingTargetList; // 0x338(0x10)
	bool bUseNavigator; // 0x348(0x01)
	char pad_349[0x7]; // 0x349(0x07)
	struct UNPC_AbilityTaskScratchPad* AbilityScratchPad; // 0x350(0x08)
	bool bGlobalVulnerability; // 0x358(0x01)
	bool bUseExpliciteProtegoStart; // 0x359(0x01)
	bool bProtegoStaysUpWhileAttacking; // 0x35a(0x01)
	char pad_35B[0x1]; // 0x35b(0x01)
	float ProtegoCooldownTime; // 0x35c(0x04)
	float ProtegoBrokeTime; // 0x360(0x04)
	float ProtegoWaitTime; // 0x364(0x04)
	float ProtegoOnOffEffectAdjustment; // 0x368(0x04)
	int32_t VulnerableAbilities; // 0x36c(0x04)
	struct FEnemy_ParryParamData ParryParamData; // 0x370(0x10)
	struct FEnemy_LimitAttackOnTargetData LimitAttackOnTargetParamData; // 0x380(0x08)
	char pad_388[0x78]; // 0x388(0x78)
	bool bHeadTrackToAttackTarget; // 0x400(0x01)
	char pad_401[0x7]; // 0x401(0x07)
	struct FMulticastInlineDelegate NPCAudioStateHeartbeatDelegate; // 0x408(0x10)
	struct FMulticastInlineDelegate NPCEventDelegate; // 0x418(0x10)
	struct FMulticastInlineDelegate NPCMobilityChangedDelegate; // 0x428(0x10)
	struct FMulticastInlineDelegate NPCCharacterLoadedDelegate; // 0x438(0x10)
	struct FMulticastInlineDelegate NPC_AnimEventDelegate; // 0x448(0x10)
	struct FMulticastInlineDelegate CharacterSpawnFinishedDelegate; // 0x458(0x10)
	struct FMulticastInlineDelegate OnParryWindowBeginDelegate; // 0x468(0x10)
	struct FMulticastInlineDelegate OnParryWindowEndDelegate; // 0x478(0x10)
	char pad_488[0x10]; // 0x488(0x10)
	struct FMulticastInlineDelegate OnResurrectionFinished; // 0x498(0x10)
	struct FMulticastInlineDelegate OnStateChanged; // 0x4a8(0x10)
	struct FMulticastInlineDelegate ActionDoneDelegate; // 0x4b8(0x10)
	char pad_4C8[0xc]; // 0x4c8(0x0c)
	float ReactionParrySuccessTimeDilation; // 0x4d4(0x04)
	float ReactionParrySuccessTimeDilationDuration; // 0x4d8(0x04)
	char pad_4DC[0xc]; // 0x4dc(0x0c)
	struct URagdollControlComponent* RagdollControlComp; // 0x4e8(0x08)
	char pad_4F0[0xaa8]; // 0x4f0(0xaa8)
	struct TWeakObjectPtr<struct AActor> WanderActorOwner; // 0xf98(0x08)
	struct TWeakObjectPtr<struct AActor> WanderActorFollower; // 0xfa0(0x08)
	char pad_FA8[0xf0]; // 0xfa8(0xf0)
	struct ANPC_Controller* UpdateNPCControllerPtr; // 0x1098(0x08)
	struct UBlackboardComponent* m_pBlackboardComp; // 0x10a0(0x08)
	struct UDynamicBranchComponent* DynamicBranchComp; // 0x10a8(0x08)
	struct UNPC_ReactionComponent* NPCReactionComponent; // 0x10b0(0x08)
	struct UCapsuleComponent* CapsuleComp; // 0x10b8(0x08)
	struct UMeshComponent* MeshComponent; // 0x10c0(0x08)
	struct UAmbulatory_MovementComponent* AmbulatoryMoveComp; // 0x10c8(0x08)
	struct UCustomizableCharacterComponent* CCComponent; // 0x10d0(0x08)
	struct UAnimationArchitectComponent* AAComponent; // 0x10d8(0x08)
	struct UAblAbilityComponent* AbilityComponent; // 0x10e0(0x08)
	struct UBehaviorTreeComponent* BehaviorTreeComponent; // 0x10e8(0x08)
	char pad_10F0[0x5e7]; // 0x10f0(0x5e7)
	enum class EEnemyAIState DefaultState; // 0x16d7(0x01)
	bool bSetLockedStateForScheduledEntityMode; // 0x16d8(0x01)
	char pad_16D9[0x287]; // 0x16d9(0x287)
	struct FMulticastInlineDelegate JumpSplineDone; // 0x1960(0x10)
	char pad_1970[0x98]; // 0x1970(0x98)
	struct UAblAbility* EmoDefaultAbility; // 0x1a08(0x08)
	bool bCriticalFinisherAllowTimeDilation; // 0x1a10(0x01)
	char pad_1A11[0x7]; // 0x1a11(0x07)
	struct TSoftClassPtr<UObject> TransformIntoCreature; // 0x1a18(0x28)
	char pad_1A40[0x10]; // 0x1a40(0x10)
	struct TArray<struct FFinisherRequirementData> FinisherData; // 0x1a50(0x10)
	bool bFinisherDisabled; // 0x1a60(0x01)
	char pad_1A61[0x7]; // 0x1a61(0x07)
	struct FFinisherData DebugFinisher; // 0x1a68(0x50)
	char pad_1AB8[0x2f8]; // 0x1ab8(0x2f8)
	struct FNpcTimers NpcTimers; // 0x1db0(0xa0)
	char pad_1E50[0x70]; // 0x1e50(0x70)

	bool WasActionASuccess(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.WasActionASuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3399820
	bool UpdateTetheredLoc(struct FVector& OutLoc, bool& OutDone); // Function Phoenix.NPC_Component.UpdateTetheredLoc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3399730
	void UnchainAction(enum class EEnemyAIAction ChainFromAction); // Function Phoenix.NPC_Component.UnchainAction // (Final|Native|Public|BlueprintCallable) // @ game+0x33996b0
	bool TreeWaitUpdate(float DeltaTime); // Function Phoenix.NPC_Component.TreeWaitUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3399620
	struct FVector TetheredWanderLocation(); // Function Phoenix.NPC_Component.TetheredWanderLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33995e0
	void StopSpeedScaleAdjust(); // Function Phoenix.NPC_Component.StopSpeedScaleAdjust // (Final|Native|Public) // @ game+0x33995c0
	void StopMove(); // Function Phoenix.NPC_Component.StopMove // (Final|Native|Public|BlueprintCallable) // @ game+0x33995a0
	void StopActionOnUpdate(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.StopActionOnUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3399520
	void StopAction(enum class EEnemyAIAction InAction, bool bSuccess, bool bTimeout); // Function Phoenix.NPC_Component.StopAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3399400
	void StartupAbility(); // Function Phoenix.NPC_Component.StartupAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x33993e0
	void StartSpeedScaleAdjust(float InScale, float DurationSeconds); // Function Phoenix.NPC_Component.StartSpeedScaleAdjust // (Final|Native|Public|BlueprintCallable) // @ game+0x3399310
	void StartDynamicBranch(enum class EEnemy_Ability InAbility, enum class EEnemy_Ability InNextAbility, bool bImmediate); // Function Phoenix.NPC_Component.StartDynamicBranch // (Final|Native|Public|BlueprintCallable) // @ game+0x33991f0
	void StartCustomPause(bool bCleanupWhenCustomAbilityFinished); // Function Phoenix.NPC_Component.StartCustomPause // (Final|Native|Public|BlueprintCallable) // @ game+0x3399160
	bool StartAction(enum class EEnemyAIAction InAction, float Timeout); // Function Phoenix.NPC_Component.StartAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3399080
	bool SidekickUpdateStateUpdate(enum class ENPC_SidekickUpdateState InUpdateState, float DeltaTime); // Function Phoenix.NPC_Component.SidekickUpdateStateUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3398fa0
	void SetWanderStartLocation(struct FVector Location); // Function Phoenix.NPC_Component.SetWanderStartLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3398f10
	void SetTargetSightedEnable(bool bEnable); // Function Phoenix.NPC_Component.SetTargetSightedEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x3398e80
	void SetTargetLocationTurnInPlace(struct FVector InTargetLoc_TurnInPlace); // Function Phoenix.NPC_Component.SetTargetLocationTurnInPlace // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3398df0
	void SetTarget(struct AActor* pTarget); // Function Phoenix.NPC_Component.SetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3398d60
	void SetStealthContext(); // Function Phoenix.NPC_Component.SetStealthContext // (Final|Native|Public|BlueprintCallable) // @ game+0x3398d40
	void SetSpeedScale(float InScale); // Function Phoenix.NPC_Component.SetSpeedScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3398cc0
	void SetSpeedChooserScale(float InScale); // Function Phoenix.NPC_Component.SetSpeedChooserScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3398c40
	void SetSpeed(float InSpeed); // Function Phoenix.NPC_Component.SetSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3398bc0
	void SetSpawnAnimOffset(float InOffset); // Function Phoenix.NPC_Component.SetSpawnAnimOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x3398b40
	void SetScale(float Scale); // Function Phoenix.NPC_Component.SetScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3398ac0
	void SetOverrideMobility(enum class ENPC_Mobility InMobility); // Function Phoenix.NPC_Component.SetOverrideMobility // (Final|Native|Public|BlueprintCallable) // @ game+0x3398a40
	void SetOnStairs(); // Function Phoenix.NPC_Component.SetOnStairs // (Final|Native|Public|BlueprintCallable) // @ game+0x3398310
	void SetOnSlope(); // Function Phoenix.NPC_Component.SetOnSlope // (Final|Native|Public|BlueprintCallable) // @ game+0x3398310
	void SetOnFire(); // Function Phoenix.NPC_Component.SetOnFire // (Final|Native|Public|BlueprintCallable) // @ game+0x3398a20
	void SetMoveGoal(struct FVector InGoal, bool bNavReachable); // Function Phoenix.NPC_Component.SetMoveGoal // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3398940
	void SetJumpSplineData(struct FNPC_JumpSplineData& InData); // Function Phoenix.NPC_Component.SetJumpSplineData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3398850
	void SetJumpSpline(struct ANPC_Spline* InSplinePtr); // Function Phoenix.NPC_Component.SetJumpSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x33987c0
	void SetInvincibility(bool InIsInvincible); // Function Phoenix.NPC_Component.SetInvincibility // (Final|Native|Public|BlueprintCallable) // @ game+0x3398730
	void SetForcedPerceptionTarget(struct AActor* InTargetPtr, enum class ENPC_TargetAwareState InTAS, float InTime); // Function Phoenix.NPC_Component.SetForcedPerceptionTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3398610
	void SetFleeTargetPos(struct FVector InPos); // Function Phoenix.NPC_Component.SetFleeTargetPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3398580
	void SetFireExtinguished(); // Function Phoenix.NPC_Component.SetFireExtinguished // (Final|Native|Public|BlueprintCallable) // @ game+0x3398560
	void SetFinisherTagFilter(struct FGameplayTag InTag); // Function Phoenix.NPC_Component.SetFinisherTagFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x33984d0
	void SetCustomPauseExitConditions(bool bCleanupWhenAlert, bool CleanupWhenAttack, struct AActor* TargetToAllow); // Function Phoenix.NPC_Component.SetCustomPauseExitConditions // (Final|Native|Public|BlueprintCallable) // @ game+0x33983b0
	void SetCrouching(); // Function Phoenix.NPC_Component.SetCrouching // (Final|Native|Public|BlueprintCallable) // @ game+0x3398310
	void SetCrouchContextFlag(enum class ENPC_CrouchContext CrouchContext); // Function Phoenix.NPC_Component.SetCrouchContextFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x3398330
	void SetCharred(); // Function Phoenix.NPC_Component.SetCharred // (Final|Native|Public|BlueprintCallable) // @ game+0x3398310
	void SetCharacterRootMotionScale(float RootMotionScale); // Function Phoenix.NPC_Component.SetCharacterRootMotionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3398290
	void SetBlackboardKey(enum class EEnemy_BBKey InKey, bool bSet); // Function Phoenix.NPC_Component.SetBlackboardKey // (Final|Native|Public|BlueprintCallable) // @ game+0x33981c0
	void SetBlackboardFloat(struct FName& InBBName, float InValue); // Function Phoenix.NPC_Component.SetBlackboardFloat // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33980e0
	void SetBlackboardBool(struct FName& InBBName, bool InValue); // Function Phoenix.NPC_Component.SetBlackboardBool // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3398000
	void SetBlackboard(struct UBlackboardComponent* pBlackboardComp); // Function Phoenix.NPC_Component.SetBlackboard // (Final|Native|Public|BlueprintCallable) // @ game+0x3397f70
	void SetAttackCustomFlag(bool FlagIsSet); // Function Phoenix.NPC_Component.SetAttackCustomFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x3397ee0
	void SetAnimState(enum class EEnemyAIAnimState InAnimState); // Function Phoenix.NPC_Component.SetAnimState // (Native|Public|BlueprintCallable) // @ game+0x3397e60
	void SetAnimSpawnState(enum class ENPC_SpawnState InSpawnState); // Function Phoenix.NPC_Component.SetAnimSpawnState // (Final|Native|Public|BlueprintCallable) // @ game+0x334c710
	void SetAnimMainState(enum class EEnemy_AnimMainState InAnimState); // Function Phoenix.NPC_Component.SetAnimMainState // (Final|Native|Public|BlueprintCallable) // @ game+0x3397de0
	void SetActionParams(struct FNPC_ActionParams InParams); // Function Phoenix.NPC_Component.SetActionParams // (Final|Native|Public|BlueprintCallable) // @ game+0x3397cd0
	void SetAction(enum class EEnemyAIAction InAction, bool bSet); // Function Phoenix.NPC_Component.SetAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3397c00
	void SetAbilityScratchpadVelocity(struct FVector InVelocity); // Function Phoenix.NPC_Component.SetAbilityScratchpadVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3397b70
	void SetAbilityActive(enum class EEnemy_Ability InState, bool bActive); // Function Phoenix.NPC_Component.SetAbilityActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3397aa0
	int32_t PickRandomPath(struct AAIController* AIOwner, struct TArray<struct FVector> Targets, float TopPercent, enum class EPathExistanceQueryType PathQueryType, struct UNavigationQueryFilter* FilterClass, bool AllowPartialPaths, struct FVector& outTarget); // Function Phoenix.NPC_Component.PickRandomPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3397810
	bool PathExists(struct AAIController* AIOwner, struct FVector Target, enum class EPathExistanceQueryType PathQueryType, struct UNavigationQueryFilter* FilterClass, bool AllowPartialPaths); // Function Phoenix.NPC_Component.PathExists // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3397630
	void ParryEvent(enum class EEnemy_ParryButtonPressed InButtonPressed); // Function Phoenix.NPC_Component.ParryEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x33975b0
	void OnStationOnFinishedExit(); // Function Phoenix.NPC_Component.OnStationOnFinishedExit // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStationOnFinishedEnter(); // Function Phoenix.NPC_Component.OnStationOnFinishedEnter // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnReactionReceived(struct FQueueReactionParams& ReactionParams, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.NPC_Component.OnReactionReceived // (Native|Protected|HasOutParms) // @ game+0x3397490
	void OnReactionQueued(struct UAblReactionData* ReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.NPC_Component.OnReactionQueued // (Native|Protected) // @ game+0x33973c0
	void OnReactionEnd(struct UAblReactionData* ReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.NPC_Component.OnReactionEnd // (Native|Protected) // @ game+0x33972f0
	void OnMovementModeChange(struct ACharacter* Character, enum class EMovementMode PrevMovementMode, char PreviousCustomMode); // Function Phoenix.NPC_Component.OnMovementModeChange // (Final|Native|Public) // @ game+0x33971e0
	void OnLoadComplete(struct AActor* LoadedActor); // Function Phoenix.NPC_Component.OnLoadComplete // (Native|Public) // @ game+0x3397150
	void OnExitAliveVolume(struct AActor* InActor); // Function Phoenix.NPC_Component.OnExitAliveVolume // (Final|Native|Public) // @ game+0x33970c0
	void OnEnterKillVolume(struct AActor* InActor); // Function Phoenix.NPC_Component.OnEnterKillVolume // (Final|Native|Public) // @ game+0x3397030
	void OnDestroyed(struct AActor* Actor); // Function Phoenix.NPC_Component.OnDestroyed // (Final|Native|Public) // @ game+0x3396fa0
	void NPCRemoveFromManager(struct AActor* InActorPtr); // Function Phoenix.NPC_Component.NPCRemoveFromManager // (Final|Native|Public) // @ game+0x3396e70
	void NPCAddToManager(struct AActor* InActorPtr); // Function Phoenix.NPC_Component.NPCAddToManager // (Final|Native|Public) // @ game+0x3396de0
	bool NeedsStayInVolumeConstrain(struct FVector& InLoc); // Function Phoenix.NPC_Component.NeedsStayInVolumeConstrain // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396f00
	bool MoveToOnFire(float DeltaTime); // Function Phoenix.NPC_Component.MoveToOnFire // (Final|Native|Public|BlueprintCallable) // @ game+0x3396d50
	bool MoveToLocation(struct FVector Loc, struct UCurveFloat* CurveFloatPtr, float InterpSpeed, float DeltaTime, bool bStopOnOverlap); // Function Phoenix.NPC_Component.MoveToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3396b70
	enum class EPathFollowingRequestResult MoveTo(struct FVector Dest, float AcceptanceRadius, bool bStopOnOverlap, bool bUsePathfinding, bool bProjectDestinationToNavigation, bool bCanStrafe, struct UNavigationQueryFilter* FilterClass, bool bAllowPartialPath); // Function Phoenix.NPC_Component.MoveTo // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33968e0
	void Kill(); // Function Phoenix.NPC_Component.Kill // (Final|Native|Public|BlueprintCallable) // @ game+0x33968c0
	void K2_SetTargetableByPlayer(bool bTargetableByPlayer); // Function Phoenix.NPC_Component.K2_SetTargetableByPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x3396830
	void JumpSplineStart(); // Function Phoenix.NPC_Component.JumpSplineStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3396810
	bool IsVulnerable(); // Function Phoenix.NPC_Component.IsVulnerable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33967e0
	bool IsTargetSightedEnabled(); // Function Phoenix.NPC_Component.IsTargetSightedEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33967c0
	bool IsSwimming(); // Function Phoenix.NPC_Component.IsSwimming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396790
	bool IsStationary(); // Function Phoenix.NPC_Component.IsStationary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396760
	bool IsSpawnFinished(); // Function Phoenix.NPC_Component.IsSpawnFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x3396740
	bool IsReactionActive(); // Function Phoenix.NPC_Component.IsReactionActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396710
	bool IsOnStairs(); // Function Phoenix.NPC_Component.IsOnStairs // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33966e0
	bool IsOnSlope(); // Function Phoenix.NPC_Component.IsOnSlope // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33966b0
	bool IsOnFire(); // Function Phoenix.NPC_Component.IsOnFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396680
	bool IsNearDeathKneeling(); // Function Phoenix.NPC_Component.IsNearDeathKneeling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396650
	bool IsMoveDone(); // Function Phoenix.NPC_Component.IsMoveDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396630
	bool IsJumpSplineDone(); // Function Phoenix.NPC_Component.IsJumpSplineDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396600
	bool IsInvincible(); // Function Phoenix.NPC_Component.IsInvincible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33965d0
	bool IsInStealth(); // Function Phoenix.NPC_Component.IsInStealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396570
	bool IsInStation(); // Function Phoenix.NPC_Component.IsInStation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396550
	bool IsInjured(); // Function Phoenix.NPC_Component.IsInjured // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33965a0
	bool IsFlying(); // Function Phoenix.NPC_Component.IsFlying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396520
	bool IsDead(); // Function Phoenix.NPC_Component.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33964f0
	bool IsCrouching(); // Function Phoenix.NPC_Component.IsCrouching // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33964c0
	bool IsCompanion(); // Function Phoenix.NPC_Component.IsCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33964a0
	bool IsCharred(); // Function Phoenix.NPC_Component.IsCharred // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396470
	bool IsBlind(); // Function Phoenix.NPC_Component.IsBlind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396440
	bool IsActionDone(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.IsActionDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33963b0
	bool IsActionActive(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.IsActionActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394c20
	bool IsAbilityVulnerable(enum class EEnemy_Ability InAbility); // Function Phoenix.NPC_Component.IsAbilityVulnerable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396320
	bool IsAbilitySupported(enum class EEnemy_Ability InAbility); // Function Phoenix.NPC_Component.IsAbilitySupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396290
	bool IsAbilityActive(enum class EEnemy_Ability InState); // Function Phoenix.NPC_Component.IsAbilityActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3396200
	struct FGameplayTagContainer InsertIATagsToSpawnData(enum class ENPC_Spawn InSpawnType, struct FGameplayTagContainer InTagContainer); // Function Phoenix.NPC_Component.InsertIATagsToSpawnData // (Final|Native|Public|BlueprintCallable) // @ game+0x33960b0
	void InitTreeWait(struct FGameplayTag& TreeTag, struct TArray<enum class EEnemy_Ability>& InAbilityList, float Timeout, enum class EEnemy_InitTreeTimeoutAction TimeoutAction); // Function Phoenix.NPC_Component.InitTreeWait // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3395f10
	void InitTetheredLoc(float InTetherDist, struct FVector& InStartVec, bool bUseStartVec, float InMaxAngle, int32_t InDivisions, bool bInApplyTether, enum class ENPC_Tether InTetherType, float randomDistFloor, float randomDistCeiling); // Function Phoenix.NPC_Component.InitTetheredLoc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3395c40
	bool InitMoveToOnFire(); // Function Phoenix.NPC_Component.InitMoveToOnFire // (Final|Native|Public|BlueprintCallable) // @ game+0x3395c10
	bool InitMoveToLocation(struct FVector DestinationLoc, float Timeout, enum class ENPC_Mobility InMobility, bool bOverrideMobility); // Function Phoenix.NPC_Component.InitMoveToLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3395a80
	bool InitMoveToFleePos(struct FVector InPos, float Timeout); // Function Phoenix.NPC_Component.InitMoveToFleePos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3395990
	void InitMoveData(enum class ENPC_MoveDataState InState, struct AActor* TargetPtr, float Timeout); // Function Phoenix.NPC_Component.InitMoveData // (Final|Native|Public|BlueprintCallable) // @ game+0x3395870
	bool HasSightedTarget(); // Function Phoenix.NPC_Component.HasSightedTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395830
	bool HasFinisherWithRunningRequirementsMet(struct AActor* Attacker); // Function Phoenix.NPC_Component.HasFinisherWithRunningRequirementsMet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395790
	float GetYaw(); // Function Phoenix.NPC_Component.GetYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395770
	struct FVector GetWanderStartLocation(); // Function Phoenix.NPC_Component.GetWanderStartLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395740
	bool GetTreeWaitResult(); // Function Phoenix.NPC_Component.GetTreeWaitResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395710
	struct FVector GetTetheredLoc(float InDist, struct FVector& InStartVec, bool bUseStartVec, float InMaxAngle, int32_t InDivisions, bool bInApplyTether, enum class ENPC_Tether InTetherType, float randomDistFloor, float randomDistCeiling); // Function Phoenix.NPC_Component.GetTetheredLoc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3395420
	enum class EEnemy_TargetType GetTargetType(); // Function Phoenix.NPC_Component.GetTargetType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395400
	float GetTargetLookatApha(); // Function Phoenix.NPC_Component.GetTargetLookatApha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33953b0
	struct AActor* GetTarget(); // Function Phoenix.NPC_Component.GetTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395370
	float GetSpeedScale(); // Function Phoenix.NPC_Component.GetSpeedScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3395350
	float GetSpeedChooserScale(); // Function Phoenix.NPC_Component.GetSpeedChooserScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3395330
	enum class ENPC_SidekickUpdateState GetSidekickUpdateState(); // Function Phoenix.NPC_Component.GetSidekickUpdateState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395300
	float GetScale(); // Function Phoenix.NPC_Component.GetScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33952e0
	struct UAblAbility* GetPlayerCriticalFinisherAbility(struct FGameplayTagContainer& MunitionsTags); // Function Phoenix.NPC_Component.GetPlayerCriticalFinisherAbility // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3395210
	struct UAblAbility* GetPlayerCriticalDamageAbility(struct FGameplayTagContainer& MunitionsTags); // Function Phoenix.NPC_Component.GetPlayerCriticalDamageAbility // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3395140
	bool GetPerceptionSuspended(); // Function Phoenix.NPC_Component.GetPerceptionSuspended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395120
	bool GetPerceptionEnabled(); // Function Phoenix.NPC_Component.GetPerceptionEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395100
	enum class ENPC_Mobility GetOverrideMobility(); // Function Phoenix.NPC_Component.GetOverrideMobility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33950d0
	bool GetOnGround(); // Function Phoenix.NPC_Component.GetOnGround // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33950b0
	struct UNPC_AnimInstance* GetNPCAnimInstance(); // Function Phoenix.NPC_Component.GetNPCAnimInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x3395080
	struct FVector GetMyLoc(); // Function Phoenix.NPC_Component.GetMyLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395050
	struct FVector GetMyGroundLoc(); // Function Phoenix.NPC_Component.GetMyGroundLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3395020
	bool GetMoveToLocationSuccess(); // Function Phoenix.NPC_Component.GetMoveToLocationSuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394f50
	enum class EPathFollowingRequestResult GetMoveToLocationResult(); // Function Phoenix.NPC_Component.GetMoveToLocationResult // (Final|Native|Public|BlueprintCallable) // @ game+0x3394fb0
	float GetMoveTolerance(); // Function Phoenix.NPC_Component.GetMoveTolerance // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394fe0
	bool GetMoveToDone(); // Function Phoenix.NPC_Component.GetMoveToDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394f80
	bool GetMoveDataSuccess(); // Function Phoenix.NPC_Component.GetMoveDataSuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394f50
	enum class ENPC_Mobility GetMobility(); // Function Phoenix.NPC_Component.GetMobility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394f30
	struct USkeletalMeshComponent* GetMeshComponent(); // Function Phoenix.NPC_Component.GetMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394f00
	enum class ENPC_TargetAwareState GetKilledTAS(); // Function Phoenix.NPC_Component.GetKilledTAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394ee0
	struct AActor* GetForcedPerceptionTarget(); // Function Phoenix.NPC_Component.GetForcedPerceptionTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3394eb0
	struct FVector GetFleeTargetPos(); // Function Phoenix.NPC_Component.GetFleeTargetPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3394e80
	struct FVector GetFleeDistLocation(); // Function Phoenix.NPC_Component.GetFleeDistLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3394e40
	enum class EEnemyAIAction GetChainedAction(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.GetChainedAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394db0
	float GetCapsuleRadius(); // Function Phoenix.NPC_Component.GetCapsuleRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394d90
	float GetCapsuleHalfHeight(); // Function Phoenix.NPC_Component.GetCapsuleHalfHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394d70
	struct FVector GetAUXRecoverLoc(); // Function Phoenix.NPC_Component.GetAUXRecoverLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394bf0
	enum class EEnemyAIAnimState GetAnimState(); // Function Phoenix.NPC_Component.GetAnimState // (Native|Public|BlueprintCallable) // @ game+0x3394d40
	enum class ENPC_SpawnState GetAnimSpawnState(); // Function Phoenix.NPC_Component.GetAnimSpawnState // (Final|Native|Public|BlueprintCallable) // @ game+0x19e8aa0
	enum class EEnemy_AnimMainState GetAnimMainState(); // Function Phoenix.NPC_Component.GetAnimMainState // (Final|Native|Public|BlueprintCallable) // @ game+0x3394d10
	struct UAnimInstance* GetAnimInstance(); // Function Phoenix.NPC_Component.GetAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394ce0
	enum class EEnemy_Ability GetActiveAbility(); // Function Phoenix.NPC_Component.GetActiveAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394cb0
	bool GetAction(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.GetAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3394c20
	struct UNPC_AbilityTaskScratchPad* GetAbilityScratchpad(); // Function Phoenix.NPC_Component.GetAbilityScratchpad // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd100
	void ForcePerceptionUpdate(); // Function Phoenix.NPC_Component.ForcePerceptionUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3394bd0
	void FinishReactionParrySuccessTimeDilation(); // Function Phoenix.NPC_Component.FinishReactionParrySuccessTimeDilation // (Final|Native|Public) // @ game+0x3394bb0
	struct FVector FindValidLocation(struct FVector InPos); // Function Phoenix.NPC_Component.FindValidLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3394b00
	bool ExecuteAbility(struct UAblAbility* InAbilityPtr, enum class ENPC_AbilityChannel InChannel); // Function Phoenix.NPC_Component.ExecuteAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3394a30
	void EnterTree(struct FGameplayTag& TreeTag, bool InAbortMove); // Function Phoenix.NPC_Component.EnterTree // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3394950
	void EndCustomPause(); // Function Phoenix.NPC_Component.EndCustomPause // (Final|Native|Public|BlueprintCallable) // @ game+0x3394930
	void EnablePerception(bool Enable); // Function Phoenix.NPC_Component.EnablePerception // (Final|Native|Public|BlueprintCallable) // @ game+0x33948a0
	void EnableAbilityChannel(enum class ENPC_AbilityChannel InChannel, bool bInEnable); // Function Phoenix.NPC_Component.EnableAbilityChannel // (Final|Native|Public|BlueprintCallable) // @ game+0x33947d0
	bool CriticalFinisherAllowTimeDilation(); // Function Phoenix.NPC_Component.CriticalFinisherAllowTimeDilation // (Final|Native|Public|BlueprintCallable) // @ game+0x33947b0
	struct FNPC_NavPath CreateNavPath(struct AAIController* InControllerPtr, struct FVector& InStartLoc, struct FVector& InEndLoc, float InToleranceRadius); // Function Phoenix.NPC_Component.CreateNavPath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33945c0
	void ClearStealthContext(); // Function Phoenix.NPC_Component.ClearStealthContext // (Final|Native|Public|BlueprintCallable) // @ game+0x33945a0
	void ClearCrouchContextFlag(enum class ENPC_CrouchContext CrouchContext); // Function Phoenix.NPC_Component.ClearCrouchContextFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x3394520
	void ChainAction(enum class EEnemyAIAction ChainFromAction, enum class EEnemyAIAction ChainToAction); // Function Phoenix.NPC_Component.ChainAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3394450
	float CalcFleeMoveToLocationTime(struct FVector InDestination); // Function Phoenix.NPC_Component.CalcFleeMoveToLocationTime // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33943b0
	void BroadcastNPC_AnimEvent(struct FName InName); // Function Phoenix.NPC_Component.BroadcastNPC_AnimEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x3394320
	struct AActor* AttemptToFindUniqueOwnerForFollower(struct ANPC_Character* OwnerClass, struct ANPC_Character* InFollower, float FindDistance); // Function Phoenix.NPC_Component.AttemptToFindUniqueOwnerForFollower // (Final|Native|Public|BlueprintCallable) // @ game+0x3394200
	struct AActor* AttemptToFindPackOwnerForFollower(struct ANPC_Character* InFollower, float FindDistance); // Function Phoenix.NPC_Component.AttemptToFindPackOwnerForFollower // (Final|Native|Public|BlueprintCallable) // @ game+0x3394130
	void ActionUpdate(enum class EEnemyAIAction InAction, float DeltaTime); // Function Phoenix.NPC_Component.ActionUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3394060
	void AbortAction(enum class EEnemyAIAction InAction); // Function Phoenix.NPC_Component.AbortAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3393fe0
};

// Class Phoenix.Creature_AIComponent
// Size: 0x22b0 (Inherited: 0x1ec0)
struct UCreature_AIComponent : UNPC_Component {
	struct UInteractionArchitectAsset* IdleInteractionAsset; // 0x1ec0(0x08)
	float TetherRadius; // 0x1ec8(0x04)
	float FleeRange; // 0x1ecc(0x04)
	float FleeRunDistance; // 0x1ed0(0x04)
	float FleeJogDistance; // 0x1ed4(0x04)
	float FleeWalkDistance; // 0x1ed8(0x04)
	float FleePathingDistance; // 0x1edc(0x04)
	float FleeScatterRadius; // 0x1ee0(0x04)
	float FleeHerdRadius; // 0x1ee4(0x04)
	struct AActor* FleeDestinationOverride; // 0x1ee8(0x08)
	bool bFadeWhenFleeing; // 0x1ef0(0x01)
	char pad_1EF1[0x3]; // 0x1ef1(0x03)
	float ReactionInstigatorTagTime; // 0x1ef4(0x04)
	enum class ECreatureFleeFlyingOption FleeFlyingOption; // 0x1ef8(0x01)
	bool bIsFleeConstrainedByTether; // 0x1ef9(0x01)
	enum class ECreatureMovementSpeed MaximumFleeMovementSpeed; // 0x1efa(0x01)
	char pad_1EFB[0x1]; // 0x1efb(0x01)
	struct FVector2D ApproachRange; // 0x1efc(0x08)
	float TurnApproachRadius; // 0x1f04(0x04)
	float TrotApproachRadius; // 0x1f08(0x04)
	float RunApproachRadius; // 0x1f0c(0x04)
	enum class ECreatureStance InteractStance; // 0x1f10(0x01)
	char pad_1F11[0x7]; // 0x1f11(0x07)
	struct FGameplayTagContainer FeedAnimLookupTags; // 0x1f18(0x20)
	struct FGameplayTagContainer PettingAnimLookupTags; // 0x1f38(0x20)
	struct FName PettingBrushAttachRelativeBoneName; // 0x1f58(0x08)
	float StartWithRestIdleBehaviorChance; // 0x1f60(0x04)
	float StartWithRestIdleBehaviorAtNightChance; // 0x1f64(0x04)
	float StartWithForageIdleBehaviorChance; // 0x1f68(0x04)
	struct FVector2D ExploreRange; // 0x1f6c(0x08)
	struct FVector2D ExploreRangeFromHerdLocation; // 0x1f74(0x08)
	float MinExploreWaitTime; // 0x1f7c(0x04)
	float MaxExploreWaitTime; // 0x1f80(0x04)
	int32_t ExploreBehaviorLoopsMin; // 0x1f84(0x04)
	int32_t ExploreBehaviorLoopsMax; // 0x1f88(0x04)
	bool bTurnAnticipation; // 0x1f8c(0x01)
	char pad_1F8D[0x3]; // 0x1f8d(0x03)
	struct FVector2D ForageRange; // 0x1f90(0x08)
	int32_t ForageBehaviorLoopsMin; // 0x1f98(0x04)
	int32_t ForageBehaviorLoopsMax; // 0x1f9c(0x04)
	struct FVector2D ForageLookAroundTime; // 0x1fa0(0x08)
	bool bCanForage; // 0x1fa8(0x01)
	char pad_1FA9[0x3]; // 0x1fa9(0x03)
	float GroomOrLookAroundConsiderationMultiplier; // 0x1fac(0x04)
	float GroomConsiderationMultiplier; // 0x1fb0(0x04)
	int32_t RestBehaviorLoopsMin; // 0x1fb4(0x04)
	int32_t RestBehaviorLoopsMax; // 0x1fb8(0x04)
	float FlightPreferredThresholdDistance; // 0x1fbc(0x04)
	bool bShouldFlyOutOfWater; // 0x1fc0(0x01)
	char pad_1FC1[0x3]; // 0x1fc1(0x03)
	float CirclingConsiderationMultiplier; // 0x1fc4(0x04)
	float CirclingWhenWildConsiderationBonus; // 0x1fc8(0x04)
	float MinCirclingHeightAboveGround; // 0x1fcc(0x04)
	float MaxCirclingHeightAboveGround; // 0x1fd0(0x04)
	float MinCirclingRadiusMultiplier; // 0x1fd4(0x04)
	float MaxCirclingRadiusMultiplier; // 0x1fd8(0x04)
	float MinCirclingTime; // 0x1fdc(0x04)
	float MaxCirclingTime; // 0x1fe0(0x04)
	bool bCanUsePerches; // 0x1fe4(0x01)
	char pad_1FE5[0x3]; // 0x1fe5(0x03)
	float PerchingConsiderationMultiplier; // 0x1fe8(0x04)
	float PerchingWhenWildConsiderationBonus; // 0x1fec(0x04)
	float MinPerchingSearchRadius; // 0x1ff0(0x04)
	float MaxPerchingSearchRadius; // 0x1ff4(0x04)
	float MinPerchingTime; // 0x1ff8(0x04)
	float MaxPerchingTime; // 0x1ffc(0x04)
	bool bIsPerchingConstrainedByTether; // 0x2000(0x01)
	char pad_2001[0x3]; // 0x2001(0x03)
	float Laziness; // 0x2004(0x04)
	bool bIsNocturnal; // 0x2008(0x01)
	bool bCanUseHerding; // 0x2009(0x01)
	char pad_200A[0x2]; // 0x200a(0x02)
	float InitialHerdDetectionRadius; // 0x200c(0x04)
	bool bCanHerdSleep; // 0x2010(0x01)
	bool bCanHerdFlee; // 0x2011(0x01)
	char pad_2012[0x2]; // 0x2012(0x02)
	struct FVector2D NewHerdLocationRange; // 0x2014(0x08)
	bool bCanGraze; // 0x201c(0x01)
	char pad_201D[0x3]; // 0x201d(0x03)
	float GrazingMinRadius; // 0x2020(0x04)
	float GrazingMaxRadius; // 0x2024(0x04)
	float StationaryGrazingDuration; // 0x2028(0x04)
	struct FVector2D RelaxStandingTime; // 0x202c(0x08)
	struct FVector2D RelaxSittingTime; // 0x2034(0x08)
	struct FVector2D RelaxLyingTime; // 0x203c(0x08)
	struct FVector2D RelaxSleepingTime; // 0x2044(0x08)
	float RelaxStandingConsiderationMultiplier; // 0x204c(0x04)
	float RelaxSittingConsiderationMultiplier; // 0x2050(0x04)
	float RelaxLyingConsiderationMultiplier; // 0x2054(0x04)
	float RelaxSleepingConsiderationMultiplier; // 0x2058(0x04)
	char pad_205C[0x4]; // 0x205c(0x04)
	struct TArray<enum class ECreatureStance> PregnancyStances; // 0x2060(0x10)
	float NurtureInteractCloseRange; // 0x2070(0x04)
	float NurtureInteractRange; // 0x2074(0x04)
	float NurtureInteractRangeHighHappinessMultiplier; // 0x2078(0x04)
	struct FVector2D HappinessThresholds; // 0x207c(0x08)
	float NurtureInteractGreetTimeInterval; // 0x2084(0x04)
	bool bStationaryForNurtureInteract; // 0x2088(0x01)
	char pad_2089[0x3]; // 0x2089(0x03)
	float CombatMaxDistanceFromTether; // 0x208c(0x04)
	struct TSoftObjectPtr<UInteractionArchitectAsset> AdditionalReactionAbilies_Aggressive; // 0x2090(0x28)
	char pad_20B8[0x8]; // 0x20b8(0x08)
	struct UCreatureSpawnSlotComponent* CurrentCreatureSlot; // 0x20c0(0x08)
	char pad_20C8[0x8]; // 0x20c8(0x08)
	struct FCreatureLookAtBehavior LookAtBehavior; // 0x20d0(0x90)
	char pad_2160[0x18]; // 0x2160(0x18)
	struct UBlackboardComponent* BlackboardComponent; // 0x2178(0x08)
	char pad_2180[0x50]; // 0x2180(0x50)
	struct ACreature_Character* CreatureCharacter; // 0x21d0(0x08)
	struct ACreature_Controller* CreatureController; // 0x21d8(0x08)
	struct UCreature_NurtureComponent* NurtureComponent; // 0x21e0(0x08)
	struct UAblAbility* CustomAbilityClass; // 0x21e8(0x08)
	char pad_21F0[0xc0]; // 0x21f0(0xc0)

	void TryEnterScheduledEntityMode(); // Function Phoenix.Creature_AIComponent.TryEnterScheduledEntityMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3254070
	void TeamChanged(); // Function Phoenix.Creature_AIComponent.TeamChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x3254010
	void StartFollowPathBehavior(struct APathNode* InPathNode); // Function Phoenix.Creature_AIComponent.StartFollowPathBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x3253f80
	void SetToWalkMovementSpeed(); // Function Phoenix.Creature_AIComponent.SetToWalkMovementSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3253b80
	void SetToSprintMovementSpeed(); // Function Phoenix.Creature_AIComponent.SetToSprintMovementSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3253b60
	void SetToMovementSpeedFloat(float InSpeed); // Function Phoenix.Creature_AIComponent.SetToMovementSpeedFloat // (Final|Native|Public|BlueprintCallable) // @ game+0x3253ae0
	void SetToMovementSpeed(enum class ECreatureMovementSpeed MovementSpeed); // Function Phoenix.Creature_AIComponent.SetToMovementSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3253a60
	void SetToJogMovementSpeed(); // Function Phoenix.Creature_AIComponent.SetToJogMovementSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3253a40
	void SetTetherVolume(struct ACreatureTetherVolume* InTetherVolume); // Function Phoenix.Creature_AIComponent.SetTetherVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x32539b0
	void SetStoppingMode(enum class ECreatureStoppingMode StoppingMode); // Function Phoenix.Creature_AIComponent.SetStoppingMode // (Final|Native|Public|BlueprintCallable) // @ game+0x3253930
	void SetPathEndMode(enum class ECreaturePathEndMode PathEndMode); // Function Phoenix.Creature_AIComponent.SetPathEndMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32538b0
	void SetInteractionTime(struct AActor* InTargetActor); // Function Phoenix.Creature_AIComponent.SetInteractionTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3253820
	void SetIdleOverrideState(enum class ECreatureIdleOverrideState InNewState); // Function Phoenix.Creature_AIComponent.SetIdleOverrideState // (Final|Native|Public|BlueprintCallable) // @ game+0x32537a0
	void SetFocusActorBlackboardState(struct AActor* FocusActor); // Function Phoenix.Creature_AIComponent.SetFocusActorBlackboardState // (Final|Native|Public|BlueprintCallable) // @ game+0x3253710
	void SetDesiredCreatureStance(enum class ECreatureStance InNewStance); // Function Phoenix.Creature_AIComponent.SetDesiredCreatureStance // (Final|Native|Public|BlueprintCallable) // @ game+0x3253690
	void SetAIState(enum class ECreatureAIState InNewState); // Function Phoenix.Creature_AIComponent.SetAIState // (Final|Native|Public|BlueprintCallable) // @ game+0x32534f0
	void RemovePerceptionVolume(struct ACreaturePerceptionVolume* InPerceptionVolume); // Function Phoenix.Creature_AIComponent.RemovePerceptionVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3253460
	void RandomizeApproachRadius(); // Function Phoenix.Creature_AIComponent.RandomizeApproachRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x32530c0
	void OnPerceptionUpdated(struct TArray<struct AActor*>& UpdatedActors); // Function Phoenix.Creature_AIComponent.OnPerceptionUpdated // (Final|Native|Private|HasOutParms) // @ game+0x3252f40
	void OnObjectStateChange(struct UObject* InCaller, char InInteractiveAction); // Function Phoenix.Creature_AIComponent.OnObjectStateChange // (Final|Native|Public) // @ game+0x3252e70
	void OnMunitionImpactDamage(struct UObject* InCaller, struct FMunitionImpactData& InImpactData); // Function Phoenix.Creature_AIComponent.OnMunitionImpactDamage // (Final|Native|Public|HasOutParms) // @ game+0x3252ce0
	void OnCreatureDied(); // Function Phoenix.Creature_AIComponent.OnCreatureDied // (Final|Native|Public|BlueprintCallable) // @ game+0x3252cc0
	void OnAIStateComplete(); // Function Phoenix.Creature_AIComponent.OnAIStateComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x3252ca0
	struct ACreatureTetherVolume* GetTetherVolume(); // Function Phoenix.Creature_AIComponent.GetTetherVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3252bd0
	struct UAIPerceptionComponent* GetPerceptionComponent(); // Function Phoenix.Creature_AIComponent.GetPerceptionComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252ba0
	enum class ECreaturePathEndMode GetPathEndMode(); // Function Phoenix.Creature_AIComponent.GetPathEndMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252b70
	enum class ECreatureIdleOverrideState GetIdleOverrideState(); // Function Phoenix.Creature_AIComponent.GetIdleOverrideState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252b30
	struct UAblAbility* GetCustomAbilityClass(); // Function Phoenix.Creature_AIComponent.GetCustomAbilityClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252af0
	float GetCurrentApproachRadius(); // Function Phoenix.Creature_AIComponent.GetCurrentApproachRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x3252a90
	struct UBlackboardComponent* GetBlackboard(); // Function Phoenix.Creature_AIComponent.GetBlackboard // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252770
	enum class ECreatureMovementSpeed GetBestSpeedToReachLocation(struct FVector InLocation, float InTimeToReach); // Function Phoenix.Creature_AIComponent.GetBestSpeedToReachLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252680
	enum class ECreatureAIState GetAIState(); // Function Phoenix.Creature_AIComponent.GetAIState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252660
	void FindPettingBrushInitialAttachment(struct FGameplayTagContainer& InAnimationVariationTagContainer, struct FVector& OutRelativeLocation, struct FRotator& OutRotation, struct FVector& OutScale); // Function Phoenix.Creature_AIComponent.FindPettingBrushInitialAttachment // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|Const) // @ game+0x3252470
	struct FTransform FindPettingBrushAttachmentRelativeTransform(); // Function Phoenix.Creature_AIComponent.FindPettingBrushAttachmentRelativeTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x3252410
	bool ExecuteAbilityFromAsset(struct UInteractionArchitectAsset* InArchitectAsset); // Function Phoenix.Creature_AIComponent.ExecuteAbilityFromAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x3252370
	void EnableCreaturePerception(); // Function Phoenix.Creature_AIComponent.EnableCreaturePerception // (Final|Native|Public|BlueprintCallable) // @ game+0x3252330
	void DisableCreaturePerception(bool bForgetPreviousStimuli, bool bLoseAwareness); // Function Phoenix.Creature_AIComponent.DisableCreaturePerception // (Final|Native|Public|BlueprintCallable) // @ game+0x3252240
	void AddPerceptionVolume(struct ACreaturePerceptionVolume* InPerceptionVolume); // Function Phoenix.Creature_AIComponent.AddPerceptionVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3251b10
};

// Class Phoenix.NPC_Character
// Size: 0x2180 (Inherited: 0x1660)
struct ANPC_Character : ABase_Character {
	char pad_1660[0x8]; // 0x1660(0x08)
	enum class ENPC_Type NPCType; // 0x1668(0x01)
	char pad_1669[0x3]; // 0x1669(0x03)
	struct FGameplayTag GroupTag; // 0x166c(0x08)
	char pad_1674[0x4]; // 0x1674(0x04)
	struct UBehaviorTree* BehaviorTreePtr; // 0x1678(0x08)
	struct UDataTable* BehaviorTreeDataTable; // 0x1680(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x1688(0x08)
	struct UBlackboardData* EmptyBlackboardAsset; // 0x1690(0x08)
	struct UNPC_BTComponent* BTComponent; // 0x1698(0x08)
	struct UCognitionComponent* CognitionComponent; // 0x16a0(0x08)
	struct USocialAgentPathFollowerComponent* SocialAgentComponent; // 0x16a8(0x08)
	struct UNPC_Component* NPCComponent; // 0x16b0(0x08)
	struct UCustomizableCharacterComponent* CCComponent; // 0x16b8(0x08)
	struct UCognitionStimuliSourceComponent* CogSourceComp; // 0x16c0(0x08)
	struct UNPC_ReactionComponent* NPCReactionComponent; // 0x16c8(0x08)
	struct UCombativePlantComponent* CombativePlantComponent; // 0x16d0(0x08)
	int32_t QBUpdatesSupported; // 0x16d8(0x04)
	int32_t PerceptionUpdatesSupported; // 0x16dc(0x04)
	struct UNPC_QBUpdateDataAsset* QBUpdateDataAsset; // 0x16e0(0x08)
	struct UNPC_PerceptionUpdateDataAsset* PerceptionUpdateDataAsset; // 0x16e8(0x08)
	struct FEnemy_CharacterParams Params; // 0x16f0(0x490)
	struct UEnemy_TargetSenseAsset* TargetSenseAsset; // 0x1b80(0x08)
	bool bEnableBeacon; // 0x1b88(0x01)
	char pad_1B89[0x7]; // 0x1b89(0x07)
	struct FString BeaconIconName; // 0x1b90(0x10)
	bool bAllowDBInstanceRedirect; // 0x1ba0(0x01)
	bool bCreateScheduledEntity; // 0x1ba1(0x01)
	bool bIsAScheduledEntity; // 0x1ba2(0x01)
	bool bShowVulnerabilityIndicators; // 0x1ba3(0x01)
	char pad_1BA4[0x4]; // 0x1ba4(0x04)
	struct FString OverrideScheduleTableName; // 0x1ba8(0x10)
	struct FString DefaultScheduleName; // 0x1bb8(0x10)
	struct FString DefaultWorldID; // 0x1bc8(0x10)
	uint32_t PatrolPriority; // 0x1bd8(0x04)
	bool bAddSocialScoreToPatrol; // 0x1bdc(0x01)
	bool bUseNPCController; // 0x1bdd(0x01)
	bool bCommitsACrimeWhenKilling; // 0x1bde(0x01)
	bool bCanBePickpocketed; // 0x1bdf(0x01)
	struct FNPC_ShowUI ShowUI; // 0x1be0(0x0c)
	float DamageDisplayHeight; // 0x1bec(0x04)
	int32_t DamageDisplayExtraOffset; // 0x1bf0(0x04)
	enum class ENPC_PathSpec DefaultPathSpec; // 0x1bf4(0x01)
	char pad_1BF5[0x3]; // 0x1bf5(0x03)
	struct TArray<struct FNPC_PathSpec> PathSpecList; // 0x1bf8(0x10)
	struct FNPC_LOSTraceParams TargetLOSParams; // 0x1c08(0x24)
	struct FNPC_LOSTraceParams CrimeSceneLOSParams; // 0x1c2c(0x24)
	struct FNPC_LOSTraceParams AttackLOSParams; // 0x1c50(0x24)
	struct FNPC_LOSTraceParams WaypointLOSParams; // 0x1c74(0x24)
	struct FNPC_LOSTraceParams DebugLOSParams; // 0x1c98(0x24)
	float LOSRadius; // 0x1cbc(0x04)
	char pad_1CC0[0x28]; // 0x1cc0(0x28)
	float DeathEffectDelayTime; // 0x1ce8(0x04)
	bool bDestroyOnDeath; // 0x1cec(0x01)
	bool bDissolveOnDeath; // 0x1ced(0x01)
	char pad_1CEE[0x2]; // 0x1cee(0x02)
	float InstantDissolveChance; // 0x1cf0(0x04)
	float DissolveDelayMin; // 0x1cf4(0x04)
	float DissolveDelayMax; // 0x1cf8(0x04)
	float DissolveDestroyDelay; // 0x1cfc(0x04)
	bool bFadeOnDeath; // 0x1d00(0x01)
	bool bDoNewDeathFade; // 0x1d01(0x01)
	char pad_1D02[0x2]; // 0x1d02(0x02)
	float FadeDelay; // 0x1d04(0x04)
	float FadeDuration; // 0x1d08(0x04)
	bool bDoDeathCamOnDeath; // 0x1d0c(0x01)
	char pad_1D0D[0x3]; // 0x1d0d(0x03)
	struct FViewTargetTransitionParams TransitionParams; // 0x1d10(0x10)
	float DeathCamDelay; // 0x1d20(0x04)
	float DeathCamDuration; // 0x1d24(0x04)
	bool bDoBulletTimeOnDeath; // 0x1d28(0x01)
	char pad_1D29[0x3]; // 0x1d29(0x03)
	float BulletTimeDilation; // 0x1d2c(0x04)
	float BulletTimeDelay; // 0x1d30(0x04)
	float BulletTimeDuration; // 0x1d34(0x04)
	bool bHaltDeathCamOnBulletTimeStart; // 0x1d38(0x01)
	char pad_1D39[0x3]; // 0x1d39(0x03)
	int32_t StealAmmount; // 0x1d3c(0x04)
	int32_t InventoryKnuts; // 0x1d40(0x04)
	float FromNPCDamageMult; // 0x1d44(0x04)
	float FromPlayerDamageMult; // 0x1d48(0x04)
	float ToPlayerDamageMult; // 0x1d4c(0x04)
	bool bAllowReleaseOnce; // 0x1d50(0x01)
	char pad_1D51[0x3]; // 0x1d51(0x03)
	struct FNPC_TargetPerceptionParams TargetPerceptionParams; // 0x1d54(0x3c)
	struct FMulticastInlineDelegate TargetPerceptionDoneEvent; // 0x1d90(0x10)
	bool bOverrideCharacterLook; // 0x1da0(0x01)
	char pad_1DA1[0x3]; // 0x1da1(0x03)
	struct FName OverrideCharacterID; // 0x1da4(0x08)
	bool bOverrideVoice; // 0x1dac(0x01)
	char pad_1DAD[0x3]; // 0x1dad(0x03)
	struct FName OverrideVoiceID; // 0x1db0(0x08)
	struct FMulticastInlineDelegate PerceivePlayerDelegate; // 0x1db8(0x10)
	struct FMulticastInlineDelegate CombatPerceivePlayerDelegate; // 0x1dc8(0x10)
	struct FMulticastInlineDelegate LostPerceivePlayerDelegate; // 0x1dd8(0x10)
	struct FMulticastInlineDelegate LostPerceptionPlayerDelegate; // 0x1de8(0x10)
	struct FMulticastInlineDelegate CombatLostPerceivePlayerDelegate; // 0x1df8(0x10)
	struct FMulticastInlineDelegate CombatLostPerceptionPlayerDelegate; // 0x1e08(0x10)
	struct FMulticastInlineDelegate PerceivedByPlayerDelegate; // 0x1e18(0x10)
	struct FMulticastInlineDelegate WasPerceivedByPlayerDelegate; // 0x1e28(0x10)
	struct FMulticastInlineDelegate CustomAbilityFinishedDelegate; // 0x1e38(0x10)
	struct FMulticastInlineDelegate AbilityFinishedDelegate; // 0x1e48(0x10)
	struct FMulticastInlineDelegate NPCDiedDelegate; // 0x1e58(0x10)
	struct FMulticastInlineDelegate NPCTransformedDelegate; // 0x1e68(0x10)
	struct FMulticastInlineDelegate NPCAvadaKedavraDelegate; // 0x1e78(0x10)
	char pad_1E88[0x88]; // 0x1e88(0x88)
	struct ANPC_Controller* NPCControllerPtr; // 0x1f10(0x08)
	char pad_1F18[0x200]; // 0x1f18(0x200)
	struct UPerceptionIconData* MinimapPerceptionData; // 0x2118(0x08)
	char pad_2120[0x10]; // 0x2120(0x10)
	struct UInteractionArchitectAsset* DefaultMunition; // 0x2130(0x08)
	struct FVariantMapHandle NPCVariantMapHandle; // 0x2138(0x04)
	char pad_213C[0x1a]; // 0x213c(0x1a)
	enum class ECreatureStance DesiredCreatureStance; // 0x2156(0x01)
	enum class ECreatureStance CurrentCreatureStance; // 0x2157(0x01)
	enum class ECreatureStance NextCreatureStance; // 0x2158(0x01)
	enum class ECreatureMovementSpeed CurrentCreatureGait; // 0x2159(0x01)
	enum class ECreatureMovementSpeed NextCreatureGait; // 0x215a(0x01)
	bool bInCreatureIdleVariation; // 0x215b(0x01)
	char pad_215C[0x4]; // 0x215c(0x04)
	struct UCreature_MotionTable* MotionTable; // 0x2160(0x08)
	float MoveToStopDistanceTune; // 0x2168(0x04)
	bool bDisableCreatureTurnNavChecks; // 0x216c(0x01)
	char pad_216D[0x13]; // 0x216d(0x13)

	bool WillAttackPlayer(); // Function Phoenix.NPC_Character.WillAttackPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33904e0
	void Unfreeze(); // Function Phoenix.NPC_Character.Unfreeze // (Final|Native|Public|BlueprintCallable) // @ game+0x33904c0
	void TargetSighted(struct UAISense* Sense, struct AActor* Target); // Function Phoenix.NPC_Character.TargetSighted // (Final|Native|Public|BlueprintCallable) // @ game+0x33903f0
	void TargetLost(struct UAISense* Sense, struct AActor* OldTarget); // Function Phoenix.NPC_Character.TargetLost // (Final|Native|Public|BlueprintCallable) // @ game+0x3390320
	void TargetChanged(struct UAISense* Sense, struct AActor* NewTarget, struct AActor* OldTarget); // Function Phoenix.NPC_Character.TargetChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x3390210
	void StopDeathCam(); // Function Phoenix.NPC_Character.StopDeathCam // (Final|Native|Public) // @ game+0x33901f0
	void StopBulletTime(); // Function Phoenix.NPC_Character.StopBulletTime // (Final|Native|Public) // @ game+0x33901d0
	void StartSuspendEnemies(bool bSuspended, enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.NPC_Character.StartSuspendEnemies // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33900c0
	void StartSettingSuspendAiState(bool bSuspended, enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.NPC_Character.StartSettingSuspendAiState // (Final|Native|Public|BlueprintCallable) // @ game+0x338ffb0
	void StartFadeOut(); // Function Phoenix.NPC_Character.StartFadeOut // (Final|Native|Public) // @ game+0x338ff90
	void StartFadeIn(); // Function Phoenix.NPC_Character.StartFadeIn // (Final|Native|Public) // @ game+0x338ff70
	void StartDissolve(); // Function Phoenix.NPC_Character.StartDissolve // (Final|Native|Public) // @ game+0x338ff50
	void StartDeathCam(); // Function Phoenix.NPC_Character.StartDeathCam // (Final|Native|Public) // @ game+0x338ff30
	void StartCustomAbility(struct UAblAbility* InAbility, bool bUseCustomPause, bool bClearPauseWhenFinished, bool bPreventReactions, bool bShouldReenableReactions); // Function Phoenix.NPC_Character.StartCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x338fd70
	void StartChildSpawnFX(struct FTransform inSpawnLoc); // Function Phoenix.NPC_Character.StartChildSpawnFX // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x338fc80
	void StartBulletTime(); // Function Phoenix.NPC_Character.StartBulletTime // (Final|Native|Public) // @ game+0x338fc60
	bool ShouldShowName(); // Function Phoenix.NPC_Character.ShouldShowName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338db20
	bool ShouldShowHealthBar(); // Function Phoenix.NPC_Character.ShouldShowHealthBar // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338db00
	bool ShouldShowBadge(); // Function Phoenix.NPC_Character.ShouldShowBadge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338daa0
	void SetupBehaviorTreeForced(); // Function Phoenix.NPC_Character.SetupBehaviorTreeForced // (Final|Native|Public|BlueprintCallable) // @ game+0x338fc40
	void SetUnawareState(enum class EEnemy_CharacterState InState); // Function Phoenix.NPC_Character.SetUnawareState // (Final|Native|Public|BlueprintCallable) // @ game+0x334c710
	void SetTargetAimSense(); // Function Phoenix.NPC_Character.SetTargetAimSense // (Native|Public|BlueprintCallable) // @ game+0x338fc20
	void SetStayInVolumeParams(float inStayInRadius, float inStayInVolumeTeleportTimeout, bool inStayInVolumeOffNavTeleport); // Function Phoenix.NPC_Character.SetStayInVolumeParams // (Final|Native|Public|BlueprintCallable) // @ game+0x338fb00
	void SetShowPerceptionIndicator(bool bInShow); // Function Phoenix.NPC_Character.SetShowPerceptionIndicator // (Final|Native|Public|BlueprintCallable) // @ game+0x338f9d0
	void SetShowName(bool bInShow); // Function Phoenix.NPC_Character.SetShowName // (Final|Native|Public|BlueprintCallable) // @ game+0x338f940
	void SetShowHealthBar(bool bInShow); // Function Phoenix.NPC_Character.SetShowHealthBar // (Final|Native|Public|BlueprintCallable) // @ game+0x338f8b0
	void SetShowDamage(bool bInShow); // Function Phoenix.NPC_Character.SetShowDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x338f820
	void SetShowCallout(bool bInShow); // Function Phoenix.NPC_Character.SetShowCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x338f790
	void SetShowBadge(bool bInShow); // Function Phoenix.NPC_Character.SetShowBadge // (Final|Native|Public|BlueprintCallable) // @ game+0x338f700
	void SetNewDefaultPerformTask(struct APerformTasksForAI* NewDefaultTrigger, bool bForceStart, bool bLoopWhenFinished); // Function Phoenix.NPC_Character.SetNewDefaultPerformTask // (Final|Native|Public|BlueprintCallable) // @ game+0x338f5f0
	void SetForcedPlayerPerception(bool InCanPerceive, bool bKeepAlwaysOn); // Function Phoenix.NPC_Character.SetForcedPlayerPerception // (Final|Native|Public|BlueprintCallable) // @ game+0x338f470
	void SetDamageToPlayerMult(float InScale); // Function Phoenix.NPC_Character.SetDamageToPlayerMult // (Final|Native|Public|BlueprintCallable) // @ game+0x338f3f0
	void SetDamageFromPlayerMult(float InScale); // Function Phoenix.NPC_Character.SetDamageFromPlayerMult // (Final|Native|Public|BlueprintCallable) // @ game+0x338f370
	void SetDamageFromNPCMult(float InScale); // Function Phoenix.NPC_Character.SetDamageFromNPCMult // (Final|Native|Public|BlueprintCallable) // @ game+0x338f2f0
	void SetCanPerceivePlayer(bool bShouldExclude); // Function Phoenix.NPC_Character.SetCanPerceivePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x338f260
	void SetAlwaysPerceiveAsTarget(bool InFlag); // Function Phoenix.NPC_Character.SetAlwaysPerceiveAsTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x338f150
	void SetAllowTargetAimSense(bool InAllow); // Function Phoenix.NPC_Character.SetAllowTargetAimSense // (Final|Native|Public|BlueprintCallable) // @ game+0x338f0c0
	void RestoreStayInVolumeParamDefaults(); // Function Phoenix.NPC_Character.RestoreStayInVolumeParamDefaults // (Final|Native|Public|BlueprintCallable) // @ game+0x338efc0
	void RemoveStayInVolume(struct APerceptionPointArea* InArea); // Function Phoenix.NPC_Character.RemoveStayInVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x338ef30
	void RemoveQBUpdateSupported(enum class ENPC_QBUpdate InQBUpdate); // Function Phoenix.NPC_Character.RemoveQBUpdateSupported // (Final|Native|Public|BlueprintCallable) // @ game+0x338eeb0
	void RemoveAllStayInVolumes(); // Function Phoenix.NPC_Character.RemoveAllStayInVolumes // (Final|Native|Public|BlueprintCallable) // @ game+0x338ee90
	void ReleaseIntroductionCharacter(struct AActor* InActor); // Function Phoenix.NPC_Character.ReleaseIntroductionCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x338ee00
	void Release(struct UObject* i_caller); // Function Phoenix.NPC_Character.Release // (Final|Native|Public|BlueprintCallable) // @ game+0x338ed70
	void RagdollImpact(); // Function Phoenix.NPC_Character.RagdollImpact // (Final|Native|Public) // @ game+0x338ed50
	void ProtectIntroductionCharacter(struct AActor* InActor); // Function Phoenix.NPC_Character.ProtectIntroductionCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x338ecc0
	void OnStationOnFinishedExit(); // Function Phoenix.NPC_Character.OnStationOnFinishedExit // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStationOnFinishedEnter(); // Function Phoenix.NPC_Character.OnStationOnFinishedEnter // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPTTaskComplete(int32_t InTaskIndex); // Function Phoenix.NPC_Character.OnPTTaskComplete // (Final|Native|Public) // @ game+0x338eb00
	void OnPTComplete(struct APerformTasksForAI* InPTPtr); // Function Phoenix.NPC_Character.OnPTComplete // (Final|Native|Public) // @ game+0x338ea70
	void OnChildSpawnFX(struct FTransform inSpawnLoc); // Function Phoenix.NPC_Character.OnChildSpawnFX // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x338e980
	void OnCharacterDBLoadCompleted(struct AActor* LoadActor, enum class EActor_LoadDBProcessingType LoadType); // Function Phoenix.NPC_Character.OnCharacterDBLoadCompleted // (Final|Native|Public) // @ game+0x338e8b0
	bool NPCWillAttackPlayer(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCWillAttackPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e820
	struct FNPC_TargetPerceptionParams NPCGetTargetPerceptionParams(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCGetTargetPerceptionParams // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e770
	struct ANPC_Character* NPCEnableTimedAttackPerception(struct AActor* InActorPtr, struct FName InTeamName, float InTime, struct AActor* InTarget); // Function Phoenix.NPC_Character.NPCEnableTimedAttackPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e620
	struct ANPC_Character* NPCEnableNotifyPerception(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCEnableNotifyPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e590
	struct ANPC_Character* NPCEnableCrimeScenePerception(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCEnableCrimeScenePerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e500
	struct ANPC_Character* NPCEnableAttackPerception(struct AActor* InActorPtr, struct FName InTeamName); // Function Phoenix.NPC_Character.NPCEnableAttackPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e430
	void NPCDisableNotifyPerception(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCDisableNotifyPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e3b0
	void NPCDisableCrimeScenePerception(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCDisableCrimeScenePerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e330
	void NPCDisableAttackPerception(struct AActor* InActorPtr); // Function Phoenix.NPC_Character.NPCDisableAttackPerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e2b0
	void NewDeathFade(); // Function Phoenix.NPC_Character.NewDeathFade // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void MunitionToInstigator(struct UObject* i_caller, struct FMunitionToInstigatorData& InMunInstData); // Function Phoenix.NPC_Character.MunitionToInstigator // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x338e1d0
	void Kill(); // Function Phoenix.NPC_Character.Kill // (Final|Native|Public|BlueprintCallable) // @ game+0x338e1b0
	bool IsScheduledEntity(); // Function Phoenix.NPC_Character.IsScheduledEntity // (Final|Native|Public|BlueprintCallable) // @ game+0x338e180
	bool IsRootComponent(struct UActorComponent* InComponent); // Function Phoenix.NPC_Character.IsRootComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338e0f0
	bool IsReleased(); // Function Phoenix.NPC_Character.IsReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338e0d0
	bool IsQBUpdateSupported(enum class ENPC_QBUpdate InQBUpdate); // Function Phoenix.NPC_Character.IsQBUpdateSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338e040
	bool IsPerceptionUpdateSupported(enum class ENPC_PerceptionUpdate InPerceptionUpdate); // Function Phoenix.NPC_Character.IsPerceptionUpdateSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dfb0
	bool IsInCreatureAnimationTransition(); // Function Phoenix.NPC_Character.IsInCreatureAnimationTransition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338df70
	bool IsInCreatureAnimationStanceTransition(); // Function Phoenix.NPC_Character.IsInCreatureAnimationStanceTransition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338df40
	bool IsInCreatureAnimationGaitTransition(); // Function Phoenix.NPC_Character.IsInCreatureAnimationGaitTransition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338df10
	bool IsFrozen(); // Function Phoenix.NPC_Character.IsFrozen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dee0
	bool IsAlive(); // Function Phoenix.NPC_Character.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dec0
	bool IsAiSuspended(); // Function Phoenix.NPC_Character.IsAiSuspended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x19e8aa0
	bool HasTaskTag(struct FGameplayTag InTaskTag); // Function Phoenix.NPC_Character.HasTaskTag // (Final|Native|Public|BlueprintCallable) // @ game+0x338ddb0
	void HandleRagdollImpact(struct UObject* i_caller); // Function Phoenix.NPC_Character.HandleRagdollImpact // (Final|Native|Public|BlueprintCallable) // @ game+0x338dd20
	struct FNPC_TargetPerceptionParams GetTargetPerceptionParams(); // Function Phoenix.NPC_Character.GetTargetPerceptionParams // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dc30
	bool GetShowUIPerceptinCone(); // Function Phoenix.NPC_Character.GetShowUIPerceptinCone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dbd0
	struct FNPC_ShowUI GetShowUI(); // Function Phoenix.NPC_Character.GetShowUI // (Final|Native|Public|BlueprintCallable) // @ game+0x338db60
	bool GetShowPerceptionIndicator(); // Function Phoenix.NPC_Character.GetShowPerceptionIndicator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338db40
	bool GetShowName(); // Function Phoenix.NPC_Character.GetShowName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338db20
	bool GetShowHealthBar(); // Function Phoenix.NPC_Character.GetShowHealthBar // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338db00
	bool GetShowDamage(); // Function Phoenix.NPC_Character.GetShowDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dae0
	bool GetShowCallout(); // Function Phoenix.NPC_Character.GetShowCallout // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338dac0
	bool GetShowBadge(); // Function Phoenix.NPC_Character.GetShowBadge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338daa0
	enum class ENPC_Type GetNPCType(); // Function Phoenix.NPC_Character.GetNPCType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338da80
	struct FOdcPathSpec GetNPCPathSpec(enum class ENPC_PathSpec InPathSpec); // Function Phoenix.NPC_Character.GetNPCPathSpec // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d9e0
	struct UCapsuleComponent* GetNpcCapsuleComponent(); // Function Phoenix.NPC_Character.GetNpcCapsuleComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206ff0
	struct FVector GetImpactLocation(); // Function Phoenix.NPC_Character.GetImpactLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d970
	struct FVector GetImpactDirection(); // Function Phoenix.NPC_Character.GetImpactDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d930
	struct FEnemy_CharacterParams GetCharacterParams(); // Function Phoenix.NPC_Character.GetCharacterParams // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d900
	bool GetAlwaysPerceiveAsTarget(); // Function Phoenix.NPC_Character.GetAlwaysPerceiveAsTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d8b0
	void Freeze(); // Function Phoenix.NPC_Character.Freeze // (Final|Native|Public|BlueprintCallable) // @ game+0x338d7d0
	void ForceScheduledEntityState(); // Function Phoenix.NPC_Character.ForceScheduledEntityState // (Final|Native|Public|BlueprintCallable) // @ game+0x338d7b0
	void ForceProtego(bool inProtegoOnOff); // Function Phoenix.NPC_Character.ForceProtego // (Final|Native|Public|BlueprintCallable) // @ game+0x338d720
	void FinishSuspendEnemies(enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.NPC_Character.FinishSuspendEnemies // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x338d660
	void FinishSettingSuspendAiState(enum class EStandardManagedPriority Priority, struct UObject* Provider); // Function Phoenix.NPC_Character.FinishSettingSuspendAiState // (Final|Native|Public|BlueprintCallable) // @ game+0x338d590
	void EndCustomAbility(); // Function Phoenix.NPC_Character.EndCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x338d570
	void EnablePerception(struct UObject* i_caller); // Function Phoenix.NPC_Character.EnablePerception // (Final|Native|Public|BlueprintCallable) // @ game+0x338d4e0
	void EnableMinimapPerceptionCone(struct ANPC_Character* NPCCharacter); // Function Phoenix.NPC_Character.EnableMinimapPerceptionCone // (Final|Native|Protected|BlueprintCallable) // @ game+0x1480ed0
	void EnableCallout(struct UObject* i_caller); // Function Phoenix.NPC_Character.EnableCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x3388460
	void EnableBeacon(struct UObject* i_caller); // Function Phoenix.NPC_Character.EnableBeacon // (Final|Native|Public|BlueprintCallable) // @ game+0x338d450
	void DisablePerception(struct UObject* i_caller); // Function Phoenix.NPC_Character.DisablePerception // (Final|Native|Public|BlueprintCallable) // @ game+0x338d3c0
	void DisableMinimapPerceptionCone(struct ANPC_Character* NPCCharacter); // Function Phoenix.NPC_Character.DisableMinimapPerceptionCone // (Final|Native|Protected|BlueprintCallable) // @ game+0x1480ed0
	void DisableCallout(struct UObject* i_caller); // Function Phoenix.NPC_Character.DisableCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x33883d0
	void DisableBeacon(struct UObject* i_caller); // Function Phoenix.NPC_Character.DisableBeacon // (Final|Native|Public|BlueprintCallable) // @ game+0x338d330
	void DestroyOnDeath(); // Function Phoenix.NPC_Character.DestroyOnDeath // (Final|Native|Public) // @ game+0x338d310
	void DeathFxComplete(); // Function Phoenix.NPC_Character.DeathFxComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x338d2f0
	void DeathExplode(); // Function Phoenix.NPC_Character.DeathExplode // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void DeathDissolve(); // Function Phoenix.NPC_Character.DeathDissolve // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ClearForceScheduledEntityState(); // Function Phoenix.NPC_Character.ClearForceScheduledEntityState // (Final|Native|Public|BlueprintCallable) // @ game+0x338d2d0
	void CharacterDiedEvent(); // Function Phoenix.NPC_Character.CharacterDiedEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x338d2b0
	bool CanBePickpocketed(); // Function Phoenix.NPC_Character.CanBePickpocketed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x338d290
	void BroadcastNPC_AnimEvent(struct FName InName); // Function Phoenix.NPC_Character.BroadcastNPC_AnimEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x338d200
	void AssignNPCLevelWRTPlayerLevel(int32_t ExpLevel, bool bIndicateHUD); // Function Phoenix.NPC_Character.AssignNPCLevelWRTPlayerLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x338d130
	void ApplyTargetSenseAsset(struct UEnemy_TargetSenseAsset* InTargetSenseAsset); // Function Phoenix.NPC_Character.ApplyTargetSenseAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x338d0a0
	void ApplySpawnFX(); // Function Phoenix.NPC_Character.ApplySpawnFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x338d080
	void ApplyReplicaFX(); // Function Phoenix.NPC_Character.ApplyReplicaFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33883b0
	void ApplyNPCPathSpecDirect(struct FOdcPathSpec InPathSpec); // Function Phoenix.NPC_Character.ApplyNPCPathSpecDirect // (Final|Native|Public|BlueprintCallable) // @ game+0x338cf40
	void ApplyNPCPathSpec(enum class ENPC_PathSpec InPathSpec); // Function Phoenix.NPC_Character.ApplyNPCPathSpec // (Final|Native|Public|BlueprintCallable) // @ game+0x338cec0
	void ApplyCharacterFX(); // Function Phoenix.NPC_Character.ApplyCharacterFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x338cea0
	void AddStayInVolume(struct APerceptionPointArea* InArea); // Function Phoenix.NPC_Character.AddStayInVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x338ce10
	void AddQBUpdateSupported(enum class ENPC_QBUpdate InQBUpdate); // Function Phoenix.NPC_Character.AddQBUpdateSupported // (Final|Native|Public|BlueprintCallable) // @ game+0x338cd90
	void AddPerceptionUpdateSupported(enum class ENPC_PerceptionUpdate InPerceptionUpdate); // Function Phoenix.NPC_Character.AddPerceptionUpdateSupported // (Final|Native|Public|BlueprintCallable) // @ game+0x338cd10
};

// Class Phoenix.Creature_Character
// Size: 0x2490 (Inherited: 0x2180)
struct ACreature_Character : ANPC_Character {
	char pad_2180[0x10]; // 0x2180(0x10)
	struct UAnimationComponent* AnimationComponent; // 0x2190(0x08)
	struct UEnemyStateComponent* EnemyStateComponent; // 0x2198(0x08)
	struct UCreature_FlightMotionTable* FlightMotionTable; // 0x21a0(0x08)
	struct FOdcFlags PreferredAreaUsageFlags; // 0x21a8(0x04)
	struct FOdcFlags FleeAreaUsageFlags; // 0x21ac(0x04)
	struct FGameplayTagContainer IgnoredSpellImpactTypes; // 0x21b0(0x20)
	bool bRecordLastReceivedAnimNotify; // 0x21d0(0x01)
	char pad_21D1[0x7]; // 0x21d1(0x07)
	struct TSoftClassPtr<UObject> FollowScreenWidgetClass; // 0x21d8(0x28)
	enum class ECreatureAIInitialState StartState; // 0x2200(0x01)
	bool bStartTame; // 0x2201(0x01)
	char pad_2202[0x6]; // 0x2202(0x06)
	struct APathNode* StartPathNode; // 0x2208(0x08)
	struct AActor* Cage; // 0x2210(0x08)
	enum class ECreatureCageAnimation CageAnimation; // 0x2218(0x01)
	char pad_2219[0x7]; // 0x2219(0x07)
	struct UParticleSystem* SpawnVFX; // 0x2220(0x08)
	bool bSpawnFlying; // 0x2228(0x01)
	bool bSpawnPerched; // 0x2229(0x01)
	char pad_222A[0xe]; // 0x222a(0x0e)
	struct TArray<struct FName> AllowedColorVariationsOverride; // 0x2238(0x10)
	bool bOverrideGender; // 0x2248(0x01)
	bool bIsMaleOverride; // 0x2249(0x01)
	char pad_224A[0x2]; // 0x224a(0x02)
	float RootMotionTranslationScale; // 0x224c(0x04)
	enum class ECreatureFlightState DesiredFlightState; // 0x2250(0x01)
	enum class ECreatureLandingType DesiredLandingType; // 0x2251(0x01)
	char pad_2252[0x6]; // 0x2252(0x06)
	struct FGameplayTagContainer DesiredTakeoffAnimationTags; // 0x2258(0x20)
	enum class ECreatureStoppingMode DesiredStoppingMode; // 0x2278(0x01)
	enum class ECreatureStoppingMode ActualStoppingMode; // 0x2279(0x01)
	enum class ECreatureMovementSpeed DesiredMovementSpeed; // 0x227a(0x01)
	char pad_227B[0x5]; // 0x227b(0x05)
	struct UCreature_AIComponent* CreatureAIComponent; // 0x2280(0x08)
	struct UCreature_NurtureComponent* NurtureComponent; // 0x2288(0x08)
	struct UCreature_CombatComponentV2* CombatComponent; // 0x2290(0x08)
	struct UIcarus3DMovementComponent* FlightMovementComponent; // 0x2298(0x08)
	struct UMercunaNavigationComponent* FlightNavigationComponent; // 0x22a0(0x08)
	struct UFlightAnimationComponent* FlightAnimationComponent; // 0x22a8(0x08)
	struct UCentaurCombatComponent* CentaurCombatComponent; // 0x22b0(0x08)
	struct UCreature_MountComponent* MountComponent; // 0x22b8(0x08)
	char pad_22C0[0x8]; // 0x22c0(0x08)
	struct FGameplayTagContainer AnimationVariationTagContainer; // 0x22c8(0x20)
	struct TSet<struct FName> LastReceivedAnimNotifyEventNames; // 0x22e8(0x50)
	char pad_2338[0x78]; // 0x2338(0x78)
	struct FName CalloutAttachmentSocket; // 0x23b0(0x08)
	char pad_23B8[0x8]; // 0x23b8(0x08)
	struct FTransform CalloutLocalOffset; // 0x23c0(0x30)
	struct FVector AlertCalloutLocalOffset; // 0x23f0(0x0c)
	bool bTestForAudioOcclusion; // 0x23fc(0x01)
	char pad_23FD[0x3]; // 0x23fd(0x03)
	int32_t MaxConcurrentAkComponents; // 0x2400(0x04)
	int32_t MaxAkEventsPerFrame; // 0x2404(0x04)
	char pad_2408[0x10]; // 0x2408(0x10)
	struct UUprightAttachSceneComponent* CreatedCalloutAttachComponent; // 0x2418(0x08)
	struct UAkComponent* OcclusionAkComponent; // 0x2420(0x08)
	struct TArray<struct UAkComponent*> FootstepAkComponents; // 0x2428(0x10)
	struct UAkComponent* MotionAkComponent; // 0x2438(0x08)
	struct TArray<struct UAkComponent*> VoxFoleyAkComponents; // 0x2440(0x10)
	char pad_2450[0x40]; // 0x2450(0x40)

	bool StartFire(float Amount, struct FVector Location); // Function Phoenix.Creature_Character.StartFire // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x3257e60
	void ShowCreatureFollowScreen(); // Function Phoenix.Creature_Character.ShowCreatureFollowScreen // (Final|Native|Protected|BlueprintCallable) // @ game+0x3257e40
	void SetCanUseIdleBreaksDefaultValue(bool bValue); // Function Phoenix.Creature_Character.SetCanUseIdleBreaksDefaultValue // (Final|Native|Public|BlueprintCallable) // @ game+0x3257cb0
	bool SetAvoidanceAgainst(struct AActor* Actor, bool bEnable); // Function Phoenix.Creature_Character.SetAvoidanceAgainst // (Final|Native|Public|BlueprintCallable) // @ game+0x3257be0
	void OnFireExtinguished(); // Function Phoenix.Creature_Character.OnFireExtinguished // (Native|Event|Protected|BlueprintEvent) // @ game+0x32574b0
	void OnCompletelyCharred(); // Function Phoenix.Creature_Character.OnCompletelyCharred // (Native|Event|Protected|BlueprintEvent) // @ game+0x32573b0
	bool IsActivePlayerMount(); // Function Phoenix.Creature_Character.IsActivePlayerMount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3257390
	bool GetTrackerIsStationary(); // Function Phoenix.Creature_Character.GetTrackerIsStationary // (Final|Native|Public|BlueprintCallable) // @ game+0x3257360
	float GetTrackerAverageSpeed(); // Function Phoenix.Creature_Character.GetTrackerAverageSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x3257330
	struct UCreature_MountComponent* GetMountComponent(); // Function Phoenix.Creature_Character.GetMountComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3257240
	void ExecuteInitialIdleAbility(); // Function Phoenix.Creature_Character.ExecuteInitialIdleAbility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExecuteInitialFlyingAbility(); // Function Phoenix.Creature_Character.ExecuteInitialFlyingAbility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CreatureCombatData
// Size: 0x38 (Inherited: 0x30)
struct UCreatureCombatData : UDataAsset {
	enum class ECreatureCombatDebugDisplayType DrawDebug; // 0x30(0x01)
	enum class ECreatureCombatDebugBehaviorType ForceBehavior; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.CreatureCombatRepositionData
// Size: 0x40 (Inherited: 0x38)
struct UCreatureCombatRepositionData : UCreatureCombatData {
	struct FVector2D RepositionDistanceRange; // 0x38(0x08)
};

// Class Phoenix.CreatureCombatAttackData
// Size: 0x98 (Inherited: 0x38)
struct UCreatureCombatAttackData : UCreatureCombatData {
	struct FVector2D PatternDistanceRange; // 0x38(0x08)
	struct FVector2D PatternHeadingRange; // 0x40(0x08)
	struct FVector2D AttackDistanceRange; // 0x48(0x08)
	struct FVector2D AttackHeadingRange; // 0x50(0x08)
	struct FVector2D AttackReachDistanceRange; // 0x58(0x08)
	struct FVector2D AttackReachHeadingRange; // 0x60(0x08)
	float AttackCommitTime; // 0x68(0x04)
	float AttackPatternWeight; // 0x6c(0x04)
	bool bAttackRequiresStraightLineReachable; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float StraightLineReachableDistanceThreshold; // 0x74(0x04)
	bool bUseAttackExecutionPathSpec; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	struct FCreatureCombatAttackParryData ParryData; // 0x7c(0x1c)
};

// Class Phoenix.CreatureCombatProgressionData
// Size: 0x48 (Inherited: 0x30)
struct UCreatureCombatProgressionData : UDataAsset {
	struct TArray<struct FCreatureCombatStageSpecifier> CombatStages; // 0x30(0x10)
	bool bDebugDraw; // 0x40(0x01)
	bool bEnableDebugStageIndex; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	int32_t DebugStageIndex; // 0x44(0x04)
};

// Class Phoenix.Creature_CombatComponentV2
// Size: 0x158 (Inherited: 0xc8)
struct UCreature_CombatComponentV2 : UActorComponent {
	struct UCreatureCombatProgressionData* ProgressionData; // 0xc8(0x08)
	struct TArray<struct FCreatureCombatAttackImpactData> AttackImpactDataArray; // 0xd0(0x10)
	struct TArray<struct FCreatureCombatDataWrapper> CombatDataArray; // 0xe0(0x10)
	struct FOdcPathSpec AttackExecutionPathSpec; // 0xf0(0x50)
	bool bStayInCombatDuringCinematic; // 0x140(0x01)
	char pad_141[0x17]; // 0x141(0x17)

	void OnCreatureAIStateChanged(struct UCreature_AIComponent* AIComponent, enum class ECreatureAIState PrevAIState); // Function Phoenix.Creature_CombatComponentV2.OnCreatureAIStateChanged // (Final|Native|Private) // @ game+0x32573e0
	int32_t GetCurrentCombatStageIndex(); // Function Phoenix.Creature_CombatComponentV2.GetCurrentCombatStageIndex // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3256b50
};

// Class Phoenix.NPC_Controller
// Size: 0x460 (Inherited: 0x458)
struct ANPC_Controller : ASocialAIController {
	struct UCognitionComponent* CognitionComponent; // 0x458(0x08)

	struct UBlackboardComponent* GetBlackboard(); // Function Phoenix.NPC_Controller.GetBlackboard // (Final|Native|Public|BlueprintCallable) // @ game+0x339df90
};

// Class Phoenix.Creature_Controller
// Size: 0x490 (Inherited: 0x460)
struct ACreature_Controller : ANPC_Controller {
	char pad_460[0x8]; // 0x460(0x08)
	float NavmeshQueryHorizontalRadius; // 0x468(0x04)
	float NavmeshQueryVerticalUpRadius; // 0x46c(0x04)
	float NavmeshQueryVerticalDownRadius; // 0x470(0x04)
	float NavmeshQueryOffMeshMaxRadius; // 0x474(0x04)
	struct UCreature_PathFollowingComponent* CreaturePathFollowingComp; // 0x478(0x08)
	struct UCreatureUtilityContext* CreatureUtilityContext; // 0x480(0x08)
	char pad_488[0x8]; // 0x488(0x08)
};

// Class Phoenix.Creature_FootstepDataAsset
// Size: 0x208 (Inherited: 0x28)
struct UCreature_FootstepDataAsset : UObject {
	struct TMap<enum class EPhysicalSurface, struct FName> DefaultAudioSurfaceSwitchStates; // 0x28(0x50)
	struct FName DefaultAudioSwitchState; // 0x78(0x08)
	struct FCreatureParticleSurfaceList DefaultParticleSurfaceSystems; // 0x80(0x90)
	float AudioMaxDistanceToCamera; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct UAkAudioEvent* AudioEvent; // 0x118(0x08)
	struct FName AudioSwitchGroup; // 0x120(0x08)
	float AudioImpactStrengthArray[0x3]; // 0x128(0x0c)
	char pad_134[0x4]; // 0x134(0x04)
	struct UAkAudioEvent* MotionEvent; // 0x138(0x08)
	struct UAkAudioEvent* PlayerMountedMotionEvent; // 0x140(0x08)
	int32_t ParticlesMaxLOD; // 0x148(0x04)
	float ParticlesMaxDistanceToCamera; // 0x14c(0x04)
	float DecalScale; // 0x150(0x04)
	struct FVector DecalOffset; // 0x154(0x0c)
	float EffectScale; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct TMap<enum class EPhysicalSurface, struct FCreatureParticleSurfaceList> ParticleSurfaceSystems; // 0x168(0x50)
	struct TMap<enum class ECreatureImpactSize, struct FImpactCameraShakeData> CameraShakeDataMap; // 0x1b8(0x50)
};

// Class Phoenix.Creature_FootstepRedirectorAsset
// Size: 0x38 (Inherited: 0x30)
struct UCreature_FootstepRedirectorAsset : UDataAsset {
	struct UCreature_FootstepDataAsset* AssetClass; // 0x30(0x08)
};

// Class Phoenix.Creature_GroupCoordinator
// Size: 0x150 (Inherited: 0x28)
struct UCreature_GroupCoordinator : UObject {
	char pad_28[0x128]; // 0x28(0x128)

	void SetTagLimitOnActor(struct AActor* Subject, struct FName Identifier, int32_t Limit); // Function Phoenix.Creature_GroupCoordinator.SetTagLimitOnActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3257d40
	bool RemoveTagsWithIDFromActor(struct AActor* Subject, struct FName Identifier); // Function Phoenix.Creature_GroupCoordinator.RemoveTagsWithIDFromActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3257b10
	void RemoveTagLimitOnActor(struct AActor* Subject, struct FName Identifier); // Function Phoenix.Creature_GroupCoordinator.RemoveTagLimitOnActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3257a50
	void RemoveAllLocationTagsWithIDAndOwner(struct FName Identifier, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.RemoveAllLocationTagsWithIDAndOwner // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3257990
	void RemoveAllActorTagsWithIDAndOwner(struct FName Identifier, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.RemoveAllActorTagsWithIDAndOwner // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32578d0
	bool RemoveActorTag(struct AActor* Subject, struct FName Identifier, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.RemoveActorTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32577d0
	void RegisterLocationTag(struct FVector Location, struct FName Identifier, float Radius, float LifeTime, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.RegisterLocationTag // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x3257630
	bool RegisterActorTag(struct AActor* Subject, struct FName Identifier, float LifeTime, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.RegisterActorTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32574e0
	int32_t GetTagLimitOnActor(struct AActor* Subject, struct FName Identifier); // Function Phoenix.Creature_GroupCoordinator.GetTagLimitOnActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3257260
	bool GetDoesLocationTagExistIgnoreOwner(struct FVector Location, struct FName Identifier, float SearchRadius, struct AActor* OwnerToIgnore); // Function Phoenix.Creature_GroupCoordinator.GetDoesLocationTagExistIgnoreOwner // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x32570e0
	bool GetDoesLocationTagExistFromOwner(struct FVector Location, struct FName Identifier, float SearchRadius, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.GetDoesLocationTagExistFromOwner // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3256f80
	bool GetDoesLocationTagExist(struct FVector Location, struct FName Identifier, float SearchRadius); // Function Phoenix.Creature_GroupCoordinator.GetDoesLocationTagExist // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3256e50
	bool GetDoesActorTagExistIgnoreOwner(struct AActor* Subject, struct FName Identifier, struct AActor* OwnerToIgnore); // Function Phoenix.Creature_GroupCoordinator.GetDoesActorTagExistIgnoreOwner // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3256d50
	bool GetDoesActorTagExistFromOwner(struct AActor* Subject, struct FName Identifier, struct AActor* Owner); // Function Phoenix.Creature_GroupCoordinator.GetDoesActorTagExistFromOwner // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3256c50
	bool GetDoesActorTagExist(struct AActor* Subject, struct FName Identifier); // Function Phoenix.Creature_GroupCoordinator.GetDoesActorTagExist // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3256b80
	struct TArray<struct FCreature_GroupCoordination_LocationTag> GetAllOverlappingLocationTags(struct FVector Location, struct FName Identifier, float SearchRadius); // Function Phoenix.Creature_GroupCoordinator.GetAllOverlappingLocationTags // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x32569e0
	bool GetActorTagLifetimeLeftFromOwner(struct AActor* Subject, struct FName Identifier, struct AActor* Owner, float& OutTagAge); // Function Phoenix.Creature_GroupCoordinator.GetActorTagLifetimeLeftFromOwner // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3256890
	bool GetActorTagAgeFromOwner(struct AActor* Subject, struct FName Identifier, struct AActor* Owner, float& OutTagAge); // Function Phoenix.Creature_GroupCoordinator.GetActorTagAgeFromOwner // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3256740
};

// Class Phoenix.Creature_MotionTable
// Size: 0x78 (Inherited: 0x30)
struct UCreature_MotionTable : UDataAsset {
	struct FCreatureGaitMotionData GaitMotionData[0x4]; // 0x30(0x40)
	bool bUsingTurnAssist; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.Creature_FlightMotionTable
// Size: 0x90 (Inherited: 0x30)
struct UCreature_FlightMotionTable : UDataAsset {
	struct TMap<enum class ECreatureLandingType, struct FCreatureLandingMotionData> LandingMotionData; // 0x30(0x50)
	struct TArray<struct FCreatureTakeoffMotionData> TakeoffMotionData; // 0x80(0x10)
};

// Class Phoenix.Creature_MountComponent
// Size: 0x888 (Inherited: 0xc8)
struct UCreature_MountComponent : UActorComponent {
	float HoverFlightGaitSpeed; // 0xc8(0x04)
	float SlowFlightGaitSpeed; // 0xcc(0x04)
	float FastFlightGaitSpeed; // 0xd0(0x04)
	char pad_D4[0x8]; // 0xd4(0x08)
	enum class EMountFlyingGait CurrentFlyingGait; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	enum class EMountCombatChargeState CurrentChargeState; // 0xe0(0x01)
	bool CombatChargeActive; // 0xe1(0x01)
	bool CombatChargeEnabled; // 0xe2(0x01)
	char pad_E3[0x1]; // 0xe3(0x01)
	float CombatChargeRequestDuration; // 0xe4(0x04)
	char pad_E8[0x4]; // 0xe8(0x04)
	float CombatChargeMinActiveDuration; // 0xec(0x04)
	char pad_F0[0x4]; // 0xf0(0x04)
	float CombatChargeCooldownDuration; // 0xf4(0x04)
	char pad_F8[0x4]; // 0xf8(0x04)
	float CombatChargeRefillDelayDuration; // 0xfc(0x04)
	char pad_100[0x4]; // 0x100(0x04)
	float CombatChargeRefillRate; // 0x104(0x04)
	float CombatChargeDepletionRate; // 0x108(0x04)
	float CombatChargeAmount_Max; // 0x10c(0x04)
	char pad_110[0x4]; // 0x110(0x04)
	float CombatChargeAmount_SpawnsWith; // 0x114(0x04)
	float CombatChargeAmount_MinUsable; // 0x118(0x04)
	float CombatChargeWaterDepthLimit; // 0x11c(0x04)
	struct UAkAudioEvent* CombatChargeRunOutSfx; // 0x120(0x08)
	char pad_128[0x8]; // 0x128(0x08)
	struct UAkAudioEvent* CombatChargeNoChargeSfx; // 0x130(0x08)
	char pad_138[0x8]; // 0x138(0x08)
	struct UAkAudioEvent* CombatChargePreSpecialAttackSfx; // 0x140(0x08)
	char pad_148[0x4]; // 0x148(0x04)
	int32_t DeactiveSfxTransitionDuration; // 0x14c(0x04)
	float HealthRefillDelayDuration; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	float HealthRefillDuration; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
	float DeathTimeout; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct FMulticastInlineDelegate MovementStateChangedDelegate; // 0x168(0x10)
	char pad_178[0x8]; // 0x178(0x08)
	struct ACharacter* RiderCharacter; // 0x180(0x08)
	struct UCreature_MountLandingDynamics* LandingDynamics; // 0x188(0x08)
	struct UTriggerEffect* pChargeTriggerEffect; // 0x190(0x08)
	struct UTriggerEffect* pJogTriggerEffect; // 0x198(0x08)
	char pad_1A0[0x148]; // 0x1a0(0x148)
	float DeadZone; // 0x2e8(0x04)
	float TrotZone; // 0x2ec(0x04)
	float ButtonHoldTime; // 0x2f0(0x04)
	float ButtonTapTime; // 0x2f4(0x04)
	float ToggleGallopTimeoutTime; // 0x2f8(0x04)
	float MinInputTime; // 0x2fc(0x04)
	float StickBounceMagnitudeThreshold; // 0x300(0x04)
	float CameraRelativeAdjustmentAngle; // 0x304(0x04)
	struct FRuntimeFloatCurve GallopHorizontalInputAdjustmentCurve; // 0x308(0x88)
	struct FRuntimeFloatCurve GallopInputMagnitudeAdjustmentCurve; // 0x390(0x88)
	float WallCollisionImpactAngleThreshold; // 0x418(0x04)
	float FlyingWallCollisionImpactAngleThreshold; // 0x41c(0x04)
	float NoMountZoneCollisionImpactAngleThreshold; // 0x420(0x04)
	char pad_424[0x4]; // 0x424(0x04)
	struct UCreature_MountFlightDynamics* FlightDynamics; // 0x428(0x08)
	struct FMercuna3DMovementProperties FlyingMovementProperties; // 0x430(0x3c)
	struct FMercuna3DMovementProperties LandingMovementProperties; // 0x46c(0x3c)
	struct UAblAbility* FlyingAdditiveAbility; // 0x4a8(0x08)
	struct FName FlyingAdditiveChannel; // 0x4b0(0x08)
	struct UAblAbility* TailAdditiveAbility; // 0x4b8(0x08)
	struct FName TailAdditiveChannel; // 0x4c0(0x08)
	struct FVector2D MaxLevelGlidingTimeRangeForSlowFlight; // 0x4c8(0x08)
	struct FVector2D MaxLevelGlidingTimeRangeForFastFlight; // 0x4d0(0x08)
	struct FVector2D MinGlidingResetTimeRangeForSlowFlight; // 0x4d8(0x08)
	struct FVector2D MinGlidingResetTimeRangeForFastFlight; // 0x4e0(0x08)
	float MaxPitchForLevelFlight; // 0x4e8(0x04)
	float MinSpeedForLevelFlight; // 0x4ec(0x04)
	struct FRuntimeFloatCurve PitchToMinGlideSpeed; // 0x4f0(0x88)
	float MaxPitchDegreesDownForFastFlightGait; // 0x578(0x04)
	float MinGlideSpeedForFastFlightGait; // 0x57c(0x04)
	float MinFlightTimeForAutoLanding; // 0x580(0x04)
	float MaxSpeedForTrotLanding; // 0x584(0x04)
	float MaxInputMagnitudeForHover; // 0x588(0x04)
	float MaxDeltaYawToAccelerateWhenHovering; // 0x58c(0x04)
	struct FRuntimeFloatCurve FlightInputToPitchCurve; // 0x590(0x88)
	struct FRuntimeFloatCurve DistanceToHeightLimitToMaxPitchMultiplierCurve; // 0x618(0x88)
	float VerticalHoverCollisionPredictionTime; // 0x6a0(0x04)
	bool bEnableAutoTakeoffWhenFalling; // 0x6a4(0x01)
	char pad_6A5[0x3]; // 0x6a5(0x03)
	float MinFallingTimeForAutoTakeoff; // 0x6a8(0x04)
	float MinTimeToLandingForAutoTakeoff; // 0x6ac(0x04)
	float HoverGaitCapsuleHalfHeight; // 0x6b0(0x04)
	float HoverGaitCapsuleRadius; // 0x6b4(0x04)
	char pad_6B8[0x3c]; // 0x6b8(0x3c)
	bool bEnableIdleBreaks; // 0x6f4(0x01)
	char pad_6F5[0x3]; // 0x6f5(0x03)
	float MinIdleTimeForIdleBreak; // 0x6f8(0x04)
	float MinTimeBetweenIdleBreaks; // 0x6fc(0x04)
	char pad_700[0x10]; // 0x700(0x10)
	float MoveZ; // 0x710(0x04)
	float InputTime; // 0x714(0x04)
	float ReleaseTime; // 0x718(0x04)
	bool bStartedMoving; // 0x71c(0x01)
	bool bUsingKeyboard; // 0x71d(0x01)
	char pad_71E[0x1]; // 0x71e(0x01)
	bool bToggleGallopRequested; // 0x71f(0x01)
	char pad_720[0x30]; // 0x720(0x30)
	struct ACreatureMountHandler* MountHandler; // 0x750(0x08)
	struct ACreature_Character* OwnerCreatureCharacter; // 0x758(0x08)
	struct UIcarus3DMovementComponent* FlightMovementComponent; // 0x760(0x08)
	struct UFlightAnimationComponent* FlightAnimationComponent; // 0x768(0x08)
	struct UMountStreamingComponent* MountStreamingComponent; // 0x770(0x08)
	struct UMountHeightLimitComponent* MountHeightLimitComponent; // 0x778(0x08)
	struct UMovementPredictionComponent* MovementPredictionComponent; // 0x780(0x08)
	struct FMulticastInlineDelegate CreatureMountChargeEnabledDelegate; // 0x788(0x10)
	struct FMulticastInlineDelegate CreatureMountChargeAmountDelegate; // 0x798(0x10)
	struct FMulticastInlineDelegate CreatureMountChargeRequestDelegate; // 0x7a8(0x10)
	struct FMulticastInlineDelegate CreatureMountChargeCooldownDelegate; // 0x7b8(0x10)
	struct FMulticastInlineDelegate CreatureMountChargeRefillDelayDelegate; // 0x7c8(0x10)
	char pad_7D8[0xb0]; // 0x7d8(0xb0)

	void UpdateMoveInput(float DeltaTime); // Function Phoenix.Creature_MountComponent.UpdateMoveInput // (Final|Native|Public|BlueprintCallable) // @ game+0x325a750
	void UpdateGroundMovement(float DeltaTime); // Function Phoenix.Creature_MountComponent.UpdateGroundMovement // (Native|Event|Protected|BlueprintEvent) // @ game+0x325a6c0
	void ToggleGallopTimedOut(); // Function Phoenix.Creature_MountComponent.ToggleGallopTimedOut // (Final|Native|Public|BlueprintCallable) // @ game+0x325a6a0
	void TakeoffRequested(bool bSkipTakeoffAnimation); // Function Phoenix.Creature_MountComponent.TakeoffRequested // (Final|Native|Public|BlueprintCallable) // @ game+0x325a610
	void TakeOffPressed(); // Function Phoenix.Creature_MountComponent.TakeOffPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x325a5f0
	void StopVocalSfx(int32_t InTransitionDuration); // Function Phoenix.Creature_MountComponent.StopVocalSfx // (Final|Native|Protected|BlueprintCallable) // @ game+0x325a560
	void SpeedUpReleased(); // Function Phoenix.Creature_MountComponent.SpeedUpReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x325a540
	void SpeedUpPressed(bool bSprintToggle); // Function Phoenix.Creature_MountComponent.SpeedUpPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x325a4b0
	void ShowActionDiamond(bool bShow); // Function Phoenix.Creature_MountComponent.ShowActionDiamond // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetMinimumFlyingGait(enum class EMountFlyingGait InMinimumFlyingGait); // Function Phoenix.Creature_MountComponent.SetMinimumFlyingGait // (Final|Native|Public|BlueprintCallable) // @ game+0x325a430
	void SetAutoLandingEnabled(bool bInEnabled); // Function Phoenix.Creature_MountComponent.SetAutoLandingEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x325a3a0
	void OnNearDeathKneel(struct AActor* Owner); // Function Phoenix.Creature_MountComponent.OnNearDeathKneel // (Final|Native|Protected) // @ game+0x325a310
	void OnMovementModeChanged(struct ACharacter* Character, enum class EMovementMode PrevMovementMode, char PreviousCustomMode); // Function Phoenix.Creature_MountComponent.OnMovementModeChanged // (Final|Native|Protected) // @ game+0x325a200
	void OnHealthChanged(struct AActor* Target, float InHealthChange, bool bIndicateHUD); // Function Phoenix.Creature_MountComponent.OnHealthChanged // (Final|Native|Protected) // @ game+0x325a0e0
	void LightAttackReleased(); // Function Phoenix.Creature_MountComponent.LightAttackReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x325a0c0
	void LightAttackPressed(); // Function Phoenix.Creature_MountComponent.LightAttackPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x325a0a0
	void LandingRequested(); // Function Phoenix.Creature_MountComponent.LandingRequested // (Final|Native|Public|BlueprintCallable) // @ game+0x325a080
	void KeyboardWalkReleased(); // Function Phoenix.Creature_MountComponent.KeyboardWalkReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x325a060
	void KeyboardWalkPressed(); // Function Phoenix.Creature_MountComponent.KeyboardWalkPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x325a040
	bool IsFlying(); // Function Phoenix.Creature_MountComponent.IsFlying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325a010
	enum class EMountMovementState GetMovementState(); // Function Phoenix.Creature_MountComponent.GetMovementState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259ff0
	enum class EMovementMode GetMovementMode(); // Function Phoenix.Creature_MountComponent.GetMovementMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259fc0
	struct ACreatureMountHandler* GetMountHandler(); // Function Phoenix.Creature_MountComponent.GetMountHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259fa0
	bool GetFlyingDistanceAboveGround(float& OutDistanceAboveGround); // Function Phoenix.Creature_MountComponent.GetFlyingDistanceAboveGround // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259ef0
	void DismountTriggered(); // Function Phoenix.Creature_MountComponent.DismountTriggered // (Final|Native|Public|BlueprintCallable) // @ game+0x3259ed0
	void DismountReleased(); // Function Phoenix.Creature_MountComponent.DismountReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x3259eb0
	void DismountPressed(); // Function Phoenix.Creature_MountComponent.DismountPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x3259e90
	void DismountBeganHold(); // Function Phoenix.Creature_MountComponent.DismountBeganHold // (Final|Native|Public|BlueprintCallable) // @ game+0x3259e70
	void DeactivateMountComponent(); // Function Phoenix.Creature_MountComponent.DeactivateMountComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x3259e50
	bool CanFly(); // Function Phoenix.Creature_MountComponent.CanFly // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259e20
	bool CanCharge(); // Function Phoenix.Creature_MountComponent.CanCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3259df0
	void ActivateMountComponent(struct ACreatureMountHandler* InMountHandler, bool bInRiderIsPlayer); // Function Phoenix.Creature_MountComponent.ActivateMountComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x3259d20
};

// Class Phoenix.AblBranchCreatureMountCombatInputScratchpad
// Size: 0x30 (Inherited: 0x30)
struct UAblBranchCreatureMountCombatInputScratchpad : UAblTaskConditionScratchpad {
};

// Class Phoenix.AblBranchCreatureMountCombatInput
// Size: 0x30 (Inherited: 0x28)
struct UAblBranchCreatureMountCombatInput : UAblTaskCondition {
	bool bChargeActive; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Creature_MountLandingDynamics
// Size: 0x88 (Inherited: 0x30)
struct UCreature_MountLandingDynamics : UDataAsset {
	struct TMap<enum class ECreatureLandingType, struct FMountLandingData> LandingDataMap; // 0x30(0x50)
	float LandingMaxAcceleration; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.Creature_MountFlightDynamics
// Size: 0x898 (Inherited: 0x30)
struct UCreature_MountFlightDynamics : UDataAsset {
	float LiftConstant; // 0x30(0x04)
	float DragConstantParallel; // 0x34(0x04)
	float DragConstantPerpendicular; // 0x38(0x04)
	float Thrust; // 0x3c(0x04)
	struct FRuntimeFloatCurve SpeedToThrustCurve; // 0x40(0x88)
	struct FRuntimeFloatCurve SpeedToMaxThrustCurve; // 0xc8(0x88)
	float LiftDeltaFromAngleCompensationVerticalWhenAscending; // 0x150(0x04)
	float LiftDeltaFromAngleCompensationHorizontalWhenAscending; // 0x154(0x04)
	float LiftDeltaFromAngleCompensationVerticalWhenDescending; // 0x158(0x04)
	float LiftDeltaFromAngleCompensationHorizontalWhenDescending; // 0x15c(0x04)
	float LiftDeltaFromSpeedCompensationVertical; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct FRuntimeFloatCurve PitchToLiftDeltaFromSpeedCompensationCurve; // 0x168(0x88)
	float LiftDeltaFromSpeedBaseSpeed; // 0x1f0(0x04)
	float BrakingStiffness; // 0x1f4(0x04)
	float MaxBrakingMagnitude; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct FRuntimeFloatCurve DistanceAboveHeightLimitToDownForceCurve; // 0x200(0x88)
	struct FRuntimeFloatCurve DesiredYawDeltaToRollCurve; // 0x288(0x88)
	struct FRuntimeFloatCurve RollToYawRateFactorCurve; // 0x310(0x88)
	float MaxRollDegrees; // 0x398(0x04)
	float MaxPitchDegreesUp; // 0x39c(0x04)
	float MaxPitchDegreesDown; // 0x3a0(0x04)
	float MaxTurnRate; // 0x3a4(0x04)
	struct FRuntimeFloatCurve RollToMaxPitchUpCurve; // 0x3a8(0x88)
	struct FRuntimeFloatCurve RollToMaxPitchDownCurve; // 0x430(0x88)
	struct FRotator AngularStiffness; // 0x4b8(0x0c)
	struct FRotator AngularDampingRatio; // 0x4c4(0x0c)
	struct FRuntimeFloatCurve SpeedToRollSensitivityCurve; // 0x4d0(0x88)
	struct FRuntimeFloatCurve SpeedToPitchSensitivityCurve; // 0x558(0x88)
	float HoverGaitDragConstantParallelMultiplier; // 0x5e0(0x04)
	float HoverGaitDragConstantPerpendicularMultiplier; // 0x5e4(0x04)
	float HoverGaitDragBlendInTime; // 0x5e8(0x04)
	char pad_5EC[0x4]; // 0x5ec(0x04)
	struct FRuntimeFloatCurve HoverGaitWingPhaseToYawStiffnessMultiplierCurve; // 0x5f0(0x88)
	struct FRuntimeFloatCurve HoverGaitWingPhaseToYawDragCurve; // 0x678(0x88)
	struct FRuntimeFloatCurve HoverGaitWingPhaseToThrustMultiplierForwardCurve; // 0x700(0x88)
	struct FRuntimeFloatCurve HoverGaitWingPhaseToThrustMultiplierUpCurve; // 0x788(0x88)
	struct FRuntimeFloatCurve HoverGaitWingPhaseToThrustMultiplierDownCurve; // 0x810(0x88)
};

// Class Phoenix.CreatureVariationDataAsset
// Size: 0x198 (Inherited: 0x30)
struct UCreatureVariationDataAsset : UDataAsset {
	bool bUseMeshVariations; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<struct FCreatureMeshVariation> MeshVariationSettings; // 0x38(0x10)
	bool bSwapMaterialsForFemale; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FCreatureMaleVariationSettings MaleVariationSettings; // 0x50(0x60)
	struct FCreatureFemaleVariationSettings FemaleVariationSettings; // 0xb0(0xe8)
};

// Class Phoenix.Creature_NurtureComponent
// Size: 0x1e8 (Inherited: 0xc8)
struct UCreature_NurtureComponent : UActorComponent {
	struct UCreatureVariationDataAsset* VariationData; // 0xc8(0x08)
	bool bOverride_TameTargetPriorityWeight; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float TameTargetPriorityWeight; // 0xd4(0x04)
	bool bOverride_TameTargetMode; // 0xd8(0x01)
	enum class ESocialCombatMode TameTargetMode; // 0xd9(0x01)
	char pad_DA[0x6]; // 0xda(0x06)
	struct TSoftClassPtr<UObject> NurtureCalloutsActorClass; // 0xe0(0x28)
	struct FName NurtureCalloutsSocket; // 0x108(0x08)
	struct FVector NurtureCalloutsOffset; // 0x110(0x0c)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct ACreature_Character* CreatureCharacter; // 0x120(0x08)
	char pad_128[0x98]; // 0x128(0x98)
	struct UObjectArchitectAsset* LoadedAudioAsset; // 0x1c0(0x08)
	char pad_1C8[0x20]; // 0x1c8(0x20)

	bool GetIsMale(); // Function Phoenix.Creature_NurtureComponent.GetIsMale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e4f0
	bool GetIsAlbino(); // Function Phoenix.Creature_NurtureComponent.GetIsAlbino // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e4b0
};

// Class Phoenix.Creature_PathFollowingComponent
// Size: 0x4c0 (Inherited: 0x268)
struct UCreature_PathFollowingComponent : UPathFollowingComponent {
	bool bMoveToStopPrediction; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	float RepulsorMinimumRadius; // 0x26c(0x04)
	float RepulsorDetectionRadiusMultiplier; // 0x270(0x04)
	float RepulsorDetectionRadiusMultiplierVariance; // 0x274(0x04)
	float RepulsorNavProbeMinLength; // 0x278(0x04)
	bool bTangentialAcceptance; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	float bTangentialAcceptanceDefaultRadius; // 0x280(0x04)
	float LookaheadDistanceMultiplierTune; // 0x284(0x04)
	struct FVector2D LookaheadDistanceMultiplierClampRanges[0x4]; // 0x288(0x20)
	float TurnAnticipationLookaheadTune; // 0x2a8(0x04)
	float TurnAnticipationCornerLookaheadTune; // 0x2ac(0x04)
	float TurnAnticipationCornerOffsetTune; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct FRuntimeFloatCurve RequiredTurnStiffnessOverSpeed; // 0x2b8(0x88)
	float AdditionalTurningFactor; // 0x340(0x04)
	float MinNavDistSq2D; // 0x344(0x04)
	char pad_348[0x80]; // 0x348(0x80)
	struct ACreature_Controller* CreatureController; // 0x3c8(0x08)
	struct ACreature_Character* CreatureCharacter; // 0x3d0(0x08)
	struct UCharacterMovementComponent* MovementComponent; // 0x3d8(0x08)
	char pad_3E0[0xe0]; // 0x3e0(0xe0)

	void SetUseRepulsorCollisionAvoidance(bool bEnabled); // Function Phoenix.Creature_PathFollowingComponent.SetUseRepulsorCollisionAvoidance // (Final|Native|Public|BlueprintCallable) // @ game+0x325eb90
};

// Class Phoenix.Creature_PathTeleportComponent
// Size: 0x140 (Inherited: 0xc8)
struct UCreature_PathTeleportComponent : UActorComponent {
	struct FVector2D TeleportTimeSpacingRange; // 0xc8(0x08)
	struct FVector2D TeleportDistanceRange; // 0xd0(0x08)
	float PathEndBuffer; // 0xd8(0x04)
	float TeleportFreeAreaTestRadius; // 0xdc(0x04)
	float TeleportGroundLineCheckLength; // 0xe0(0x04)
	float TeleportLocationUpOffset; // 0xe4(0x04)
	struct ACreature_Character* CreatureCharacter; // 0xe8(0x08)
	struct UCreature_PathFollowingComponent* CreaturePathFollowingComponent; // 0xf0(0x08)
	char pad_F8[0x48]; // 0xf8(0x48)
};

// Class Phoenix.Creature_RiderComponent
// Size: 0x4a0 (Inherited: 0xc8)
struct UCreature_RiderComponent : UActorComponent {
	struct UAblAbility* HeadTurnAbility; // 0xc8(0x08)
	struct FName HeadTurnAbilityChannelName; // 0xd0(0x08)
	struct UAblAbility* FlyAdditiveAbility; // 0xd8(0x08)
	struct FName FlyAdditiveAbilityChannelName; // 0xe0(0x08)
	struct TSet<struct FName> AbilityChannelsToNotClear; // 0xe8(0x50)
	struct FGameplayTagContainer RiderAnimationSetTagContainer; // 0x138(0x20)
	struct UAnimationArchitectAsset* RiderAnimationSetArchitectAsset; // 0x158(0x08)
	struct FGameplayTagContainer MountTypeAnimationArchitectTags; // 0x160(0x20)
	struct TMap<struct FName, struct UAblAbility*> HardPlayAbilityMap; // 0x180(0x50)
	struct TArray<struct UAblReactionAbility*> CreatureReactionAbilitesForRiderKnockdown; // 0x1d0(0x10)
	struct FGameplayTagContainer RiderKnockdownMunitionTags; // 0x1e0(0x20)
	struct UAblAbility* InitialGroundAbility; // 0x200(0x08)
	struct UAblAbility* InitialFlyingAbility; // 0x208(0x08)
	bool bUseHandIK; // 0x210(0x01)
	char pad_211[0xf]; // 0x211(0x0f)
	struct FIKPoseFixupDefinition IKPoseFixupDefinitionLeftHand; // 0x220(0xc0)
	struct FIKPoseFixupDefinition IKPoseFixupDefinitionRightHand; // 0x2e0(0xc0)
	bool bEnableAnimationModifier; // 0x3a0(0x01)
	char pad_3A1[0x3]; // 0x3a1(0x03)
	struct FName HipsBoneName; // 0x3a4(0x08)
	struct FName LeftThighBoneName; // 0x3ac(0x08)
	struct FName RightThighBoneName; // 0x3b4(0x08)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct FRuntimeFloatCurve PitchToPitchCorrectionCurve; // 0x3c0(0x88)
	float PitchCorrectionSpringFrequency; // 0x448(0x04)
	char pad_44C[0x54]; // 0x44c(0x54)

	void OnMountMovementStateChanged(struct UCreature_MountComponent* MountComponent, enum class EMountMovementState PrevMovementState); // Function Phoenix.Creature_RiderComponent.OnMountMovementStateChanged // (Final|Native|Protected) // @ game+0x325e920
	void OnCreatureReactionQueued(struct UAblReactionData* ReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.Creature_RiderComponent.OnCreatureReactionQueued // (Final|Native|Protected) // @ game+0x325e780
	void InterruptDismount(); // Function Phoenix.Creature_RiderComponent.InterruptDismount // (Final|Native|Public|BlueprintCallable) // @ game+0x325e730
	struct ACreatureMountHandler* GetMountHandler(); // Function Phoenix.Creature_RiderComponent.GetMountHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e510
	struct ACreature_Character* GetCreatureCharacter(); // Function Phoenix.Creature_RiderComponent.GetCreatureCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e440
	void EnableHandIK(); // Function Phoenix.Creature_RiderComponent.EnableHandIK // (Final|Native|Public|BlueprintCallable) // @ game+0x325e120
	void DisableHandIK(); // Function Phoenix.Creature_RiderComponent.DisableHandIK // (Final|Native|Public|BlueprintCallable) // @ game+0x325e060
	void DeactivateRiderComponent(); // Function Phoenix.Creature_RiderComponent.DeactivateRiderComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x325e040
	void ActivateRiderComponent(struct ACreatureMountHandler* InMountHandler, bool bEnableHandIK); // Function Phoenix.Creature_RiderComponent.ActivateRiderComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x325de10
};

// Class Phoenix.Creature_WorldDebugComponent
// Size: 0x500 (Inherited: 0x4d0)
struct UCreature_WorldDebugComponent : UTextRenderComponent {
	struct FColor TextStandardColor; // 0x4d0(0x04)
	struct FColor TextErrorColor; // 0x4d4(0x04)
	struct FVector AdditionalBoundsOffset; // 0x4d8(0x0c)
	char pad_4E4[0x1c]; // 0x4e4(0x1c)
};

// Class Phoenix.CreatureCage_Interface
// Size: 0x28 (Inherited: 0x28)
struct UCreatureCage_Interface : UInterface {

	bool IsCageOpen(); // Function Phoenix.CreatureCage_Interface.IsCageOpen // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x325e750
	struct USceneComponent* GetWalkoutTarget(); // Function Phoenix.CreatureCage_Interface.GetWalkoutTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x325e610
};

// Class Phoenix.CreatureEgg
// Size: 0x250 (Inherited: 0x248)
struct ACreatureEgg : AActor {
	struct UObjectStateComponent* ObjectStateComponent; // 0x248(0x08)
};

// Class Phoenix.CreatureFeed
// Size: 0x288 (Inherited: 0x248)
struct ACreatureFeed : AActor {
	float StartFeedAnimDistance; // 0x248(0x04)
	bool bUsePelletStartingScaleInAnim; // 0x24c(0x01)
	char pad_24D[0x3]; // 0x24d(0x03)
	float MaxWaitTime; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct UCreatureFeedFloatingComponent* FeedFloatingComponent; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	struct ACreature_Character* SelectedCreature; // 0x268(0x08)
	char pad_270[0x18]; // 0x270(0x18)

	void OnStartedVanishing(); // Function Phoenix.CreatureFeed.OnStartedVanishing // (Native|Event|Protected|BlueprintEvent) // @ game+0x31e1780
	void InitializeRelease(struct ACreature_Character* SelectedCreature); // Function Phoenix.CreatureFeed.InitializeRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x325e6a0
	void FloatToCreature(struct FVector ReleaseVelocity); // Function Phoenix.CreatureFeed.FloatToCreature // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x325e210
};

// Class Phoenix.CreatureFeedFloatingComponent
// Size: 0x180 (Inherited: 0xc8)
struct UCreatureFeedFloatingComponent : UActorComponent {
	float OscillationBlendInTime; // 0xc8(0x04)
	float OscillationAmplitudeVert; // 0xcc(0x04)
	float OscillationFrequencyVert; // 0xd0(0x04)
	float OscillationAmplitudeHoriz; // 0xd4(0x04)
	float OscillationFrequencyHoriz; // 0xd8(0x04)
	float OscillationRotationSpeedDegMax; // 0xdc(0x04)
	float FloatingBlendTime; // 0xe0(0x04)
	float FloatingBlendPow; // 0xe4(0x04)
	float FloatingStiffnessDistanceMax; // 0xe8(0x04)
	float FloatingStiffnessMin; // 0xec(0x04)
	float FloatingStiffnessMax; // 0xf0(0x04)
	float FloatingStiffnessRange; // 0xf4(0x04)
	float FloatingCriticalDampingFactor; // 0xf8(0x04)
	float FloatingInterpolationSpeed; // 0xfc(0x04)
	float FloatingExpandTime; // 0x100(0x04)
	float FloatingExpandDistanace; // 0x104(0x04)
	float AttachStartDelay; // 0x108(0x04)
	float AttachedBlendTime; // 0x10c(0x04)
	float AttachedBlendPow; // 0x110(0x04)
	float AttachedInterpolationSpeed; // 0x114(0x04)
	char pad_118[0x60]; // 0x118(0x60)
	struct AActor* AttachTargetActor; // 0x178(0x08)

	struct FVector GetAveragePelletLocation(); // Function Phoenix.CreatureFeedFloatingComponent.GetAveragePelletLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x325e2a0
};

// Class Phoenix.TransfigurationObjectBase
// Size: 0x2a8 (Inherited: 0x298)
struct ATransfigurationObjectBase : AInteractiveObjectActor {
	struct UCognitionStimuliSourceComponent* CogSourceComponent; // 0x298(0x08)
	bool bIsPreviewActor; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
};

// Class Phoenix.CreatureFeedingStation
// Size: 0x320 (Inherited: 0x2a8)
struct ACreatureFeedingStation : ATransfigurationObjectBase {
	struct FVector FeedPelletsReleaseVelocity; // 0x2a8(0x0c)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct ACreatureFeed* FeedActorClass; // 0x2b8(0x08)
	char pad_2C0[0x60]; // 0x2c0(0x60)

	void UnregisterFeedingStationFromBiome(); // Function Phoenix.CreatureFeedingStation.UnregisterFeedingStationFromBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x325ed40
	void UnhideFeed(struct UAnimInstance* FeederAnimInstance); // Function Phoenix.CreatureFeedingStation.UnhideFeed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Unassign(struct ACreature_Character* Creature); // Function Phoenix.CreatureFeedingStation.Unassign // (Final|Native|Public|BlueprintCallable) // @ game+0x325ecb0
	void SetSlotVisualState(int32_t SlotIdx, enum class ECreatureFeedingStationSlotVisualState VisualState); // Function Phoenix.CreatureFeedingStation.SetSlotVisualState // (Final|Native|Public|BlueprintCallable) // @ game+0x325eac0
	void RemoveOneFeed(int32_t SlotIdx); // Function Phoenix.CreatureFeedingStation.RemoveOneFeed // (Final|Native|Public|BlueprintCallable) // @ game+0x325ea30
	void ReleaseFeed(struct UAnimInstance* FeederAnimInstance); // Function Phoenix.CreatureFeedingStation.ReleaseFeed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RegisterFeedingStationToBiome(); // Function Phoenix.CreatureFeedingStation.RegisterFeedingStationToBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x325ea10
	void RefillEmptyFeederSlots(); // Function Phoenix.CreatureFeedingStation.RefillEmptyFeederSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x325e9f0
	void OnStartedConverting(); // Function Phoenix.CreatureFeedingStation.OnStartedConverting // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFeedDispensed(struct ACreatureFeed* CreatureFeed, struct ACreature_Character* Creature); // Function Phoenix.CreatureFeedingStation.OnFeedDispensed // (Native|Event|Public|BlueprintEvent) // @ game+0x325e850
	void OnFeedConverted(); // Function Phoenix.CreatureFeedingStation.OnFeedConverted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFeedAdded(); // Function Phoenix.CreatureFeedingStation.OnFeedAdded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	enum class ECreatureFeedingStationSlotVisualState GetSlotVisualState(int32_t SlotIdx); // Function Phoenix.CreatureFeedingStation.GetSlotVisualState // (Final|Native|Public|BlueprintCallable) // @ game+0x325e570
	struct UCreatureFeedingStationState* GetFeedingStationState(); // Function Phoenix.CreatureFeedingStation.GetFeedingStationState // (Final|Native|Public|BlueprintCallable) // @ game+0x325e480
	struct FTransform GetBestSlotTransform(struct ACreature_Character* Creature); // Function Phoenix.CreatureFeedingStation.GetBestSlotTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x325e2e0
	void FindSlotComponents(struct TArray<struct USceneComponent*>& OutSlotComponents); // Function Phoenix.CreatureFeedingStation.FindSlotComponents // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x325e160
	bool DispenseFeed(struct ACreature_Character* Creature); // Function Phoenix.CreatureFeedingStation.DispenseFeed // (Final|Native|Public|BlueprintCallable) // @ game+0x325e080
	void ConvertAvailableFeederSlot(); // Function Phoenix.CreatureFeedingStation.ConvertAvailableFeederSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x325e020
	void BP_Init(); // Function Phoenix.CreatureFeedingStation.BP_Init // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AssignToSlot(struct ACreature_Character* Creature); // Function Phoenix.CreatureFeedingStation.AssignToSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x325dee0
};

// Class Phoenix.CreatureFeedingStationState
// Size: 0xe8 (Inherited: 0x28)
struct UCreatureFeedingStationState : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)

	bool HasFeedAvailable(); // Function Phoenix.CreatureFeedingStationState.HasFeedAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e670
	bool HasEmptySlot(); // Function Phoenix.CreatureFeedingStationState.HasEmptySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e640
	int32_t GetNumFeedSlots(); // Function Phoenix.CreatureFeedingStationState.GetNumFeedSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e550
	enum class EItemConversionState GetConversionState(int32_t SlotIndex); // Function Phoenix.CreatureFeedingStationState.GetConversionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x325e3a0
	void FinalizeCurrentConversion(); // Function Phoenix.CreatureFeedingStationState.FinalizeCurrentConversion // (Final|Native|Public|BlueprintCallable) // @ game+0x325e140
};

// Class Phoenix.CreatureInteractionTool
// Size: 0x450 (Inherited: 0x430)
struct ACreatureInteractionTool : AInventoryItemTool {
	struct ACreature_Character* TargetCreature; // 0x430(0x08)
	struct ABiped_Player* Player; // 0x438(0x08)
	enum class ETargetSpeedMode InteractingSpeedMode; // 0x440(0x01)
	char pad_441[0x3]; // 0x441(0x03)
	float InteractRange; // 0x444(0x04)
	char pad_448[0x8]; // 0x448(0x08)

	void RequestInteractionEnd(); // Function Phoenix.CreatureInteractionTool.RequestInteractionEnd // (Final|Native|Protected|BlueprintCallable) // @ game+0x3265650
	void RemoveLookAtTarget(); // Function Phoenix.CreatureInteractionTool.RemoveLookAtTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x3265590
	void RemoveFaceTarget(); // Function Phoenix.CreatureInteractionTool.RemoveFaceTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x3265570
	void OnTickInteraction(float DeltaSeconds); // Function Phoenix.CreatureInteractionTool.OnTickInteraction // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnInteractionStarted(); // Function Phoenix.CreatureInteractionTool.OnInteractionStarted // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnInteractionEndRequested(); // Function Phoenix.CreatureInteractionTool.OnInteractionEndRequested // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnInteractionEnded(); // Function Phoenix.CreatureInteractionTool.OnInteractionEnded // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	bool GetInteractionEndRequested(); // Function Phoenix.CreatureInteractionTool.GetInteractionEndRequested // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x32647b0
	void EnableInteractionCamera(); // Function Phoenix.CreatureInteractionTool.EnableInteractionCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x3263c50
	void DisableInteractionCamera(); // Function Phoenix.CreatureInteractionTool.DisableInteractionCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x3263c30
	void AllowInteractionEnd(); // Function Phoenix.CreatureInteractionTool.AllowInteractionEnd // (Final|Native|Protected|BlueprintCallable) // @ game+0x3262710
	void AddLookAtTarget(); // Function Phoenix.CreatureInteractionTool.AddLookAtTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x32626f0
	void AddFaceTarget(); // Function Phoenix.CreatureInteractionTool.AddFaceTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x32626d0
};

// Class Phoenix.CreatureFeedingTool
// Size: 0x520 (Inherited: 0x450)
struct ACreatureFeedingTool : ACreatureInteractionTool {
	struct FGameplayTagContainer PelletsCloseReleaseTags; // 0x450(0x20)
	struct FVector PelletsCloseReleaseVelocity; // 0x470(0x0c)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct FGameplayTagContainer PelletsMediumReleaseTags; // 0x480(0x20)
	float PelletsMediumReleaseRange; // 0x4a0(0x04)
	struct FVector PelletsMediumReleaseVelocityMin; // 0x4a4(0x0c)
	struct FVector PelletsMediumReleaseVelocityMax; // 0x4b0(0x0c)
	char pad_4BC[0x4]; // 0x4bc(0x04)
	struct FGameplayTagContainer PelletsThrowReleaseTags; // 0x4c0(0x20)
	float PelletsThrowReleaseRange; // 0x4e0(0x04)
	struct FVector PelletsThrowReleaseVelocityMin; // 0x4e4(0x0c)
	struct FVector PelletsThrowReleaseVelocityMax; // 0x4f0(0x0c)
	char pad_4FC[0x24]; // 0x4fc(0x24)

	void SetupDistanceBasedPelletReleaseAnim(struct ACreature_Character* InCreatureCharacter); // Function Phoenix.CreatureFeedingTool.SetupDistanceBasedPelletReleaseAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x325ec20
	struct FVector CalculateDynamicPelletReleaseVeloctiy(struct ACreature_Character* InCreatureCharacter); // Function Phoenix.CreatureFeedingTool.CalculateDynamicPelletReleaseVeloctiy // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x325df70
};

// Class Phoenix.CreatureGrowthHandler
// Size: 0x280 (Inherited: 0x248)
struct ACreatureGrowthHandler : AActor {
	struct AActor* TargetCreatureActor; // 0x248(0x08)
	struct AActor* NewCreatureActor; // 0x250(0x08)
	struct FName NewCreatureTypeID; // 0x258(0x08)
	float NewCreatureScaleVariation; // 0x260(0x04)
	char pad_264[0x1c]; // 0x264(0x1c)

	void TickFX(float DeltaSeconds); // Function Phoenix.CreatureGrowthHandler.TickFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void StartFX(); // Function Phoenix.CreatureGrowthHandler.StartFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void ShowNewCreature(); // Function Phoenix.CreatureGrowthHandler.ShowNewCreature // (Native|Protected|BlueprintCallable) // @ game+0x31e1780
	void OnNewCreatureReady(); // Function Phoenix.CreatureGrowthHandler.OnNewCreatureReady // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	bool IsNewCreatureReady(); // Function Phoenix.CreatureGrowthHandler.IsNewCreatureReady // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264fb0
	void Finish(); // Function Phoenix.CreatureGrowthHandler.Finish // (Native|Protected|BlueprintCallable) // @ game+0x31e03d0
};

// Class Phoenix.CreatureHatchHandler
// Size: 0x280 (Inherited: 0x280)
struct ACreatureHatchHandler : ACreatureGrowthHandler {
};

// Class Phoenix.CreatureGiveBirthHandler
// Size: 0x280 (Inherited: 0x280)
struct ACreatureGiveBirthHandler : ACreatureGrowthHandler {
};

// Class Phoenix.CreatureGrowUpHandler
// Size: 0x280 (Inherited: 0x280)
struct ACreatureGrowUpHandler : ACreatureGrowthHandler {
};

// Class Phoenix.CreatureGrowthHandlerConfiguration
// Size: 0xa8 (Inherited: 0x30)
struct UCreatureGrowthHandlerConfiguration : UDataAsset {
	struct TSoftClassPtr<UObject> HatchHandler; // 0x30(0x28)
	struct TSoftClassPtr<UObject> GiveBirthHandler; // 0x58(0x28)
	struct TSoftClassPtr<UObject> GrowUpHandler; // 0x80(0x28)
};

// Class Phoenix.CreatureLookAtTargetEvaluationConfig
// Size: 0x48 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluationConfig : UDataAsset {
	float ThresholdScore; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct UCreatureLookAtTargetEvaluation*> EvaluationArray; // 0x38(0x10)
};

// Class Phoenix.CreatureLookAtTargetEvaluation
// Size: 0x28 (Inherited: 0x28)
struct UCreatureLookAtTargetEvaluation : UObject {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Bool
// Size: 0x30 (Inherited: 0x28)
struct UCreatureLookAtTargetEvaluation_Bool : UCreatureLookAtTargetEvaluation {
	float Multiplier; // 0x28(0x04)
	bool bInverse; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Float
// Size: 0x38 (Inherited: 0x28)
struct UCreatureLookAtTargetEvaluation_Float : UCreatureLookAtTargetEvaluation {
	struct FVector2D ValueRange; // 0x28(0x08)
	struct FVector2D MultiplierRange; // 0x30(0x08)
};

// Class Phoenix.CreatureLookAtTargetEvaluation_FOV
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_FOV : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Distance
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_Distance : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Distance2D
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_Distance2D : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Heading
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_Heading : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_TimeAsTarget
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_TimeAsTarget : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_TimeSinceBeingTarget
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_TimeSinceBeingTarget : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_TimePerceived
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_TimePerceived : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_Speed
// Size: 0x38 (Inherited: 0x38)
struct UCreatureLookAtTargetEvaluation_Speed : UCreatureLookAtTargetEvaluation_Float {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_IsParent
// Size: 0x30 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_IsParent : UCreatureLookAtTargetEvaluation_Bool {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_IsChild
// Size: 0x30 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_IsChild : UCreatureLookAtTargetEvaluation_Bool {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_IsClass
// Size: 0x38 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_IsClass : UCreatureLookAtTargetEvaluation_Bool {
	struct AActor* Class; // 0x30(0x08)
};

// Class Phoenix.CreatureLookAtTargetEvaluation_IsPlayer
// Size: 0x30 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_IsPlayer : UCreatureLookAtTargetEvaluation_Bool {
};

// Class Phoenix.CreatureLookAtTargetEvaluation_InMoveDirection
// Size: 0x48 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_InMoveDirection : UCreatureLookAtTargetEvaluation_Bool {
	float StopMaxHeadingAngle; // 0x30(0x04)
	float WalkMaxHeadingAngle; // 0x34(0x04)
	float JogMaxHeadingAngle; // 0x38(0x04)
	float SprintMaxHeadingAngle; // 0x3c(0x04)
	float FlyingMaxHeadingAngle; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.CreatureLookAtTargetEvaluation_MatchingSubtypes
// Size: 0x40 (Inherited: 0x30)
struct UCreatureLookAtTargetEvaluation_MatchingSubtypes : UCreatureLookAtTargetEvaluation_Bool {
	struct FName CreatureTypeID; // 0x30(0x08)
	struct FName TargetTypeID; // 0x38(0x08)
};

// Class Phoenix.PhxDbRegistryTypeManager
// Size: 0xa8 (Inherited: 0x28)
struct UPhxDbRegistryTypeManager : UObject {
	char pad_28[0x80]; // 0x28(0x80)

	bool UnregisterSpawnWhenDestroyed(struct AActor* InAssetPtr); // Function Phoenix.PhxDbRegistryTypeManager.UnregisterSpawnWhenDestroyed // (Native|Public) // @ game+0x33f7b10
	bool RegisterNewSpawn(struct AActor* InAssetPtr); // Function Phoenix.PhxDbRegistryTypeManager.RegisterNewSpawn // (Native|Public) // @ game+0x33f7300
};

// Class Phoenix.CreatureManager
// Size: 0x790 (Inherited: 0xa8)
struct UCreatureManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x1a8]; // 0xa8(0x1a8)
	struct TMap<int32_t, struct UCreatureState*> CreatureStates; // 0x250(0x50)
	struct TMap<struct FName, struct UCreatureDefinition*> CreatureDefinitions; // 0x2a0(0x50)
	char pad_2F0[0x100]; // 0x2f0(0x100)
	struct UCreatureScalabilityManager* CreatureScalabilityManager; // 0x3f0(0x08)
	struct TMap<uint32_t, struct UCreatureFeedingStationState*> FeedingStationStates; // 0x3f8(0x50)
	struct FGameplayProperty_Float ByproductProductionTimeMultiplier; // 0x448(0x90)
	struct FGameplayProperty_Float RareVariationSpawnMultiplier; // 0x4d8(0x90)
	struct FGameplayProperty_Float BreedRareVariationChanceMultiplier; // 0x568(0x90)
	struct TArray<struct UObject*> PreLoadedAssets; // 0x5f8(0x10)
	char pad_608[0x188]; // 0x608(0x188)

	void UpdateCreatureName(struct UCreatureState* CreatureState, struct FString Name); // Function Phoenix.CreatureManager.UpdateCreatureName // (Final|Native|Public|BlueprintCallable) // @ game+0x3266400
	void UnlockAllCreatureToys(); // Function Phoenix.CreatureManager.UnlockAllCreatureToys // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1074730
	void TeleportCreatureActorsToPen(struct ACreaturePen* PenActor); // Function Phoenix.CreatureManager.TeleportCreatureActorsToPen // (Final|Native|Public|BlueprintCallable) // @ game+0x3266370
	bool SummonCreature(struct UCreatureState* InCreatureState, struct ABiped_Player* InSummoningPlayer, struct FString& OutErrorKey); // Function Phoenix.CreatureManager.SummonCreature // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3266240
	struct AActor* SpawnShell(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel); // Function Phoenix.CreatureManager.SpawnShell // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3265f70
	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.CreatureManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3265c60
	struct TArray<struct UCreatureState*> SortCreaturesByHappiness(struct TArray<struct UCreatureState*> Creatures); // Function Phoenix.CreatureManager.SortCreaturesByHappiness // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3265b30
	void SetCreatureInspectedByPlayerUID(int32_t InCreatureUID); // Function Phoenix.CreatureManager.SetCreatureInspectedByPlayerUID // (Final|Native|Public|BlueprintCallable) // @ game+0x3265aa0
	void ScrapCreature(int32_t InCreatureUID); // Function Phoenix.CreatureManager.ScrapCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3265a10
	void SaveData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.CreatureManager.SaveData // (Native|Public) // @ game+0x32658b0
	void SaveCreatureUID(struct FString InSaveID, int32_t InUIDToSave); // Function Phoenix.CreatureManager.SaveCreatureUID // (Final|Native|Public|BlueprintCallable) // @ game+0x32657d0
	void RestoreData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.CreatureManager.RestoreData // (Native|Public) // @ game+0x3265670
	void RemoveSavedCreature(struct FString InSaveID); // Function Phoenix.CreatureManager.RemoveSavedCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x32655b0
	void RemoveCreatureFromInventory(int32_t InCreatureUID, bool bInRemovedByMission, bool bInSuppressHUDNotification); // Function Phoenix.CreatureManager.RemoveCreatureFromInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x3265460
	void ReleaseCreatureToNurturingSpace(int32_t InCreatureUID, struct FName InNurturingSpaceID, struct ABiped_Player* InReleasingPlayer); // Function Phoenix.CreatureManager.ReleaseCreatureToNurturingSpace // (Final|Native|Public|BlueprintCallable) // @ game+0x3265350
	struct UCreatureState* RegisterCapturedCreature(struct FName InTypeID, bool bInIsMale, struct FName InColorVariation); // Function Phoenix.CreatureManager.RegisterCapturedCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3265240
	void OnSaveGameLoaded(); // Function Phoenix.CreatureManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3265220
	void OnNewGame(); // Function Phoenix.CreatureManager.OnNewGame // (Final|Native|Public) // @ game+0x3265200
	void OnGameToBeSaved(); // Function Phoenix.CreatureManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x32651e0
	void OnCreatureInteractedWith(struct AActor* InCreature, enum class ECreatureInteraction InInteractionType, struct FName InKnowledgeGainedActor, struct FName InActorInteractedWithTypeID); // Function Phoenix.CreatureManager.OnCreatureInteractedWith // (Final|Native|Public|BlueprintCallable) // @ game+0x3265080
	bool IsPenOccupied(int32_t PenUID); // Function Phoenix.CreatureManager.IsPenOccupied // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264fe0
	bool IsCreatureInInventory(int32_t InCreatureUID); // Function Phoenix.CreatureManager.IsCreatureInInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264f10
	bool HasCapturedCreatureInventoryEnoughSpace(); // Function Phoenix.CreatureManager.HasCapturedCreatureInventoryEnoughSpace // (Final|Native|Public|BlueprintCallable) // @ game+0x3264ee0
	bool GetShellSpawnPath(struct FString InItemID, struct FSoftObjectPath& OutPath); // Function Phoenix.CreatureManager.GetShellSpawnPath // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3264dc0
	struct UCreatureState* GetSavedCreature(struct FString InSaveID); // Function Phoenix.CreatureManager.GetSavedCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3264d10
	int32_t GetRandomCreatureUIDFromInventory(struct FName InCreatureTypeID); // Function Phoenix.CreatureManager.GetRandomCreatureUIDFromInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264c70
	struct UCreatureState* GetOffspringCreatureInPen(int32_t PenUID); // Function Phoenix.CreatureManager.GetOffspringCreatureInPen // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264bd0
	int32_t GetNumberOfBreedableCreaturesOfTypeInNurtureSpace(struct FName TypeID, struct FName NurturingSpaceID, bool bIncludeMale, bool bIncludeFemale); // Function Phoenix.CreatureManager.GetNumberOfBreedableCreaturesOfTypeInNurtureSpace // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x3264a50
	struct UCreatureState* GetMotherCreatureInPen(int32_t PenUID); // Function Phoenix.CreatureManager.GetMotherCreatureInPen // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32649b0
	int32_t GetMaxNumSpeciesInNurturingSpace(struct FName InNurturingSpaceID); // Function Phoenix.CreatureManager.GetMaxNumSpeciesInNurturingSpace // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264910
	int32_t GetMaxNumCreaturesInNurturingSpace(struct FName InNurturingSpaceID); // Function Phoenix.CreatureManager.GetMaxNumCreaturesInNurturingSpace // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264870
	int32_t GetMaxCreatureTierInNurturingSpace(struct FName InNurturingSpaceID); // Function Phoenix.CreatureManager.GetMaxCreatureTierInNurturingSpace // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32647d0
	float GetHealth(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.CreatureManager.GetHealth // (Native|Public) // @ game+0x3264680
	struct TArray<struct UCreatureState*> GetHappyCreaturesInSanctuary(); // Function Phoenix.CreatureManager.GetHappyCreaturesInSanctuary // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264600
	float GetDeathTimeoutPercentage(struct FString InCreatureID); // Function Phoenix.CreatureManager.GetDeathTimeoutPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264550
	struct FName GetCurrentCreatureNurturingSpaceID(); // Function Phoenix.CreatureManager.GetCurrentCreatureNurturingSpaceID // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3264510
	int32_t GetCreatureUIDFromVariationName(struct FName InUIDName); // Function Phoenix.CreatureManager.GetCreatureUIDFromVariationName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3264450
	int32_t GetCreatureInspectedByPlayerUID(); // Function Phoenix.CreatureManager.GetCreatureInspectedByPlayerUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264430
	int32_t GetCreatureEconomyValue(struct FName InCreatureUID); // Function Phoenix.CreatureManager.GetCreatureEconomyValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3264390
	struct TArray<struct UCreatureState*> GetCapturedCreatureStatesOfType(struct FName InAdultTypeID); // Function Phoenix.CreatureManager.GetCapturedCreatureStatesOfType // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32641d0
	struct TArray<int32_t> GetCapturedCreaturesOfType(struct FName InTypeID); // Function Phoenix.CreatureManager.GetCapturedCreaturesOfType // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32642b0
	int32_t GetCapturedCreatureInventorySize(); // Function Phoenix.CreatureManager.GetCapturedCreatureInventorySize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32641a0
	float GetByproductProductionTimeModifier(); // Function Phoenix.CreatureManager.GetByproductProductionTimeModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3252b50
	struct TMap<struct FName, int32_t> GetAllCreatureSpeciesInNurturingSpace(struct FName InNurturingSpaceID); // Function Phoenix.CreatureManager.GetAllCreatureSpeciesInNurturingSpace // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3263ea0
	struct TArray<struct UCreatureState*> GetAllCreaturesInNurturingSpace(struct FName InNurturingSpaceID, bool bIncludeUnbornCreatures, bool bIncludeEggs, bool bSortByTimeInNurturingSpace); // Function Phoenix.CreatureManager.GetAllCreaturesInNurturingSpace // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3263fc0
	struct TArray<struct UCreatureDefinition*> GetAllCreatureDefinitions(); // Function Phoenix.CreatureManager.GetAllCreatureDefinitions // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3263e20
	void GetAllCreatureByproducts(int32_t AmountToGrant); // Function Phoenix.CreatureManager.GetAllCreatureByproducts // (Final|Exec|Native|Public) // @ game+0x321dc10
	struct TArray<struct FName> GetAllColorVariationsForCreature(struct FName InTypeID); // Function Phoenix.CreatureManager.GetAllColorVariationsForCreature // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3263d40
	struct UCreatureManager* Get(); // Function Phoenix.CreatureManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3263d10
	struct AActor* FindCreatureActorByUID(int32_t InCreatureUID); // Function Phoenix.CreatureManager.FindCreatureActorByUID // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3263c70
	void CreatureStateBackup(); // Function Phoenix.CreatureManager.CreatureStateBackup // (Final|Exec|Native|Private) // @ game+0x3263c10
	void CreatureSpawnWildMany(struct FName TypeID, int32_t Count); // Function Phoenix.CreatureManager.CreatureSpawnWildMany // (Final|Exec|Native|Public) // @ game+0x3263b40
	void CreatureSpawnWild(struct FName TypeID); // Function Phoenix.CreatureManager.CreatureSpawnWild // (Final|Exec|Native|Public) // @ game+0x3263ab0
	void CreatureSpawnMany(struct FName TypeID, int32_t Count); // Function Phoenix.CreatureManager.CreatureSpawnMany // (Final|Exec|Native|Public) // @ game+0x32639e0
	void CreatureSpawn(struct FName TypeID); // Function Phoenix.CreatureManager.CreatureSpawn // (Final|Exec|Native|Public) // @ game+0x3263950
	void CreatureSimulateCapturePregnant(struct FName TypeID); // Function Phoenix.CreatureManager.CreatureSimulateCapturePregnant // (Final|Exec|Native|Public) // @ game+0x32638c0
	void CreatureSimulateCapture(struct FName TypeID, bool bIsMale, struct FName ColorVariation); // Function Phoenix.CreatureManager.CreatureSimulateCapture // (Final|Exec|Native|Public) // @ game+0x32637b0
	void CreatureSimulateBreeding(struct FName TypeID); // Function Phoenix.CreatureManager.CreatureSimulateBreeding // (Final|Exec|Native|Public) // @ game+0x3263720
	void CreatureResetAllNeeds(); // Function Phoenix.CreatureManager.CreatureResetAllNeeds // (Final|Exec|Native|Public) // @ game+0x3263700
	void CreatureRemoveAll(); // Function Phoenix.CreatureManager.CreatureRemoveAll // (Final|Exec|Native|Public) // @ game+0x32636e0
	void CreatureRegisterAllCreaturesInLevel(); // Function Phoenix.CreatureManager.CreatureRegisterAllCreaturesInLevel // (Final|Exec|Native|Public) // @ game+0x32636c0
	void CreaturePetNearest(); // Function Phoenix.CreatureManager.CreaturePetNearest // (Final|Exec|Native|Public) // @ game+0x32636a0
	void CreatureMeetAllNeeds(); // Function Phoenix.CreatureManager.CreatureMeetAllNeeds // (Final|Exec|Native|Public) // @ game+0x3263680
	void CreatureFeedNearest(); // Function Phoenix.CreatureManager.CreatureFeedNearest // (Final|Exec|Native|Public) // @ game+0x3263660
	void CreatureClearCapturedInventory(); // Function Phoenix.CreatureManager.CreatureClearCapturedInventory // (Final|Exec|Native|Public) // @ game+0x3263640
	void CreatureAdvancedSpawn(struct FName TypeID, bool bIsMale, struct FName ColorVariation, float ScaleVariation, struct FString CreatureName, int32_t BreedingGeneration); // Function Phoenix.CreatureManager.CreatureAdvancedSpawn // (Final|Exec|Native|Public) // @ game+0x3263400
	void CreatureAddToBiomeIfNeeded(struct FName InCreatureType, struct FName InBiomeID); // Function Phoenix.CreatureManager.CreatureAddToBiomeIfNeeded // (Final|Exec|Native|Public) // @ game+0x3263330
	void CreatureAddNamedToInventory(struct FName NamedCreatureID); // Function Phoenix.CreatureManager.CreatureAddNamedToInventory // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x32632a0
	void CreatureAddHappinessToAll(float Amount); // Function Phoenix.CreatureManager.CreatureAddHappinessToAll // (Final|Exec|Native|Public) // @ game+0x3263220
	void CaptureCreature(int32_t InCreatureUID); // Function Phoenix.CreatureManager.CaptureCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3263190
	bool CanReleaseCreatureToNurturingSpace(struct UCreatureState* InCreatureState, struct FName InNurturingSpaceID, struct ABiped_Player* InReleasingPlayer, struct FString& OutErrorKey); // Function Phoenix.CreatureManager.CanReleaseCreatureToNurturingSpace // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x3263010
	bool CanCreaturePairBreed(int32_t InCreatureA, int32_t InCreatureB, struct FString& CreatureAErrorMsg, struct FString& CreatureBErrorMsg); // Function Phoenix.CreatureManager.CanCreaturePairBreed // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x3262e60
	void BreedCreatures(struct UCreatureState* MotherState, struct UCreatureState* FatherState, struct ACreaturePen* CreaturePen); // Function Phoenix.CreatureManager.BreedCreatures // (Final|Native|Public|BlueprintCallable) // @ game+0x3262d50
	void BP_ScrapCreatureByFName(struct FName InCreatureUID); // Function Phoenix.CreatureManager.BP_ScrapCreatureByFName // (Final|Native|Public|BlueprintCallable) // @ game+0x3262bf0
	struct UCreatureState* BP_GetCreatureStateByUID(int32_t InCreatureUID); // Function Phoenix.CreatureManager.BP_GetCreatureStateByUID // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x3262b50
	struct UCreatureState* BP_GetCreatureStateByFName(struct FName InCreatureUID); // Function Phoenix.CreatureManager.BP_GetCreatureStateByFName // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x3262a80
	struct UCreatureState* BP_GetCreatureStateByActor(struct AActor* InCreature); // Function Phoenix.CreatureManager.BP_GetCreatureStateByActor // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x32629e0
	struct UCreatureDefinition* BP_GetCreatureDefinitionForActor(struct AActor* InCreature); // Function Phoenix.CreatureManager.BP_GetCreatureDefinitionForActor // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x3262940
	struct UCreatureDefinition* BP_GetCreatureDefinitionByType(struct FName InTypeID); // Function Phoenix.CreatureManager.BP_GetCreatureDefinitionByType // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x32628a0
	void BeginCreatureGrowUp(struct AActor* InCreature); // Function Phoenix.CreatureManager.BeginCreatureGrowUp // (Final|Native|Public|BlueprintCallable) // @ game+0x3262cc0
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.CreatureManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.CreatureMountHandler
// Size: 0x5f0 (Inherited: 0x248)
struct ACreatureMountHandler : AActor {
	struct FSpawnSelectInfo DbIdInfo; // 0x248(0x80)
	struct ACreature_Character* CreatureClass; // 0x2c8(0x08)
	struct USkeletalMesh* CreatureSkeletalMeshPreload; // 0x2d0(0x08)
	struct TArray<struct UMaterialInstance*> CreatureMaterialsPreload; // 0x2d8(0x10)
	struct FName MountedStat; // 0x2e8(0x08)
	struct UAblAbility* PlayerMountAbility; // 0x2f0(0x08)
	struct UAblAbility* RiderPostDismountAbility; // 0x2f8(0x08)
	struct UInteractionArchitectAsset* ExistingCreatureInitialInteractionArchitectAsset; // 0x300(0x08)
	struct UMountStreamingComponent* MountStreamingComponentClass; // 0x308(0x08)
	struct UMountHeightLimitComponent* MountHeightLimitComponentClass; // 0x310(0x08)
	struct UCreature_RiderComponent* CreatureRiderComponentClass; // 0x318(0x08)
	struct UCreature_MountComponent* CreatureMountComponentClass; // 0x320(0x08)
	struct UMovementPredictionComponent* MovementPredictionComponentClass; // 0x328(0x08)
	struct AMountedAI_Controller* MountedAIControllerClass; // 0x330(0x08)
	struct AActor* CreatureMountVFXActorClass; // 0x338(0x08)
	struct UInteractionArchitectAsset* MountedReactionsAsset; // 0x340(0x08)
	struct UInteractionArchitectAsset* MountedInteractionsAsset; // 0x348(0x08)
	struct FGameplayTagContainer ImmunityTagContainer; // 0x350(0x20)
	struct FNoMountZoneAvoidanceParams NoMountZoneAvoidanceParams; // 0x370(0x1c)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct ACreatureMountTransitionActor* MountTransitionActorClass; // 0x390(0x08)
	struct FName MountTransitionActorAttachSocket; // 0x398(0x08)
	bool bAdjustSpawnForCollision; // 0x3a0(0x01)
	char pad_3A1[0xf]; // 0x3a1(0x0f)
	struct FCreatureMountSpawnLocationHandler SpawnLocationHandler; // 0x3b0(0xa0)
	enum class EMountTypes CreatureMountType; // 0x450(0x01)
	char pad_451[0x3]; // 0x451(0x03)
	struct FName MountCapsuleName; // 0x454(0x08)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct UPhysicsAsset* CreaturePhysicAssetForRiderCloth; // 0x460(0x08)
	struct FClothMountTargets ClothMountTargets; // 0x468(0x18)
	struct FName LevelScalingOverrideName; // 0x480(0x08)
	struct FMountCognitionSenseParams MountCognitionParams; // 0x488(0x18)
	struct FMountCognitionSenseParams OriginalBipedCognitionParams; // 0x4a0(0x18)
	bool bDestroyHandlerAfterDismount; // 0x4b8(0x01)
	bool bDestroyCreatureAfterDismount; // 0x4b9(0x01)
	char pad_4BA[0x6]; // 0x4ba(0x06)
	struct ACharacter* RiderCharacter; // 0x4c0(0x08)
	struct ACreature_Character* CreatureCharacter; // 0x4c8(0x08)
	struct AController* RiderController; // 0x4d0(0x08)
	struct AController* PreviousCreatureController; // 0x4d8(0x08)
	struct AController* PreviousRiderController; // 0x4e0(0x08)
	struct ACreatureMountTransitionActor* MountTransitionActor; // 0x4e8(0x08)
	char pad_4F0[0x10]; // 0x4f0(0x10)
	float ChargeUnavailableMessageTimeout; // 0x500(0x04)
	float ChargeOnCooldownMessageTimeout; // 0x504(0x04)
	struct UCreature_MountLandingDynamics* FlightLandingDynamics; // 0x508(0x08)
	struct TMap<enum class ECreatureMountErrorMessages, struct FName> CreatureMountErrors; // 0x510(0x50)
	char pad_560[0x18]; // 0x560(0x18)
	struct AActor* CreatureMountVFXActor; // 0x578(0x08)
	struct UInteractionArchitectAsset* PreviousMountReactionsAsset; // 0x580(0x08)
	struct UInteractionArchitectAsset* PreviousMountInteractionsAsset; // 0x588(0x08)
	char pad_590[0x60]; // 0x590(0x60)

	bool ToggleCreatureMountCapsule(struct ACreature_Character* InCreatureCharacter, struct FName& InName, bool bInEnabled); // Function Phoenix.CreatureMountHandler.ToggleCreatureMountCapsule // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3269c30
	void SpawnAndMountCreature(struct ACharacter* InRiderCharacter, bool bInUseTransition, bool bInInFlight); // Function Phoenix.CreatureMountHandler.SpawnAndMountCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3269a50
	void PlayerPossessRider(); // Function Phoenix.CreatureMountHandler.PlayerPossessRider // (Final|Native|Public|BlueprintCallable) // @ game+0x32697e0
	void PlayerPossessCreature(); // Function Phoenix.CreatureMountHandler.PlayerPossessCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x32697c0
	void OnPostDismountCreature(); // Function Phoenix.CreatureMountHandler.OnPostDismountCreature // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPostCreatureMountSpawn(); // Function Phoenix.CreatureMountHandler.OnPostCreatureMountSpawn // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHoverDroneControlModeChanged(enum class EHoverDroneControlMode NewMode); // Function Phoenix.CreatureMountHandler.OnHoverDroneControlModeChanged // (Final|Native|Protected) // @ game+0x32075c0
	void MountExistingCreature(struct ACharacter* InRiderCharacter, struct ACreature_Character* InCreatureCharacter); // Function Phoenix.CreatureMountHandler.MountExistingCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3269370
	bool IsMountType(enum class EMountTypes InType); // Function Phoenix.CreatureMountHandler.IsMountType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3269280
	void DismountCreature(bool bInUseTransition); // Function Phoenix.CreatureMountHandler.DismountCreature // (Native|Public|BlueprintCallable) // @ game+0x1545db0
};

// Class Phoenix.CreatureMountItemTool
// Size: 0x448 (Inherited: 0x430)
struct ACreatureMountItemTool : AInventoryItemTool {
	struct ACreatureMountHandler* MountHandlerClass; // 0x430(0x08)
	struct ACreatureMountHandler* MountHandler; // 0x438(0x08)
	char pad_440[0x8]; // 0x440(0x08)

	void SpawnAndMountCreature(bool bUseTransition, bool bInFlight); // Function Phoenix.CreatureMountItemTool.SpawnAndMountCreature // (Final|Native|Public|BlueprintCallable) // @ game+0x3269b60
};

// Class Phoenix.CreatureMountTransitionActor
// Size: 0x3c0 (Inherited: 0x248)
struct ACreatureMountTransitionActor : AActor {
	struct UAblAbility* PlayerMountAbility_Start; // 0x248(0x08)
	struct UAblAbility* PlayerMountAbility_Cancel; // 0x250(0x08)
	struct UAblAbility* PlayerMountAbility_Standing; // 0x258(0x08)
	struct UAblAbility* PlayerMountAbility_Trot; // 0x260(0x08)
	struct UAblAbility* PlayerMountAbility_Standing_End_Partial; // 0x268(0x08)
	struct UAblAbility* PlayerMountAbility_Trot_End_Partial; // 0x270(0x08)
	struct UAblAbility* CreatureAbility_Standing_FromBag; // 0x278(0x08)
	struct UAblAbility* CreatureAbility_Trot_FromBag; // 0x280(0x08)
	struct UAblAbility* PlayerDismountAbility_Standing_Start; // 0x288(0x08)
	struct UAblAbility* PlayerDismountAbility_Trot_Start; // 0x290(0x08)
	struct UAblAbility* PlayerDismountAbility_Standing; // 0x298(0x08)
	struct UAblAbility* PlayerDismountAbility_Trot; // 0x2a0(0x08)
	struct UAblAbility* PlayerDismountAbility_End; // 0x2a8(0x08)
	struct UAblAbility* CreatureAbility_Standing_ToBag; // 0x2b0(0x08)
	struct UAblAbility* CreatureAbility_Trot_ToBag; // 0x2b8(0x08)
	enum class EMountTransitionAnimState MountTransitionAnimState; // 0x2c0(0x01)
	bool bUseCreatureMountBagVFX; // 0x2c1(0x01)
	char pad_2C2[0x6]; // 0x2c2(0x06)
	struct ASkinFXDefinition* MountSkinFXPreload; // 0x2c8(0x08)
	struct USkeletalMesh* MountSkinFXPreloadMesh; // 0x2d0(0x08)
	char pad_2D8[0xa0]; // 0x2d8(0xa0)
	struct ACharacter* RiderCharacter; // 0x378(0x08)
	struct ACreature_Character* CreatureCharacter; // 0x380(0x08)
	char pad_388[0x28]; // 0x388(0x28)
	struct UMaterialPermuterLoadingBundle* SkinFXLoadingBundle; // 0x3b0(0x08)
	char pad_3B8[0x8]; // 0x3b8(0x08)

	void OnKnockdownDismountStart(); // Function Phoenix.CreatureMountTransitionActor.OnKnockdownDismountStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnKnockdownDismountEndCallback(); // Function Phoenix.CreatureMountTransitionActor.OnKnockdownDismountEndCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x32697a0
	void OnCreatureOutOfBagStart(); // Function Phoenix.CreatureMountTransitionActor.OnCreatureOutOfBagStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCreatureOutOfBagEnd(); // Function Phoenix.CreatureMountTransitionActor.OnCreatureOutOfBagEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCreatureIntoBagStart(); // Function Phoenix.CreatureMountTransitionActor.OnCreatureIntoBagStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCreatureIntoBagEnd(); // Function Phoenix.CreatureMountTransitionActor.OnCreatureIntoBagEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CreatureNurturingVolumeBase
// Size: 0x258 (Inherited: 0x250)
struct ACreatureNurturingVolumeBase : ATriggerBox {
	char pad_250[0x8]; // 0x250(0x08)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CreatureNurturingVolumeBase.OnEndOverlap // (Final|Native|Private) // @ game+0x3269600
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CreatureNurturingVolumeBase.OnBeginOverlap // (Final|Native|Private) // @ game+0x3269440
};

// Class Phoenix.CreatureNurturingVolume
// Size: 0x260 (Inherited: 0x258)
struct ACreatureNurturingVolume : ACreatureNurturingVolumeBase {
	struct FName NurturingSpaceID; // 0x258(0x08)
};

// Class Phoenix.CreatureNurturingVolumeSupressor
// Size: 0x258 (Inherited: 0x258)
struct ACreatureNurturingVolumeSupressor : ACreatureNurturingVolumeBase {
};

// Class Phoenix.CreaturePen
// Size: 0x2c0 (Inherited: 0x2a8)
struct ACreaturePen : ATransfigurationObjectBase {
	struct ATriggerBase* CachedWalkOutTrigger; // 0x2a8(0x08)
	char pad_2B0[0x10]; // 0x2b0(0x10)

	void UpdateCallout(); // Function Phoenix.CreaturePen.UpdateCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void OnDressingReady(); // Function Phoenix.CreaturePen.OnDressingReady // (Final|Native|Public|BlueprintCallable) // @ game+0x32695e0
	void OnCreatureSpawned(struct UCreatureState* CreatureState, struct AActor* CreatureActor); // Function Phoenix.CreaturePen.OnCreatureSpawned // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBreedingStarted(struct UCreatureState* OffspringState, struct UCreatureState* MotherState); // Function Phoenix.CreaturePen.OnBreedingStarted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBreedingFinished(); // Function Phoenix.CreaturePen.OnBreedingFinished // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool IsReadyToSlotCreature(); // Function Phoenix.CreaturePen.IsReadyToSlotCreature // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x3269340
	bool IsOccupied(); // Function Phoenix.CreaturePen.IsOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3269310
};

// Class Phoenix.CreaturePerceptionVolume
// Size: 0x298 (Inherited: 0x280)
struct ACreaturePerceptionVolume : AVolume {
	enum class ECreaturePerceptionVolumeType VolumeType; // 0x280(0x04)
	char pad_284[0x14]; // 0x284(0x14)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CreaturePerceptionVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x32696d0
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.CreaturePerceptionVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x3269510
};

// Class Phoenix.CreaturePerchManager
// Size: 0x118 (Inherited: 0x28)
struct UCreaturePerchManager : UObject {
	char pad_28[0xf0]; // 0x28(0xf0)
};

// Class Phoenix.CreaturePerch
// Size: 0x258 (Inherited: 0x248)
struct ACreaturePerch : AActor {
	bool bIsBidirectional; // 0x248(0x01)
	char pad_249[0xf]; // 0x249(0x0f)
};

// Class Phoenix.CreaturePerchComponent
// Size: 0x4b0 (Inherited: 0x4a0)
struct UCreaturePerchComponent : UArrowComponent {
	bool bIsBidirectional; // 0x498(0x01)
	char pad_4A1[0xf]; // 0x4a1(0x0f)
};

// Class Phoenix.CreaturePettingBrushFloatingComponent
// Size: 0x1b0 (Inherited: 0xc8)
struct UCreaturePettingBrushFloatingComponent : UActorComponent {
	float FloatingAmplitude; // 0xc8(0x04)
	float FloatingFrequency; // 0xcc(0x04)
	float FloatingStiffness; // 0xd0(0x04)
	float FloatingMaxExtension; // 0xd4(0x04)
	float FloatingDamping; // 0xd8(0x04)
	float FloatingScaleInterpolationSpeed; // 0xdc(0x04)
	float FloatingRotationInterpolationSpeed; // 0xe0(0x04)
	float FloatingMaxForce; // 0xe4(0x04)
	bool bClampForce; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	float AttachedBlendTime; // 0xec(0x04)
	float AttachedDamping; // 0xf0(0x04)
	float AttachedLocationInterpolationSpeedMin; // 0xf4(0x04)
	float AttachedLocationInterpolationSpeedMax; // 0xf8(0x04)
	float AttachedRotationInterpolationSpeedMin; // 0xfc(0x04)
	float AttachedRotationInterpolationSpeedMax; // 0x100(0x04)
	float AttachedScaleInterpolationSpeedMin; // 0x104(0x04)
	float AttachedScaleInterpolationSpeedMax; // 0x108(0x04)
	float AttachedInterpolationSpeedAfterBlend; // 0x10c(0x04)
	bool bApplyScaling; // 0x110(0x01)
	char pad_111[0x9f]; // 0x111(0x9f)

	void SetTargetTransformAndVelocity(struct FTransform& InTargetTransform, struct FVector& InVelocity); // Function Phoenix.CreaturePettingBrushFloatingComponent.SetTargetTransformAndVelocity // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3269930
	void SetOscillationEnabled(bool bInEnabled); // Function Phoenix.CreaturePettingBrushFloatingComponent.SetOscillationEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32698a0
	void SetFloatingState(enum class ECreaturePettingBrushFloatingState InFloatingState); // Function Phoenix.CreaturePettingBrushFloatingComponent.SetFloatingState // (Final|Native|Public|BlueprintCallable) // @ game+0x3269820
};

// Class Phoenix.CreaturePettingTool
// Size: 0x450 (Inherited: 0x450)
struct ACreaturePettingTool : ACreatureInteractionTool {

	void RemoveAimAtTarget(); // Function Phoenix.CreaturePettingTool.RemoveAimAtTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3269800
	void AddAimAtTarget(); // Function Phoenix.CreaturePettingTool.AddAimAtTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3269260
};

// Class Phoenix.CreatureScalabilityManager
// Size: 0x128 (Inherited: 0x28)
struct UCreatureScalabilityManager : UObject {
	char pad_28[0x100]; // 0x28(0x100)
};

// Class Phoenix.CreatureSettings
// Size: 0x128 (Inherited: 0x28)
struct UCreatureSettings : UObject {
	float HappinessThresholdForPerkConsideration; // 0x28(0x04)
	float HappinessStartValueWhenCaptured; // 0x2c(0x04)
	float HappinessStartValue1stGeneration; // 0x30(0x04)
	float HappinessStartValue2ndGeneration; // 0x34(0x04)
	float HappinessCapWhenCaptured; // 0x38(0x04)
	float HappinessCap1stGeneration; // 0x3c(0x04)
	float HappinessCap2ndGeneration; // 0x40(0x04)
	float HappinessGainedWhenFed; // 0x44(0x04)
	float HappinessGainedWhenInteractedWith; // 0x48(0x04)
	float HappinessGainedWhenByproductHarvested; // 0x4c(0x04)
	float MinTimeBetweenHappinessChangesFromDamage; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct TArray<float> HappinessForConsecutiveDamage; // 0x58(0x10)
	float TimeoutForConsecutiveDamageReset; // 0x68(0x04)
	float HappinessForNeighborDeath; // 0x6c(0x04)
	float ConflictPreventedDurationSeconds; // 0x70(0x04)
	struct FName ByproductProductionLock; // 0x74(0x08)
	struct FName ByproductCollectionLock; // 0x7c(0x08)
	struct FName NurturingSpaceContextLock; // 0x84(0x08)
	float FemaleEconomyValuePercent; // 0x8c(0x04)
	float AlbinoEconomyValuePercent; // 0x90(0x04)
	float CommonColorVariationEconomyValuePercent; // 0x94(0x04)
	float HappinessEconomyValuePercent; // 0x98(0x04)
	int32_t RepopulationTimeHour; // 0x9c(0x04)
	int32_t RepopulationExpiryTimeMinutes; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct TMap<struct FName, int32_t> FeedingStationCapacities; // 0xa8(0x50)
	struct FName CreatureFeedItemID; // 0xf8(0x08)
	int32_t DefaultFeedConversionTimeSec; // 0x100(0x04)
	struct FName DefaultToyID; // 0x104(0x08)
	float PreferredGroundSlopeAngleMax; // 0x10c(0x04)
	float PreferredDistanceToPathMin; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct TArray<struct FSoftObjectPath> PreloadedAssetPaths; // 0x118(0x10)
};

// Class Phoenix.CreatureSpawnSlotComponent
// Size: 0x4b0 (Inherited: 0x480)
struct UCreatureSpawnSlotComponent : UPrimitiveComponent {
	bool bIsOffspringSlot; // 0x480(0x01)
	bool bSpawnPerched; // 0x481(0x01)
	bool bUseExitAnimation; // 0x482(0x01)
	char pad_483[0x5]; // 0x483(0x05)
	struct UAnimationAsset* ExitAnimationAsset; // 0x488(0x08)
	bool bExitFlying; // 0x490(0x01)
	bool bRestrictSpecies; // 0x491(0x01)
	char pad_492[0x6]; // 0x492(0x06)
	struct TArray<struct FName> AllowedSpecies; // 0x498(0x10)
	char pad_4A8[0x8]; // 0x4a8(0x08)

	bool IsOccupied(); // Function Phoenix.CreatureSpawnSlotComponent.IsOccupied // (Final|Native|Public|BlueprintCallable) // @ game+0x326ce70
	struct FTransform GetSpawnTransform(); // Function Phoenix.CreatureSpawnSlotComponent.GetSpawnTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c970
};

// Class Phoenix.CreatureState
// Size: 0x148 (Inherited: 0x28)
struct UCreatureState : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct FMulticastInlineDelegate ByproductCooldownEndedDelegate; // 0x48(0x10)
	struct FMulticastInlineDelegate ByproductHarvestedDelegate; // 0x58(0x10)
	struct FMulticastInlineDelegate NeedsChangedDelegate; // 0x68(0x10)
	struct FMulticastInlineDelegate HappinessChangedDelegate; // 0x78(0x10)
	struct FMulticastInlineDelegate PregnancyStateChangedDelegate; // 0x88(0x10)
	struct FMulticastInlineDelegate CreatureActorSpawnedDelegate; // 0x98(0x10)
	char pad_A8[0xa0]; // 0xa8(0xa0)

	void SetIsUncapturable(bool bInIsUncapturable); // Function Phoenix.CreatureState.SetIsUncapturable // (Final|Native|Public|BlueprintCallable) // @ game+0x326d0a0
	void SetCanReturnToWild(bool bInCanReturnToWild); // Function Phoenix.CreatureState.SetCanReturnToWild // (Final|Native|Public|BlueprintCallable) // @ game+0x326d010
	void OnHarvestByproduct(struct FName CollectorID); // Function Phoenix.CreatureState.OnHarvestByproduct // (Final|Native|Public|BlueprintCallable) // @ game+0x326cf80
	bool IsUnbornCreature(); // Function Phoenix.CreatureState.IsUnbornCreature // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cf50
	bool IsPregnant(); // Function Phoenix.CreatureState.IsPregnant // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cf20
	bool IsNeedMet(enum class ECreatureNeed CreatureNeed); // Function Phoenix.CreatureState.IsNeedMet // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326cde0
	bool IsInSanctuary(); // Function Phoenix.CreatureState.IsInSanctuary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cd80
	bool IsIncubating(); // Function Phoenix.CreatureState.IsIncubating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cdb0
	bool IsInConflict(); // Function Phoenix.CreatureState.IsInConflict // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326cd60
	bool IsHappyEnoughToPlayWithToy(); // Function Phoenix.CreatureState.IsHappyEnoughToPlayWithToy // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326cd30
	bool IsEgg(); // Function Phoenix.CreatureState.IsEgg // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326ccb0
	bool IsCreatureCaptured(); // Function Phoenix.CreatureState.IsCreatureCaptured // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cc10
	bool IsByproductOnCooldown(); // Function Phoenix.CreatureState.IsByproductOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cbd0
	bool IsAlbino(); // Function Phoenix.CreatureState.IsAlbino // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cb90
	struct UCreatureState* GetUnbornChildState(); // Function Phoenix.CreatureState.GetUnbornChildState // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326cad0
	struct FName GetTypeID(); // Function Phoenix.CreatureState.GetTypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cab0
	struct FText GetTranslatedCreatureDisplayName(); // Function Phoenix.CreatureState.GetTranslatedCreatureDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326ca10
	struct FTimespan GetTimeLeftToGrowUp(); // Function Phoenix.CreatureState.GetTimeLeftToGrowUp // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c9d0
	float GetScaleVariation(); // Function Phoenix.CreatureState.GetScaleVariation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c2d0
	enum class ECreaturePregnancyState GetPregnancyState(); // Function Phoenix.CreatureState.GetPregnancyState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c950
	struct FDateTime GetPregnancyStartDateTime(); // Function Phoenix.CreatureState.GetPregnancyStartDateTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x23666d0
	int32_t GetPenUID(); // Function Phoenix.CreatureState.GetPenUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c910
	struct FName GetNurturingSpaceID(); // Function Phoenix.CreatureState.GetNurturingSpaceID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c8d0
	int32_t GetMotherUID(); // Function Phoenix.CreatureState.GetMotherUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c890
	bool GetIsUncapturable(); // Function Phoenix.CreatureState.GetIsUncapturable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c870
	bool GetIsMount(); // Function Phoenix.CreatureState.GetIsMount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c850
	bool GetIsMale(); // Function Phoenix.CreatureState.GetIsMale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c830
	bool GetIsByproductReady(); // Function Phoenix.CreatureState.GetIsByproductReady // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326c7e0
	bool GetIsByproductHarvestableByPlayer(struct FString& OutErrorKey); // Function Phoenix.CreatureState.GetIsByproductHarvestableByPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x326c720
	struct FDateTime GetIncubationStartDateTime(); // Function Phoenix.CreatureState.GetIncubationStartDateTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c6e0
	struct FString GetIconString(); // Function Phoenix.CreatureState.GetIconString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c660
	struct FTimespan GetHatchingTimeRemaining(); // Function Phoenix.CreatureState.GetHatchingTimeRemaining // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x326c620
	float GetHappinessCap(); // Function Phoenix.CreatureState.GetHappinessCap // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326c5d0
	float GetHappiness(); // Function Phoenix.CreatureState.GetHappiness // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326c5a0
	struct FTimespan GetGestationTimeRemaining(); // Function Phoenix.CreatureState.GetGestationTimeRemaining // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x326c560
	int32_t GetFatherUID(); // Function Phoenix.CreatureState.GetFatherUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c540
	struct UCreatureDefinition* GetDefinition(); // Function Phoenix.CreatureState.GetDefinition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c4f0
	int32_t GetCreatureUID(); // Function Phoenix.CreatureState.GetCreatureUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2617a90
	struct FString GetCreatureName(); // Function Phoenix.CreatureState.GetCreatureName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c4c0
	void GetCreatureDisplayName(struct FString& OutName, bool& OutIsLocalizationKey); // Function Phoenix.CreatureState.GetCreatureDisplayName // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x326c3c0
	struct FName GetColorVariation(); // Function Phoenix.CreatureState.GetColorVariation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c020
	bool GetCanReturnToWild(); // Function Phoenix.CreatureState.GetCanReturnToWild // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c290
	bool GetCanRename(); // Function Phoenix.CreatureState.GetCanRename // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c270
	struct FTimespan GetByproductCooldownTimeLeft(); // Function Phoenix.CreatureState.GetByproductCooldownTimeLeft // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x326c1d0
	float GetByproductCooldownProgress(); // Function Phoenix.CreatureState.GetByproductCooldownProgress // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326c1a0
	int32_t GetBreedingGeneration(); // Function Phoenix.CreatureState.GetBreedingGeneration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c180
	struct FDateTime GetBirthDateTime(); // Function Phoenix.CreatureState.GetBirthDateTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x326c160
	struct FString GetAdultIconString(); // Function Phoenix.CreatureState.GetAdultIconString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c0c0
	struct TArray<struct FCreatureActivityThreshold> GetActivityThresholds(); // Function Phoenix.CreatureState.GetActivityThresholds // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326c040
	bool CanStartActivity(); // Function Phoenix.CreatureState.CanStartActivity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326bff0
	bool CanCreatureBreed(struct FString& ErrorMessage); // Function Phoenix.CreatureState.CanCreatureBreed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x326bf30
	bool AreAllNeedsMet(); // Function Phoenix.CreatureState.AreAllNeedsMet // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x326bf00
};

// Class Phoenix.CreatureDefinition
// Size: 0xe0 (Inherited: 0x28)
struct UCreatureDefinition : UObject {
	char pad_28[0xb8]; // 0x28(0xb8)

	bool IsOffspring(); // Function Phoenix.CreatureDefinition.IsOffspring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326ceb0
	bool IsEggLaying(); // Function Phoenix.CreatureDefinition.IsEggLaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cce0
	bool IsEgg(); // Function Phoenix.CreatureDefinition.IsEgg // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cc40
	bool IsAdult(); // Function Phoenix.CreatureDefinition.IsAdult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326cb00
	struct FName GetTypeID(); // Function Phoenix.CreatureDefinition.GetTypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x19fc470
	struct FTimespan GetPregnancyDuration(); // Function Phoenix.CreatureDefinition.GetPregnancyDuration // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x235fac0
	struct FName GetPreferredToyID(); // Function Phoenix.CreatureDefinition.GetPreferredToyID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1995770
	float GetPlayWithToyHappinessPercentage(); // Function Phoenix.CreatureDefinition.GetPlayWithToyHappinessPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c930
	bool GetOnlyCapturableWhenNearDeathKneeling(); // Function Phoenix.CreatureDefinition.GetOnlyCapturableWhenNearDeathKneeling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c8f0
	struct FName GetOffspringCreatureTypeID(); // Function Phoenix.CreatureDefinition.GetOffspringCreatureTypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23666b0
	int32_t GetNumCapturingGates(); // Function Phoenix.CreatureDefinition.GetNumCapturingGates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c8b0
	bool GetIsCarnivore(); // Function Phoenix.CreatureDefinition.GetIsCarnivore // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c810
	bool GetIsAggressive(); // Function Phoenix.CreatureDefinition.GetIsAggressive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c700
	struct FTimespan GetHatchingDuration(); // Function Phoenix.CreatureDefinition.GetHatchingDuration // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c600
	struct FName GetEggTypeID(); // Function Phoenix.CreatureDefinition.GetEggTypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c520
	struct TArray<struct FName> GetConflictTypeIDs(); // Function Phoenix.CreatureDefinition.GetConflictTypeIDs // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c2f0
	int32_t GetCompletedYearForCapture(); // Function Phoenix.CreatureDefinition.GetCompletedYearForCapture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c2d0
	struct FTimespan GetChildhoodDuration(); // Function Phoenix.CreatureDefinition.GetChildhoodDuration // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c2b0
	float GetCapturingTime(); // Function Phoenix.CreatureDefinition.GetCapturingTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2617a90
	int32_t GetCapturingDistanceMax(); // Function Phoenix.CreatureDefinition.GetCapturingDistanceMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2617ab0
	bool GetCanBeCaptured(); // Function Phoenix.CreatureDefinition.GetCanBeCaptured // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c250
	struct FName GetByproductID(); // Function Phoenix.CreatureDefinition.GetByproductID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c230
	int32_t GetByproductHarvestCount(); // Function Phoenix.CreatureDefinition.GetByproductHarvestCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c210
	float GetByproductCooldownTimeSec(); // Function Phoenix.CreatureDefinition.GetByproductCooldownTimeSec // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x321e280
	int32_t GetBaseEconomyValue(); // Function Phoenix.CreatureDefinition.GetBaseEconomyValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c140
	struct FName GetAdultCreatureTypeID(); // Function Phoenix.CreatureDefinition.GetAdultCreatureTypeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23662f0
	struct FName GetAchievementForCapturing(); // Function Phoenix.CreatureDefinition.GetAchievementForCapturing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c020
};

// Class Phoenix.CreatureTetherVolume
// Size: 0x288 (Inherited: 0x280)
struct ACreatureTetherVolume : AVolume {
	bool bIsActive; // 0x280(0x01)
	bool bCanBeAutoDetected; // 0x281(0x01)
	char pad_282[0x6]; // 0x282(0x06)
};

// Class Phoenix.CreatureToyVolume
// Size: 0x280 (Inherited: 0x280)
struct ACreatureToyVolume : AVolume {
};

// Class Phoenix.CreatureTransformedHandler
// Size: 0x600 (Inherited: 0x5f0)
struct ACreatureTransformedHandler : ACreatureMountHandler {
	struct UObject* RiderCharacterClass; // 0x5f0(0x08)
	char pad_5F8[0x8]; // 0x5f8(0x08)
};

// Class Phoenix.CreatureUtilityContext
// Size: 0x198 (Inherited: 0x118)
struct UCreatureUtilityContext : UUtilityContext {
	struct ACreature_Character* SelfCreatureCharacter; // 0x118(0x08)
	struct UObjectStateInfo* SelfObjectStateInfo; // 0x120(0x08)
	struct UCreatureDefinition* SelfCreatureDefinition; // 0x128(0x08)
	struct UCreatureState* SelfCreatureState; // 0x130(0x08)
	struct TArray<struct AActor*> TransfigurationActors; // 0x138(0x10)
	struct TMap<struct FName, struct FActionEnergyData> ActionEnergyData; // 0x148(0x50)
};

// Class Phoenix.CrowdTest
// Size: 0x2a0 (Inherited: 0x248)
struct ACrowdTest : AActor {
	struct FName m_targetTag; // 0x248(0x08)
	float m_minDesiredSpeed; // 0x250(0x04)
	float m_maxDesiredSpeed; // 0x254(0x04)
	uint32_t m_spawnCount; // 0x258(0x04)
	uint32_t m_arrivedCount; // 0x25c(0x04)
	char pad_260[0x40]; // 0x260(0x40)
};

// Class Phoenix.DamageOverTime
// Size: 0x1c0 (Inherited: 0x190)
struct UDamageOverTime : UStateEffectComponent {
	char pad_190[0x30]; // 0x190(0x30)

	void OnArrestoEnd(struct UActorComponent* i_component); // Function Phoenix.DamageOverTime.OnArrestoEnd // (Final|Native|Protected) // @ game+0x3274490
};

// Class Phoenix.CrucioComponent
// Size: 0x1d0 (Inherited: 0x1c0)
struct UCrucioComponent : UDamageOverTime {
	char pad_1C0[0x10]; // 0x1c0(0x10)

	void SetupDelegate(); // Function Phoenix.CrucioComponent.SetupDelegate // (Final|Native|Public) // @ game+0x3271460
};

// Class Phoenix.CrucioSpellTool
// Size: 0x890 (Inherited: 0x868)
struct ACrucioSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> DamageFX2; // 0x868(0x10)
	float TalentProjectileDistance; // 0x878(0x04)
	float TalentProjectileIgnoreNearDistance; // 0x87c(0x04)
	float TalentProjectileDamage; // 0x880(0x04)
	float TalentProjectileRandomHalfAngle; // 0x884(0x04)
	struct AMunitionType_Base* TalentProjectileMunition; // 0x888(0x08)
};

// Class Phoenix.CrumblePiecesManager
// Size: 0x248 (Inherited: 0x248)
struct ACrumblePiecesManager : AActor {

	void TryToRepairAll(struct AActor* TargetActor); // Function Phoenix.CrumblePiecesManager.TryToRepairAll // (Final|Native|Protected|BlueprintCallable) // @ game+0x3271480
};

// Class Phoenix.CullingHammer
// Size: 0x2f8 (Inherited: 0x248)
struct ACullingHammer : AActor {
	struct TArray<struct AActor*> IgnoreLevelActors; // 0x248(0x10)
	struct TArray<struct FString> IgnoreLevelActorsByName; // 0x258(0x10)
	struct TArray<struct AActor*> IgnoreActorClasses; // 0x268(0x10)
	struct TArray<struct UPrimitiveComponent*> CustomVisiblePrimitiveClasses; // 0x278(0x10)
	struct UStaticMesh* BlockerMesh; // 0x288(0x08)
	struct UMaterialInterface* BlockerMaterial; // 0x290(0x08)
	struct FVector WorldBoundsAdd; // 0x298(0x0c)
	float WorldBoundsScale; // 0x2a4(0x04)
	int32_t BlockerTranslucentSortPriority; // 0x2a8(0x04)
	bool bUseRadius; // 0x2ac(0x01)
	bool bCreateOnBeginPlay; // 0x2ad(0x01)
	bool bEnableBlockerObject; // 0x2ae(0x01)
	char pad_2AF[0x1]; // 0x2af(0x01)
	float ObjectBoundsScalePercent; // 0x2b0(0x04)
	bool bObjectBoundsScalePercent; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)
	struct UMaterialInterface* CrackFillerMaterial; // 0x2b8(0x08)
	struct UMaterialParameterCollection* CrackFillerMPC; // 0x2c0(0x08)
	struct FCrackFillerPostProcessSettings CrackFillerSettings; // 0x2c8(0x1c)
	bool bEnableCrackFiller; // 0x2e4(0x01)
	char pad_2E5[0x3]; // 0x2e5(0x03)
	struct UStaticMeshComponent* BlockerComponent; // 0x2e8(0x08)
	struct UPostProcessComponent* CrackFillerPostProcess; // 0x2f0(0x08)

	void RebuildBlocker(); // Function Phoenix.CullingHammer.RebuildBlocker // (Final|Native|Public|BlueprintCallable) // @ game+0x3271250
	void EnableCrackFillerPostProcess(bool bEnable); // Function Phoenix.CullingHammer.EnableCrackFillerPostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x3270720
};

// Class Phoenix.Curriculum
// Size: 0x70 (Inherited: 0x28)
struct UCurriculum : UObject {
	char pad_28[0x48]; // 0x28(0x48)

	bool SetCompleteYear_Updated(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.SetCompleteYear_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270dd0
	bool SetCompleteAllTurnIns_Updated(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.SetCompleteAllTurnIns_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270dd0
	bool HasCompletedYear_Updated(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.HasCompletedYear_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270dd0
	void GivePlayerRewardKnowledge_Updated(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.GivePlayerRewardKnowledge_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270d00
	void GivePlayerRewardItems_Updated(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.GivePlayerRewardItems_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270d00
	bool GetUncompletedTurnIns_Updated(enum class EDisciplineType Discipline, int32_t Year, struct TArray<struct FCurriculumRequirements_Updated>& UncompletedTurnIns); // Function Phoenix.Curriculum.GetUncompletedTurnIns_Updated // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3270b80
	int32_t GetMaxYear(); // Function Phoenix.Curriculum.GetMaxYear // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3270a90
	int32_t GetHighestYearCompletedOverall_Updated(); // Function Phoenix.Curriculum.GetHighestYearCompletedOverall_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270a90
	int32_t GetHighestYearCompleted_Updated(enum class EDisciplineType Discipline); // Function Phoenix.Curriculum.GetHighestYearCompleted_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270a00
	int32_t GetCurrentYear_Updated(enum class EDisciplineType Discipline); // Function Phoenix.Curriculum.GetCurrentYear_Updated // (Final|Native|Public|BlueprintCallable) // @ game+0x3270a00
	struct TArray<struct FCurriculumKnowledgeRequirement> GetApplicableKnowledgeCards(enum class EDisciplineType Discipline, int32_t Year); // Function Phoenix.Curriculum.GetApplicableKnowledgeCards // (Final|Native|Public|BlueprintCallable) // @ game+0x32707e0
	struct UCurriculum* Get(); // Function Phoenix.Curriculum.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32707b0
};

// Class Phoenix.CurseComponent
// Size: 0x2d0 (Inherited: 0x220)
struct UCurseComponent : USceneComponent {
	struct UBoxComponent* VolumeComponent; // 0x218(0x08)
	struct UBillboardComponent* BacklashOriginComponent; // 0x220(0x08)
	struct UBillboardComponent* VFXPositionComponent; // 0x228(0x08)
	int32_t CurseLevel; // 0x230(0x04)
	bool bUncursingIsPermanent; // 0x234(0x01)
	struct USpellToolRecord* SpellToBeUsedOnInteract; // 0x238(0x08)
	struct UParticleSystem* CursedVfx; // 0x240(0x08)
	struct UAkAudioEvent* CursedSfx; // 0x248(0x08)
	float BuildupTimeBeforeFiring; // 0x250(0x04)
	struct UParticleSystem* CursedBuildupVfx; // 0x258(0x08)
	struct UAkAudioEvent* CursedBuildupSfx; // 0x260(0x08)
	bool bUseVolumeOverlapEvent; // 0x268(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	float CooldownBetweenSpells; // 0x26c(0x04)
	int32_t NumberOfSpellsInSequence; // 0x270(0x04)
	float CooldownBetweenSequences; // 0x274(0x04)
	bool bKeepCurseZoneActiveWhenBroken; // 0x278(0x01)
	char pad_279[0x37]; // 0x279(0x37)
	struct UParticleSystemComponent* ParticleSystemComponent; // 0x2b0(0x08)
	char pad_2B8[0x8]; // 0x2b8(0x08)
	struct UParticleSystemComponent* BuildupParticleSystemComponent; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UncurseEnds(); // Function Phoenix.CurseComponent.UncurseEnds // (Final|Native|Public|BlueprintCallable) // @ game+0x32715b0
	bool Uncurse(int32_t UncurseLevel); // Function Phoenix.CurseComponent.Uncurse // (Final|Native|Public|BlueprintCallable) // @ game+0x3271510
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.CurseComponent.OnOverlapEnd // (Final|Native|Public) // @ game+0x32710f0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.CurseComponent.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x3270ed0
	bool IsCursed(); // Function Phoenix.CurseComponent.IsCursed // (Final|Native|Public|BlueprintCallable) // @ game+0x3270ea0
	void ActivateCurseWithBuildup(struct AActor* Target); // Function Phoenix.CurseComponent.ActivateCurseWithBuildup // (Final|Native|Public|BlueprintCallable) // @ game+0x3270400
};

// Class Phoenix.UncurseComponent
// Size: 0x190 (Inherited: 0x190)
struct UUncurseComponent : UStateEffectComponent {

	void AddToInstanceList(struct AActor* InInstigator, int32_t InMaxInstancesPerInstigator); // Function Phoenix.UncurseComponent.AddToInstanceList // (Final|Native|Public|BlueprintCallable) // @ game+0x3270490
};

// Class Phoenix.CurseInterface
// Size: 0x28 (Inherited: 0x28)
struct UCurseInterface : UInterface {

	void OnUncursed(); // Function Phoenix.CurseInterface.OnUncursed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnInteractWithCurse(); // Function Phoenix.CurseInterface.OnInteractWithCurse // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToUncurse(); // Function Phoenix.CurseInterface.OnFailedToUncurse // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.CustomizableActor
// Size: 0x360 (Inherited: 0x248)
struct ACustomizableActor : AActor {
	char pad_248[0x18]; // 0x248(0x18)
	struct FDbDoubleColumnInfo CharacterIdInfo; // 0x260(0xd8)
	struct UCustomizableCharacterComponent* CCC; // 0x338(0x08)
	char pad_340[0x8]; // 0x340(0x08)
	struct USkeletalMeshComponent* Mesh; // 0x348(0x08)
	char pad_350[0x10]; // 0x350(0x10)

	void SetLODOverride(int32_t InLODOverride); // Function Phoenix.CustomizableActor.SetLODOverride // (Final|Native|Protected|BlueprintCallable) // @ game+0x32713d0
	struct FString GetRegistryID(); // Function Phoenix.CustomizableActor.GetRegistryID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3270ac0
	struct UCustomizableCharacterComponent* GetCCC(); // Function Phoenix.CustomizableActor.GetCCC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3270950
};

// Class Phoenix.CustomizableCharacterShimHelper
// Size: 0x28 (Inherited: 0x28)
struct UCustomizableCharacterShimHelper : UObject {

	bool SetCharacterLookOverride(struct FName CharacterID, struct FName CharacterIdOverride); // Function Phoenix.CustomizableCharacterShimHelper.SetCharacterLookOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3271300
	bool RemoveCharacterLookOverride(struct FName CharacterID); // Function Phoenix.CustomizableCharacterShimHelper.RemoveCharacterLookOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3271270
	struct FName GetCharacterLookOverride(struct FName CharacterID); // Function Phoenix.CustomizableCharacterShimHelper.GetCharacterLookOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3270970
};

// Class Phoenix.CustomizableWand
// Size: 0x248 (Inherited: 0x248)
struct ACustomizableWand : AActor {

	bool AsyncLoadTexture(struct TSoftObjectPtr<UTexture> SoftTexturePtr, struct FName TexParam, struct FDelegate& Callback); // Function Phoenix.CustomizableWand.AsyncLoadTexture // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x3270560
};

// Class Phoenix.DamageIndicatorsBase
// Size: 0x2e8 (Inherited: 0x2e8)
struct UDamageIndicatorsBase : UHUDElementGroup {

	void OnNPC_Damaged(struct FVector2D& ScreenPos, float Damage, bool IsVulnerableDamage); // Function Phoenix.DamageIndicatorsBase.OnNPC_Damaged // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.DB_Character
// Size: 0x1680 (Inherited: 0x1660)
struct ADB_Character : ABase_Character {
	struct UBipedStateComponent* ObjectStateComponent; // 0x1658(0x08)
	struct UCustomizableCharacterComponent* Customization; // 0x1660(0x08)
	struct UFacialComponent* FacialComponent; // 0x1668(0x08)
	struct UAnimationComponent* AnimationComponent; // 0x1670(0x08)
};

// Class Phoenix.Dead_Manager
// Size: 0xe0 (Inherited: 0xe0)
struct UDead_Manager : UNPC_Manager {
};

// Class Phoenix.DeathlyHallowsCloakTool
// Size: 0x808 (Inherited: 0x7e8)
struct ADeathlyHallowsCloakTool : ASpellTool {
	struct UMaterialInterface* DisillusionmentMat; // 0x7e8(0x08)
	struct TArray<struct UMultiFX2_Base*> DisillusionmentFX2; // 0x7f0(0x10)
	bool bSlowWalk; // 0x800(0x01)
	char pad_801[0x7]; // 0x801(0x07)

	void OnDisillusionmentStart(); // Function Phoenix.DeathlyHallowsCloakTool.OnDisillusionmentStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDisillusionmentEnd(); // Function Phoenix.DeathlyHallowsCloakTool.OnDisillusionmentEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CasterHealthZero(struct AActor* InActor); // Function Phoenix.DeathlyHallowsCloakTool.CasterHealthZero // (Final|Native|Protected) // @ game+0x3274030
};

// Class Phoenix.DeathlyHallowsDistractionSpellTool
// Size: 0x868 (Inherited: 0x868)
struct ADeathlyHallowsDistractionSpellTool : AFireOnceSpellTool {
};

// Class Phoenix.DebugConversationWindow
// Size: 0x48 (Inherited: 0x40)
struct UDebugConversationWindow : UDebugWindow {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.DebugMapVolumeComponent
// Size: 0x570 (Inherited: 0x510)
struct UDebugMapVolumeComponent : UProceduralMeshComponent {
	char pad_510[0x60]; // 0x510(0x60)
};

// Class Phoenix.DebugMapVolumeActor
// Size: 0x270 (Inherited: 0x248)
struct ADebugMapVolumeActor : AActor {
	struct FString VolumeId; // 0x248(0x10)
	struct UMaterialInstanceDynamic* VolumeDynamicMaterial; // 0x258(0x08)
	struct UMaterialInterface* VolumeMaterial; // 0x260(0x08)
	struct UDebugMapVolumeComponent* DebugVolumeComponent; // 0x268(0x08)
};

// Class Phoenix.DebugTextPanel
// Size: 0xd8 (Inherited: 0x28)
struct UDebugTextPanel : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UUserWidget* DebugTextPanel; // 0x38(0x08)
	struct FMapDebugPane DebugPanelInfo; // 0x40(0x70)
	struct UObject* MapDebugWidgetClass; // 0xb0(0x08)
	char pad_B8[0x20]; // 0xb8(0x20)
};

// Class Phoenix.DecalSphereHelper
// Size: 0x300 (Inherited: 0x220)
struct UDecalSphereHelper : USceneComponent {
	struct FName NameForDotsPosition; // 0x218(0x08)
	struct FName NameForDotsRadius; // 0x220(0x08)
	struct FVector Sphere1Position; // 0x228(0x0c)
	float Sphere1Radius; // 0x234(0x04)
	struct FVector Sphere2Position; // 0x238(0x0c)
	float Sphere2Radius; // 0x244(0x04)
	struct FVector Sphere3Position; // 0x248(0x0c)
	float Sphere3Radius; // 0x254(0x04)
	struct FVector Sphere4Position; // 0x258(0x0c)
	float Sphere4Radius; // 0x264(0x04)
	char pad_270[0x90]; // 0x270(0x90)
};

// Class Phoenix.NPC_MobilityChoice
// Size: 0x28 (Inherited: 0x28)
struct UNPC_MobilityChoice : UObject {
};

// Class Phoenix.Default_MobilityChoice
// Size: 0x28 (Inherited: 0x28)
struct UDefault_MobilityChoice : UNPC_MobilityChoice {
};

// Class Phoenix.DeferredChildActorComponent
// Size: 0x270 (Inherited: 0x250)
struct UDeferredChildActorComponent : UChildActorComponent {
	struct FMulticastInlineDelegate OnDeferredChildActorSpawned; // 0x250(0x10)
	char pad_260[0x10]; // 0x260(0x10)
};

// Class Phoenix.DeflectionComponent
// Size: 0x1d0 (Inherited: 0x190)
struct UDeflectionComponent : UStateEffectComponent {
	struct FDeflectionData Data; // 0x190(0x18)
	char pad_1A8[0x28]; // 0x1a8(0x28)

	void SetupDelegate(); // Function Phoenix.DeflectionComponent.SetupDelegate // (Final|Native|Private) // @ game+0x3275040
};

// Class Phoenix.DepulsoMaximaSpellTool
// Size: 0x8b0 (Inherited: 0x868)
struct ADepulsoMaximaSpellTool : AFireOnceSpellTool {
	bool bShowDebug; // 0x868(0x01)
	char pad_869[0x3]; // 0x869(0x03)
	float BasePhysicsImpulse; // 0x86c(0x04)
	float MassScaledPhysicsImpulse; // 0x870(0x04)
	float CharacterBasePhysicsImpulse; // 0x874(0x04)
	float CharacterMassScaledPhysicsImpulse; // 0x878(0x04)
	float MaxVelocity; // 0x87c(0x04)
	int32_t TargetHalfAngleXY; // 0x880(0x04)
	int32_t TargetHalfAngleZ; // 0x884(0x04)
	float LaunchAngle; // 0x888(0x04)
	float HeightAdjustment; // 0x88c(0x04)
	float LevelMinZThreshold; // 0x890(0x04)
	float LevelMaxZThreshold; // 0x894(0x04)
	int32_t TargetingPercent; // 0x898(0x04)
	bool bUpdateTarget; // 0x89c(0x01)
	char pad_89D[0x3]; // 0x89d(0x03)
	float LeviosoImpulseScale; // 0x8a0(0x04)
	float NonMovableDamageMax; // 0x8a4(0x04)
	float NonMovableDamageMin; // 0x8a8(0x04)
	float NonMovableAdditionalForce; // 0x8ac(0x04)
};

// Class Phoenix.DepulsoSpellTool
// Size: 0x8f0 (Inherited: 0x868)
struct ADepulsoSpellTool : AFireOnceSpellTool {
	int32_t TargetHalfAngleXY; // 0x868(0x04)
	int32_t TargetHalfAngleZ; // 0x86c(0x04)
	float LaunchAngle; // 0x870(0x04)
	float InAirLaunchAngle; // 0x874(0x04)
	float MaximumLaunchAngle; // 0x878(0x04)
	float HeightAdjustment; // 0x87c(0x04)
	float LevelMinZThreshold; // 0x880(0x04)
	float LevelMaxZThreshold; // 0x884(0x04)
	float BasePhysicsImpulse; // 0x888(0x04)
	float MassScaledPhysicsImpulse; // 0x88c(0x04)
	float CharacterBasePhysicsImpulse; // 0x890(0x04)
	float CharacterMassScaledPhysicsImpulse; // 0x894(0x04)
	float MaxVelocity; // 0x898(0x04)
	float NonMovableDamage; // 0x89c(0x04)
	float NonMovableAdditionalForce; // 0x8a0(0x04)
	int32_t TargetingPercent; // 0x8a4(0x04)
	bool bUpdateTarget; // 0x8a8(0x01)
	char pad_8A9[0x3]; // 0x8a9(0x03)
	float LeviosoImpulseScale; // 0x8ac(0x04)
	float MinDamageDealt; // 0x8b0(0x04)
	float MaxDamageDealt; // 0x8b4(0x04)
	float MinDamageDealtCharacter; // 0x8b8(0x04)
	float MaxDamageDealtCharacter; // 0x8bc(0x04)
	float MinDamageTaken; // 0x8c0(0x04)
	float MaxDamageTaken; // 0x8c4(0x04)
	float MinDamageTakenCharacter; // 0x8c8(0x04)
	float MaxDamageTakenCharacter; // 0x8cc(0x04)
	float MinDamageTakenCharacterWall; // 0x8d0(0x04)
	float MaxDamageTakenCharacterWall; // 0x8d4(0x04)
	float MinDamageTakenCharacterFloor; // 0x8d8(0x04)
	float MaxDamageTakenCharacterFloor; // 0x8dc(0x04)
	float MinDamageTakenCharacterCharacter; // 0x8e0(0x04)
	float MaxDamageTakenCharacterCharacter; // 0x8e4(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x8e8(0x08)
};

// Class Phoenix.DescendoSpellTool
// Size: 0x8f0 (Inherited: 0x868)
struct ADescendoSpellTool : AFireOnceSpellTool {
	float PushToGroundDelay; // 0x868(0x04)
	float GroundDamage; // 0x86c(0x04)
	struct TArray<struct UMultiFX2_Base*> GroundSlamFX2; // 0x870(0x10)
	struct TArray<struct UMultiFX2_Base*> GroundPushFX2; // 0x880(0x10)
	float MinDamageDealt; // 0x890(0x04)
	float MaxDamageDealt; // 0x894(0x04)
	float MinDamageDealtCharacter; // 0x898(0x04)
	float MaxDamageDealtCharacter; // 0x89c(0x04)
	float MinDamageTaken; // 0x8a0(0x04)
	float MaxDamageTaken; // 0x8a4(0x04)
	float MinDamageTakenCharacter; // 0x8a8(0x04)
	float MaxDamageTakenCharacter; // 0x8ac(0x04)
	struct FVector RandomTorque; // 0x8b0(0x0c)
	float MinimumTorque; // 0x8bc(0x04)
	float ApplyTorqueDelay; // 0x8c0(0x04)
	float BasePhysicsImpulse; // 0x8c4(0x04)
	float MassScaledPhysicsImpulse; // 0x8c8(0x04)
	float MaxVelocity; // 0x8cc(0x04)
	float NonMovableDamage; // 0x8d0(0x04)
	float NonMovableAdditionalForce; // 0x8d4(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x8d8(0x08)
	char pad_8E0[0x10]; // 0x8e0(0x10)

	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.DescendoSpellTool.OnActorHit // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x32742f0
};

// Class Phoenix.DevilsSnare
// Size: 0x3d8 (Inherited: 0x248)
struct ADevilsSnare : AActor {
	struct UStaticMeshComponent* StaticMeshComponent; // 0x248(0x08)
	struct TArray<struct FDevilsSnareInfo> DevilsSnareInfo; // 0x250(0x10)
	int32_t TypeIndex; // 0x260(0x04)
	bool bCanAffectPlayer; // 0x264(0x01)
	bool bStartsHidden; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	float DamagePerSecond; // 0x268(0x04)
	float RecoilPercentForLumos; // 0x26c(0x04)
	struct TArray<struct FDevilsSnareLumosReact> RecoilForLumos; // 0x270(0x10)
	float RecoilPercentForIncendio; // 0x280(0x04)
	float RecoilPercentForConfringo; // 0x284(0x04)
	float RecoilPercentForAvadaKedavra; // 0x288(0x04)
	float FireRecoilDistance; // 0x28c(0x04)
	float GrowBackSpeed; // 0x290(0x04)
	float RevealTime; // 0x294(0x04)
	float TimeBeforeRegrowing; // 0x298(0x04)
	float IncreaseRadiusForLightAndFireCheck; // 0x29c(0x04)
	struct FGameplayTagContainer ReactionTags; // 0x2a0(0x20)
	struct TArray<struct UInteractionArchitectAsset*> ReactionInteractionArchitectAssets; // 0x2c0(0x10)
	float DodgeInterpolatePercent; // 0x2d0(0x04)
	float MinPlayerSpeed; // 0x2d4(0x04)
	struct UCurveFloat* CurvePlayerSpeedReductionPerSecond; // 0x2d8(0x08)
	bool PlayerDiesOnMinSpeedReached; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)
	struct TArray<struct UMultiFX2_Base*> AffectedFX2; // 0x2e8(0x10)
	float CurrentPercent; // 0x2f8(0x04)
	enum class EDevilsSnareState CurrentState; // 0x2fc(0x01)
	char pad_2FD[0x3]; // 0x2fd(0x03)
	float ActualGrowthPercent; // 0x300(0x04)
	bool bPlayerIsUsingLumos; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	struct TArray<struct AActor*> ActorsInArea; // 0x308(0x10)
	struct TArray<struct AActor*> ActorsInAreaForLightAndFire; // 0x318(0x10)
	struct FMulticastInlineDelegate GrowthUpdatedEvent; // 0x328(0x10)
	struct FMulticastInlineDelegate DamageDealtEvent; // 0x338(0x10)
	struct USphereComponent* LightAndFireCheckVolumeComponent; // 0x348(0x08)
	struct UBoxComponent* AreaOfEffectVolumeComponent; // 0x350(0x08)
	char pad_358[0x4c]; // 0x358(0x4c)
	bool bOverrideBounds; // 0x3a4(0x01)
	char pad_3A5[0x33]; // 0x3a5(0x33)

	void UpdateMeshMaterial(); // Function Phoenix.DevilsSnare.UpdateMeshMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x32751c0
	void StopRecoiling(); // Function Phoenix.DevilsSnare.StopRecoiling // (Final|Native|Private) // @ game+0x3275170
	void StartRecoil(float RecoilPercent); // Function Phoenix.DevilsSnare.StartRecoil // (Final|Native|Private) // @ game+0x32750f0
	void Reveal(); // Function Phoenix.DevilsSnare.Reveal // (Final|Native|Private) // @ game+0x3275020
	void PlayerLumosStart(); // Function Phoenix.DevilsSnare.PlayerLumosStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3274fe0
	void PlayerLumosEnd(); // Function Phoenix.DevilsSnare.PlayerLumosEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x3274fa0
	void OnOverlapEndForLightAndFire(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.DevilsSnare.OnOverlapEndForLightAndFire // (Final|Native|Public) // @ game+0x3274ac0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.DevilsSnare.OnOverlapEnd // (Final|Native|Public) // @ game+0x3274960
	void OnOverlapBeginForLightAndFire(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.DevilsSnare.OnOverlapBeginForLightAndFire // (Final|Native|Public|HasOutParms) // @ game+0x3274740
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.DevilsSnare.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x3274520
	void HitBySpell(float RecoilPercent); // Function Phoenix.DevilsSnare.HitBySpell // (Final|Native|Public|BlueprintCallable) // @ game+0x3274270
	void DodgeStop(struct AActor* InPlayer); // Function Phoenix.DevilsSnare.DodgeStop // (Final|Native|Private) // @ game+0x32740e0
	void DelayedSetup(); // Function Phoenix.DevilsSnare.DelayedSetup // (Final|Native|Private) // @ game+0x32740c0
};

// Class Phoenix.DevilsSnareDynamic
// Size: 0x280 (Inherited: 0x248)
struct ADevilsSnareDynamic : AActor {
	struct USphereComponent* SphereComponent; // 0x248(0x08)
	struct TArray<struct AActor*> LightActorsInArea; // 0x250(0x10)
	bool bPlayerIsUsingLumos; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float SphereRadius; // 0x264(0x04)
	float OnFireRadiusExtension; // 0x268(0x04)
	char pad_26C[0x14]; // 0x26c(0x14)

	bool UnslowPlayer(); // Function Phoenix.DevilsSnareDynamic.UnslowPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x3275190
	void TickDeactivated(); // Function Phoenix.DevilsSnareDynamic.TickDeactivated // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TickActivated(); // Function Phoenix.DevilsSnareDynamic.TickActivated // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool SlowPlayer(float SpeedLimit); // Function Phoenix.DevilsSnareDynamic.SlowPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x3275060
	void PlayerLumosStart(); // Function Phoenix.DevilsSnareDynamic.PlayerLumosStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3275000
	void PlayerLumosEnd(); // Function Phoenix.DevilsSnareDynamic.PlayerLumosEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x3274fc0
	void OnOverlapSphereEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.DevilsSnareDynamic.OnOverlapSphereEnd // (Final|Native|Public) // @ game+0x3274e40
	void OnOverlapSphereBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.DevilsSnareDynamic.OnOverlapSphereBegin // (Final|Native|Public|HasOutParms) // @ game+0x3274c20
	bool FindClosestLightSourcePos(struct FVector& SnarePos, struct FVector& OutPos); // Function Phoenix.DevilsSnareDynamic.FindClosestLightSourcePos // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3274170
	void BeginPlayDelayed(); // Function Phoenix.DevilsSnareDynamic.BeginPlayDelayed // (Final|Native|Private) // @ game+0x3274010
};

// Class Phoenix.DialogBoxScreen
// Size: 0x370 (Inherited: 0x370)
struct UDialogBoxScreen : UScreen {

	void SetDialogContent(struct FString TitleText, struct FString BodyText, struct FString LegendText); // Function Phoenix.DialogBoxScreen.SetDialogContent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.DialogueCharacter
// Size: 0x1660 (Inherited: 0x1660)
struct ADialogueCharacter : ABase_Character {
	struct UCharacterStateComponent* ObjectStateComponent; // 0x1658(0x08)
};

// Class Phoenix.DialogueComponent
// Size: 0xc8 (Inherited: 0xc8)
struct UDialogueComponent : UActorComponent {
};

// Class Phoenix.DialogueEventProvider
// Size: 0x28 (Inherited: 0x28)
struct UDialogueEventProvider : UBaseProvider {
};

// Class Phoenix.DialogueEvent_Direct
// Size: 0x38 (Inherited: 0x28)
struct UDialogueEvent_Direct : UDialogueEventProvider {
	struct FDialogueConversationReference DialogueEvent; // 0x28(0x10)
};

// Class Phoenix.DialogEvent_SceneRigParameter
// Size: 0x40 (Inherited: 0x38)
struct UDialogEvent_SceneRigParameter : UDialogueEvent_Direct {
	struct FSceneRigParameterBinding_FString BoundParameter; // 0x38(0x08)
};

// Class Phoenix.DialogueLineProvider
// Size: 0x28 (Inherited: 0x28)
struct UDialogueLineProvider : UBaseProvider {
};

// Class Phoenix.DialogueLine_Direct
// Size: 0x38 (Inherited: 0x28)
struct UDialogueLine_Direct : UDialogueLineProvider {
	struct FDialogueLineReference DialogueLine; // 0x28(0x10)
};

// Class Phoenix.DialogueLineRule
// Size: 0x38 (Inherited: 0x28)
struct UDialogueLineRule : UObject {
	bool Enabled; // 0x28(0x01)
	bool CreateGroup; // 0x29(0x01)
	char pad_2A[0x2]; // 0x2a(0x02)
	struct FName GroupName; // 0x2c(0x08)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.DialogueLineRuleState
// Size: 0x58 (Inherited: 0x28)
struct UDialogueLineRuleState : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Phoenix.DialogueSequenceProvider
// Size: 0x28 (Inherited: 0x28)
struct UDialogueSequenceProvider : UBaseProvider {
};

// Class Phoenix.DialogueSequence_Direct
// Size: 0x48 (Inherited: 0x28)
struct UDialogueSequence_Direct : UDialogueSequenceProvider {
	struct FDialogueSequenceReference DialogueSequence; // 0x28(0x20)
};

// Class Phoenix.DialogueSequenceReferenceProvider
// Size: 0x28 (Inherited: 0x28)
struct UDialogueSequenceReferenceProvider : UBaseProvider {
};

// Class Phoenix.DialogueSequenceReference_Direct
// Size: 0x48 (Inherited: 0x28)
struct UDialogueSequenceReference_Direct : UDialogueSequenceReferenceProvider {
	struct FDialogueSequenceReference Value; // 0x28(0x20)
};

// Class Phoenix.DialogueSequenceRule
// Size: 0x58 (Inherited: 0x30)
struct UDialogueSequenceRule : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct USceneRigStage_SimpleConversation* StageClass; // 0x38(0x08)
	struct USceneRig_SimpleConversation* SceneRigClass; // 0x40(0x08)
	struct TArray<struct UDialogueLineRule*> LineRules; // 0x48(0x10)
};

// Class Phoenix.DiffindoSpellTool
// Size: 0x810 (Inherited: 0x7e8)
struct ADiffindoSpellTool : ASpellTool {
	int32_t ProjectileTargetHalfAngleXY; // 0x7e8(0x04)
	int32_t ProjectileTargetHalfAngleZ; // 0x7ec(0x04)
	bool TargetObjects; // 0x7f0(0x01)
	char pad_7F1[0x7]; // 0x7f1(0x07)
	struct AMunitionType_Base* UpgradedMunitionActor; // 0x7f8(0x08)
	char pad_800[0x10]; // 0x800(0x10)
};

// Class Phoenix.DiningTableButtonWidget
// Size: 0x268 (Inherited: 0x268)
struct UDiningTableButtonWidget : UUserWidget {
};

// Class Phoenix.DisarmInterface
// Size: 0x28 (Inherited: 0x28)
struct UDisarmInterface : UInterface {

	struct AActor* Disarm(struct AActor* Instigator, struct FVector HitDirection, float ScaleDisarmForce); // Function Phoenix.DisarmInterface.Disarm // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.DisillusionmentComponent
// Size: 0x250 (Inherited: 0x190)
struct UDisillusionmentComponent : UStateEffectComponent {
	struct FDisillusionmentData DisillusionmentData; // 0x190(0x28)
	struct AActor* SightDetectionSphereActor; // 0x1b8(0x08)
	struct TMap<struct AActor*, struct AActor*> SightDetectionActors; // 0x1c0(0x50)
	struct TArray<struct AActor*> FullyAwareActors; // 0x210(0x10)
	float MinSightAngleDegrees; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct FMultiFX2Handle FX2Handle; // 0x228(0x08)
	struct UMaterialSwap* MaterialSwap; // 0x230(0x08)
	struct TArray<struct AActor*> TaggedActors; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)

	void RemoveDisillusionmentFromActor(struct AActor* Actor, bool bEvenIfCloak); // Function Phoenix.DisillusionmentComponent.RemoveDisillusionmentFromActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3279620
	void PerceptionDoneHandler(struct AActor* Actor, bool bSuccess, bool bReturnControl); // Function Phoenix.DisillusionmentComponent.PerceptionDoneHandler // (Final|Native|Public) // @ game+0x3279510
	void OwnerMovementModeChanged(struct ACharacter* Character, enum class EMovementMode PrevMovementMode, char PreviousCustomMode); // Function Phoenix.DisillusionmentComponent.OwnerMovementModeChanged // (Final|Native|Protected) // @ game+0x3279400
	void OnActorEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.DisillusionmentComponent.OnActorEndOverlap // (Final|Native|Public) // @ game+0x3278fa0
	void OnActorBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.DisillusionmentComponent.OnActorBeginOverlap // (Final|Native|Public) // @ game+0x3278ed0
	bool IsActorDisillusionedByCloak(struct AActor* Actor); // Function Phoenix.DisillusionmentComponent.IsActorDisillusionedByCloak // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3278e40
	bool IsActorDisillusioned(struct AActor* Actor); // Function Phoenix.DisillusionmentComponent.IsActorDisillusioned // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3278db0
	float GetVisibilityPercentage(); // Function Phoenix.DisillusionmentComponent.GetVisibilityPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x3278d80
};

// Class Phoenix.DisillusionmentSpellTool
// Size: 0x850 (Inherited: 0x7e8)
struct ADisillusionmentSpellTool : ASpellTool {
	struct UMaterialInterface* DisillusionmentMat; // 0x7e8(0x08)
	struct TArray<struct UMultiFX2_Base*> DisillusionmentFX2; // 0x7f0(0x10)
	struct TArray<struct UMultiFX2_Base*> FailedFX2; // 0x800(0x10)
	struct TArray<struct UMultiFX2_Base*> EndMuzzleFX2; // 0x810(0x10)
	bool bSlowWalk; // 0x820(0x01)
	char pad_821[0x7]; // 0x821(0x07)
	struct TArray<struct FString> TalentStrings; // 0x828(0x10)
	int32_t Level; // 0x838(0x04)
	char pad_83C[0x14]; // 0x83c(0x14)

	void OnDisillusionmentStart(); // Function Phoenix.DisillusionmentSpellTool.OnDisillusionmentStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDisillusionmentEnd(); // Function Phoenix.DisillusionmentSpellTool.OnDisillusionmentEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool DeactivateDisillusionment(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.DisillusionmentSpellTool.DeactivateDisillusionment // (Final|Native|Public|BlueprintCallable) // @ game+0x3278c90
	void CasterHealthZero(struct AActor* InActor); // Function Phoenix.DisillusionmentSpellTool.CasterHealthZero // (Final|Native|Protected) // @ game+0x3278c00
	bool ActivateDisillusionment(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.DisillusionmentSpellTool.ActivateDisillusionment // (Final|Native|Public|BlueprintCallable) // @ game+0x32789b0
};

// Class Phoenix.Distance_MobilityChoice
// Size: 0x40 (Inherited: 0x28)
struct UDistance_MobilityChoice : UNPC_MobilityChoice {
	float AttackDistMin; // 0x28(0x04)
	float AttackDistMax; // 0x2c(0x04)
	float PressureDistMin; // 0x30(0x04)
	float PressureDistMax; // 0x34(0x04)
	float FarDistMin; // 0x38(0x04)
	float FarDistMax; // 0x3c(0x04)
};

// Class Phoenix.NPC_TurnAssistStateChoice
// Size: 0x28 (Inherited: 0x28)
struct UNPC_TurnAssistStateChoice : UObject {
};

// Class Phoenix.Distance_TASChoice
// Size: 0x50 (Inherited: 0x28)
struct UDistance_TASChoice : UNPC_TurnAssistStateChoice {
	enum class ENPC_TurnAssistState TargetCriteriaNotMetState; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float StartMaxAngleToDest; // 0x2c(0x04)
	float ContinueMaxAngleToDest; // 0x30(0x04)
	float StartMinDistToDest; // 0x34(0x04)
	float ContinueMinDistToDest; // 0x38(0x04)
	float StartMinDistToTarget; // 0x3c(0x04)
	float ContinueMinDistToTarget; // 0x40(0x04)
	float StartAngleOverrideMinDistToTarget; // 0x44(0x04)
	float ContinueAngleOverrideMinDistToTarget; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.DistanceTransition_MobilityChoice
// Size: 0x48 (Inherited: 0x28)
struct UDistanceTransition_MobilityChoice : UNPC_MobilityChoice {
	float WalkMinRange; // 0x28(0x04)
	float WalkMaxRange; // 0x2c(0x04)
	float JogMinRange; // 0x30(0x04)
	float JogMaxRange; // 0x34(0x04)
	float RunMinRange; // 0x38(0x04)
	float RunMaxRange; // 0x3c(0x04)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.DoorSettings
// Size: 0x40 (Inherited: 0x38)
struct UDoorSettings : UDeveloperSettings {
	struct UUserWidget* SpinnerWidgetClass; // 0x38(0x08)
};

// Class Phoenix.SpinnerInterface
// Size: 0x28 (Inherited: 0x28)
struct USpinnerInterface : UInterface {

	float LoadingComplete(); // Function Phoenix.SpinnerInterface.LoadingComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Lockable
// Size: 0x288 (Inherited: 0x248)
struct ALockable : AActor {
	struct AAmbulatory_Character* OpeningCharacter; // 0x248(0x08)
	bool IsLocked; // 0x250(0x01)
	struct FMulticastSparseDelegate OnPlayerStartedUnlockingLock; // 0x251(0x01)
	struct FMulticastSparseDelegate OnPlayerUnlockedLock; // 0x252(0x01)
	struct FMulticastSparseDelegate OnPlayerUnlockedLockWithAlohomora; // 0x253(0x01)
	struct FMulticastSparseDelegate OnPlayerUnlockedLockWithKey; // 0x254(0x01)
	struct FMulticastSparseDelegate OnPlayerRemovedLock; // 0x255(0x01)
	struct FMulticastSparseDelegate OnPlayerFailedToUnlockLock; // 0x256(0x01)
	char pad_257[0x1]; // 0x257(0x01)
	struct UCognitionStimuliSourceComponent* SharedCognitionStimuliSource; // 0x258(0x08)
	char pad_260[0x10]; // 0x260(0x10)
	struct FGuid Guid; // 0x270(0x10)
	int32_t SerializedVersion; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)

	void Unseal(bool ShowLockWhenLocked, bool Locked, bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects); // Function Phoenix.Lockable.Unseal // (Native|Public|BlueprintCallable) // @ game+0x3327250
	void Unlock(bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects); // Function Phoenix.Lockable.Unlock // (Final|Native|Public|BlueprintCallable) // @ game+0x3327120
	void SetLocked(bool Locked, bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects); // Function Phoenix.Lockable.SetLocked // (Final|Native|Public|BlueprintCallable) // @ game+0x3326e70
	void SetIsLocked(bool Locked); // Function Phoenix.Lockable.SetIsLocked // (Final|Native|Public|BlueprintCallable) // @ game+0x3326de0
	void Seal(bool ShowLockWhenLocked, bool PlaySoundsAndEffects); // Function Phoenix.Lockable.Seal // (Native|Public|BlueprintCallable) // @ game+0x3326d00
	void RunDoorConstructionScript(); // Function Phoenix.Lockable.RunDoorConstructionScript // (Native|Protected|BlueprintCallable) // @ game+0x31f7fd0
	void Lock(bool PlaySoundsAndEffects); // Function Phoenix.Lockable.Lock // (Final|Native|Public|BlueprintCallable) // @ game+0x3325db0
	bool GetIsLocked(); // Function Phoenix.Lockable.GetIsLocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3325b70
};

// Class Phoenix.Door
// Size: 0x520 (Inherited: 0x288)
struct ADoor : ALockable {
	char pad_288[0x24]; // 0x288(0x24)
	int32_t EnvInt; // 0x2ac(0x04)
	int32_t PropIndex; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct TMap<struct TSoftObjectPtr<UStaticMesh>, bool> MeshSelect; // 0x2b8(0x50)
	bool UseDoorFrame; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)
	struct ADoor* ChildDoor; // 0x310(0x08)
	bool RegisterNamedDoor; // 0x318(0x01)
	char pad_319[0x3]; // 0x319(0x03)
	struct FName BeaconableObjectID; // 0x31c(0x08)
	bool Open; // 0x324(0x01)
	bool KeepDoorOpen; // 0x325(0x01)
	bool DefaultOpenDoorForward; // 0x326(0x01)
	char pad_327[0x1]; // 0x327(0x01)
	float TimeToOpenDoor; // 0x328(0x04)
	float TimeToKeepDoorOpen; // 0x32c(0x04)
	float TimeToHoldDoorWhenInVolume; // 0x330(0x04)
	float TimeToCloseDoor; // 0x334(0x04)
	float BaseCharacterSpeed; // 0x338(0x04)
	float BaseHingeDistanceRatio; // 0x33c(0x04)
	float MinOpenSpeedMultiplier; // 0x340(0x04)
	float MaxOpenSpeedMultiplier; // 0x344(0x04)
	float MinDoorAngle; // 0x348(0x04)
	float MaxDoorAngle; // 0x34c(0x04)
	bool AllowNPCToPassThroughLockedDoor; // 0x350(0x01)
	bool BlockNPCsIfLocked; // 0x351(0x01)
	bool SlowPlayerInFrontOfDoor; // 0x352(0x01)
	char pad_353[0x5]; // 0x353(0x05)
	int64_t Expiry Time; // 0x358(0x08)
	bool ForceTickEnabled; // 0x360(0x01)
	bool bNeverBlockNavGuide; // 0x361(0x01)
	char pad_362[0x6]; // 0x362(0x06)
	struct AAkAcousticPortal* AcousticPortal; // 0x368(0x08)
	struct ARenderSettingsCustomBlendDomainVolume* RenderSettingsCustomBlendDomainVolumeAttached; // 0x370(0x08)
	struct ALerpVolume* LerpVolumeAttached; // 0x378(0x08)
	struct UAkAudioEvent* OpeningSound; // 0x380(0x08)
	struct UAkAudioEvent* OpenedSound; // 0x388(0x08)
	struct UAkAudioEvent* ClosingSound; // 0x390(0x08)
	struct UAkAudioEvent* ClosedSound; // 0x398(0x08)
	struct UAkAudioEvent* BellSound; // 0x3a0(0x08)
	bool FrontCaresAboutStreaming; // 0x3a8(0x01)
	bool BackCaresAboutStreaming; // 0x3a9(0x01)
	bool FrontIsExterior; // 0x3aa(0x01)
	bool BackIsExterior; // 0x3ab(0x01)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct UCurveFloat* OpenCurve; // 0x3b0(0x08)
	struct UCurveFloat* CloseCurve; // 0x3b8(0x08)
	enum class EDoorCurveAdjustment CloseDoorCurveAdjustment; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct UStaticMeshComponent* DoorMesh; // 0x3c8(0x08)
	struct UStaticMeshComponent* FrameMesh; // 0x3d0(0x08)
	struct UOdcObstacleComponent* NavObstacle; // 0x3d8(0x08)
	struct UArrowComponent* ForwardArrow; // 0x3e0(0x08)
	struct UOdcObstacleComponent* ClosedDoorNavObstacle; // 0x3e8(0x08)
	struct UDoorBoxComponent* EnterTrigger; // 0x3f0(0x08)
	struct UDoorBoxComponent* ExitTrigger; // 0x3f8(0x08)
	struct UDoorBoxComponent* PlayerCollision; // 0x400(0x08)
	struct UWidgetComponent* WidgetComponentSpinner; // 0x408(0x08)
	struct FMulticastSparseDelegate OnPlayerOpenedDoor; // 0x410(0x01)
	struct FMulticastSparseDelegate OnPlayerClosedDoor; // 0x411(0x01)
	char pad_412[0xe]; // 0x412(0x0e)
	struct UFastTravelForDoorsComponent* FastTravelComponent; // 0x420(0x08)
	char pad_428[0xf8]; // 0x428(0xf8)

	void SwingDoorFinished(); // Function Phoenix.Door.SwingDoorFinished // (Final|Native|Private) // @ game+0x32799e0
	void SetState(enum class EDoorState DoorState, bool LockVisible, bool PlaySoundsAndEffects); // Function Phoenix.Door.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x32798c0
	void SetLockLevel(struct UObject* Caller, int32_t int); // Function Phoenix.Door.SetLockLevel // (Native|Public|BlueprintCallable) // @ game+0x32797f0
	void SetKeepDoorOpen(bool InKeepDoorOpen); // Function Phoenix.Door.SetKeepDoorOpen // (Final|Native|Protected|BlueprintCallable) // @ game+0x3279760
	void RotateDoorToAlpha(float Alpha); // Function Phoenix.Door.RotateDoorToAlpha // (Final|Native|Private) // @ game+0x32796e0
	void OpenDoor(bool KeepOpen, float SecondsToDelayClosing, bool bPushedOpen, enum class EOpenDoorDirection Direction); // Function Phoenix.Door.OpenDoor // (Final|Native|Public|BlueprintCallable) // @ game+0x3279290
	void OnEnterTriggerBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* ActorInTrigger, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.Door.OnEnterTriggerBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x3279070
	void ObjectPickedUp(struct UObject* Caller); // Function Phoenix.Door.ObjectPickedUp // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void DestroyWidgetComponentSpinner(); // Function Phoenix.Door.DestroyWidgetComponentSpinner // (Final|Native|Private) // @ game+0x3278d60
	void CloseDoor(bool ForceClose); // Function Phoenix.Door.CloseDoor // (Native|Public|BlueprintCallable) // @ game+0x31f9bc0
	void BlockPlayer(bool ShouldBlock); // Function Phoenix.Door.BlockPlayer // (Final|Native|Private|BlueprintCallable) // @ game+0x3278b70
	void BlockOrUnblockDoor(); // Function Phoenix.Door.BlockOrUnblockDoor // (Final|Native|Private|BlueprintCallable) // @ game+0x3278b50
	void BlockNavMesh(bool ShouldBlock, enum class EBlockNavMeshOverride Override); // Function Phoenix.Door.BlockNavMesh // (Final|Native|Private|BlueprintCallable) // @ game+0x3278a80
};

// Class Phoenix.DoorBoxComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UDoorBoxComponent : UBoxComponent {
};

// Class Phoenix.DragonEscapeScene
// Size: 0x278 (Inherited: 0x248)
struct ADragonEscapeScene : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct USceneRigPlayer* m_SceneRigPlayer; // 0x250(0x08)
	struct USceneRig* m_DragonEscapeSceneRig; // 0x258(0x08)
	struct USceneRigStageParameterBlock* ParameterBlock; // 0x260(0x08)
	struct AActor* AIDragon; // 0x268(0x08)
	struct AActor* DragonPlatform; // 0x270(0x08)

	void QueueFinalRelease(); // Function Phoenix.DragonEscapeScene.QueueFinalRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x327f620
	void PlaySceneRig(); // Function Phoenix.DragonEscapeScene.PlaySceneRig // (Final|Native|Public|BlueprintCallable) // @ game+0x327f600
	void PlayQueuedFinalRelease(); // Function Phoenix.DragonEscapeScene.PlayQueuedFinalRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x327f5e0
};

// Class Phoenix.MunitionType_AOESpell
// Size: 0x4c8 (Inherited: 0x360)
struct AMunitionType_AOESpell : AMunitionType_Base {
	char pad_360[0x8]; // 0x360(0x08)
	float m_hitVictimInterval; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct UDamageType* m_damageType; // 0x370(0x08)
	struct UParticleSystem* m_explosionFX; // 0x378(0x08)
	struct UAkAudioEvent* m_explosionSfx; // 0x380(0x08)
	float PhysicsImpulse; // 0x388(0x04)
	bool bPlayAtBottomOfInstigator; // 0x38c(0x01)
	bool m_stopAtCollision; // 0x38d(0x01)
	bool bHitAllBrokenPieces; // 0x38e(0x01)
	char pad_38F[0x1]; // 0x38f(0x01)
	float m_delayedDeathTime; // 0x390(0x04)
	bool bBreakBlockFX; // 0x394(0x01)
	char pad_395[0x3]; // 0x395(0x03)
	float PerceptionNoiseEventLoudness; // 0x398(0x04)
	float PerceptionNoiseEventMaxRange; // 0x39c(0x04)
	struct UCurveFloat* RadiusPercentAtTime; // 0x3a0(0x08)
	struct ASpellTool* SpellTool; // 0x3a8(0x08)
	char pad_3B0[0x118]; // 0x3b0(0x118)

	void OnHit(struct FHitResult& HitResult, bool bDestroyed, bool bHit, bool bBlocked, bool bFailed); // Function Phoenix.MunitionType_AOESpell.OnHit // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	struct ASpellTool* GetSpellTool(); // Function Phoenix.MunitionType_AOESpell.GetSpellTool // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3384650
};

// Class Phoenix.DrainingDraughtEffect
// Size: 0x578 (Inherited: 0x4c8)
struct ADrainingDraughtEffect : AMunitionType_AOESpell {
	float m_CloudRadius; // 0x4c8(0x04)
	float m_AOEDamage; // 0x4cc(0x04)
	float m_AOEDamageRate; // 0x4d0(0x04)
	float m_SeekRadius; // 0x4d4(0x04)
	float m_SeekTime; // 0x4d8(0x04)
	float m_OrbDistance; // 0x4dc(0x04)
	float m_OrbGroundDist; // 0x4e0(0x04)
	float m_OrbRotationRate; // 0x4e4(0x04)
	int32_t m_NumOrbs; // 0x4e8(0x04)
	float m_OrbDamage; // 0x4ec(0x04)
	bool m_bTimingBasedOnOrbAmt; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	float m_BufferTime; // 0x4f4(0x04)
	int32_t m_OrbIncreaseAmt; // 0x4f8(0x04)
	char pad_4FC[0x4]; // 0x4fc(0x04)
	struct TArray<struct UInteractionArchitectAsset*> m_AOEInteractionArchitectMunitionAssets; // 0x500(0x10)
	struct FGameplayTagContainer m_AOEInteractionArchitectMunitionTags; // 0x510(0x20)
	struct AMunitionType_SubsonicSpell* m_OrbMunition; // 0x530(0x08)
	struct USphereComponent* m_OrbSeekSphere; // 0x538(0x08)
	struct USphereComponent* m_CloudDamageSphere; // 0x540(0x08)
	struct TArray<struct ADraingingDraughtOrb*> m_ActiveOrbs; // 0x548(0x10)
	char pad_558[0x20]; // 0x558(0x20)

	void Tick(float DeltaSeconds); // Function Phoenix.DrainingDraughtEffect.Tick // (Native|Public|BlueprintCallable) // @ game+0x327fbd0
	void SpawnOrbs(); // Function Phoenix.DrainingDraughtEffect.SpawnOrbs // (Final|Native|Protected|BlueprintCallable) // @ game+0x327fa90
	void SetNumberOrbs(int32_t NumOrbs); // Function Phoenix.DrainingDraughtEffect.SetNumberOrbs // (Final|Native|Public|BlueprintCallable) // @ game+0x327f7b0
	void SendOutOrb(); // Function Phoenix.DrainingDraughtEffect.SendOutOrb // (Final|Native|Public|BlueprintCallable) // @ game+0x327f640
	void OnOverlapEndSeekSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.DrainingDraughtEffect.OnOverlapEndSeekSphere // (Final|Native|Public|BlueprintCallable) // @ game+0x327f460
	void OnOverlapEndCloudSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.DrainingDraughtEffect.OnOverlapEndCloudSphere // (Final|Native|Public|BlueprintCallable) // @ game+0x327f300
	void OnOverlapBeginSeekSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.DrainingDraughtEffect.OnOverlapBeginSeekSphere // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x327f0e0
	void OnOverlapBeginCloudSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.DrainingDraughtEffect.OnOverlapBeginCloudSphere // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x327eec0
	struct ADraingingDraughtOrb* GetBestAvailableOrb(struct AActor* Target); // Function Phoenix.DrainingDraughtEffect.GetBestAvailableOrb // (Final|Native|Protected|BlueprintCallable) // @ game+0x327ec30
	void DoAOECloudDamageCallback(); // Function Phoenix.DrainingDraughtEffect.DoAOECloudDamageCallback // (Final|Native|Protected|BlueprintCallable) // @ game+0x327ebe0
	void BeginPlay(); // Function Phoenix.DrainingDraughtEffect.BeginPlay // (Native|Public|BlueprintCallable) // @ game+0x327eb40
};

// Class Phoenix.MunitionType_SubsonicSpell
// Size: 0x528 (Inherited: 0x360)
struct AMunitionType_SubsonicSpell : AMunitionType_Base {
	char pad_360[0x18]; // 0x360(0x18)
	bool m_explodeOnContactWithActors; // 0x378(0x01)
	bool m_explodeOnContactWithTerrain; // 0x379(0x01)
	bool CheckForCover; // 0x37a(0x01)
	bool m_spawnStaticMeshInsteadOfTerrainFx; // 0x37b(0x01)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct UStaticMesh* StaticMeshInsteadOfTerrainFx; // 0x380(0x08)
	struct FVector StaticMeshScale; // 0x388(0x0c)
	bool m_explodeWhenLifetimeExpires; // 0x394(0x01)
	bool m_deactivateParticlesOnDeath; // 0x395(0x01)
	bool m_hideMeshOnDeath; // 0x396(0x01)
	bool m_hitOnOverlap; // 0x397(0x01)
	float DelayVelocityTime; // 0x398(0x04)
	float m_delayedDeactivationTime; // 0x39c(0x04)
	float m_delayedParticleDeactivationTime; // 0x3a0(0x04)
	float m_delayedFizzleParticleDeactivationTime; // 0x3a4(0x04)
	float m_delayedDeathTime; // 0x3a8(0x04)
	float ProtegoSpeedMultiplier; // 0x3ac(0x04)
	float ProtegoPerfectSpeedMultiplier; // 0x3b0(0x04)
	bool bProtegoPerfectLoseBounce; // 0x3b4(0x01)
	char SpawnAOECondition; // 0x3b5(0x01)
	char pad_3B6[0x2]; // 0x3b6(0x02)
	struct AMunitionType_Base* m_AOE; // 0x3b8(0x08)
	bool bCanOppugnoAfterProtego; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct AActor* OppugnoPhysicsObjectClass; // 0x3c8(0x08)
	bool bAOEUsesSpellTool; // 0x3d0(0x01)
	char pad_3D1[0x3]; // 0x3d1(0x03)
	float AOERadius; // 0x3d4(0x04)
	bool bAOEHitsVictimAgain; // 0x3d8(0x01)
	bool bCanBeDeflected; // 0x3d9(0x01)
	char pad_3DA[0x2]; // 0x3da(0x02)
	struct FName m_SpawnActorName; // 0x3dc(0x08)
	bool bOnlySpawnOnImpact; // 0x3e4(0x01)
	bool bTrackDistanceTraveled; // 0x3e5(0x01)
	bool bTrackAngleToPlayer; // 0x3e6(0x01)
	char pad_3E7[0x1]; // 0x3e7(0x01)
	struct UAkComponent* ProjectileMotionAkComponent; // 0x3e8(0x08)
	struct FName InventoryItemToReturn; // 0x3f0(0x08)
	float PerceptionNoiseEventLoudness; // 0x3f8(0x04)
	float PerceptionNoiseEventMaxRange; // 0x3fc(0x04)
	struct AActor_SubsonicProximity* SubsonicProximityActorClass; // 0x400(0x08)
	struct USphereComponent* SphereComp; // 0x408(0x08)
	struct USubsonicSpellMovementComponent* ProjectileMovementComponent; // 0x410(0x08)
	struct ASpellTool* SpellTool; // 0x418(0x08)
	bool bEnableAsyncLoadAndTrigger; // 0x420(0x01)
	char pad_421[0x7]; // 0x421(0x07)
	struct TSoftClassPtr<UObject> SpawnClass; // 0x428(0x28)
	struct AActor* SpawnClassRef; // 0x450(0x08)
	struct AActor_SubsonicProximity* SubsonicProximityActor; // 0x458(0x08)
	char pad_460[0xb8]; // 0x460(0xb8)
	struct TArray<struct AActor*> OverlapArray; // 0x518(0x10)

	void SetOnlyHitActor(struct AActor* OnlyHit, struct FName CollisionProfile); // Function Phoenix.MunitionType_SubsonicSpell.SetOnlyHitActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3384bb0
	void PlayTerrainImpact(struct UObject* ImpactObject, struct FVector& ImpactLocation, struct FVector& ImpactNormal, struct FVector& ImpactVelocity); // Function Phoenix.MunitionType_SubsonicSpell.PlayTerrainImpact // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3384700
	void OnHit(struct FHitResult& HitResult, bool bDestroyed, bool bHit, bool bBlocked, bool bFailed); // Function Phoenix.MunitionType_SubsonicSpell.OnHit // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnFizzle(); // Function Phoenix.MunitionType_SubsonicSpell.OnFizzle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFire(struct AActor* Target, struct FVector TargetLocation, struct FVector Velocity); // Function Phoenix.MunitionType_SubsonicSpell.OnFire // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	struct USphereComponent* GetSphereComp(); // Function Phoenix.MunitionType_SubsonicSpell.GetSphereComp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3384690
	float GetSpeed(); // Function Phoenix.MunitionType_SubsonicSpell.GetSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x335d770
	struct USubsonicSpellMovementComponent* GetProjectileMovement(); // Function Phoenix.MunitionType_SubsonicSpell.GetProjectileMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3384410
	void DisableFizzle(bool bDisable); // Function Phoenix.MunitionType_SubsonicSpell.DisableFizzle // (Final|Native|Public|BlueprintCallable) // @ game+0x3384320
	void DestroyMunition(); // Function Phoenix.MunitionType_SubsonicSpell.DestroyMunition // (Native|Public|BlueprintCallable) // @ game+0x3384300
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.MunitionType_SubsonicSpell.BeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x3384010
	void AbortEarly(); // Function Phoenix.MunitionType_SubsonicSpell.AbortEarly // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.DraingingDraughtOrb
// Size: 0x548 (Inherited: 0x528)
struct ADraingingDraughtOrb : AMunitionType_SubsonicSpell {
	float m_CurActiveRotation; // 0x528(0x04)
	struct FVector m_CurRotAxis; // 0x52c(0x0c)
	float m_AttackingDistance; // 0x538(0x04)
	float m_AttackingAcceleration; // 0x53c(0x04)
	float m_AttackingSpeed; // 0x540(0x04)
	char pad_544[0x4]; // 0x544(0x04)

	void Attack(); // Function Phoenix.DraingingDraughtOrb.Attack // (Native|Public|BlueprintCallable) // @ game+0x327eb20
};

// Class Phoenix.Duel_Manager
// Size: 0x1d0 (Inherited: 0x1b8)
struct UDuel_Manager : UEnemy_Manager {
	char pad_1B8[0x18]; // 0x1b8(0x18)
};

// Class Phoenix.DuelTechnique
// Size: 0x48 (Inherited: 0x28)
struct UDuelTechnique : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UDuelTechniquesController* ParentController; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct UDuelTechniqueState* State; // 0x40(0x08)
};

// Class Phoenix.DuelTechnique_Combo
// Size: 0x58 (Inherited: 0x48)
struct UDuelTechnique_Combo : UDuelTechnique {
	char pad_48[0x10]; // 0x48(0x10)
};

// Class Phoenix.DuelTechnique_ComboCount
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_ComboCount : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_CustomEvent
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_CustomEvent : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_Damage
// Size: 0x58 (Inherited: 0x48)
struct UDuelTechnique_Damage : UDuelTechnique {
	char pad_48[0x10]; // 0x48(0x10)
};

// Class Phoenix.DuelTechnique_Deflect
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_Deflect : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_Depulso
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_Depulso : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_ImperiusKill
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_ImperiusKill : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_KillAllEnemies
// Size: 0x60 (Inherited: 0x48)
struct UDuelTechnique_KillAllEnemies : UDuelTechnique {
	char pad_48[0x18]; // 0x48(0x18)
};

// Class Phoenix.DuelTechnique_NoHealthItem
// Size: 0x68 (Inherited: 0x48)
struct UDuelTechnique_NoHealthItem : UDuelTechnique {
	char pad_48[0x20]; // 0x48(0x20)
};

// Class Phoenix.DuelTechnique_Oppugno
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_Oppugno : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_Reaction
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_Reaction : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_SpellEffect
// Size: 0x50 (Inherited: 0x48)
struct UDuelTechnique_SpellEffect : UDuelTechnique {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.DuelTechnique_SpellEffectMultiple
// Size: 0x70 (Inherited: 0x48)
struct UDuelTechnique_SpellEffectMultiple : UDuelTechnique {
	char pad_48[0x28]; // 0x48(0x28)
};

// Class Phoenix.DuelTechnique_TimedEncounter
// Size: 0x90 (Inherited: 0x48)
struct UDuelTechnique_TimedEncounter : UDuelTechnique {
	char pad_48[0x40]; // 0x48(0x40)
	struct UObject* ControllerOuter; // 0x88(0x08)

	void TimerTick(); // Function Phoenix.DuelTechnique_TimedEncounter.TimerTick // (Final|Native|Private) // @ game+0x327fc60
	bool InitializeImpl(); // Function Phoenix.DuelTechnique_TimedEncounter.InitializeImpl // (Final|Native|Public) // @ game+0x1722030
};

// Class Phoenix.DuelTechnique_TimedJuggle
// Size: 0xd0 (Inherited: 0x48)
struct UDuelTechnique_TimedJuggle : UDuelTechnique {
	char pad_48[0x80]; // 0x48(0x80)
	struct UObject* ControllerOuter; // 0xc8(0x08)

	void TimerTick(); // Function Phoenix.DuelTechnique_TimedJuggle.TimerTick // (Final|Native|Private) // @ game+0x327fc80
};

// Class Phoenix.DuelTechniquesController
// Size: 0xb8 (Inherited: 0x28)
struct UDuelTechniquesController : UObject {
	struct UObject* Owner; // 0x28(0x08)
	char pad_30[0x10]; // 0x30(0x10)
	struct TArray<struct UDuelTechnique*> SelectedDuelTechniques; // 0x40(0x10)
	struct TMap<struct TWeakObjectPtr<struct UCombatVolumeGroup>, struct FDuelTechniqueEncounterState> StashedDuelTechniquesProgress; // 0x50(0x50)
	struct TArray<struct FEncounterDuelTechniqueOverride> SelectionOverridesCheat; // 0xa0(0x10)
	char pad_B0[0x8]; // 0xb0(0x08)

	void OnCombatVolumeGroupDestroyed(struct UCombatVolumeGroup* Group); // Function Phoenix.DuelTechniquesController.OnCombatVolumeGroupDestroyed // (Final|Native|Public) // @ game+0x327ee10
};

// Class Phoenix.DuelTechniquesHUDBase
// Size: 0x300 (Inherited: 0x2e8)
struct UDuelTechniquesHUDBase : UHUDElementGroup {
	char pad_2E8[0x18]; // 0x2e8(0x18)

	void OnTimedTechniqueUpdated(struct FName TechniqueID, struct FText& TimeStr); // Function Phoenix.DuelTechniquesHUDBase.OnTimedTechniqueUpdated // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnDuelTechniqueUpdatedByID(struct FName TechniqueID, int32_t NewValue); // Function Phoenix.DuelTechniquesHUDBase.OnDuelTechniqueUpdatedByID // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDuelTechniquesInitialized(struct TArray<struct FDuelTechnique_UIData>& TechniqueUIData); // Function Phoenix.DuelTechniquesHUDBase.OnDuelTechniquesInitialized // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnDuelTechniquesDone(); // Function Phoenix.DuelTechniquesHUDBase.OnDuelTechniquesDone // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDuelTechniqueProgressFailedByID(struct FName TechniqueID, bool IsNew); // Function Phoenix.DuelTechniquesHUDBase.OnDuelTechniqueProgressFailedByID // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDuelTechniqueProgressCompletedByID(struct FName TechniqueID, bool IsNew); // Function Phoenix.DuelTechniquesHUDBase.OnDuelTechniqueProgressCompletedByID // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideUITimerExpired(); // Function Phoenix.DuelTechniquesHUDBase.HideUITimerExpired // (Final|Native|Private) // @ game+0x327ecd0
};

// Class Phoenix.DuelTechniquesManager
// Size: 0x5e8 (Inherited: 0x28)
struct UDuelTechniquesManager : UObject {
	char pad_28[0x4d0]; // 0x28(0x4d0)
	struct TMap<struct FName, struct FName> CombatVolumeGroupDynamic; // 0x4f8(0x50)
	struct TMap<struct FName, struct FDuelTechniqueEncounterState> DuelTechniquesEncounterDynamic; // 0x548(0x50)
	struct TMap<struct FName, struct UDuelTechniqueStat*> DuelTechniqueIDToStats; // 0x598(0x50)

	void OnSaveGameLoaded(); // Function Phoenix.DuelTechniquesManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x327f5c0
	void OnGameToBeSaved(); // Function Phoenix.DuelTechniquesManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x327eea0
};

// Class Phoenix.DuelTechniqueStat
// Size: 0x38 (Inherited: 0x28)
struct UDuelTechniqueStat : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Phoenix.DuelTechniqueState
// Size: 0x168 (Inherited: 0x28)
struct UDuelTechniqueState : UObject {
	char pad_28[0x140]; // 0x28(0x140)
};

// Class Phoenix.Enemy_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_AttackChoice : UObject {
};

// Class Phoenix.Dugbog_AttackChoice_StealthAttack
// Size: 0x28 (Inherited: 0x28)
struct UDugbog_AttackChoice_StealthAttack : UEnemy_AttackChoice {
};

// Class Phoenix.Dugbog_MobilityChoice
// Size: 0x30 (Inherited: 0x28)
struct UDugbog_MobilityChoice : UNPC_MobilityChoice {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.MapScreenBase
// Size: 0x4d8 (Inherited: 0x3c8)
struct UMapScreenBase : UTabPageWidget {
	struct UToolTipPopoutWidget* ToolTipPopup2; // 0x3c8(0x08)
	struct UMapRegionInfoWidget* RegionInfoPopup; // 0x3d0(0x08)
	struct UPhoenixTextBlock* DebugRegion; // 0x3d8(0x08)
	struct AMapPawn* MapPawn; // 0x3e0(0x08)
	struct UFastTravelList* FastTravelList; // 0x3e8(0x08)
	struct UCanvasPanel* IconContainer; // 0x3f0(0x08)
	char pad_3F8[0xe0]; // 0x3f8(0xe0)

	void ZoomOutReleased_Event(); // Function Phoenix.MapScreenBase.ZoomOutReleased_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ZoomOutPressed_Event(); // Function Phoenix.MapScreenBase.ZoomOutPressed_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ZoomInReleased_Event(); // Function Phoenix.MapScreenBase.ZoomInReleased_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ZoomInPressed_Event(); // Function Phoenix.MapScreenBase.ZoomInPressed_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void WayPointUnset_Event(); // Function Phoenix.MapScreenBase.WayPointUnset_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void WayPointSet_Event(); // Function Phoenix.MapScreenBase.WayPointSet_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UnregisterBButton(); // Function Phoenix.MapScreenBase.UnregisterBButton // (Final|Native|Public|BlueprintCallable) // @ game+0x3351760
	void TierChanged_Event(); // Function Phoenix.MapScreenBase.TierChanged_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowOverlandMissionsAvailable(); // Function Phoenix.MapScreenBase.ShowOverlandMissionsAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowHogwartsMissionsAvailable(); // Function Phoenix.MapScreenBase.ShowHogwartsMissionsAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowHogsmeadeMissionsAvailable(); // Function Phoenix.MapScreenBase.ShowHogsmeadeMissionsAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowFastTravelList(); // Function Phoenix.MapScreenBase.ShowFastTravelList // (Final|Native|Public|BlueprintCallable) // @ game+0x33513c0
	void SetZoomType(enum class EMapZoomTypes ZoomType); // Function Phoenix.MapScreenBase.SetZoomType // (Final|Native|Public|BlueprintCallable) // @ game+0x3351320
	void SetTipLegend_Event(struct FText& NewLegend); // Function Phoenix.MapScreenBase.SetTipLegend_Event // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetPath(); // Function Phoenix.MapScreenBase.SetPath // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetMouseDelta(struct FVector2D Delta); // Function Phoenix.MapScreenBase.SetMouseDelta // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33510f0
	void SetMapType(enum class EMapTypes MapType); // Function Phoenix.MapScreenBase.SetMapType // (Final|Native|Public|BlueprintCallable) // @ game+0x3350fe0
	void SetLocationName_Event(struct FString PrimarayLocationName); // Function Phoenix.MapScreenBase.SetLocationName_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetLevelName_Event(struct FString LevelName); // Function Phoenix.MapScreenBase.SetLevelName_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetLegendStrings(struct TArray<struct FLegendItemData>& LegendStrings); // Function Phoenix.MapScreenBase.SetLegendStrings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3350e80
	void SetLegend(struct TArray<struct FLegendItemData>& LegendStrings); // Function Phoenix.MapScreenBase.SetLegend // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetIsFilterShowing(bool ShowFilter); // Function Phoenix.MapScreenBase.SetIsFilterShowing // (Final|Native|Public|BlueprintCallable) // @ game+0x3350c20
	void SetIconContainerSize(); // Function Phoenix.MapScreenBase.SetIconContainerSize // (Final|Native|Public|BlueprintCallable) // @ game+0x3350ae0
	void SetCoverVisibilityAlpha_Event(float Alpha); // Function Phoenix.MapScreenBase.SetCoverVisibilityAlpha_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetCoverVisibility_Event(bool Enable); // Function Phoenix.MapScreenBase.SetCoverVisibility_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetCoverVisibility(bool Enable); // Function Phoenix.MapScreenBase.SetCoverVisibility // (Native|Public|BlueprintCallable) // @ game+0x3350600
	void SetCoverAlpha(float Alpha); // Function Phoenix.MapScreenBase.SetCoverAlpha // (Native|Public|BlueprintCallable) // @ game+0x19816a0
	bool ScreenHandleInput(struct FKey Input); // Function Phoenix.MapScreenBase.ScreenHandleInput // (Native|Public|BlueprintCallable) // @ game+0x3350330
	void RightMouseButtonReleased(); // Function Phoenix.MapScreenBase.RightMouseButtonReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x3350310
	void RightMouseButtonPressed(); // Function Phoenix.MapScreenBase.RightMouseButtonPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x33502f0
	void RegisterBButton(); // Function Phoenix.MapScreenBase.RegisterBButton // (Final|Native|Public|BlueprintCallable) // @ game+0x3350290
	void RegionInfoUpdated_Event(); // Function Phoenix.MapScreenBase.RegionInfoUpdated_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RegionHovered_Event(enum class ERegionType MapRegion, int32_t RegionIndex, struct UUserWidget* IconWidget); // Function Phoenix.MapScreenBase.RegionHovered_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PlayIconBurst_Event(struct AActor* NiagaraActor); // Function Phoenix.MapScreenBase.PlayIconBurst_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PlayFanfare_Event(struct UMapIcon* Icon); // Function Phoenix.MapScreenBase.PlayFanfare_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUpdateToolTip_Event(struct FMapToolTipData ToolTipData); // Function Phoenix.MapScreenBase.OnUpdateToolTip_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUnhovered_Event(); // Function Phoenix.MapScreenBase.OnUnhovered_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHovered_Event(struct FMapToolTipData ToolTipData); // Function Phoenix.MapScreenBase.OnHovered_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool MouseTimeGreaterThanClick(enum class EMapScreenMouseButtonID buttonID); // Function Phoenix.MapScreenBase.MouseTimeGreaterThanClick // (Final|Native|Public|BlueprintCallable) // @ game+0x334ffc0
	void MiddleMouseButtonReleased(); // Function Phoenix.MapScreenBase.MiddleMouseButtonReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x334fc20
	void MiddleMouseButtonPressed(); // Function Phoenix.MapScreenBase.MiddleMouseButtonPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x334fc00
	void MapStop_Event(); // Function Phoenix.MapScreenBase.MapStop_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void MapStart_Event(); // Function Phoenix.MapScreenBase.MapStart_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void MapMove_Event(); // Function Phoenix.MapScreenBase.MapMove_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void MapChanged_Event(); // Function Phoenix.MapScreenBase.MapChanged_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LockMapInput(bool Lock); // Function Phoenix.MapScreenBase.LockMapInput // (Final|Native|Public|BlueprintCallable) // @ game+0x334f140
	void LeftMouseButtonReleased(); // Function Phoenix.MapScreenBase.LeftMouseButtonReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x334eee0
	void LeftMouseButtonPressed(); // Function Phoenix.MapScreenBase.LeftMouseButtonPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x334eec0
	bool IsMouseButtonAClick(enum class EMapScreenMouseButtonID buttonID); // Function Phoenix.MapScreenBase.IsMouseButtonAClick // (Final|Native|Public|BlueprintCallable) // @ game+0x334e980
	bool IsFastTravelListVisible(); // Function Phoenix.MapScreenBase.IsFastTravelListVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x334e520
	bool IsAnyTutorialActive(); // Function Phoenix.MapScreenBase.IsAnyTutorialActive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x334e070
	void IconShown_Event(struct UMapIcon* iconHidden); // Function Phoenix.MapScreenBase.IconShown_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void IconHidden_Event(struct UMapIcon* iconHidden); // Function Phoenix.MapScreenBase.IconHidden_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HitMapBounds_Event(); // Function Phoenix.MapScreenBase.HitMapBounds_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideFastTravelList(); // Function Phoenix.MapScreenBase.HideFastTravelList // (Final|Native|Public|BlueprintCallable) // @ game+0x334e050
	float GetZoomInputDelta(); // Function Phoenix.MapScreenBase.GetZoomInputDelta // (Final|Native|Public|BlueprintCallable) // @ game+0x334df00
	float GetZoomFactor(); // Function Phoenix.MapScreenBase.GetZoomFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x334ded0
	struct UUIManager* GetUIManager(); // Function Phoenix.MapScreenBase.GetUIManager // (Final|Native|Public|BlueprintCallable) // @ game+0x334de80
	enum class EMapZoomTypes GetTier(); // Function Phoenix.MapScreenBase.GetTier // (Final|Native|Public|BlueprintCallable) // @ game+0x334dd90
	float GetPressedButtonTime(enum class EMapScreenMouseButtonID buttonID); // Function Phoenix.MapScreenBase.GetPressedButtonTime // (Final|Native|Public|BlueprintCallable) // @ game+0x334dbc0
	struct FVector2D GetMovementDelta(); // Function Phoenix.MapScreenBase.GetMovementDelta // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334daa0
	struct FVector2D GetMouseDelta(); // Function Phoenix.MapScreenBase.GetMouseDelta // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334da70
	struct FMapScreenMouseButton GetMouseButtonInput(enum class EMapScreenMouseButtonID buttonID); // Function Phoenix.MapScreenBase.GetMouseButtonInput // (Final|Native|Public|BlueprintCallable) // @ game+0x334d9d0
	enum class EMapTypes GetMapType(); // Function Phoenix.MapScreenBase.GetMapType // (Final|Native|Public|BlueprintCallable) // @ game+0x334d940
	struct UMapSubSystem* GetMapSubSystem(); // Function Phoenix.MapScreenBase.GetMapSubSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x334d900
	struct UMapBase* GetMapBase(); // Function Phoenix.MapScreenBase.GetMapBase // (Final|Native|Public|BlueprintCallable) // @ game+0x334d5b0
	bool GetIsMouseInScreen(); // Function Phoenix.MapScreenBase.GetIsMouseInScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x334d480
	bool GetIsFilterShowing(); // Function Phoenix.MapScreenBase.GetIsFilterShowing // (Final|Native|Public|BlueprintCallable) // @ game+0x334d420
	struct FUMGConsolidatedAxisInputData GetInputAxisData(); // Function Phoenix.MapScreenBase.GetInputAxisData // (Final|Native|Public|BlueprintCallable) // @ game+0x334d3e0
	void ExitMapScreen_Event(); // Function Phoenix.MapScreenBase.ExitMapScreen_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DisableOverlandButton(); // Function Phoenix.MapScreenBase.DisableOverlandButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DisableHogwartsButton(); // Function Phoenix.MapScreenBase.DisableHogwartsButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DisableHogsmeadeButton(); // Function Phoenix.MapScreenBase.DisableHogsmeadeButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearMouseButtons(); // Function Phoenix.MapScreenBase.ClearMouseButtons // (Final|Native|Public|BlueprintCallable) // @ game+0x334c6f0
	void ClearMouseButton(enum class EMapScreenMouseButtonID buttonID); // Function Phoenix.MapScreenBase.ClearMouseButton // (Final|Native|Public|BlueprintCallable) // @ game+0x334c660
};

// Class Phoenix.DungeonMapScreen
// Size: 0x4e0 (Inherited: 0x4d8)
struct UDungeonMapScreen : UMapScreenBase {
	struct UMapDungeon* DungeonMap; // 0x4d8(0x08)
};

// Class Phoenix.WaterVolumeBase
// Size: 0x4b0 (Inherited: 0x248)
struct AWaterVolumeBase : AActor {
	struct UBoxComponent* WaterBox; // 0x248(0x08)
	struct UStaticMeshComponent* DeepCollision; // 0x250(0x08)
	struct UStaticMeshComponent* ShallowCollision; // 0x258(0x08)
	bool bDisableFunctionality; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float PhysicsVolumeFluidFriction; // 0x264(0x04)
	struct UPhoenixPhysicalMaterial* WaterPhysMat; // 0x268(0x08)
	struct UPhoenixPhysicalMaterial* PuddlePhysMat; // 0x270(0x08)
	struct TArray<struct AActor*> OverlapIgnores; // 0x278(0x10)
	struct TArray<struct AActor*> WaterIgnoreActors; // 0x288(0x10)
	struct TArray<struct AWaterVolumeBase*> OverlappingWaterVolumes; // 0x298(0x10)
	struct TArray<struct ARiverVolume*> OverlappingRiverVolumes; // 0x2a8(0x10)
	float WaterHeight; // 0x2b8(0x04)
	float MinWaterHeight; // 0x2bc(0x04)
	float ForcePercent; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct TArray<struct AActor*> BuoyancyActors; // 0x2c8(0x10)
	struct TArray<struct FVector> BuoyancyForces; // 0x2d8(0x10)
	struct TArray<struct UPrimitiveComponent*> BuoyancyMeshes; // 0x2e8(0x10)
	struct TArray<float> BuoyancyMasses; // 0x2f8(0x10)
	struct TArray<bool> MeshInWater; // 0x308(0x10)
	struct TArray<struct AActor*> MeshUnderwater; // 0x318(0x10)
	struct TArray<struct URagdollControlComponent*> ObjectRagdollComps; // 0x328(0x10)
	struct TArray<struct AActor*> ToBeRemoved; // 0x338(0x10)
	struct TArray<struct ACharacter*> OverlappingCharacters; // 0x348(0x10)
	struct TArray<struct UAmbulatory_MovementComponent*> CharacterMovementComps; // 0x358(0x10)
	struct TArray<enum class ETargetSpeedMode> CharSpeedModes; // 0x368(0x10)
	struct TArray<struct URagdollControlComponent*> CharacterRagdollComps; // 0x378(0x10)
	struct TArray<struct UWaterInteractionComponent*> CharacterWICs; // 0x388(0x10)
	struct TArray<bool> CharInWater; // 0x398(0x10)
	char pad_3A8[0x10]; // 0x3a8(0x10)
	struct TArray<struct ACharacter*> RemoveChars; // 0x3b8(0x10)
	struct TArray<struct ACharacter*> TransferringChars; // 0x3c8(0x10)
	struct TArray<struct ACharacter*> KillInWaterChars; // 0x3d8(0x10)
	struct TArray<struct UWaterInteractionComponent*> KIW_WICs; // 0x3e8(0x10)
	struct TArray<bool> KIWInWater; // 0x3f8(0x10)
	struct TArray<struct ACharacter*> RemoveKIWChars; // 0x408(0x10)
	struct TArray<struct AActor*> FloatVFXActors; // 0x418(0x10)
	struct TArray<struct AActor*> FloatVFXTransfers; // 0x428(0x10)
	struct TArray<struct AActor*> IgnoreEnterWaterVFX; // 0x438(0x10)
	struct TArray<struct FMultiFX2Handle> FloatVFXHandles; // 0x448(0x10)
	struct TMap<struct AActor*, float> RecentExitMap; // 0x458(0x50)
	char pad_4A8[0x8]; // 0x4a8(0x08)

	void UnDamp(struct UPrimitiveComponent* Mesh, struct UObjectStateInfo* ObjectState); // Function Phoenix.WaterVolumeBase.UnDamp // (Final|Native|Protected|BlueprintCallable) // @ game+0x34de0f0
	void SplashVFX(bool i_Char, enum class EWaterVfx i_vfx, struct AActor* curActor, struct UPrimitiveComponent* PrimComp, float waterZ, struct FVector waterNorm, bool bShallow); // Function Phoenix.WaterVolumeBase.SplashVFX // (Final|Native|Protected|HasDefaults) // @ game+0x34dde90
	void SetupObject(struct AActor* Actor, struct UPrimitiveComponent* Mesh, struct UObjectStateInfo* ObjectState, bool bShouldFloat, bool bSkipIgnore, bool bOverlappingLakeSphere, struct URagdollControlComponent* RagdollComp); // Function Phoenix.WaterVolumeBase.SetupObject // (Native|Protected|BlueprintCallable) // @ game+0x34dda70
	void SetupCharacter(struct ACharacter* Character, struct UObjectStateInfo* ObjectState, struct URagdollControlComponent* RagdollComp, bool bSkipIgnore, bool bOverlappingLakeSphere); // Function Phoenix.WaterVolumeBase.SetupCharacter // (Native|Protected|BlueprintCallable) // @ game+0x34dd8c0
	void RemoveVFX(enum class EWaterVfx i_vfx, struct AActor* curActor); // Function Phoenix.WaterVolumeBase.RemoveVFX // (Final|Native|Protected) // @ game+0x34dd760
	bool RemoveActors(); // Function Phoenix.WaterVolumeBase.RemoveActors // (Native|Protected) // @ game+0x34dd730
	void OnRagdollRecoveredInWater(struct URagdollControlComponent* RagdollControlComponent); // Function Phoenix.WaterVolumeBase.OnRagdollRecoveredInWater // (Final|Native|Public) // @ game+0x34dd680
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.WaterVolumeBase.OnOverlapEnd // (Native|Protected) // @ game+0x34dd530
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.WaterVolumeBase.OnOverlapBegin // (Native|Protected|HasOutParms) // @ game+0x34dd1b0
	struct FBoxSphereBounds GetBounds(struct UPrimitiveComponent* Mesh); // Function Phoenix.WaterVolumeBase.GetBounds // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x34dc8f0
	void ExplosionVFX(struct AActor* curActor, struct UPrimitiveComponent* PrimComp, struct FVector Location, bool inWater, float InForce, float Radius, float Falloff); // Function Phoenix.WaterVolumeBase.ExplosionVFX // (Final|Native|Public|HasDefaults) // @ game+0x34dc6b0
	void Damp(struct UPrimitiveComponent* Mesh, struct UObjectStateInfo* ObjectState); // Function Phoenix.WaterVolumeBase.Damp // (Final|Native|Protected|BlueprintCallable) // @ game+0x34dc5e0
	void CalcForce(struct AActor* Actor, struct UPrimitiveComponent* Mesh, float i_Mass, bool bEmplace, struct URagdollControlComponent* RagdollComp); // Function Phoenix.WaterVolumeBase.CalcForce // (Final|Native|Protected|BlueprintCallable) // @ game+0x34dc410
};

// Class Phoenix.DungeonWaterVolume
// Size: 0x4d0 (Inherited: 0x4b0)
struct ADungeonWaterVolume : AWaterVolumeBase {
	struct USceneComponent* RootComp; // 0x4b0(0x08)
	struct UStaticMeshComponent* SurfacePlane; // 0x4b8(0x08)
	bool bShallowWater; // 0x4c0(0x01)
	char pad_4C1[0x7]; // 0x4c1(0x07)
	struct UMaterialInstance* WaterMaterial; // 0x4c8(0x08)

	void SetupWater(struct FBoxSphereBounds i_Bounds, struct UStaticMesh* i_SurfaceMesh, struct FVector& i_SurfaceLocation, struct UStaticMesh* i_DeepCollision, struct FVector& i_DeepLocation, struct UStaticMesh* i_ShallowCollision, struct FVector& i_ShallowLocation); // Function Phoenix.DungeonWaterVolume.SetupWater // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x327f840
	void FinalizeSetup(); // Function Phoenix.DungeonWaterVolume.FinalizeSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.DW_RaiseDead_AttackChoice_GameChanger
// Size: 0x28 (Inherited: 0x28)
struct UDW_RaiseDead_AttackChoice_GameChanger : UEnemy_AttackChoice {
};

// Class Phoenix.SummonSpider_Backup_AttackChoice
// Size: 0x30 (Inherited: 0x28)
struct USummonSpider_Backup_AttackChoice : UDW_RaiseDead_AttackChoice_GameChanger {
	struct UEnemyAIAttackData* DovSpawnAttackData; // 0x28(0x08)
};

// Class Phoenix.DW_ReplicateSelf_AttackChoice_GameChanger
// Size: 0x28 (Inherited: 0x28)
struct UDW_ReplicateSelf_AttackChoice_GameChanger : UEnemy_AttackChoice {
};

// Class Phoenix.DW_Replicant_AttackChoice_GameChanger
// Size: 0x28 (Inherited: 0x28)
struct UDW_Replicant_AttackChoice_GameChanger : UEnemy_AttackChoice {
};

// Class Phoenix.DW_Animagus_AttackChoice_GameChanger
// Size: 0x28 (Inherited: 0x28)
struct UDW_Animagus_AttackChoice_GameChanger : UEnemy_AttackChoice {
};

// Class Phoenix.DW_Summon_Reinforcements_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct UDW_Summon_Reinforcements_AttackChoice : UEnemy_AttackChoice {
};

// Class Phoenix.DW_Taunt_Dragon_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct UDW_Taunt_Dragon_AttackChoice : UEnemy_AttackChoice {
};

// Class Phoenix.Dynamic_MobilityChoice
// Size: 0xa0 (Inherited: 0x28)
struct UDynamic_MobilityChoice : UNPC_MobilityChoice {
	float StrafeMinDistToDest; // 0x28(0x04)
	float StrafeMinDistToTarget; // 0x2c(0x04)
	float StrafeMaxAngleToDest; // 0x30(0x04)
	float StrafeIgnoreAngleDist; // 0x34(0x04)
	float SprintMinDist; // 0x38(0x04)
	float SprintDistStart; // 0x3c(0x04)
	float SprintDistStop; // 0x40(0x04)
	float StartChangeInterval; // 0x44(0x04)
	float ChangeInterval; // 0x48(0x04)
	enum class ENPC_Mobility DebugMobility; // 0x4c(0x01)
	char pad_4D[0x53]; // 0x4d(0x53)
};

// Class Phoenix.DynamicBranchComponent
// Size: 0x260 (Inherited: 0xc8)
struct UDynamicBranchComponent : UActorComponent {
	int32_t SupportedAbilities; // 0xc8(0x04)
	bool bStartImmediateBranchIfBranchTaskNotActive; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	struct FMulticastInlineDelegate BeginAbilityDelegate; // 0xd0(0x10)
	char pad_E0[0x170]; // 0xe0(0x170)
	struct UAblAbilityComponent* AbilityComponent; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)

	void StartDynamicBranch(enum class EEnemy_Ability InAbility, enum class EEnemy_Ability InNextAbility, bool bStartImmediate); // Function Phoenix.DynamicBranchComponent.StartDynamicBranch // (Final|Native|Public|BlueprintCallable) // @ game+0x327fab0
	void SetAbilitySupported(enum class EEnemy_Ability InAbility); // Function Phoenix.DynamicBranchComponent.SetAbilitySupported // (Final|Native|Public|BlueprintCallable) // @ game+0x327f730
	void SetAbilityActive(enum class EEnemy_Ability InAbility, bool bActive); // Function Phoenix.DynamicBranchComponent.SetAbilityActive // (Final|Native|Public|BlueprintCallable) // @ game+0x327f660
	bool IsAbilitySupported(enum class EEnemy_Ability InAbility); // Function Phoenix.DynamicBranchComponent.IsAbilitySupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x327ed80
	bool IsAbilityActive(enum class EEnemy_Ability InAbility); // Function Phoenix.DynamicBranchComponent.IsAbilityActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x327ecf0
	enum class EEnemy_Ability GetActiveAbility(); // Function Phoenix.DynamicBranchComponent.GetActiveAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x327ec00
	void ClearAbilitySupported(enum class EEnemy_Ability InAbility); // Function Phoenix.DynamicBranchComponent.ClearAbilitySupported // (Final|Native|Public|BlueprintCallable) // @ game+0x327eb60
};

// Class Phoenix.DynamicDB_Interface
// Size: 0x28 (Inherited: 0x28)
struct UDynamicDB_Interface : UInterface {

	void SetupDBQueries(); // Function Phoenix.DynamicDB_Interface.SetupDBQueries // (Native|Public) // @ game+0x32872b0
};

// Class Phoenix.DynamicFarFoliageManager
// Size: 0x390 (Inherited: 0x248)
struct ADynamicFarFoliageManager : AActor {
	struct AInstancedFoliageActor* HostInstancedFoliageActor; // 0x248(0x08)
	struct TArray<struct UFoliageInstancedStaticMeshComponent*> HostInstancedFoliageComponents; // 0x250(0x10)
	struct TArray<int32_t> ComponentsInstanceCount; // 0x260(0x10)
	struct TArray<struct FWorldFoliageData> WorldFoliageData; // 0x270(0x10)
	int32_t TotalInstancesCount; // 0x280(0x04)
	char pad_284[0x10c]; // 0x284(0x10c)

	void MainProcessIteration(float DeltaTime); // Function Phoenix.DynamicFarFoliageManager.MainProcessIteration // (Final|Native|Public|BlueprintCallable) // @ game+0x3286570
};

// Class Phoenix.DynamicObject_Interface
// Size: 0x28 (Inherited: 0x28)
struct UDynamicObject_Interface : UInterface {

	void DOUpdateParents(); // Function Phoenix.DynamicObject_Interface.DOUpdateParents // (Native|Public) // @ game+0x3285a30
	void DOUpdateChildren(); // Function Phoenix.DynamicObject_Interface.DOUpdateChildren // (Native|Public) // @ game+0x3285a10
	void DOUpdate(); // Function Phoenix.DynamicObject_Interface.DOUpdate // (Native|Public) // @ game+0x32859f0
	void DOUnregisterWithDOManager(struct AActor* DynamicObject); // Function Phoenix.DynamicObject_Interface.DOUnregisterWithDOManager // (Native|Public) // @ game+0x3285960
	void DOSetup(); // Function Phoenix.DynamicObject_Interface.DOSetup // (Native|Public) // @ game+0x3285940
	void DOSetDynamicObjectRegistered(bool inRegistered); // Function Phoenix.DynamicObject_Interface.DOSetDynamicObjectRegistered // (Native|Public) // @ game+0x32858b0
	void DORequestActivation(struct AActor* inRequestingActor); // Function Phoenix.DynamicObject_Interface.DORequestActivation // (Native|Public) // @ game+0x3285820
	void DORemoveParentActor(struct AActor* InParent); // Function Phoenix.DynamicObject_Interface.DORemoveParentActor // (Native|Public) // @ game+0x3285670
	void DORemovedAsParent(struct AActor* inChild); // Function Phoenix.DynamicObject_Interface.DORemovedAsParent // (Native|Public) // @ game+0x3285790
	void DORemovedAsChild(struct AActor* InParent); // Function Phoenix.DynamicObject_Interface.DORemovedAsChild // (Native|Public) // @ game+0x3285700
	void DORemoveChildActor(struct AActor* inChild); // Function Phoenix.DynamicObject_Interface.DORemoveChildActor // (Native|Public) // @ game+0x32855e0
	void DORegisterWithDOManager(struct AActor* DynamicObject); // Function Phoenix.DynamicObject_Interface.DORegisterWithDOManager // (Native|Public) // @ game+0x3285550
	bool DOIsActive(); // Function Phoenix.DynamicObject_Interface.DOIsActive // (Native|Public) // @ game+0x3285520
	bool DOHasParent(); // Function Phoenix.DynamicObject_Interface.DOHasParent // (Native|Public) // @ game+0x32854f0
	bool DOHasChildren(); // Function Phoenix.DynamicObject_Interface.DOHasChildren // (Native|Public) // @ game+0x32854c0
	bool DOHasActivationRequest(); // Function Phoenix.DynamicObject_Interface.DOHasActivationRequest // (Native|Public) // @ game+0x3285490
	bool DOGetDynamciObjectRegistered(); // Function Phoenix.DynamicObject_Interface.DOGetDynamciObjectRegistered // (Native|Public) // @ game+0x3285460
	void DODestroyed(); // Function Phoenix.DynamicObject_Interface.DODestroyed // (Native|Public) // @ game+0x3285440
	bool DODeactivationCheck(struct FVector Pos); // Function Phoenix.DynamicObject_Interface.DODeactivationCheck // (Native|Public|HasDefaults) // @ game+0x32853a0
	void DODeactivate(); // Function Phoenix.DynamicObject_Interface.DODeactivate // (Native|Public) // @ game+0x3285380
	void DOCleanup(); // Function Phoenix.DynamicObject_Interface.DOCleanup // (Native|Public) // @ game+0x3285360
	bool DOAllowsAutoActivation(); // Function Phoenix.DynamicObject_Interface.DOAllowsAutoActivation // (Native|Public) // @ game+0x3285330
	bool DOAllowAddAsParent(struct AActor* inChild); // Function Phoenix.DynamicObject_Interface.DOAllowAddAsParent // (Native|Public) // @ game+0x3285290
	bool DOAllowAddAsChild(struct AActor* InParent); // Function Phoenix.DynamicObject_Interface.DOAllowAddAsChild // (Native|Public) // @ game+0x32851f0
	bool DOAddParentActor(struct AActor* InParent); // Function Phoenix.DynamicObject_Interface.DOAddParentActor // (Native|Public) // @ game+0x3285030
	void DOAddedAsParent(struct AActor* inChild); // Function Phoenix.DynamicObject_Interface.DOAddedAsParent // (Native|Public) // @ game+0x3285160
	void DOAddedAsChild(struct AActor* InParent); // Function Phoenix.DynamicObject_Interface.DOAddedAsChild // (Native|Public) // @ game+0x32850d0
	bool DOAddChildActor(struct AActor* inChild); // Function Phoenix.DynamicObject_Interface.DOAddChildActor // (Native|Public) // @ game+0x3284f90
	bool DOActivationCheck(struct FVector Pos); // Function Phoenix.DynamicObject_Interface.DOActivationCheck // (Native|Public|HasDefaults) // @ game+0x3284ef0
	void DOActivate(); // Function Phoenix.DynamicObject_Interface.DOActivate // (Native|Public) // @ game+0x3284ed0
};

// Class Phoenix.DynamicObjectInfo
// Size: 0xf0 (Inherited: 0x28)
struct UDynamicObjectInfo : UObject {
	struct AActor* ClassToSpawn; // 0x28(0x08)
	int32_t MaxInstances; // 0x30(0x04)
	int32_t ActiveInstanceCount; // 0x34(0x04)
	int32_t MaxGeneratedSpawners; // 0x38(0x04)
	bool bCreateDefaultSpawner; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float ObjectSpawnChance; // 0x40(0x04)
	int32_t MinPerSpawn; // 0x44(0x04)
	int32_t MaxPerSpawn; // 0x48(0x04)
	int32_t SpawnVariance; // 0x4c(0x04)
	float InstanceSpawnChance; // 0x50(0x04)
	float SpawnRadius; // 0x54(0x04)
	struct FRotator SpawnRotation; // 0x58(0x0c)
	bool bUseRandomYawRotation; // 0x64(0x01)
	bool bSpawnOnGround; // 0x65(0x01)
	bool bSharedActorCount; // 0x66(0x01)
	char pad_67[0x1]; // 0x67(0x01)
	float MinDelayBetweenSpawns; // 0x68(0x04)
	float MaxDelayBetweenSpawns; // 0x6c(0x04)
	bool bUseSpawningLimits; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	struct FObjectSpawnTime SpawnStartTimeOfDay; // 0x74(0x0c)
	struct FObjectSpawnTime SpawnStopTimeOfDay; // 0x80(0x0c)
	bool bReverseTimeCheck; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	int32_t SpawnStartDayOfYear; // 0x90(0x04)
	int32_t SpawnStopDayOfYear; // 0x94(0x04)
	int32_t SpawnDaysAllowed; // 0x98(0x04)
	int32_t SpawnMonthsAllowed; // 0x9c(0x04)
	int32_t SpawnSeasonsAllowed; // 0xa0(0x04)
	int32_t SpawnSpecialEventEnum; // 0xa4(0x04)
	float SpawnOffset; // 0xa8(0x04)
	float MinAltitude; // 0xac(0x04)
	float MaxAltitude; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<struct FObjectHabitatFoliageType> HabitatFoliage; // 0xb8(0x10)
	float MinFoliageDensity; // 0xc8(0x04)
	bool bFoliageRequired; // 0xcc(0x01)
	bool bAllowNoFoliage; // 0xcd(0x01)
	char pad_CE[0x2]; // 0xce(0x02)
	float MaxGroundAngle; // 0xd0(0x04)
	int32_t MaxAngleIterations; // 0xd4(0x04)
	int32_t MaxRuntimeSlopeRetries; // 0xd8(0x04)
	bool bVisualiseSpawners; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	struct FColor ObjectSpawnerActiveColor; // 0xe0(0x04)
	struct FColor ObjectSpawnerInactiveColor; // 0xe4(0x04)
	bool bVisualiseSlopeRejects; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.DynamicObjectManager
// Size: 0x438 (Inherited: 0x28)
struct UDynamicObjectManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate m_onLoadFinishedDelegate; // 0x30(0x10)
	struct TMap<struct FString, struct FObjectTrackerData> ObjectTracker; // 0x40(0x50)
	char pad_90[0x248]; // 0x90(0x248)
	struct UGameInstance* pGameInstance; // 0x2d8(0x08)
	struct ARandomEncounterActor* pRandomEncounter; // 0x2e0(0x08)
	char pad_2E8[0x150]; // 0x2e8(0x150)

	bool SpawnObjectByName(struct FString ObjectToSpawn); // Function Phoenix.DynamicObjectManager.SpawnObjectByName // (Final|Native|Public|BlueprintCallable) // @ game+0x32875c0
	struct AActor* SpawnDynamicObject(struct FString ObjectToSpawn, struct FDynamicObjectLoadInfo InSpawnParams); // Function Phoenix.DynamicObjectManager.SpawnDynamicObject // (Final|Native|Public|BlueprintCallable) // @ game+0x32872d0
	void SetDynamicSpawningEnabled(bool bInEnableSpawning); // Function Phoenix.DynamicObjectManager.SetDynamicSpawningEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3286ed0
	void OnSaveGameLoaded(); // Function Phoenix.DynamicObjectManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3286d70
	void ObjectLoaded(); // Function Phoenix.DynamicObjectManager.ObjectLoaded // (Final|Native|Public) // @ game+0x32867d0
	bool LoadDynamicObject(struct FString ObjectToLoad); // Function Phoenix.DynamicObjectManager.LoadDynamicObject // (Final|Native|Public|BlueprintCallable) // @ game+0x3286470
	bool IsObjectLoaded(struct FString ObjectToLoad); // Function Phoenix.DynamicObjectManager.IsObjectLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0x3286350
	struct UDynamicObjectManager* Get(); // Function Phoenix.DynamicObjectManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3285df0
	struct FTransform FindValidLocation(struct FTransform InTransform, float Radius, float halfAngle); // Function Phoenix.DynamicObjectManager.FindValidLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3285be0
	void DoDelayedSpawn(uint32_t RequestID); // Function Phoenix.DynamicObjectManager.DoDelayedSpawn // (Final|Native|Public) // @ game+0x3285ae0
};

// Class Phoenix.DynamicSpawnerComponent
// Size: 0xf8 (Inherited: 0xc8)
struct UDynamicSpawnerComponent : UActorComponent {
	struct TArray<struct FSpawnInfoGroup> SpawnObjectInfo; // 0xc8(0x10)
	bool AllowRealTimeSpawnerGeneration; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct ADynamicObjectVolume* MyDynamicVolume; // 0xe0(0x08)
	char pad_E8[0x10]; // 0xe8(0x10)

	void OnSpawnFinished(struct FName& GroupName); // Function Phoenix.DynamicSpawnerComponent.OnSpawnFinished // (Final|Native|Public|HasOutParms) // @ game+0x3286d90
	void OnActorSpawned(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.DynamicSpawnerComponent.OnActorSpawned // (Final|Native|Public|HasOutParms) // @ game+0x3286c00
};

// Class Phoenix.DynamicObstacleManager
// Size: 0x48 (Inherited: 0x28)
struct UDynamicObstacleManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TWeakObjectPtr<struct UWorld> World; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)

	void OnActorEndPlay(struct AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.DynamicObstacleManager.OnActorEndPlay // (Final|Native|Protected) // @ game+0x328af10
	void OnActorDestroyed(struct AActor* DestroyedActor); // Function Phoenix.DynamicObstacleManager.OnActorDestroyed // (Final|Native|Protected) // @ game+0x1480ed0
	struct UDynamicObstacleManager* GetDynamicObstacleManager(struct UObject* WorldContext); // Function Phoenix.DynamicObstacleManager.GetDynamicObstacleManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x328adf0
	struct UDynamicObstacleManager* Get(struct UWorld* World); // Function Phoenix.DynamicObstacleManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x328ad10
};

// Class Phoenix.DynamicTrackedLocation
// Size: 0x2e8 (Inherited: 0x248)
struct ADynamicTrackedLocation : ATargetPoint {
	bool bRegisterOnCreation; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FDbSingleColumnInfo LocationType; // 0x250(0x88)
	bool bDrawDebug; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	float debugRadius; // 0x2dc(0x04)
	int32_t debugSegments; // 0x2e0(0x04)
	struct FColor DebugColor; // 0x2e4(0x04)
};

// Class Phoenix.EditorAwareActor
// Size: 0x248 (Inherited: 0x248)
struct AEditorAwareActor : AActor {

	void PreEditorChangeProperty(struct FName& PropertyName); // Function Phoenix.EditorAwareActor.PreEditorChangeProperty // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x328b080
	void PostEditorMove(bool bFinished); // Function Phoenix.EditorAwareActor.PostEditorMove // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0320
	void PostEditorChangeProperty(struct FName& PropertyName); // Function Phoenix.EditorAwareActor.PostEditorChangeProperty // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x328afe0
	void EditorTick(float DeltaSeconds); // Function Phoenix.EditorAwareActor.EditorTick // (Native|Event|Public|BlueprintEvent) // @ game+0x328ac80
};

// Class Phoenix.EdurusPotionItemTool
// Size: 0x4d8 (Inherited: 0x488)
struct AEdurusPotionItemTool : AConsumablePotionItemTool {
	struct FGameplayTag m_EdurusRockEffectAbilityTag; // 0x488(0x08)
	struct FName m_RelativeSpawnBoneName; // 0x490(0x08)
	float m_MinRockDamage; // 0x498(0x04)
	float m_MaxRockDamage; // 0x49c(0x04)
	float m_EnemySeekRadius; // 0x4a0(0x04)
	char pad_4A4[0x4]; // 0x4a4(0x04)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x4a8(0x10)
	float m_MinDistFromOwner; // 0x4b8(0x04)
	float m_MaxDistFromOwner; // 0x4bc(0x04)
	float m_MinRockLaunchTime; // 0x4c0(0x04)
	float m_MaxRockLaunchTime; // 0x4c4(0x04)
	int32_t m_MinNumRocks; // 0x4c8(0x04)
	int32_t m_MaxNumRocks; // 0x4cc(0x04)
	struct AMunitionType_Base* m_RockMunition; // 0x4d0(0x08)
};

// Class Phoenix.EdurusRock
// Size: 0x558 (Inherited: 0x528)
struct AEdurusRock : AMunitionType_SubsonicSpell {
	float m_RockLaunchDelay; // 0x528(0x04)
	float m_RockLaunchSpeed; // 0x52c(0x04)
	float m_RockLaunchAcceleration; // 0x530(0x04)
	float m_RockIdleSpeed; // 0x534(0x04)
	float m_RockIdleRotationSpeed; // 0x538(0x04)
	char pad_53C[0x1c]; // 0x53c(0x1c)

	void SetRockLaunchDelay(float Time); // Function Phoenix.EdurusRock.SetRockLaunchDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x328b1b0
	void SetRockIdleLocation(struct FVector TargetLoc); // Function Phoenix.EdurusRock.SetRockIdleLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x328b120
	void LaunchRock(); // Function Phoenix.EdurusRock.LaunchRock // (Final|Native|Public|BlueprintCallable) // @ game+0x328aef0
};

// Class Phoenix.EmissiveAdaptation
// Size: 0x248 (Inherited: 0x248)
struct AEmissiveAdaptation : AActor {
};

// Class Phoenix.Encounter_Interface
// Size: 0x28 (Inherited: 0x28)
struct UEncounter_Interface : UInterface {
};

// Class Phoenix.EncounterCreator
// Size: 0x290 (Inherited: 0x248)
struct AEncounterCreator : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	bool bActivateEncounter; // 0x250(0x01)
	bool bHideEncounterVolumes; // 0x251(0x01)
	char pad_252[0x2]; // 0x252(0x02)
	int32_t DynamicObjectVolumeCount; // 0x254(0x04)
	int32_t SpawnLocationCount; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct AEncounterVolume* EncounterVolume; // 0x260(0x08)
	struct TArray<struct ADynamicObjectVolume*> DynamicObjectVolumes; // 0x268(0x10)
	struct TArray<struct ASpawnLocation*> SpawnLocations; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class Phoenix.EncounterLocationCreator
// Size: 0x2b8 (Inherited: 0x248)
struct AEncounterLocationCreator : AActor {
	struct FString StationCreatorName; // 0x248(0x10)
	struct TArray<struct FLocationCreatorData> LocationData; // 0x258(0x10)
	struct AEncounterVolume* LocationEncounter; // 0x268(0x08)
	struct FString customWorldID; // 0x270(0x10)
	char pad_280[0x38]; // 0x280(0x38)

	void AttachObjectsToCreator(bool bInAttachObjects); // Function Phoenix.EncounterLocationCreator.AttachObjectsToCreator // (Final|Native|Public|BlueprintCallable) // @ game+0x328abf0
	void AttachEncompassingStations(struct FString ObjectName); // Function Phoenix.EncounterLocationCreator.AttachEncompassingStations // (Final|Native|Public|BlueprintCallable) // @ game+0x328ab00
};

// Class Phoenix.EncounterSpawnComponent
// Size: 0x218 (Inherited: 0xc8)
struct UEncounterSpawnComponent : UActorComponent {
	bool bIsEncounterSpawner; // 0xc8(0x01)
	bool bIsStaticEncounterSpawner; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
	struct FString EncounterGUID; // 0xd0(0x10)
	bool bDoNotInheritEncounterTag; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct TArray<struct ASpawnLocation*> AssignedSpawnLocations; // 0xe8(0x10)
	char pad_F8[0x120]; // 0xf8(0x120)
};

// Class Phoenix.EncounterTracker
// Size: 0x1f8 (Inherited: 0x28)
struct UEncounterTracker : UObject {
	char pad_28[0x158]; // 0x28(0x158)
	struct TSet<struct TWeakObjectPtr<struct ACombatVolume>> m_combatVolumesPlayerOverlaps; // 0x180(0x50)
	struct UCombatVolumeGroup* m_currentCombatVolumeGroup; // 0x1d0(0x08)
	char pad_1D8[0x18]; // 0x1d8(0x18)
	struct UDuelTechniquesController* DuelTechniquesController; // 0x1f0(0x08)

	void TryEndEncounter(); // Function Phoenix.EncounterTracker.TryEndEncounter // (Final|Native|Private) // @ game+0x328f790
	bool StartEncounterForPlayersCombatVolume(); // Function Phoenix.EncounterTracker.StartEncounterForPlayersCombatVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x328f5a0
	void ResetTryEndEncounterTimer(); // Function Phoenix.EncounterTracker.ResetTryEndEncounterTimer // (Final|Native|Private) // @ game+0x328ee20
	void OnCurtainRaised(); // Function Phoenix.EncounterTracker.OnCurtainRaised // (Final|Native|Private) // @ game+0x328e990
	void OnCombatVolumeDeath(struct ACombatVolume* CombatVolume, struct AActor* DeadActor); // Function Phoenix.EncounterTracker.OnCombatVolumeDeath // (Final|Native|Private) // @ game+0x328e890
	void OnCombatVolumeActorSpawned(struct ACombatVolume* CombatVolume, struct AActor* SpawnedActor); // Function Phoenix.EncounterTracker.OnCombatVolumeActorSpawned // (Final|Native|Private) // @ game+0x328e7c0
	bool IsPlayerInAnEncounter(); // Function Phoenix.EncounterTracker.IsPlayerInAnEncounter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x328e740
};

// Class Phoenix.EncounterVolume
// Size: 0x958 (Inherited: 0x248)
struct AEncounterVolume : ATargetPoint {
	struct FObjectVisualizationInfo VolumeVisualization; // 0x248(0x0c)
	bool bShowActivationDistances; // 0x254(0x01)
	bool bEnableAutoActivation; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	float TriggerDistance; // 0x258(0x04)
	float CullDistance; // 0x25c(0x04)
	float TriggerCullDiff; // 0x260(0x04)
	bool bMaintainTriggerCullDistance; // 0x264(0x01)
	bool bAutoGeneratePerception; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	float PerceptionRadius; // 0x268(0x04)
	struct FGameplayTag EncounterTag; // 0x26c(0x08)
	char pad_274[0x4]; // 0x274(0x04)
	struct FString NameEncounterDataString; // 0x278(0x10)
	struct FDbEditorButtonWidget DBAccessButton; // 0x288(0x80)
	struct FDbEditorButtonWidget DBInclusionButton; // 0x308(0x80)
	struct FDbEditorButtonWidget DBExclusionButton; // 0x388(0x80)
	struct FDbEditorButtonWidget DBDOVAccessButton; // 0x408(0x80)
	struct FString GuidString; // 0x488(0x10)
	enum class ESpawnVolumeType SpawnVolumeType; // 0x498(0x01)
	char pad_499[0x7]; // 0x499(0x07)
	struct TArray<struct ADynamicObjectVolume*> SpawnZones; // 0x4a0(0x10)
	struct FCustomButtonWidget SpawnerSearchButton; // 0x4b0(0x30)
	struct FDbSingleColumnInfo NamedRestrictionID; // 0x4e0(0x88)
	bool bForceOverrideRestriction; // 0x568(0x01)
	bool bIsCreatorEncounter; // 0x569(0x01)
	bool bAllowDataWrite; // 0x56a(0x01)
	char pad_56B[0x25]; // 0x56b(0x25)
	struct FDbEditorButtonWidget DBNamedRestrictionsButton; // 0x590(0x80)
	struct FCustomButtonWidget ReportButton; // 0x610(0x30)
	int32_t NumIterationsPerLevel; // 0x640(0x04)
	int32_t StartPlayerLevel; // 0x644(0x04)
	int32_t EndPlayerLevel; // 0x648(0x04)
	int32_t LevelIncrement; // 0x64c(0x04)
	bool bIsLocationTrigger; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct UPrimitiveComponent* VolumeComponent; // 0x658(0x08)
	bool bDestroyOnDeath; // 0x660(0x01)
	bool bDissolveOnDeath; // 0x661(0x01)
	bool bFadeOnDeath; // 0x662(0x01)
	bool bDoDeathCamOnLastDeath; // 0x663(0x01)
	bool bDoDeathCamBulletTime; // 0x664(0x01)
	char pad_665[0x3]; // 0x665(0x03)
	struct FMulticastInlineDelegate OnAllEnemiesDeadEvent; // 0x668(0x10)
	char pad_678[0x8]; // 0x678(0x08)
	struct FMulticastInlineDelegate OnAllEnemiesSpawned; // 0x680(0x10)
	char pad_690[0x8]; // 0x690(0x08)
	struct FMulticastInlineDelegate OnEncounterVolumeActivated; // 0x698(0x10)
	struct FMulticastInlineDelegate OnEncounterVolumeDeactivated; // 0x6a8(0x10)
	char pad_6B8[0xb8]; // 0x6b8(0xb8)
	bool bNamedEncounter; // 0x770(0x01)
	char pad_771[0xbf]; // 0x771(0xbf)
	struct AEnemy_PerceptionPoint* pEnemyPerception; // 0x830(0x08)
	char pad_838[0x120]; // 0x838(0x120)

	void SetEncounterActor(struct ADynamicObjectVolume* InActor); // Function Phoenix.EncounterVolume.SetEncounterActor // (Final|Native|Public|BlueprintCallable) // @ game+0x328f480
	void SetAllowAutoActivation(bool bAllowAutoActivate); // Function Phoenix.EncounterVolume.SetAllowAutoActivation // (Final|Native|Public|BlueprintCallable) // @ game+0x328ee40
	void ProcessZoneData(struct FString ObjectName); // Function Phoenix.EncounterVolume.ProcessZoneData // (Final|Native|Public) // @ game+0x328ebe0
	void ProcessSpawnerSearch(struct FString ObjectName); // Function Phoenix.EncounterVolume.ProcessSpawnerSearch // (Final|Native|Public) // @ game+0x328eaf0
	void ProcessEncounterReport(struct FString ObjectName); // Function Phoenix.EncounterVolume.ProcessEncounterReport // (Final|Native|Public) // @ game+0x328ea00
	bool IsVolumeActive(); // Function Phoenix.EncounterVolume.IsVolumeActive // (Final|Native|Public|BlueprintCallable) // @ game+0x328e770
	bool HasSpawned(); // Function Phoenix.EncounterVolume.HasSpawned // (Final|Native|Public|BlueprintCallable) // @ game+0x328e550
	int32_t GetSpawnActorCount(); // Function Phoenix.EncounterVolume.GetSpawnActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x328e020
	struct TArray<struct AActor*> GetAllActiveSpawnedInstances(); // Function Phoenix.EncounterVolume.GetAllActiveSpawnedInstances // (Final|Native|Public|BlueprintCallable) // @ game+0x328dd80
	int32_t GetAliveActorCount(); // Function Phoenix.EncounterVolume.GetAliveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x328dd50
	int32_t GetActiveActorCount(); // Function Phoenix.EncounterVolume.GetActiveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x328dd20
	void ForceDeactivate(); // Function Phoenix.EncounterVolume.ForceDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x328dd00
	void ForceActivate(); // Function Phoenix.EncounterVolume.ForceActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x328dce0
	bool DoneSpawning(); // Function Phoenix.EncounterVolume.DoneSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x328dc90
};

// Class Phoenix.NPC_Update
// Size: 0x40 (Inherited: 0x28)
struct UNPC_Update : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.NPC_QBUpdate
// Size: 0x40 (Inherited: 0x40)
struct UNPC_QBUpdate : UNPC_Update {
};

// Class Phoenix.Enemy_QBUpdate
// Size: 0x50 (Inherited: 0x40)
struct UEnemy_QBUpdate : UNPC_QBUpdate {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Phoenix.Enemy_Alert_QBUpdate
// Size: 0x58 (Inherited: 0x50)
struct UEnemy_Alert_QBUpdate : UEnemy_QBUpdate {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.Enemy_AnimInstance
// Size: 0x690 (Inherited: 0x670)
struct UEnemy_AnimInstance : UNPC_AnimInstance {
	enum class EEnemyAIDodgeState DodgeState; // 0x670(0x01)
	char pad_671[0x3]; // 0x671(0x03)
	struct FGameplayTag AttackTypeTag; // 0x674(0x08)
	char WeaponActivateStoredIndex; // 0x67c(0x01)
	char pad_67D[0x3]; // 0x67d(0x03)
	struct UEnemyAISpawnData* SpawnDataPtr; // 0x680(0x08)
	bool bOnGround; // 0x688(0x01)
	char pad_689[0x7]; // 0x689(0x07)

	void SetSpawnData(struct UEnemyAISpawnData* InSpawnDataPtr); // Function Phoenix.Enemy_AnimInstance.SetSpawnData // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328f510
	void SetAttackTypeTag(struct FGameplayTag InType); // Function Phoenix.Enemy_AnimInstance.SetAttackTypeTag // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328f3f0
	void SetAnimDodgeState(enum class EEnemyAIDodgeState InDodgeState); // Function Phoenix.Enemy_AnimInstance.SetAnimDodgeState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328eed0
	struct UEnemyAISpawnData* GetSpawnData(); // Function Phoenix.Enemy_AnimInstance.GetSpawnData // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x328e050
	struct FGameplayTag GetAttackTypeTag(); // Function Phoenix.Enemy_AnimInstance.GetAttackTypeTag // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x328de50
	enum class EEnemyAIDodgeState GetAnimDodgeState(); // Function Phoenix.Enemy_AnimInstance.GetAnimDodgeState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328de00
	bool CanExitAttackLoop(); // Function Phoenix.Enemy_AnimInstance.CanExitAttackLoop // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x328db70
	void AnimNotify_ImpulseToTarget(float ActiveFrames, float DistFromTarget, float MaxTravelDist); // Function Phoenix.Enemy_AnimInstance.AnimNotify_ImpulseToTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x328d880
};

// Class Phoenix.Enemy_AnimInstance_Interface
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_AnimInstance_Interface : UInterface {

	void SetTransState(enum class EEnemyAIAnimTransState& InState); // Function Phoenix.Enemy_AnimInstance_Interface.SetTransState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetSpawnData(struct UEnemyAISpawnData* InSpawnDataPtr); // Function Phoenix.Enemy_AnimInstance_Interface.SetSpawnData // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAttackTypeTag(struct FGameplayTag InType); // Function Phoenix.Enemy_AnimInstance_Interface.SetAttackTypeTag // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class EEnemyAIAnimTransState GetTransState(); // Function Phoenix.Enemy_AnimInstance_Interface.GetTransState // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	struct UEnemyAISpawnData* GetSpawnData(); // Function Phoenix.Enemy_AnimInstance_Interface.GetSpawnData // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	struct FGameplayTag GetAttackTypeTag(); // Function Phoenix.Enemy_AnimInstance_Interface.GetAttackTypeTag // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
};

// Class Phoenix.Enemy_ApparateActor
// Size: 0x2d0 (Inherited: 0x248)
struct AEnemy_ApparateActor : AActor {
	struct FEnemy_ApparateActorData Data; // 0x248(0x40)
	bool bArrived; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct FMulticastInlineDelegate ArrivedEvent; // 0x290(0x10)
	struct FMulticastInlineDelegate DoneEvent; // 0x2a0(0x10)
	char pad_2B0[0x20]; // 0x2b0(0x20)

	bool HasArrived(); // Function Phoenix.Enemy_ApparateActor.HasArrived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e460
	void BroadcastDone(struct AActor* pActor); // Function Phoenix.Enemy_ApparateActor.BroadcastDone // (Final|Native|Public|BlueprintCallable) // @ game+0x328dad0
	void BroadcastArrived(struct AActor* pActor, struct FVector Loc); // Function Phoenix.Enemy_ApparateActor.BroadcastArrived // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x328d9e0
};

// Class Phoenix.Enemy_Around_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Around_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_AttackComponent
// Size: 0x260 (Inherited: 0xc8)
struct UEnemy_AttackComponent : UActorComponent {
	struct TArray<struct UEnemyAIAttackData*> AttackList; // 0xc8(0x10)
	struct TArray<struct UEnemyAIAttackData*> CounterAttackList; // 0xd8(0x10)
	struct TArray<struct UEnemyAIAttackData*> SplitAttackList; // 0xe8(0x10)
	struct TArray<struct FEnemy_SpellOverrides> OverrideSpellList; // 0xf8(0x10)
	struct UBehaviorTree* ChooseAttackBehaviorTree; // 0x108(0x08)
	float DungeonDistanceScale; // 0x110(0x04)
	float DungeonDistanceRangeScale; // 0x114(0x04)
	float HistoryWeightScale; // 0x118(0x04)
	float DistToRangeCurveWeightScale; // 0x11c(0x04)
	float WeaponSeekDistToTargetCurveWeightScale; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct UCurveFloat* HistoryRatioCurveWeight; // 0x128(0x08)
	struct UCurveFloat* DistToRangeCurveWeight; // 0x130(0x08)
	struct UCurveFloat* WeaponSeekDistToTargetCurveWeight; // 0x138(0x08)
	struct FGameplayTagContainer ChooseAttackTags; // 0x140(0x20)
	char pad_160[0x88]; // 0x160(0x88)
	struct TMap<struct UEnemyAIAttackData*, struct UEnemyAIAttackInstanceData*> AttackInstanceDataMap; // 0x1e8(0x50)
	char pad_238[0x28]; // 0x238(0x28)

	void RemoveSelectionTags(struct FGameplayTagContainer& InTags); // Function Phoenix.Enemy_AttackComponent.RemoveSelectionTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x328ed60
	void RemoveSelectionTag(struct FGameplayTag& InTag); // Function Phoenix.Enemy_AttackComponent.RemoveSelectionTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x328ecd0
	bool IsAttackAllowed(struct UEnemyAIAttackData* AttackPtr); // Function Phoenix.Enemy_AttackComponent.IsAttackAllowed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e620
	bool HasSelectionTag(struct FGameplayTag& InTag); // Function Phoenix.Enemy_AttackComponent.HasSelectionTag // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e4b0
	bool HasChosenAttack(); // Function Phoenix.Enemy_AttackComponent.HasChosenAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e480
	struct FEnemyAIChosenAttackData GetChosenAttackData(); // Function Phoenix.Enemy_AttackComponent.GetChosenAttackData // (Final|Native|Public|BlueprintCallable) // @ game+0x328df20
	struct FEnemy_UnblockableData GetAttackUnblockableData(struct UEnemyAIAttackData* attackDataPtr); // Function Phoenix.Enemy_AttackComponent.GetAttackUnblockableData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328de90
	struct UEnemyAIAttackData* GetAttackData(); // Function Phoenix.Enemy_AttackComponent.GetAttackData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328de30
	void ClearSelectionTags(); // Function Phoenix.Enemy_AttackComponent.ClearSelectionTags // (Final|Native|Public|BlueprintCallable) // @ game+0x328dc70
	void AddSelectionTags(struct FGameplayTagContainer& InTags); // Function Phoenix.Enemy_AttackComponent.AddSelectionTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x328d7c0
	void AddSelectionTag(struct FGameplayTag& InTag); // Function Phoenix.Enemy_AttackComponent.AddSelectionTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x328d730
};

// Class Phoenix.Enemy_BackOnNav_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_BackOnNav_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Character
// Size: 0x22d0 (Inherited: 0x2180)
struct AEnemy_Character : ANPC_Character {
	char pad_2180[0x18]; // 0x2180(0x18)
	bool bRegisterPerceptionAfterSpawn; // 0x2198(0x01)
	char pad_2199[0x3]; // 0x2199(0x03)
	int32_t Level; // 0x219c(0x04)
	float FinisherHealthPercentage; // 0x21a0(0x04)
	int32_t PlayerStupifyHits; // 0x21a4(0x04)
	struct UToolSetComponent* ToolSetComponent; // 0x21a8(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSourceComponent; // 0x21b0(0x08)
	struct UEnemyAIComponent* EnemyAIComponent; // 0x21b8(0x08)
	struct UEnemyStateComponent* EnemyStateComponent; // 0x21c0(0x08)
	struct UBTCustomComponent* BehaviorCompAttackUpdate; // 0x21c8(0x08)
	struct UEnemy_AttackComponent* AttackComponent; // 0x21d0(0x08)
	struct UEnemy_WeaponComponent* WeaponComponent; // 0x21d8(0x08)
	struct FMulticastInlineDelegate OnChangeTeam; // 0x21e0(0x10)
	struct UObjectArchitectAsset* VfxObjectArchitectAsset; // 0x21f0(0x08)
	struct FGameplayTag ObjectArchitectEnemyClassTag; // 0x21f8(0x08)
	struct FGameplayTag ObjectArchitectEnemyFactionTag; // 0x2200(0x08)
	char pad_2208[0x68]; // 0x2208(0x68)
	struct ADynamicObjectVolume* SpawningDOV; // 0x2270(0x08)
	struct TArray<struct ACombatVolume*> OccupiedCombatVolumes; // 0x2278(0x10)
	char pad_2288[0x24]; // 0x2288(0x24)
	struct FDelegate ClothTargetsStartDelegate; // 0x22ac(0x10)
	struct FDelegate ClothTargetsEndDelegate; // 0x22bc(0x10)
	char pad_22CC[0x4]; // 0x22cc(0x04)

	void UpdateBossStateEvent(struct FBossFightData InBossFightData); // Function Phoenix.Enemy_Character.UpdateBossStateEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UnhideAndEnableEnemyCharacter(struct AActor* EnemyCharacter); // Function Phoenix.Enemy_Character.UnhideAndEnableEnemyCharacter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x328f7b0
	void Throw(struct AActor* Target, struct AActor* SourceActor); // Function Phoenix.Enemy_Character.Throw // (Final|Native|Public|BlueprintCallable) // @ game+0x328f6c0
	bool StartFire(float Amount, struct FVector Location); // Function Phoenix.Enemy_Character.StartFire // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x328f5d0
	void SetAsLeader(bool bSet); // Function Phoenix.Enemy_Character.SetAsLeader // (Final|Native|Public|BlueprintCallable) // @ game+0x328f360
	void SetAsGroupAggressor(bool bSet, struct FName InNewTeamName); // Function Phoenix.Enemy_Character.SetAsGroupAggressor // (Final|Native|Public|BlueprintCallable) // @ game+0x328f290
	void SetAsFightClubOpponent(bool bSet, struct FName InNewTeamName, struct FName InAudioSubtypeID); // Function Phoenix.Enemy_Character.SetAsFightClubOpponent // (Final|Native|Public|BlueprintCallable) // @ game+0x328f180
	void SetAsDuelOpponent(bool bSet, struct FName InAudioSubtypeID); // Function Phoenix.Enemy_Character.SetAsDuelOpponent // (Final|Native|Public|BlueprintCallable) // @ game+0x328f0b0
	void SetAsCompanion(bool bSet); // Function Phoenix.Enemy_Character.SetAsCompanion // (Final|Native|Public|BlueprintCallable) // @ game+0x328f020
	void SetAsAggressor(bool bSet, struct FName InNewTeamName); // Function Phoenix.Enemy_Character.SetAsAggressor // (Final|Native|Public|BlueprintCallable) // @ game+0x328ef50
	void OnTakeAKneeTimedOut(); // Function Phoenix.Enemy_Character.OnTakeAKneeTimedOut // (Final|Native|Public) // @ game+0x328e9e0
	void OnFireExtinguished(); // Function Phoenix.Enemy_Character.OnFireExtinguished // (Native|Event|Protected|BlueprintEvent) // @ game+0x328e9b0
	void OnCompletelyCharred(); // Function Phoenix.Enemy_Character.OnCompletelyCharred // (Native|Event|Protected|BlueprintEvent) // @ game+0x328e960
	void MunitionCreated(); // Function Phoenix.Enemy_Character.MunitionCreated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328e7a0
	void Landed(struct FHitResult& Hit); // Function Phoenix.Enemy_Character.Landed // (Native|Public|HasOutParms) // @ game+0x3207410
	bool IsLeader(); // Function Phoenix.Enemy_Character.IsLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e720
	bool IsDuelOpponent(); // Function Phoenix.Enemy_Character.IsDuelOpponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e700
	bool IsCompanion(); // Function Phoenix.Enemy_Character.IsCompanion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e6e0
	bool IsCombatOpponent(); // Function Phoenix.Enemy_Character.IsCombatOpponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e6c0
	bool IsAggressor(); // Function Phoenix.Enemy_Character.IsAggressor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x328e600
	void HideAndDisableEnemyCharacter(struct AActor* EnemyCharacter); // Function Phoenix.Enemy_Character.HideAndDisableEnemyCharacter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x328e580
	void HandleNearDeathKneelStart(struct AActor* ActorKneeling); // Function Phoenix.Enemy_Character.HandleNearDeathKneelStart // (Final|Native|Public) // @ game+0x328e3d0
	void HandleNearDeathKneelEnd(); // Function Phoenix.Enemy_Character.HandleNearDeathKneelEnd // (Final|Native|Public) // @ game+0x328e3b0
	void HandleMeleeHit(struct AActor* Victim, struct FVector& NormalImpulse, struct FHitResult& Hit); // Function Phoenix.Enemy_Character.HandleMeleeHit // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x328e230
	void HandleHealthThresholdReached(struct FHealthThreshold InHealthThreshold, int32_t InLevel, int32_t InMaxLevel); // Function Phoenix.Enemy_Character.HandleHealthThresholdReached // (Final|Native|Public) // @ game+0x328e080
	void ExitSpline(); // Function Phoenix.Enemy_Character.ExitSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x328dcc0
	bool ChangeTeamWithCombat(struct FName TeamName, bool bEnableCombat); // Function Phoenix.Enemy_Character.ChangeTeamWithCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x328dba0
	void AttackWindowStop(); // Function Phoenix.Enemy_Character.AttackWindowStop // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328d9c0
	void AttackWindowStart(); // Function Phoenix.Enemy_Character.AttackWindowStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x328d9a0
};

// Class Phoenix.Enemy_Character_Interface
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_Character_Interface : UInterface {

	void MunitionCreated(); // Function Phoenix.Enemy_Character_Interface.MunitionCreated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EventTrackMeleePoints(); // Function Phoenix.Enemy_Character_Interface.EventTrackMeleePoints // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackWindowStop(); // Function Phoenix.Enemy_Character_Interface.AttackWindowStop // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackWindowStart(); // Function Phoenix.Enemy_Character_Interface.AttackWindowStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackLeftCollisionStop(); // Function Phoenix.Enemy_Character_Interface.AttackLeftCollisionStop // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackLeftCollisionStart(); // Function Phoenix.Enemy_Character_Interface.AttackLeftCollisionStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackCollisionStop(); // Function Phoenix.Enemy_Character_Interface.AttackCollisionStop // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void AttackCollisionStart(); // Function Phoenix.Enemy_Character_Interface.AttackCollisionStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Enemy_TargetSenseAsset
// Size: 0x268 (Inherited: 0x30)
struct UEnemy_TargetSenseAsset : UDataAsset {
	struct FEnemy_TargetSense TargetSense; // 0x30(0x238)
};

// Class Phoenix.Enemy_Close_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Close_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Combat_QBUpdate
// Size: 0x88 (Inherited: 0x50)
struct UEnemy_Combat_QBUpdate : UEnemy_QBUpdate {
	char pad_50[0x38]; // 0x50(0x38)
};

// Class Phoenix.Enemy_Companion_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Companion_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Controller
// Size: 0x460 (Inherited: 0x460)
struct AEnemy_Controller : ANPC_Controller {
};

// Class Phoenix.Enemy_Cover_QBUpdate
// Size: 0x90 (Inherited: 0x50)
struct UEnemy_Cover_QBUpdate : UEnemy_QBUpdate {
	struct UEnvQuery* CoverQuery; // 0x50(0x08)
	char pad_58[0x38]; // 0x58(0x38)
};

// Class Phoenix.Enemy_Direct_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Direct_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Duel_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Duel_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Evade_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Evade_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Follow_QBUpdate
// Size: 0x60 (Inherited: 0x50)
struct UEnemy_Follow_QBUpdate : UEnemy_QBUpdate {
	char pad_50[0x10]; // 0x50(0x10)
};

// Class Phoenix.Enemy_InOut_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_InOut_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_LeadPlayer_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_LeadPlayer_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.NPC_MovementComponent
// Size: 0xfe0 (Inherited: 0xfa0)
struct UNPC_MovementComponent : UAmbulatory_MovementComponent {
	bool bUseConfinedRotationMode; // 0xf98(0x01)
	bool bIncludeRootCapsuleInMultiCapsuleSweeps; // 0xf99(0x01)
	char pad_FA2[0x3e]; // 0xfa2(0x3e)
};

// Class Phoenix.Enemy_MovementComponent
// Size: 0x1000 (Inherited: 0xfe0)
struct UEnemy_MovementComponent : UNPC_MovementComponent {
	char pad_FE0[0x8]; // 0xfe0(0x08)
	struct FNavAgent NavAgent; // 0xfe8(0x08)
	char pad_FF0[0x10]; // 0xff0(0x10)

	void EnableDirectionLockModifier(struct FVector Direction); // Function Phoenix.Enemy_MovementComponent.EnableDirectionLockModifier // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3296f90
	void DisableDirectionLockModifier(); // Function Phoenix.Enemy_MovementComponent.DisableDirectionLockModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x3296cf0
};

// Class Phoenix.PerceptionPoint
// Size: 0x360 (Inherited: 0x2a8)
struct APerceptionPoint : APawn {
	struct FGameplayTag GroupTag; // 0x2a8(0x08)
	struct FGameplayTagContainer GroupTagContainer; // 0x2b0(0x20)
	bool bEnabled; // 0x2d0(0x01)
	bool bGameEventEnabled; // 0x2d1(0x01)
	char pad_2D2[0x2]; // 0x2d2(0x02)
	int32_t Priority; // 0x2d4(0x04)
	bool bTargetShareEnabled; // 0x2d8(0x01)
	bool bPlayerPP; // 0x2d9(0x01)
	char pad_2DA[0x6]; // 0x2da(0x06)
	struct TArray<struct UAISenseConfig*> SensesConfig; // 0x2e0(0x10)
	struct TArray<struct APerceptionPointArea*> AttackDistanceScaleAreaList; // 0x2f0(0x10)
	char pad_300[0x60]; // 0x300(0x60)

	void EnablePerception(bool bEnable, struct TArray<struct APerceptionPoint*> PerceptionPointList); // Function Phoenix.PerceptionPoint.EnablePerception // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33c7420
	void Enable(bool bEnable); // Function Phoenix.PerceptionPoint.Enable // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7390
	void AttackDistanceScaleVolume(float InScale, struct TArray<struct APerceptionPointArea*> InAreaList); // Function Phoenix.PerceptionPoint.AttackDistanceScaleVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7030
};

// Class Phoenix.Enemy_PerceptionPoint
// Size: 0x360 (Inherited: 0x360)
struct AEnemy_PerceptionPoint : APerceptionPoint {

	void RemovePerceiveVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.RemovePerceiveVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3297ef0
	void RemoveLoseVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.RemoveLoseVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void RemoveForceVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.RemoveForceVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3297e60
	void RemoveExcludeVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.RemoveExcludeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3297dd0
	void AddPerceiveVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.AddPerceiveVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3296900
	void AddLoseVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.AddLoseVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void AddForceVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.AddForceVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x3296870
	void AddExcludeVolume(struct APerceptionPointArea* InAreaPtr); // Function Phoenix.Enemy_PerceptionPoint.AddExcludeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x32967e0
};

// Class Phoenix.Enemy_PieCut_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_PieCut_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_POI_QBUpdate
// Size: 0x58 (Inherited: 0x50)
struct UEnemy_POI_QBUpdate : UEnemy_QBUpdate {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.Enemy_RecoverWeapon_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_RecoverWeapon_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Reposition_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Reposition_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_SeekTarget_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_SeekTarget_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_SeekWeapon_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_SeekWeapon_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_SpawnSpiders
// Size: 0x120 (Inherited: 0x28)
struct UEnemy_SpawnSpiders : UObject {
	struct TSoftClassPtr<UObject> SpawnClass; // 0x28(0x28)
	struct FVector SpawnLocation; // 0x50(0x0c)
	struct FVector spawnDirection; // 0x5c(0x0c)
	struct AActor* ParentActor; // 0x68(0x08)
	struct FString SpawnObjectName; // 0x70(0x10)
	struct FGameplayTag GroupTag; // 0x80(0x08)
	int32_t SpawnCount; // 0x88(0x04)
	int32_t SpawnDeviation; // 0x8c(0x04)
	float SpawnInterval; // 0x90(0x04)
	float SpawnAngleFromRange; // 0x94(0x04)
	float SpawnAngleDeviation; // 0x98(0x04)
	float SpawnDist; // 0x9c(0x04)
	float SpawnUpDist; // 0xa0(0x04)
	float SpawnLandDist; // 0xa4(0x04)
	float SpawnLandDistVariance; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UParticleSystem* SpawnParticleSystem; // 0xb0(0x08)
	struct UParticleSystem* SpawnParticleSystemDeath; // 0xb8(0x08)
	struct UNiagaraSystem* SpawnParticleSystem2; // 0xc0(0x08)
	struct UNiagaraSystem* SpawnParticleSystemDeath2; // 0xc8(0x08)
	char pad_D0[0x50]; // 0xd0(0x50)

	bool Update(float InDeltaTime); // Function Phoenix.Enemy_SpawnSpiders.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x32989b0
	void Spawn(); // Function Phoenix.Enemy_SpawnSpiders.Spawn // (Final|Native|Public|BlueprintCallable) // @ game+0x3298760
	void DELETE(); // Function Phoenix.Enemy_SpawnSpiders.DELETE // (Final|Native|Public|BlueprintCallable) // @ game+0x3296cd0
};

// Class Phoenix.Enemy_SplineSpawnActor
// Size: 0x3b0 (Inherited: 0x248)
struct AEnemy_SplineSpawnActor : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct FEnemy_SplineSpawnActorData Data; // 0x250(0xd0)
	bool bAutoStart; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	float DestroyDelayTime; // 0x324(0x04)
	struct FMulticastInlineDelegate ArrivedEvent; // 0x328(0x10)
	struct FMulticastInlineDelegate DoneEvent; // 0x338(0x10)
	struct TArray<struct UMultiFX2_Base*> ArrivedFX2; // 0x348(0x10)
	struct TArray<struct UMultiFX2_Base*> LandingFX2; // 0x358(0x10)
	struct FMultiFX2Handle ArrivedFX2Handle; // 0x368(0x08)
	struct FMultiFX2Handle LandingFXHandle2; // 0x370(0x08)
	char pad_378[0x38]; // 0x378(0x38)

	void StartLandingVFX(struct FVector StartLocation); // Function Phoenix.Enemy_SplineSpawnActor.StartLandingVFX // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3298860
	void StartArrivedVFX(); // Function Phoenix.Enemy_SplineSpawnActor.StartArrivedVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x3298840
	void Start(); // Function Phoenix.Enemy_SplineSpawnActor.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x3298820
	bool HasArrived(); // Function Phoenix.Enemy_SplineSpawnActor.HasArrived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32976d0
	void BroadcastDone(struct AActor* pActor); // Function Phoenix.Enemy_SplineSpawnActor.BroadcastDone // (Final|Native|Public|BlueprintCallable) // @ game+0x3296aa0
	void BroadcastArrived(struct AActor* pActor, struct FVector Loc); // Function Phoenix.Enemy_SplineSpawnActor.BroadcastArrived // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32969b0
	void ApplyStopFX(); // Function Phoenix.Enemy_SplineSpawnActor.ApplyStopFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void ApplyStartFX(); // Function Phoenix.Enemy_SplineSpawnActor.ApplyStartFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03d0
};

// Class Phoenix.Enemy_Standby_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_Standby_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_SwimToShore_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_SwimToShore_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.NPC_PerceptionUpdate
// Size: 0x40 (Inherited: 0x40)
struct UNPC_PerceptionUpdate : UNPC_Update {
};

// Class Phoenix.Enemy_Target_PerceptionUpdate
// Size: 0x100 (Inherited: 0x40)
struct UEnemy_Target_PerceptionUpdate : UNPC_PerceptionUpdate {
	char pad_40[0xc0]; // 0x40(0xc0)
};

// Class Phoenix.Enemy_TicketConfig
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_TicketConfig : UObject {
};

// Class Phoenix.Enemy_TicketUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_TicketUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_TombProtector_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_TombProtector_QBUpdate : UEnemy_QBUpdate {

	void SetSpawnPoints(struct TArray<struct FVector>& InLocArray); // Function Phoenix.Enemy_TombProtector_QBUpdate.SetSpawnPoints // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32984a0
	void SetSpawnAnchor(struct FVector& InLoc); // Function Phoenix.Enemy_TombProtector_QBUpdate.SetSpawnAnchor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3298380
	void SetDataAsset(struct UEnemy_TombProtector_QBUpdateDataAsset* InDataAsset); // Function Phoenix.Enemy_TombProtector_QBUpdate.SetDataAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3298030
};

// Class Phoenix.Enemy_TooClose_QBUpdate
// Size: 0x50 (Inherited: 0x50)
struct UEnemy_TooClose_QBUpdate : UEnemy_QBUpdate {
};

// Class Phoenix.Enemy_Turns_TicketConfig
// Size: 0x30 (Inherited: 0x28)
struct UEnemy_Turns_TicketConfig : UEnemy_TicketConfig {
	struct UDataTable* CooldownTable; // 0x28(0x08)
};

// Class Phoenix.Enemy_Turns_TicketUpdate
// Size: 0x60 (Inherited: 0x50)
struct UEnemy_Turns_TicketUpdate : UEnemy_TicketUpdate {
	float UpdateInterval; // 0x50(0x04)
	char pad_54[0xc]; // 0x54(0x0c)
};

// Class Phoenix.Enemy_WeaponComponent
// Size: 0x3c0 (Inherited: 0xc8)
struct UEnemy_WeaponComponent : UActorComponent {
	struct FName ActiveSocket; // 0xc8(0x08)
	struct FName SecondaryActiveSocket; // 0xd0(0x08)
	bool bCanStoreActiveWeapon; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct UDataTable* WeaponSocketTable; // 0xe0(0x08)
	bool bSpawnEnable; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct TArray<struct AEnemyAIWeapon*> SpawnWeaponDataList; // 0xf0(0x10)
	struct TArray<struct FSpawnStoredWeaponStr> SpawnStoredWeaponDataList; // 0x100(0x10)
	struct TArray<struct AEnemyAIWeapon*> RespawnWeaponDataList; // 0x110(0x10)
	struct TArray<struct AEnemyAIWeapon*> ShieldWeaponDataList; // 0x120(0x10)
	struct TArray<struct AEnemyAIWeapon*> DeathWeaponDataList; // 0x130(0x10)
	int32_t DeathSpawnMax; // 0x140(0x04)
	int32_t DeathSpawnMin; // 0x144(0x04)
	struct TArray<struct AEnemyAIWeapon*> DisarmWeaponDataList; // 0x148(0x10)
	int32_t DisarmSpawnMin; // 0x158(0x04)
	int32_t DisarmSpawnMax; // 0x15c(0x04)
	bool bVulnerableWhileDisarmed; // 0x160(0x01)
	char pad_161[0x7]; // 0x161(0x07)
	struct UEnemy_AttackComponent* AttackComp; // 0x168(0x08)
	struct UNPC_Component* NPCComp; // 0x170(0x08)
	struct UEnemyAIComponent* EnemyComp; // 0x178(0x08)
	char pad_180[0x240]; // 0x180(0x240)

	void ThrowWeapon(); // Function Phoenix.Enemy_WeaponComponent.ThrowWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3298990
	bool StoreWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.StoreWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32988f0
	struct AEnemyAIWeapon* SpawnWeapon(struct AEnemyAIWeapon* SpawnWeaponClass); // Function Phoenix.Enemy_WeaponComponent.SpawnWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3298780
	void SetWeaponToRecover(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.SetWeaponToRecover // (Final|Native|Public|BlueprintCallable) // @ game+0x32986d0
	void SetWeaponToAcquire(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.SetWeaponToAcquire // (Final|Native|Public|BlueprintCallable) // @ game+0x3298640
	void SetWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.SetWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32985b0
	void SetSpawnEnable(bool Flag); // Function Phoenix.Enemy_WeaponComponent.SetSpawnEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x3298410
	void SetShieldToAcquire(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.Enemy_WeaponComponent.SetShieldToAcquire // (Final|Native|Public|BlueprintCallable) // @ game+0x32982f0
	void SetShieldSpellDeflectionIfEquipped(bool bShouldDeflect); // Function Phoenix.Enemy_WeaponComponent.SetShieldSpellDeflectionIfEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x3298260
	void SetShield(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.Enemy_WeaponComponent.SetShield // (Final|Native|Public|BlueprintCallable) // @ game+0x32981d0
	void SetRecoverWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.SetRecoverWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3298140
	void SetRecoverSecondaryWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.SetRecoverSecondaryWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32980b0
	void RespawnWeapon(); // Function Phoenix.Enemy_WeaponComponent.RespawnWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3298010
	void RemoveStoredWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.RemoveStoredWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3297f80
	void ReleaseWeaponType(struct AEnemyAIWeapon* InWeaponPtr, enum class EEnemy_WeaponReleaseType InReleaseType); // Function Phoenix.Enemy_WeaponComponent.ReleaseWeaponType // (Final|Native|Public|BlueprintCallable) // @ game+0x3297d00
	void ReleaseWeapon(struct AEnemyAIWeapon* InWeaponPtr, bool bForceDestroy, bool bSetDropVel, bool bIsThrown, bool bForceDrop); // Function Phoenix.Enemy_WeaponComponent.ReleaseWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3297b40
	void ReleaseShield(struct AEnemyAIWeapon* InShieldPtr, bool bSetDropVel); // Function Phoenix.Enemy_WeaponComponent.ReleaseShield // (Final|Native|Public|BlueprintCallable) // @ game+0x3297a70
	bool IsWeaponStored(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.IsWeaponStored // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32979d0
	bool IsRequiredWeaponStored(struct UEnemyAIAttackData* AttackPtr); // Function Phoenix.Enemy_WeaponComponent.IsRequiredWeaponStored // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297930
	bool IsRequiredWeaponActive(struct UEnemyAIAttackData* AttackPtr); // Function Phoenix.Enemy_WeaponComponent.IsRequiredWeaponActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297890
	void HideActiveWeapon(bool bHide); // Function Phoenix.Enemy_WeaponComponent.HideActiveWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3297800
	bool HasWeaponToRecover(); // Function Phoenix.Enemy_WeaponComponent.HasWeaponToRecover // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32977d0
	bool HasWeaponToAcquire(); // Function Phoenix.Enemy_WeaponComponent.HasWeaponToAcquire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32977a0
	bool HasWeapon(); // Function Phoenix.Enemy_WeaponComponent.HasWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297760
	bool HasStoredWeapon(); // Function Phoenix.Enemy_WeaponComponent.HasStoredWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297730
	bool HasShield(); // Function Phoenix.Enemy_WeaponComponent.HasShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32976f0
	struct AEnemyAIWeapon* GetWeaponToRecover(); // Function Phoenix.Enemy_WeaponComponent.GetWeaponToRecover // (Final|Native|Public|BlueprintCallable) // @ game+0x32973e0
	struct AEnemyAIWeapon* GetWeaponToAcquire(); // Function Phoenix.Enemy_WeaponComponent.GetWeaponToAcquire // (Final|Native|Public|BlueprintCallable) // @ game+0x32976a0
	float GetWeaponRequiredPercent(); // Function Phoenix.Enemy_WeaponComponent.GetWeaponRequiredPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297670
	struct AEnemyAIWeapon* GetWeapon(); // Function Phoenix.Enemy_WeaponComponent.GetWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297640
	struct AEnemyAIWeapon* GetTransientWeapon(); // Function Phoenix.Enemy_WeaponComponent.GetTransientWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297610
	struct AEnemyAIWeapon* GetStoreWeaponClass(); // Function Phoenix.Enemy_WeaponComponent.GetStoreWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32974d0
	struct AEnemyAIWeapon* GetStoredWeapon(struct TArray<struct AEnemyAIWeapon*>& WeaponClassList, bool bGetFirstMatch); // Function Phoenix.Enemy_WeaponComponent.GetStoredWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297510
	struct AEnemyAIWeapon* GetSpawnWeaponClass(); // Function Phoenix.Enemy_WeaponComponent.GetSpawnWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297490
	struct AEnemyAIWeapon* GetShieldWeaponClass(); // Function Phoenix.Enemy_WeaponComponent.GetShieldWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297450
	struct AEnemyAIWeapon* GetRespawnWeaponClass(); // Function Phoenix.Enemy_WeaponComponent.GetRespawnWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297410
	struct AEnemyAIWeapon* GetRecoverWeapon(); // Function Phoenix.Enemy_WeaponComponent.GetRecoverWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32973e0
	struct AEnemyAIWeapon* GetRecoverSecondaryWeapon(); // Function Phoenix.Enemy_WeaponComponent.GetRecoverSecondaryWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32973b0
	struct FGameplayTagContainer GetEnemyWeaponTagContainer(); // Function Phoenix.Enemy_WeaponComponent.GetEnemyWeaponTagContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297350
	struct UInteractionArchitectAsset* GetEnemyWeaponDataAsset(); // Function Phoenix.Enemy_WeaponComponent.GetEnemyWeaponDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3297320
	void FireWeaponAOE1(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.FireWeaponAOE1 // (Final|Native|Public|BlueprintCallable) // @ game+0x3297290
	bool FindAvailableStoredWeaponSocket(struct AEnemyAIWeapon* InWeaponPtr, struct FName& OutSocketName, struct FVector& OutSocketTranslationOffset, struct FRotator& OutSocketRotationOffset); // Function Phoenix.Enemy_WeaponComponent.FindAvailableStoredWeaponSocket // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32970f0
	void EnableWeaponCollision(); // Function Phoenix.Enemy_WeaponComponent.EnableWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32970d0
	void EnableShieldCollision(); // Function Phoenix.Enemy_WeaponComponent.EnableShieldCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32970b0
	void EnableProvidedWeaponCollision(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.EnableProvidedWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x3297020
	struct AActor* DisarmWeaponToRecover(float ScaleForce); // Function Phoenix.Enemy_WeaponComponent.DisarmWeaponToRecover // (Final|Native|Public|BlueprintCallable) // @ game+0x3296f00
	struct AActor* DisarmWeapon(float ScaleForce); // Function Phoenix.Enemy_WeaponComponent.DisarmWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3296e70
	struct AActor* DisarmShield(float ScaleForce); // Function Phoenix.Enemy_WeaponComponent.DisarmShield // (Final|Native|Public|BlueprintCallable) // @ game+0x3296de0
	void DisableWeaponCollision(); // Function Phoenix.Enemy_WeaponComponent.DisableWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x3296dc0
	void DisableShieldCollision(); // Function Phoenix.Enemy_WeaponComponent.DisableShieldCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x3296da0
	void DisableProvidedWeaponCollision(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.DisableProvidedWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x3296d10
	void DeathSpawnWeapon(); // Function Phoenix.Enemy_WeaponComponent.DeathSpawnWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3296cb0
	bool CanStoreWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.CanStoreWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3296c10
	bool CanPerceiveThisWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.CanPerceiveThisWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3296b70
	bool CanAnyStoredWeaponBeThrown(); // Function Phoenix.Enemy_WeaponComponent.CanAnyStoredWeaponBeThrown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3296b40
	void AllWeaponsLifetimeToZero(); // Function Phoenix.Enemy_WeaponComponent.AllWeaponsLifetimeToZero // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3296990
	void ActivateRequiredWeapon(); // Function Phoenix.Enemy_WeaponComponent.ActivateRequiredWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32967c0
	void AcquireWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.Enemy_WeaponComponent.AcquireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x3296730
	void AcquireShield(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.Enemy_WeaponComponent.AcquireShield // (Final|Native|Public|BlueprintCallable) // @ game+0x32966a0
};

// Class Phoenix.Enemy_InstanceQBUpdateData
// Size: 0x30 (Inherited: 0x28)
struct UEnemy_InstanceQBUpdateData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.Enemy_Direct_InstanceQBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_Direct_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_Alert_InstanceQBUpdateData
// Size: 0x58 (Inherited: 0x30)
struct UEnemy_Alert_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x28]; // 0x30(0x28)
};

// Class Phoenix.Enemy_Investigate_InstanceQBUpdateData
// Size: 0x90 (Inherited: 0x30)
struct UEnemy_Investigate_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x60]; // 0x30(0x60)
};

// Class Phoenix.Enemy_Close_InstanceQBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_Close_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.Enemy_Standby_InstanceQBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_Standby_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.Enemy_Duel_InstanceQBUpdateData
// Size: 0x90 (Inherited: 0x30)
struct UEnemy_Duel_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x44]; // 0x30(0x44)
	struct FVector EndPoint1; // 0x74(0x0c)
	struct FVector EndPoint2; // 0x80(0x0c)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.Enemy_RecoverWeapon_InstanceQBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_RecoverWeapon_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_InOut_InstanceQBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_InOut_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_SeekTarget_InstanceQBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_SeekTarget_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.Enemy_Companion_InstanceQBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_Companion_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.Enemy_LeadPlayer_InstanceQBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_LeadPlayer_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x18]; // 0x30(0x18)
};

// Class Phoenix.Enemy_TooClose_InstanceQBUpdateData
// Size: 0x60 (Inherited: 0x30)
struct UEnemy_TooClose_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x30]; // 0x30(0x30)
};

// Class Phoenix.Enemy_BackOnNav_InstanceQBUpdateData
// Size: 0x58 (Inherited: 0x30)
struct UEnemy_BackOnNav_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x28]; // 0x30(0x28)
};

// Class Phoenix.Enemy_SwimToShore_InstanceQBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_SwimToShore_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_Evade_InstanceQBUpdateData
// Size: 0x40 (Inherited: 0x30)
struct UEnemy_Evade_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class Phoenix.Enemy_Reposition_InstanceQBUpdateData
// Size: 0x40 (Inherited: 0x30)
struct UEnemy_Reposition_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x10]; // 0x30(0x10)
};

// Class Phoenix.Enemy_Around_InstanceQBUpdateData
// Size: 0x38 (Inherited: 0x30)
struct UEnemy_Around_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Phoenix.Enemy_TombProtector_InstanceQBUpdateData
// Size: 0x80 (Inherited: 0x30)
struct UEnemy_TombProtector_InstanceQBUpdateData : UEnemy_InstanceQBUpdateData {
	char pad_30[0x50]; // 0x30(0x50)
};

// Class Phoenix.EnemyCorruptionData
// Size: 0xc0 (Inherited: 0x30)
struct UEnemyCorruptionData : UDataAsset {
	struct TArray<struct FMaterialParameterSetter> CorruptionStartMaterialFXs; // 0x30(0x10)
	struct FMultiFXWrapper CorruptionFX; // 0x40(0x38)
	struct TArray<struct FMaterialParameterSetter> CorruptionStopMaterialFXs; // 0x78(0x10)
	struct FMultiFXWrapper CorruptionStopParticalFX; // 0x88(0x38)
};

// Class Phoenix.EnemyAIComponent
// Size: 0x3920 (Inherited: 0x1ec0)
struct UEnemyAIComponent : UNPC_Component {
	bool m_damageDestructables; // 0x1ec0(0x01)
	char pad_1EC1[0x3]; // 0x1ec1(0x03)
	float MoveMaxAngle; // 0x1ec4(0x04)
	float MaxAngleFromCamera; // 0x1ec8(0x04)
	float TooCloseToTargetDist; // 0x1ecc(0x04)
	bool bImmuneToCCIncapacition; // 0x1ed0(0x01)
	char pad_1ED1[0x7]; // 0x1ed1(0x07)
	struct FRipApartFinisherData RipApartFinisherData; // 0x1ed8(0x10)
	float ProximityAttackDist; // 0x1ee8(0x04)
	float ProximityMoveDist; // 0x1eec(0x04)
	float ProximityAttackDistCooldown; // 0x1ef0(0x04)
	float ProximityAttackMinTimeSinceLastAttack; // 0x1ef4(0x04)
	float CounterAttackWindow; // 0x1ef8(0x04)
	float CounterAttackCooldown; // 0x1efc(0x04)
	bool bAttackDisable; // 0x1f00(0x01)
	bool bAttackWithoutRestrictions; // 0x1f01(0x01)
	bool bAlwaysMyTurn; // 0x1f02(0x01)
	bool bNoAttackExecuteCooldown; // 0x1f03(0x01)
	bool bNoAttackSelectCooldown; // 0x1f04(0x01)
	bool bAlwaysInRange; // 0x1f05(0x01)
	bool bAlwaysAccurate; // 0x1f06(0x01)
	bool bAllAttacksRequireTickets; // 0x1f07(0x01)
	bool bStationaryAttackAllowedOutOfRange; // 0x1f08(0x01)
	bool bAttackExitAsSoonAsFired; // 0x1f09(0x01)
	bool bIgnoreCorridors; // 0x1f0a(0x01)
	char pad_1F0B[0x1]; // 0x1f0b(0x01)
	struct FEnemy_AttackLocUpdateData AttackLocUpdateData; // 0x1f0c(0x04)
	struct UBehaviorTree* AttackSplitBehaviorTree; // 0x1f10(0x08)
	struct UBehaviorTree* AttackCounterBehaviorTree; // 0x1f18(0x08)
	float RetaliatePauseTicketRecoverTime; // 0x1f20(0x04)
	float TeammateLOSCorridorHalfWidth; // 0x1f24(0x04)
	float TeammateLOSUpdateInterval; // 0x1f28(0x04)
	bool TeammateLOSRequireForNPCAttack; // 0x1f2c(0x01)
	bool bAbruptDestinationChangeCheck; // 0x1f2d(0x01)
	char pad_1F2E[0x2]; // 0x1f2e(0x02)
	float AbruptDestinationChangeAngle; // 0x1f30(0x04)
	float CombatLocSearchAngleWidth; // 0x1f34(0x04)
	float CombatFootprintSize; // 0x1f38(0x04)
	char pad_1F3C[0x4]; // 0x1f3c(0x04)
	struct TArray<struct UEnemy_QBUpdateData*> QBUpdateData; // 0x1f40(0x10)
	struct TArray<struct UEnemy_InstanceQBUpdateData*> QBInstanceUpdateData; // 0x1f50(0x10)
	char pad_1F60[0x8]; // 0x1f60(0x08)
	struct UEnemyAIPathCheckPropertyData* PathCheckPtr; // 0x1f68(0x08)
	enum class EEEnemyAISizeCategory SizeCategory; // 0x1f70(0x01)
	char pad_1F71[0x3]; // 0x1f71(0x03)
	float RotationRate; // 0x1f74(0x04)
	char pad_1F78[0x8]; // 0x1f78(0x08)
	struct FEnemy_TurnInPlaceData TurnInPlaceData; // 0x1f80(0x38)
	bool bEnableEnergyDrain; // 0x1fb8(0x01)
	char pad_1FB9[0x7]; // 0x1fb9(0x07)
	struct TArray<struct FEnemy_EnergyData> EnergyDataList; // 0x1fc0(0x10)
	bool bEnableBreaks; // 0x1fd0(0x01)
	char pad_1FD1[0x3]; // 0x1fd1(0x03)
	float BreakChance; // 0x1fd4(0x04)
	float BreakIntervalBetween; // 0x1fd8(0x04)
	bool bEnableBreakIntervalDecay; // 0x1fdc(0x01)
	char pad_1FDD[0x3]; // 0x1fdd(0x03)
	float BreakIntervalBetweenDeviation; // 0x1fe0(0x04)
	float BreakDuration; // 0x1fe4(0x04)
	float BreakDurationDeviation; // 0x1fe8(0x04)
	char pad_1FEC[0x4]; // 0x1fec(0x04)
	struct UAblAbility* BecomeAlertAbility; // 0x1ff0(0x08)
	struct UAblAbility* AlertFaceAbility; // 0x1ff8(0x08)
	struct UAblAbility* AlertWaitAbility; // 0x2000(0x08)
	struct UAblAbility* LoseAlertAbility; // 0x2008(0x08)
	struct UAblAbility* BecomeAwareAbility; // 0x2010(0x08)
	struct UAblAbility* LoseAwareAbility; // 0x2018(0x08)
	struct UAblAbility* TurnInPlaceAbility; // 0x2020(0x08)
	struct UAblAbility* IdleBreakAbility; // 0x2028(0x08)
	struct UAblAbility* ShuffleAbility; // 0x2030(0x08)
	struct UAblAbility* TauntAbility; // 0x2038(0x08)
	struct UAblAbility* ApparateOutAbility; // 0x2040(0x08)
	struct UAblAbility* ApparateWaitAbility; // 0x2048(0x08)
	struct UAblAbility* ApparateInAbility; // 0x2050(0x08)
	struct UAblAbility* WeaponEquipAbility; // 0x2058(0x08)
	struct UAblAbility* WeaponStoreAbility; // 0x2060(0x08)
	struct UAblAbility* WeaponPickupAbility; // 0x2068(0x08)
	struct UAblAbility* WeaponLostAbility; // 0x2070(0x08)
	struct UAblAbility* WeaponRecoveredAbility; // 0x2078(0x08)
	struct UAblAbility* JumpDownAbility; // 0x2080(0x08)
	struct UAblAbility* JumpStraightAbility; // 0x2088(0x08)
	struct UAblAbility* JumpSoftLandAbility; // 0x2090(0x08)
	struct UAblAbility* JumpLandPT; // 0x2098(0x08)
	struct UAblAbility* DeathTauntAbility; // 0x20a0(0x08)
	struct UAblAbility* FlourishAbility; // 0x20a8(0x08)
	struct UAblAbility* FlyingAbility; // 0x20b0(0x08)
	struct UAblAbility* StartDrainedAbility; // 0x20b8(0x08)
	struct UAblAbility* DrainedAbility; // 0x20c0(0x08)
	struct UAblAbility* StopDrainedAbility; // 0x20c8(0x08)
	struct UAblAbility* InvestigateStartAbility; // 0x20d0(0x08)
	struct UAblAbility* InvestigateMoveAbility; // 0x20d8(0x08)
	struct UAblAbility* InvestigateIdleAbility; // 0x20e0(0x08)
	struct UAblAbility* InvestigateStopAbility; // 0x20e8(0x08)
	struct UAblAbility* ReflectionIdleAbility; // 0x20f0(0x08)
	enum class ENPC_TargetAwareState ForceTargetAwareState; // 0x20f8(0x01)
	char pad_20F9[0x3]; // 0x20f9(0x03)
	float ForceTargetAwareStateTimer; // 0x20fc(0x04)
	bool bTASForceIntoAttack; // 0x2100(0x01)
	bool bTASEnable; // 0x2101(0x01)
	bool bPlayBecomeAware; // 0x2102(0x01)
	char pad_2103[0x1]; // 0x2103(0x01)
	float PlayBecomeAwareChance; // 0x2104(0x04)
	float TeammatesPlayBecomeAwareChance; // 0x2108(0x04)
	bool bPlayLoseAware; // 0x210c(0x01)
	bool bSetDesiredDirectionInAlertFace; // 0x210d(0x01)
	bool bAllowAwareTurnAround; // 0x210e(0x01)
	char pad_210F[0x1]; // 0x210f(0x01)
	struct FClimbSettings ClimbSettings; // 0x2110(0x30)
	struct FLadderSettings LadderSettings; // 0x2140(0xa8)
	struct FSlideSettings SlideSettings; // 0x21e8(0x40)
	struct FVaultSettings VaultSettings; // 0x2228(0x20)
	bool bRequireStationaryForIdleChance; // 0x2248(0x01)
	char pad_2249[0x7]; // 0x2249(0x07)
	struct FEnemy_IdleData IdleData; // 0x2250(0x60)
	struct TArray<struct FEnemy_NextDecisionWait> NextDecisionWaitList; // 0x22b0(0x10)
	struct TArray<struct FEnemy_NextMoveWait> NextMoveWaitList; // 0x22c0(0x10)
	struct TArray<struct FEnemy_MoveStopData> MoveStopDataList; // 0x22d0(0x10)
	bool bUseCreatureMoveToStopPrediction; // 0x22e0(0x01)
	bool bUseCreatureMoveToStopBranching; // 0x22e1(0x01)
	bool bUpdateMobilityInBecomeOrLoseAware; // 0x22e2(0x01)
	enum class ENPC_Mobility MobilityForAlarmedInvestigate; // 0x22e3(0x01)
	char pad_22E4[0x4]; // 0x22e4(0x04)
	struct FEnemy_IdleData TauntData; // 0x22e8(0x60)
	struct TArray<struct FEnemy_Taunt> TauntList; // 0x2348(0x10)
	struct FEnemy_IdleData IdleBreakData; // 0x2358(0x60)
	struct TArray<struct FEnemy_IdleBreak> IdleBreakList; // 0x23b8(0x10)
	struct FEnemy_ShuffleData ShuffleIdleData; // 0x23c8(0x68)
	struct FEnemy_IdleData ShuffleData; // 0x2430(0x60)
	int32_t ShuffleSupportedDirections; // 0x2490(0x04)
	int32_t ShuffleDistance; // 0x2494(0x04)
	struct TArray<struct FEnemy_Shuffle> ShuffleList; // 0x2498(0x10)
	bool bAllowShuffleWhenTooClose; // 0x24a8(0x01)
	bool bAllowShuffleWithoutWeapon; // 0x24a9(0x01)
	char pad_24AA[0x2]; // 0x24aa(0x02)
	float EvadeBeingTargetedThreshold; // 0x24ac(0x04)
	int32_t ChanceToEvade; // 0x24b0(0x04)
	char pad_24B4[0x4]; // 0x24b4(0x04)
	struct TArray<struct FEnemyEvadeData> EnemyEvadeData; // 0x24b8(0x10)
	bool bFavorEvade; // 0x24c8(0x01)
	char pad_24C9[0x3]; // 0x24c9(0x03)
	float HealAmountPerEvent; // 0x24cc(0x04)
	struct TArray<struct AEnemyAIWeapon*> ProtegoRequiredWeaponList; // 0x24d0(0x10)
	enum class EEnemy_ProtegoLevel ProtegoDefenseLevel; // 0x24e0(0x01)
	char pad_24E1[0x3]; // 0x24e1(0x03)
	int32_t ChanceToProtego; // 0x24e4(0x04)
	int32_t ChanceToProtegoLightAttack; // 0x24e8(0x04)
	int32_t ChanceToProtegoMediumAttack; // 0x24ec(0x04)
	int32_t ChanceToProtegoHeavyAttack; // 0x24f0(0x04)
	int32_t ProtegoDeflectedAttack; // 0x24f4(0x04)
	int32_t BlockAttack; // 0x24f8(0x04)
	int32_t DeflectBackAttack; // 0x24fc(0x04)
	int32_t DeflectToTarget; // 0x2500(0x04)
	float ProtegoDeflectionTimeOut; // 0x2504(0x04)
	float DeflectedAttackTimeOut; // 0x2508(0x04)
	bool bPowerupEligible; // 0x250c(0x01)
	char pad_250D[0x3]; // 0x250d(0x03)
	float PowerupTimeout; // 0x2510(0x04)
	char pad_2514[0x4]; // 0x2514(0x04)
	struct TArray<struct FEnemyVulnerableData> EnemyStrengthData; // 0x2518(0x10)
	struct TArray<struct FEnemyVulnerableData> EnemyWeaknessData; // 0x2528(0x10)
	struct TArray<struct FEnemyVulnerableData> EnemyAttackStrengthData; // 0x2538(0x10)
	struct TArray<struct FEnemyVulnerableData> EnemyAttackWeaknessData; // 0x2548(0x10)
	struct TArray<struct FEnemyGameEventData> EnemyGameEventData; // 0x2558(0x10)
	struct UInteractionArchitectAsset* GameEvenetInteractionArchitectAssetPtr; // 0x2568(0x08)
	bool bBuffAllowHealth; // 0x2570(0x01)
	bool bBuffAllowWeapon; // 0x2571(0x01)
	char pad_2572[0x2]; // 0x2572(0x02)
	float DisarmRespawnTime; // 0x2574(0x04)
	struct USpellToolRecord* ProtegoAttackPtr; // 0x2578(0x08)
	struct UAblAbility* ProtegoAbilityPtr; // 0x2580(0x08)
	struct UAblAbility* ProtegoStartupAbilityPtr; // 0x2588(0x08)
	bool bProtegoAdditive; // 0x2590(0x01)
	char pad_2591[0x3]; // 0x2591(0x03)
	struct FName ProtegoChannelName; // 0x2594(0x08)
	char pad_259C[0x4]; // 0x259c(0x04)
	struct UInteractionArchitectAsset* ProtegoInteractionArchitectAssetPtr; // 0x25a0(0x08)
	float ProtegoHoldTimeout; // 0x25a8(0x04)
	bool bProtegoPlayDeflection; // 0x25ac(0x01)
	bool bProtegoShowShieldPulseWhenHit; // 0x25ad(0x01)
	bool bProtegoShowOnOffShieldEffects; // 0x25ae(0x01)
	bool bAllowProtegoToInterrupAttack; // 0x25af(0x01)
	bool bAllowProtegoToInterrupReactions; // 0x25b0(0x01)
	char pad_25B1[0x3]; // 0x25b1(0x03)
	int32_t ProtegoDeflectionChance; // 0x25b4(0x04)
	char pad_25B8[0x1]; // 0x25b8(0x01)
	bool bOnlyUseDOTReactionForCrucio; // 0x25b9(0x01)
	char pad_25BA[0xe]; // 0x25ba(0x0e)
	struct USpellToolRecord* LumosPtr; // 0x25c8(0x08)
	struct UAblAbility* LumosAbilityPtr; // 0x25d0(0x08)
	bool bLumosAdditive; // 0x25d8(0x01)
	char pad_25D9[0x3]; // 0x25d9(0x03)
	struct FName LumosChannelName; // 0x25dc(0x08)
	bool bCanApparateIfUnreachableLoc; // 0x25e4(0x01)
	bool bCanApparateToMove; // 0x25e5(0x01)
	bool bCanApparateToRecoverWeapon; // 0x25e6(0x01)
	bool bApparateUsingFixedTime; // 0x25e7(0x01)
	float ApparateSpeed; // 0x25e8(0x04)
	float ApparateFixedTime; // 0x25ec(0x04)
	struct TArray<struct FEnemy_ApparateData> ApparateData; // 0x25f0(0x10)
	struct UEnemy_TargetSenseAsset* LeaderTargetSenseAsset; // 0x2600(0x08)
	struct UEnemy_TargetSenseAsset* CompanionTargetSenseAsset; // 0x2608(0x08)
	float CompanionPerceptionMinTimeSincePlayerAttacked; // 0x2610(0x04)
	char pad_2614[0x4]; // 0x2614(0x04)
	struct TSoftClassPtr<UObject> BabyNPCClass; // 0x2618(0x28)
	struct FString BabySpawnObjectName; // 0x2640(0x10)
	struct FEnemy_AccuracyData Accuracy; // 0x2650(0x30)
	char pad_2680[0x48]; // 0x2680(0x48)
	bool bAllowTooCloseCounterAttack; // 0x26c8(0x01)
	bool bAllowCreateAggroHideTrigger; // 0x26c9(0x01)
	bool bAllowApparateMoveWithInvalidMoveLoc; // 0x26ca(0x01)
	char pad_26CB[0x1]; // 0x26cb(0x01)
	float TeleportMoveRangeOffset; // 0x26cc(0x04)
	float TeleportMoveStuckRangeOffset; // 0x26d0(0x04)
	float DamageBuffMultiplier; // 0x26d4(0x04)
	bool m_onGround; // 0x26d8(0x01)
	bool m_lastOnGround; // 0x26d9(0x01)
	bool bSpawnSpellCaster; // 0x26da(0x01)
	bool bSpawnProtegoCaster; // 0x26db(0x01)
	struct FName SpellCasterSocket; // 0x26dc(0x08)
	char pad_26E4[0x4]; // 0x26e4(0x04)
	struct AActor* SpellCasterClass; // 0x26e8(0x08)
	struct FMulticastInlineDelegate m_attackBeginDelegate; // 0x26f0(0x10)
	struct FMulticastInlineDelegate m_attackEndDelegate; // 0x2700(0x10)
	struct FMulticastInlineDelegate m_spawnEndDelegate; // 0x2710(0x10)
	struct FMulticastInlineDelegate m_actorHitDelegate; // 0x2720(0x10)
	struct FMulticastInlineDelegate m_onDeathDelegate; // 0x2730(0x10)
	struct FMulticastInlineDelegate OnDeadDelegate; // 0x2740(0x10)
	struct FMulticastInlineDelegate m_onSpawnFinishedDelegate; // 0x2750(0x10)
	struct FMulticastInlineDelegate m_weaponsLoadedDelegate; // 0x2760(0x10)
	struct FMulticastInlineDelegate m_arrivedDelegate; // 0x2770(0x10)
	char pad_2780[0x28]; // 0x2780(0x28)
	struct FMulticastInlineDelegate OnThreatChangedDelegate; // 0x27a8(0x10)
	struct FMulticastInlineDelegate m_onAlertStateChangedDelegate; // 0x27b8(0x10)
	char pad_27C8[0x18]; // 0x27c8(0x18)
	struct UEnemyHiddenTeleportAttackComponent* HiddenTeleportAttackComp; // 0x27e0(0x08)
	char pad_27E8[0x8]; // 0x27e8(0x08)
	struct FMulticastInlineDelegate m_onAlertSenseChangedDelegate; // 0x27f0(0x10)
	struct FMulticastInlineDelegate m_FOnDodgeDelegate; // 0x2800(0x10)
	float KeepAwayFromTargetDist; // 0x2810(0x04)
	bool bUseFootMatching; // 0x2814(0x01)
	bool bApparateAfterReactions; // 0x2815(0x01)
	char pad_2816[0x2]; // 0x2816(0x02)
	struct FEnemy_ApparateToData ApparateAfterReactionsData; // 0x2818(0x28)
	char pad_2840[0x10]; // 0x2840(0x10)
	struct UEnemyCorruptionData* AggroCorruption; // 0x2850(0x08)
	struct UEnemyCorruptionData* AggroCorruptionInstance; // 0x2858(0x08)
	struct FMaterialParameterSetter Corruption; // 0x2860(0x98)
	char pad_28F8[0xe0]; // 0x28f8(0xe0)
	struct FGameplayTagContainer EscapeExceptionTags; // 0x29d8(0x20)
	char pad_29F8[0x300]; // 0x29f8(0x300)
	struct ANPC_Character* GameChangerForm; // 0x2cf8(0x08)
	char pad_2D00[0x18]; // 0x2d00(0x18)
	struct AActor* CustTargetPtr; // 0x2d18(0x08)
	char pad_2D20[0x630]; // 0x2d20(0x630)
	struct UEnemy_AttackComponent* AttackComp; // 0x3350(0x08)
	struct UEnemy_WeaponComponent* WeaponComp; // 0x3358(0x08)
	char pad_3360[0x2e0]; // 0x3360(0x2e0)
	struct UAblAbility* CurrentClimbAbility; // 0x3640(0x08)
	struct UAblAbility* CurrentJumpToClimbAbility; // 0x3648(0x08)
	char pad_3650[0x8]; // 0x3650(0x08)
	struct ULadderNavLinkComponent* CurrentLadder; // 0x3658(0x08)
	struct USlideNavLinkComponent* CurrentSlide; // 0x3660(0x08)
	char pad_3668[0x120]; // 0x3668(0x120)
	struct UAblAbility* CurrentVaultAbility; // 0x3788(0x08)
	char pad_3790[0xf8]; // 0x3790(0xf8)
	struct AActor* AnimagusPreloadClass; // 0x3888(0x08)
	char pad_3890[0x1]; // 0x3890(0x01)
	bool bEnableAnimagusFormPreloading; // 0x3891(0x01)
	char pad_3892[0x8e]; // 0x3892(0x8e)

	bool WasAttackParried(struct AActor* InVictimPtr); // Function Phoenix.EnemyAIComponent.WasAttackParried // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a6860
	bool WaitForCreatureStance(enum class ECreatureStance InWaitForStance, bool bWaitForStationary, float DeltaTime); // Function Phoenix.EnemyAIComponent.WaitForCreatureStance // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6740
	bool WaitForAbility(enum class EEnemy_Ability InWaitForState, float DeltaTime); // Function Phoenix.EnemyAIComponent.WaitForAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6660
	void UpdateHealthRTPCCallback(struct AActor* InActor, float Delta, bool bIndicateHUD); // Function Phoenix.EnemyAIComponent.UpdateHealthRTPCCallback // (Final|Native|Public) // @ game+0x32a6540
	bool UpdateFollowSpline(float DeltaTime); // Function Phoenix.EnemyAIComponent.UpdateFollowSpline // (Final|Native|Protected|BlueprintCallable) // @ game+0x32a64b0
	void UpdateFacingToLoc(struct FVector Loc, struct UCurveFloat* CurvePtr, float InterpSpeed, float DeltaTime); // Function Phoenix.EnemyAIComponent.UpdateFacingToLoc // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a6330
	void UpdateAttackLocation(); // Function Phoenix.EnemyAIComponent.UpdateAttackLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6310
	void UnhideActiveWeapon(); // Function Phoenix.EnemyAIComponent.UnhideActiveWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a62f0
	void TrackMeleePoints(struct FVector& InMeleeLoc); // Function Phoenix.EnemyAIComponent.TrackMeleePoints // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32a6260
	void ThrowWeapon(); // Function Phoenix.EnemyAIComponent.ThrowWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6240
	void TeamChanged(); // Function Phoenix.EnemyAIComponent.TeamChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6220
	bool StoreWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.StoreWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6180
	void StopWandLinkCowerDelayed(); // Function Phoenix.EnemyAIComponent.StopWandLinkCowerDelayed // (Final|Native|Public) // @ game+0x32a6160
	void StopProtegoSpell(); // Function Phoenix.EnemyAIComponent.StopProtegoSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6140
	void StopGameChanger(); // Function Phoenix.EnemyAIComponent.StopGameChanger // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6120
	void StopCastSpell(struct USpellToolRecord* SpellToolRecord); // Function Phoenix.EnemyAIComponent.StopCastSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6090
	void StartProtegoSpell(); // Function Phoenix.EnemyAIComponent.StartProtegoSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6070
	void StartGameChanger(); // Function Phoenix.EnemyAIComponent.StartGameChanger // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6050
	void StartFollowSpline(); // Function Phoenix.EnemyAIComponent.StartFollowSpline // (Final|Native|Protected|BlueprintCallable) // @ game+0x32a6030
	bool StartAttack(); // Function Phoenix.EnemyAIComponent.StartAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a6000
	void StartApparateInEvent(); // Function Phoenix.EnemyAIComponent.StartApparateInEvent // (Final|Native|Public) // @ game+0x32a5fe0
	void SplineSpawnDoneEvent(struct AActor* InApparateActor); // Function Phoenix.EnemyAIComponent.SplineSpawnDoneEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5f50
	void SplineSpawnArrivedEvent(struct AActor* InApparateActor, struct FVector InLoc); // Function Phoenix.EnemyAIComponent.SplineSpawnArrivedEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a5e70
	struct AEnemyAIWeapon* SpawnWeapon(struct AEnemyAIWeapon* SpawnWeaponClass); // Function Phoenix.EnemyAIComponent.SpawnWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5dd0
	void SpawnLoot(); // Function Phoenix.EnemyAIComponent.SpawnLoot // (Final|Native|Public|BlueprintCallable) // @ game+0x13244f0
	struct AActor* SpawnChild_BP(struct FString ObjectToSpawn, enum class ENPC_Spawn InSpawnType, struct FString TeamName, struct FTransform SpawnTransform); // Function Phoenix.EnemyAIComponent.SpawnChild_BP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x32a5b70
	void SpawnAnimagusForm(); // Function Phoenix.EnemyAIComponent.SpawnAnimagusForm // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5b50
	void SetWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.SetWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5ac0
	void SetWanderMode(); // Function Phoenix.EnemyAIComponent.SetWanderMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5aa0
	void SetUnblockableTags(struct FGameplayTagContainer& InOutTagContainer, struct UEnemyAIAttackData* attackDataPtr, bool bForceUnblockable); // Function Phoenix.EnemyAIComponent.SetUnblockableTags // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a5950
	void SetToDie(struct AActor* InstigatorPtr, struct UInteractionArchitectAsset* InMunitionDataAssetPtr); // Function Phoenix.EnemyAIComponent.SetToDie // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5880
	void SetTASEnabled(bool inEnabled); // Function Phoenix.EnemyAIComponent.SetTASEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32a57f0
	void SetStationaryMode(); // Function Phoenix.EnemyAIComponent.SetStationaryMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32a57d0
	void SetSpellCaster(struct ASpellCasterTool* InSpellCaster); // Function Phoenix.EnemyAIComponent.SetSpellCaster // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5740
	void SetShowShieldWhenHit(bool bShowWhenHit); // Function Phoenix.EnemyAIComponent.SetShowShieldWhenHit // (Final|Native|Public|BlueprintCallable) // @ game+0x32a56b0
	void SetShowOnOffShieldEffects(bool bShowShieldEffects); // Function Phoenix.EnemyAIComponent.SetShowOnOffShieldEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5620
	void SetShieldToAcquire(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.EnemyAIComponent.SetShieldToAcquire // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5590
	void SetShieldSpellDeflectionIfEquipped(bool bShouldDeflect); // Function Phoenix.EnemyAIComponent.SetShieldSpellDeflectionIfEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5500
	void SetShield(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.EnemyAIComponent.SetShield // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5470
	void SetScaredMode(); // Function Phoenix.EnemyAIComponent.SetScaredMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void SetResurrectedEvent(); // Function Phoenix.EnemyAIComponent.SetResurrectedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5450
	void SetPlayProtegoDeflection(bool bPlay); // Function Phoenix.EnemyAIComponent.SetPlayProtegoDeflection // (Final|Native|Public|BlueprintCallable) // @ game+0x32a53c0
	void SetPathMode(struct APathNode* pPathNode); // Function Phoenix.EnemyAIComponent.SetPathMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void SetParentToActors(struct TArray<struct AActor*>& InActorList, struct AActor* InParent); // Function Phoenix.EnemyAIComponent.SetParentToActors // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32a52d0
	void SetNoAttackSelectCooldown(bool bNo); // Function Phoenix.EnemyAIComponent.SetNoAttackSelectCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5240
	void SetNoAttackExecuteCooldown(bool bNo); // Function Phoenix.EnemyAIComponent.SetNoAttackExecuteCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x32a51b0
	void SetNewAlertUIData(struct FNPC_ShowUI NewShowUI); // Function Phoenix.EnemyAIComponent.SetNewAlertUIData // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5100
	void SetInAttackWindow(bool bin); // Function Phoenix.EnemyAIComponent.SetInAttackWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x32a5070
	void SetIgnoreAttackCorridors(bool bIgnore); // Function Phoenix.EnemyAIComponent.SetIgnoreAttackCorridors // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4fe0
	void SetGameChangerState(enum class NPC_GameChangerState InState); // Function Phoenix.EnemyAIComponent.SetGameChangerState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4f60
	void SetGameChangerObjectName(struct FString inObjectName); // Function Phoenix.EnemyAIComponent.SetGameChangerObjectName // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4e50
	void SetGameChangerForm(struct ANPC_Character* inGameChangerForm); // Function Phoenix.EnemyAIComponent.SetGameChangerForm // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4dc0
	void SetForceIntoAttackTAS(bool bForce); // Function Phoenix.EnemyAIComponent.SetForceIntoAttackTAS // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4d30
	void SetDestroyed(); // Function Phoenix.EnemyAIComponent.SetDestroyed // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void SetDeadMode(); // Function Phoenix.EnemyAIComponent.SetDeadMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4d10
	void SetDeadEvent(struct AActor* Instigator); // Function Phoenix.EnemyAIComponent.SetDeadEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4c80
	void SetDamagedEvent(float InAmount, struct AActor* Instigator); // Function Phoenix.EnemyAIComponent.SetDamagedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4bb0
	void SetCustomAttackData(struct UEnemyAIAttackData* InCustAttackPtr, struct AActor* InCustTarget); // Function Phoenix.EnemyAIComponent.SetCustomAttackData // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4ae0
	void SetCantMoveDuringAttack(bool disableMove); // Function Phoenix.EnemyAIComponent.SetCantMoveDuringAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4a50
	void SetCanAttack(bool canAttack); // Function Phoenix.EnemyAIComponent.SetCanAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a49c0
	void SetAttackWithoutRestrictions(bool bInWithoutRestrictions); // Function Phoenix.EnemyAIComponent.SetAttackWithoutRestrictions // (Final|Native|Public|BlueprintCallable) // @ game+0x32a48b0
	void SetAttackMode(struct AActor* pTarget); // Function Phoenix.EnemyAIComponent.SetAttackMode // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4820
	void SetAttackLocation(struct FVector InLocation); // Function Phoenix.EnemyAIComponent.SetAttackLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a4790
	void SetAttackingState(enum class EEnemy_AttackingState InState); // Function Phoenix.EnemyAIComponent.SetAttackingState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4940
	void SetAttackExitAsSoonAsFired(bool bExit); // Function Phoenix.EnemyAIComponent.SetAttackExitAsSoonAsFired // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4700
	void SetAttackCollisionType(enum class AttackCollisionType InCollisionType); // Function Phoenix.EnemyAIComponent.SetAttackCollisionType // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4680
	void SetAnimagusWolfPerceivedTarget(); // Function Phoenix.EnemyAIComponent.SetAnimagusWolfPerceivedTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4660
	void SetAlwaysMyTurn(bool bInAlwaysMyTurn); // Function Phoenix.EnemyAIComponent.SetAlwaysMyTurn // (Final|Native|Public|BlueprintCallable) // @ game+0x32a45d0
	void SetAlwaysInRange(bool bAlways); // Function Phoenix.EnemyAIComponent.SetAlwaysInRange // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4540
	void SetAlwaysAccurate(bool bAlways); // Function Phoenix.EnemyAIComponent.SetAlwaysAccurate // (Final|Native|Public|BlueprintCallable) // @ game+0x32a44b0
	void SetAllowProtegoToInterruptAttack(bool bAllowProtegoInterrupt); // Function Phoenix.EnemyAIComponent.SetAllowProtegoToInterruptAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4420
	void SetAlertMode(struct AActor* pTarget); // Function Phoenix.EnemyAIComponent.SetAlertMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	float SendMunitionImpact(struct FHitResult& HitResult, struct AActor* pVictim, struct AActor* pOriginator, struct UInteractionArchitectAsset* pMunitionDataAsset, struct FName InMunitionImpactType, struct FGameplayTagContainer& InMunitionTagContainer, bool bForceUnblockable); // Function Phoenix.EnemyAIComponent.SendMunitionImpact // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a4170
	void RotateToLoc(struct FVector Loc); // Function Phoenix.EnemyAIComponent.RotateToLoc // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a40e0
	void RotateToAttack(); // Function Phoenix.EnemyAIComponent.RotateToAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a40c0
	void RespawnWeapon(); // Function Phoenix.EnemyAIComponent.RespawnWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a40a0
	void ResetDisengagedState(); // Function Phoenix.EnemyAIComponent.ResetDisengagedState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4080
	void ResetAttack(enum class EEnemy_AttackResetSource InResetSource); // Function Phoenix.EnemyAIComponent.ResetAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a4000
	void ReleaseWeapon(struct AEnemyAIWeapon* InWeaponPtr, bool bForceDestroy, bool bSetDropVel, bool bIsThrown, bool bForceDrop); // Function Phoenix.EnemyAIComponent.ReleaseWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3e40
	void ReleaseSpellCaster(struct ASpellCasterTool* InSpellCasterPtr); // Function Phoenix.EnemyAIComponent.ReleaseSpellCaster // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3db0
	void ReleaseShield(struct AEnemyAIWeapon* InShieldPtr, bool bSetDropVel); // Function Phoenix.EnemyAIComponent.ReleaseShield // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3ce0
	void ReactionStart(struct UAblReactionData* ReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.EnemyAIComponent.ReactionStart // (Final|Native|Public) // @ game+0x32a3c10
	void PublishAttackStateToBlackboard(); // Function Phoenix.EnemyAIComponent.PublishAttackStateToBlackboard // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3bf0
	void PreparePotentialSpawnLocations(); // Function Phoenix.EnemyAIComponent.PreparePotentialSpawnLocations // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3bd0
	void PreloadAnimagusForm(struct TSoftClassPtr<UObject> AnimalForm); // Function Phoenix.EnemyAIComponent.PreloadAnimagusForm // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3ac0
	bool PreAttack(enum class EEnemy_AttackSource InSource); // Function Phoenix.EnemyAIComponent.PreAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3a30
	void PathNodeArrival(); // Function Phoenix.EnemyAIComponent.PathNodeArrival // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3a10
	bool OverlapMeleeCapsule(struct AActor* InVictim, struct FHitResult InHitResult, enum class ENPC_HitDirection InForceDirection, struct FEnemy_MeleeAttackOverlapData& OutOverlapData); // Function Phoenix.EnemyAIComponent.OverlapMeleeCapsule // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a3790
	void OnReplicatedFormDeath(); // Function Phoenix.EnemyAIComponent.OnReplicatedFormDeath // (Final|Native|Public) // @ game+0x32a3770
	void OnObjectLoaded(struct FString ObjectToLoad); // Function Phoenix.EnemyAIComponent.OnObjectLoaded // (Final|Native|Public) // @ game+0x31cc3a0
	void OnJumpSplineDone(); // Function Phoenix.EnemyAIComponent.OnJumpSplineDone // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3750
	void OnAttackDBLoaded(struct AActor* LoadActor, enum class EActor_LoadDBProcessingType LoadType); // Function Phoenix.EnemyAIComponent.OnAttackDBLoaded // (Final|Native|Public) // @ game+0x32a3680
	void OnAnimagusFormTransformed(); // Function Phoenix.EnemyAIComponent.OnAnimagusFormTransformed // (Final|Native|Public) // @ game+0x32a3660
	void OnAnimagusFormTimeout(); // Function Phoenix.EnemyAIComponent.OnAnimagusFormTimeout // (Final|Native|Public) // @ game+0x32a3640
	void OnAnimagusFormDeath(); // Function Phoenix.EnemyAIComponent.OnAnimagusFormDeath // (Final|Native|Public) // @ game+0x32a3620
	void OnAnimagusFormAvadaKedavra(); // Function Phoenix.EnemyAIComponent.OnAnimagusFormAvadaKedavra // (Final|Native|Public) // @ game+0x32a3600
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.EnemyAIComponent.OnActorHit // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32a3460
	void OnActorDamaged(struct AActor* InActor, struct AActor* InInstigator, float InDamage, struct FHitResult& InHit); // Function Phoenix.EnemyAIComponent.OnActorDamaged // (Final|Native|Public|HasOutParms) // @ game+0x32a32d0
	bool MoveToAttackRunTo(float DeltaTime); // Function Phoenix.EnemyAIComponent.MoveToAttackRunTo // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3240
	bool MoveToAttackLocation(struct FVector DestinationLoc, struct UCurveFloat* CurveFloatPtr, float InterpSpeed, float DeltaTime); // Function Phoenix.EnemyAIComponent.MoveToAttackLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a30c0
	void LogBehaviorTree(struct FName TaskName); // Function Phoenix.EnemyAIComponent.LogBehaviorTree // (Final|Native|Public|BlueprintCallable) // @ game+0x32a3030
	bool IsUsingNavLink(); // Function Phoenix.EnemyAIComponent.IsUsingNavLink // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a3010
	bool IsRequiredWeaponStored(struct UEnemyAIAttackData* AttackPtr); // Function Phoenix.EnemyAIComponent.IsRequiredWeaponStored // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2f70
	bool IsFacingToLoc(struct FVector Loc, float MinAngle); // Function Phoenix.EnemyAIComponent.IsFacingToLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2e80
	bool IsCharacterDisengaged(); // Function Phoenix.EnemyAIComponent.IsCharacterDisengaged // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2e60
	bool IsAttacking(); // Function Phoenix.EnemyAIComponent.IsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2e30
	bool InRangeToLoc(struct FVector TestLoc, struct FVector Loc, float MinRange, float MaxRange, float Tolerance, bool bAllowIfTooClose, float& OutDistFromRange); // Function Phoenix.EnemyAIComponent.InRangeToLoc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2880
	void InitWaitForCreatureStance(enum class ECreatureStance InWaitForStance, bool bWaitForStationary, float Timeout); // Function Phoenix.EnemyAIComponent.InitWaitForCreatureStance // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2d10
	void InitWaitForAbility(float Timeout); // Function Phoenix.EnemyAIComponent.InitWaitForAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2c90
	bool InitMoveToAttackRunTo(float Timeout); // Function Phoenix.EnemyAIComponent.InitMoveToAttackRunTo // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2c00
	bool InitMoveToAttackLocation(struct FVector DestinationLoc, float Timeout); // Function Phoenix.EnemyAIComponent.InitMoveToAttackLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a2b10
	void InitFollowSpline(); // Function Phoenix.EnemyAIComponent.InitFollowSpline // (Final|Native|Protected|BlueprintCallable) // @ game+0x32a2af0
	void HideProtegoSpell(bool bInHide); // Function Phoenix.EnemyAIComponent.HideProtegoSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a27f0
	void HideActiveWeapon(); // Function Phoenix.EnemyAIComponent.HideActiveWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a27d0
	bool HasWeapon(); // Function Phoenix.EnemyAIComponent.HasWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a27a0
	bool HasStoredWeapon(); // Function Phoenix.EnemyAIComponent.HasStoredWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2770
	void HandleSpellSuccess(struct AActor* Target, struct ASpellTool* Spell, struct FName SpellType); // Function Phoenix.EnemyAIComponent.HandleSpellSuccess // (Final|Native|Public) // @ game+0x32a2660
	bool HandleOnActorHit(struct AActor* pOtherActor, struct FHitResult& HitResult); // Function Phoenix.EnemyAIComponent.HandleOnActorHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a2520
	void HandleOnActorEndHit(struct AActor* pOtherActor); // Function Phoenix.EnemyAIComponent.HandleOnActorEndHit // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void HandleAttackDone(); // Function Phoenix.EnemyAIComponent.HandleAttackDone // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2500
	void HandleAbilityAnimEvent(enum class EEnemy_AbilityEvent inAnimEvent); // Function Phoenix.EnemyAIComponent.HandleAbilityAnimEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2480
	bool HandleAbilityActorHit(struct AActor* InOtherActor, struct FHitResult& HitResult); // Function Phoenix.EnemyAIComponent.HandleAbilityActorHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a2340
	struct AEnemyAIWeapon* GetWeaponToAcquire(); // Function Phoenix.EnemyAIComponent.GetWeaponToAcquire // (Final|Native|Public|BlueprintCallable) // @ game+0x32a2310
	float GetWeaponRequiredPercent(); // Function Phoenix.EnemyAIComponent.GetWeaponRequiredPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a22e0
	struct AEnemyAIWeapon* GetWeapon(); // Function Phoenix.EnemyAIComponent.GetWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a22b0
	bool GetUnblockable(struct AActor* InVictimPtr, bool bForceUnblockable); // Function Phoenix.EnemyAIComponent.GetUnblockable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a21e0
	struct AEnemyAIWeapon* GetTransientWeapon(); // Function Phoenix.EnemyAIComponent.GetTransientWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a21b0
	struct ASpellCasterTool* GetSpellCaster(); // Function Phoenix.EnemyAIComponent.GetSpellCaster // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2180
	struct FVector GetSpawnLoc(); // Function Phoenix.EnemyAIComponent.GetSpawnLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2150
	struct UEnemyAISpawnData* GetSpawnData(); // Function Phoenix.EnemyAIComponent.GetSpawnData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2130
	struct FString GetSizeCategoryString(); // Function Phoenix.EnemyAIComponent.GetSizeCategoryString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a20b0
	enum class EEEnemyAISizeCategory GetSizeCategory(); // Function Phoenix.EnemyAIComponent.GetSizeCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a2080
	struct UEnemy_QBUpdateData* GetQBUpdateData(enum class EEnemy_AttackLocSource InSource); // Function Phoenix.EnemyAIComponent.GetQBUpdateData // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1ff0
	enum class EEnemy_ProtegoLevel GetProtegoSpellLevel(); // Function Phoenix.EnemyAIComponent.GetProtegoSpellLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1fd0
	struct APathNode* GetPathNode(); // Function Phoenix.EnemyAIComponent.GetPathNode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1fb0
	struct UEnemy_InstanceQBUpdateData* GetOrCreateQBUpdateInstanceData(enum class ENPC_QBUpdate InUpdate); // Function Phoenix.EnemyAIComponent.GetOrCreateQBUpdateInstanceData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x32a1f20
	struct FNPC_PerceptionInfo GetNPCPerceptionInfo(); // Function Phoenix.EnemyAIComponent.GetNPCPerceptionInfo // (Final|Native|Public|Const) // @ game+0x32a1ee0
	bool GetMoveToAttackRunToSuccess(); // Function Phoenix.EnemyAIComponent.GetMoveToAttackRunToSuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1b20
	struct FVector GetLastKnownTargetLoc(); // Function Phoenix.EnemyAIComponent.GetLastKnownTargetLoc // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1eb0
	bool GetIsStealthAttackCurrentlyDisabled(); // Function Phoenix.EnemyAIComponent.GetIsStealthAttackCurrentlyDisabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1e80
	bool GetInAttackWindow(); // Function Phoenix.EnemyAIComponent.GetInAttackWindow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1e60
	enum class NPC_GameChangerState GetGameChangerState(); // Function Phoenix.EnemyAIComponent.GetGameChangerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1e40
	struct FString GetGameChangerObjectName(); // Function Phoenix.EnemyAIComponent.GetGameChangerObjectName // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1d80
	struct ANPC_Character* GetGameChangerForm(); // Function Phoenix.EnemyAIComponent.GetGameChangerForm // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1d60
	struct FGameplayTagContainer GetEnemyWeaponTagContainer(); // Function Phoenix.EnemyAIComponent.GetEnemyWeaponTagContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1d00
	struct UInteractionArchitectAsset* GetEnemyWeaponDataAsset(); // Function Phoenix.EnemyAIComponent.GetEnemyWeaponDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1cd0
	struct UEnemy_AnimInstance* GetEnemyAnimInstance(); // Function Phoenix.EnemyAIComponent.GetEnemyAnimInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1ca0
	float GetDamage(struct AActor* InVictimPtr, struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.GetDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1bd0
	float GetCriticalHealthPercept(); // Function Phoenix.EnemyAIComponent.GetCriticalHealthPercept // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1ba0
	bool GetCanAttack(); // Function Phoenix.EnemyAIComponent.GetCanAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1b80
	bool GetAttackWaitingForDesynchronization(); // Function Phoenix.EnemyAIComponent.GetAttackWaitingForDesynchronization // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1b50
	bool GetAttackUpdateStateSuccess(); // Function Phoenix.EnemyAIComponent.GetAttackUpdateStateSuccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1b20
	enum class EEnemy_AttackUpdateState GetAttackUpdateState(); // Function Phoenix.EnemyAIComponent.GetAttackUpdateState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1af0
	enum class EEnemyAIAttackState GetAttackStateRange(); // Function Phoenix.EnemyAIComponent.GetAttackStateRange // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1ac0
	enum class EEnemyAIAttackState GetAttackState(); // Function Phoenix.EnemyAIComponent.GetAttackState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1a90
	struct FVector GetAttackLocation(); // Function Phoenix.EnemyAIComponent.GetAttackLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1a50
	enum class AttackCollisionType GetAttackCollisionType(); // Function Phoenix.EnemyAIComponent.GetAttackCollisionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1a30
	float GetAlertSense(); // Function Phoenix.EnemyAIComponent.GetAlertSense // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1a10
	struct FEnemy_AlertData GetAlert(); // Function Phoenix.EnemyAIComponent.GetAlert // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a19f0
	struct AEnemyAIWeapon* GetActiveSpawnMeteorData(); // Function Phoenix.EnemyAIComponent.GetActiveSpawnMeteorData // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1970
	void ForceQBDataForceUpdate(); // Function Phoenix.EnemyAIComponent.ForceQBDataForceUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1950
	void ForceNextAttack(struct UEnemyAIAttackData* InAttackPtr); // Function Phoenix.EnemyAIComponent.ForceNextAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a18c0
	void ForceExecuteDelayedAttack(struct UEnemyAIAttackData* InAttackPtr, float InDelay); // Function Phoenix.EnemyAIComponent.ForceExecuteDelayedAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a17f0
	void ForceExecuteAttack(struct UEnemyAIAttackData* InAttackPtr); // Function Phoenix.EnemyAIComponent.ForceExecuteAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1760
	void ForceDisengagedState(); // Function Phoenix.EnemyAIComponent.ForceDisengagedState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1740
	void ForceChooseAttack(struct UEnemyAIAttackData* InAttackPtr); // Function Phoenix.EnemyAIComponent.ForceChooseAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a16b0
	void ForceAttackState(); // Function Phoenix.EnemyAIComponent.ForceAttackState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1690
	void ForceAttack(struct UEnemyAIAttackData* InAttackPtr, bool bBypassPerception); // Function Phoenix.EnemyAIComponent.ForceAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a15c0
	void FireWeaponAOE1(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.FireWeaponAOE1 // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1530
	bool FindAvailableStoredWeaponSocket(struct AEnemyAIWeapon* InWeaponPtr, struct FName& OutSocketName); // Function Phoenix.EnemyAIComponent.FindAvailableStoredWeaponSocket // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a1450
	void EnemyRemoveFromManager(struct AActor* InActorPtr); // Function Phoenix.EnemyAIComponent.EnemyRemoveFromManager // (Final|Native|Public) // @ game+0x32a13c0
	void EnemyAddToManager(struct AActor* InActorPtr); // Function Phoenix.EnemyAIComponent.EnemyAddToManager // (Final|Native|Public) // @ game+0x32a1330
	void EndAttack(); // Function Phoenix.EnemyAIComponent.EndAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1310
	void EnableWeaponCollision(); // Function Phoenix.EnemyAIComponent.EnableWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a12f0
	void EnableTrackMeleePoints(bool bEnable); // Function Phoenix.EnemyAIComponent.EnableTrackMeleePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1260
	void EnableShieldCollision(); // Function Phoenix.EnemyAIComponent.EnableShieldCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1240
	void EnableProvidedWeaponCollision(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.EnableProvidedWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a11b0
	void EnableImmediateAttack(bool ShouldEnable); // Function Phoenix.EnemyAIComponent.EnableImmediateAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1120
	struct AActor* DisarmWeapon(float ScaleForce); // Function Phoenix.EnemyAIComponent.DisarmWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1090
	struct AActor* DisarmShield(float ScaleForce); // Function Phoenix.EnemyAIComponent.DisarmShield // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1000
	void DisableWeaponCollision(); // Function Phoenix.EnemyAIComponent.DisableWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0fe0
	void DisableShieldCollision(); // Function Phoenix.EnemyAIComponent.DisableShieldCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0fc0
	void DisableProvidedWeaponCollision(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.DisableProvidedWeaponCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0f30
	void DestroySpawnedChildren(); // Function Phoenix.EnemyAIComponent.DestroySpawnedChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0f10
	void DestroyAnimagusForm(); // Function Phoenix.EnemyAIComponent.DestroyAnimagusForm // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0ef0
	void ComboEnd(int32_t ComboCount); // Function Phoenix.EnemyAIComponent.ComboEnd // (Final|Native|Public) // @ game+0x32a0e60
	bool ChooseCounterAttackSplit(struct FGameplayTagContainer& InTagContainer); // Function Phoenix.EnemyAIComponent.ChooseCounterAttackSplit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32a0d90
	bool ChooseAttackUpdate(); // Function Phoenix.EnemyAIComponent.ChooseAttackUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0d60
	struct UEnemyAIAttackData* ChooseAttack(); // Function Phoenix.EnemyAIComponent.ChooseAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0d30
	void CastSpellAtRandom(struct USpellToolRecord* SpellToolRecord, struct FName InSocketName); // Function Phoenix.EnemyAIComponent.CastSpellAtRandom // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0c60
	void CastSpellAtLocation(struct FVector& TargetLocation, struct USpellToolRecord* SpellToolRecord, struct FName& InSocketName); // Function Phoenix.EnemyAIComponent.CastSpellAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32a0b40
	void CastSpellAtActor(struct AActor* InTargetPtr, struct USpellToolRecord* SpellToolRecord, struct FName InSocketName, bool bAlwaysHitTargetActor); // Function Phoenix.EnemyAIComponent.CastSpellAtActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32a09e0
	void CastSpell(struct USpellToolRecord* SpellToolRecord, struct FName InSocketName); // Function Phoenix.EnemyAIComponent.CastSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0910
	void CastProtegoSpell(struct USpellToolRecord* SpellToolRecord, struct FName InSocketName); // Function Phoenix.EnemyAIComponent.CastProtegoSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0840
	bool CanStoreWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.CanStoreWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a07a0
	bool CanAnyStoredWeaponBeThrown(); // Function Phoenix.EnemyAIComponent.CanAnyStoredWeaponBeThrown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32a0770
	void BroadcastOnDeath(struct AActor* pActor); // Function Phoenix.EnemyAIComponent.BroadcastOnDeath // (Final|Native|Public|BlueprintCallable) // @ game+0x32a06d0
	void BroadcastOnAlertSenseChanged(float alertSense); // Function Phoenix.EnemyAIComponent.BroadcastOnAlertSenseChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0640
	void BroadcastAlertState(); // Function Phoenix.EnemyAIComponent.BroadcastAlertState // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0620
	void BroadcastAlertSense(); // Function Phoenix.EnemyAIComponent.BroadcastAlertSense // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0600
	bool AttackUpdateStateUpdate(enum class EEnemy_AttackUpdateState AttackUpdateState, float DeltaTime); // Function Phoenix.EnemyAIComponent.AttackUpdateStateUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0490
	void AttackTreeUpdate(); // Function Phoenix.EnemyAIComponent.AttackTreeUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0470
	void AttackExecuteBTInject(); // Function Phoenix.EnemyAIComponent.AttackExecuteBTInject // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0450
	void AttackedEvent(struct AActor* Instigator); // Function Phoenix.EnemyAIComponent.AttackedEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0570
	void AttackChooseBTInject(); // Function Phoenix.EnemyAIComponent.AttackChooseBTInject // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0430
	void ApplyDesynchronization(); // Function Phoenix.EnemyAIComponent.ApplyDesynchronization // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0410
	void ApparateDoneEvent(struct AActor* InApparateActor); // Function Phoenix.EnemyAIComponent.ApparateDoneEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0380
	void ApparateArrivedEvent(struct AActor* InApparateActor, struct FVector InLoc); // Function Phoenix.EnemyAIComponent.ApparateArrivedEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32a02a0
	void AllWeaponsLifetimeToZero(); // Function Phoenix.EnemyAIComponent.AllWeaponsLifetimeToZero // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32a01d0
	void AllowSingleAttack(); // Function Phoenix.EnemyAIComponent.AllowSingleAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0280
	void AllowHideBlindWeapon(bool bInAllow); // Function Phoenix.EnemyAIComponent.AllowHideBlindWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a01f0
	bool AdvancePath(); // Function Phoenix.EnemyAIComponent.AdvancePath // (Final|Native|Public|BlueprintCallable) // @ game+0x32a01a0
	void AdjustAttackWeightsByID(struct FString InRegistryID); // Function Phoenix.EnemyAIComponent.AdjustAttackWeightsByID // (Final|Native|Public|BlueprintCallable) // @ game+0x32a00b0
	void AddQBUpdateData(enum class EEnemy_AttackLocSource InSource); // Function Phoenix.EnemyAIComponent.AddQBUpdateData // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0030
	void ActivateRequiredWeapon(); // Function Phoenix.EnemyAIComponent.ActivateRequiredWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32a0010
	void AcquireWeapon(struct AEnemyAIWeapon* InWeaponPtr); // Function Phoenix.EnemyAIComponent.AcquireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x329ff80
	void AcquireSpellCaster(struct ASpellCasterTool* InSpellCasterPtr); // Function Phoenix.EnemyAIComponent.AcquireSpellCaster // (Final|Native|Public|BlueprintCallable) // @ game+0x329fef0
	void AcquireShield(struct AEnemyAIWeapon* InShieldPtr); // Function Phoenix.EnemyAIComponent.AcquireShield // (Final|Native|Public|BlueprintCallable) // @ game+0x329fe60
	void AbortAUS(bool bBranchToIdle); // Function Phoenix.EnemyAIComponent.AbortAUS // (Final|Native|Public|BlueprintCallable) // @ game+0x329fdb0
	void AbortAttack(); // Function Phoenix.EnemyAIComponent.AbortAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x329fe40
};

// Class Phoenix.EnemyAISpawnData
// Size: 0x28 (Inherited: 0x28)
struct UEnemyAISpawnData : UObject {
};

// Class Phoenix.EnemyAIPathCheckPropertyData
// Size: 0x58 (Inherited: 0x30)
struct UEnemyAIPathCheckPropertyData : UDataAsset {
	float MinTime; // 0x30(0x04)
	float MaxTime; // 0x34(0x04)
	float StartOffset; // 0x38(0x04)
	float MaxDist; // 0x3c(0x04)
	float AttackPosLockLocTime; // 0x40(0x04)
	float SwappedLockLocTime; // 0x44(0x04)
	float OpeningLockLocTime; // 0x48(0x04)
	bool UseSweepSphere; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	float SweepSphereRadius; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.EnemyAIPropertyData
// Size: 0x48 (Inherited: 0x30)
struct UEnemyAIPropertyData : UDataAsset {
	enum class EEEnemyAISizeCategory m_sizeCategory; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float RotationRate; // 0x34(0x04)
	float FleeFixedDistance; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UEnemyAIPathCheckPropertyData* PathCheckPtr; // 0x40(0x08)
};

// Class Phoenix.Enemy_AttackExtraData
// Size: 0x28 (Inherited: 0x28)
struct UEnemy_AttackExtraData : UObject {
};

// Class Phoenix.EnemyAIAttackBaseData
// Size: 0x68 (Inherited: 0x30)
struct UEnemyAIAttackBaseData : UDataAsset {
	float MaxMoveAngle; // 0x30(0x04)
	bool bOverrideMobilityMoveThreshold; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float MoveDistThreshold; // 0x38(0x04)
	float MoveDistThresholdNoMansLandScale; // 0x3c(0x04)
	float MoveDistThresholdNoMansLandScaleCloser; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TArray<struct FEnemyAIAttackDistTableDataContainer> ApproachDataList; // 0x48(0x10)
	struct FEnemyAIAttackDistData AttackData; // 0x58(0x10)
};

// Class Phoenix.EnemyAIAttackData
// Size: 0x490 (Inherited: 0x68)
struct UEnemyAIAttackData : UEnemyAIAttackBaseData {
	bool bAttackDisable; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct FDbSingleColumnInfo InstanceOverrideKey; // 0x70(0x88)
	enum class EEnemy_AttackType AttackType; // 0xf8(0x01)
	enum class EEnemy_ParryMunitionType ParryMunitionType; // 0xf9(0x01)
	char pad_FA[0x2]; // 0xfa(0x02)
	struct FGameplayTag AttackTypeTag; // 0xfc(0x08)
	bool bTicketRequired; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	struct FDbSingleColumnInfo AttackTicket; // 0x108(0x88)
	float TicketTimeoutOverride; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UAblAbility* AttackAbilityPtr; // 0x198(0x08)
	struct UEnemy_AttackExtraData* ExtraData; // 0x1a0(0x08)
	struct USpellToolRecord* SpellToolRecord; // 0x1a8(0x08)
	struct FName FireSocket; // 0x1b0(0x08)
	struct UInteractionArchitectAsset* MunitionDataAsset; // 0x1b8(0x08)
	struct FGameplayTagContainer MunitionTagContainer; // 0x1c0(0x20)
	struct UBehaviorTree* AttackBehaviorTree; // 0x1e0(0x08)
	struct UBehaviorTree* AttackSplitBehaviorTree; // 0x1e8(0x08)
	struct UBehaviorTree* AttackCounterBehaviorTree; // 0x1f0(0x08)
	enum class EEnemyAIAction AttackCounterBehaviorAction; // 0x1f8(0x01)
	char pad_1F9[0x3]; // 0x1f9(0x03)
	float m_damage; // 0x1fc(0x04)
	bool bUnblockable; // 0x200(0x01)
	bool bCanDamageEvenAfterDodge; // 0x201(0x01)
	char pad_202[0x6]; // 0x202(0x06)
	struct FGameplayTagContainer DotMunitionTagContainer; // 0x208(0x20)
	struct TArray<struct UMultiFX2_Base*> DotMultiFx; // 0x228(0x10)
	float DotDamageTickRate; // 0x238(0x04)
	float EnergyCost; // 0x23c(0x04)
	bool bCanAttackWhenEnergyDrained; // 0x240(0x01)
	bool bCannotAttackWhenTargetParrying; // 0x241(0x01)
	bool bContinueMoveWhenAttackStarts; // 0x242(0x01)
	char pad_243[0x1]; // 0x243(0x01)
	int32_t NumSubAttacks; // 0x244(0x04)
	float DistanceScale; // 0x248(0x04)
	bool bCanWorldScale; // 0x24c(0x01)
	bool bCanPerceptionPointVolumeScale; // 0x24d(0x01)
	enum class ENPC_GameAttackState GameAttackState; // 0x24e(0x01)
	char pad_24F[0x1]; // 0x24f(0x01)
	struct FGameplayTagContainer SpellOverrideTagContainer; // 0x250(0x20)
	bool bPairedWeapons; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	struct UEnemy_AttackChoice* AttackChoice; // 0x278(0x08)
	enum class EEnemy_AttackTier SelectTier; // 0x280(0x01)
	enum class EEnemy_AttackTier OffNavSelectTier; // 0x281(0x01)
	bool bRequirePathForPosAndAttack; // 0x282(0x01)
	bool bRequireStraightLinePathForAttack; // 0x283(0x01)
	bool bRequireStayInVolume; // 0x284(0x01)
	char pad_285[0x3]; // 0x285(0x03)
	float ProbabilityScale; // 0x288(0x04)
	bool bImmediateAttackOnly; // 0x28c(0x01)
	bool bCanChooseBetterAttack; // 0x28d(0x01)
	char pad_28E[0x2]; // 0x28e(0x02)
	float CanChooseBetterAttackMovementMinTime; // 0x290(0x04)
	bool bHeightDeltaRequirement; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	float HeightRequirement; // 0x298(0x04)
	bool bChooseAgainOnceInRange; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	struct TArray<struct UEnemyAIAttackData*> InRangeChooseAgainList; // 0x2a0(0x10)
	bool bCanChooseFromSplit; // 0x2b0(0x01)
	bool bCanOnlyChooseFromSplit; // 0x2b1(0x01)
	bool bCounterAttackAddContextTag; // 0x2b2(0x01)
	char pad_2B3[0x5]; // 0x2b3(0x05)
	struct FGameplayTagContainer RequiredTagContainer; // 0x2b8(0x20)
	struct FGameplayTagContainer ExcludeTagContainer; // 0x2d8(0x20)
	enum class ENPC_GameContext RequiredGameContext; // 0x2f8(0x01)
	enum class ENPC_GameContext ExcludeGameContext; // 0x2f9(0x01)
	char pad_2FA[0x6]; // 0x2fa(0x06)
	struct TArray<enum class ENPC_GameContext> ExcludeGameContextList; // 0x300(0x10)
	enum class ENPC_GameContext RequiredTargetGameContext; // 0x310(0x01)
	enum class ENPC_GameContext ExcludeTargetGameContext; // 0x311(0x01)
	char pad_312[0x6]; // 0x312(0x06)
	struct TArray<enum class ENPC_GameContext> ExcludeTargetGameContextList; // 0x318(0x10)
	float RandomWeight; // 0x328(0x04)
	float SelectWeight; // 0x32c(0x04)
	bool bAttackExcludeWeight; // 0x330(0x01)
	enum class EEnemy_SelectCooldownType SelectCooldownType; // 0x331(0x01)
	char pad_332[0x2]; // 0x332(0x02)
	float SelectCooldown; // 0x334(0x04)
	float SelectCooldownDeviation; // 0x338(0x04)
	float SelectCooldownIncrement; // 0x33c(0x04)
	float SelectCooldownIncrementThreshold; // 0x340(0x04)
	float SelectCooldownIncrementThresholdDeviation; // 0x344(0x04)
	struct TArray<struct UEnemyAIAttackData*> SelectCooldownAttacks; // 0x348(0x10)
	float SelectGroupCooldown; // 0x358(0x04)
	int32_t MinTeammates; // 0x35c(0x04)
	int32_t MaxTeammates; // 0x360(0x04)
	char pad_364[0x4]; // 0x364(0x04)
	struct FEnemy_WeaponAttackData WeaponData; // 0x368(0x30)
	struct TArray<struct FEnemy_AttackRangeData> SelectionRangeData; // 0x398(0x10)
	enum class EEnemy_BuffType_DEPRECATED BuffType; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float BuffRadius; // 0x3ac(0x04)
	float NeedBuffRatio; // 0x3b0(0x04)
	bool bRequireGround; // 0x3b4(0x01)
	char pad_3B5[0x3]; // 0x3b5(0x03)
	float MinAttackAngle; // 0x3b8(0x04)
	bool m_attackIfTooClose; // 0x3bc(0x01)
	bool bCanApproach; // 0x3bd(0x01)
	bool bCanRetreat; // 0x3be(0x01)
	bool bCanMoveIfInRange; // 0x3bf(0x01)
	bool bCanWaitIfNotInRange; // 0x3c0(0x01)
	enum class EEnemy_LimitAttackOnTarget LimitAttackOnTarget; // 0x3c1(0x01)
	bool bStopReqPriorToAttack; // 0x3c2(0x01)
	bool bExecutionRequiresLoS; // 0x3c3(0x01)
	bool bRequireTeamateLOSForPos; // 0x3c4(0x01)
	char pad_3C5[0x3]; // 0x3c5(0x03)
	float MinRangedHeightDelta; // 0x3c8(0x04)
	float MinMeleeHeightDelta; // 0x3cc(0x04)
	float MinBallisticHeightDelta; // 0x3d0(0x04)
	bool bRequireCorridorCheck; // 0x3d4(0x01)
	char pad_3D5[0x3]; // 0x3d5(0x03)
	float RequireLOSCorridorHalfWidth; // 0x3d8(0x04)
	float RangedCorridorHalfWidth; // 0x3dc(0x04)
	float RequireCorridorDist; // 0x3e0(0x04)
	float RequireCorridorStartDist; // 0x3e4(0x04)
	float RequireCorridorStopDist; // 0x3e8(0x04)
	float Timeout; // 0x3ec(0x04)
	float TimeoutDelta; // 0x3f0(0x04)
	float AbortDeltaPlus; // 0x3f4(0x04)
	float AbortDeltaMinus; // 0x3f8(0x04)
	bool bCanAttackWhileTargetIsReacting; // 0x3fc(0x01)
	bool bFlourishSplit; // 0x3fd(0x01)
	char pad_3FE[0x2]; // 0x3fe(0x02)
	struct TArray<struct FEnemy_FlourishData> FlourishData; // 0x400(0x10)
	struct TArray<struct FEnemy_RunToData> RunToData; // 0x410(0x10)
	struct TArray<struct FEnemy_ApparateToData> ApparateToData; // 0x420(0x10)
	struct TArray<struct FEnemy_BallisticData> BallisticDataList; // 0x430(0x10)
	struct TArray<struct UEnemyAIAttackData*> PossibleSplits; // 0x440(0x10)
	bool bHoldTicketOnSplit; // 0x450(0x01)
	bool bRetreatSplit; // 0x451(0x01)
	bool bRetreat; // 0x452(0x01)
	char pad_453[0x1]; // 0x453(0x01)
	float RetreatMinDistFromTarget; // 0x454(0x04)
	float RetreatMinTravelDist; // 0x458(0x04)
	float RetreatThreshold; // 0x45c(0x04)
	struct TArray<struct UMultiFX2_Base*> HitActorFX2; // 0x460(0x10)
	struct TArray<struct UMultiFX2_Base*> BlockedActorFX2; // 0x470(0x10)
	bool bIgnoreAttackWithTransientWeaponIfHasWeapon; // 0x480(0x01)
	bool bCanReposition; // 0x481(0x01)
	char pad_482[0xe]; // 0x482(0x0e)
};

// Class Phoenix.EnemyAIAttackInstanceData
// Size: 0x1f0 (Inherited: 0x28)
struct UEnemyAIAttackInstanceData : UObject {
	char pad_28[0x140]; // 0x28(0x140)
	struct UEnemy_AttackExtraData* ExtraData; // 0x168(0x08)
	char pad_170[0x80]; // 0x170(0x80)
};

// Class Phoenix.Enemy_QBUpdateData
// Size: 0x30 (Inherited: 0x28)
struct UEnemy_QBUpdateData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.Enemy_Evade_QBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_Evade_QBUpdateData : UEnemy_QBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_Around_QBUpdateData
// Size: 0x38 (Inherited: 0x30)
struct UEnemy_Around_QBUpdateData : UEnemy_QBUpdateData {
	float MinAngle; // 0x30(0x04)
	float MaxAngle; // 0x34(0x04)
};

// Class Phoenix.Enemy_Reposition_QBUpdateData
// Size: 0x50 (Inherited: 0x30)
struct UEnemy_Reposition_QBUpdateData : UEnemy_QBUpdateData {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class Phoenix.Enemy_Follow_QBUpdateData
// Size: 0x58 (Inherited: 0x30)
struct UEnemy_Follow_QBUpdateData : UEnemy_QBUpdateData {
	float MinDistance; // 0x30(0x04)
	float MaxDistance; // 0x34(0x04)
	float Threshold; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct AActor* ActorToFollow; // 0x40(0x08)
	float SuccessCooldown; // 0x48(0x04)
	float FailedCooldown; // 0x4c(0x04)
	float MinAngle; // 0x50(0x04)
	float MaxAngle; // 0x54(0x04)
};

// Class Phoenix.Enemy_SeekTarget_QBUpdateData
// Size: 0x40 (Inherited: 0x30)
struct UEnemy_SeekTarget_QBUpdateData : UEnemy_QBUpdateData {
	float IdleTriggerTime; // 0x30(0x04)
	float NoAttackTriggerTime; // 0x34(0x04)
	float Timeout; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.Enemy_Close_QBUpdateData
// Size: 0x40 (Inherited: 0x30)
struct UEnemy_Close_QBUpdateData : UEnemy_QBUpdateData {
	float StartDistance; // 0x30(0x04)
	float EndDistance; // 0x34(0x04)
	bool bStopWhenEnding; // 0x38(0x01)
	bool bOutCanCloseIfInRange; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float Timeout; // 0x3c(0x04)
};

// Class Phoenix.Enemy_Companion_QBUpdateData
// Size: 0x40 (Inherited: 0x30)
struct UEnemy_Companion_QBUpdateData : UEnemy_QBUpdateData {
	float PlayerTetherDist; // 0x30(0x04)
	float PlayerInsideDist; // 0x34(0x04)
	float StrafeDist; // 0x38(0x04)
	float MinDistFromTarget; // 0x3c(0x04)
};

// Class Phoenix.Enemy_LeadPlayer_QBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_LeadPlayer_QBUpdateData : UEnemy_QBUpdateData {
	float PlayerTetherDist; // 0x30(0x04)
	float PlayerInsideDist; // 0x34(0x04)
	float StrafeDist; // 0x38(0x04)
	float MinDistFromTarget; // 0x3c(0x04)
	float CircleAngle; // 0x40(0x04)
	float PlayerPerceptionSafeDist; // 0x44(0x04)
};

// Class Phoenix.Enemy_TooClose_QBUpdateData
// Size: 0x48 (Inherited: 0x30)
struct UEnemy_TooClose_QBUpdateData : UEnemy_QBUpdateData {
	float TooCloseDist; // 0x30(0x04)
	float TooCloseDistStop; // 0x34(0x04)
	bool bTeammateTooCloseCheck; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float TeammateTooCloseDist; // 0x3c(0x04)
	float TeammateTooCloseDistStop; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.Enemy_TombProtector_QBUpdateData
// Size: 0x38 (Inherited: 0x30)
struct UEnemy_TombProtector_QBUpdateData : UEnemy_QBUpdateData {
	struct UEnemy_TombProtector_QBUpdateDataAsset* DataAsset; // 0x30(0x08)
};

// Class Phoenix.Enemy_TombProtector_QBUpdateDataAsset
// Size: 0x108 (Inherited: 0x30)
struct UEnemy_TombProtector_QBUpdateDataAsset : UDataAsset {
	bool bSpawnMeteors; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FVector SpawnDistance; // 0x34(0x0c)
	struct FVector SpawnDistanceVariationMin; // 0x40(0x0c)
	struct FVector SpawnDistanceVariationMax; // 0x4c(0x0c)
	struct FVector ChooseDistance; // 0x58(0x0c)
	float ScaleMin; // 0x64(0x04)
	float ScaleMax; // 0x68(0x04)
	int32_t NumMeteorsToSpawn; // 0x6c(0x04)
	float OrbitRotationMin; // 0x70(0x04)
	float OrbitRotationMax; // 0x74(0x04)
	struct FVector RotationMin; // 0x78(0x0c)
	struct FVector RotationMax; // 0x84(0x0c)
	struct TArray<struct AEnemyAIWeapon*> MeteorClassList; // 0x90(0x10)
	struct TArray<struct AEnemyAIWeapon*> MeteorPieceClassList; // 0xa0(0x10)
	int32_t NumPiecesMin; // 0xb0(0x04)
	int32_t NumPiecesMax; // 0xb4(0x04)
	float PiecesSpawnOffsetMin; // 0xb8(0x04)
	float PiecesSpawnOffsetMax; // 0xbc(0x04)
	float PiecesScaleMin; // 0xc0(0x04)
	float PiecesScaleMax; // 0xc4(0x04)
	float BreakApartSpeedMin; // 0xc8(0x04)
	float BreakApartSpeedMax; // 0xcc(0x04)
	struct FVector BreakApartRotationMin; // 0xd0(0x0c)
	struct FVector BreakApartRotationMax; // 0xdc(0x0c)
	float MinAccuracy; // 0xe8(0x04)
	float MaxAccuracy; // 0xec(0x04)
	struct FVector ThrowRotDegreesMin; // 0xf0(0x0c)
	struct FVector ThrowRotDegreesMax; // 0xfc(0x0c)
};

// Class Phoenix.Enemy_Turns_TicketUpdate_QBUpdateData
// Size: 0x60 (Inherited: 0x30)
struct UEnemy_Turns_TicketUpdate_QBUpdateData : UEnemy_QBUpdateData {
	float UpdateInterval; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UCurveFloat* SinceLastAttackedCountCurve; // 0x38(0x08)
	struct UCurveFloat* OffScreenTimeCurve; // 0x40(0x08)
	float RandomScoreMin; // 0x48(0x04)
	float RandomScoreMax; // 0x4c(0x04)
	float RandomScoreTimeout; // 0x50(0x04)
	float RandomScoreTimeoutDeviation; // 0x54(0x04)
	float TargettedScore; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.NPC_PathFollowingComponent
// Size: 0x390 (Inherited: 0x268)
struct UNPC_PathFollowingComponent : UPathFollowingComponent {
	struct UCharacterMovementComponent* CharacterMoveComp; // 0x268(0x08)
	struct UNPC_Component* NPCComponent; // 0x270(0x08)
	bool bCanPausePathFollowingWhenBlocked; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float RepulsorRadiusMultiplier; // 0x27c(0x04)
	float RepulsorRadiusCushionMultiplier; // 0x280(0x04)
	float RepulsorDetectionRadiusMultiplier; // 0x284(0x04)
	float ResolveBlockedAllowableAngle; // 0x288(0x04)
	float DirectionFilterRate; // 0x28c(0x04)
	float DirectionFilterRateMin; // 0x290(0x04)
	float DirectionFilterRateMax; // 0x294(0x04)
	float DirectionAvoidanceInterval; // 0x298(0x04)
	float AvoidanceSlowdownScale; // 0x29c(0x04)
	char pad_2A0[0xf0]; // 0x2a0(0xf0)

	bool FindLinkOnCurrentPath(struct FVector& OutPos, float MinLookaheadDistance, float LookAheadTime); // Function Phoenix.NPC_PathFollowingComponent.FindLinkOnCurrentPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33a5ca0
};

// Class Phoenix.EnemyAIPathFollowingComponent
// Size: 0x430 (Inherited: 0x390)
struct UEnemyAIPathFollowingComponent : UNPC_PathFollowingComponent {
	char pad_390[0x68]; // 0x390(0x68)
	struct APawn* PawnPtr; // 0x3f8(0x08)
	struct UCharacterMovementComponent* CharacterMoveCompPtr; // 0x400(0x08)
	struct UEnemyAIComponent* EnemyCompPtr; // 0x408(0x08)
	struct AAIController* ControllerPtr; // 0x410(0x08)
	char pad_418[0x18]; // 0x418(0x18)

	void HandleComponentDeactivated(struct UActorComponent* InComponent); // Function Phoenix.EnemyAIPathFollowingComponent.HandleComponentDeactivated // (Final|Native|Public) // @ game+0x1480ed0
	void HandleComponentActivated(struct UActorComponent* InComponent, bool InSuccess); // Function Phoenix.EnemyAIPathFollowingComponent.HandleComponentActivated // (Final|Native|Public) // @ game+0x32b11c0
};

// Class Phoenix.SpiderAIAttackData
// Size: 0x490 (Inherited: 0x490)
struct USpiderAIAttackData : UEnemyAIAttackData {
};

// Class Phoenix.GoblinAISwordAttackData
// Size: 0x490 (Inherited: 0x490)
struct UGoblinAISwordAttackData : UEnemyAIAttackData {
};

// Class Phoenix.TrollAISwordAttackData
// Size: 0x490 (Inherited: 0x490)
struct UTrollAISwordAttackData : UEnemyAIAttackData {
};

// Class Phoenix.EnemyAISpiderSpawnData
// Size: 0x38 (Inherited: 0x28)
struct UEnemyAISpiderSpawnData : UEnemyAISpawnData {
	enum class EEnemySpiderAISpawnType Type; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float DescendSpeed; // 0x2c(0x04)
	float FallGravityScale; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.EnemyAIGoblinSpawnData
// Size: 0x30 (Inherited: 0x28)
struct UEnemyAIGoblinSpawnData : UEnemyAISpawnData {
	enum class EEnemyGoblinAISpawnType Type; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.SpiderSpawn_AttackExtraData
// Size: 0x48 (Inherited: 0x28)
struct USpiderSpawn_AttackExtraData : UEnemy_AttackExtraData {
	int32_t MinSpawn; // 0x28(0x04)
	int32_t MaxSpawn; // 0x2c(0x04)
	int32_t MinToAttack; // 0x30(0x04)
	int32_t TotalSpawn; // 0x34(0x04)
	float SpawnEligibleWaitTime; // 0x38(0x04)
	char pad_3C[0xc]; // 0x3c(0x0c)
};

// Class Phoenix.RaiseDead_AttackExtraData
// Size: 0xb0 (Inherited: 0x28)
struct URaiseDead_AttackExtraData : UEnemy_AttackExtraData {
	int32_t MinSpawn; // 0x28(0x04)
	int32_t MaxSpawn; // 0x2c(0x04)
	int32_t MyMaxSpawn; // 0x30(0x04)
	int32_t GlobalMaxSpawn; // 0x34(0x04)
	int32_t MyLiftimeMaxSpawn; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FString SpawnTeamName; // 0x40(0x10)
	bool bUseMyTeamName; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float SpawnRadius; // 0x54(0x04)
	float halfAngle; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct FString SpawnObjectName; // 0x60(0x10)
	struct TArray<struct FString> SpawnObjectNames; // 0x70(0x10)
	enum class ENPC_Spawn SpawnType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float SpawnEligibleWaitTime; // 0x84(0x04)
	bool bForceThisAttack; // 0x88(0x01)
	bool bStaggerAttack; // 0x89(0x01)
	char pad_8A[0x2]; // 0x8a(0x02)
	float MinStaggerTime; // 0x8c(0x04)
	float MaxStaggerTime; // 0x90(0x04)
	bool bLimitSpawns; // 0x94(0x01)
	bool bKillChildrenOnDeath; // 0x95(0x01)
	char pad_96[0x1a]; // 0x96(0x1a)

	void SetSpawnEligible(bool bspawnEligible); // Function Phoenix.RaiseDead_AttackExtraData.SetSpawnEligible // (Final|Native|Public) // @ game+0x32b1dc0
};

// Class Phoenix.ReplicateSelf_AttackExtraData
// Size: 0x98 (Inherited: 0x28)
struct UReplicateSelf_AttackExtraData : UEnemy_AttackExtraData {
	struct FString SpawnObjectName; // 0x28(0x10)
	enum class ENPC_Spawn SpawnType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t MinSpawn; // 0x3c(0x04)
	int32_t MaxSpawn; // 0x40(0x04)
	int32_t GlobalMaxSpawn; // 0x44(0x04)
	float SpawnRadius; // 0x48(0x04)
	float halfAngle; // 0x4c(0x04)
	float SpawnSpeedMultiplier; // 0x50(0x04)
	float BuffTeamWaitTime; // 0x54(0x04)
	bool bForceThisAttack; // 0x58(0x01)
	bool bFadeReplicaOnDeath; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	float FadeDelay; // 0x5c(0x04)
	float FadeDuration; // 0x60(0x04)
	float ReplicaHealthOverride; // 0x64(0x04)
	struct FGameplayTag AttackExclusionTag; // 0x68(0x08)
	bool bStaggerAttack; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float MinStaggerTime; // 0x74(0x04)
	float MaxStaggerTime; // 0x78(0x04)
	bool bKillChildrenOnDeath; // 0x7c(0x01)
	char pad_7D[0x1b]; // 0x7d(0x1b)
};

// Class Phoenix.Animagus_AttackExtraData
// Size: 0x60 (Inherited: 0x28)
struct UAnimagus_AttackExtraData : UEnemy_AttackExtraData {
	struct FString SpawnObjectName; // 0x28(0x10)
	enum class ENPC_Spawn SpawnType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float AnimagusMorphTime; // 0x3c(0x04)
	float AnimagusMorphTimeLevelMultiplier; // 0x40(0x04)
	float AnimagusWaitTime; // 0x44(0x04)
	float AnimalHealthOverride; // 0x48(0x04)
	bool bForceThisAttack; // 0x4c(0x01)
	bool bAllowSingleAttack; // 0x4d(0x01)
	bool bKillChildrenOnDeath; // 0x4e(0x01)
	char pad_4F[0x11]; // 0x4f(0x11)
};

// Class Phoenix.SummonReinforcements_AttackExtraData
// Size: 0x88 (Inherited: 0x28)
struct USummonReinforcements_AttackExtraData : UEnemy_AttackExtraData {
	struct FString SpawnObjectName; // 0x28(0x10)
	enum class ENPC_Spawn SpawnType; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float InitialWaitTime; // 0x3c(0x04)
	float ReinCooldownWaitTime; // 0x40(0x04)
	int32_t ReinMinTeamCount; // 0x44(0x04)
	int32_t MinReinforcementCount; // 0x48(0x04)
	int32_t MaxReinforcementCount; // 0x4c(0x04)
	int32_t GlobalMaxReinCount; // 0x50(0x04)
	float SpawnRadius; // 0x54(0x04)
	float MinDelayTime; // 0x58(0x04)
	float MaxDelayTime; // 0x5c(0x04)
	bool bStaggerAttack; // 0x60(0x01)
	char pad_61[0x3]; // 0x61(0x03)
	float MinStaggerTime; // 0x64(0x04)
	float MaxStaggerTime; // 0x68(0x04)
	bool bDoDebugDraw; // 0x6c(0x01)
	bool bForceThisAttack; // 0x6d(0x01)
	char pad_6E[0x1a]; // 0x6e(0x1a)
};

// Class Phoenix.ActivateDOV_AttackExtraData
// Size: 0x30 (Inherited: 0x28)
struct UActivateDOV_AttackExtraData : UEnemy_AttackExtraData {
	int32_t MinCount; // 0x28(0x04)
	float MaxDistanceSquared; // 0x2c(0x04)
};

// Class Phoenix.TauntDragon_AttackExtraData
// Size: 0x40 (Inherited: 0x28)
struct UTauntDragon_AttackExtraData : UEnemy_AttackExtraData {
	struct FString TargetObjectName; // 0x28(0x10)
	float AddedAttackScore; // 0x38(0x04)
	bool bDoDebugDraw; // 0x3c(0x01)
	bool bForceThisAttack; // 0x3d(0x01)
	char pad_3E[0x2]; // 0x3e(0x02)
};

// Class Phoenix.EnemyAIStateInterface
// Size: 0x28 (Inherited: 0x28)
struct UEnemyAIStateInterface : UInterface {

	struct AEnemy_SplineSpawnActor* SpawnSplineSpawnActor(struct FTransform SpawnTransform, struct FEnemy_SplineSpawnActorData& Data); // Function Phoenix.EnemyAIStateInterface.SpawnSplineSpawnActor // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x32b2060
	struct AEnemy_ApparateActor* SpawnApparateActor(struct FTransform SpawnTransform, struct FEnemy_ApparateActorData& Data); // Function Phoenix.EnemyAIStateInterface.SpawnApparateActor // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x32b1ee0
};

// Class Phoenix.EnemyAIWeapon
// Size: 0x670 (Inherited: 0x2e0)
struct AEnemyAIWeapon : ATool {
	struct TArray<struct UMultiFX2_Base*> SuccessfulMeleeFx; // 0x2e0(0x10)
	struct TArray<struct UMultiFX2_Base*> SuccessfulRangedFx; // 0x2f0(0x10)
	struct TArray<struct UMultiFX2_Base*> BlockedMeleeFx; // 0x300(0x10)
	struct TArray<struct UMultiFX2_Base*> RecoverLocFx; // 0x310(0x10)
	struct FMultiFX2Handle RecoverFXHandle; // 0x320(0x08)
	struct UEnemyCorruptionData* AggroCorruptionSettings; // 0x328(0x08)
	struct UEnemyCorruptionData* AggroCorruptionInstance; // 0x330(0x08)
	struct FGameplayTag AATag; // 0x338(0x08)
	struct FGameplayTag AttackSelectionTag; // 0x340(0x08)
	struct FVector AttachOffset; // 0x348(0x0c)
	struct FVector AttachRot; // 0x354(0x0c)
	struct FGameplayTagContainer IAApplyEquipedTagContainer; // 0x360(0x20)
	struct FGameplayTagContainer IARemovedUnequipedTagContainer; // 0x380(0x20)
	struct FGameplayTagContainer IAApplyUnequipedTagContainer; // 0x3a0(0x20)
	struct FGameplayTagContainer IARemovedEquipedTagContainer; // 0x3c0(0x20)
	struct FGameplayTagContainer AAApplyEquipedTagContainer; // 0x3e0(0x20)
	struct FGameplayTagContainer AARemovedUnequipedTagContainer; // 0x400(0x20)
	struct FGameplayTagContainer AAApplyUnequipedTagContainer; // 0x420(0x20)
	struct FGameplayTagContainer AARemovedEquipedTagContainer; // 0x440(0x20)
	float EquipApplyTagTime; // 0x460(0x04)
	float ThrowSpeed; // 0x464(0x04)
	bool bIgnoreGravityWhenThrown; // 0x468(0x01)
	char pad_469[0x3]; // 0x469(0x03)
	float throwOffsetForward; // 0x46c(0x04)
	float throwTargetHeightOffset; // 0x470(0x04)
	struct FVector ThrowOrientRotDegrees; // 0x474(0x0c)
	struct FVector ThrowRotDegrees; // 0x480(0x0c)
	struct FVector ThrowMeshRotDegrees; // 0x48c(0x0c)
	struct FVector ProtegoRotDegrees; // 0x498(0x0c)
	float ProtegoBlockSpeed; // 0x4a4(0x04)
	float ProtegoBounceBackSpeed; // 0x4a8(0x04)
	float ProtegoDeflectSpeed; // 0x4ac(0x04)
	float bProtegoConstrainDirToUp; // 0x4b0(0x04)
	struct FVector DisarmRotDegrees; // 0x4b4(0x0c)
	struct FVector DisarmMaxVel; // 0x4c0(0x0c)
	struct FVector DisarmMinVel; // 0x4cc(0x0c)
	struct FVector DropMaxVel; // 0x4d8(0x0c)
	struct FVector DropMinVel; // 0x4e4(0x0c)
	struct FVector DeathMaxVel; // 0x4f0(0x0c)
	struct FVector DeathMinVel; // 0x4fc(0x0c)
	float impactFxMinRepeatTime; // 0x508(0x04)
	bool bTerrainDestroysMunition; // 0x50c(0x01)
	bool bAllowWeaponDeflection; // 0x50d(0x01)
	bool bDestroyWeaponOnSuccessfulPhysicsMunitionHit; // 0x50e(0x01)
	bool bForceLifetimeCountdownAfterRangedHit; // 0x50f(0x01)
	enum class EEnemyWeaponEquip EquipMode; // 0x510(0x01)
	bool bCanSwitchOut; // 0x511(0x01)
	enum class EEnemyWeaponTypeEnum StoredWeaponTypeEnum; // 0x512(0x01)
	char pad_513[0x1]; // 0x513(0x01)
	uint32_t EquipPriority; // 0x514(0x04)
	uint32_t EquipWeight; // 0x518(0x04)
	float weaponDamage; // 0x51c(0x04)
	enum class EWeaponAttachmentTransformRules AttachRule; // 0x520(0x01)
	bool bPowerupEligible; // 0x521(0x01)
	char pad_522[0x2]; // 0x522(0x02)
	float PowerupDamagePercent; // 0x524(0x04)
	float PowerupTimeout; // 0x528(0x04)
	bool bAllowSpellDeflection; // 0x52c(0x01)
	bool bIsAShield; // 0x52d(0x01)
	bool SpawnWithPhysics; // 0x52e(0x01)
	bool bCanBeStored; // 0x52f(0x01)
	bool bCanBeThrown; // 0x530(0x01)
	bool bCanBeDisarmed; // 0x531(0x01)
	bool bCanBeRecovered; // 0x532(0x01)
	bool bJustHideForRecovery; // 0x533(0x01)
	char pad_534[0x8]; // 0x534(0x08)
	float PostThrownLifetime; // 0x53c(0x04)
	float PostDropLifetime; // 0x540(0x04)
	float PostProtegoLifetime; // 0x544(0x04)
	float LifetimeEndEvent; // 0x548(0x04)
	bool bOnWall; // 0x54c(0x01)
	char pad_54D[0x3]; // 0x54d(0x03)
	struct AMunitionType_Base* MunitionActor; // 0x550(0x08)
	struct FName MunitionImpactType; // 0x558(0x08)
	struct FGameplayTagContainer MunitionTagContainer; // 0x560(0x20)
	struct UInteractionArchitectAsset* MunitionDataAsset; // 0x580(0x08)
	struct AMunitionType_Base* AOE1MunitionActor; // 0x588(0x08)
	struct FName AOE1MunitionImpactType; // 0x590(0x08)
	struct FGameplayTagContainer AOE1MunitionTagContainer; // 0x598(0x20)
	struct UInteractionArchitectAsset* AOE1MunitionDataAsset; // 0x5b8(0x08)
	struct AActor* AOE1TargetActor; // 0x5c0(0x08)
	bool bAllowOverideAttackSocket; // 0x5c8(0x01)
	bool bIsABlindManWeapon; // 0x5c9(0x01)
	char pad_5CA[0x6]; // 0x5ca(0x06)
	struct FMulticastInlineDelegate WeaponEventDelegate; // 0x5d0(0x10)
	struct FMulticastInlineDelegate Weapon_AnimEventDelegate; // 0x5e0(0x10)
	char pad_5F0[0x80]; // 0x5f0(0x80)

	void TrackPointsEvent(); // Function Phoenix.EnemyAIWeapon.TrackPointsEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TrackPoints(struct FVector& InThrowLoc, struct FVector& InWieldLoc); // Function Phoenix.EnemyAIWeapon.TrackPoints // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32b2220
	void SetState(enum class EEnemyAIWeaponState& InState); // Function Phoenix.EnemyAIWeapon.SetState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32b1e50
	void RangedNotifyHit(struct UPrimitiveComponent* MyComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, bool bSelfMoved, struct FVector HitLocation, struct FVector HitNormal, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.EnemyAIWeapon.RangedNotifyHit // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32b1ad0
	void PoweredUpStopEvent(); // Function Phoenix.EnemyAIWeapon.PoweredUpStopEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PoweredUpStartEvent(); // Function Phoenix.EnemyAIWeapon.PoweredUpStartEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool OverlapAttackCapsule_New(struct USceneComponent* OverlappedComponent, struct AActor* OtherActor, struct USceneComponent* OtherComponent, struct FHitResult SweepResult, struct FHitResult& OutHitResult); // Function Phoenix.EnemyAIWeapon.OverlapAttackCapsule_New // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32b1840
	bool OverlapAttackCapsule(struct AActor* InVictim, struct FHitResult InHitResult, struct FEnemy_WeaponAttackOverlapData& OutOverlapData); // Function Phoenix.EnemyAIWeapon.OverlapAttackCapsule // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32b1610
	void OnMunitionImpact(struct AMunitionType_Base* MunitionInstance, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.EnemyAIWeapon.OnMunitionImpact // (Final|Native|Public|HasOutParms) // @ game+0x32b1480
	void OnMunitionDestroyed(struct AMunitionType_Base* InMunitionInstance); // Function Phoenix.EnemyAIWeapon.OnMunitionDestroyed // (Final|Native|Public) // @ game+0x32b13f0
	void HandlePhysicsMunitionHit(enum class EPhysicsMunitionHitType PhysicsMunitionHitType, struct FHitResult HitResult); // Function Phoenix.EnemyAIWeapon.HandlePhysicsMunitionHit // (Final|Native|Public) // @ game+0x32b1290
	struct FVector GetWieldImpactNormal(struct FVector& InNormal, struct AActor* InHitActor); // Function Phoenix.EnemyAIWeapon.GetWieldImpactNormal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32b10d0
	struct FVector GetThrowImpactNormal(struct FVector& InNormal, struct AActor* InHitActor); // Function Phoenix.EnemyAIWeapon.GetThrowImpactNormal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32b10d0
	enum class EEnemyAIWeaponState GetState(); // Function Phoenix.EnemyAIWeapon.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b10b0
	struct AMunitionType_Physics* GetMunition(); // Function Phoenix.EnemyAIWeapon.GetMunition // (Final|Native|Public|BlueprintCallable) // @ game+0x32b1090
	struct AActor* GetAttackInstigator(); // Function Phoenix.EnemyAIWeapon.GetAttackInstigator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b1030
	void ForceStoreWeapon(); // Function Phoenix.EnemyAIWeapon.ForceStoreWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x32b1010
	void FireWeaponAOEMunitionNew(struct AMunitionType_Base* InMunitionActor, struct AActor* TargetActor, struct FVector InLocation, struct UInteractionArchitectAsset* InMunitionDataAsset, struct FName InMunitionImpactType, struct FGameplayTagContainer InMunitionTagContainer, float AOEDamage); // Function Phoenix.EnemyAIWeapon.FireWeaponAOEMunitionNew // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32b0d90
	void FireWeaponAOEMunition(struct AMunitionType_Base* InMunitionActor, struct AActor* TargetActor, struct FVector InLocation, struct UInteractionArchitectAsset* InMunitionDataAsset, struct FName InMunitionImpactType, struct FGameplayTagContainer InMunitionTagContainer, float AOEDamage); // Function Phoenix.EnemyAIWeapon.FireWeaponAOEMunition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32b0b10
	struct AMunitionType_Base* FireAtTarget(struct AActor* TargetPtr, struct APawn* WeaponOwnerPtr, float AccuracyOffset, float InDamage, float OverrideSpeed); // Function Phoenix.EnemyAIWeapon.FireAtTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x32b0960
	void EnableWeaponEffects(); // Function Phoenix.EnemyAIWeapon.EnableWeaponEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EnableTrackPoints(bool bEnable); // Function Phoenix.EnemyAIWeapon.EnableTrackPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x32b08d0
	void EnablePhysicsSimEvent(bool bEnable); // Function Phoenix.EnemyAIWeapon.EnablePhysicsSimEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1545fb0
	struct AActor* DoDisarmOnOwner(struct FVector HitDirection, struct AActor* InInstigator); // Function Phoenix.EnemyAIWeapon.DoDisarmOnOwner // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32b07e0
	void DisableWeaponEffects(); // Function Phoenix.EnemyAIWeapon.DisableWeaponEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void BroadcastWeaponEvent(enum class EEnemyAIWeapon_Event InEvent); // Function Phoenix.EnemyAIWeapon.BroadcastWeaponEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32b06b0
	void BroadcastWeapon_AnimEvent(struct FName InName); // Function Phoenix.EnemyAIWeapon.BroadcastWeapon_AnimEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32b0740
};

// Class Phoenix.EnemyAIWeapon_Interface
// Size: 0x28 (Inherited: 0x28)
struct UEnemyAIWeapon_Interface : UInterface {

	bool WeaponStored(); // Function Phoenix.EnemyAIWeapon_Interface.WeaponStored // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool StartWeaponSwing(); // Function Phoenix.EnemyAIWeapon_Interface.StartWeaponSwing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool SpawnStoredWeapon(); // Function Phoenix.EnemyAIWeapon_Interface.SpawnStoredWeapon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool ShowWeaponStartFX(); // Function Phoenix.EnemyAIWeapon_Interface.ShowWeaponStartFX // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool InterfaceWeaponRigidBodyDeactivate(); // Function Phoenix.EnemyAIWeapon_Interface.InterfaceWeaponRigidBodyDeactivate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool InterfaceWeaponRigidBodyActivate(); // Function Phoenix.EnemyAIWeapon_Interface.InterfaceWeaponRigidBodyActivate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool InterfaceWeaponAcquire(); // Function Phoenix.EnemyAIWeapon_Interface.InterfaceWeaponAcquire // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool HideWeaponStopFX(); // Function Phoenix.EnemyAIWeapon_Interface.HideWeaponStopFX // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct USceneComponent* GetSceneComponent(); // Function Phoenix.EnemyAIWeapon_Interface.GetSceneComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b5180
	struct UMeshComponent* GetMeshComponent(); // Function Phoenix.EnemyAIWeapon_Interface.GetMeshComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b5150
	struct UCapsuleComponent* GetCapsuleComponent(); // Function Phoenix.EnemyAIWeapon_Interface.GetCapsuleComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b5050
	struct UMeshComponent* FireWeaponAOE1(); // Function Phoenix.EnemyAIWeapon_Interface.FireWeaponAOE1 // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x325e610
	bool EventWeaponTriggerThrownFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponTriggerThrownFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponTriggerProtegoFx(struct FHitResult& HitResult); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponTriggerProtegoFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponTriggerImpactFx(struct FHitResult& HitResult); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponTriggerImpactFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponTriggerGenericImpactFx(struct FHitResult& HitResult); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponTriggerGenericImpactFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponThrownPawnStabFx(struct FHitResult& HitResult); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponThrownPawnStabFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponSpawnStoredWeaponFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponSpawnStoredWeaponFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponMeleePawnSlashFx(struct FHitResult& HitResult, struct FGameplayTagContainer& InMunitionTagContainer); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponMeleePawnSlashFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponMeleeAttackStartFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponMeleeAttackStartFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponImpactGlowFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponImpactGlowFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponFireAOE1Fx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponFireAOE1Fx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDisarmedFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDisarmedFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDisarmedForRecoveryFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDisarmedForRecoveryFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDestroyedFx(struct FHitResult& HitResult); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDestroyedFx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDeactivateLiteFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDeactivateLiteFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDeactivateHeavyFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDeactivateHeavyFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDeactivatedFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDeactivatedFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponDeactivateBuffEmitterFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponDeactivateBuffEmitterFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponActivateLiteFx(); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponActivateLiteFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventWeaponActivateBuffEmitterFx(enum class EEnemyBuffTypeEnum InBuffType); // Function Phoenix.EnemyAIWeapon_Interface.EventWeaponActivateBuffEmitterFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventTransientWeaponPoweredUp(); // Function Phoenix.EnemyAIWeapon_Interface.EventTransientWeaponPoweredUp // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventTransientWeaponDeactivate(); // Function Phoenix.EnemyAIWeapon_Interface.EventTransientWeaponDeactivate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventTransientWeaponActivate(); // Function Phoenix.EnemyAIWeapon_Interface.EventTransientWeaponActivate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EventTrackPoints(); // Function Phoenix.EnemyAIWeapon_Interface.EventTrackPoints // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EventDisableRangedPawnCollision(); // Function Phoenix.EnemyAIWeapon_Interface.EventDisableRangedPawnCollision // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool EnableShieldCollision(); // Function Phoenix.EnemyAIWeapon_Interface.EnableShieldCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3285460
	bool EnablePhysicsSim(); // Function Phoenix.EnemyAIWeapon_Interface.EnablePhysicsSim // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3285330
	bool EnableMeleeCollision(); // Function Phoenix.EnemyAIWeapon_Interface.EnableMeleeCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b5020
	bool EnableCollision(); // Function Phoenix.EnemyAIWeapon_Interface.EnableCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32854f0
	bool DisableShieldCollision(); // Function Phoenix.EnemyAIWeapon_Interface.DisableShieldCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b4f60
	bool DisablePhysicsSim(); // Function Phoenix.EnemyAIWeapon_Interface.DisablePhysicsSim // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3285520
	bool DisableMeleeCollision(); // Function Phoenix.EnemyAIWeapon_Interface.DisableMeleeCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b4f30
	bool DisableCollision(); // Function Phoenix.EnemyAIWeapon_Interface.DisableCollision // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3285490
	bool DeactivateWeaponThreat(); // Function Phoenix.EnemyAIWeapon_Interface.DeactivateWeaponThreat // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DeactivateWeapon(); // Function Phoenix.EnemyAIWeapon_Interface.DeactivateWeapon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool ActivateWeaponThreat(); // Function Phoenix.EnemyAIWeapon_Interface.ActivateWeaponThreat // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool ActivateWeapon(); // Function Phoenix.EnemyAIWeapon_Interface.ActivateWeapon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.EnemyAIWeaponSpawnDataBase
// Size: 0x38 (Inherited: 0x28)
struct UEnemyAIWeaponSpawnDataBase : UObject {
	struct AEnemyAIWeapon* Weapon; // 0x28(0x08)
	float Chance; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.EnemyAIWeaponSpawnData
// Size: 0x38 (Inherited: 0x38)
struct UEnemyAIWeaponSpawnData : UEnemyAIWeaponSpawnDataBase {
};

// Class Phoenix.EnemyBroomRider
// Size: 0xcd0 (Inherited: 0xcc0)
struct AEnemyBroomRider : AAmbulatory_Character {
	struct TArray<struct FSpawnSelectInfo> BroomRiders; // 0xcc0(0x10)

	struct FName OnOverrideCharacterLook(struct AActor* Actor, struct FName Name); // Function Phoenix.EnemyBroomRider.OnOverrideCharacterLook // (Native|Event|Public|BlueprintEvent) // @ game+0x32b5240
};

// Class Phoenix.EnemyBroomRider_AiController
// Size: 0x2e8 (Inherited: 0x2c0)
struct AEnemyBroomRider_AiController : AController {
	struct UFlyingBroomPhysics* BroomPhysics; // 0x2c0(0x08)
	enum class EBroomEnemyState BroomEnemyState; // 0x2c8(0x01)
	bool OverrideYaw; // 0x2c9(0x01)
	char pad_2CA[0x16]; // 0x2ca(0x16)
	struct UScheduledEntity* OwnedScheduledEntity; // 0x2e0(0x08)

	void StopAndWaitForPlayer(float CriticalDistance); // Function Phoenix.EnemyBroomRider_AiController.StopAndWaitForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x32b53e0
	void SetBroomYaw(float Yaw); // Function Phoenix.EnemyBroomRider_AiController.SetBroomYaw // (Final|Native|Public|BlueprintCallable) // @ game+0x32b5360
	void ResumeBroom(); // Function Phoenix.EnemyBroomRider_AiController.ResumeBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x32b5340
	void PauseBroom(); // Function Phoenix.EnemyBroomRider_AiController.PauseBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x32b5320
	void GoToPointOnSpline(int32_t Point); // Function Phoenix.EnemyBroomRider_AiController.GoToPointOnSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x32b51b0
	float GetDistanceFromPlayer(struct UFlyingBroomPhysicsScratch_Spline* SplinePhysicsScratch, struct ACharacter* Player); // Function Phoenix.EnemyBroomRider_AiController.GetDistanceFromPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x32b5080
	void BarrelRollRight(); // Function Phoenix.EnemyBroomRider_AiController.BarrelRollRight // (Final|Native|Public|BlueprintCallable) // @ game+0x32b4f10
	void BarrelRollLeft(); // Function Phoenix.EnemyBroomRider_AiController.BarrelRollLeft // (Final|Native|Public|BlueprintCallable) // @ game+0x32b4ef0
};

// Class Phoenix.EnemyBuff_Interface
// Size: 0x28 (Inherited: 0x28)
struct UEnemyBuff_Interface : UInterface {

	bool UpdateBuffEmitterLocationAndRotFx(struct FVector Location, struct FRotator Rotation, enum class EEnemyBuffTypeEnum BuffType); // Function Phoenix.EnemyBuff_Interface.UpdateBuffEmitterLocationAndRotFx // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DestroyBuffEmitterFx(enum class EEnemyBuffTypeEnum BuffType); // Function Phoenix.EnemyBuff_Interface.DestroyBuffEmitterFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DeactivateBuffEmitterFx(enum class EEnemyBuffTypeEnum BuffType); // Function Phoenix.EnemyBuff_Interface.DeactivateBuffEmitterFx // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool CreateBuffEmitterFx(enum class EEnemyBuffTypeEnum BuffType, struct FVector Location); // Function Phoenix.EnemyBuff_Interface.CreateBuffEmitterFx // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.EnemyBuffComponent
// Size: 0x1d8 (Inherited: 0xc8)
struct UEnemyBuffComponent : UActorComponent {
	bool bIsMaster; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	float validTargetRadius; // 0xcc(0x04)
	float healRatePercentagePerSec; // 0xd0(0x04)
	enum class EEnemyBuffTypeEnum buffTypeEnum; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	float BuffMaxActiveTime; // 0xd8(0x04)
	bool bAllowHealthBuff; // 0xdc(0x01)
	bool bAllowWeaponBuff; // 0xdd(0x01)
	char pad_DE[0x2]; // 0xde(0x02)
	struct UParticleSystem* pBeamFX; // 0xe0(0x08)
	struct UParticleSystem* pBuffEmitterFX; // 0xe8(0x08)
	struct UParticleSystem* pBuffEmitterFX2; // 0xf0(0x08)
	struct UParticleSystem* pBuffEmitterFX3; // 0xf8(0x08)
	struct UParticleSystem* pBuffEmitterFX4; // 0x100(0x08)
	struct FName BeamAttachBoneName; // 0x108(0x08)
	struct TArray<struct UParticleSystemComponent*> pBuffEmitterFXObj; // 0x110(0x10)
	struct TArray<struct UParticleSystemComponent*> pBuffEmitterFX2Obj; // 0x120(0x10)
	struct TArray<struct FEBC_BoneRadiusVelocity> m_boneList; // 0x130(0x10)
	bool bIsDisabled; // 0x140(0x01)
	char pad_141[0x97]; // 0x141(0x97)

	void EnableBuff(struct AActor* pActorMaster); // Function Phoenix.EnemyBuffComponent.EnableBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x32b4f90
};

// Class Phoenix.EnemyHiddenTeleportAttackComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UEnemyHiddenTeleportAttackComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct UMultiFX2Asset* TargetLocationFxAsset; // 0xd0(0x08)
	char pad_D8[0x8]; // 0xd8(0x08)
};

// Class Phoenix.AblEnemyHiddenTeleportAttackScratchpad
// Size: 0x30 (Inherited: 0x28)
struct UAblEnemyHiddenTeleportAttackScratchpad : UAblAbilityTaskScratchPad {
	struct UEnemyHiddenTeleportAttackComponent* EnemyHiddenTeleportAttackComp; // 0x28(0x08)
};

// Class Phoenix.AblEnemyHiddenTeleportAttackTask
// Size: 0xa8 (Inherited: 0x70)
struct UAblEnemyHiddenTeleportAttackTask : UAblAbilityTask {
	enum class EHiddenTeleportAttackStep Step; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct FGameplayTagContainer TargetLocationVfxBaseTags; // 0x78(0x20)
	struct TArray<struct UAblObjectArchitectTagChooser*> TargetLocationVfxTagChoosers; // 0x98(0x10)
};

// Class Phoenix.EnemyInfo
// Size: 0x278 (Inherited: 0x268)
struct UEnemyInfo : UUserWidget {
	float Health; // 0x268(0x04)
	struct FName Name; // 0x26c(0x08)
	bool Visible; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)

	void Show(bool VisibleIn); // Function Phoenix.EnemyInfo.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba500
	void SetName(struct FName NameIn); // Function Phoenix.EnemyInfo.SetName // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba360
	void SetHelthPercentage(float HealthIn); // Function Phoenix.EnemyInfo.SetHelthPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba1c0
	void HandleShow(bool VisibleIn); // Function Phoenix.EnemyInfo.HandleShow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleNameChanged(struct FName NameIn); // Function Phoenix.EnemyInfo.HandleNameChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleHealthPercentageChanged(float HealthIn); // Function Phoenix.EnemyInfo.HandleHealthPercentageChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.EnemyStateComponent
// Size: 0x8c8 (Inherited: 0x5a0)
struct UEnemyStateComponent : UBaseStateComponent {
	struct FEnemyStateData EnemyStateData; // 0x5a0(0x2a0)
	struct FDbSingleColumnInfo TeamAsset; // 0x840(0x88)
};

// Class Phoenix.EnemyStateDataContainer
// Size: 0x2c8 (Inherited: 0x28)
struct UEnemyStateDataContainer : UObjectStateDataContainerBase {
	struct FEnemyStateData Data; // 0x28(0x2a0)
};

// Class Phoenix.EnemyStateInfo
// Size: 0x1048 (Inherited: 0xf90)
struct UEnemyStateInfo : UCharacterStateInfo {
	char pad_F90[0xb8]; // 0xf90(0xb8)

	void UpdateMass(); // Function Phoenix.EnemyStateInfo.UpdateMass // (Native|Protected) // @ game+0x32ba590
	void SetPullsAggroAmount(float InAmount); // Function Phoenix.EnemyStateInfo.SetPullsAggroAmount // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba480
	void SetPullsAggro(bool bInPullsAggro); // Function Phoenix.EnemyStateInfo.SetPullsAggro // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba3f0
	void SetInvulnerableToStaticObjects(bool bInInvulnerable); // Function Phoenix.EnemyStateInfo.SetInvulnerableToStaticObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba2d0
	void SetIgnoreActorHitFrom(struct AActor* IgnoreActor); // Function Phoenix.EnemyStateInfo.SetIgnoreActorHitFrom // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba240
	void RemoveIgnoreActorHitFrom(); // Function Phoenix.EnemyStateInfo.RemoveIgnoreActorHitFrom // (Final|Native|Public|BlueprintCallable) // @ game+0x32ba1a0
	bool PullsAggro(); // Function Phoenix.EnemyStateInfo.PullsAggro // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32ba170
	float GetPullAggroAmount(); // Function Phoenix.EnemyStateInfo.GetPullAggroAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b9d50
	struct TArray<struct UObject*> GetFriendlyFireTypeList(); // Function Phoenix.EnemyStateInfo.GetFriendlyFireTypeList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b9d00
};

// Class Phoenix.EnemyTrollInterface
// Size: 0x28 (Inherited: 0x28)
struct UEnemyTrollInterface : UInterface {

	void SetTrollSwingDirection(enum class ETrollSwingDirection TrollSwingDirection); // Function Phoenix.EnemyTrollInterface.SetTrollSwingDirection // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	enum class ETrollSwingDirection GetTrollSwingDirection(); // Function Phoenix.EnemyTrollInterface.GetTrollSwingDirection // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
};

// Class Phoenix.TrollSwingDirectionAnimNotify
// Size: 0x40 (Inherited: 0x38)
struct UTrollSwingDirectionAnimNotify : UAnimNotify {
	enum class ETrollSwingDirection SwingDirection; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.EnemyWeapon_Manager
// Size: 0x48 (Inherited: 0x28)
struct UEnemyWeapon_Manager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct TWeakObjectPtr<struct AEnemyAIWeapon>> WeaponList; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.EnvClothCollidingWithPawns
// Size: 0x4b0 (Inherited: 0x4b0)
struct UEnvClothCollidingWithPawns : UBoxComponent {

	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.EnvClothCollidingWithPawns.OnEndOverlap // (Final|Native|Protected) // @ game+0x32ba010
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& OverlapInfo); // Function Phoenix.EnvClothCollidingWithPawns.OnBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x32b9df0
};

// Class Phoenix.EnvQueryGenerator_StationsManagedBy
// Size: 0x60 (Inherited: 0x50)
struct UEnvQueryGenerator_StationsManagedBy : UEnvQueryGenerator {
	bool bUseAvailableStationsOnly; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	int32_t GenerateMaxCount; // 0x54(0x04)
	enum class EStationSelectionMethod SelectionMethod; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// Class Phoenix.EnvQueryGenerator_StationsNearby
// Size: 0xd0 (Inherited: 0xd0)
struct UEnvQueryGenerator_StationsNearby : UEnvQueryGenerator_ActorsOfClass {
};

// Class Phoenix.EnvQueryGenerator_StationsOwned
// Size: 0x50 (Inherited: 0x50)
struct UEnvQueryGenerator_StationsOwned : UEnvQueryGenerator {
};

// Class Phoenix.EnvQueryInstanceBlueprintWrapperEx
// Size: 0x78 (Inherited: 0x78)
struct UEnvQueryInstanceBlueprintWrapperEx : UEnvQueryInstanceBlueprintWrapper {
};

// Class Phoenix.EnvQueryInstance_Station
// Size: 0x78 (Inherited: 0x78)
struct UEnvQueryInstance_Station : UEnvQueryInstanceBlueprintWrapperEx {

	struct TArray<struct FStationQueryData> GetResultsAsStationQueryData(); // Function Phoenix.EnvQueryInstance_Station.GetResultsAsStationQueryData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x32b9d70
};

// Class Phoenix.EnvQueryItemType_Station
// Size: 0x30 (Inherited: 0x30)
struct UEnvQueryItemType_Station : UEnvQueryItemType {
};

// Class Phoenix.EnvQueryTest_Creature_ActorContainsGroupCoordinatedTag
// Size: 0x200 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_ActorContainsGroupCoordinatedTag : UEnvQueryTest {
	struct FName TagID; // 0x1f8(0x08)
};

// Class Phoenix.EnvQueryTest_Creature_AreaContainsGroupCoordinatedTag
// Size: 0x240 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_AreaContainsGroupCoordinatedTag : UEnvQueryTest {
	struct FAIDataProviderFloatValue DetectionRange; // 0x1f8(0x38)
	struct FName TagID; // 0x230(0x08)
	bool bIgnoreQueryContextActor; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
};

// Class Phoenix.EnvQueryTest_Creature_CohesionWithActorsOfClass
// Size: 0x230 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_CohesionWithActorsOfClass : UEnvQueryTest {
	struct FAIDataProviderFloatValue DetectionRange; // 0x1f8(0x38)
};

// Class Phoenix.EnvQueryTest_Creature_DistanceFromPerceivedActors
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_DistanceFromPerceivedActors : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_Creature_InFrontOfContextActor
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_InFrontOfContextActor : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_Creature_LastInteractionTime
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_Creature_LastInteractionTime : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_Flee
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_Flee : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_OverlapWithIgnore
// Size: 0x220 (Inherited: 0x1f8)
struct UEnvQueryTest_OverlapWithIgnore : UEnvQueryTest {
	struct FEnvOverlapData OverlapData; // 0x1f8(0x20)
	struct UEnvQueryContext* IgnoreContext; // 0x218(0x08)
};

// Class Phoenix.EnvQueryTest_Patrol
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_Patrol : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_PatrolFinalize
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_PatrolFinalize : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_PatrolSetup
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_PatrolSetup : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_SocialFabric
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_SocialFabric : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_SocialGreetScore
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_SocialGreetScore : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_StationHouseGender
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_StationHouseGender : UEnvQueryTest {
};

// Class Phoenix.EnvQueryTest_Stations
// Size: 0x200 (Inherited: 0x1f8)
struct UEnvQueryTest_Stations : UEnvQueryTest {
	bool bScoreInOrder; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
};

// Class Phoenix.EnvQueryTest_StationSubtypes
// Size: 0x1f8 (Inherited: 0x1f8)
struct UEnvQueryTest_StationSubtypes : UEnvQueryTest {
};

// Class Phoenix.EphemerisActor
// Size: 0x248 (Inherited: 0x248)
struct AEphemerisActor : AActor {
};

// Class Phoenix.TimeSourceSanctuaryIdentity
// Size: 0x38 (Inherited: 0x38)
struct UTimeSourceSanctuaryIdentity : UTimeSourceLocal {
};

// Class Phoenix.EphemerisSubroutineSanctuaryIdentity
// Size: 0x28 (Inherited: 0x28)
struct UEphemerisSubroutineSanctuaryIdentity : UEphemerisSubroutine {
};

// Class Phoenix.TimeSourceSanctuaryIdentityLightProbeCapture
// Size: 0x28 (Inherited: 0x28)
struct UTimeSourceSanctuaryIdentityLightProbeCapture : UTimeSource {
};

// Class Phoenix.EpiskeySpellTool
// Size: 0x7f0 (Inherited: 0x7e8)
struct AEpiskeySpellTool : ASpellTool {
	float HealingAmount; // 0x7e8(0x04)
	float Radius; // 0x7ec(0x04)
};

// Class Phoenix.EULAPageWidget
// Size: 0x328 (Inherited: 0x328)
struct UEULAPageWidget : UPhoenixUserWidget {

	void ProceedToNextScreen(); // Function Phoenix.EULAPageWidget.ProceedToNextScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x32bdbc0
};

// Class Phoenix.ExpelliarmusSpellTool
// Size: 0x8b8 (Inherited: 0x868)
struct AExpelliarmusSpellTool : AFireOnceSpellTool {
	float ScaleDisarmForce; // 0x868(0x04)
	struct FGameplayTag SpecialDisarmTag; // 0x86c(0x08)
	float TalentProjectileDistance; // 0x874(0x04)
	float TalentProjectileIgnoreNearDistance; // 0x878(0x04)
	float TalentProjectileDelay; // 0x87c(0x04)
	float TalentProjectileDamage; // 0x880(0x04)
	int32_t TalentProjectileTargetHalfAngleXY; // 0x884(0x04)
	struct AMunitionType_Base* TalentProjectileMunition; // 0x888(0x08)
	char pad_890[0x28]; // 0x890(0x28)
};

// Class Phoenix.ExperienceManager
// Size: 0xa8 (Inherited: 0x28)
struct UExperienceManager : UObject {
	struct FMulticastInlineDelegate m_onExperienceLevelChangedDelegate; // 0x28(0x10)
	char pad_38[0x70]; // 0x38(0x70)

	void SetLevelBounds(int32_t i_level, int32_t& o_startPoints, int32_t& o_endPoints); // Function Phoenix.ExperienceManager.SetLevelBounds // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32bdd10
	void SetExperienceLevel(int32_t NewLevel); // Function Phoenix.ExperienceManager.SetExperienceLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x321dc10
	void OnSaveGameLoaded(); // Function Phoenix.ExperienceManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x32bdb80
	void OnNewGame(struct UObject* Caller, bool IsInIntro); // Function Phoenix.ExperienceManager.OnNewGame // (Final|Native|Public) // @ game+0x32bdab0
	void OnGameToBeSaved(); // Function Phoenix.ExperienceManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x32bda70
	int32_t GetExperiencePoints(); // Function Phoenix.ExperienceManager.GetExperiencePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x19e8830
	int32_t GetExperienceLevelStartPoints(); // Function Phoenix.ExperienceManager.GetExperienceLevelStartPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd7f0
	int32_t GetExperienceLevelEndPoints(); // Function Phoenix.ExperienceManager.GetExperienceLevelEndPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x170d5c0
	int32_t GetExperienceLevel(); // Function Phoenix.ExperienceManager.GetExperienceLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd7d0
	struct UExperienceManager* Get(); // Function Phoenix.ExperienceManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32bd730
	void GainExperienceByAction(struct FString ExperienceAction); // Function Phoenix.ExperienceManager.GainExperienceByAction // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd640
	void AddExperience(int32_t Points, struct FString Source, struct FString source_detail); // Function Phoenix.ExperienceManager.AddExperience // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd0f0
};

// Class Phoenix.ExpiryManager
// Size: 0x128 (Inherited: 0x28)
struct UExpiryManager : UObject {
	char pad_28[0x100]; // 0x28(0x100)

	bool RefreshExpiry(struct FString UniqueId, int64_t ExpireTime, enum class EExpiryTypes ExpiryType); // Function Phoenix.ExpiryManager.RefreshExpiry // (Final|Native|Public|BlueprintCallable) // @ game+0x32bdbe0
	void OnSaveGameLoaded(); // Function Phoenix.ExpiryManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x32bdba0
	void OnGameToBeSaved(); // Function Phoenix.ExpiryManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x32bda90
	bool HasExpiry(struct FString UniqueId, enum class EExpiryTypes ExpiryType); // Function Phoenix.ExpiryManager.HasExpiry // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd940
	int64_t GetExpiry(struct FString UniqueId, enum class EExpiryTypes ExpiryType); // Function Phoenix.ExpiryManager.GetExpiry // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd810
	struct UExpiryManager* Get(); // Function Phoenix.ExpiryManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32bd780
	bool ClearExpiry(struct FString UniqueId, enum class EExpiryTypes ExpiryType); // Function Phoenix.ExpiryManager.ClearExpiry // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd3d0
	bool AddExpiry(struct FString UniqueId, int64_t ExpireTime, enum class EExpiryTypes ExpiryType); // Function Phoenix.ExpiryManager.AddExpiry // (Final|Native|Public|BlueprintCallable) // @ game+0x32bd2a0
};

// Class Phoenix.ExplodingSkeletonPieceSetup
// Size: 0x60 (Inherited: 0x30)
struct UExplodingSkeletonPieceSetup : UDataAsset {
	struct FExplodingSkeletonSetup Pieces; // 0x30(0x30)
};

// Class Phoenix.ExplodingSkeleton
// Size: 0x2b8 (Inherited: 0x248)
struct AExplodingSkeleton : AActor {
	struct FMulticastInlineDelegate ExplodingSkeletonDone; // 0x248(0x10)
	struct TArray<struct FExplodingSkeletonPieceTracker> Pieces; // 0x258(0x10)
	int32_t AlivePieces; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct USkinFXComponent* SkinFXComponent; // 0x270(0x08)
	struct FName ObjectFadeMaterialParmeter; // 0x278(0x08)
	struct UMaterialSwapMeshPool* MaterialSwap; // 0x280(0x08)
	struct FExplodingSkeletonImpulse Impulse; // 0x288(0x28)
	float Age; // 0x2b0(0x04)
	bool bDitheredAlphaFade; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)

	struct AExplodingSkeleton* SpawnExplodingSkeletonSkinFX(struct AActor* SourceActor, struct UExplodingSkeletonPieceSetup* PieceSetup, struct FExplodingSkeletonImpulse InitialImpulse, struct FExplodingSkeletonInitialDelay InitialDelay, struct ASkinFXDefinition* SkinFXEffect, struct FName InCollisionProfileName, struct FVector BaseOffset); // Function Phoenix.ExplodingSkeleton.SpawnExplodingSkeletonSkinFX // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x32be6d0
	struct AExplodingSkeleton* SpawnExplodingSkeletonMIDFade(struct AActor* SourceActor, struct UExplodingSkeletonPieceSetup* PieceSetup, struct FExplodingSkeletonImpulse InitialImpulse, struct FExplodingSkeletonInitialDelay InitialDelay, struct FName FadeMaterialParmeter, struct FName InCollisionProfileName, struct FVector BaseOffset); // Function Phoenix.ExplodingSkeleton.SpawnExplodingSkeletonMIDFade // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x32be440
	struct AExplodingSkeleton* SpawnExplodingSkeletonFade(struct AActor* SourceActor, struct UExplodingSkeletonPieceSetup* PieceSetup, struct FExplodingSkeletonImpulse InitialImpulse, struct FExplodingSkeletonInitialDelay InitialDelay, struct FName FadeMaterialKey, struct FName FadeMaterialParmeter, struct FName InCollisionProfileName, struct FVector BaseOffset); // Function Phoenix.ExplodingSkeleton.SpawnExplodingSkeletonFade // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x32be170
	struct AExplodingSkeleton* SpawnExplodingSkeleton_CollisionOverride(struct AActor* SourceActor, struct UExplodingSkeletonPieceSetup* PieceSetup, struct FExplodingSkeletonImpulse InitialImpulse, struct FExplodingSkeletonInitialDelay InitialDelay, struct FName InCollisionProfileName, struct FVector BaseOffset); // Function Phoenix.ExplodingSkeleton.SpawnExplodingSkeleton_CollisionOverride // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x32be960
	struct AExplodingSkeleton* SpawnExplodingSkeleton(struct AActor* SourceActor, struct UExplodingSkeletonPieceSetup* PieceSetup, struct FExplodingSkeletonImpulse InitialImpulse, struct FExplodingSkeletonInitialDelay InitialDelay, bool bUseDitheredAlphaFade, struct FName InCollisionProfileName, struct FVector BaseOffset); // Function Phoenix.ExplodingSkeleton.SpawnExplodingSkeleton // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x32bdee0
	void ExplodingSkeletonPieces(int32_t& TotalPieces, int32_t& CurrentlyAlivePieces); // Function Phoenix.ExplodingSkeleton.ExplodingSkeletonPieces // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32bd560
};

// Class Phoenix.ExplosiveBarrel
// Size: 0x378 (Inherited: 0x2b0)
struct AExplosiveBarrel : AWorldObject {
	struct UStaticMeshComponent* BarrelMesh; // 0x2b0(0x08)
	bool bSimulatePhysics; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float ExplosionTimer; // 0x2bc(0x04)
	float ExplodeDelay; // 0x2c0(0x04)
	float ExplosionRadius; // 0x2c4(0x04)
	enum class ERadialImpulseFalloff Falloff; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float ImpulseStrength; // 0x2cc(0x04)
	float AdditionalRadialForce; // 0x2d0(0x04)
	float ExplosionVFXScale; // 0x2d4(0x04)
	float ExplosionDamage_Objects; // 0x2d8(0x04)
	float ExplosionDamage_Pawns; // 0x2dc(0x04)
	float PropagateFireChance; // 0x2e0(0x04)
	float FireDamage; // 0x2e4(0x04)
	struct TArray<struct AActor*> IgnoreActors; // 0x2e8(0x10)
	enum class EDrawDebugTrace TraceVisibility; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	float BombardaExplosionRadius; // 0x2fc(0x04)
	float BombardaImpulseStrength; // 0x300(0x04)
	float BombardaAdditionalRadialForce; // 0x304(0x04)
	float BombardaExplosionVFXScale; // 0x308(0x04)
	float BombardaExplosionDamage_Objects; // 0x30c(0x04)
	float BombardaExplosionDamage_Pawns; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	struct TArray<enum class EObjectTypeQuery> OverlapActorTypes; // 0x318(0x10)
	struct AActor* BarrelInstigator; // 0x328(0x08)
	struct FGameplayTagContainer DamageTags; // 0x330(0x20)
	struct UInteractionArchitectAsset* DamageDataAsset; // 0x350(0x08)
	struct TArray<struct AActor*> ExplosionIgnoreActors; // 0x358(0x10)
	char pad_368[0x10]; // 0x368(0x10)

	bool SphereOverlap(struct TArray<struct AActor*>& OutActors); // Function Phoenix.ExplosiveBarrel.SphereOverlap // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x32beba0
	void SortAffectedActors(struct TArray<struct AActor*>& OutActors); // Function Phoenix.ExplosiveBarrel.SortAffectedActors // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x32bde30
	void KillBarrel(); // Function Phoenix.ExplosiveBarrel.KillBarrel // (Final|Native|Protected|BlueprintCallable) // @ game+0x32bda50
	void HitByBombarda(); // Function Phoenix.ExplosiveBarrel.HitByBombarda // (Final|Native|Protected|BlueprintCallable) // @ game+0x32bda30
	float GetExplosionVFXScale(); // Function Phoenix.ExplosiveBarrel.GetExplosionVFXScale // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x32bd900
	void ExplodeStart(); // Function Phoenix.ExplosiveBarrel.ExplodeStart // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x31e06f0
	void ExplodeEnd(); // Function Phoenix.ExplosiveBarrel.ExplodeEnd // (Native|Protected|BlueprintCallable) // @ game+0x31f7fd0
	bool ExplodeDamage(struct AActor* DamageActor); // Function Phoenix.ExplosiveBarrel.ExplodeDamage // (Final|Native|Protected|BlueprintCallable) // @ game+0x32bd4c0
	void ApplyOnFireDoT(struct AActor* Target, struct AActor* InInstigator); // Function Phoenix.ExplosiveBarrel.ApplyOnFireDoT // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.UnmanageCharacterLightingAndFeaturesData
// Size: 0x78 (Inherited: 0x28)
struct UUnmanageCharacterLightingAndFeaturesData : UMaterialSwapMeshStateData {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Phoenix.UnmanageCharacterLightingAndFeatures
// Size: 0x28 (Inherited: 0x28)
struct UUnmanageCharacterLightingAndFeatures : UMaterialSwapMeshState {
};

// Class Phoenix.MaterialSwapMeshStateCapsuleShadow
// Size: 0x30 (Inherited: 0x28)
struct UMaterialSwapMeshStateCapsuleShadow : UMaterialSwapMeshStateBoolMap {
	bool bCastCapsuleDirectShadow; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.MaterialSwapMeshStateLightingFeatures
// Size: 0x30 (Inherited: 0x28)
struct UMaterialSwapMeshStateLightingFeatures : UMaterialSwapMeshStateIntMap {
	struct FMeshStateLightingFeatures LightingFeatures; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.MaterialSwapMeshStateStencilManagerLockStencilCustomDepthData
// Size: 0x30 (Inherited: 0x28)
struct UMaterialSwapMeshStateStencilManagerLockStencilCustomDepthData : UMaterialSwapMeshStateData {
	struct TWeakObjectPtr<struct AStencilManagerSingleton> StencilManagerSingleton; // 0x28(0x08)
};

// Class Phoenix.MaterialSwapMeshStateStencilManagerLockStencilCustomDepth
// Size: 0x30 (Inherited: 0x28)
struct UMaterialSwapMeshStateStencilManagerLockStencilCustomDepth : UMaterialSwapMeshState {
	int32_t StencilValue; // 0x28(0x04)
	bool bRenderCustomDepth; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Phoenix.MorphTargetInterface
// Size: 0x28 (Inherited: 0x28)
struct UMorphTargetInterface : UInterface {

	bool OnMorphTargetsReceived(struct TMap<struct FName, float>& MorphTargets); // Function Phoenix.MorphTargetInterface.OnMorphTargetsReceived // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x32c4800
};

// Class Phoenix.FaceIDComponent
// Size: 0x158 (Inherited: 0xc8)
struct UFaceIDComponent : UActorComponent {
	int32_t Port; // 0xc8(0x04)
	char pad_CC[0x8c]; // 0xcc(0x8c)
};

// Class Phoenix.IconButtonWidget
// Size: 0x4a8 (Inherited: 0x328)
struct UIconButtonWidget : UPhoenixUserWidget {
	float IconScale; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct FString IconName; // 0x330(0x10)
	struct FString BackgroundIconName; // 0x340(0x10)
	enum class EIconButtonState IconButtonState; // 0x350(0x01)
	char pad_351[0x3]; // 0x351(0x03)
	struct FName DataField; // 0x354(0x08)
	struct FName DataField2; // 0x35c(0x08)
	struct FVector2D Size; // 0x364(0x08)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct UButton* TheButton; // 0x370(0x08)
	struct UImage* TheImage; // 0x378(0x08)
	struct UImage* hexBack; // 0x380(0x08)
	struct FMulticastInlineDelegate OnIconButtonClick; // 0x388(0x10)
	struct FMulticastInlineDelegate OnIconButtonHover; // 0x398(0x10)
	struct FMulticastInlineDelegate OnIconButtonUnhover; // 0x3a8(0x10)
	struct FMulticastInlineDelegate OnIconButtonPress; // 0x3b8(0x10)
	struct FMulticastInlineDelegate OnIconButtonRelease; // 0x3c8(0x10)
	struct FMulticastInlineDelegate OnImageLoadComplete; // 0x3d8(0x10)
	char pad_3E8[0xa8]; // 0x3e8(0xa8)
	struct FString LastRequestedImageName; // 0x490(0x10)
	bool LastRequestedMatchSize; // 0x4a0(0x01)
	char pad_4A1[0x7]; // 0x4a1(0x07)

	void TryResolveImage(bool bAsyncLoadIfFail, enum class EUIAsyncLoadPriority OptionalPriority); // Function Phoenix.IconButtonWidget.TryResolveImage // (Final|Native|Public) // @ game+0x3306390
	bool SetState(bool IsActive); // Function Phoenix.IconButtonWidget.SetState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIsTutorialHighlighted(bool bIsTutorialHighlighted); // Function Phoenix.IconButtonWidget.SetIsTutorialHighlighted // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIsNew(bool bIsNew); // Function Phoenix.IconButtonWidget.SetIsNew // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetImage(struct FString ImageName, bool MatchSize, enum class EUIAsyncLoadPriority OptionalPriority); // Function Phoenix.IconButtonWidget.SetImage // (Final|Native|Public|BlueprintCallable) // @ game+0x33060c0
	void SetHexBack(struct FString ImageName); // Function Phoenix.IconButtonWidget.SetHexBack // (Final|Native|Public|BlueprintCallable) // @ game+0x3305fd0
	void SetFactsheetItemType(enum class EFactsheetItemType Type); // Function Phoenix.IconButtonWidget.SetFactsheetItemType // (Final|Native|Public|BlueprintCallable) // @ game+0x3305f50
	void SetButtonStatus(struct FString StateImage, bool StateImageVisible, struct FString StateHexBack, bool StateEnabled); // Function Phoenix.IconButtonWidget.SetButtonStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x3305b40
	void SetButtonState(enum class EIconButtonState NewState); // Function Phoenix.IconButtonWidget.SetButtonState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetButtonSize(struct FVector2D NewSize); // Function Phoenix.IconButtonWidget.SetButtonSize // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool SetButtonIcons(struct FString BackgroundImage); // Function Phoenix.IconButtonWidget.SetButtonIcons // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool RemoveExtraContent(); // Function Phoenix.IconButtonWidget.RemoveExtraContent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnSynchronizeProperties(); // Function Phoenix.IconButtonWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSelectionChanged(bool selected); // Function Phoenix.IconButtonWidget.OnSelectionChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnImageLoaded(struct UTexture2D* LoadedTexture, struct UObject* CallbackParam); // Function Phoenix.IconButtonWidget.OnImageLoaded // (Final|Native|Public) // @ game+0x3305740
	void HighlightButton(bool isHighlighted); // Function Phoenix.IconButtonWidget.HighlightButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool HandleNonExistent(); // Function Phoenix.IconButtonWidget.HandleNonExistent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool HandleMissing(); // Function Phoenix.IconButtonWidget.HandleMissing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool HandleEnabled(); // Function Phoenix.IconButtonWidget.HandleEnabled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool HandleDisabled(); // Function Phoenix.IconButtonWidget.HandleDisabled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class EFactsheetItemType GetFactsheetItemType(); // Function Phoenix.IconButtonWidget.GetFactsheetItemType // (Final|Native|Public|BlueprintCallable) // @ game+0x33050b0
	struct FString GetFactsheetItemName(); // Function Phoenix.IconButtonWidget.GetFactsheetItemName // (Final|Native|Public|BlueprintCallable) // @ game+0x3304ff0
	struct FString GetFactsheetItemDesc(); // Function Phoenix.IconButtonWidget.GetFactsheetItemDesc // (Final|Native|Public|BlueprintCallable) // @ game+0x3304f30
	struct UWidget* GetExtraContent(); // Function Phoenix.IconButtonWidget.GetExtraContent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ButtonUnhovered(); // Function Phoenix.IconButtonWidget.ButtonUnhovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3304df0
	void ButtonReleased(); // Function Phoenix.IconButtonWidget.ButtonReleased // (Native|Public|BlueprintCallable) // @ game+0x3304dd0
	void ButtonPressed(); // Function Phoenix.IconButtonWidget.ButtonPressed // (Native|Public|BlueprintCallable) // @ game+0x3304db0
	void ButtonHovered(); // Function Phoenix.IconButtonWidget.ButtonHovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3304d90
	void ButtonClicked(); // Function Phoenix.IconButtonWidget.ButtonClicked // (Native|Public|BlueprintCallable) // @ game+0x3304d70
	bool AddExtraContent(struct UWidget* NewContent); // Function Phoenix.IconButtonWidget.AddExtraContent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FactsheetButtonWidget
// Size: 0x4f8 (Inherited: 0x4a8)
struct UFactsheetButtonWidget : UIconButtonWidget {
	struct FString FactsheetButtonItemName; // 0x4a8(0x10)
	struct FString FactsheetButtonItemDesc; // 0x4b8(0x10)
	struct FString FactsheetButtonCharacterAsked; // 0x4c8(0x10)
	struct FString FactsheetButtonSuggestedLead; // 0x4d8(0x10)
	enum class EFactsheetButtonState FactsheetButtonItemState; // 0x4e8(0x01)
	char pad_4E9[0x3]; // 0x4e9(0x03)
	int32_t FactsheetRelativeSocialCapital; // 0x4ec(0x04)
	int32_t FactsheetSocialNeeded; // 0x4f0(0x04)
	char pad_4F4[0x4]; // 0x4f4(0x04)
};

// Class Phoenix.FactSheetWidget
// Size: 0x3c8 (Inherited: 0x3c8)
struct UFactSheetWidget : UTabPageWidget {

	bool SetFactSheetData(struct FString ItemName); // Function Phoenix.FactSheetWidget.SetFactSheetData // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FadeOutAsyncAction
// Size: 0x48 (Inherited: 0x30)
struct UFadeOutAsyncAction : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate Complete; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	void OnFadeComplete(); // Function Phoenix.FadeOutAsyncAction.OnFadeComplete // (Final|Native|Protected) // @ game+0x32c47e0
	struct UFadeOutAsyncAction* FadeOut(float Duration); // Function Phoenix.FadeOutAsyncAction.FadeOut // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32c32c0
};

// Class Phoenix.FadeInAsyncAction
// Size: 0x48 (Inherited: 0x30)
struct UFadeInAsyncAction : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate Complete; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	void OnFadeComplete(); // Function Phoenix.FadeInAsyncAction.OnFadeComplete // (Final|Native|Protected) // @ game+0x32c47c0
	struct UFadeInAsyncAction* FadeIn(float Duration); // Function Phoenix.FadeInAsyncAction.FadeIn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32c3240
};

// Class Phoenix.FadeProvider_All
// Size: 0x30 (Inherited: 0x28)
struct UFadeProvider_All : UFadeProvider {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.FadeProvider_UIOnly
// Size: 0x28 (Inherited: 0x28)
struct UFadeProvider_UIOnly : UFadeProvider {
};

// Class Phoenix.FancyProgressBar
// Size: 0x348 (Inherited: 0x328)
struct UFancyProgressBar : UPhoenixUserWidget {
	float DelayBeforeDecay; // 0x328(0x04)
	float DecayDuration; // 0x32c(0x04)
	float mProgress; // 0x330(0x04)
	float mGhostProgress; // 0x334(0x04)
	float mPreDecayProgress; // 0x338(0x04)
	float mPreDecayGhostProgress; // 0x33c(0x04)
	float mInactiveDelayTimer; // 0x340(0x04)
	float mDecayTimer; // 0x344(0x04)

	void SetProgress(float Progress); // Function Phoenix.FancyProgressBar.SetProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5210
	void SetGhostProgress(float GhostProgress); // Function Phoenix.FancyProgressBar.SetGhostProgress // (Final|Native|Public) // @ game+0x32c5190
	void ResetProgress(float Progress); // Function Phoenix.FancyProgressBar.ResetProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4e70
	void ProgressChanged(float Progress); // Function Phoenix.FancyProgressBar.ProgressChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GhostProgressChanged(float GhostProgress); // Function Phoenix.FancyProgressBar.GhostProgressChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void FilledFeedback(); // Function Phoenix.FancyProgressBar.FilledFeedback // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DepletedFeedback(); // Function Phoenix.FancyProgressBar.DepletedFeedback // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FastTravelForDoorsComponent
// Size: 0x150 (Inherited: 0xc8)
struct UFastTravelForDoorsComponent : UActorComponent {
	enum class EDoorFastTravelType FastTravelDoorType; // 0xc8(0x01)
	enum class EFT_TravelType FastTravelType; // 0xc9(0x01)
	char pad_CA[0x2]; // 0xca(0x02)
	struct FFastTravelLocationName FastTravelLocation; // 0xcc(0x08)
	struct FFastTravelLocationName FastTravelLocationBack; // 0xd4(0x08)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct FString DisplayNameFront; // 0xe0(0x10)
	struct FString DisplayNameBack; // 0xf0(0x10)
	struct USceneRig* FastTravelSceneRig; // 0x100(0x08)
	float ChargeTime; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct USceneRigPlayer* SceneRigPlayer; // 0x110(0x08)
	struct ADoor* Door; // 0x118(0x08)
	struct USceneComponent* CalloutLocator; // 0x120(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x128(0x08)
	char pad_130[0x20]; // 0x130(0x20)
};

// Class Phoenix.FastTravelList
// Size: 0x330 (Inherited: 0x328)
struct UFastTravelList : UPhoenixUserWidget {
	char pad_328[0x8]; // 0x328(0x08)

	void ShowEvent(); // Function Phoenix.FastTravelList.ShowEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Show(); // Function Phoenix.FastTravelList.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5320
	void SetListTitle(struct FString Title); // Function Phoenix.FastTravelList.SetListTitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool IsListVisible(); // Function Phoenix.FastTravelList.IsListVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x32c45f0
	void HighlightListMenuItem(struct FString ItemName, bool bCallUnHovered); // Function Phoenix.FastTravelList.HighlightListMenuItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideEvent(); // Function Phoenix.FastTravelList.HideEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Hide(); // Function Phoenix.FastTravelList.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x32c41a0
	void EnableItem(struct FString ItemName); // Function Phoenix.FastTravelList.EnableItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DisableItem(struct FString ItemName); // Function Phoenix.FastTravelList.DisableItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearListMenuItems(); // Function Phoenix.FastTravelList.ClearListMenuItems // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearHighlightListMenuItem(bool bCallUnHovered); // Function Phoenix.FastTravelList.ClearHighlightListMenuItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearAllHighlightedListMenuItems(); // Function Phoenix.FastTravelList.ClearAllHighlightedListMenuItems // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddListMenuItem(struct FString ItemName); // Function Phoenix.FastTravelList.AddListMenuItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddList(struct TArray<struct FString>& ItemList); // Function Phoenix.FastTravelList.AddList // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FastTravelLocation
// Size: 0x378 (Inherited: 0x248)
struct AFastTravelLocation : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct FString LocationIdName; // 0x250(0x10)
	struct FDbSingleColumnInfo RegionId; // 0x260(0x88)
	bool bIsSaveLocation; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	struct FVector HUDOffset; // 0x2ec(0x0c)
	struct FDbEditorButtonWidget AddButton; // 0x2f8(0x80)

	void Unlock(); // Function Phoenix.FastTravelLocation.Unlock // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5c40
	void SetAvailable(bool availableIn); // Function Phoenix.FastTravelLocation.SetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4ef0
	void Lock(); // Function Phoenix.FastTravelLocation.Lock // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void Handle_SetAvailable(bool availableIn); // Function Phoenix.FastTravelLocation.Handle_SetAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GetInteractLocationBP(struct FVector& WorldLocation); // Function Phoenix.FastTravelLocation.GetInteractLocationBP // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool GetAvailable(); // Function Phoenix.FastTravelLocation.GetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x1373de0
	void AdjustCogTargetPoint(struct FVector Location); // Function Phoenix.FastTravelLocation.AdjustCogTargetPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c2f30
	void AdjustBeaconWorldLocation(struct FString Name, struct FVector& WorldLocation); // Function Phoenix.FastTravelLocation.AdjustBeaconWorldLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32c2e40
	void Activate(bool ACTIVE); // Function Phoenix.FastTravelLocation.Activate // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FlooListEntry
// Size: 0x48 (Inherited: 0x28)
struct UFlooListEntry : UObject {
	struct FName Name; // 0x28(0x08)
	int32_t UID; // 0x30(0x04)
	enum class EInteractiveState State; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct FVector Location; // 0x38(0x0c)
	float ZRotation; // 0x44(0x04)
};

// Class Phoenix.FastTravelManager
// Size: 0x208 (Inherited: 0x28)
struct UFastTravelManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	bool bWaitEnabled; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct AFloo* SourceFlooRef; // 0x38(0x08)
	struct FString TargetFlooName; // 0x40(0x10)
	struct AFloo* TargetFloo; // 0x50(0x08)
	char pad_58[0x28]; // 0x58(0x28)
	struct TArray<struct UFlooListEntry*> FlooList; // 0x80(0x10)
	struct TMap<struct FString, struct FTravelLocation> FastTravelLocations; // 0x90(0x50)
	char pad_E0[0x4]; // 0xe0(0x04)
	struct FDelegate SceneRigCallback; // 0xe4(0x10)
	char pad_F4[0xc]; // 0xf4(0x0c)
	struct ASceneRigActor* WaitSceneRigActor; // 0x100(0x08)
	char pad_108[0xb0]; // 0x108(0xb0)
	struct AActor* LastActorUsingFloo; // 0x1b8(0x08)
	struct UFlooListEntry* FlooListEntry; // 0x1c0(0x08)
	char pad_1C8[0x40]; // 0x1c8(0x40)

	void UnlockLocationByName(struct FString LocationName); // Function Phoenix.FastTravelManager.UnlockLocationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5de0
	void UnlockLocationByActor(struct AFastTravelLocation* locationActor); // Function Phoenix.FastTravelManager.UnlockLocationByActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5d50
	void UnlockLocation(struct FString LocationID); // Function Phoenix.FastTravelManager.UnlockLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5c60
	void TestExec(); // Function Phoenix.FastTravelManager.TestExec // (Final|Exec|Native|Public) // @ game+0x1074730
	void StartFastTravelWithCallbackBP(struct FVector ToLocation, struct FDelegate Callback, enum class EFT_FromType FromType, enum class EFT_TravelType FastTravelControlType); // Function Phoenix.FastTravelManager.StartFastTravelWithCallbackBP // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c5aa0
	void StartFastTravelUsingIDWithCallbackBP(struct FString LocationID, struct FDelegate Callback, enum class EFT_FromType FromType, enum class EFT_TravelType FastTravelControlType); // Function Phoenix.FastTravelManager.StartFastTravelUsingIDWithCallbackBP // (Final|Native|Public|BlueprintCallable) // @ game+0x32c58e0
	void StartFastTravelUsingID(struct FString LocationID, enum class EFT_FromType FromType, enum class EFT_TravelType FastTravelControlType); // Function Phoenix.FastTravelManager.StartFastTravelUsingID // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5780
	bool StartFastTravelToNamedLocation(struct FFastTravelLocationName LocationName, enum class EFT_FromType FromType, enum class EFT_TravelType FastTravelControlType); // Function Phoenix.FastTravelManager.StartFastTravelToNamedLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5660
	bool StartFastTravelToClosestUnlockedSaveLocationToPlayer(); // Function Phoenix.FastTravelManager.StartFastTravelToClosestUnlockedSaveLocationToPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5630
	bool StartFastTravelToClosestUnlockedSaveLocation(struct FVector CheckLocation); // Function Phoenix.FastTravelManager.StartFastTravelToClosestUnlockedSaveLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c5590
	void StartFastTravel(struct AActor* TravelActorIn, struct FVector ToLocation, struct FString EndPointActorNameIn, float Yaw, enum class EFT_FromType FromType, enum class EFT_TravelType FastTravelControlType); // Function Phoenix.FastTravelManager.StartFastTravel // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c5340
	void SetWaitEnabled(bool Enable); // Function Phoenix.FastTravelManager.SetWaitEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5290
	void SetForceFastTravelLocationName(struct FString FastTravelID, struct FString StartInMap); // Function Phoenix.FastTravelManager.SetForceFastTravelLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x32c5010
	void SetFastTravelDisabled(bool Disabled); // Function Phoenix.FastTravelManager.SetFastTravelDisabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4f80
	void PlayWaitSceneRig(bool WaitAtEnd); // Function Phoenix.FastTravelManager.PlayWaitSceneRig // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4950
	void PlayerSelectedFloo(struct AActor* ActorUsingFloo, struct FString FastTravelID); // Function Phoenix.FastTravelManager.PlayerSelectedFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4d40
	void PlayerExitingFloo(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerExitingFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4cb0
	void PlayerExitedFloo(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerExitedFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4c20
	void PlayerEnteringFloo(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerEnteringFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4b90
	void PlayerEnteredFloo(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerEnteredFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4b00
	void PlayerDroppedPowder(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerDroppedPowder // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4a70
	void PlayerCanceledFloo(struct AActor* ActorUsingFloo); // Function Phoenix.FastTravelManager.PlayerCanceledFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32c49e0
	void LockLocationByName(struct FString LocationName); // Function Phoenix.FastTravelManager.LockLocationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x32c46d0
	void LockLocationByActor(struct AFastTravelLocation* locationActor); // Function Phoenix.FastTravelManager.LockLocationByActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4640
	bool IsWaitEnabled(); // Function Phoenix.FastTravelManager.IsWaitEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4620
	bool IsFlooLoaded(struct FString Name, struct AFloo*& TargetFlooIn); // Function Phoenix.FastTravelManager.IsFlooLoaded // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c44a0
	bool IsFastTravelUnlockedForLocation(struct FString LocationID); // Function Phoenix.FastTravelManager.IsFastTravelUnlockedForLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4380
	bool IsFastTravelTutorialActive(); // Function Phoenix.FastTravelManager.IsFastTravelTutorialActive // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4350
	bool IsFastTravelling(); // Function Phoenix.FastTravelManager.IsFastTravelling // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4480
	bool IsFastTravelDisabled(); // Function Phoenix.FastTravelManager.IsFastTravelDisabled // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4320
	bool IsFastTravelDebugUnlockAllActive(); // Function Phoenix.FastTravelManager.IsFastTravelDebugUnlockAllActive // (Final|Native|Public|BlueprintCallable) // @ game+0x32c42f0
	bool IsFastTravelAvailableForLocation(struct FString LocationID); // Function Phoenix.FastTravelManager.IsFastTravelAvailableForLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x32c41f0
	bool IsFastTravelAvailable(); // Function Phoenix.FastTravelManager.IsFastTravelAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x32c41c0
	bool HasHardLoadFastTravelLocation(); // Function Phoenix.FastTravelManager.HasHardLoadFastTravelLocation // (Final|Native|Public) // @ game+0x32c4170
	float GetHardLoadFastTravelYaw(); // Function Phoenix.FastTravelManager.GetHardLoadFastTravelYaw // (Final|Native|Public) // @ game+0x32c4140
	struct FVector GetHardLoadFastTravelLocaiton(); // Function Phoenix.FastTravelManager.GetHardLoadFastTravelLocaiton // (Final|Native|Public|HasDefaults) // @ game+0x32c4100
	struct FString GetForceFastTravelLocationName(); // Function Phoenix.FastTravelManager.GetForceFastTravelLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x32c4040
	void GetFastTravelLocationsByType(struct FString Type, struct TArray<struct FTravelLocation>& Locations); // Function Phoenix.FastTravelManager.GetFastTravelLocationsByType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c3eb0
	void GetFastTravelLocations(struct TArray<struct FString>& Names, struct TArray<struct FVector>& Locations); // Function Phoenix.FastTravelManager.GetFastTravelLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c3d70
	bool GetFastTravelLocationFromName(struct FString Name, struct FVector& Location); // Function Phoenix.FastTravelManager.GetFastTravelLocationFromName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32c3c20
	bool GetFastTravelLocationDataFromName(struct FString Name, struct FTravelLocation& Location); // Function Phoenix.FastTravelManager.GetFastTravelLocationDataFromName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c3ab0
	bool GetClosestUnlockedSaveLocationToPlayer(struct FTravelLocation& LocationData); // Function Phoenix.FastTravelManager.GetClosestUnlockedSaveLocationToPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c39e0
	bool GetClosestUnlockedSaveLocation(struct FVector CheckLocation, struct FTravelLocation& LocationData); // Function Phoenix.FastTravelManager.GetClosestUnlockedSaveLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32c38c0
	void GetAvailableFloos(struct TArray<struct FTravelLocation>& AvailableFloos); // Function Phoenix.FastTravelManager.GetAvailableFloos // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c37e0
	struct UFastTravelManager* Get(); // Function Phoenix.FastTravelManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32c3790
	void FinishWait(); // Function Phoenix.FastTravelManager.FinishWait // (Final|Native|Public|BlueprintCallable) // @ game+0x32c3770
	bool FindFastTravelLocationData(struct FString LocationID, struct FTravelLocation& LocationData); // Function Phoenix.FastTravelManager.FindFastTravelLocationData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32c3600
	bool FastTravelTutorialCompleted(); // Function Phoenix.FastTravelManager.FastTravelTutorialCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x32c3340
	void FastTravel_To(struct FString LocationID); // Function Phoenix.FastTravelManager.FastTravel_To // (Final|Exec|Native|Public) // @ game+0x32c3510
	void FastTravel_TeleportToXYZ(float X, float Y, float Z); // Function Phoenix.FastTravelManager.FastTravel_TeleportToXYZ // (Final|Exec|Native|Public) // @ game+0x32c33f0
	void FastTravel_EnableWaitSR(bool tf); // Function Phoenix.FastTravelManager.FastTravel_EnableWaitSR // (Final|Exec|Native|Public) // @ game+0x32c31b0
	void FastTravel_DisableNextWaitSR(bool tf); // Function Phoenix.FastTravelManager.FastTravel_DisableNextWaitSR // (Final|Exec|Native|Public) // @ game+0x32c3370
	void EnableWaitSR(bool Enabled); // Function Phoenix.FastTravelManager.EnableWaitSR // (Final|Native|Public|BlueprintCallable) // @ game+0x32c31b0
	void DoWait(); // Function Phoenix.FastTravelManager.DoWait // (Final|Native|Public|BlueprintCallable) // @ game+0x32c3190
	void DebugLogFastTravelInformation(struct FString Data1, struct FString Data2); // Function Phoenix.FastTravelManager.DebugLogFastTravelInformation // (Final|Native|Public|BlueprintCallable) // @ game+0x32c3010
	void ClearHardLoadFastTravelLocaiton(); // Function Phoenix.FastTravelManager.ClearHardLoadFastTravelLocaiton // (Final|Native|Public) // @ game+0x32c2ff0
	void ClearForceFastTravelLocationName(); // Function Phoenix.FastTravelManager.ClearForceFastTravelLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x32c2fc0
	void AddFastTravelLocationWithLockToDB(struct AFastTravelLocation* locationActor, struct FString LocationName, struct FVector Location, struct FVector BeaconLocation, float ZRot, bool isSaveLocation, bool IsBuiltNightly, bool ShowOnMap, bool Locked); // Function Phoenix.FastTravelManager.AddFastTravelLocationWithLockToDB // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c2b00
	void AddFastTravelLocationToDB(struct FString LocationName, struct FVector Location, struct FVector BeaconLocation, float ZRot, struct FString RegionId, bool isSaveLocation, bool IsBuiltNightly, bool ShowOnMap); // Function Phoenix.FastTravelManager.AddFastTravelLocationToDB // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32c27c0
	bool ActorDismount(struct AActor* InActor); // Function Phoenix.FastTravelManager.ActorDismount // (Final|Native|Public|BlueprintCallable) // @ game+0x32c2720
};

// Class Phoenix.FastTravelPort
// Size: 0x258 (Inherited: 0x248)
struct AFastTravelPort : AActor {
	struct AFastTravelPort* DestinationPort; // 0x248(0x08)
	float DelayBeforeTeleport; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
};

// Class Phoenix.FastTravelStatue
// Size: 0x258 (Inherited: 0x258)
struct AFastTravelStatue : AFastTravelPort {
};

// Class Phoenix.FastTravelTestSettings
// Size: 0x38 (Inherited: 0x28)
struct UFastTravelTestSettings : UObject {
	struct TArray<struct FFastTravelTestEntry> FastTravelTests; // 0x28(0x10)
};

// Class Phoenix.FieldGuideButtonBase
// Size: 0x4b0 (Inherited: 0x4a8)
struct UFieldGuideButtonBase : UIconButtonWidget {
	enum class EPauseMenuPage MenuTab; // 0x4a8(0x01)
	char pad_4A9[0x7]; // 0x4a9(0x07)

	void SetNewItemIndicatorVisibility(); // Function Phoenix.FieldGuideButtonBase.SetNewItemIndicatorVisibility // (Native|Public|BlueprintCallable) // @ game+0x32ca490
	void SetLockedState(bool IsLocked); // Function Phoenix.FieldGuideButtonBase.SetLockedState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetItemIndicatorVisibility(enum class ESlateVisibility InVisibility); // Function Phoenix.FieldGuideButtonBase.OnSetItemIndicatorVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LockButton(bool ShouldLock); // Function Phoenix.FieldGuideButtonBase.LockButton // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9f30
	bool GetLockedState(); // Function Phoenix.FieldGuideButtonBase.GetLockedState // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9830
};

// Class Phoenix.FieldGuideButton_Actions
// Size: 0x4c0 (Inherited: 0x4b0)
struct UFieldGuideButton_Actions : UFieldGuideButtonBase {
	struct TArray<struct FName> NewItemCategories; // 0x4b0(0x10)
};

// Class Phoenix.FieldGuideButton_Challenges
// Size: 0x4b8 (Inherited: 0x4b0)
struct UFieldGuideButton_Challenges : UFieldGuideButtonBase {
	struct FName NewItemCategory; // 0x4b0(0x08)
};

// Class Phoenix.FieldGuideButton_Collections
// Size: 0x4c0 (Inherited: 0x4b0)
struct UFieldGuideButton_Collections : UFieldGuideButtonBase {
	struct TArray<struct FName> NewItemCategories; // 0x4b0(0x10)
};

// Class Phoenix.FieldGuideButton_Gear
// Size: 0x4c0 (Inherited: 0x4b0)
struct UFieldGuideButton_Gear : UFieldGuideButtonBase {
	struct TArray<struct FName> NewItemCategories; // 0x4b0(0x10)
};

// Class Phoenix.FieldGuideButton_Inventory
// Size: 0x4c0 (Inherited: 0x4b0)
struct UFieldGuideButton_Inventory : UFieldGuideButtonBase {
	struct TArray<struct FName> NewItemCategories; // 0x4b0(0x10)
};

// Class Phoenix.FieldGuideButton_OwlMail
// Size: 0x4b0 (Inherited: 0x4b0)
struct UFieldGuideButton_OwlMail : UFieldGuideButtonBase {
};

// Class Phoenix.FieldGuideButton_Quests
// Size: 0x4b0 (Inherited: 0x4b0)
struct UFieldGuideButton_Quests : UFieldGuideButtonBase {
};

// Class Phoenix.FieldGuideButton_Talents
// Size: 0x4b0 (Inherited: 0x4b0)
struct UFieldGuideButton_Talents : UFieldGuideButtonBase {
};

// Class Phoenix.FieldGuideHotSpot
// Size: 0x2d0 (Inherited: 0x248)
struct AFieldGuideHotSpot : AActor {
	char pad_248[0x10]; // 0x248(0x10)
	bool bDebugDraw; // 0x258(0x01)
	char pad_259[0x3]; // 0x259(0x03)
	float HotSpotHeightAllowed; // 0x25c(0x04)
	float OuterRadius; // 0x260(0x04)
	float MinOuterRadiusRatio; // 0x264(0x04)
	bool bInsideOuterRadius; // 0x268(0x01)
	bool bInsideCollision; // 0x269(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	float HotSpotRadius; // 0x26c(0x04)
	float HotSpotRumbleDeadZone; // 0x270(0x04)
	bool bInsideHotSpotRadius; // 0x274(0x01)
	bool bHotSpotActive; // 0x275(0x01)
	char pad_276[0x2]; // 0x276(0x02)
	struct FMulticastInlineDelegate OnCompletedDelagate; // 0x278(0x10)
	struct FMulticastInlineDelegate OnCancelledDelagate; // 0x288(0x10)
	struct FMulticastInlineDelegate OnEndedDelagate; // 0x298(0x10)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSourceComponent; // 0x2a8(0x08)
	struct TWeakObjectPtr<struct ABiped_Player> PlayerActor; // 0x2b0(0x08)
	struct UNiagaraComponent* VFXPulseComponent; // 0x2b8(0x08)
	bool bPageCollected; // 0x2c0(0x01)
	char pad_2C1[0xf]; // 0x2c1(0x0f)

	void UpdateVFX(float AngleRatio, float DistanceRatio); // Function Phoenix.FieldGuideHotSpot.UpdateVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca650
	void UpdateOuterRadius(float AngleRatio, float DistanceRatio); // Function Phoenix.FieldGuideHotSpot.UpdateOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateHotSpotRadius(); // Function Phoenix.FieldGuideHotSpot.UpdateHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateHotSpot(); // Function Phoenix.FieldGuideHotSpot.UpdateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void StartVFX(struct UNiagaraSystem* InAsset); // Function Phoenix.FieldGuideHotSpot.StartVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca5c0
	void SetRevealed(); // Function Phoenix.FieldGuideHotSpot.SetRevealed // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca4b0
	void RevealedByRevelio(); // Function Phoenix.FieldGuideHotSpot.RevealedByRevelio // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PlayerIsInHotSpot(struct AActor* InPlayerActor, bool bInHotSpot); // Function Phoenix.FieldGuideHotSpot.PlayerIsInHotSpot // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca3c0
	void PageCollected(); // Function Phoenix.FieldGuideHotSpot.PageCollected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void NovaComplete(); // Function Phoenix.FieldGuideHotSpot.NovaComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Log(struct FString InLogString); // Function Phoenix.FieldGuideHotSpot.Log // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9fc0
	bool IsRevealed(); // Function Phoenix.FieldGuideHotSpot.IsRevealed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32c9f10
	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.FieldGuideHotSpot.Interact // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e0b20
	void HintedByRevelio(bool bWasHintedAt); // Function Phoenix.FieldGuideHotSpot.HintedByRevelio // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExitedOuterRadius(); // Function Phoenix.FieldGuideHotSpot.ExitedOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExitedHotSpotRadius(); // Function Phoenix.FieldGuideHotSpot.ExitedHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredOuterRadius(); // Function Phoenix.FieldGuideHotSpot.EnteredOuterRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnteredHotSpotRadius(); // Function Phoenix.FieldGuideHotSpot.EnteredHotSpotRadius // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DestroyVFX(); // Function Phoenix.FieldGuideHotSpot.DestroyVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x32c97d0
	void DeactivateHotSpot(); // Function Phoenix.FieldGuideHotSpot.DeactivateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearRevealed(); // Function Phoenix.FieldGuideHotSpot.ClearRevealed // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9720
	void ActivateHotSpot(); // Function Phoenix.FieldGuideHotSpot.ActivateHotSpot // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FieldGuideMenu
// Size: 0x378 (Inherited: 0x370)
struct UFieldGuideMenu : UScreen {
	bool NeedsAutosave; // 0x370(0x01)
	char pad_371[0x7]; // 0x371(0x07)

	void UpdateMenuLegend(struct TArray<struct FLegendItemData>& NewData); // Function Phoenix.FieldGuideMenu.UpdateMenuLegend // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void MenuReadLegend(); // Function Phoenix.FieldGuideMenu.MenuReadLegend // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void MarkNeedsAutosave(); // Function Phoenix.FieldGuideMenu.MarkNeedsAutosave // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca060
	void ChangeMenuPage(enum class EUMGInputAction MenuPage); // Function Phoenix.FieldGuideMenu.ChangeMenuPage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FieldGuidePage
// Size: 0x248 (Inherited: 0x248)
struct AFieldGuidePage : AActor {

	bool MoveToNextLocation(struct FTransform& DestinationTransform, float Speed, float DeltaTime); // Function Phoenix.FieldGuidePage.MoveToNextLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32ca100
};

// Class Phoenix.FierySendComponent
// Size: 0xf8 (Inherited: 0xc8)
struct UFierySendComponent : UActorComponent {
	struct UMultiFX2Asset* HitFx; // 0xc8(0x08)
	struct AMunitionType_Base* MunitionClass; // 0xd0(0x08)
	bool bDestroyOnHit; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct AActor* Instigator; // 0xe0(0x08)
	char pad_E8[0x10]; // 0xe8(0x10)

	void HandleActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.FierySendComponent.HandleActorHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x32c9880
	void AddFierySendComponent(struct AActor* Actor, struct AActor* InInstigator, struct UMultiFX2Asset* InHitFx, struct AMunitionType_Base* InMunitionClass, bool bInDestroyOnHit); // Function Phoenix.FierySendComponent.AddFierySendComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32c9500
};

// Class Phoenix.FinisherSpellTool
// Size: 0xc20 (Inherited: 0x958)
struct AFinisherSpellTool : AChannelingSpellTool {
	float InitialWorldTimeDilation; // 0x958(0x04)
	float InitialPlayerTimeDilation; // 0x95c(0x04)
	float FinishWorldTimeDilation; // 0x960(0x04)
	char pad_964[0x4]; // 0x964(0x04)
	struct AMunitionType_Base* HitAOEMunitionActor; // 0x968(0x08)
	struct FGameplayTagContainer HitAOEMunitionTagContainer; // 0x970(0x20)
	struct UInteractionArchitectAsset* HitAOEMunitionDataAsset; // 0x990(0x08)
	struct TArray<struct UMultiFX2_Base*> HitFX2; // 0x998(0x10)
	bool DestroyTargetOnDeath; // 0x9a8(0x01)
	char pad_9A9[0x7]; // 0x9a9(0x07)
	struct AMunitionType_Base* AOEMunitionActor; // 0x9b0(0x08)
	struct FGameplayTagContainer AOEMunitionTagContainer; // 0x9b8(0x20)
	struct UInteractionArchitectAsset* AOEMunitionDataAsset; // 0x9d8(0x08)
	struct TArray<struct UMultiFX2_Base*> DeathFX2; // 0x9e0(0x10)
	struct UMaterialInterface* DeathDecalMaterial; // 0x9f0(0x08)
	struct FVector DeathDecalSize; // 0x9f8(0x0c)
	float DeathDecalLifeSpan; // 0xa04(0x04)
	float DeathDecalFadeTime; // 0xa08(0x04)
	char pad_A0C[0x4]; // 0xa0c(0x04)
	struct UObject* DeathDecal3D; // 0xa10(0x08)
	bool DeathDecal3DRandomOrientation; // 0xa18(0x01)
	bool DeathDecalOnlyOnGround; // 0xa19(0x01)
	char pad_A1A[0x6]; // 0xa1a(0x06)
	struct TArray<struct UMultiFX2_Base*> GroundFX2; // 0xa20(0x10)
	char pad_A30[0x1c8]; // 0xa30(0x1c8)
	struct AActor* TargetActor; // 0xbf8(0x08)
	struct USceneComponent* TargetComponent; // 0xc00(0x08)
	char pad_C08[0x18]; // 0xc08(0x18)

	void SpellStarted(struct AActor* WandWielder); // Function Phoenix.FinisherSpellTool.SpellStarted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFinisherHit(struct AActor* Target); // Function Phoenix.FinisherSpellTool.OnFinisherHit // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFinisherEnd(struct AActor* Target); // Function Phoenix.FinisherSpellTool.OnFinisherEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFinisherDeath(struct AActor* Target); // Function Phoenix.FinisherSpellTool.OnFinisherDeath // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct USkinFXComponent* GetSkinFxComponent(); // Function Phoenix.FinisherSpellTool.GetSkinFxComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9850
	void FinisherFail(); // Function Phoenix.FinisherSpellTool.FinisherFail // (Native|Public|BlueprintCallable) // @ game+0x31e6820
};

// Class Phoenix.FiniteInterface
// Size: 0x28 (Inherited: 0x28)
struct UFiniteInterface : UInterface {

	void StartFinite(struct AActor* Instigator, bool RemovedEffect); // Function Phoenix.FiniteInterface.StartFinite // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FiniteSpellTool
// Size: 0x870 (Inherited: 0x868)
struct AFiniteSpellTool : AFireOnceSpellTool {
	int32_t FiniteLevel; // 0x868(0x04)
	bool bRemoveSpellsFromOtherCasters; // 0x86c(0x01)
	bool bRemoveBuffs; // 0x86d(0x01)
	char pad_86E[0x2]; // 0x86e(0x02)
};

// Class Phoenix.FireInterface
// Size: 0x28 (Inherited: 0x28)
struct UFireInterface : UInterface {

	bool StartFire(float Amount, struct FVector Location); // Function Phoenix.FireInterface.StartFire // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32ca4d0
	void OnFireExtinguished(); // Function Phoenix.FireInterface.OnFireExtinguished // (Native|Event|Public|BlueprintEvent) // @ game+0x32ca310
	void OnFailedToLight(); // Function Phoenix.FireInterface.OnFailedToLight // (Native|Event|Public|BlueprintEvent) // @ game+0x32ca2f0
	void OnCompletelyCharred(); // Function Phoenix.FireInterface.OnCompletelyCharred // (Native|Event|Public|BlueprintEvent) // @ game+0x32872b0
	void OnCaughtFire(struct UIncendioComponent* IncendioComponent); // Function Phoenix.FireInterface.OnCaughtFire // (Native|Event|Public|BlueprintEvent) // @ game+0x3285960
	void OnAttemptToSetOnFire(struct FVector Location); // Function Phoenix.FireInterface.OnAttemptToSetOnFire // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32ca260
	bool IsPointOnFire(struct FVector Point, bool& OnFire); // Function Phoenix.FireInterface.IsPointOnFire // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x32c9e10
	bool IncreaseFire(float increaseAmount, struct FVector Location); // Function Phoenix.FireInterface.IncreaseFire // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32c9b40
	bool DecreaseFire(float decreaseAmount); // Function Phoenix.FireInterface.DecreaseFire // (Native|Event|Public|BlueprintEvent) // @ game+0x32c9740
};

// Class Phoenix.FireOnceThrowSpellTool
// Size: 0x888 (Inherited: 0x868)
struct AFireOnceThrowSpellTool : AFireOnceSpellTool {
	bool bShowDebug; // 0x868(0x01)
	char pad_869[0x3]; // 0x869(0x03)
	float BasePhysicsImpulse; // 0x86c(0x04)
	float MassScaledPhysicsImpulse; // 0x870(0x04)
	float MaxVelocity; // 0x874(0x04)
	float ThrowAngleZ; // 0x878(0x04)
	float TargetingPercent; // 0x87c(0x04)
	float TargetHalfAngleXY; // 0x880(0x04)
	float TargetHalfAngleZ; // 0x884(0x04)
};

// Class Phoenix.FishMoverBase
// Size: 0x278 (Inherited: 0x248)
struct AFishMoverBase : AActor {
	struct TArray<float> FishOffset; // 0x248(0x10)
	struct TArray<struct USplineComponent*> Splines; // 0x258(0x10)
	struct TArray<struct USkeletalMeshComponent*> FishComponents; // 0x268(0x10)

	void MoveFish(float timelineTime); // Function Phoenix.FishMoverBase.MoveFish // (Final|Native|Public|BlueprintCallable) // @ game+0x32ca080
	void InitFish(int32_t numberOfFish, struct USkeletalMesh* Mesh, struct UAnimationAsset* Anim, float ScaleMin, float ScaleMax, float spacing); // Function Phoenix.FishMoverBase.InitFish // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9c30
	void AddFishSpline(struct USplineComponent* Spline); // Function Phoenix.FishMoverBase.AddFishSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9690
};

// Class Phoenix.FleshCache
// Size: 0x300 (Inherited: 0x28)
struct UFleshCache : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct FMulticastInlineDelegate OnFleshCreated; // 0x38(0x10)
	struct FMulticastInlineDelegate OnFleshDestroyed; // 0x48(0x10)
	struct FMulticastInlineDelegate OnGetFlesh; // 0x58(0x10)
	char pad_68[0x298]; // 0x68(0x298)

	void OnPreCacheFinished(struct AActor* InOwner); // Function Phoenix.FleshCache.OnPreCacheFinished // (Final|Native|Private) // @ game+0x32ca330
	void OnComponentActivated(struct UActorComponent* InComponent, bool InSuccess); // Function Phoenix.FleshCache.OnComponentActivated // (Final|Native|Private) // @ game+0x32b11c0
	void HandleFastTravelFinished(struct UObject* InCaller); // Function Phoenix.FleshCache.HandleFastTravelFinished // (Final|Native|Private) // @ game+0x32c9ab0
	void HandleFastTravelBegun(struct UObject* InCaller); // Function Phoenix.FleshCache.HandleFastTravelBegun // (Final|Native|Private) // @ game+0x32c9a20
	struct UFleshCache* Get(); // Function Phoenix.FleshCache.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32c97f0
};

// Class Phoenix.FlightAutomationData
// Size: 0xd8 (Inherited: 0xc8)
struct UFlightAutomationData : UActorComponent {
	struct UFlyingBroomPhysics* BroomPhysics; // 0xc8(0x08)
	struct ABroomItemTool* BroomItem; // 0xd0(0x08)
};

// Class Phoenix.FlightSpline
// Size: 0x248 (Inherited: 0x248)
struct AFlightSpline : AActor {
};

// Class Phoenix.FlipendoSpellTool
// Size: 0x890 (Inherited: 0x868)
struct AFlipendoSpellTool : AFireOnceSpellTool {
	struct TArray<struct FFlipendoLevelData> LevelDataArray; // 0x868(0x10)
	float CharacterImpulseScale; // 0x878(0x04)
	char pad_87C[0x4]; // 0x87c(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x880(0x08)
	char pad_888[0x8]; // 0x888(0x08)

	void FlipTarget(struct AActor* InTargetActor, struct UPrimitiveComponent* InTargetComp, struct FVector& ImpactLocation); // Function Phoenix.FlipendoSpellTool.FlipTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32cd8e0
};

// Class Phoenix.FlockingActorComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UFlockingActorComponent : UActorComponent {
	bool bEditorOnly; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.FlockingActor
// Size: 0x5b8 (Inherited: 0x248)
struct AFlockingActor : AActor {
	struct UStaticMeshComponent* Leader; // 0x248(0x08)
	struct FFlockingParameters FlockingParams; // 0x250(0x68)
	bool bEnableCollisions; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	struct FFlockCollisionParameters CollisionParams; // 0x2bc(0x14)
	bool bEnableFlocking; // 0x2d0(0x01)
	char pad_2D1[0x3]; // 0x2d1(0x03)
	float FlockingStrength; // 0x2d4(0x04)
	struct TArray<struct FFlockMemberInitialState> FlockInitialStates; // 0x2d8(0x10)
	bool bEnablePersonalities; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct FFlockPersonalities Personalities; // 0x2f0(0x180)
	struct TArray<struct UMeshComponent*> FlockMemberMeshes; // 0x470(0x10)
	struct TArray<struct UParticleSystemComponent*> FlockMemberParticleSystems; // 0x480(0x10)
	char pad_490[0x58]; // 0x490(0x58)
	struct FFlockingParametersAdjustableBlend BlendFlockingParameters; // 0x4e8(0xc0)
	struct FVector LastLeaderPos; // 0x5a8(0x0c)
	char pad_5B4[0x4]; // 0x5b4(0x04)

	void SetFlockingStrength(float Strength); // Function Phoenix.FlockingActor.SetFlockingStrength // (Final|Native|Public|BlueprintCallable) // @ game+0x32ce210
	void SetAdjustableParameters(struct FFlockingParametersAdjustable Parameters, float BlendTimeSeconds); // Function Phoenix.FlockingActor.SetAdjustableParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x32cde90
	void Reset(); // Function Phoenix.FlockingActor.Reset // (Native|Public|BlueprintCallable) // @ game+0x31e1760
	struct FFlockingParametersAdjustable LerpFlockingParameters(struct FFlockingParametersAdjustable A, struct FFlockingParametersAdjustable B, float Alpha); // Function Phoenix.FlockingActor.LerpFlockingParameters // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32cdba0
	void GetAdjustableParameters(struct FFlockingParametersAdjustable& Parameters); // Function Phoenix.FlockingActor.GetAdjustableParameters // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32cda00
	void Generate(); // Function Phoenix.FlockingActor.Generate // (Native|Public|BlueprintCallable) // @ game+0x31e1780
};

// Class Phoenix.InstancedFlockingActor
// Size: 0x6c0 (Inherited: 0x248)
struct AInstancedFlockingActor : AActor {
	struct UInstancedStaticMeshComponent* FlockMeshes; // 0x248(0x08)
	struct FFlockingParameters FlockingParams; // 0x250(0x68)
	bool bEnableCollisions; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	struct FFlockCollisionParameters CollisionParams; // 0x2bc(0x14)
	bool bEnableFlocking; // 0x2d0(0x01)
	char pad_2D1[0x3]; // 0x2d1(0x03)
	float FlockingStrength; // 0x2d4(0x04)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct FFlockGenerationParameters FlockGenerationParams; // 0x2e0(0x70)
	struct FFlockMemberInitialConditions FlockInitialConditions; // 0x350(0x2c)
	char pad_37C[0x4]; // 0x37c(0x04)
	struct TArray<struct FFlockMemberInitialState> FlockInitialStates; // 0x380(0x10)
	struct FFlockingFadeParameters FadeParameters; // 0x390(0x34)
	bool bFlockFade; // 0x3c4(0x01)
	bool bEnablePersonalities; // 0x3c5(0x01)
	char pad_3C6[0x2]; // 0x3c6(0x02)
	struct FFlockPersonalities Personalities; // 0x3c8(0x180)
	char pad_548[0x88]; // 0x548(0x88)
	struct FFlockingParametersAdjustableBlend BlendFlockingParameters; // 0x5d0(0xc0)
	struct FVector LastFollowPos; // 0x690(0x0c)
	float Age; // 0x69c(0x04)
	float FlockFadeRadius; // 0x6a0(0x04)
	struct FVector FlockFadeCenter; // 0x6a4(0x0c)
	struct UMaterialInterface* FlockOriginalMaterial; // 0x6b0(0x08)
	struct UMaterialInstanceDynamic* FlockFadeMaterial; // 0x6b8(0x08)

	void StartFade(); // Function Phoenix.InstancedFlockingActor.StartFade // (Final|Native|Public|BlueprintCallable) // @ game+0x32ce290
	void SetFlockingStrength(float Strength); // Function Phoenix.InstancedFlockingActor.SetFlockingStrength // (Final|Native|Public|BlueprintCallable) // @ game+0x32ce210
	void SetAdjustableParameters(struct FFlockingParametersAdjustable Parameters, float BlendTimeSeconds); // Function Phoenix.InstancedFlockingActor.SetAdjustableParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x32ce050
	void Reset(); // Function Phoenix.InstancedFlockingActor.Reset // (Native|Public|BlueprintCallable) // @ game+0x31e1760
	void GetAdjustableParameters(struct FFlockingParametersAdjustable& Parameters); // Function Phoenix.InstancedFlockingActor.GetAdjustableParameters // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32cda00
	void Generate(); // Function Phoenix.InstancedFlockingActor.Generate // (Native|Public|BlueprintCallable) // @ game+0x31e1780
};

// Class Phoenix.Floo
// Size: 0x400 (Inherited: 0x248)
struct AFloo : AActor {
	char pad_248[0x10]; // 0x248(0x10)
	struct FString Name; // 0x258(0x10)
	struct FDbSingleColumnInfo RegionId; // 0x268(0x88)
	struct FDbSingleColumnInfo ForcedDestination; // 0x2f0(0x88)
	bool EnterCrouched; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	float EnterDistance; // 0x37c(0x04)
	struct FDbEditorButtonWidget AddButton; // 0x380(0x80)

	void ShowAvatar(bool bTF); // Function Phoenix.Floo.ShowAvatar // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2470
	void SetFlooSourceAnim(); // Function Phoenix.Floo.SetFlooSourceAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void SetAvailable(bool availableIn); // Function Phoenix.Floo.SetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1ef0
	void ReturnToGameCamera(); // Function Phoenix.Floo.ReturnToGameCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1eb0
	void PlayerSelectedFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerSelectedFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1c20
	void PlayerExitingFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerExitingFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1b90
	void PlayerExitedFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerExitedFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1b00
	void PlayerEnteringFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerEnteringFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1a70
	void PlayerEnteredFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerEnteredFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d19e0
	void PlayerDroppedFlooPowder(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerDroppedFlooPowder // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1950
	void PlayerCanceledFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.PlayerCanceledFloo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d18c0
	void OnSaveGameLoad(); // Function Phoenix.Floo.OnSaveGameLoad // (Final|Native|Public) // @ game+0x1074730
	bool IsForcedDestination(); // Function Phoenix.Floo.IsForcedDestination // (Final|Native|Public|BlueprintCallable) // @ game+0x32d16d0
	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.Floo.Interact // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e0b20
	void Handle_SetAvailable(bool availableIn); // Function Phoenix.Floo.Handle_SetAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerSelectedFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerSelectedFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerExitingFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerExitingFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerExitedFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerExitedFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerEnteringFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerEnteringFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerEnteredFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerEnteredFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerDroppedFlooPowder(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerDroppedFlooPowder // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_PlayerCanceledFloo(struct AActor* ActorUsingFloo); // Function Phoenix.Floo.Handle_PlayerCanceledFloo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_ActivateExitCamera(); // Function Phoenix.Floo.Handle_ActivateExitCamera // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_ActivateEnterCamera(); // Function Phoenix.Floo.Handle_ActivateEnterCamera // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct FString GetFlooName(); // Function Phoenix.Floo.GetFlooName // (Final|Native|Public|BlueprintCallable) // @ game+0x32d15c0
	bool GetAvailable(); // Function Phoenix.Floo.GetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1540
	void ActivateExitCamera(); // Function Phoenix.Floo.ActivateExitCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0b40
	void ActivateEnterCamera(); // Function Phoenix.Floo.ActivateEnterCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0b20
};

// Class Phoenix.FlooSelect
// Size: 0x388 (Inherited: 0x370)
struct UFlooSelect : UScreen {
	struct UVerticalBox* menuBox; // 0x370(0x08)
	struct AFloo* SourceFloo; // 0x378(0x08)
	struct UUserWidget* Button; // 0x380(0x08)

	void CreateButtonsC(); // Function Phoenix.FlooSelect.CreateButtonsC // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.FlooTarget
// Size: 0x2f8 (Inherited: 0x248)
struct AFlooTarget : ATargetPoint {
	char pad_248[0x8]; // 0x248(0x08)
	struct FText Name; // 0x250(0x18)
	struct FSlateBrush Icon; // 0x268(0x88)
	struct AEmitter* AvailableEmitter; // 0x2f0(0x08)

	void SetAvailable(bool availableIn); // Function Phoenix.FlooTarget.SetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1f80
	void Handle_SetAvailable(bool availableIn); // Function Phoenix.FlooTarget.Handle_SetAvailable // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool GetAvailable(); // Function Phoenix.FlooTarget.GetAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x1373de0
};

// Class Phoenix.WorldInteractObject
// Size: 0x2e8 (Inherited: 0x2b0)
struct AWorldInteractObject : AWorldObject {
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x2b0(0x08)
	struct UObject* AbilityClass; // 0x2b8(0x08)
	struct AActor* AbilitySpawnActorClass; // 0x2c0(0x08)
	struct FVector AbilitySpawnOffset; // 0x2c8(0x0c)
	struct FRotator AbilitySpawnRotationOffset; // 0x2d4(0x0c)
	struct URootMotionModProperties_Interact* InteractProperties; // 0x2e0(0x08)

	void InteractionInitiated(); // Function Phoenix.WorldInteractObject.InteractionInitiated // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FlyingBook
// Size: 0x308 (Inherited: 0x2e8)
struct AFlyingBook : AWorldInteractObject {
	float BookSpeed; // 0x2e8(0x04)
	float BookSpeedMod; // 0x2ec(0x04)
	struct USplineComponent* MainSplineReference; // 0x2f0(0x08)
	struct USphereComponent* BookRoot; // 0x2f8(0x08)
	float SplineLength; // 0x300(0x04)
	float DistanceAlongSpline; // 0x304(0x04)

	void Update(float DeltaTime); // Function Phoenix.FlyingBook.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2e30
	void RandomizeDistanceAlongSpline(); // Function Phoenix.FlyingBook.RandomizeDistanceAlongSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1d60
	void ActivateSpellReaction(bool newActivate); // Function Phoenix.FlyingBook.ActivateSpellReaction // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FlyingBroom
// Size: 0x980 (Inherited: 0x2a8)
struct AFlyingBroom : APawn {
	struct TMap<enum class EBroomMountErrorMessages, struct FName> BroomMountErrors; // 0x2a8(0x50)
	struct APawn* MountedCharacter; // 0x2f8(0x08)
	struct TWeakObjectPtr<struct ABroomActionSpline> BroomActionSpline; // 0x300(0x08)
	struct FVector LastDirection; // 0x308(0x0c)
	float ActiveScale; // 0x314(0x04)
	bool bScaleIn; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)
	struct UPhysicsAsset* BroomPhysicAssetForRiderCloth; // 0x320(0x08)
	struct FClothMountTargets ClothMountTargets; // 0x328(0x18)
	struct UCapsuleComponent* CapsuleComponent; // 0x340(0x08)
	struct USkeletalMeshComponent* BroomMeshComponent; // 0x348(0x08)
	struct USkeletalMeshComponent* BeaterMeshComponent; // 0x350(0x08)
	struct UFlyingBroomMovementComponent* MovementComponent; // 0x358(0x08)
	struct UMountStreamingComponent* MountStreamingComponent; // 0x360(0x08)
	struct UMountHeightLimitComponent* MountHeightLimitComponent; // 0x368(0x08)
	struct UAkComponent* AudioComponent; // 0x370(0x08)
	struct UAblAbility* PlayerMountAbility; // 0x378(0x08)
	struct UAblAbility* PlayerDismountDiveAbility; // 0x380(0x08)
	struct UAblAbility* PlayerDismountGroundAbility; // 0x388(0x08)
	struct UAblAbility* PlayerDismountGround2JogAbility; // 0x390(0x08)
	struct UAblAbility* PlayerDismountInstantAbility; // 0x398(0x08)
	struct UAblAbility* SwingBeaterAbility; // 0x3a0(0x08)
	struct UAblAbility* SwingBeaterBackhandAbility; // 0x3a8(0x08)
	struct UAblAbility* ThrowQuaffleAbility; // 0x3b0(0x08)
	struct UAblAbility* StudentHoverBroomFlyAbility; // 0x3b8(0x08)
	struct UAblAbility* StudentIdleAbility; // 0x3c0(0x08)
	struct TSoftObjectPtr<UAnimationArchitectAsset> BroomRiderAnims; // 0x3c8(0x28)
	struct UFlyingBroomAudio* FlyingBroomAudio; // 0x3f0(0x08)
	struct UCurveFloat* DeadZoneCurve; // 0x3f8(0x08)
	float DeadZone; // 0x400(0x04)
	float FastFlightInputEaseSpeed; // 0x404(0x04)
	struct FRuntimeFloatCurve FastFlightInputMagnitudeAdjustmentCurve; // 0x408(0x88)
	float GroundDismountHeight; // 0x490(0x04)
	float MinCollisionResponseSpeed; // 0x494(0x04)
	char pad_498[0x4]; // 0x498(0x04)
	float IdleBreakTime; // 0x49c(0x04)
	char pad_4A0[0x2e0]; // 0x4a0(0x2e0)
	float SpeedBoostUnavailableMessageTimeout; // 0x780(0x04)
	char pad_784[0x2c]; // 0x784(0x2c)
	enum class ECustomInterpType DecelerationInterpType; // 0x7b0(0x01)
	char pad_7B1[0x3]; // 0x7b1(0x03)
	float DecelerationInterpSpeed; // 0x7b4(0x04)
	char pad_7B8[0x108]; // 0x7b8(0x108)
	struct UTriggerEffect* pBoostTriggerEffect; // 0x8c0(0x08)
	struct UTriggerEffect* pSpeedUpTriggerEffect; // 0x8c8(0x08)
	struct UTriggerEffect* pInactiveTriggerEffect; // 0x8d0(0x08)
	struct AEnemyBroomRider_AiController* MountedAIControllerClass; // 0x8d8(0x08)
	struct AEnemyBroomRider_AiController* EnemyAIController; // 0x8e0(0x08)
	char pad_8E8[0x38]; // 0x8e8(0x38)
	struct UFlyingBroomPhysics* StudentDefaultFlightData; // 0x920(0x08)
	char pad_928[0x58]; // 0x928(0x58)

	void UpdateRTPCValue(float InRTPCValue, struct FString RTPC, struct FVector2D ValueRange, struct FVector2D AudioValueRange); // Function Phoenix.FlyingBroom.UpdateRTPCValue // (Final|Native|Protected|HasDefaults|BlueprintCallable|Const) // @ game+0x32d2f40
	void UpdateBroomAudio(struct UFlyingBroomAudio* BroomAudio); // Function Phoenix.FlyingBroom.UpdateBroomAudio // (Native|Event|Protected|BlueprintEvent) // @ game+0x32d2eb0
	bool Teleport(struct FVector DestLocation, float DestYaw, bool ResetCamera, bool TeleportPhysics); // Function Phoenix.FlyingBroom.Teleport // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32d2c90
	void SupressHoverDisabledUI(bool bDisable); // Function Phoenix.FlyingBroom.SupressHoverDisabledUI // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2c00
	void StartSettingMaxFlyHeightValue(float Value, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingMaxFlyHeightValue // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d2ae0
	void StartSettingForceHoverValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingForceHoverValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d29d0
	void StartSettingDismountAllowedValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingDismountAllowedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d28c0
	void StartSettingDisableInputValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingDisableInputValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d27b0
	void StartSettingDisableBarrelRollValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingDisableBarrelRollValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d26a0
	void StartSettingBoostAllowedValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.StartSettingBoostAllowedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2590
	void ShowBroomHUD(bool bShow); // Function Phoenix.FlyingBroom.ShowBroomHUD // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d2500
	void SetupPlayerOnBroom(struct ABiped_Player* BipedPlayer); // Function Phoenix.FlyingBroom.SetupPlayerOnBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x32d23e0
	void SetupBroomComponents(struct UCapsuleComponent* Capsule, struct UFlyingBroomMovementComponent* Movement, struct USkeletalMeshComponent* Mesh); // Function Phoenix.FlyingBroom.SetupBroomComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x32d22d0
	void SetSplineComponent(struct USplineComponent* InSplineComponent, bool bTeleportToStart); // Function Phoenix.FlyingBroom.SetSplineComponent // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d2200
	void SetScaleInfo(bool bInScaleIn, float InActiveScale); // Function Phoenix.FlyingBroom.SetScaleInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2120
	void SetMaxFlyingSpeed(float Speed); // Function Phoenix.FlyingBroom.SetMaxFlyingSpeed // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d20a0
	void SetForceLand(bool bInForceLand); // Function Phoenix.FlyingBroom.SetForceLand // (Final|Native|Public|BlueprintCallable) // @ game+0x32d2010
	void SafeDismountHeightCheck(); // Function Phoenix.FlyingBroom.SafeDismountHeightCheck // (Final|Native|Private) // @ game+0x32d1ed0
	void RemoveRiderClothCollisionSources(struct ACharacter* Character, bool bRemoveDelegates); // Function Phoenix.FlyingBroom.RemoveRiderClothCollisionSources // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1de0
	void PushFlightDataOntoStack(struct UFlyingBroomPhysics* NewFlightData); // Function Phoenix.FlyingBroom.PushFlightDataOntoStack // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d1cd0
	void PopFlightDataOffStack(); // Function Phoenix.FlyingBroom.PopFlightDataOffStack // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d1cb0
	void OnTurboStart(); // Function Phoenix.FlyingBroom.OnTurboStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnPlayerMountBroom(); // Function Phoenix.FlyingBroom.OnPlayerMountBroom // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnPlayerDismountBroom(); // Function Phoenix.FlyingBroom.OnPlayerDismountBroom // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnNPCMountBroom(); // Function Phoenix.FlyingBroom.OnNPCMountBroom // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnNPCDismountBroom(); // Function Phoenix.FlyingBroom.OnNPCDismountBroom // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnMountedNPCHiddenIsChanged(struct UScheduledEntity* inParticipant, bool inHidden); // Function Phoenix.FlyingBroom.OnMountedNPCHiddenIsChanged // (Final|Native|Public) // @ game+0x32d17f0
	void OnLeaveBoostZone(); // Function Phoenix.FlyingBroom.OnLeaveBoostZone // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnEnterBoostZone(); // Function Phoenix.FlyingBroom.OnEnterBoostZone // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBoostStart(); // Function Phoenix.FlyingBroom.OnBoostStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBarrelRollStart(bool bRollLeft); // Function Phoenix.FlyingBroom.OnBarrelRollStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnActorIsHiddenChanged(bool NewValue); // Function Phoenix.FlyingBroom.OnActorIsHiddenChanged // (Final|Native|Public) // @ game+0x32d1760
	bool IsInTurbo(); // Function Phoenix.FlyingBroom.IsInTurbo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d1740
	bool IsInHoverMode(); // Function Phoenix.FlyingBroom.IsInHoverMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d1720
	bool IsInBoost(); // Function Phoenix.FlyingBroom.IsInBoost // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d1700
	bool IsForceLanding(); // Function Phoenix.FlyingBroom.IsForceLanding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d16b0
	bool IsBoostRecharging(); // Function Phoenix.FlyingBroom.IsBoostRecharging // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d1690
	float GetMaxBoostMeter(); // Function Phoenix.FlyingBroom.GetMaxBoostMeter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x32d1660
	enum class EFlyingBroomHitObjectType GetLastHitObject(); // Function Phoenix.FlyingBroom.GetLastHitObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d1640
	enum class EBroomDismountType GetDismountType(); // Function Phoenix.FlyingBroom.GetDismountType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d15a0
	float GetBoostMeterAmount(); // Function Phoenix.FlyingBroom.GetBoostMeterAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x32d1570
	void FinishSettingMaxFlyHeightValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingMaxFlyHeightValue // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d1470
	void FinishSettingForceHoverValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingForceHoverValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d13a0
	void FinishSettingDismountAllowedValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingDismountAllowedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d12d0
	void FinishSettingDisableInputValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingDisableInputValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1200
	void FinishSettingDisableBarrelRollValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingDisableBarrelRollValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1130
	void FinishSettingBoostAllowedValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.FlyingBroom.FinishSettingBoostAllowedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x32d1060
	void EnableMovement(); // Function Phoenix.FlyingBroom.EnableMovement // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d1040
	void EnableMountedRiderIKSetup(bool bEnabled); // Function Phoenix.FlyingBroom.EnableMountedRiderIKSetup // (Final|Native|Private|BlueprintCallable|Const) // @ game+0x32d0fb0
	void DismountBroom(struct ABiped_Player* Player, bool Instant); // Function Phoenix.FlyingBroom.DismountBroom // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void DisableSpellHUD(bool DisableSpellHUD, bool DisableHealtHUD); // Function Phoenix.FlyingBroom.DisableSpellHUD // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void DisableMovement(); // Function Phoenix.FlyingBroom.DisableMovement // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32d0f90
	void DetachPlayerFromBroomOnDismount(struct ABiped_Player* BipedPlayer, struct AFlyingBroom* BroomProp, float VelocityDamping); // Function Phoenix.FlyingBroom.DetachPlayerFromBroomOnDismount // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0e70
	bool CanIdleBreak(); // Function Phoenix.FlyingBroom.CanIdleBreak // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d0e40
	void BroomEvent(struct FName EventName); // Function Phoenix.FlyingBroom.BroomEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0db0
	void AttachPlayerToBroomOnMount(struct ABiped_Player* BipedPlayer, struct AFlyingBroom* BroomProp, enum class EBroomMountType InMountType); // Function Phoenix.FlyingBroom.AttachPlayerToBroomOnMount // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0ca0
	void ApplyBroomStats(); // Function Phoenix.FlyingBroom.ApplyBroomStats // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool AllowDismount(); // Function Phoenix.FlyingBroom.AllowDismount // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0c70
	void AIMountBroom(struct ACharacter* Character, struct UFlyingBroomPhysics* FlightData); // Function Phoenix.FlyingBroom.AIMountBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0a30
	void AIDismountBroom(); // Function Phoenix.FlyingBroom.AIDismountBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0a10
	void AddRiderClothCollisionSources(struct ACharacter* Character); // Function Phoenix.FlyingBroom.AddRiderClothCollisionSources // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0be0
	void AddBoostPercentage(float Percent); // Function Phoenix.FlyingBroom.AddBoostPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0b60
	void AcceleratePressed(); // Function Phoenix.FlyingBroom.AcceleratePressed // (Final|Native|Public|BlueprintCallable) // @ game+0x32d0b00
};

// Class Phoenix.FlyingBroomStats
// Size: 0x68 (Inherited: 0x30)
struct UFlyingBroomStats : UDataAsset {
	float BarrelRollCooldown; // 0x30(0x04)
	float PassiveSpeedMultiplier; // 0x34(0x04)
	float BoostSpeedMultiplier; // 0x38(0x04)
	float MaxBoostAmount; // 0x3c(0x04)
	char pad_40[0x8]; // 0x40(0x08)
	struct TArray<struct FFlyingBroomBoostStat> BoostStats; // 0x48(0x10)
	float TurboSpeedMultiplier; // 0x58(0x04)
	float TurboGateBoostGain; // 0x5c(0x04)
	float TurboDecayRate; // 0x60(0x04)
	float PostTurboBoostAmount; // 0x64(0x04)
};

// Class Phoenix.FlyingBroomAudio
// Size: 0x90 (Inherited: 0x30)
struct UFlyingBroomAudio : UDataAsset {
	struct FString SpeedRTPC; // 0x30(0x10)
	struct FVector2D SpeedValues; // 0x40(0x08)
	struct FVector2D SpeedAudioValues; // 0x48(0x08)
	struct FString HeightRTPC; // 0x50(0x10)
	struct FVector2D HeightValues; // 0x60(0x08)
	struct FVector2D HeightAudioValues; // 0x68(0x08)
	struct FString PitchRTPC; // 0x70(0x10)
	struct FVector2D PitchValues; // 0x80(0x08)
	struct FVector2D PitchAudioValues; // 0x88(0x08)
};

// Class Phoenix.FlyingBroom_AnimInstance
// Size: 0x2d0 (Inherited: 0x2c0)
struct UFlyingBroom_AnimInstance : UAnimInstance {
	float Turn; // 0x2b8(0x04)
	float Lift; // 0x2bc(0x04)
	float Speed; // 0x2c0(0x04)
	bool bIsFlying; // 0x2c4(0x01)
	bool bBarrelRollLeft; // 0x2c5(0x01)
	bool bBarrelRollRight; // 0x2c6(0x01)
	bool bIsStrafing; // 0x2c7(0x01)
	bool bHasHitUnknown; // 0x2c8(0x01)
	bool bIsThrowingQuaffle; // 0x2c9(0x01)
	bool bHasHitCharacterOnBroom; // 0x2ca(0x01)
	bool bHasHitCreature; // 0x2cb(0x01)
	bool bHasHitCharacter; // 0x2cc(0x01)

	void AnimNotify_ThrowQuaffleFinished(); // Function Phoenix.FlyingBroom_AnimInstance.AnimNotify_ThrowQuaffleFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5b30
	void AnimNotify_CollisionResponseEnded(); // Function Phoenix.FlyingBroom_AnimInstance.AnimNotify_CollisionResponseEnded // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5b10
	void AnimNotify_BarrelRollExited(); // Function Phoenix.FlyingBroom_AnimInstance.AnimNotify_BarrelRollExited // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5af0
};

// Class Phoenix.FlyingBroomMovementComponent
// Size: 0x320 (Inherited: 0x150)
struct UFlyingBroomMovementComponent : UPawnMovementComponent {
	int32_t MaxSimulationIterations; // 0x150(0x04)
	float MaxSimulationTimeStep; // 0x154(0x04)
	struct UFlyingBroomPhysics* FlyingBroomPhysics; // 0x158(0x08)
	struct UFlyingBroomStats* FlyingBroomStats; // 0x160(0x08)
	bool bClearAccumulatedForces; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
	struct TArray<struct UFlyingBroomPhysics*> FlyingBroomPhysicsStack; // 0x170(0x10)
	struct UFlyingBroomPhysicsScratch* FlyingBroomPhysicsScratch; // 0x180(0x08)
	char pad_188[0x198]; // 0x188(0x198)
};

// Class Phoenix.FlyingBroomPhysicsScratch
// Size: 0x30 (Inherited: 0x28)
struct UFlyingBroomPhysicsScratch : UObject {
	struct UFlyingBroomMovementComponent* MovementComponent; // 0x28(0x08)
};

// Class Phoenix.FlyingBroomPhysics
// Size: 0x38 (Inherited: 0x30)
struct UFlyingBroomPhysics : UDataAsset {
	bool bDebugDraw; // 0x30(0x01)
	bool bDisablePhysics; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)

	void PhysicsUpdate(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch, float DeltaTime); // Function Phoenix.FlyingBroomPhysics.PhysicsUpdate // (Native|Public|BlueprintCallable) // @ game+0x32d67e0
	void PhysicsRemoved(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch); // Function Phoenix.FlyingBroomPhysics.PhysicsRemoved // (Native|Public|BlueprintCallable) // @ game+0x32d6710
	void PhysicsPostIteration(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch, struct FVector& Adjusted, float timeTick); // Function Phoenix.FlyingBroomPhysics.PhysicsPostIteration // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32d65a0
	struct FVector PhysicsIteration(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch, float timeTick); // Function Phoenix.FlyingBroomPhysics.PhysicsIteration // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32d6470
	void PhysicsAdded(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch); // Function Phoenix.FlyingBroomPhysics.PhysicsAdded // (Native|Public|BlueprintCallable) // @ game+0x32d63a0
	struct UFlyingBroomPhysicsScratch* CreateScratch(struct UFlyingBroomMovementComponent* InOwner); // Function Phoenix.FlyingBroomPhysics.CreateScratch // (Native|Public|BlueprintCallable) // @ game+0x32d5c80
	void AnimationUpdate(struct UFlyingBroomMovementComponent* FlyingBroomMovementComponent, struct UFlyingBroomPhysicsScratch* Scratch); // Function Phoenix.FlyingBroomPhysics.AnimationUpdate // (Native|Public|BlueprintCallable) // @ game+0x32d5b50
};

// Class Phoenix.FlyingBroomPhysicsScratch_FreeRoam
// Size: 0x138 (Inherited: 0x30)
struct UFlyingBroomPhysicsScratch_FreeRoam : UFlyingBroomPhysicsScratch {
	char pad_30[0x20]; // 0x30(0x20)
	struct UFlyingBroomPhysics_FreeRoam* PhysicsData; // 0x50(0x08)
	struct UFlyingBroomStats* StatsData; // 0x58(0x08)
	char pad_60[0xd8]; // 0x60(0xd8)
};

// Class Phoenix.FlyingBroomPhysics_FreeRoam
// Size: 0x230 (Inherited: 0x38)
struct UFlyingBroomPhysics_FreeRoam : UFlyingBroomPhysics {
	struct FFlyingBroomImpulseData HoverForwardImpulse; // 0x38(0x1c)
	struct FFlyingBroomImpulseData PassiveForwardImpulse; // 0x54(0x1c)
	struct FFlyingBroomImpulseData BoostForwardImpulse; // 0x70(0x1c)
	float ThrusterEaseHalflife; // 0x8c(0x04)
	struct FFlyingBroomImpulseData HoverVerticalImpulse; // 0x90(0x1c)
	struct FFlyingBroomImpulseData PassiveVerticalImpulse; // 0xac(0x1c)
	struct FFlyingBroomImpulseData BoostVerticalImpulse; // 0xc8(0x1c)
	struct FFlyingBroomImpulseData LateralImpulse; // 0xe4(0x1c)
	float ConformToGroundHeight; // 0x100(0x04)
	bool bUseWorldHeightForDangerZone; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	float DangerZoneFromGround; // 0x108(0x04)
	float DangerZoneWorldHeight; // 0x10c(0x04)
	float GroundBuffer; // 0x110(0x04)
	float CeilingBuffer; // 0x114(0x04)
	float ConformToGroundTime; // 0x118(0x04)
	struct FFlyingBroomImpulseData DangerZoneImpulse; // 0x11c(0x1c)
	struct FFlyingBroomImpulseData GroundBufferImpulse; // 0x138(0x1c)
	struct FFlyingBroomImpulseData CeilingBufferImpulse; // 0x154(0x1c)
	bool bDangerZoneIfNoGroundFound; // 0x170(0x01)
	char pad_171[0x3]; // 0x171(0x03)
	float HoverYawMinInterpSpeed; // 0x174(0x04)
	float HoverYawMaxInterpSpeed; // 0x178(0x04)
	float PassiveYawMinInterpSpeed; // 0x17c(0x04)
	float PassiveYawMaxInterpSpeed; // 0x180(0x04)
	float BoostYawMinInterpSpeed; // 0x184(0x04)
	float BoostYawMaxInterpSpeed; // 0x188(0x04)
	float TurboYawMinInterpSpeed; // 0x18c(0x04)
	float TurboYawMaxInterpSpeed; // 0x190(0x04)
	float YawSpringHalfLife; // 0x194(0x04)
	float MaxYawTurnAngle; // 0x198(0x04)
	float WallTraceLengthMax; // 0x19c(0x04)
	float WallTraceVerticalLengthMax; // 0x1a0(0x04)
	float WallTraceLengthStop; // 0x1a4(0x04)
	float VerticalImpulsePitch; // 0x1a8(0x04)
	float PitchInterpSpeed; // 0x1ac(0x04)
	float PitchSpringHalflife; // 0x1b0(0x04)
	float DelayBeforeMoving; // 0x1b4(0x04)
	float StartDirectionMatchTolerance; // 0x1b8(0x04)
	struct FFlyingBroomImpulseData TurboImpulse; // 0x1bc(0x1c)
	float InterpToMaxSpeedSpeed; // 0x1d8(0x04)
	enum class ECustomInterpType InterpToMaxSpeedType; // 0x1dc(0x01)
	char pad_1DD[0x3]; // 0x1dd(0x03)
	float HoverMaxAnimTurn; // 0x1e0(0x04)
	float PassiveMaxAnimTurn; // 0x1e4(0x04)
	float BoostMaxAnimTurn; // 0x1e8(0x04)
	float TurboMaxAnimTurn; // 0x1ec(0x04)
	float HoverAnimTurnHalflife; // 0x1f0(0x04)
	float FastAnimTurnHalflife; // 0x1f4(0x04)
	float MaxAnimThrusterForce; // 0x1f8(0x04)
	float AnimSpeedHalflife; // 0x1fc(0x04)
	float AnimUpDownHalflife; // 0x200(0x04)
	float ReactPushbackForceAmount; // 0x204(0x04)
	char pad_208[0x28]; // 0x208(0x28)
};

// Class Phoenix.FlyingBroomPhysicsScratch_Spline
// Size: 0x100 (Inherited: 0x30)
struct UFlyingBroomPhysicsScratch_Spline : UFlyingBroomPhysicsScratch {
	struct UFlyingBroomPhysics_Spline* PhysicsData; // 0x30(0x08)
	struct TWeakObjectPtr<struct USplineComponent> SplineComponent; // 0x38(0x08)
	char pad_40[0xc0]; // 0x40(0xc0)
};

// Class Phoenix.FlyingBroomPhysics_Spline
// Size: 0xb0 (Inherited: 0x38)
struct UFlyingBroomPhysics_Spline : UFlyingBroomPhysics {
	float SplineTravelMaxSpeed; // 0x38(0x04)
	float SplineTravelMinSpeed; // 0x3c(0x04)
	float SplineTravelTurboSpeed; // 0x40(0x04)
	float MaxHorizontalOffset; // 0x44(0x04)
	float HorizontalOffsetSpeed; // 0x48(0x04)
	float BarrelRollOffset; // 0x4c(0x04)
	float MaxVerticalOffsetUp; // 0x50(0x04)
	float MaxVerticalOffsetDown; // 0x54(0x04)
	float VerticalOffsetSpeed; // 0x58(0x04)
	float MaxYaw; // 0x5c(0x04)
	float YawInterpSpeed; // 0x60(0x04)
	enum class ECustomInterpType YawInterpType; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	float AnimYawInterpSpeed; // 0x68(0x04)
	enum class ECustomInterpType AnimYawInterpType; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	float MaxPitch; // 0x70(0x04)
	float PitchInterpSpeed; // 0x74(0x04)
	enum class ECustomInterpType PitchInterpType; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	float SplineForwardInterpSpeed; // 0x7c(0x04)
	enum class ECustomInterpType SplineForwardInterpType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float SplineOffsetInterpSpeed; // 0x84(0x04)
	enum class ECustomInterpType SplineOffsetInterpType; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float OrientToSplineSpeed; // 0x8c(0x04)
	float MaxAnimPitch; // 0x90(0x04)
	float MaxAnimYaw; // 0x94(0x04)
	float EnemyCriticalMinDistanceOffset; // 0x98(0x04)
	float EnemyMinDistanceOffset; // 0x9c(0x04)
	float EnemyMaxDistanceOffset; // 0xa0(0x04)
	float EnemyCriticalMaxDistanceOffset; // 0xa4(0x04)
	float CameraInterpSpeed; // 0xa8(0x04)
	enum class ECustomInterpType CameraInterpType; // 0xac(0x01)
	char pad_AD[0x3]; // 0xad(0x03)
};

// Class Phoenix.FlyingKeyCabinet
// Size: 0x248 (Inherited: 0x248)
struct AFlyingKeyCabinet : AActor {
};

// Class Phoenix.FlyingStairComponent
// Size: 0x590 (Inherited: 0x510)
struct UFlyingStairComponent : UStaticMeshComponent {
	struct FMulticastInlineDelegate OnStairBuilding; // 0x510(0x10)
	struct FMulticastInlineDelegate OnStairDemolishing; // 0x520(0x10)
	float TimeBeforeDemolitionWhenUnused; // 0x530(0x04)
	int32_t IndexForAutomaticChainBuilding; // 0x534(0x04)
	struct USkeletalMeshComponent* BuildingStairMesh; // 0x538(0x08)
	struct UAnimSequence* BuildingStairAnim; // 0x540(0x08)
	struct UAnimSequence* BuildingStairAnimCounter; // 0x548(0x08)
	struct USkeletalMeshComponent* DemolishingStairMesh; // 0x550(0x08)
	struct UAnimSequence* DemolishingStairAnim; // 0x558(0x08)
	struct UAnimSequence* DemolishingStairAnimCounter; // 0x560(0x08)
	bool bPlayPartOfAnim; // 0x568(0x01)
	char pad_569[0x27]; // 0x569(0x27)

	bool NeedsToBeBuilt(); // Function Phoenix.FlyingStairComponent.NeedsToBeBuilt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d5dd0
	bool IsBuilt(); // Function Phoenix.FlyingStairComponent.IsBuilt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32d5da0
	void Demolish(); // Function Phoenix.FlyingStairComponent.Demolish // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5d40
	void Build(); // Function Phoenix.FlyingStairComponent.Build // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5c20
};

// Class Phoenix.FlyingStairs
// Size: 0x2a8 (Inherited: 0x248)
struct AFlyingStairs : AActor {
	struct UCapsuleComponent* FlyingStairsArea; // 0x248(0x08)
	struct USkeletalMeshComponent* CloudMesh; // 0x250(0x08)
	float TimeForStairsToStayAtHeightDuringMovement; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TArray<struct AFlyingStairsChain*> FlyingStairsChain; // 0x260(0x10)
	float TimeForRandomlyBuildingStair; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct FMulticastInlineDelegate OnStairBuilding; // 0x278(0x10)
	struct FMulticastInlineDelegate OnStairDemolishing; // 0x288(0x10)
	char pad_298[0x10]; // 0x298(0x10)

	void DestroyRandomStairChain(); // Function Phoenix.FlyingStairs.DestroyRandomStairChain // (Final|Native|Private) // @ game+0x32d5d80
	void BuildRandomStairChain(); // Function Phoenix.FlyingStairs.BuildRandomStairChain // (Final|Native|Private) // @ game+0x32d5c60
};

// Class Phoenix.FlyingStairsChain
// Size: 0x2b0 (Inherited: 0x248)
struct AFlyingStairsChain : AActor {
	struct FMulticastInlineDelegate OnStairBuilding; // 0x248(0x10)
	struct FMulticastInlineDelegate OnStairDemolishing; // 0x258(0x10)
	struct UCapsuleComponent* FlyingStairsChainArea; // 0x268(0x08)
	float TimeBetweenAutomaticSequentialBuilding; // 0x270(0x04)
	int32_t SpeedOfStairsFromCloud; // 0x274(0x04)
	bool bBuildWholeChainWhenCharacterEntersRange; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
	struct TArray<struct FFlyingStairStatus> FlyingStairs; // 0x280(0x10)
	char pad_290[0x20]; // 0x290(0x20)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.FlyingStairsChain.OnOverlapEnd // (Final|Native|Private) // @ game+0x32d6240
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.FlyingStairsChain.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x32d6020
	void OnFlyingStairComponentDemolish(struct UFlyingStairComponent* FlyingStairComponent, float animationLength, float animationStartPosition); // Function Phoenix.FlyingStairsChain.OnFlyingStairComponentDemolish // (Final|Native|Private) // @ game+0x32d5f10
	void OnFlyingStairComponentBuild(struct UFlyingStairComponent* FlyingStairComponent, float animationLength, float animationStartPosition); // Function Phoenix.FlyingStairsChain.OnFlyingStairComponentBuild // (Final|Native|Private) // @ game+0x32d5e00
	void DemolishNext(); // Function Phoenix.FlyingStairsChain.DemolishNext // (Final|Native|Private) // @ game+0x32d5d60
	void BuildNext(); // Function Phoenix.FlyingStairsChain.BuildNext // (Final|Native|Private) // @ game+0x32d5c40
};

// Class Phoenix.FocusTrigger
// Size: 0x498 (Inherited: 0x250)
struct AFocusTrigger : ATriggerBox {
	enum class EFocusTriggerType FocusTriggerType; // 0x250(0x01)
	bool StartInactive; // 0x251(0x01)
	char pad_252[0x2]; // 0x252(0x02)
	struct TWeakObjectPtr<struct AActor> TheFocusActor; // 0x254(0x08)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct FDbSingleColumnInfo AttachToDBID; // 0x260(0x88)
	struct FVector TheAttachOffset; // 0x2e8(0x0c)
	struct FVector TheFocusOffset; // 0x2f4(0x0c)
	float TheFocusProbablity; // 0x300(0x04)
	float TheActionProbablity; // 0x304(0x04)
	float PlayerFocusProbablity; // 0x308(0x04)
	float PlayerActionProbablity; // 0x30c(0x04)
	struct FDbSingleColumnInfo TheReaction; // 0x310(0x88)
	char pad_398[0x8]; // 0x398(0x08)
	struct FDbSingleColumnInfo TheEmotion; // 0x3a0(0x88)
	char pad_428[0x70]; // 0x428(0x70)

	void SetTheReaction(enum class SocialActionTypes InSocialAction); // Function Phoenix.FocusTrigger.SetTheReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6e30
	void SetTheFocusProbablity(float InProbability); // Function Phoenix.FocusTrigger.SetTheFocusProbablity // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6d70
	void SetTheFocusOffset(struct FVector InFocusOffset); // Function Phoenix.FocusTrigger.SetTheFocusOffset // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32d6ce0
	void SetTheFocusActor(struct AActor* InFocusActor); // Function Phoenix.FocusTrigger.SetTheFocusActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6c40
	void SetTheEmotion(enum class SocialSemanticIDs InEmotion); // Function Phoenix.FocusTrigger.SetTheEmotion // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6bc0
	void SetTheActionProbablity(float InProbability); // Function Phoenix.FocusTrigger.SetTheActionProbablity // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6b00
	void SetPlayerFocusProbablity(float InProbability); // Function Phoenix.FocusTrigger.SetPlayerFocusProbablity // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6a40
	void SetPlayerActionProbablity(float InProbability); // Function Phoenix.FocusTrigger.SetPlayerActionProbablity // (Final|Native|Public|BlueprintCallable) // @ game+0x32d6980
	void SetAbsoluteExtents(struct FVector& InAbsoluteExtents); // Function Phoenix.FocusTrigger.SetAbsoluteExtents // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32d68f0
	void Deactivate(); // Function Phoenix.FocusTrigger.Deactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5d20
	void ActorOverlapEndOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.FocusTrigger.ActorOverlapEndOverlap // (Final|Native|Protected) // @ game+0x32d5990
	void ActorOverlapBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& OverlapInfo); // Function Phoenix.FocusTrigger.ActorOverlapBeginOverlap // (Final|Native|Protected|HasOutParms) // @ game+0x32d5770
	void Activate(); // Function Phoenix.FocusTrigger.Activate // (Final|Native|Public|BlueprintCallable) // @ game+0x32d5750
};

// Class Phoenix.MirroredFocusTrigger
// Size: 0x518 (Inherited: 0x498)
struct AMirroredFocusTrigger : AFocusTrigger {
	float MirroredFocusProbablity; // 0x498(0x04)
	float MirroredCalloutProbablity; // 0x49c(0x04)
	float MirroredPlayerFocusProbablity; // 0x4a0(0x04)
	float MirroredPlayerCalloutProbablity; // 0x4a4(0x04)
	struct FDialogueConversationReference CalloutEvent; // 0x4a8(0x10)
	bool bUseCalloutOffset; // 0x4b8(0x01)
	char pad_4B9[0x3]; // 0x4b9(0x03)
	struct FVector CalloutOffset; // 0x4bc(0x0c)
	char pad_4C8[0x50]; // 0x4c8(0x50)
};

// Class Phoenix.FatLadyMirroredFocusTrigger
// Size: 0x548 (Inherited: 0x518)
struct AFatLadyMirroredFocusTrigger : AMirroredFocusTrigger {
	struct FDialogueConversationReference CalloutEventNight; // 0x518(0x10)
	struct FDialogueConversationReference CalloutEventGryffindor; // 0x528(0x10)
	struct FDialogueConversationReference CalloutEventNonGryffindor; // 0x538(0x10)
};

// Class Phoenix.FoliageRemoverActorComponent
// Size: 0x128 (Inherited: 0xc8)
struct UFoliageRemoverActorComponent : UActorComponent {
	struct FVector BoxSize; // 0xc8(0x0c)
	char pad_D4[0x54]; // 0xd4(0x54)

	void SetBoxSize(struct FVector& Size); // Function Phoenix.FoliageRemoverActorComponent.SetBoxSize // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x32e60d0
	void RespawnFoliage(); // Function Phoenix.FoliageRemoverActorComponent.RespawnFoliage // (Final|Native|Public|BlueprintCallable) // @ game+0x32e6020
	void RemoveFoliage(); // Function Phoenix.FoliageRemoverActorComponent.RemoveFoliage // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5eb0
	struct FBox GetBoxInWorldSpace(); // Function Phoenix.FoliageRemoverActorComponent.GetBoxInWorldSpace // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x32e56f0
};

// Class Phoenix.FoliageRemoverBoundsComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UFoliageRemoverBoundsComponent : UBoxComponent {
	bool CanBeActivated; // 0x4a8(0x01)

	void RemoveVegetationInsideBounds(); // Function Phoenix.FoliageRemoverBoundsComponent.RemoveVegetationInsideBounds // (Final|Native|Public) // @ game+0x32e5f70
};

// Class Phoenix.FoliageRemoverContainer
// Size: 0xe8 (Inherited: 0x28)
struct UFoliageRemoverContainer : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UFoliageRemoverBoundsComponent*> ActiveFoliageRemoverBoundsComponents; // 0x30(0x10)
	struct TArray<struct UFoliageRemoverBoundsComponent*> PendingRegisterComponents; // 0x40(0x10)
	struct TArray<struct UFoliageRemoverBoundsComponent*> PendingUnregisterComponents; // 0x50(0x10)
	char pad_60[0x20]; // 0x60(0x20)
	struct TArray<struct UFoliageRemoverBoundsComponent*> RetryRemoveGrassComponents; // 0x80(0x10)
	struct TArray<struct UFoliageRemoverBoundsComponent*> RetryRemoveFoliageComponents; // 0x90(0x10)
	char pad_A0[0x10]; // 0xa0(0x10)
	struct UWorld* CachedWorld; // 0xb0(0x08)
	struct TArray<struct AInstancedFoliageActor*> CachedInstancedFoliageActors; // 0xb8(0x10)
	struct TArray<struct ALandscapeProxy*> CachedLandscapeProxies; // 0xc8(0x10)
	char pad_D8[0x10]; // 0xd8(0x10)

	void UnregisterFoliageRemoverBoundsComponent(struct UFoliageRemoverBoundsComponent* Component); // Function Phoenix.FoliageRemoverContainer.UnregisterFoliageRemoverBoundsComponent // (Final|Native|Public) // @ game+0x32e6210
	void RegisterFoliageRemoverBoundsComponent(struct UFoliageRemoverBoundsComponent* Component); // Function Phoenix.FoliageRemoverContainer.RegisterFoliageRemoverBoundsComponent // (Final|Native|Public) // @ game+0x32e5c90
	void OnAnyLevelLoaded(); // Function Phoenix.FoliageRemoverContainer.OnAnyLevelLoaded // (Final|Native|Public) // @ game+0x32e5990
};

// Class Phoenix.Foragable
// Size: 0x2c0 (Inherited: 0x2b0)
struct AForagable : AWorldObject {
	struct FMulticastInlineDelegate OnForageableCollected; // 0x2b0(0x10)

	bool ResetState(enum class EForageableState NextState); // Function Phoenix.Foragable.ResetState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32e5f90
	struct FName GetItemID(); // Function Phoenix.Foragable.GetItemID // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x32e5770
	int32_t GetItemCount(); // Function Phoenix.Foragable.GetItemCount // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x32e5740
};

// Class Phoenix.ForbiddenAreaVolume
// Size: 0x2a8 (Inherited: 0x248)
struct AForbiddenAreaVolume : AActor {
	struct UBoxComponent* CollisionComponent; // 0x248(0x08)
	char pad_250[0x30]; // 0x250(0x30)
	bool bIsActive; // 0x280(0x01)
	bool bDisableCompanion; // 0x281(0x01)
	enum class EForbiddenAreaSetting FilterSetting; // 0x282(0x01)
	char pad_283[0x5]; // 0x283(0x05)
	struct TArray<struct FForbiddenAreaSpecificNPC> SpecificNPCs; // 0x288(0x10)
	struct TArray<struct AActor*> Locators; // 0x298(0x10)

	void SetActive(bool bActive); // Function Phoenix.ForbiddenAreaVolume.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x32e6040
	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.ForbiddenAreaVolume.OnEndOverlap // (Final|Native|Public) // @ game+0x32e5b10
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.ForbiddenAreaVolume.OnBeginOverlap // (Final|Native|Public) // @ game+0x32e59b0
	void Deactivate(); // Function Phoenix.ForbiddenAreaVolume.Deactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5570
	void Activate(); // Function Phoenix.ForbiddenAreaVolume.Activate // (Final|Native|Public|BlueprintCallable) // @ game+0x32e52f0
};

// Class Phoenix.Force_TASChoice
// Size: 0x30 (Inherited: 0x28)
struct UForce_TASChoice : UNPC_TurnAssistStateChoice {
	enum class ENPC_TurnAssistState ForcedState; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Forced_MobilityChoice
// Size: 0x30 (Inherited: 0x28)
struct UForced_MobilityChoice : UNPC_MobilityChoice {
	enum class ENPC_Mobility Mobility; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.ForceRenderSettings
// Size: 0x260 (Inherited: 0x248)
struct AForceRenderSettings : AActor {
	struct TArray<struct FForceRenderSettingsCommand> Commands; // 0x248(0x10)
	bool bDisableAll; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)

	void QueryAll(); // Function Phoenix.ForceRenderSettings.QueryAll // (Final|Native|Public) // @ game+0x32e5c70
	bool IsPlayInEditor(); // Function Phoenix.ForceRenderSettings.IsPlayInEditor // (Final|Native|Public|BlueprintCallable) // @ game+0x32e58a0
	bool IsEditor(); // Function Phoenix.ForceRenderSettings.IsEditor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1039f30
	void ApplyNow(); // Function Phoenix.ForceRenderSettings.ApplyNow // (Final|Native|Public) // @ game+0x32e5530
	void Apply(enum class EForceRenderSettingsPhase Phase); // Function Phoenix.ForceRenderSettings.Apply // (Final|Native|Public|BlueprintCallable) // @ game+0x32e54b0
};

// Class Phoenix.ForageablePool
// Size: 0x80 (Inherited: 0x28)
struct UForageablePool : UObject {
	char pad_28[0x58]; // 0x28(0x58)
};

// Class Phoenix.ForegeableSpawnerManager
// Size: 0xb8 (Inherited: 0x28)
struct UForegeableSpawnerManager : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct UForageablePool* Pool; // 0x40(0x08)
	char pad_48[0x70]; // 0x48(0x70)

	void UnregisterInstance(struct AActor* Instance); // Function Phoenix.ForegeableSpawnerManager.UnregisterInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x32e62a0
	void RegisterInstance(struct AActor* Instance, bool bShouldSetInitialState); // Function Phoenix.ForegeableSpawnerManager.RegisterInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5d20
	void OnForageableCollected(struct AForagable* Actor); // Function Phoenix.ForegeableSpawnerManager.OnForageableCollected // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5be0
	void OnBreakableDestroyed(struct AActor* Actor); // Function Phoenix.ForegeableSpawnerManager.OnBreakableDestroyed // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5a80
	bool InDungeon(); // Function Phoenix.ForegeableSpawnerManager.InDungeon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32e5870
	struct UForegeableSpawnerManager* Get(); // Function Phoenix.ForegeableSpawnerManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32e56a0
};

// Class Phoenix.FreeStandingClock
// Size: 0x310 (Inherited: 0x2a8)
struct AFreeStandingClock : ATransfigurationObjectBase {
	struct USceneComponent* HandsComponent; // 0x2a8(0x08)
	struct UStaticMeshComponent* HourHand; // 0x2b0(0x08)
	struct UStaticMeshComponent* MinuteHand; // 0x2b8(0x08)
	char pad_2C0[0x44]; // 0x2c0(0x44)
	float HandRotateDuration; // 0x304(0x04)
	bool bHandsLookAtPlayer; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	void OnClockChime(); // Function Phoenix.FreeStandingClock.OnClockChime // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DoClockTick(); // Function Phoenix.FreeStandingClock.DoClockTick // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5590
};

// Class Phoenix.FrontEnd_MenuWidget
// Size: 0x380 (Inherited: 0x370)
struct UFrontEnd_MenuWidget : UScreen {
	struct TArray<struct FName> LevelNames; // 0x370(0x10)

	void SetMenuLegend(struct TArray<struct FLegendItemData>& LegendArray); // Function Phoenix.FrontEnd_MenuWidget.SetMenuLegend // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool ExecuteLoad(struct FString Filename, int32_t CharacterID); // Function Phoenix.FrontEnd_MenuWidget.ExecuteLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x32e55b0
};

// Class Phoenix.FrontendMapScript
// Size: 0x250 (Inherited: 0x250)
struct AFrontendMapScript : ALevelScriptActor {

	void GoToMenu(); // Function Phoenix.FrontendMapScript.GoToMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void GoToIntro(); // Function Phoenix.FrontendMapScript.GoToIntro // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FrontendSubsystem
// Size: 0xb8 (Inherited: 0x30)
struct UFrontendSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnTitleScreenReleased; // 0x30(0x10)
	char pad_40[0x78]; // 0x40(0x78)

	void ReleaseTitleScreen(struct UObject* LienHolder, struct FName LienholderName); // Function Phoenix.FrontendSubsystem.ReleaseTitleScreen // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32e5df0
	bool IsTitleScreenHeld(struct UObject* WorldContextObject); // Function Phoenix.FrontendSubsystem.IsTitleScreenHeld // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32e5900
	void HoldTitleScreen(struct UObject* LienHolder, struct FName LienholderName); // Function Phoenix.FrontendSubsystem.HoldTitleScreen // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32e57b0
};

// Class Phoenix.FrozenComponent
// Size: 0x210 (Inherited: 0x190)
struct UFrozenComponent : UStateEffectComponent {
	bool bStartFrozen; // 0x190(0x01)
	char pad_191[0x3]; // 0x191(0x03)
	float InitialDuration; // 0x194(0x04)
	struct FFrozenData FrozenData; // 0x198(0x38)
	struct TArray<struct AActor*> FrozenActors; // 0x1d0(0x10)
	char pad_1E0[0x30]; // 0x1e0(0x30)

	void SetupDelegate(); // Function Phoenix.FrozenComponent.SetupDelegate // (Final|Native|Private) // @ game+0x32e61f0
	bool RemoveFrozenActor(struct AActor* OutFrozenActor); // Function Phoenix.FrozenComponent.RemoveFrozenActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5ed0
	void OnBroken(struct AActor* Actor); // Function Phoenix.FrozenComponent.OnBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x31e6480
	void ClearFrozenActors(); // Function Phoenix.FrozenComponent.ClearFrozenActors // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5550
	void AddToInstanceList(struct AActor* InInstigator, int32_t InMaxObjectInstancesPerInstigator, int32_t InMaxCharacterInstancesPerInstigator); // Function Phoenix.FrozenComponent.AddToInstanceList // (Final|Native|Public|BlueprintCallable) // @ game+0x32e53a0
	void AddFrozenActor(struct AActor* InFrozenActor); // Function Phoenix.FrozenComponent.AddFrozenActor // (Final|Native|Public|BlueprintCallable) // @ game+0x32e5310
};

// Class Phoenix.FrozenInterface
// Size: 0x28 (Inherited: 0x28)
struct UFrozenInterface : UInterface {

	bool StartFreeze(struct AActor* Instigator, float Amount); // Function Phoenix.FrozenInterface.StartFreeze // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnThaw(struct AActor* Instigator); // Function Phoenix.FrozenInterface.OnThaw // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToFreeze(); // Function Phoenix.FrozenInterface.OnFailedToFreeze // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAttemptToFreeze(); // Function Phoenix.FrozenInterface.OnAttemptToFreeze // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.FXAutoTriggerPrerequisiteInLevel
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerPrerequisiteInLevel : UFXAutoTriggerPrerequisiteBase {
	struct FLerpVolumesLevelName Level; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerPrerequisiteInLevels
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerPrerequisiteInLevels : UFXAutoTriggerPrerequisiteBase {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerPrerequisiteNotInLevels
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerPrerequisiteNotInLevels : UFXAutoTriggerPrerequisiteBase {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerRequiredActorsPhoenixCharacters
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsPhoenixCharacters : UFXAutoTriggerRequiredActorsBase {
	bool bIncludePlayer; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerRequiredActorsPhoenixTier4Characters
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsPhoenixTier4Characters : UFXAutoTriggerRequiredActorsBase {
};

// Class Phoenix.FXAutoTriggerBoolInLevel
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolInLevel : UFXAutoTriggerBool {
	struct FLerpVolumesLevelName Level; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolInLevels
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolInLevels : UFXAutoTriggerBool {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarLerpVolumeEye
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarLerpVolumeEye : UFXAutoTriggerScalar {
	struct FLerpVolumesScalarName LerpVolumesScalar; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarLerpVolumeActor
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarLerpVolumeActor : UFXAutoTriggerScalar {
	struct FLerpVolumesScalarName LerpVolumesScalar; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolBlendDomainOne
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolBlendDomainOne : UFXAutoTriggerBool {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerBoolBlendDomainZero
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolBlendDomainZero : UFXAutoTriggerBool {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerBoolAllBlendDomainsOne
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolAllBlendDomainsOne : UFXAutoTriggerBool {
	struct TArray<struct FRenderSettingsPreComputedBlendDomainName> BlendDomains; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerBoolAllBlendDomainsZero
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolAllBlendDomainsZero : UFXAutoTriggerBool {
	struct TArray<struct FRenderSettingsPreComputedBlendDomainName> BlendDomains; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarBlendDomainEye
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerScalarBlendDomainEye : UFXAutoTriggerScalar {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarBlendDomainPlayer
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerScalarBlendDomainPlayer : UFXAutoTriggerScalar {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarBlendDomainActor
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerScalarBlendDomainActor : UFXAutoTriggerScalar {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerBoolGameLogicRequirement
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameLogicRequirement : UFXAutoTriggerBool {
	struct FName_GameLogicVarBool Requirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarGameLogicRequirementOnOff
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarGameLogicRequirementOnOff : UFXAutoTriggerScalar {
	struct FName_GameLogicVarBool Requirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarGameLogicRequirement
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarGameLogicRequirement : UFXAutoTriggerScalar {
	struct FName_GameLogicVarFloat Requirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolGameLogicResult
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameLogicResult : UFXAutoTriggerBool {
	struct FName_GameLogicBoolResult Result; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolGameLogicResultOnOff
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameLogicResultOnOff : UFXAutoTriggerScalar {
	struct FName_GameLogicBoolResult Result; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolActorExpression
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolActorExpression : UFXAutoTriggerBool {
	struct FName_GameLogicExpression ActorExpression; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarGameLogicPropositional
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarGameLogicPropositional : UFXAutoTriggerScalar {
	struct FName_GameLogicPropFloat Propositional; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarGameLogicPropositionalInt32
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarGameLogicPropositionalInt32 : UFXAutoTriggerScalar {
	struct FName_GameLogicPropInt32 Propositional; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolGameLogicPropositional
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameLogicPropositional : UFXAutoTriggerBool {
	struct FName_GameLogicPropFloat Propositional; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolGameLogicPropositionalInt32
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameLogicPropositionalInt32 : UFXAutoTriggerBool {
	struct FName_GameLogicPropInt32 Propositional; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerRequirement
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerRequirement : UFXAutoTriggerBool {
	struct FName_GameLogicVarBool PlayerRequirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerRequirementOnOff
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerRequirementOnOff : UFXAutoTriggerScalar {
	struct FName_GameLogicVarBool PlayerRequirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarPlayerRequirement
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerRequirement : UFXAutoTriggerScalar {
	struct FName_GameLogicVarFloat PlayerRequirement; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerResult
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerResult : UFXAutoTriggerBool {
	struct FName_GameLogicBoolResult PlayerResult; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerResultOnOff
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerResultOnOff : UFXAutoTriggerScalar {
	struct FName_GameLogicBoolResult PlayerResult; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerExpression
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerExpression : UFXAutoTriggerBool {
	struct FName_GameLogicExpression PlayerExpression; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolPlayerAiming
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerAiming : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarPlayerAiming
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerAiming : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerBoolSeason
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolSeason : UFXAutoTriggerBool {
	int32_t Seasons; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.FXAutoTriggerBoolInFrontend
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolInFrontend : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolNotInFrontend
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolNotInFrontend : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarSocialSemanticValue
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarSocialSemanticValue : UFXAutoTriggerScalar {
	enum class SocialSemanticIDs SemanticID; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerScalarSocialSemanticRemap
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerScalarSocialSemanticRemap : UFXAutoTriggerScalar {
	enum class SocialSemanticIDs SemanticID; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FVector2D SemanticInputStrength; // 0x2c(0x08)
	struct FVector2D OutputStrength; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.FXAutoTriggerBoolSocialSemanticValue
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolSocialSemanticValue : UFXAutoTriggerBool {
	enum class SocialSemanticIDs SemanticID; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t Value; // 0x2c(0x04)
};

// Class Phoenix.FXAutoTriggerBoolSocialSemanticValueEquals
// Size: 0x30 (Inherited: 0x30)
struct UFXAutoTriggerBoolSocialSemanticValueEquals : UFXAutoTriggerBoolSocialSemanticValue {
};

// Class Phoenix.FXAutoTriggerBoolSocialSemanticValueEGreaterThan
// Size: 0x30 (Inherited: 0x30)
struct UFXAutoTriggerBoolSocialSemanticValueEGreaterThan : UFXAutoTriggerBoolSocialSemanticValue {
};

// Class Phoenix.FXAutoTriggerBoolSocialSemanticValueLessThan
// Size: 0x30 (Inherited: 0x30)
struct UFXAutoTriggerBoolSocialSemanticValueLessThan : UFXAutoTriggerBoolSocialSemanticValue {
};

// Class Phoenix.FXAutoTriggerScalarEnvironmentalGlobal
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerScalarEnvironmentalGlobal : UFXAutoTriggerScalar {
	struct FEnvironmentalGlobalsScalarName EnvironmentalGlobal; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerLinearColorEnvironmentalGlobal
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerLinearColorEnvironmentalGlobal : UFXAutoTriggerLinearColor {
	struct FEnvironmentalGlobalsVectorOrColorName EnvironmentalGlobal; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarDistanceSquaredToCameraActor
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarDistanceSquaredToCameraActor : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarDistanceSquaredToCameraPlayer
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarDistanceSquaredToCameraPlayer : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarDistanceSquaredToPlayer
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarDistanceSquaredToPlayer : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerBoolWithinDistanceToCamera
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolWithinDistanceToCamera : UFXAutoTriggerBool {
	float DistanceInMeters; // 0x28(0x04)
	bool bInFrontOnly; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float MaxCameraDistanceSquared; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)

	void SetMaxCameraDistanceMeters(float MaxCameraDistanceMeters); // Function Phoenix.FXAutoTriggerBoolWithinDistanceToCamera.SetMaxCameraDistanceMeters // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x32e6160
};

// Class Phoenix.FXAutoTriggerBoolWithinDistanceToCameraPlayer
// Size: 0x38 (Inherited: 0x38)
struct UFXAutoTriggerBoolWithinDistanceToCameraPlayer : UFXAutoTriggerBoolWithinDistanceToCamera {
};

// Class Phoenix.FXAutoTriggerBoolWithinDistanceToCameraActor
// Size: 0x38 (Inherited: 0x38)
struct UFXAutoTriggerBoolWithinDistanceToCameraActor : UFXAutoTriggerBoolWithinDistanceToCamera {
};

// Class Phoenix.FXAutoTriggerBoolActorInFrontOfCamera
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolActorInFrontOfCamera : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolPlayerInFrontOfCamera
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolPlayerInFrontOfCamera : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolIsInWater
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolIsInWater : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarWaterLevelLocal
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarWaterLevelLocal : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarMaxWaterLevelLocal
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarMaxWaterLevelLocal : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarWaterDepth
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarWaterDepth : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarMaxWaterDepth
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarMaxWaterDepth : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarIsSwimming
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarIsSwimming : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarPlayerIsSwimming
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerIsSwimming : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarPlayerInCinematic
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerInCinematic : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarPlayerOnMount
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerOnMount : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarPlayerOnBroom
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerOnBroom : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarActorWorldZ
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarActorWorldZ : UFXAutoTriggerScalar {
	enum class EFXAutoTriggerZLocation Location; // 0x28(0x01)
	enum class EFXAutoTriggerZType Type; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.FXAutoTriggerScalarPlayerWorldZ
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerWorldZ : UFXAutoTriggerScalar {
	enum class EFXAutoTriggerZLocation Location; // 0x28(0x01)
	enum class EFXAutoTriggerZType Type; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.FXAutoTriggerScalarActorSpeed
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarActorSpeed : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarPlayerSpeed
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarPlayerSpeed : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerBoolActorMeshesDirty
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolActorMeshesDirty : UFXAutoTriggerBool {
	int32_t ThresholdFrames; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.SkinFXParameterDriverAutoFXScalar
// Size: 0x50 (Inherited: 0x28)
struct USkinFXParameterDriverAutoFXScalar : USkinFXParameterDriver {
	struct FSkinFXMaterialScalarProperty Parameter; // 0x28(0x08)
	struct UFXAutoTriggerScalar* AutoTriggerScalar; // 0x30(0x08)
	struct FRemapScalarRange RemapScalarRange; // 0x38(0x10)
	bool bUseRemapScalarRange; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.SkinFXParameterDriverAutoFXBool
// Size: 0x40 (Inherited: 0x28)
struct USkinFXParameterDriverAutoFXBool : USkinFXParameterDriver {
	struct FSkinFXMaterialScalarProperty Parameter; // 0x28(0x08)
	struct UFXAutoTriggerBool* AutoTriggerBool; // 0x30(0x08)
	float ValueIfFalse; // 0x38(0x04)
	float ValueIfTrue; // 0x3c(0x04)
};

// Class Phoenix.SkinFXParameterDriverAutoFXScalarMod
// Size: 0x50 (Inherited: 0x30)
struct USkinFXParameterDriverAutoFXScalarMod : USkinFXParameterDriverMod {
	struct UFXAutoTriggerScalar* AutoTriggerScalar; // 0x30(0x08)
	struct FRemapScalarRange RemapScalarRange; // 0x38(0x10)
	bool bUseRemapScalarRange; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.SkinFXParameterDriverAutoFXBoolMod
// Size: 0x40 (Inherited: 0x30)
struct USkinFXParameterDriverAutoFXBoolMod : USkinFXParameterDriverMod {
	struct UFXAutoTriggerBool* AutoTriggerBool; // 0x30(0x08)
	float ModIfFalse; // 0x38(0x04)
	float ModIfTrue; // 0x3c(0x04)
};

// Class Phoenix.SkinFXParameterDriverAutoTriggerBoolEndEffect
// Size: 0x38 (Inherited: 0x28)
struct USkinFXParameterDriverAutoTriggerBoolEndEffect : USkinFXParameterDriverEndEffect {
	struct UFXAutoTriggerBool* AutoTriggerBool; // 0x28(0x08)
	enum class ESkinFXEffectEndStyle EndStyle; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXAutoTriggerActorHasTag
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerActorHasTag : UFXAutoTriggerBool {
	struct FName ActorTag; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerActorNotHasTag
// Size: 0x30 (Inherited: 0x30)
struct UFXAutoTriggerActorNotHasTag : UFXAutoTriggerActorHasTag {
};

// Class Phoenix.FXAutoTriggerActorNotOSIHidden
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerActorNotOSIHidden : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerScalarSkinFXParameter
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerScalarSkinFXParameter : UFXAutoTriggerScalar {
	struct ASkinFXDefinition* Effect; // 0x28(0x08)
	struct FName Parameter; // 0x30(0x08)
	float DefaultValue; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.FXAutoTriggerBoolSkinFXActive
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolSkinFXActive : UFXAutoTriggerBool {
	struct ASkinFXDefinition* Effect; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolSkinFXAnyActive
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolSkinFXAnyActive : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolStencilEffectAnyActive
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolStencilEffectAnyActive : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolStencilEffectActive
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolStencilEffectActive : UFXAutoTriggerBool {
	struct FStencilManagerEffectName Effect; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolStencilEffectSubStringActive
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolStencilEffectSubStringActive : UFXAutoTriggerBool {
	struct FString EffectSubString; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerScalarStencilEffectActivePriority
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerScalarStencilEffectActivePriority : UFXAutoTriggerScalar {
};

// Class Phoenix.FXAutoTriggerScalarStencilEffectPriority
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarStencilEffectPriority : UFXAutoTriggerScalar {
	struct FStencilManagerEffectName Effect; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerScalarStencilEffectConstPriority
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerScalarStencilEffectConstPriority : UFXAutoTriggerScalar {
	enum class EStencilManagerEffectPriority Priority; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerBoolStencilEffectGroupActive
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolStencilEffectGroupActive : UFXAutoTriggerBool {
	struct FStencilManagerGroupName Group; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchSpecificNPC
// Size: 0xb8 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchSpecificNPC : UFXAutoTriggerRequiredActorsMatchBase {
	struct FDbSingleColumnInfo NPCKey; // 0x28(0x88)
	struct FName NPCKeyName; // 0xb0(0x08)
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchIsCompanion
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchIsCompanion : UFXAutoTriggerRequiredActorsMatchBase {
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchIsNPCCompanion
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchIsNPCCompanion : UFXAutoTriggerRequiredActorsMatchBase {
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchIsEnemyCompanion
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchIsEnemyCompanion : UFXAutoTriggerRequiredActorsMatchBase {
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchIsPlayerCompanion
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchIsPlayerCompanion : UFXAutoTriggerRequiredActorsMatchBase {
};

// Class Phoenix.FXAutoTriggerRequiredActorMatchIsPlayerLeadNPC
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorMatchIsPlayerLeadNPC : UFXAutoTriggerRequiredActorsMatchBase {
};

// Class Phoenix.FXAutoTriggerBoolIsDead
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolIsDead : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolAlive
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolAlive : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerPrerequisiteCurtainUp
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerPrerequisiteCurtainUp : UFXAutoTriggerPrerequisiteBase {
};

// Class Phoenix.FXAutoTriggerBoolIsCurrentPlayerTarget
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolIsCurrentPlayerTarget : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolIsSpecificNPC
// Size: 0xb8 (Inherited: 0x28)
struct UFXAutoTriggerBoolIsSpecificNPC : UFXAutoTriggerBool {
	struct FDbSingleColumnInfo NPCKey; // 0x28(0x88)
	struct FName NPCKeyName; // 0xb0(0x08)
};

// Class Phoenix.FXAutoTriggerRequiredActorsNPC
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsNPC : UFXAutoTriggerRequiredActorsBase {
	struct TArray<struct FName> ExcludeActorTags; // 0x28(0x10)
	bool bExcludePlayerCompanions; // 0x38(0x01)
	bool bExcludePlayerLeadNPC; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// Class Phoenix.FXAutoTriggerRequiredActorsFriendlyNPC
// Size: 0x40 (Inherited: 0x40)
struct UFXAutoTriggerRequiredActorsFriendlyNPC : UFXAutoTriggerRequiredActorsNPC {
};

// Class Phoenix.FXAutoTriggerRequiredActorsEnemyNPC
// Size: 0x40 (Inherited: 0x40)
struct UFXAutoTriggerRequiredActorsEnemyNPC : UFXAutoTriggerRequiredActorsNPC {
};

// Class Phoenix.FXAutoTriggerCustomCompaninonBuilder
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerCustomCompaninonBuilder : UObject {
};

// Class Phoenix.FXAutoTriggerCustomCompaninonBuilderNPC
// Size: 0xe8 (Inherited: 0x28)
struct UFXAutoTriggerCustomCompaninonBuilderNPC : UFXAutoTriggerCustomCompaninonBuilder {
	struct TSoftClassPtr<UObject> ActorType; // 0x28(0x28)
	struct UFXAutoTriggerBool* Rule; // 0x50(0x08)
	struct FDbSingleColumnInfo NPCKey; // 0x58(0x88)
	struct FName NPCKeyName; // 0xe0(0x08)
};

// Class Phoenix.FXAutoTriggerRequiredActorsCompanionNPC
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsCompanionNPC : UFXAutoTriggerRequiredActorsBase {
	struct TArray<struct UFXAutoTriggerCustomCompaninonBuilder*> CustomCompaninonBuilders; // 0x28(0x10)
	bool bIncludePlayerLeadNPC; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.FXAutoTriggerRequiredActorsCreatures
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsCreatures : UFXAutoTriggerRequiredActorsBase {
};

// Class Phoenix.FXAutoTriggerBoolActivePlayerMount
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolActivePlayerMount : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerRequiredActorsActivePlayerMount
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsActivePlayerMount : UFXAutoTriggerRequiredActorsBase {
};

// Class Phoenix.FXAutoTriggerRequiredActorsMounts
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsMounts : UFXAutoTriggerRequiredActorsBase {
	bool bExcludeActivePlayerMount; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerBoolHasSenseGroup
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolHasSenseGroup : UFXAutoTriggerBool {
	struct TArray<struct TSoftClassPtr<UObject>> Senses; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTest
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTest : UObject {
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestNot
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestNot : UFXAutoTriggerCognitionStimuliTest {
	struct UFXAutoTriggerCognitionStimuliTest* Test; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestAnd
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestAnd : UFXAutoTriggerCognitionStimuliTest {
	struct TArray<struct UFXAutoTriggerCognitionStimuliTest*> Tests; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestOr
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestOr : UFXAutoTriggerCognitionStimuliTest {
	struct TArray<struct UFXAutoTriggerCognitionStimuliTest*> Tests; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestHasSense
// Size: 0x50 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestHasSense : UFXAutoTriggerCognitionStimuliTest {
	struct TSoftClassPtr<UObject> Sense; // 0x28(0x28)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestHasSenseFromList
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestHasSenseFromList : UFXAutoTriggerCognitionStimuliTest {
	struct TArray<struct TSoftClassPtr<UObject>> Senses; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestSocialCombatMode
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestSocialCombatMode : UFXAutoTriggerCognitionStimuliTest {
	enum class ESocialCombatMode SocialCombatMode; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestAnySocialCombatMode
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestAnySocialCombatMode : UFXAutoTriggerCognitionStimuliTest {
	struct TArray<enum class ESocialCombatMode> SocialCombatModes; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestCalloutAction
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestCalloutAction : UFXAutoTriggerCognitionStimuliTest {
	enum class ECalloutActions CalloutAction; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestAnyCalloutAction
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestAnyCalloutAction : UFXAutoTriggerCognitionStimuliTest {
	struct TArray<enum class ECalloutActions> CalloutActions; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestGrayedOut
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestGrayedOut : UFXAutoTriggerCognitionStimuliTest {
};

// Class Phoenix.FXAutoTriggerCognitionStimuliTestNotGrayedOut
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerCognitionStimuliTestNotGrayedOut : UFXAutoTriggerCognitionStimuliTest {
};

// Class Phoenix.FXAutoTriggerBoolCognitionStimuliTest
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolCognitionStimuliTest : UFXAutoTriggerBool {
	struct UFXAutoTriggerCognitionStimuliTest* Test; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilter
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilter : UObject {
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterNot
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterNot : UFXAutoTriggerInteractibleItemsFilter {
	struct UFXAutoTriggerInteractibleItemsFilter* Filter; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterAnd
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterAnd : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<struct UFXAutoTriggerInteractibleItemsFilter*> Filters; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterOr
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterOr : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<struct UFXAutoTriggerInteractibleItemsFilter*> Filters; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterCurrentTarget
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterCurrentTarget : UFXAutoTriggerInteractibleItemsFilter {
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterIsState
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterIsState : UFXAutoTriggerInteractibleItemsFilter {
	enum class EInteractiveState State; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterIsStateFromList
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterIsStateFromList : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<enum class EInteractiveState> States; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterHasSense
// Size: 0x50 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterHasSense : UFXAutoTriggerInteractibleItemsFilter {
	struct TSoftClassPtr<UObject> Sense; // 0x28(0x28)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterHasSenseFromList
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterHasSenseFromList : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<struct TSoftClassPtr<UObject>> Senses; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterHasTag
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterHasTag : UFXAutoTriggerInteractibleItemsFilter {
	struct FName Tag; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterNotHasTag
// Size: 0x30 (Inherited: 0x30)
struct UFXAutoTriggerInteractibleItemsFilterNotHasTag : UFXAutoTriggerInteractibleItemsFilterHasTag {
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterNotOSIHidden
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterNotOSIHidden : UFXAutoTriggerInteractibleItemsFilter {
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterActorClass
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterActorClass : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<struct TSoftClassPtr<UObject>> OfActorTypes; // 0x28(0x10)
	bool bIncludeSubclasses; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.FXAutoTriggerInteractibleItemsFilterNotActorClass
// Size: 0x40 (Inherited: 0x28)
struct UFXAutoTriggerInteractibleItemsFilterNotActorClass : UFXAutoTriggerInteractibleItemsFilter {
	struct TArray<struct TSoftClassPtr<UObject>> NotOfActorTypes; // 0x28(0x10)
	bool bIncludeSubclasses; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.FXAutoTriggerRequiredActorsInteractibleItems
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsInteractibleItems : UFXAutoTriggerRequiredActorsBase {
	struct UFXAutoTriggerInteractibleItemsFilter* Filter; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolIsInteractibleItem
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolIsInteractibleItem : UFXAutoTriggerBool {
	struct UFXAutoTriggerInteractibleItemsFilter* Filter; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolLockable
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolLockable : UFXAutoTriggerBool {
};

// Class Phoenix.FXAutoTriggerBoolLockableIsLocked
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolLockableIsLocked : UFXAutoTriggerBoolLockable {
};

// Class Phoenix.FXAutoTriggerBoolLockableIsUnlocked
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolLockableIsUnlocked : UFXAutoTriggerBoolLockable {
};

// Class Phoenix.FXAutoTriggerBoolCanPlayerOpenLockable
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolCanPlayerOpenLockable : UFXAutoTriggerBoolLockable {
	bool bCheckIfLockedFirst; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerBoolCanPlayerUseAlohomora
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolCanPlayerUseAlohomora : UFXAutoTriggerBoolLockable {
	bool bCheckIfLockedFirst; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerBoolCanOpenLockable
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerBoolCanOpenLockable : UFXAutoTriggerBoolLockable {
};

// Class Phoenix.ActorMeshSetupMatchSpecificNPC
// Size: 0xb8 (Inherited: 0x28)
struct UActorMeshSetupMatchSpecificNPC : UActorMeshSetupMatch {
	struct FDbSingleColumnInfo NPCKey; // 0x28(0x88)
	struct FName NPCKeyName; // 0xb0(0x08)
};

// Class Phoenix.ActorMeshSetupMatchCustomizableCharacterType
// Size: 0x38 (Inherited: 0x28)
struct UActorMeshSetupMatchCustomizableCharacterType : UActorMeshSetupMatch {
	struct TArray<struct FName> Types; // 0x28(0x10)
};

// Class Phoenix.ActorMeshSetupMatchCustomizableCharacterID
// Size: 0x38 (Inherited: 0x28)
struct UActorMeshSetupMatchCustomizableCharacterID : UActorMeshSetupMatch {
	struct TArray<struct FName> IDs; // 0x28(0x10)
};

// Class Phoenix.ActorMeshSetupMatchInLevel
// Size: 0x30 (Inherited: 0x28)
struct UActorMeshSetupMatchInLevel : UActorMeshSetupMatch {
	struct FLerpVolumesLevelName Level; // 0x28(0x08)
};

// Class Phoenix.ActorMeshSetupMatchInLevels
// Size: 0x38 (Inherited: 0x28)
struct UActorMeshSetupMatchInLevels : UActorMeshSetupMatch {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.ActorMeshSetupMatchNotInLevels
// Size: 0x38 (Inherited: 0x28)
struct UActorMeshSetupMatchNotInLevels : UActorMeshSetupMatch {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.Game_PerceptionComponent
// Size: 0x1a8 (Inherited: 0x1a8)
struct UGame_PerceptionComponent : UAIPerceptionComponent {
};

// Class Phoenix.RenderSettingsCustomBlendDomainCurtainDown
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainCurtainDown : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainFadeToBlack
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainFadeToBlack : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainInCinematicCamera
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainInCinematicCamera : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainPlayerInCinematic
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainPlayerInCinematic : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainInLevel
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainInLevel : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainInFrontend
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainInFrontend : URenderSettingsCustomBlendDomainInLevel {
};

// Class Phoenix.RenderSettingsCustomBlendDomainInSanctuary
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainInSanctuary : URenderSettingsCustomBlendDomainInLevel {
};

// Class Phoenix.CustomBlendDomainPhoenixScalability
// Size: 0x28 (Inherited: 0x28)
struct UCustomBlendDomainPhoenixScalability : URenderSettingsCustomBlendDomainBase {
};

// Class Phoenix.CustomBlendDomainPhoenixPlatform
// Size: 0x28 (Inherited: 0x28)
struct UCustomBlendDomainPhoenixPlatform : URenderSettingsCustomBlendDomainBase {
};

// Class Phoenix.RenderSettingsCustomBlendDomainSecondaryWorld
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainSecondaryWorld : URenderSettingsCustomBlendDomain {
};

// Class Phoenix.RenderSettingsCustomBlendDomainSecondaryWorldSmoothed
// Size: 0x28 (Inherited: 0x28)
struct URenderSettingsCustomBlendDomainSecondaryWorldSmoothed : URenderSettingsCustomBlendDomainSecondaryWorld {
};

// Class Phoenix.DynamicLightAdaptationModSettingsInLevelBase
// Size: 0x38 (Inherited: 0x28)
struct UDynamicLightAdaptationModSettingsInLevelBase : UDynamicLightAdaptationModSettingsInterface {
	struct FLerpVolumesLevelName LevelName; // 0x28(0x08)
	bool bSearchFullLevelNames; // 0x30(0x01)
	enum class ELightAdapatationEVModOp ModOp; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.DynamicLightAdaptationModSettingsInLevel
// Size: 0x40 (Inherited: 0x38)
struct UDynamicLightAdaptationModSettingsInLevel : UDynamicLightAdaptationModSettingsInLevelBase {
	float EVAmount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.DynamicLightAdaptationModSettingsInLevelDayOnly
// Size: 0x40 (Inherited: 0x38)
struct UDynamicLightAdaptationModSettingsInLevelDayOnly : UDynamicLightAdaptationModSettingsInLevelBase {
	float EVAmount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.DynamicLightAdaptationModSettingsInLevelNightOnly
// Size: 0x40 (Inherited: 0x38)
struct UDynamicLightAdaptationModSettingsInLevelNightOnly : UDynamicLightAdaptationModSettingsInLevelBase {
	float EVAmount; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.DynamicLightAdaptationModSettingsInLevelDayNight
// Size: 0x40 (Inherited: 0x38)
struct UDynamicLightAdaptationModSettingsInLevelDayNight : UDynamicLightAdaptationModSettingsInLevelBase {
	float DayEVAmount; // 0x38(0x04)
	float NightEVAmount; // 0x3c(0x04)
};

// Class Phoenix.ExposureExpressionsBlendDomainScalarValue
// Size: 0x30 (Inherited: 0x28)
struct UExposureExpressionsBlendDomainScalarValue : UExposureExpressionsScalarValue {
	float DefaultValue; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.ExposureExpressionsPreComputedBlendDomainNamedScalarValue
// Size: 0x38 (Inherited: 0x30)
struct UExposureExpressionsPreComputedBlendDomainNamedScalarValue : UExposureExpressionsBlendDomainScalarValue {
	struct FRenderSettingsCustomBlendDomainName BlendDomain; // 0x30(0x08)
};

// Class Phoenix.ExposureExpressionsCustomBlendDomainScalarValue
// Size: 0x38 (Inherited: 0x30)
struct UExposureExpressionsCustomBlendDomainScalarValue : UExposureExpressionsBlendDomainScalarValue {
	struct URenderSettingsCustomBlendDomain* BlendDomain; // 0x30(0x08)
};

// Class Phoenix.SceneRigGameOptionsAsset
// Size: 0x88 (Inherited: 0x30)
struct USceneRigGameOptionsAsset : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	enum class ESceneRigCategory ExperienceCategory; // 0x38(0x01)
	bool bDisableAllIK; // 0x39(0x01)
	bool bDisableCameraTransparency; // 0x3a(0x01)
	bool bDisablePlayerControl; // 0x3b(0x01)
	bool bPauseStreaming; // 0x3c(0x01)
	bool bDisableInteriorExterior; // 0x3d(0x01)
	bool bDisableCognitionHilighting; // 0x3e(0x01)
	bool bDisableCharactersInSceneTargetableByAi; // 0x3f(0x01)
	enum class EStandardManagedPriority CharactersInSceneTargetableByAiPriority; // 0x40(0x01)
	enum class EStandardManagedPriority MuteMissionGossipPriority; // 0x41(0x01)
	bool bMuteMissionGossip; // 0x42(0x01)
	bool bUntetherSeatFillerFillRate; // 0x43(0x01)
	bool bDisablePauseMenu; // 0x44(0x01)
	bool bDisableCameraShake; // 0x45(0x01)
	bool bHideNonCinematicElements; // 0x46(0x01)
	bool bPauseComboTimeout; // 0x47(0x01)
	bool bDisablePhotoMode; // 0x48(0x01)
	bool bPauseNotifications; // 0x49(0x01)
	char pad_4A[0x2]; // 0x4a(0x02)
	int32_t AudioPriorityCutoffOverride; // 0x4c(0x04)
	int32_t AudioPrioritySuppressOverride; // 0x50(0x04)
	int32_t PauseStreamingPlatforms; // 0x54(0x04)
	int32_t PausePopulationManager; // 0x58(0x04)
	int32_t PauseKnowledgeSavings; // 0x5c(0x04)
	int32_t PauseInteractionSystem; // 0x60(0x04)
	int32_t PauseWorldEvents; // 0x64(0x04)
	int32_t PauseBeaconSystem; // 0x68(0x04)
	int32_t PauseFootPlantEffects; // 0x6c(0x04)
	int32_t PauseEnemyAIComponent; // 0x70(0x04)
	struct FWeatherSurfaceCharacterFXStateReset PrecipitationState; // 0x74(0x02)
	char pad_76[0x2]; // 0x76(0x02)
	float PrecipitationPercentage; // 0x78(0x04)
	float PrecipitationFadeTime; // 0x7c(0x04)
	float MaxWindSpeed; // 0x80(0x04)
	bool bSetPrecipitationState; // 0x84(0x01)
	bool bSetMaxWindSpeed; // 0x85(0x01)
	char pad_86[0x2]; // 0x86(0x02)
};

// Class Phoenix.SceneRigGameOptions
// Size: 0x28 (Inherited: 0x28)
struct USceneRigGameOptions : UInterface {
};

// Class Phoenix.GameOverScreenBase
// Size: 0x378 (Inherited: 0x370)
struct UGameOverScreenBase : UScreen {
	enum class EUIGameOverReason MyReason; // 0x370(0x01)
	char pad_371[0x7]; // 0x371(0x07)

	void ShowLoadSaveResultPopup(struct FString ResultMessage, float Duration); // Function Phoenix.GameOverScreenBase.ShowLoadSaveResultPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetRestartButtonText(struct FString ButtonText); // Function Phoenix.GameOverScreenBase.SetRestartButtonText // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetGameOverReason(enum class EUIGameOverReason Reason); // Function Phoenix.GameOverScreenBase.SetGameOverReason // (Final|Native|Public) // @ game+0x32e90e0
	void CannotAbandonQuest(); // Function Phoenix.GameOverScreenBase.CannotAbandonQuest // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.GamepadCursorSettings
// Size: 0x110 (Inherited: 0x38)
struct UGamepadCursorSettings : UDeveloperSettings {
	struct FRuntimeFloatCurve AnalogCursorAccelerationCurve; // 0x38(0x88)
	float MaxAnalogCursorSpeed; // 0xc0(0x04)
	float MaxAnalogCursorSpeedWhenHovered; // 0xc4(0x04)
	float AnalogCursorDragCoefficient; // 0xc8(0x04)
	float AnalogCursorDragCoefficientWhenHovered; // 0xcc(0x04)
	float MinAnalogCursorSpeed; // 0xd0(0x04)
	float AnalogCursorDeadZone; // 0xd4(0x04)
	float MinTimeToMaximumVelocity; // 0xd8(0x04)
	float AnalogCursorAccelerationMultiplier; // 0xdc(0x04)
	float AnalogCursorSize; // 0xe0(0x04)
	bool bUseEngineAnalogCursor; // 0xe4(0x01)
	bool bAnalogCursorNoAcceleration; // 0xe5(0x01)
	char pad_E6[0x2]; // 0xe6(0x02)
	float TouchpadLerpSpeed; // 0xe8(0x04)
	float TouchpadScalarZone; // 0xec(0x04)
	float TouchpadDeadZone; // 0xf0(0x04)
	float TouchpadDeadZoneWhenHovered; // 0xf4(0x04)
	char pad_F8[0x18]; // 0xf8(0x18)
};

// Class Phoenix.GameplaySettingsWidget
// Size: 0x3c8 (Inherited: 0x3c8)
struct UGameplaySettingsWidget : UTabPageWidget {

	void SuppressDifficultySetting(); // Function Phoenix.GameplaySettingsWidget.SuppressDifficultySetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.GameplayTagLibrary
// Size: 0x498 (Inherited: 0x30)
struct UGameplayTagLibrary : UDataAsset {
	struct FGameplayTag BleedingTag; // 0x30(0x08)
	struct FGameplayTag ChannelingTag; // 0x38(0x08)
	struct FGameplayTag CharacterHighPostImpactVelocity; // 0x40(0x08)
	struct FGameplayTag ChargingTag; // 0x48(0x08)
	struct FGameplayTag CharredTag; // 0x50(0x08)
	struct FGameplayTag CriticalHealthTag; // 0x58(0x08)
	struct FGameplayTag DeadTag; // 0x60(0x08)
	struct FGameplayTag DazedTag; // 0x68(0x08)
	struct FGameplayTag FallingTag; // 0x70(0x08)
	struct FGameplayTag FinisherTag; // 0x78(0x08)
	struct FGameplayTag InAirTag; // 0x80(0x08)
	struct FGameplayTag InvulnerableTag; // 0x88(0x08)
	struct FGameplayTag NearDeathKneelTag; // 0x90(0x08)
	struct FGameplayTag InstantDeathTag; // 0x98(0x08)
	struct FGameplayTag OverkilledTag; // 0xa0(0x08)
	struct FGameplayTag OnFireTag; // 0xa8(0x08)
	struct FGameplayTag MarkedTag; // 0xb0(0x08)
	struct FGameplayTag RagdollTag; // 0xb8(0x08)
	struct FGameplayTag SentTag; // 0xc0(0x08)
	struct FGameplayTag WeakTag; // 0xc8(0x08)
	struct FGameplayTag UnawareTag; // 0xd0(0x08)
	struct FGameplayTag VulnerableTag; // 0xd8(0x08)
	struct FGameplayTag PlayStrongAttackBeforeDeathTag; // 0xe0(0x08)
	struct FGameplayTag ArrestedTag; // 0xe8(0x08)
	struct FGameplayTag ConfoundedTag; // 0xf0(0x08)
	struct FGameplayTag CrucioedTag; // 0xf8(0x08)
	struct FGameplayTag FrozenTag; // 0x100(0x08)
	struct FGameplayTag ImperiusedTag; // 0x108(0x08)
	struct FGameplayTag LevitatedTag; // 0x110(0x08)
	struct FGameplayTag PetrifiedTag; // 0x118(0x08)
	struct FGameplayTag LaidOutTag; // 0x120(0x08)
	struct FGameplayTag GettingUpTag; // 0x128(0x08)
	struct FGameplayTag ArmedStatusTag; // 0x130(0x08)
	struct FGameplayTag UnarmedStatusTag; // 0x138(0x08)
	struct FGameplayTag ShieldedStatusTag; // 0x140(0x08)
	struct FGameplayTag UnshieldedStatusTag; // 0x148(0x08)
	struct FGameplayTag AttackLightTag; // 0x150(0x08)
	struct FGameplayTag AttackMediumTag; // 0x158(0x08)
	struct FGameplayTag AttackHeavyTag; // 0x160(0x08)
	struct FGameplayTag CompleteDeathTag; // 0x168(0x08)
	struct FGameplayTag BreakBlockUnawareTag; // 0x170(0x08)
	struct FGameplayTag BreakBlockPygmyPerkTag; // 0x178(0x08)
	struct FGameplayTag CuttingTag; // 0x180(0x08)
	struct FGameplayTag CharringBlowTag; // 0x188(0x08)
	struct FGameplayTag CompanionInstigatorTag; // 0x190(0x08)
	struct FGameplayTag DeathBlowTag; // 0x198(0x08)
	struct FGameplayTag DeflectedTag; // 0x1a0(0x08)
	struct FGameplayTag FinisherImpactTag; // 0x1a8(0x08)
	struct FGameplayTag FireImpactTag; // 0x1b0(0x08)
	struct FGameplayTag HighPostImpactVelocity; // 0x1b8(0x08)
	struct FGameplayTag ImpactByCharacter; // 0x1c0(0x08)
	struct FGameplayTag ImpactStrengthLightTag; // 0x1c8(0x08)
	struct FGameplayTag ImpactStrengthHeavyTag; // 0x1d0(0x08)
	struct FGameplayTag LeviosoTag; // 0x1d8(0x08)
	struct FGameplayTag MeleeTag; // 0x1e0(0x08)
	struct FGameplayTag NoInReactionAdjustment; // 0x1e8(0x08)
	struct FGameplayTag ObjectBroke; // 0x1f0(0x08)
	struct FGameplayTag OppugnoImpactTag; // 0x1f8(0x08)
	struct FGameplayTag OverkillBlowTag; // 0x200(0x08)
	struct FGameplayTag PerfectParry; // 0x208(0x08)
	struct FGameplayTag PhysicsImpactTag; // 0x210(0x08)
	struct FGameplayTag PopupImpactTag; // 0x218(0x08)
	struct FGameplayTag ProtogoIgnoreImpactTag; // 0x220(0x08)
	struct FGameplayTag ShockwaveImpactTag; // 0x228(0x08)
	struct FGameplayTag SuperAttackTag; // 0x230(0x08)
	struct FGameplayTag SustainedBlastTag; // 0x238(0x08)
	struct FGameplayTag StealOnImpactTag; // 0x240(0x08)
	struct FGameplayTag StrongerReactionImpactTag; // 0x248(0x08)
	struct FGameplayTag StupefyImpactTag; // 0x250(0x08)
	struct FGameplayTag TriggerReactionTag; // 0x258(0x08)
	struct FGameplayTag UnblockableImpactTag; // 0x260(0x08)
	struct FGameplayTag ShieldBrokenTag; // 0x268(0x08)
	struct FGameplayTag PlayerShieldBreakerImpactTag; // 0x270(0x08)
	struct FGameplayTag EnemyShieldBreakerTypeAImpactTag; // 0x278(0x08)
	struct FGameplayTag EnemyShieldBreakerTypeBImpactTag; // 0x280(0x08)
	struct FGameplayTag EnemyShieldBreakerTypeCImpactTag; // 0x288(0x08)
	struct FGameplayTag CounterAttackImpactTag; // 0x290(0x08)
	struct FGameplayTag DodgeBlinkAttackImpactTag; // 0x298(0x08)
	struct FGameplayTag CharacterControlAttackImpactTag; // 0x2a0(0x08)
	struct FGameplayTag HeavyDamageAttackImpactTag; // 0x2a8(0x08)
	struct FGameplayTag ForcefulBlastAttackImpactTag; // 0x2b0(0x08)
	struct FGameplayTag AOEAttackImpactTag; // 0x2b8(0x08)
	struct FGameplayTag FinisherAttackImpactTag; // 0x2c0(0x08)
	struct FGameplayTag HighElevationSplatteringFallDeathTag; // 0x2c8(0x08)
	struct FGameplayTag ImperiusImpactTag; // 0x2d0(0x08)
	struct FGameplayTag CrucioImpactTag; // 0x2d8(0x08)
	struct FGameplayTag CrucioEnduringImpactTag; // 0x2e0(0x08)
	struct FGameplayTag GlaciusImpactTag; // 0x2e8(0x08)
	struct FGameplayTag MandrakeImpactTag; // 0x2f0(0x08)
	struct FGameplayTag StupefySpecialPopupImpactTag; // 0x2f8(0x08)
	struct FGameplayTag CrucioTalentProjectileImpactTag; // 0x300(0x08)
	struct FGameplayTag ImmuneToImpactTag; // 0x308(0x08)
	struct FGameplayTag EnemyDefaultGroupGameplayTag; // 0x310(0x08)
	struct FGameplayTag CounterAttackGameplayTag; // 0x318(0x08)
	struct FGameplayTag CounterGetupGameplayTag; // 0x320(0x08)
	struct FGameplayTag CounterReactionGameplayTag; // 0x328(0x08)
	struct FGameplayTag CounterRecoverGameplayTag; // 0x330(0x08)
	struct FGameplayTag CounterStunLockGameplayTag; // 0x338(0x08)
	struct FGameplayTag CounterRetaliateGameplayTag; // 0x340(0x08)
	struct FGameplayTag CounterEscapeGameplayTag; // 0x348(0x08)
	struct FGameplayTag SpecialTicketTag; // 0x350(0x08)
	struct FGameplayTag SpecialTicketVulnerableMustAvoidTag; // 0x358(0x08)
	struct FGameplayTag SpecialTicketVulnerableFollowupTag; // 0x360(0x08)
	struct FGameplayTag TargetLevitatedTag; // 0x368(0x08)
	struct FGameplayTag TargetInCCTag; // 0x370(0x08)
	struct FGameplayTag DeathBlowGameplayTag; // 0x378(0x08)
	struct FGameplayTag StealthTakedownGameplayTag; // 0x380(0x08)
	struct FGameplayTag AttackChooseUpdateTag; // 0x388(0x08)
	struct FGameplayTag AttackChooseStartTag; // 0x390(0x08)
	struct FGameplayTag AttackExecuteTag; // 0x398(0x08)
	struct FGameplayTag ProtegoIgnoreTag; // 0x3a0(0x08)
	struct FGameplayTag LightAttackTag; // 0x3a8(0x08)
	struct FGameplayTag MediumAttackTag; // 0x3b0(0x08)
	struct FGameplayTag HeavyAttackTag; // 0x3b8(0x08)
	struct FGameplayTag MoveTypeSightTag; // 0x3c0(0x08)
	struct FGameplayTag MoveTypeListenTag; // 0x3c8(0x08)
	struct FGameplayTag MoveTypeComboFinal; // 0x3d0(0x08)
	struct FGameplayTag GameEventTag; // 0x3d8(0x08)
	struct FGameplayTag GameEventMunitionTag; // 0x3e0(0x08)
	struct FGameplayTag GameEventMunitionHitTag; // 0x3e8(0x08)
	struct FGameplayTag GameEventMunitionFireTag; // 0x3f0(0x08)
	struct FGameplayTag GameEventFootfallTag; // 0x3f8(0x08)
	struct FGameplayTag GameEventWandLinkTag; // 0x400(0x08)
	struct FGameplayTag GameEventObjectBrokenTag; // 0x408(0x08)
	struct FGameplayTag GameEventPhysicsCollisionTag; // 0x410(0x08)
	struct FGameplayTag StupefySpecial; // 0x418(0x08)
	struct FGameplayTag LeaderGroupTag; // 0x420(0x08)
	struct FGameplayTag DuelOpponentGroupTag; // 0x428(0x08)
	struct FGameplayTag CompanionGroupTag; // 0x430(0x08)
	struct FGameplayTag DuelModeIATag; // 0x438(0x08)
	struct FGameplayTag DuelModeAATag; // 0x440(0x08)
	struct FGameplayTag BecomeAwareInstantAATag; // 0x448(0x08)
	struct FGameplayTag CounterTooCloseGameplayTag; // 0x450(0x08)
	struct FGameplayTag SweetSpotDamageTag; // 0x458(0x08)
	struct FGameplayTag HalfSweetSpotDamageTag; // 0x460(0x08)
	struct FGameplayTag CounterAttackVulnerableTag; // 0x468(0x08)
	struct FGameplayTag HitAlliesTag; // 0x470(0x08)
	struct FGameplayTag WandLinkCowerV1Tag; // 0x478(0x08)
	struct FGameplayTag WandLinkCowerV2Tag; // 0x480(0x08)
	struct FGameplayTag WandLinkCowerV3Tag; // 0x488(0x08)
	struct FGameplayTag WandLinkCowerV4Tag; // 0x490(0x08)
};

// Class Phoenix.GameplayTagLibraryHelper
// Size: 0x28 (Inherited: 0x28)
struct UGameplayTagLibraryHelper : UObject {
};

// Class Phoenix.GearManagerFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGearManagerFunctionLibrary : UBlueprintFunctionLibrary {

	bool NotEqual_GearItemIDGearItemID(struct FGearItemID& arg1, struct FGearItemID& arg); // Function Phoenix.GearManagerFunctionLibrary.NotEqual_GearItemIDGearItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32efd00
	bool IsValid(struct FGearItemID& GearItemID); // Function Phoenix.GearManagerFunctionLibrary.IsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32efc60
	bool EqualEqual_GearItemIDGearItemID(struct FGearItemID& arg1, struct FGearItemID& arg2); // Function Phoenix.GearManagerFunctionLibrary.EqualEqual_GearItemIDGearItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32ed650
};

// Class Phoenix.GearAppearanceItemDefinition
// Size: 0x90 (Inherited: 0x30)
struct UGearAppearanceItemDefinition : UDataAsset {
	struct FName GearAppearanceID; // 0x30(0x08)
	enum class EGearSlotIDEnum GearSlot; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TMap<struct FName, struct FGearCharacterPieceDefinition> OutfitItems; // 0x40(0x50)
};

// Class Phoenix.GearManager
// Size: 0x80 (Inherited: 0x28)
struct UGearManager : UObject {
	char pad_28[0x58]; // 0x28(0x58)

	int32_t UpgradeGearStatOnLoom(struct FGearItemID itemToUpgrade, struct FGearStatRecipeData UpgradeData, bool bIgnoreIngredients); // Function Phoenix.GearManager.UpgradeGearStatOnLoom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0ef0
	bool UpdateGearOutfitItems(struct AActor* Actor, bool UpdateIfNothingEquipped, bool bIncludeSlotDefaultGear, struct FString GearActorID); // Function Phoenix.GearManager.UpdateGearOutfitItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0d80
	bool UnequipSlotID(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.UnequipSlotID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0ca0
	bool UnequipActorSlotID(struct AActor* Actor, enum class EGearSlotIDEnum SlotID, bool bIncludeSlotDefaultGear); // Function Phoenix.GearManager.UnequipActorSlotID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0ba0
	enum class EGearSlotIDEnum StringToGearSlotID(struct FString SlotID); // Function Phoenix.GearManager.StringToGearSlotID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32f0b00
	void SetHoodPosition(struct AActor* Actor, struct FGearItemID& GearItemID, bool bHoodUp, bool bRebuildCharacter); // Function Phoenix.GearManager.SetHoodPosition // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f0990
	bool SetGearStat(struct FName& GearID, struct FName& Variation, struct FName& StatName, int32_t StatValue); // Function Phoenix.GearManager.SetGearStat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f0810
	bool SetForcedGearAppearances(struct TMap<enum class EGearSlotIDEnum, struct FName>& GearAppearanceNames); // Function Phoenix.GearManager.SetForcedGearAppearances // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f06d0
	bool SetEquippedGearItemID(struct FString ActorId, struct FGearItemID& GearItemID); // Function Phoenix.GearManager.SetEquippedGearItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f05d0
	bool SetEquippedGearAppearanceOverrideID(struct FString ActorId, struct FString GearAppearanceID); // Function Phoenix.GearManager.SetEquippedGearAppearanceOverrideID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f04e0
	bool SetActorsEquippedGearAppearanceOverrideID(struct AActor* Actor, struct FString GearAppearanceOverrideID); // Function Phoenix.GearManager.SetActorsEquippedGearAppearanceOverrideID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0400
	bool SetActorEquippedGearItemID(struct AActor* Actor, struct FGearItemID& GearItemID, bool bIncludeSlotDefaultGear); // Function Phoenix.GearManager.SetActorEquippedGearItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f02d0
	bool RemoveGearAppearanceOverride(struct FString ActorId, struct FGearItemID GearItemID); // Function Phoenix.GearManager.RemoveGearAppearanceOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f01d0
	bool RemoveForcedGearAppearances(struct TArray<enum class EGearSlotIDEnum>& GearSlotIDs); // Function Phoenix.GearManager.RemoveForcedGearAppearances // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f0120
	void RemoveAllForcedGearAppearances(); // Function Phoenix.GearManager.RemoveAllForcedGearAppearances // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0100
	bool RemoveActorGearAppearanceOverride(struct AActor* Actor, struct FGearItemID GearItemID); // Function Phoenix.GearManager.RemoveActorGearAppearanceOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f0010
	bool PreviewGear(struct AActor* Actor, struct FName GearID); // Function Phoenix.GearManager.PreviewGear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32eff40
	struct FObjectHandles PreloadGearIds(enum class EGenderEnum Gender, struct TArray<struct FName>& GearIDs); // Function Phoenix.GearManager.PreloadGearIds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32efe40
	void OnSaveGameLoaded(); // Function Phoenix.GearManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x32efe20
	bool IsHoodUp(struct AActor* Actor); // Function Phoenix.GearManager.IsHoodUp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32efb00
	bool IsHooded(struct AActor* Actor, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.IsHooded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32efb90
	bool IsGearItemHoodUp(struct FGearItemID& GearItemID); // Function Phoenix.GearManager.IsGearItemHoodUp // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32efa60
	bool IsGearItemEquippable(struct FGearItemID GearID); // Function Phoenix.GearManager.IsGearItemEquippable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ef9b0
	bool IsGear(struct FName ItemId); // Function Phoenix.GearManager.IsGear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ef920
	struct TArray<struct FGearItemID> IdentifyAllItems(); // Function Phoenix.GearManager.IdentifyAllItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ef8a0
	struct TArray<struct FGearItemID> GetUnidentifiedGear(); // Function Phoenix.GearManager.GetUnidentifiedGear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ef820
	enum class EGearSlotIDEnum GetSlotIDFromGearID(struct FName& GearID); // Function Phoenix.GearManager.GetSlotIDFromGearID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ef790
	struct FName GetRarityFromGearItemID(struct FName GearID); // Function Phoenix.GearManager.GetRarityFromGearItemID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ef700
	struct TArray<struct FString> GetOutFitItemTypesBySlotID(enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetOutFitItemTypesBySlotID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ef670
	int32_t GetNumOfStatUpgradeForGearItem(struct FGearItemID itemToCheck); // Function Phoenix.GearManager.GetNumOfStatUpgradeForGearItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ef5c0
	int32_t GetMaxUpgradeForGearItem(struct FGearItem& GearItem); // Function Phoenix.GearManager.GetMaxUpgradeForGearItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ef4b0
	enum class EGearSlotIDEnum GetLastPreviewedGearSlot(); // Function Phoenix.GearManager.GetLastPreviewedGearSlot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ef490
	void GetGearTraitRecipes(struct TArray<struct FGearTraitRecipeData>& AllRecipes, struct FName RarityTier); // Function Phoenix.GearManager.GetGearTraitRecipes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ef370
	struct FGearStatRecipeData GetGearStatsUpgradeRecipe(struct FGearItem& GearItem, enum class GearStatType StatType, int32_t NewLevel); // Function Phoenix.GearManager.GetGearStatsUpgradeRecipe // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ef180
	int32_t GetGearMaxTraitSlots(struct FName& GearID); // Function Phoenix.GearManager.GetGearMaxTraitSlots // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ef0f0
	bool GetGearItemDynamic(struct FGearItemID& GearItemID, struct FGearItem& GearItem); // Function Phoenix.GearManager.GetGearItemDynamic // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32eef80
	bool GetGearItem(struct FGearItemID& GearItemID, struct FGearItem& OutGearItem); // Function Phoenix.GearManager.GetGearItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32eee10
	struct FName GetGearIconID(enum class EGenderEnum Gender, struct FName& GearID); // Function Phoenix.GearManager.GetGearIconID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32eed40
	int32_t GetGearEmptyTraitSlots(struct FName& GearID, struct FName& Variation); // Function Phoenix.GearManager.GetGearEmptyTraitSlots // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32eec60
	struct TArray<struct TSoftObjectPtr<UGearAppearanceItemDefinition>> GetGearAppearanceItemDefinitions(enum class EGenderEnum Gender, struct TArray<struct FName>& GearAppearanceIDs); // Function Phoenix.GearManager.GetGearAppearanceItemDefinitions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32eeae0
	struct TMap<struct FName, struct FName> GetGearAppearanceFromGearIDs(struct TArray<struct FName>& GearIDs); // Function Phoenix.GearManager.GetGearAppearanceFromGearIDs // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x32ee9b0
	void GetGearAbilityUIInfo(struct FGearItem& Item, struct TArray<struct FGearUI>& OutGearUI); // Function Phoenix.GearManager.GetGearAbilityUIInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ee7e0
	struct FGearItemID GetEquippedGearItemID(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetEquippedGearItemID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ee6f0
	struct FString GetEquippedGearAppearanceOverrideID(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetEquippedGearAppearanceOverrideID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ee5d0
	struct TMap<struct FName, struct FName> GetDefaultPlayerGearAndAppearance(); // Function Phoenix.GearManager.GetDefaultPlayerGearAndAppearance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ee500
	bool GetCanApplyGearTraitToGear(struct FGearTraitRecipeData& Trait, struct FName& GearID, struct FName& GearVariation, struct FString& OutErrorStringKey); // Function Phoenix.GearManager.GetCanApplyGearTraitToGear // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ee320
	struct TArray<struct FGearItemID> GetAvailableGearItemIDs(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetAvailableGearItemIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ee200
	struct TArray<struct FString> GetAvailableGearAppearanceOverrideIDs(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetAvailableGearAppearanceOverrideIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ee090
	struct TArray<struct FGearItemID> GetAvailableAndEquippedGearItemIDs(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetAvailableAndEquippedGearItemIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32edf70
	struct TArray<struct FString> GetAllGearSlotIDs(); // Function Phoenix.GearManager.GetAllGearSlotIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32edf30
	void GetAllGearIDs(enum class EGearSlotIDEnum SlotID, struct TArray<struct FName>& GearIDs); // Function Phoenix.GearManager.GetAllGearIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32ede50
	struct TArray<struct FGearItemID> GetAllEquippedGearItemIDs(struct FString ActorId); // Function Phoenix.GearManager.GetAllEquippedGearItemIDs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32edd70
	struct TArray<struct FGearItemID> GetAllAvailableGearItemIDsSorted(struct FString ActorId, enum class EGearSlotIDEnum SortedSlotID); // Function Phoenix.GearManager.GetAllAvailableGearItemIDsSorted // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32edc50
	struct TArray<struct FGearItemID> GetAllActorEquippedGearItemID(struct AActor* Actor); // Function Phoenix.GearManager.GetAllActorEquippedGearItemID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32edb80
	struct FName GetActorGearIconID(struct AActor* Actor, struct FName& GearID); // Function Phoenix.GearManager.GetActorGearIconID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32edab0
	struct FGearItemID GetActorEquippedGearItemID(struct AActor* Actor, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GetActorEquippedGearItemID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ed9d0
	struct UGearManager* Get(); // Function Phoenix.GearManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed9a0
	void GenerateGearAndEquip(struct FName GearID); // Function Phoenix.GearManager.GenerateGearAndEquip // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed920
	struct FGearItemID GenerateGearAndAddToInventory(struct FName GearID, bool IsIdentified); // Function Phoenix.GearManager.GenerateGearAndAddToInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed840
	struct FString GearSlotIDToString(enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.GearSlotIDToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ed770
	bool EditorLoadGearAppearance(struct AActor* Actor, struct FString GearAppearanceID, struct FString HouseIDOverride); // Function Phoenix.GearManager.EditorLoadGearAppearance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed510
	bool EditorLoadGear(struct AActor* Actor, struct FString GearID, bool bResetToEquipped); // Function Phoenix.GearManager.EditorLoadGear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed3e0
	bool EditorDoesGearAppearanceHaveHouseOverrides(struct AActor* Actor, struct FString GearAppearanceID); // Function Phoenix.GearManager.EditorDoesGearAppearanceHaveHouseOverrides // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ed300
	bool EditorClearSlot(struct AActor* Actor, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.EditorClearSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed230
	bool DoesGearHaveAppearanceOverride(struct FGearItemID Gear); // Function Phoenix.GearManager.DoesGearHaveAppearanceOverride // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ed180
	enum class GearStatType DefineSecondaryGearStatTypeFromSlot(enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.DefineSecondaryGearStatTypeFromSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed100
	enum class GearStatType DefineGearStatTypeFromSlot(enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.DefineGearStatTypeFromSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ed080
	bool CanUnequipSlotID(struct FString ActorId, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.CanUnequipSlotID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32ecfa0
	bool CanUnequipActorSlotID(struct AActor* Actor, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearManager.CanUnequipActorSlotID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32eced0
	int32_t CalculateUpgradeAmountForGearItem(struct FGearItemID itemToUpgrade, int32_t Upgrade); // Function Phoenix.GearManager.CalculateUpgradeAmountForGearItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32ecde0
	void AddGearUpgradeItems(struct FName Rarity, enum class GearStatType StatType, int32_t Level); // Function Phoenix.GearManager.AddGearUpgradeItems // (Final|Exec|Native|Public) // @ game+0x32eccd0
	bool AddGearTrait(struct FName& GearID, struct FName& Variation, struct FName& TraitID); // Function Phoenix.GearManager.AddGearTrait // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32ecba0
	void AddGearAbilityItems(struct FName GearAbility); // Function Phoenix.GearManager.AddGearAbilityItems // (Final|Exec|Native|Public) // @ game+0x32a3030
	bool AddCraftGearTrait(struct FGearTraitRecipeData& Trait, struct FGearItemID GearItemID, struct FString& ErrorString); // Function Phoenix.GearManager.AddCraftGearTrait // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32eca00
};

// Class Phoenix.OutfitDefinitionWrapper
// Size: 0x78 (Inherited: 0x28)
struct UOutfitDefinitionWrapper : UObject {
	struct FOutfitDefinition OutfitDefinition; // 0x28(0x50)
};

// Class Phoenix.GearOverride_Interface
// Size: 0x28 (Inherited: 0x28)
struct UGearOverride_Interface : UInterface {

	struct FName GetOutfitGear(); // Function Phoenix.GearOverride_Interface.GetOutfitGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetNeckGear(); // Function Phoenix.GearOverride_Interface.GetNeckGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetHouse(); // Function Phoenix.GearOverride_Interface.GetHouse // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetHeadGear(); // Function Phoenix.GearOverride_Interface.GetHeadGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetHandGear(); // Function Phoenix.GearOverride_Interface.GetHandGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetFaceGear(); // Function Phoenix.GearOverride_Interface.GetFaceGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetBackGear(); // Function Phoenix.GearOverride_Interface.GetBackGear // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.GearScreen
// Size: 0x3f0 (Inherited: 0x3c8)
struct UGearScreen : UTabPageWidget {
	struct AActor* MenuCharacter; // 0x3c8(0x08)
	struct AActor* WandActor; // 0x3d0(0x08)
	struct AActor* BroomProxyActor; // 0x3d8(0x08)
	struct AActor* MountActor; // 0x3e0(0x08)
	bool ShowAppearanceGear; // 0x3e8(0x01)
	bool IsAppearanceInventory; // 0x3e9(0x01)
	char pad_3EA[0x6]; // 0x3ea(0x06)

	bool UnequipGearItem(enum class EGearSlotIDEnum GearSlot, struct FGearItemID& NewGearItemId); // Function Phoenix.GearScreen.UnequipGearItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x32f4ba0
	struct FGearItemID MakeGearIdForAppearance(struct FName GearID, enum class EGearSlotIDEnum SlotID); // Function Phoenix.GearScreen.MakeGearIdForAppearance // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x32f4ac0
	bool IsPlayerOnMount(); // Function Phoenix.GearScreen.IsPlayerOnMount // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x32f4a90
	bool IsPlayerOnBroom(); // Function Phoenix.GearScreen.IsPlayerOnBroom // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x32f4a60
	void GetUnlockedAppearanceGear(enum class EGearSlotIDEnum SlotID, struct TArray<struct FString>& OutCostumes, struct TArray<struct FString>& OutGeneral); // Function Phoenix.GearScreen.GetUnlockedAppearanceGear // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x32f48b0
	struct TArray<struct FInventoryResult> GetSortedTools(struct FName ActiveHolderID, struct FName StorageHolderID); // Function Phoenix.GearScreen.GetSortedTools // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x32f4460
	struct TArray<struct FRPGUIInfo> GetActiveBuffData(); // Function Phoenix.GearScreen.GetActiveBuffData // (Final|Native|Public|BlueprintCallable) // @ game+0x32f2aa0
	bool EquipGearItem(struct FGearItemID GearItemID, struct FGearItemID& NewGearItemId); // Function Phoenix.GearScreen.EquipGearItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x32f2990
};

// Class Phoenix.SocialEnumsBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct USocialEnumsBlueprintLibrary : UBlueprintFunctionLibrary {

	struct FName GetUIHUDGroupNameFromID(enum class UIHUDGroups inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetUIHUDGroupNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f4810
	enum class UIHUDGroups GetUIHUDGroupFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetUIHUDGroupFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f4740
	struct FName GetUIActionModeNameFromID(enum class UIActionModes inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetUIActionModeNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f46a0
	enum class UIActionModes GetUIActionModeFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetUIActionModeFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f45d0
	struct FName GetSocialSemanticTypeIDNameFromID(enum class SocialSemanticTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialSemanticTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f43c0
	enum class SocialSemanticTypeIDs GetSocialSemanticTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialSemanticTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f42f0
	struct FName GetSocialSemanticIDNameFromID(enum class SocialSemanticIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialSemanticIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f4250
	enum class SocialSemanticIDs GetSocialSemanticIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialSemanticIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f4180
	struct FName GetSocialInteractionTypeIDNameFromID(enum class SocialInteractionTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialInteractionTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f40e0
	enum class SocialInteractionTypeIDs GetSocialInteractionTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialInteractionTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f4010
	struct FName GetSocialInteractionDisplayStatusIDNameFromID(enum class SocialInteractionDisplayStatusIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialInteractionDisplayStatusIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3f70
	enum class SocialInteractionDisplayStatusIDs GetSocialInteractionDisplayStatusIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialInteractionDisplayStatusIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3ea0
	struct FName GetSocialHeritageStatusIDNameFromID(enum class SocialHeritageStatusIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialHeritageStatusIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3e00
	enum class SocialHeritageStatusIDs GetSocialHeritageStatusIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialHeritageStatusIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3d30
	struct FName GetSocialConnectionIDNameFromID(enum class SocialConnectionIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialConnectionIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3c90
	enum class SocialConnectionIDs GetSocialConnectionIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialConnectionIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3bc0
	struct FName GetSocialCapitalStatusIDNameFromID(enum class SocialCapitalStatusIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialCapitalStatusIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3b20
	enum class SocialCapitalStatusIDs GetSocialCapitalStatusIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialCapitalStatusIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3a50
	struct FName GetSocialActionTypeNameFromID(enum class SocialActionTypes inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialActionTypeNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f39b0
	enum class SocialActionTypes GetSocialActionTypeFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialActionTypeFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f38e0
	struct FName GetSocialActionObserverTypeNameFromID(enum class SocialActionObserverTypes inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialActionObserverTypeNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3840
	enum class SocialActionObserverTypes GetSocialActionObserverTypeFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSocialActionObserverTypeFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3770
	struct FName GetSkeletonTypeIDNameFromID(enum class SkeletonTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSkeletonTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f36d0
	enum class SkeletonTypeIDs GetSkeletonTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetSkeletonTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3600
	struct FName GetPropTypeIDNameFromID(enum class PropTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetPropTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3560
	enum class PropTypeIDs GetPropTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetPropTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3490
	struct FName GetPropClassIDNameFromID(enum class PropClassIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetPropClassIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f33f0
	enum class PropClassIDs GetPropClassIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetPropClassIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f3320
	struct FName GetHouseNameFromRegistryID(struct FString InRegistryID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetHouseNameFromRegistryID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f31f0
	struct FName GetHouseIDNameFromID(enum class HouseIds inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetHouseIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3150
	enum class HouseIds GetHouseIDFromRegistryID(struct FString InRegistryID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetHouseIDFromRegistryID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f3040
	enum class HouseIds GetHouseIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetHouseIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f2f70
	struct FName GetCollisionTypeIDNameFromID(enum class CollisionTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetCollisionTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f2ed0
	enum class CollisionTypeIDs GetCollisionTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetCollisionTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f2e00
	struct FName GetAmbientChatterTopicIDNameFromID(enum class AmbientChatterTopicIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetAmbientChatterTopicIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f2d60
	enum class AmbientChatterTopicIDs GetAmbientChatterTopicIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetAmbientChatterTopicIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f2c90
	struct FName GetActivityTypeIDNameFromID(enum class ActivityTypeIDs inID); // Function Phoenix.SocialEnumsBlueprintLibrary.GetActivityTypeIDNameFromID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x32f2bf0
	enum class ActivityTypeIDs GetActivityTypeIDFromName(struct FName& strName); // Function Phoenix.SocialEnumsBlueprintLibrary.GetActivityTypeIDFromName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32f2b20
};

// Class Phoenix.GenericBPSpellTool
// Size: 0x968 (Inherited: 0x958)
struct AGenericBPSpellTool : AChannelingSpellTool {
	struct AActor* BPActorClass; // 0x958(0x08)
	char pad_960[0x8]; // 0x960(0x08)
};

// Class Phoenix.GenericStepWidget
// Size: 0x270 (Inherited: 0x268)
struct UGenericStepWidget : UUserWidget {
	struct UImage* checkmark; // 0x268(0x08)

	void UntickBox(struct UImage* Image); // Function Phoenix.GenericStepWidget.UntickBox // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TickBox(struct UImage* Image); // Function Phoenix.GenericStepWidget.TickBox // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SceneRigStory
// Size: 0x138 (Inherited: 0x28)
struct USceneRigStory : UObject {
	char pad_28[0x30]; // 0x28(0x30)
	struct USceneRig* StorySceneRig; // 0x58(0x08)
	char pad_60[0xd8]; // 0x60(0xd8)
};

// Class Phoenix.GhostStory
// Size: 0x140 (Inherited: 0x138)
struct UGhostStory : USceneRigStory {
	char pad_138[0x8]; // 0x138(0x08)
};

// Class Phoenix.GlaciusMaximaSpellTool
// Size: 0x8a8 (Inherited: 0x868)
struct AGlaciusMaximaSpellTool : AFireOnceSpellTool {
	struct AActor* GlaciusActorClass; // 0x868(0x08)
	struct UObject* GlaciusImpactComponent; // 0x870(0x08)
	struct UObject* GlaciusTerrainImpactComponent; // 0x878(0x08)
	struct AActor* GlaciusPlatformClass; // 0x880(0x08)
	struct ASkinFXDefinition* SkinFX; // 0x888(0x08)
	struct TArray<struct UMultiFX2_Base*> FrozenFX2; // 0x890(0x10)
	float TerrainImpactZOffset; // 0x8a0(0x04)
	char pad_8A4[0x4]; // 0x8a4(0x04)
};

// Class Phoenix.GlaciusSpellTool
// Size: 0x8f8 (Inherited: 0x868)
struct AGlaciusSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> FrozenFX2; // 0x868(0x10)
	struct TArray<struct UMultiFX2_Base*> EndFrozenFX2; // 0x878(0x10)
	struct TArray<struct UMultiFX2_Base*> BreakoutFrozenFX2; // 0x888(0x10)
	float TerrainImpactZOffset; // 0x898(0x04)
	char pad_89C[0x4]; // 0x89c(0x04)
	struct UObject* GlaciusTerrainImpactComponent; // 0x8a0(0x08)
	struct AActor* GlaciusPlatformClass; // 0x8a8(0x08)
	int32_t PlatformMax; // 0x8b0(0x04)
	float PlatformLifetime; // 0x8b4(0x04)
	float PlatformScale; // 0x8b8(0x04)
	float PlatformScaleTime; // 0x8bc(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x8c0(0x08)
	struct TArray<struct AActor*> GlaciusPlatforms; // 0x8c8(0x10)
	char pad_8D8[0x20]; // 0x8d8(0x20)
};

// Class Phoenix.GlassWaller
// Size: 0x280 (Inherited: 0x248)
struct AGlassWaller : AActor {
	struct USplineComponent* SplineComponent; // 0x248(0x08)
	struct UInstancedStaticMeshComponent* InstancedStaticMeshComponent; // 0x250(0x08)
	enum class ENavDataGatheringMode NavigationGeometryGatheringMode; // 0x258(0x01)
	bool bDisableWhenPlayerMounted; // 0x259(0x01)
	char pad_25A[0x26]; // 0x25a(0x26)

	bool WithEditor(); // Function Phoenix.GlassWaller.WithEditor // (Final|Native|Private|BlueprintCallable|BlueprintPure) // @ game+0x19e8aa0
	void SetMobility(enum class EComponentMobility InMobility); // Function Phoenix.GlassWaller.SetMobility // (Final|Native|Public|BlueprintCallable) // @ game+0x32f89e0
};

// Class Phoenix.GmCheatManager
// Size: 0x98 (Inherited: 0x88)
struct UGmCheatManager : UCheatManager {
	struct TArray<struct UCheatManager*> OtherCheatManagers; // 0x88(0x10)

	void QARunScalabilityAutomationTest(int32_t QualityPreset, struct FString TestName); // Function Phoenix.GmCheatManager.QARunScalabilityAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f8890
	void QARunMultiplePointOfInterestAutomationTest(struct FString TestName); // Function Phoenix.GmCheatManager.QARunMultiplePointOfInterestAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f87a0
	void QARunMemoryAutomationTest(struct FString TestName); // Function Phoenix.GmCheatManager.QARunMemoryAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f86b0
	void QARunLoadTimingsAutomationTest(struct FString TestName); // Function Phoenix.GmCheatManager.QARunLoadTimingsAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f85c0
	void QARunConjurationPerformanceTest(struct FString TestName); // Function Phoenix.GmCheatManager.QARunConjurationPerformanceTest // (Exec|Native|Public|Const) // @ game+0x32f84d0
	void QARunBroomFlightAutomationTest(struct FString Command); // Function Phoenix.GmCheatManager.QARunBroomFlightAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f83e0
	void QARunAutomationTest(struct FString TestName); // Function Phoenix.GmCheatManager.QARunAutomationTest // (Exec|Native|Public|Const) // @ game+0x32f82f0
	void QAGetEnvironmentInformation(int32_t Index); // Function Phoenix.GmCheatManager.QAGetEnvironmentInformation // (Exec|Native|Public) // @ game+0x32f8260
	void QAGetBeaconList(); // Function Phoenix.GmCheatManager.QAGetBeaconList // (Exec|Native|Public) // @ game+0x19fc450
	void QAConsoleCommand(struct FString Command); // Function Phoenix.GmCheatManager.QAConsoleCommand // (Exec|Native|Public) // @ game+0x32f8170
	void BICaptureObjListMemory(struct FString Label); // Function Phoenix.GmCheatManager.BICaptureObjListMemory // (Exec|Native|Public) // @ game+0x32f7f70
	void BICaptureLLM(struct FString Label); // Function Phoenix.GmCheatManager.BICaptureLLM // (Exec|Native|Public) // @ game+0x32f7e80
};

// Class Phoenix.Goblin_AttackChoice_DaggerThrow
// Size: 0x28 (Inherited: 0x28)
struct UGoblin_AttackChoice_DaggerThrow : UEnemy_AttackChoice {
};

// Class Phoenix.NPC_MobilitySpeedChoice
// Size: 0x28 (Inherited: 0x28)
struct UNPC_MobilitySpeedChoice : UObject {
};

// Class Phoenix.Goblin_AttackSpeedChoice
// Size: 0x48 (Inherited: 0x28)
struct UGoblin_AttackSpeedChoice : UNPC_MobilitySpeedChoice {
	float SplitDistance; // 0x28(0x04)
	float ChangeTime; // 0x2c(0x04)
	float CloserSpeed; // 0x30(0x04)
	float FurtherSpeed; // 0x34(0x04)
	float RetreatDistance; // 0x38(0x04)
	float RetreatTimeSinceAttack; // 0x3c(0x04)
	float RetreatSpeed; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.SettingsTabWidget
// Size: 0x3f0 (Inherited: 0x3c8)
struct USettingsTabWidget : UTabPageWidget {
	bool NeedsExitConfirmed; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct FString ConfirmExitTitle; // 0x3d0(0x10)
	struct FString ConfirmExitDesc; // 0x3e0(0x10)

	void InitForSettingsLocation(bool IsInFieldGuide); // Function Phoenix.SettingsTabWidget.InitForSettingsLocation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.GraphicsSettingsWidget
// Size: 0x420 (Inherited: 0x3f0)
struct UGraphicsSettingsWidget : USettingsTabWidget {
	struct FMulticastInlineDelegate OnConfirmDialogRequested; // 0x3f0(0x10)
	struct FMulticastInlineDelegate OnCalibrationSelected; // 0x400(0x10)
	struct FMulticastInlineDelegate OnHDRCalibrationSelected; // 0x410(0x10)

	void SyncDisplaySettings(); // Function Phoenix.GraphicsSettingsWidget.SyncDisplaySettings // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RevertVideoChanges(); // Function Phoenix.GraphicsSettingsWidget.RevertVideoChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x32f89c0
	void AcceptVideoChanges(); // Function Phoenix.GraphicsSettingsWidget.AcceptVideoChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x32f7e60
};

// Class Phoenix.GridBackground
// Size: 0x148 (Inherited: 0x130)
struct UGridBackground : UCanvasPanel {
	float LineWidth; // 0x130(0x04)
	struct FLinearColor GridColor; // 0x134(0x10)
	char pad_144[0x4]; // 0x144(0x04)

	void PopulateGrid(struct FVector2D GridSpacing, int32_t Rows, int32_t Columns); // Function Phoenix.GridBackground.PopulateGrid // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x32f8060
};

// Class Phoenix.InstancedGroundSwarmingActor
// Size: 0x890 (Inherited: 0x248)
struct AInstancedGroundSwarmingActor : AActor {
	struct UInstancedStaticMeshComponent* GroundSwarmMeshes; // 0x248(0x08)
	char pad_250[0x10]; // 0x250(0x10)
	struct FGroundSwarmingParameters GroundSwarmingParams; // 0x260(0x50)
	struct FGroundSwarmVoxelCollisionParameters CollisionParams; // 0x2b0(0x34)
	struct FSimpleTopologyParams TopologyParams; // 0x2e4(0x18)
	char pad_2FC[0x4]; // 0x2fc(0x04)
	struct FGroundSwarmingFocus ExternalFollow; // 0x300(0xa0)
	float FollowForceModifier; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct FGroundSwarmingExternalForces ExternalForces; // 0x3a8(0x10)
	struct FGroundSwarmingForceModifiers ForceModifiers; // 0x3b8(0x10)
	struct FGroundSwarmingDeathVolumes DeathVolumes; // 0x3c8(0x10)
	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct FGroundSwarmExternals Externals; // 0x3e0(0xf0)
	struct FGroundSwarmGenerationParameters GroundSwarmGenerationParams; // 0x4d0(0x10)
	struct FGroundSwarmerInitialConditions GroundSwarmInitialConditions; // 0x4e0(0x3c)
	struct FVector InitialVelocityScale; // 0x51c(0x0c)
	float InitialSpawnHiddenPercent; // 0x528(0x04)
	float InitialSpawnHiddenTimeMin; // 0x52c(0x04)
	float InitialSpawnHiddenTimeMax; // 0x530(0x04)
	float InitialFreezeTimeMin; // 0x534(0x04)
	float InitialFreezeTimeMax; // 0x538(0x04)
	char pad_53C[0x4]; // 0x53c(0x04)
	struct AActor* InitialShapeTo; // 0x540(0x08)
	struct FGroundSwarmInitialShapeSettings InitialShapeToSettings; // 0x548(0x0c)
	char pad_554[0x4]; // 0x554(0x04)
	struct UAkAudioEvent* OnSwarmStartAudio; // 0x558(0x08)
	struct UAkAudioEvent* OnSwarmDispersedAudio; // 0x560(0x08)
	bool bSwarmStartDisperseMulti; // 0x568(0x01)
	char pad_569[0x7]; // 0x569(0x07)
	struct UParticleSystem* OnHitTarget; // 0x570(0x08)
	struct UAkAudioEvent* OnHitTargetAudio; // 0x578(0x08)
	struct UParticleSystem* OnKillVolume; // 0x580(0x08)
	struct UAkAudioEvent* OnKillVolumeAudio; // 0x588(0x08)
	struct UParticleSystem* OnPoof; // 0x590(0x08)
	struct UAkAudioEvent* OnPoofAudio; // 0x598(0x08)
	struct UParticleSystem* OnBurrow; // 0x5a0(0x08)
	struct UAkAudioEvent* OnBurrowAudio; // 0x5a8(0x08)
	float OnBurrowUpOffset; // 0x5b0(0x04)
	struct FGroundSwarmBurrowingParameters BurrowingParameters; // 0x5b4(0x30)
	float Timeout; // 0x5e4(0x04)
	float TimeoutModifier; // 0x5e8(0x04)
	float TargetThresholdPercent; // 0x5ec(0x04)
	float TargetThresholdDelay; // 0x5f0(0x04)
	bool bAutoStart; // 0x5f4(0x01)
	bool bAutoDestroyWhenDone; // 0x5f5(0x01)
	char pad_5F6[0x222]; // 0x5f6(0x222)
	struct TArray<struct FGroundSwarmerInitialState> InitialStates; // 0x818(0x10)
	struct UAkComponent* SwarmAudioSource; // 0x828(0x08)
	struct TMap<struct AActor*, struct FGroundSwarmingTargetTracker> TargetTrackingMap; // 0x830(0x50)
	bool bShapeApplied; // 0x880(0x01)
	bool bSignalledDestroyWhenDone; // 0x881(0x01)
	bool bSwarmAudioEnded; // 0x882(0x01)
	char pad_883[0xd]; // 0x883(0x0d)

	void Stop(); // Function Phoenix.InstancedGroundSwarmingActor.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd470
	void SetTargetFocii(struct AActor* Target); // Function Phoenix.InstancedGroundSwarmingActor.SetTargetFocii // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd3e0
	void Reset(); // Function Phoenix.InstancedGroundSwarmingActor.Reset // (Native|Public|BlueprintCallable) // @ game+0x31e1760
	void Regenerate(); // Function Phoenix.InstancedGroundSwarmingActor.Regenerate // (Final|Native|Public) // @ game+0x32fd0f0
	void Pause(); // Function Phoenix.InstancedGroundSwarmingActor.Pause // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd000
	void IsRunning(bool& bIsRunning); // Function Phoenix.InstancedGroundSwarmingActor.IsRunning // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fcc10
	bool IsExiting(); // Function Phoenix.InstancedGroundSwarmingActor.IsExiting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fca90
	void Go(); // Function Phoenix.InstancedGroundSwarmingActor.Go // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc930
	void Generate(); // Function Phoenix.InstancedGroundSwarmingActor.Generate // (Final|Native|Public|BlueprintCallable) // @ game+0x13244f0
	void BeginExiting(enum class EGroundSwarmingExitType Type, bool disableTargets); // Function Phoenix.InstancedGroundSwarmingActor.BeginExiting // (Final|Native|Public|BlueprintCallable) // @ game+0x32fbec0
};

// Class Phoenix.GroundSwarmingControlComponent
// Size: 0x220 (Inherited: 0x220)
struct UGroundSwarmingControlComponent : USceneComponent {
};

// Class Phoenix.GroundSwarmingExternalForceComponent
// Size: 0x2f0 (Inherited: 0x220)
struct UGroundSwarmingExternalForceComponent : UGroundSwarmingControlComponent {
	struct FGroundSwarmingExternalForce ExternalForce; // 0x220(0xd0)
};

// Class Phoenix.GroundSwarmingExternalForceModifierComponent
// Size: 0x2f0 (Inherited: 0x220)
struct UGroundSwarmingExternalForceModifierComponent : UGroundSwarmingControlComponent {
	struct FGroundSwarmingForceModifier ForceModifier; // 0x220(0xd0)
};

// Class Phoenix.GroundSwarmingDeathVolumeComponent
// Size: 0x330 (Inherited: 0x220)
struct UGroundSwarmingDeathVolumeComponent : UGroundSwarmingControlComponent {
	struct FGroundSwarmingDeathVolume DeathVolume; // 0x220(0x110)
};

// Class Phoenix.GroundSwarmingMultiComponent
// Size: 0x4e0 (Inherited: 0x220)
struct UGroundSwarmingMultiComponent : UGroundSwarmingControlComponent {
	struct FGroundSwarmingExternalForce ExternalForce; // 0x220(0xd0)
	struct FGroundSwarmingForceModifier ForceModifier; // 0x2f0(0xd0)
	struct FGroundSwarmingDeathVolume DeathVolume; // 0x3c0(0x110)
	bool bUseExternalForce; // 0x4d0(0x01)
	bool bUseForceModifier; // 0x4d1(0x01)
	bool bUseDeathVolume; // 0x4d2(0x01)
	char pad_4D3[0xd]; // 0x4d3(0x0d)
};

// Class Phoenix.GuideSpline
// Size: 0x488 (Inherited: 0x248)
struct AGuideSpline : AActor {
	float TimeOutPeriod; // 0x248(0x04)
	float MaximumDistanceFromPlayer; // 0x24c(0x04)
	float MaximumDistanceFromPlayerMounted; // 0x250(0x04)
	float DestinationArrivalDistance; // 0x254(0x04)
	float HeightAdjustCollissionPassRange; // 0x258(0x04)
	float MinHeightOffset; // 0x25c(0x04)
	float MaxHeightOffset; // 0x260(0x04)
	float MaxHeightTurnDepth; // 0x264(0x04)
	float ShootForwardOffset; // 0x268(0x04)
	struct FVector2D LoopSideOffset; // 0x26c(0x08)
	float LoopAroundYawThreshold; // 0x274(0x04)
	float LoopAroundPitchThreshold; // 0x278(0x04)
	float SplineStartRestoreAngleThreshold; // 0x27c(0x04)
	float RoughTimeBetweenAdjustStartAndVFX; // 0x280(0x04)
	float RoughTimeBetweenInitializeAndVFX; // 0x284(0x04)
	struct FGuideSplineTrajectory Trajectory; // 0x288(0xd8)
	int32_t ResimulationNumBufferPoints; // 0x360(0x04)
	int32_t DrawDebugSegmentsPerPoint; // 0x364(0x04)
	struct UNonUniformSplineComponent* BaseSpline; // 0x368(0x08)
	struct USplineComponent* SmoothedSpline; // 0x370(0x08)
	char pad_378[0x110]; // 0x378(0x110)

	void RemovePath(); // Function Phoenix.GuideSpline.RemovePath // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd110
	void PreparePathRemoval(); // Function Phoenix.GuideSpline.PreparePathRemoval // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnPathInitialized(); // Function Phoenix.GuideSpline.OnPathInitialized // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPathArrived(); // Function Phoenix.GuideSpline.OnPathArrived // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitializeFromPath(struct TArray<struct FVector>& Path); // Function Phoenix.GuideSpline.InitializeFromPath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x32fc9e0
	struct TArray<struct FVector> GetTrajectoryPoints(); // Function Phoenix.GuideSpline.GetTrajectoryPoints // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fc8f0
	void CompletePathRemoval(); // Function Phoenix.GuideSpline.CompletePathRemoval // (Final|Native|Private|BlueprintCallable) // @ game+0x32fbf90
};

// Class Phoenix.GuideSuppressionVolume
// Size: 0x258 (Inherited: 0x250)
struct AGuideSuppressionVolume : ATriggerBox {
	char pad_250[0x8]; // 0x250(0x08)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.GuideSuppressionVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x32fcf30
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.GuideSuppressionVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x32fce60
};

// Class Phoenix.HeaderWidget
// Size: 0x2a8 (Inherited: 0x268)
struct UHeaderWidget : UUserWidget {
	struct FText TitleText; // 0x268(0x18)
	struct FText SubtitleText; // 0x280(0x18)
	struct UPhoenixTextBlock* Title; // 0x298(0x08)
	struct UPhoenixTextBlock* Subtitle; // 0x2a0(0x08)

	void SetHeaderTitle(struct FText NewTitle); // Function Phoenix.HeaderWidget.SetHeaderTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd210
	void SetHeaderSubtitle(struct FText NewSubtitle); // Function Phoenix.HeaderWidget.SetHeaderSubtitle // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd130
	void OnSynchronizeProperties(); // Function Phoenix.HeaderWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.HealthInterface
// Size: 0x28 (Inherited: 0x28)
struct UHealthInterface : UInterface {

	void OnHealed(float healAmount, struct UPrimitiveComponent* PrimComp); // Function Phoenix.HealthInterface.OnHealed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnGeometryCollectionSpawned(struct URepairComponent* RepairComponent, struct UGeometryCollectionComponent* GeometryCollectionComponent, float impulseStr, float Radius, struct FVector HitLocation, struct FVector HitDirection, bool bCompletelyBroken); // Function Phoenix.HealthInterface.OnGeometryCollectionSpawned // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnGeometryCollectionDamaged(struct URepairComponent* RepairComponent, struct UGeometryCollectionComponent* GeometryCollectionComponent, float impulseStr, float Radius, struct FVector HitLocation, struct FVector HitDirection); // Function Phoenix.HealthInterface.OnGeometryCollectionDamaged // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnGeometryCollectionCompletelyBroken(struct URepairComponent* RepairComponent, struct UGeometryCollectionComponent* GeometryCollectionComponent, float impulseStr, float Radius, struct FVector HitLocation, struct FVector HitDirection); // Function Phoenix.HealthInterface.OnGeometryCollectionCompletelyBroken // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToBeHealed(); // Function Phoenix.HealthInterface.OnFailedToBeHealed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToBeDestroyed(); // Function Phoenix.HealthInterface.OnFailedToBeDestroyed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToBeDamaged(float DamageAmount, struct FVector HitLocation, struct FVector HitDirection, struct UPrimitiveComponent* PrimComp, struct FGameplayTagContainer MunitionTagContainer, struct AActor* Instigator, struct FVector Velocity); // Function Phoenix.HealthInterface.OnFailedToBeDamaged // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnDoneRepairing(); // Function Phoenix.HealthInterface.OnDoneRepairing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCriticalHealthReached(); // Function Phoenix.HealthInterface.OnCriticalHealthReached // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBeginRepairing(); // Function Phoenix.HealthInterface.OnBeginRepairing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAttemptToRepair(); // Function Phoenix.HealthInterface.OnAttemptToRepair // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAttemptToHeal(); // Function Phoenix.HealthInterface.OnAttemptToHeal // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool NearDeathKneeling(float DamageAmount, struct AActor* Instigator, struct FGameplayTagContainer MunitionTagContainer, struct FVector Velocity); // Function Phoenix.HealthInterface.NearDeathKneeling // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32fcca0
	bool Destroyed(float DamageAmount, struct AActor* Instigator, struct FGameplayTagContainer MunitionTagContainer, struct FVector Velocity); // Function Phoenix.HealthInterface.Destroyed // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32fc270
	bool Damaged(float DamageAmount, struct FVector HitLocation, struct FVector HitDirection, struct UPrimitiveComponent* PrimComp, struct FGameplayTagContainer MunitionTagContainer, struct AActor* Instigator, struct FVector Velocity); // Function Phoenix.HealthInterface.Damaged // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x32fbfb0
};

// Class Phoenix.Herb
// Size: 0x2d0 (Inherited: 0x298)
struct AHerb : AInteractiveObjectActor {
	char pad_298[0x8]; // 0x298(0x08)
	int64_t RespawnTime; // 0x2a0(0x08)
	char pad_2A8[0x8]; // 0x2a8(0x08)
	int32_t CurrentStage; // 0x2b0(0x04)
	char pad_2B4[0x1c]; // 0x2b4(0x1c)

	bool TryCreateBeacon(); // Function Phoenix.Herb.TryCreateBeacon // (Final|Native|Protected) // @ game+0x32fd490
	void NotifyStageChange(int32_t NewStage, bool bIsInitialState); // Function Phoenix.Herb.NotifyStageChange // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	bool IsMultiHarvestable(); // Function Phoenix.Herb.IsMultiHarvestable // (Final|Native|Public|BlueprintCallable) // @ game+0x32fcbe0
	bool IsInPlot(); // Function Phoenix.Herb.IsInPlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fcbb0
	bool IsFinalStage(int32_t Stage); // Function Phoenix.Herb.IsFinalStage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fcac0
	struct AHerbPlot* GetPlot(); // Function Phoenix.Herb.GetPlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fc8a0
	struct FName GetPlantByproductID(struct FName PlantID); // Function Phoenix.Herb.GetPlantByproductID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32fc7f0
	int32_t GetNumStages(); // Function Phoenix.Herb.GetNumStages // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x32fc7d0
	bool GetHasInventorySpaceToHarvestPlantOfType(struct FName PlantID, struct FName CollectorCharacterID, struct FName FertilizerID, bool bIsPlanted); // Function Phoenix.Herb.GetHasInventorySpaceToHarvestPlantOfType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x32fc680
	void FinishHarvestingHerb(); // Function Phoenix.Herb.FinishHarvestingHerb // (Final|Native|Protected|BlueprintCallable) // @ game+0x32fc430
	void BP_NotifyHerbPlanted(); // Function Phoenix.Herb.BP_NotifyHerbPlanted // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BP_NotifyHerbHarvested(); // Function Phoenix.Herb.BP_NotifyHerbHarvested // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BP_NotifyHerbDestroyed(); // Function Phoenix.Herb.BP_NotifyHerbDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.HerbPlot
// Size: 0x310 (Inherited: 0x298)
struct AHerbPlot : AInteractiveObjectActor {
	struct FMulticastInlineDelegate HerbPlotBecomeActiveDelegate; // 0x298(0x10)
	struct FMulticastInlineDelegate HerbPlotBecomeInactiveDelegate; // 0x2a8(0x10)
	char pad_2B8[0x8]; // 0x2b8(0x08)
	struct UAkAudioEvent* PotionedSFXEvent; // 0x2c0(0x08)
	struct UAkAudioEvent* FertilizedSFXEvent; // 0x2c8(0x08)
	struct UAkAudioEvent* PlantedSFXEvent; // 0x2d0(0x08)
	char pad_2D8[0x20]; // 0x2d8(0x20)
	struct AHerbPlot* LeftNeighbor; // 0x2f8(0x08)
	struct AHerbPlot* RightNeighbor; // 0x300(0x08)
	char pad_308[0x8]; // 0x308(0x08)

	void SetPlotNeighborsFromChildComponents(struct TArray<struct UChildActorComponent*>& ChildComponents, bool bLoopNeighbors); // Function Phoenix.HerbPlot.SetPlotNeighborsFromChildComponents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x32fd2f0
	void PlantSeed(struct FName PlantID, struct FName InteractorID); // Function Phoenix.HerbPlot.PlantSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x32fd020
	void OpenPlotUI(); // Function Phoenix.HerbPlot.OpenPlotUI // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyInitialize(); // Function Phoenix.HerbPlot.NotifyInitialize // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyHerbPlanted(); // Function Phoenix.HerbPlot.NotifyHerbPlanted // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyHerbDestroyed(); // Function Phoenix.HerbPlot.NotifyHerbDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyHarvested(bool bIsMultiHarvest); // Function Phoenix.HerbPlot.NotifyHarvested // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyGrowAfterInitialize(); // Function Phoenix.HerbPlot.NotifyGrowAfterInitialize // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyFertilized(bool IsFertilized, struct FName FertilizerID, bool IsInitialState); // Function Phoenix.HerbPlot.NotifyFertilized // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyCompleteGrowth(); // Function Phoenix.HerbPlot.NotifyCompleteGrowth // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void NotifyBeginGrowth(); // Function Phoenix.HerbPlot.NotifyBeginGrowth // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	bool IsInLineWithNeighbors(); // Function Phoenix.HerbPlot.IsInLineWithNeighbors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fcb80
	void HerbPlotBecomeInactiveDelegate__DelegateSignature(); // DelegateFunction Phoenix.HerbPlot.HerbPlotBecomeInactiveDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void HerbPlotBecomeActiveDelegate__DelegateSignature(); // DelegateFunction Phoenix.HerbPlot.HerbPlotBecomeActiveDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void HarvestHerb(struct FName CollectorCharacterID); // Function Phoenix.HerbPlot.HarvestHerb // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc950
	struct UHerbPlotState* GetPlotState(); // Function Phoenix.HerbPlot.GetPlotState // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc8c0
	struct AHerb* GetPlantedHerb(); // Function Phoenix.HerbPlot.GetPlantedHerb // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32fc880
	void ForceState(struct FName PlantID, struct FName FertilizerID, enum class EHerbGrowthState GrowthState, float GrowthProgress); // Function Phoenix.HerbPlot.ForceState // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc520
	void ForceGrowthState(enum class EHerbGrowthState GrowthState, float GrowthProgress); // Function Phoenix.HerbPlot.ForceGrowthState // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc450
	void EnableCustomCamera(); // Function Phoenix.HerbPlot.EnableCustomCamera // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void DisableCustomCamera(); // Function Phoenix.HerbPlot.DisableCustomCamera // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void DestroyHerb(); // Function Phoenix.HerbPlot.DestroyHerb // (Final|Native|Public|BlueprintCallable) // @ game+0x32fc250
	void ApplyFertilizer(struct FName FertilizerID, struct FName InteractorID); // Function Phoenix.HerbPlot.ApplyFertilizer // (Final|Native|Public|BlueprintCallable) // @ game+0x32fbdf0
};

// Class Phoenix.HerbPlotManager
// Size: 0x378 (Inherited: 0xa8)
struct UHerbPlotManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x158]; // 0xa8(0x158)
	struct TMap<uint32_t, struct UHerbPlotState*> HerbPlotStates; // 0x200(0x50)
	struct FGameplayProperty_Float GrowthTimeMultiplier; // 0x250(0x90)
	char pad_2E0[0x98]; // 0x2e0(0x98)

	struct AActor* SpawnShell(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel); // Function Phoenix.HerbPlotManager.SpawnShell // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3301b00
	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.HerbPlotManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x33017f0
	void SaveData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.HerbPlotManager.SaveData // (Native|Public) // @ game+0x32658b0
	void ResetHarvestPlantCounts(); // Function Phoenix.HerbPlotManager.ResetHarvestPlantCounts // (Final|Native|Public) // @ game+0x33017b0
	void OnSaveGameLoaded(); // Function Phoenix.HerbPlotManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x3301770
	void OnNewGame(); // Function Phoenix.HerbPlotManager.OnNewGame // (Final|Native|Private) // @ game+0x3301680
	void OnGameToBeSaved(); // Function Phoenix.HerbPlotManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x3301640
	void GetOwnedSeeds(struct TArray<struct FSeedInfo>& OwnedSeeds); // Function Phoenix.HerbPlotManager.GetOwnedSeeds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3300fd0
	float GetGrowthTimeMultiplier(); // Function Phoenix.HerbPlotManager.GetGrowthTimeMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3300e40
	struct FFertilizerEffect GetFertilizerEffectStatic(struct FName FertilizerID); // Function Phoenix.HerbPlotManager.GetFertilizerEffectStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3300d40
	struct TArray<struct FName> GetAllPlantNames(); // Function Phoenix.HerbPlotManager.GetAllPlantNames // (Final|Native|Private|BlueprintCallable) // @ game+0x3300cc0
	void GetAllHerbologySeeds(); // Function Phoenix.HerbPlotManager.GetAllHerbologySeeds // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1074730
	void GetAllHerbologyByproducts(int32_t AmountToGrant); // Function Phoenix.HerbPlotManager.GetAllHerbologyByproducts // (Final|Exec|Native|Public) // @ game+0x321dc10
	bool DoesSeedFitInPlot(struct FSeedInfo& SeedInfo, struct AHerbPlot* HerbPlot); // Function Phoenix.HerbPlotManager.DoesSeedFitInPlot // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3300b30
	struct FPlantDefinition BP_GetPlantDefinition(struct FName PlantID, bool& DefinitionFound); // Function Phoenix.HerbPlotManager.BP_GetPlantDefinition // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3300570
	struct UHerbPlotManager* BP_Get(); // Function Phoenix.HerbPlotManager.BP_Get // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x3300540
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.HerbPlotManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.HerbPlotState
// Size: 0x118 (Inherited: 0x28)
struct UHerbPlotState : UObject {
	char pad_28[0xd0]; // 0x28(0xd0)
	struct AHerbPlot* HerbPlotActor; // 0xf8(0x08)
	char pad_100[0x18]; // 0x100(0x18)

	bool IsGrowing(); // Function Phoenix.HerbPlotState.IsGrowing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3301130
	int32_t GetYield(); // Function Phoenix.HerbPlotState.GetYield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3301100
	float GetRegrowthTimeRatio(); // Function Phoenix.HerbPlotState.GetRegrowthTimeRatio // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x33010b0
	struct FName GetPlotID(); // Function Phoenix.HerbPlotState.GetPlotID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3301090
	struct FName GetPlantID(); // Function Phoenix.HerbPlotState.GetPlantID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3301070
	bool GetIsInSanctuary(); // Function Phoenix.HerbPlotState.GetIsInSanctuary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3300f70
	struct FTimespan GetGrowthTimeRemaining(); // Function Phoenix.HerbPlotState.GetGrowthTimeRemaining // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x3300e60
	enum class EHerbGrowthState GetGrowthState(); // Function Phoenix.HerbPlotState.GetGrowthState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3300e20
	float GetGrowthProgressRatio(); // Function Phoenix.HerbPlotState.GetGrowthProgressRatio // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x3300df0
	struct FName GetFertilizerID(); // Function Phoenix.HerbPlotState.GetFertilizerID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3300dd0
};

// Class Phoenix.HideTransfigurationObjectActor
// Size: 0x270 (Inherited: 0x248)
struct AHideTransfigurationObjectActor : AActor {
	struct UBoxComponent* BoxComponent; // 0x248(0x08)
	char pad_250[0x20]; // 0x250(0x20)

	void OnOverlapEnd(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Phoenix.HideTransfigurationObjectActor.OnOverlapEnd // (Final|Native|Protected) // @ game+0x33016a0
};

// Class Phoenix.NavigationDisruptor
// Size: 0x2a0 (Inherited: 0x250)
struct ANavigationDisruptor : ATriggerBox {
	char pad_250[0x50]; // 0x250(0x50)

	void OnEndActorOverlap(struct AActor* SelfActor, struct AActor* Other); // Function Phoenix.NavigationDisruptor.OnEndActorOverlap // (Final|Native|Protected) // @ game+0x33014a0
	void OnBeginActorOverlap(struct AActor* SelfActor, struct AActor* Other); // Function Phoenix.NavigationDisruptor.OnBeginActorOverlap // (Final|Native|Protected) // @ game+0x3301230
};

// Class Phoenix.HideTrigger
// Size: 0x400 (Inherited: 0x250)
struct AHideTrigger : ATriggerBox {
	char pad_250[0x8]; // 0x250(0x08)
	int32_t HideFlags; // 0x258(0x04)
	int32_t PauseScheduleFlags; // 0x25c(0x04)
	struct TArray<struct FDbSingleColumnInfo> ExcludeNamed; // 0x260(0x10)
	struct TArray<struct FDbSingleColumnInfo> ExcludeNamedCreatures; // 0x270(0x10)
	struct TArray<struct FDbSingleColumnInfo> ExcludeCreatures; // 0x280(0x10)
	bool bStartActive; // 0x290(0x01)
	bool bExcludeCompanions; // 0x291(0x01)
	bool bShutdownExternalNpcs; // 0x292(0x01)
	char pad_293[0x1]; // 0x293(0x01)
	enum class EDynamicObstacleShape DynamicObstacleShape; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	struct UShapeComponent* DynamicObstacle; // 0x298(0x08)
	int32_t NumHideFlags; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UOdcObstacleComponent* NavObstacle; // 0x2a8(0x08)
	struct ANavigationDisruptor* NavigationDisruptor; // 0x2b0(0x08)
	char pad_2B8[0x148]; // 0x2b8(0x148)

	void OnEndAggroActorOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.HideTrigger.OnEndAggroActorOverlap // (Final|Native|Protected) // @ game+0x3301570
	void OnEndActorOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.HideTrigger.OnEndActorOverlap // (Final|Native|Protected) // @ game+0x33013d0
	void OnBeginAggroActorOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.HideTrigger.OnBeginAggroActorOverlap // (Final|Native|Protected) // @ game+0x3301300
	void OnBeginActorOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.HideTrigger.OnBeginActorOverlap // (Final|Native|Protected) // @ game+0x3301160
	void Deactivate(bool bInFromEndPlay); // Function Phoenix.HideTrigger.Deactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3300a20
	void Activate(); // Function Phoenix.HideTrigger.Activate // (Final|Native|Public|BlueprintCallable) // @ game+0x3300520
};

// Class Phoenix.AggroHideTrigger
// Size: 0x4a0 (Inherited: 0x400)
struct AAggroHideTrigger : AHideTrigger {
	char pad_400[0xa0]; // 0x400(0xa0)
};

// Class Phoenix.Hint
// Size: 0x90 (Inherited: 0x28)
struct UHint : UObject {
	char pad_28[0x68]; // 0x28(0x68)

	void GameLogicExpressionChanged(bool bNewValue); // Function Phoenix.Hint.GameLogicExpressionChanged // (Final|Native|Public) // @ game+0x3300c30
	void Blueprint_QueueForDisplay(float InInitialWaitTime, float InOnScreenTime, float InOffScreenTime, enum class ETutorialPosition InHintPosition, struct FDelegate& InShouldDisplayDelegate); // Function Phoenix.Hint.Blueprint_QueueForDisplay // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3300690
};

// Class Phoenix.HintManager
// Size: 0x40 (Inherited: 0x28)
struct UHintManager : UObject {
	struct TArray<struct UHint*> Hints; // 0x28(0x10)
	struct UGameLogicObject* GameLogicObject; // 0x38(0x08)

	void OnSaveGameLoaded(); // Function Phoenix.HintManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x3301790
	void OnGameToBeSaved(); // Function Phoenix.HintManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x3301660
	struct UGameLogicObject* GetHintManagerGameLogicObject(); // Function Phoenix.HintManager.GetHintManagerGameLogicObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3300f40
	struct UHint* GetHint(struct FString HintKey); // Function Phoenix.HintManager.GetHint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3300ea0
	void DestroyHint(struct UHint* Hint); // Function Phoenix.HintManager.DestroyHint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3300ab0
	struct UHint* CreateHint(struct FString Name); // Function Phoenix.HintManager.CreateHint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3300980
};

// Class Phoenix.HippogriffStatue
// Size: 0x248 (Inherited: 0x248)
struct AHippogriffStatue : AActor {

	void RepairAll(); // Function Phoenix.HippogriffStatue.RepairAll // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.HogsmeadeMapScreen
// Size: 0x4e0 (Inherited: 0x4d8)
struct UHogsmeadeMapScreen : UMapScreenBase {
	struct UMapHogsmeade* HogsmeadeMap; // 0x4d8(0x08)

	struct UMapHogsmeade* GetMap(); // Function Phoenix.HogsmeadeMapScreen.GetMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3300f90
};

// Class Phoenix.MapResponse
// Size: 0x30 (Inherited: 0x28)
struct UMapResponse : UObject {
	bool Handled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.HogwartsMapScreen
// Size: 0x560 (Inherited: 0x4d8)
struct UHogwartsMapScreen : UMapScreenBase {
	struct FMulticastInlineDelegate OnMapFaceDown; // 0x4d8(0x10)
	struct FMulticastInlineDelegate OnMapFaceTop; // 0x4e8(0x10)
	struct FMulticastInlineDelegate OnMapFaceRight; // 0x4f8(0x10)
	struct FMulticastInlineDelegate OnMapFaceLeft; // 0x508(0x10)
	struct FMulticastInlineDelegate OnMapDPadDown; // 0x518(0x10)
	struct FMulticastInlineDelegate OnMapDPadUp; // 0x528(0x10)
	struct FMulticastInlineDelegate OnMapDPadLeft; // 0x538(0x10)
	struct FMulticastInlineDelegate OnMapDPadRight; // 0x548(0x10)
	struct UMapHogwarts* HogwartsMap; // 0x558(0x08)

	void ShowOverlandButton(); // Function Phoenix.HogwartsMapScreen.ShowOverlandButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowHogsmeadeButton(); // Function Phoenix.HogwartsMapScreen.ShowHogsmeadeButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HogwartsSetPath_Event(); // Function Phoenix.HogwartsMapScreen.HogwartsSetPath_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HogwartsSelect_Event(); // Function Phoenix.HogwartsMapScreen.HogwartsSelect_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HogwartsFastTravel_Event(); // Function Phoenix.HogwartsMapScreen.HogwartsFastTravel_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HogwartsBack_Event(); // Function Phoenix.HogwartsMapScreen.HogwartsBack_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideOverlandButton(); // Function Phoenix.HogwartsMapScreen.HideOverlandButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideHogsmeadeButton(); // Function Phoenix.HogwartsMapScreen.HideHogsmeadeButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UMapHogwarts* GetMap(); // Function Phoenix.HogwartsMapScreen.GetMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3300fb0
};

// Class Phoenix.HousePointsHourglass
// Size: 0x250 (Inherited: 0x248)
struct AHousePointsHourglass : AActor {
	char pad_248[0x8]; // 0x248(0x08)

	void UpdateFinalHouseScore(struct TMap<struct FString, struct UStaticMeshComponent*> Houses); // Function Phoenix.HousePointsHourglass.UpdateFinalHouseScore // (Final|Native|Protected|BlueprintCallable) // @ game+0x3301dd0
	void CheckHousesScore(struct TMap<struct FString, struct UStaticMeshComponent*> Houses); // Function Phoenix.HousePointsHourglass.CheckHousesScore // (Final|Native|Protected|BlueprintCallable) // @ game+0x3300850
};

// Class Phoenix.Howler_Character
// Size: 0x4e0 (Inherited: 0x4e0)
struct AHowler_Character : ACharacter {
};

// Class Phoenix.HUD_Clock
// Size: 0x270 (Inherited: 0x268)
struct UHUD_Clock : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)

	void Setup(); // Function Phoenix.HUD_Clock.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x33017d0
	void OnTimeChanged(float Hour, float Minute); // Function Phoenix.HUD_Clock.OnTimeChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.HUDCompassIcon
// Size: 0x270 (Inherited: 0x268)
struct UHUDCompassIcon : UUserWidget {
	bool IsAnimating; // 0x268(0x01)
	bool InElevationRange; // 0x269(0x01)
	bool ShouldShowElevationHint; // 0x26a(0x01)
	bool IsInPathedState; // 0x26b(0x01)
	bool IsInLockedState; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)

	void TogglePathingBorder(bool ShowBorder, struct FString OutlineIconName); // Function Phoenix.HUDCompassIcon.TogglePathingBorder // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ToggleLockBadge(bool ShowLock); // Function Phoenix.HUDCompassIcon.ToggleLockBadge // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowIndicatorArrow(bool ShouldShow); // Function Phoenix.HUDCompassIcon.ShowIndicatorArrow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowDistance(bool ShouldShow); // Function Phoenix.HUDCompassIcon.ShowDistance // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetRotation(float Angle); // Function Phoenix.HUDCompassIcon.SetRotation // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetPulse(bool Enable); // Function Phoenix.HUDCompassIcon.SetPulse // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetIndicatorArrowRotation(float DegreeRot); // Function Phoenix.HUDCompassIcon.SetIndicatorArrowRotation // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetIconTextureByName(struct FString IconName, bool ShowPulse); // Function Phoenix.HUDCompassIcon.SetIconTextureByName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIconTexture(struct UTexture2D* Texture); // Function Phoenix.HUDCompassIcon.SetIconTexture // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIconSize(struct FVector2D NewSize); // Function Phoenix.HUDCompassIcon.SetIconSize // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void SetIconScale(float Scale); // Function Phoenix.HUDCompassIcon.SetIconScale // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetIconOpacity(float Opacity); // Function Phoenix.HUDCompassIcon.SetIconOpacity // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetElevationVisibility(enum class ESlateVisibility NewVisibility); // Function Phoenix.HUDCompassIcon.SetElevationVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetElevationDistance(int32_t Distance); // Function Phoenix.HUDCompassIcon.SetElevationDistance // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetDistanceValue(int32_t Distance); // Function Phoenix.HUDCompassIcon.SetDistanceValue // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetCompassIconVisibility(enum class ESlateVisibility NewVisibility); // Function Phoenix.HUDCompassIcon.SetCompassIconVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetCompassIconColorAndOpacity(struct FLinearColor NewColor); // Function Phoenix.HUDCompassIcon.SetCompassIconColorAndOpacity // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.IconNoteWidget
// Size: 0x278 (Inherited: 0x268)
struct UIconNoteWidget : UUserWidget {
	struct UImage* NoteImage; // 0x268(0x08)
	struct UPhoenixTextBlock* NoteLabel; // 0x270(0x08)

	void SetDetails(struct FString IconName, int32_t Quantity, struct FText DescriptionOverride, bool bAlreadyTranslated); // Function Phoenix.IconNoteWidget.SetDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x3305d40
	void OnSynchronizeProperties(); // Function Phoenix.IconNoteWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LightTemplateComponent
// Size: 0x240 (Inherited: 0x220)
struct ULightTemplateComponent : USceneComponent {
	struct FLightTemplateSettings TemplateSettings; // 0x218(0x28)

	void SetIntensityFactor(float InIntensityFactor, bool bApplyNow); // Function Phoenix.LightTemplateComponent.SetIntensityFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x3322b80
};

// Class Phoenix.IdentityLightTemplateComponent
// Size: 0x2a0 (Inherited: 0x240)
struct UIdentityLightTemplateComponent : ULightTemplateComponent {
	struct TMap<enum class ESanctuaryIdentity, struct FIdentityLightTemplateSettings> IdentityOverrides; // 0x240(0x50)
	struct FMulticastInlineDelegate OnIdentityUpdate; // 0x290(0x10)

	void OnUpdateIdentity(enum class ESanctuaryIdentity PreviousIdentity, enum class ESanctuaryIdentity CurrentIdentity, float BlendWeight); // Function Phoenix.IdentityLightTemplateComponent.OnUpdateIdentity // (Final|Native|Private) // @ game+0x3305850
};

// Class Phoenix.ImmunityComponent
// Size: 0x130 (Inherited: 0xc8)
struct UImmunityComponent : UActorComponent {
	struct FGameplayTagContainer ImmunityTagContainer; // 0xc8(0x20)
	struct FGameplayTagContainer ImmuneUnlessCriticalTagContainer; // 0xe8(0x20)
	bool bImmuneToEverythingExcept; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)
	struct FGameplayTagContainer ImmuneToEverythingExceptTagContainer; // 0x110(0x20)

	void SetImmuneToEverythingExcept(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ImmunityComponent.SetImmuneToEverythingExcept // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3306240
	void RemoveImmunity(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ImmunityComponent.RemoveImmunity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3305a80
	void RemoveImmuneUnlessCritical(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ImmunityComponent.RemoveImmuneUnlessCritical // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33059c0
	void RemoveAllImmunity(); // Function Phoenix.ImmunityComponent.RemoveAllImmunity // (Final|Native|Public|BlueprintCallable) // @ game+0x3305990
	void RemoveAllImmuneUnlessCritical(); // Function Phoenix.ImmunityComponent.RemoveAllImmuneUnlessCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x3305960
	bool IsImmuneTo(struct FGameplayTagContainer& InImpactTagContainer, bool bCritical); // Function Phoenix.ImmunityComponent.IsImmuneTo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3305470
	void ClearImmuneToEverythingExcept(); // Function Phoenix.ImmunityComponent.ClearImmuneToEverythingExcept // (Final|Native|Public|BlueprintCallable) // @ game+0x3304e10
	void AddImmunity(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ImmunityComponent.AddImmunity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3304b60
	void AddImmuneUnlessCritical(struct FGameplayTagContainer& InImpactTagContainer); // Function Phoenix.ImmunityComponent.AddImmuneUnlessCritical // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3304aa0
};

// Class Phoenix.ImmunityInterface
// Size: 0x28 (Inherited: 0x28)
struct UImmunityInterface : UInterface {

	bool ImmunityActivated(struct AActor* Instigator, struct FGameplayTagContainer Immunity); // Function Phoenix.ImmunityInterface.ImmunityActivated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3305310
};

// Class Phoenix.ImperiusComponent
// Size: 0x1c8 (Inherited: 0x190)
struct UImperiusComponent : UStateEffectComponent {
	struct FImperiusData ImperiusData; // 0x190(0x18)
	char pad_1A8[0x20]; // 0x1a8(0x20)

	void BP_EndEffect(); // Function Phoenix.ImperiusComponent.BP_EndEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1980b60
	void AttachEmitters(); // Function Phoenix.ImperiusComponent.AttachEmitters // (Final|Native|Public|BlueprintCallable) // @ game+0x3304d50
};

// Class Phoenix.ImperiusSpellTool
// Size: 0x888 (Inherited: 0x868)
struct AImperiusSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> ImperiusFX2; // 0x868(0x10)
	struct UGameplayPropertyMod* Mod; // 0x878(0x08)
	char pad_880[0x8]; // 0x880(0x08)

	void DoSpellComponentSetup(struct UStateEffectComponent* StateEffectComponent); // Function Phoenix.ImperiusSpellTool.DoSpellComponentSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x3304e30
};

// Class Phoenix.IncendioComponent
// Size: 0x288 (Inherited: 0x190)
struct UIncendioComponent : UStateEffectComponent {
	struct FVector SpawnPos; // 0x190(0x0c)
	float InitialRadius; // 0x19c(0x04)
	float RingWidth; // 0x1a0(0x04)
	float BurnRate; // 0x1a4(0x04)
	float BurnRateScale; // 0x1a8(0x04)
	float JumpDistance; // 0x1ac(0x04)
	float ParticleSpawnRateScale; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct TArray<struct UMeshComponent*> OnFireMeshComponents; // 0x1b8(0x10)
	struct TArray<struct UStaticMeshComponent*> CharredStaticMeshComponents; // 0x1c8(0x10)
	struct USphereComponent* ContainmentSphere; // 0x1d8(0x08)
	struct TArray<struct FBurningMaterial> BurningMaterials; // 0x1e0(0x10)
	struct TArray<struct UMeshComponent*> UnburnedMeshes; // 0x1f0(0x10)
	struct UMaterialPropertyData* MaterialPropertyData; // 0x200(0x08)
	struct UMeshComponent* OrigMeshComponent; // 0x208(0x08)
	char pad_210[0x78]; // 0x210(0x78)

	bool IsPointOnFire(struct FVector Point, bool LimitToRing); // Function Phoenix.IncendioComponent.IsPointOnFire // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3305580
	bool IsComplete(); // Function Phoenix.IncendioComponent.IsComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3305440
};

// Class Phoenix.ParticleModuleLocationStaticMesh
// Size: 0x68 (Inherited: 0x30)
struct UParticleModuleLocationStaticMesh : UParticleModuleLocationBase {
	char Velocity : 1; // 0x30(0x01)
	char pad_30_1 : 7; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FRawDistributionFloat VelocityScale; // 0x38(0x30)
};

// Class Phoenix.IncendioParticleModule
// Size: 0x78 (Inherited: 0x68)
struct UIncendioParticleModule : UParticleModuleLocationStaticMesh {
	enum class ESpawnAreaEnum SpawnArea; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UCurveFloat* FalloffCurve; // 0x70(0x08)
};

// Class Phoenix.IncendioSpellTool
// Size: 0x8a8 (Inherited: 0x868)
struct AIncendioSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> FlameFX2; // 0x868(0x10)
	float CharacterDamageScale; // 0x878(0x04)
	char pad_87C[0x4]; // 0x87c(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x880(0x08)
	char pad_888[0x8]; // 0x888(0x08)
	struct AMunitionType_AOE_MultiFX* CurrentAOE; // 0x890(0x08)
	struct TArray<struct AActor*> AOEIgnoreList; // 0x898(0x10)
};

// Class Phoenix.IncompletePolyjuiceItemTool
// Size: 0x498 (Inherited: 0x488)
struct AIncompletePolyjuiceItemTool : AConsumablePotionItemTool {
	float UsageDistance; // 0x488(0x04)
	char pad_48C[0xc]; // 0x48c(0x0c)
};

// Class Phoenix.Index_FG
// Size: 0x3d8 (Inherited: 0x3c8)
struct UIndex_FG : UTabPageWidget {
	char pad_3C8[0x10]; // 0x3c8(0x10)

	void OnSetSchoolPct(float OldPct, float NewPct); // Function Phoenix.Index_FG.OnSetSchoolPct // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetPlayerLevel(int32_t NewLevel); // Function Phoenix.Index_FG.OnSetPlayerLevel // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetActionsPct(float OldPct, float NewPct); // Function Phoenix.Index_FG.OnSetActionsPct // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnGetAvailableAssignments(struct FString DisplayText); // Function Phoenix.Index_FG.OnGetAvailableAssignments // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GetAvailableAssignments(); // Function Phoenix.Index_FG.GetAvailableAssignments // (Final|Native|Public|BlueprintCallable) // @ game+0x3304f10
};

// Class Phoenix.InfirmarySettings
// Size: 0x50 (Inherited: 0x28)
struct UInfirmarySettings : UObject {
	int32_t MaximumNumberOfStudentsInInfirmary; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FString ActivityKey; // 0x30(0x10)
	struct FString HospitalSiteLocation; // 0x40(0x10)
};

// Class Phoenix.InfirmaryManager
// Size: 0xf8 (Inherited: 0x28)
struct UInfirmaryManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct FMulticastInlineDelegate StudentAddedToInfirmary; // 0x38(0x10)
	struct FMulticastInlineDelegate StudentRemovedToInfirmary; // 0x48(0x10)
	char pad_58[0x90]; // 0x58(0x90)
	struct TArray<struct FInfirmaryStudentStatus> StudentList; // 0xe8(0x10)

	void OnSaveGameLoaded(); // Function Phoenix.InfirmaryManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x3305830
	void OnNewGame(); // Function Phoenix.InfirmaryManager.OnNewGame // (Final|Native|Private) // @ game+0x3305810
	void OnGameToBeSaved(); // Function Phoenix.InfirmaryManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x3305720
	bool IsStudentIn(struct FString UniqueId); // Function Phoenix.InfirmaryManager.IsStudentIn // (Final|Native|Public|BlueprintCallable) // @ game+0x3305670
	void HourlyCheck(struct FTimeEvent& InTimeEvent); // Function Phoenix.InfirmaryManager.HourlyCheck // (Final|Native|Private|HasOutParms) // @ game+0x3305260
	void GetStudents(struct TArray<struct FString>& OutStudents); // Function Phoenix.InfirmaryManager.GetStudents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3305100
	struct UInfirmaryManager* Get(); // Function Phoenix.InfirmaryManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3304ec0
	void AddStudent(struct FString UniqueId, int64_t SecondsInTheInfirmary, enum class EInfirmaryPriority Priority); // Function Phoenix.InfirmaryManager.AddStudent // (Final|Native|Public|BlueprintCallable) // @ game+0x3304c20
};

// Class Phoenix.InGameMenuScreen
// Size: 0x380 (Inherited: 0x370)
struct UInGameMenuScreen : UScreen {
	struct UPageStack* ThePageStack; // 0x370(0x08)
	bool NeedsAutosave; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)

	void SetButtonLegend(struct TArray<struct FLegendItemData>& Legend); // Function Phoenix.InGameMenuScreen.SetButtonLegend // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void MarkNeedsAutosave(); // Function Phoenix.InGameMenuScreen.MarkNeedsAutosave // (Final|Native|Public|BlueprintCallable) // @ game+0x33090c0
	void ExitPauseMenu(bool SkipFade); // Function Phoenix.InGameMenuScreen.ExitPauseMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.InstallFeatureSettings
// Size: 0x40 (Inherited: 0x28)
struct UInstallFeatureSettings : UObject {
	bool bSupportsLanguagePacks; // 0x28(0x01)
	bool bSupportsLanguagePackInstalling; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
	struct TArray<struct FInstallFeature> InstallFeatures; // 0x30(0x10)
};

// Class Phoenix.InstallManager
// Size: 0x48 (Inherited: 0x28)
struct UInstallManager : UObject {
	char pad_28[0x20]; // 0x28(0x20)

	void UninstallFeature(enum class EInstallFeatures FeatureId); // Function Phoenix.InstallManager.UninstallFeature // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x3309660
	bool IsLanguageInstalledOrInstalling(struct FString Language); // Function Phoenix.InstallManager.IsLanguageInstalledOrInstalling // (Final|Native|Public|BlueprintCallable) // @ game+0x3309010
	bool IsInstallingAnyPack(); // Function Phoenix.InstallManager.IsInstallingAnyPack // (Final|Native|Public|BlueprintCallable) // @ game+0x3308fe0
	bool IsInstallingAnyLanguagePack(); // Function Phoenix.InstallManager.IsInstallingAnyLanguagePack // (Final|Native|Public|BlueprintCallable) // @ game+0x3308fb0
	void InstallFeature(enum class EInstallFeatures FeatureId); // Function Phoenix.InstallManager.InstallFeature // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x3308f30
	enum class EFeatureInstallState GetFeatureInstallState(enum class EInstallFeatures FeatureId); // Function Phoenix.InstallManager.GetFeatureInstallState // (Final|Native|Public|BlueprintCallable) // @ game+0x3308dc0
	float GetFeatureInstallPercentage(enum class EInstallFeatures FeatureId); // Function Phoenix.InstallManager.GetFeatureInstallPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x3308d30
	enum class EInstallFeatures GetCurrentlyInstallingFeatureId(); // Function Phoenix.InstallManager.GetCurrentlyInstallingFeatureId // (Final|Native|Public|BlueprintCallable) // @ game+0x3308d00
	struct UInstallManager* Get(); // Function Phoenix.InstallManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3308cd0
	struct FString FindAvailableInstalledLanguage(); // Function Phoenix.InstallManager.FindAvailableInstalledLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x3308c50
};

// Class Phoenix.InstallManagerProgressBar
// Size: 0x270 (Inherited: 0x268)
struct UInstallManagerProgressBar : UUserWidget {
	char pad_268[0x8]; // 0x268(0x08)

	void StartPendingLoad(); // Function Phoenix.InstallManagerProgressBar.StartPendingLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x33095a0
	float GetInstallPercentage(); // Function Phoenix.InstallManagerProgressBar.GetInstallPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x3308f00
	struct FString GetInstallMessageText(); // Function Phoenix.InstallManagerProgressBar.GetInstallMessageText // (Final|Native|Public|BlueprintCallable) // @ game+0x3308e80
	enum class EInstallManagerState GetInstallManagerState(); // Function Phoenix.InstallManagerProgressBar.GetInstallManagerState // (Final|Native|Public|BlueprintCallable) // @ game+0x3308e50
};

// Class Phoenix.InstancedCharacterBoneSwarmComponent
// Size: 0x1d0 (Inherited: 0xc8)
struct UInstancedCharacterBoneSwarmComponent : UActorComponent {
	struct UCharacterBoneProjector* Projector; // 0xc8(0x08)
	struct FCharacterBoneProjectionParams ProjectionParams; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct FBoneSwarmGenerationParameters SwarmGenerationParams; // 0xd8(0x10)
	struct FBoneSwarmerInitialConditions SwarmInitialConditions; // 0xe8(0x54)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct ASkinFXDefinition* SkinEffect; // 0x140(0x08)
	struct FName ParamProjectionsCenterRadius; // 0x148(0x08)
	struct FName ParamProjectionsMin; // 0x150(0x08)
	struct FName ParamProjectionsMax; // 0x158(0x08)
	struct FName ParamTotalProjectionsCenterRadius; // 0x160(0x08)
	struct FName ParamActorCenterRadius; // 0x168(0x08)
	bool bParamProjectionsCenterRadius; // 0x170(0x01)
	bool bParamProjectionsMin; // 0x171(0x01)
	bool bParamProjectionsMax; // 0x172(0x01)
	bool bParamTotalProjectionsCenterRadius; // 0x173(0x01)
	bool bParamActorCenterRadius; // 0x174(0x01)
	char pad_175[0x3]; // 0x175(0x03)
	struct UParticleSystem* OnFirstBoneTouch; // 0x178(0x08)
	struct TArray<struct FName> OnFirstBoneTouchIgnoreBones; // 0x180(0x10)
	struct UParticleSystem* OnPoof; // 0x190(0x08)
	int32_t PoofLimitParticles; // 0x198(0x04)
	bool bPoofLimitParticles; // 0x19c(0x01)
	bool bDisableMotionBlur; // 0x19d(0x01)
	char pad_19E[0x2]; // 0x19e(0x02)
	int32_t NextUnhide; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct UInstancedStaticMeshComponent* SwarmMeshes; // 0x1a8(0x08)
	struct FBoneParticleTracker BoneParticles; // 0x1b0(0x10)
	struct USkinFXComponent* SkinFXComponent; // 0x1c0(0x08)
	bool bDebugDraw; // 0x1c8(0x01)
	bool bDebugBounds; // 0x1c9(0x01)
	bool bDebugProjectionResults; // 0x1ca(0x01)
	char pad_1CB[0x5]; // 0x1cb(0x05)

	void UnhideNext(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.UnhideNext // (Native|Public|BlueprintCallable) // @ game+0x19fc450
	void UnhideAll(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.UnhideAll // (Native|Public|BlueprintCallable) // @ game+0x1980b80
	int32_t UnHide(int32_t howMany); // Function Phoenix.InstancedCharacterBoneSwarmComponent.UnHide // (Native|Public|BlueprintCallable) // @ game+0x33095c0
	void Reset(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.Reset // (Native|Public|BlueprintCallable) // @ game+0x3309580
	int32_t RemainingHidden(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.RemainingHidden // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3309550
	void Poof(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.Poof // (Native|Public|BlueprintCallable) // @ game+0x3309530
	void KillAll(); // Function Phoenix.InstancedCharacterBoneSwarmComponent.KillAll // (Native|Public|BlueprintCallable) // @ game+0x1980b60
};

// Class Phoenix.InstancedTrailActorComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UInstancedTrailActorComponent : UActorComponent {
	bool bEditorOnly; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.InstancedTrailActor
// Size: 0x500 (Inherited: 0x248)
struct AInstancedTrailActor : AActor {
	int32_t MaxMeshes; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UStaticMesh* TrailMemberMesh; // 0x250(0x08)
	float spacing; // 0x258(0x04)
	float RandomizeSpacingPercent; // 0x25c(0x04)
	int32_t Burst; // 0x260(0x04)
	char pad_264[0xc]; // 0x264(0x0c)
	struct FTransform FollowOffset; // 0x270(0x30)
	struct FInstancedTrailMemberBehavior MemberBehavior; // 0x2a0(0x1e0)
	bool bEnabled; // 0x480(0x01)
	char pad_481[0x7]; // 0x481(0x07)
	struct UInstancedStaticMeshComponent* TrailMeshes; // 0x488(0x08)
	struct TArray<struct FInstancedTrailMember> TrailMembers; // 0x490(0x10)
	int32_t NextTrailMember; // 0x4a0(0x04)
	char pad_4A4[0x5c]; // 0x4a4(0x5c)

	void Reset(); // Function Phoenix.InstancedTrailActor.Reset // (Native|Public) // @ game+0x31e1760
	void Regenerate(); // Function Phoenix.InstancedTrailActor.Regenerate // (Native|Public) // @ game+0x31e1780
};

// Class Phoenix.Int_ScheduledEntitySynchronizeMethod
// Size: 0x30 (Inherited: 0x28)
struct UInt_ScheduledEntitySynchronizeMethod : UIntProvider {
	enum class ESynchronizeMethod Value; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.InteractionZoneComponent
// Size: 0x4d0 (Inherited: 0x4b0)
struct UInteractionZoneComponent : UBoxComponent {
	char pad_4B0[0x20]; // 0x4b0(0x20)

	void OnEndOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.InteractionZoneComponent.OnEndOverlap // (Final|Native|Public) // @ game+0x33093d0
	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.InteractionZoneComponent.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x33091b0
	void OnActorEndPlay(struct AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.InteractionZoneComponent.OnActorEndPlay // (Final|Native|Public) // @ game+0x33090e0
};

// Class Phoenix.InteractiveObjectComponent
// Size: 0x120 (Inherited: 0xc8)
struct UInteractiveObjectComponent : UActorComponent {
	enum class EInteractiveState m_initialState; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TArray<enum class EInteractiveState> m_stateArray; // 0xd0(0x10)
	struct TArray<struct FInteractiveObjectLinkData> m_linkArray; // 0xe0(0x10)
	bool bCustomInteract; // 0xf0(0x01)
	char pad_F1[0x2f]; // 0xf1(0x2f)

	void SetState(enum class EInteractiveState State); // Function Phoenix.InteractiveObjectComponent.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3310ba0
	void SetEnabled(bool bEnable); // Function Phoenix.InteractiveObjectComponent.SetEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3310840
	void HandleInteract(struct UObject* i_caller); // Function Phoenix.InteractiveObjectComponent.HandleInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x330f5c0
	enum class EInteractiveState GetState(); // Function Phoenix.InteractiveObjectComponent.GetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3230850
	bool GetEnabled(); // Function Phoenix.InteractiveObjectComponent.GetEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x330e790
	void CheckForStateChange(enum class EInteractiveAction Action); // Function Phoenix.InteractiveObjectComponent.CheckForStateChange // (Final|Native|Public|BlueprintCallable) // @ game+0x330df50
};

// Class Phoenix.InteractTimedButtonWatcher
// Size: 0x160 (Inherited: 0x160)
struct UInteractTimedButtonWatcher : UTimedButtonWatcher {

	void TargetSighted(struct UAISense* Sense, struct AActor* Target); // Function Phoenix.InteractTimedButtonWatcher.TargetSighted // (Final|Native|Public) // @ game+0x3310e40
	void TargetChanged(struct UAISense* Sense, struct AActor* NewTarget, struct AActor* OldTarget); // Function Phoenix.InteractTimedButtonWatcher.TargetChanged // (Final|Native|Public) // @ game+0x3310d30
};

// Class Phoenix.InteractTimedButtonWatcherRecord
// Size: 0x60 (Inherited: 0x60)
struct UInteractTimedButtonWatcherRecord : UTimedButtonWatcherRecord {
};

// Class Phoenix.InterestPoint
// Size: 0x250 (Inherited: 0x248)
struct AInterestPoint : AActor {
	struct USceneComponent* SceneComponent; // 0x248(0x08)
};

// Class Phoenix.LerpVolumeAudioFadeInterpolant
// Size: 0x38 (Inherited: 0x28)
struct ULerpVolumeAudioFadeInterpolant : ULerpVolumeInterpolant {
	struct FName RTPC; // 0x28(0x08)
	float UpdateThreshold; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.IntroBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UIntroBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	void SetLoadingRootLevel(bool bLoadingRootLevel); // Function Phoenix.IntroBlueprintFunctionLibrary.SetLoadingRootLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33108d0
	void SetCheating(bool bCheating); // Function Phoenix.IntroBlueprintFunctionLibrary.SetCheating // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33107c0
	bool IsLoadingRootLevel(bool bReset); // Function Phoenix.IntroBlueprintFunctionLibrary.IsLoadingRootLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330fe70
	bool IsCheating(); // Function Phoenix.IntroBlueprintFunctionLibrary.IsCheating // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x330fe10
	void IntroStart(struct UObject* WorldContextObject); // Function Phoenix.IntroBlueprintFunctionLibrary.IntroStart // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f8c0
	void IntroSave(struct UObject* WorldContextObject, enum class EIntroCheckpoint Checkpoint, struct FVector PlayerSpawnLocation); // Function Phoenix.IntroBlueprintFunctionLibrary.IntroSave // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x330f7b0
	void IntroEnd(struct UObject* WorldContextObject); // Function Phoenix.IntroBlueprintFunctionLibrary.IntroEnd // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f730
	enum class EIntroCheckpoint GetIntroCheckpoint(); // Function Phoenix.IntroBlueprintFunctionLibrary.GetIntroCheckpoint // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x330e8f0
};

// Class Phoenix.CrimeScene
// Size: 0x2b0 (Inherited: 0x2b0)
struct ACrimeScene : AWorldObject {

	void GlobalEnableCrime(bool i_Enable); // Function Phoenix.CrimeScene.GlobalEnableCrime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f550
};

// Class Phoenix.IntrusionVolumeComponent
// Size: 0x280 (Inherited: 0x220)
struct UIntrusionVolumeComponent : USceneComponent {
	struct FString OpeningTime; // 0x218(0x10)
	struct FString ClosingTime; // 0x228(0x10)
	char pad_240[0x18]; // 0x240(0x18)
	struct FMulticastInlineDelegate OnCaughtByAuthorityFigure; // 0x258(0x10)
	struct USceneRig_Intrusion* IntrusionSceneRig; // 0x268(0x08)
	struct FStatList Stat; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)

	struct FEventDateTime WhenWillPlayerBeDisallowed(); // Function Phoenix.IntrusionVolumeComponent.WhenWillPlayerBeDisallowed // (Final|Native|Public|BlueprintCallable) // @ game+0x3311f20
	struct FEventDateTime WhenWillPlayerBeAllowed(); // Function Phoenix.IntrusionVolumeComponent.WhenWillPlayerBeAllowed // (Final|Native|Public|BlueprintCallable) // @ game+0x3311ed0
	void PlayIntrusionSceneRig(struct ANPC_Character* InNPC); // Function Phoenix.IntrusionVolumeComponent.PlayIntrusionSceneRig // (Final|Native|Public) // @ game+0x3310320
	void OnIntrusionPerceptionDone(struct ANPC_Character* InNPC); // Function Phoenix.IntrusionVolumeComponent.OnIntrusionPerceptionDone // (Final|Native|Public) // @ game+0x3310270
	void OnCaught(); // Function Phoenix.IntrusionVolumeComponent.OnCaught // (Final|Native|Public) // @ game+0x33101f0
	void OnActorEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.IntrusionVolumeComponent.OnActorEndOverlap // (Final|Native|Public) // @ game+0x3310120
	void OnActorBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.IntrusionVolumeComponent.OnActorBeginOverlap // (Final|Native|Public) // @ game+0x3310050
	bool IsPlayerInIntrusionArea(); // Function Phoenix.IntrusionVolumeComponent.IsPlayerInIntrusionArea // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x330ff30
	bool IsPlayerAllowed(); // Function Phoenix.IntrusionVolumeComponent.IsPlayerAllowed // (Final|Native|Public|BlueprintCallable) // @ game+0x330ff00
	void EnableIntrusion(bool Enable); // Function Phoenix.IntrusionVolumeComponent.EnableIntrusion // (Final|Native|Public|BlueprintCallable) // @ game+0x330e320
};

// Class Phoenix.InventoryAbilityManager
// Size: 0x90 (Inherited: 0x28)
struct UInventoryAbilityManager : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	struct FName PolyJuiceCharacter; // 0x78(0x08)
	float CurrentEffectiveness; // 0x80(0x04)
	char pad_84[0xc]; // 0x84(0x0c)

	void SetPolyJuiceCharacter(struct FName PolyJuiceCharacterName); // Function Phoenix.InventoryAbilityManager.SetPolyJuiceCharacter // (Final|Native|Public) // @ game+0x33109c0
	void OnGameToBeSaved(); // Function Phoenix.InventoryAbilityManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x3310250
	void OnGameToBeLoaded(); // Function Phoenix.InventoryAbilityManager.OnGameToBeLoaded // (Final|Native|Public) // @ game+0x3310230
	struct FName GetPolyJuiceCharacter(); // Function Phoenix.InventoryAbilityManager.GetPolyJuiceCharacter // (Final|Native|Public) // @ game+0x330f470
	float GetItemeffectivenessMultiplier(struct AActor* OwnerActor, struct FName ItemName); // Function Phoenix.InventoryAbilityManager.GetItemeffectivenessMultiplier // (Final|Native|Public) // @ game+0x330f030
	float GetCurrentEffectivenessMultiplier(); // Function Phoenix.InventoryAbilityManager.GetCurrentEffectivenessMultiplier // (Final|Native|Public) // @ game+0x330e770
	void AddWellRestedToPlayer(); // Function Phoenix.InventoryAbilityManager.AddWellRestedToPlayer // (Final|Native|Public) // @ game+0x1074730
	void AddWellFedToPlayer(); // Function Phoenix.InventoryAbilityManager.AddWellFedToPlayer // (Final|Native|Public) // @ game+0x1074730
	void AddSocialNotorietyToPlayer(); // Function Phoenix.InventoryAbilityManager.AddSocialNotorietyToPlayer // (Final|Native|Public) // @ game+0x330d990
	void AddSocialInfamousToPlayer(); // Function Phoenix.InventoryAbilityManager.AddSocialInfamousToPlayer // (Final|Native|Public) // @ game+0x330d970
	void AddPermenantWellRestedToPlayer(); // Function Phoenix.InventoryAbilityManager.AddPermenantWellRestedToPlayer // (Final|Exec|Native|Public) // @ game+0x330d950
	void AddPermenantWellFedToPlayer(); // Function Phoenix.InventoryAbilityManager.AddPermenantWellFedToPlayer // (Final|Exec|Native|Public) // @ game+0x330d930
	void AddOrRefreshAbility(struct AActor* OwnerActor, struct FName ItemName, struct FName Name); // Function Phoenix.InventoryAbilityManager.AddOrRefreshAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x330d820
	void AddHouseLeaderToPlayer(); // Function Phoenix.InventoryAbilityManager.AddHouseLeaderToPlayer // (Final|Native|Public) // @ game+0x330d800
};

// Class Phoenix.InventoryItemToolRecord
// Size: 0x90 (Inherited: 0x50)
struct UInventoryItemToolRecord : UToolRecord {
	struct TSoftClassPtr<UObject> InventoryItemTool; // 0x50(0x28)
	struct FMulticastInlineDelegate OnLoadComplete; // 0x78(0x10)
	char pad_88[0x8]; // 0x88(0x08)

	void LoadComplete__DelegateSignature(struct UInventoryItemToolRecord* ToolRecord); // DelegateFunction Phoenix.InventoryItemToolRecord.LoadComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void LoadComplete(); // Function Phoenix.InventoryItemToolRecord.LoadComplete // (Final|Native|Public) // @ game+0x3310010
	bool IsLoaded(); // Function Phoenix.InventoryItemToolRecord.IsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x330fe40
};

// Class Phoenix.InventoryManager
// Size: 0x1c8 (Inherited: 0x28)
struct UInventoryManager : UObject {
	char pad_28[0x130]; // 0x28(0x130)
	struct TMap<struct FName, struct FCachedInventory> m_cachedInventories; // 0x158(0x50)
	char pad_1A8[0x20]; // 0x1a8(0x20)

	void Test_SetOffenseStat(struct FString GearID, struct FString Variation, int32_t Offense); // Function Phoenix.InventoryManager.Test_SetOffenseStat // (Final|Exec|Native|Public) // @ game+0x3311600
	void Test_SetDefenseStat(struct FString GearID, struct FString Variation, int32_t Defense); // Function Phoenix.InventoryManager.Test_SetDefenseStat // (Final|Exec|Native|Public) // @ game+0x3311450
	void Test_SetCooldownStat(struct FString GearID, struct FString Variation, int32_t Cooldown); // Function Phoenix.InventoryManager.Test_SetCooldownStat // (Final|Exec|Native|Public) // @ game+0x33112a0
	void Test_GetGearEmptyTraitSlots(struct FString GearID, struct FString Variation); // Function Phoenix.InventoryManager.Test_GetGearEmptyTraitSlots // (Final|Exec|Native|Public) // @ game+0x3311120
	void Test_AddGearTrait(struct FString GearID, struct FString Variation, struct FString TraitID); // Function Phoenix.InventoryManager.Test_AddGearTrait // (Final|Exec|Native|Public) // @ game+0x3310f10
	void ResetInventory(struct FName CharacterID, struct FName HolderID, bool ResetKeepOnResetItems); // Function Phoenix.InventoryManager.ResetInventory // (Final|Exec|Native|Public) // @ game+0x33103b0
	void OnSaveGameLoaded(); // Function Phoenix.InventoryManager.OnSaveGameLoaded // (Final|Native|Protected) // @ game+0x3310300
	void LootContainerStats(struct FString ContainerID, int32_t iterations); // Function Phoenix.InventoryManager.LootContainerStats // (Final|Exec|Native|Public) // @ game+0x31cc0f0
	void ItemConsumed__DelegateSignature(struct FName& InCharacterID, struct FName& InItemID); // DelegateFunction Phoenix.InventoryManager.ItemConsumed__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x38a7480
	void InventoryUseItem(struct FString ItemId); // Function Phoenix.InventoryManager.InventoryUseItem // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void InventoryAddTool(struct FString ToolID); // Function Phoenix.InventoryManager.InventoryAddTool // (Final|Exec|Native|Public) // @ game+0x330fc50
	void InventoryAddHerbologyGear(); // Function Phoenix.InventoryManager.InventoryAddHerbologyGear // (Final|Exec|Native|Public) // @ game+0x330fc30
	void InventoryAddGenericGear(); // Function Phoenix.InventoryManager.InventoryAddGenericGear // (Final|Exec|Native|Public) // @ game+0x330fc10
	void InventoryAddGear(struct FString ItemId, struct FString Variation); // Function Phoenix.InventoryManager.InventoryAddGear // (Final|Exec|Native|Public) // @ game+0x330fa90
	void InventoryAddDadaGear(); // Function Phoenix.InventoryManager.InventoryAddDadaGear // (Final|Exec|Native|Public) // @ game+0x330fa70
	void InventoryAdd(struct FString ItemId, int32_t Quantity); // Function Phoenix.InventoryManager.InventoryAdd // (Final|Exec|Native|Public) // @ game+0x330f940
};

// Class Phoenix.InventoryManagerInterface
// Size: 0x28 (Inherited: 0x28)
struct UInventoryManagerInterface : UObject {

	bool UseItemByName(struct FName CharacterID, struct FName ItemId, struct FName Variation); // Function Phoenix.InventoryManagerInterface.UseItemByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3311d30
	bool UseItem(struct FName CharacterID, struct FInventoryResult InventoryResult); // Function Phoenix.InventoryManagerInterface.UseItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3311ba0
	bool TransferItemToPlayerInventoryBP(struct FInventoryResult TransferItem, int32_t AmountToTransfer); // Function Phoenix.InventoryManagerInterface.TransferItemToPlayerInventoryBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33119f0
	bool TransferItemToContainerBP(struct FInventoryResult ItemToTransfer, struct FName CharacterID, struct FName HolderID, int32_t AmountToTransfer); // Function Phoenix.InventoryManagerInterface.TransferItemToContainerBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33117d0
	void SetPlayerExpandedInventoryBP(int32_t newInventoryAmount); // Function Phoenix.InventoryManagerInterface.SetPlayerExpandedInventoryBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3310950
	bool SellItemFromPlayerInventoryBP(struct FInventoryResult TransferItem, int32_t SoldCount, struct FName VendorName, int32_t& OutKnutsEarned); // Function Phoenix.InventoryManagerInterface.SellItemFromPlayerInventoryBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3310590
	void ResetInventory(struct FName CharacterID, struct FName HolderID); // Function Phoenix.InventoryManagerInterface.ResetInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33104c0
	bool IsAbilityActive(struct AActor* Actor, struct FName AbilityName); // Function Phoenix.InventoryManagerInterface.IsAbilityActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330fd40
	bool HasAnyInventory(struct FName CharacterID, struct FName HolderID); // Function Phoenix.InventoryManagerInterface.HasAnyInventory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f650
	struct TArray<struct FName> GetQuestItems(); // Function Phoenix.InventoryManagerInterface.GetQuestItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f490
	struct TArray<struct FName> GetPlayerUnlimitedHolders(); // Function Phoenix.InventoryManagerInterface.GetPlayerUnlimitedHolders // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f3a0
	int32_t GetPlayerStolenItemCount(); // Function Phoenix.InventoryManagerInterface.GetPlayerStolenItemCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12aa170
	struct TArray<struct FName> GetPlayerLimitedHolders(); // Function Phoenix.InventoryManagerInterface.GetPlayerLimitedHolders // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f2d0
	int32_t GetPlayerExpandedInventoryBP(); // Function Phoenix.InventoryManagerInterface.GetPlayerExpandedInventoryBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f290
	int32_t GetPlayerAvailableCapacity(struct FName ItemId, bool UseMaxCapacityWhenNoReturnExcess); // Function Phoenix.InventoryManagerInterface.GetPlayerAvailableCapacity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330f1a0
	struct FName GetItemInventoryFullString(struct FName ItemId); // Function Phoenix.InventoryManagerInterface.GetItemInventoryFullString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330ef80
	bool GetIsInspectableBP(struct FString ItemId); // Function Phoenix.InventoryManagerInterface.GetIsInspectableBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330ee70
	void GetInventoryTypesBP(struct TArray<struct FName>& InventoryTypeArray); // Function Phoenix.InventoryManagerInterface.GetInventoryTypesBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x330edd0
	void GetInventoryTextBP(struct FName InCharacterID, struct FName InItemTypeID, struct TArray<struct FInventoryResult>& InventoryResultArray, struct FInventoryFilter InventoryFilter, struct FName HolderID, bool SkipLockedItems, bool SpecifiedHolderOnly); // Function Phoenix.InventoryManagerInterface.GetInventoryTextBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x330ea30
	int32_t GetInventorySellPriceBP(struct FName CharacterID, struct FName HolderID); // Function Phoenix.InventoryManagerInterface.GetInventorySellPriceBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e950
	int32_t GetHolderMaxSlotsBP(struct FName HolderID); // Function Phoenix.InventoryManagerInterface.GetHolderMaxSlotsBP // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x330e860
	struct FName GetHolderInventoryFullString(struct FName HolderID); // Function Phoenix.InventoryManagerInterface.GetHolderInventoryFullString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e7b0
	int32_t GetCount(struct FName CharacterID, struct FName InventoryObjectID, enum class EInventoryObjectType InventoryObjectType, enum class EStolenType StolenType, struct FName HolderID, struct FName Variation); // Function Phoenix.InventoryManagerInterface.GetCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e570
	int32_t GetCost(struct FName InventoryObjectID, struct FName Variation); // Function Phoenix.InventoryManagerInterface.GetCost // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e490
	int32_t GetContainerMaxSlotsBP(struct FName ContainerID); // Function Phoenix.InventoryManagerInterface.GetContainerMaxSlotsBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e400
	bool DropItemBP(struct FInventoryResult ItemToDrop, int32_t AmountToDrop); // Function Phoenix.InventoryManagerInterface.DropItemBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330e190
	int32_t CanAddItem(struct FName CharacterID, struct FName ItemId, struct FName HolderID, struct FName Variation, int32_t Count); // Function Phoenix.InventoryManagerInterface.CanAddItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330dd90
	int32_t AdjustCount(struct FName CharacterID, struct FName InventoryObjectID, int32_t Delta, enum class EInventoryChangeReason Reason, struct FName HolderID, struct FName Variation, bool SuppressHUDNotification, bool SpecialHUDNotification, struct FName OtherCharacterID, bool IsUnique, bool IsStolen, bool KeepOnReset); // Function Phoenix.InventoryManagerInterface.AdjustCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x330d9b0
};

// Class Phoenix.InventoryObject
// Size: 0x330 (Inherited: 0x2b0)
struct AInventoryObject : AWorldObject {
	char pad_2B0[0x20]; // 0x2b0(0x20)
	int32_t UnitCount; // 0x2d0(0x04)
	bool IsStolen; // 0x2d4(0x01)
	bool IsUnique; // 0x2d5(0x01)
	char pad_2D6[0x2]; // 0x2d6(0x02)
	struct FName Variation; // 0x2d8(0x08)
	int64_t RespawnTime; // 0x2e0(0x08)
	enum class EInventoryObjectSpawnType SpawnType; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct UAkAudioEvent* m_pickupSfx; // 0x2f0(0x08)
	struct FName BeaconableObjectID; // 0x2f8(0x08)
	char pad_300[0x30]; // 0x300(0x30)

	void SetItemData(struct FName ItemId, int32_t ItemCount, struct FName InVariation, bool InIsStolen, bool InIsUnique); // Function Phoenix.InventoryObject.SetItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x3317b10
	void OnPickedUpHandlerMulti__DelegateSignature(struct FName ItemId, int32_t ItemCount); // DelegateFunction Phoenix.InventoryObject.OnPickedUpHandlerMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnPickedUpHandler__DelegateSignature(struct FName ItemId, int32_t ItemCount); // DelegateFunction Phoenix.InventoryObject.OnPickedUpHandler__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void NotifyPickedUp(struct FName ItemId, int32_t ItemCount); // Function Phoenix.InventoryObject.NotifyPickedUp // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddPickedUpHandler(struct FDelegate& Handler); // Function Phoenix.InventoryObject.AddPickedUpHandler // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3315600
};

// Class Phoenix.InventoryObjectManager
// Size: 0x198 (Inherited: 0xa8)
struct UInventoryObjectManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x10]; // 0xa8(0x10)
	struct FGameplayProperty_Int MaxStackModifier; // 0xb8(0x80)
	char pad_138[0x60]; // 0x138(0x60)

	void SaveData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.InventoryObjectManager.SaveData // (Native|Public) // @ game+0x32658b0
};

// Class Phoenix.InventoryObjectManagerBPInterface
// Size: 0x28 (Inherited: 0x28)
struct UInventoryObjectManagerBPInterface : UObject {

	struct UStaticMesh* GetItemStaticMesh(struct FName InventoryObjectID); // Function Phoenix.InventoryObjectManagerBPInterface.GetItemStaticMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3316840
	int32_t GetItemSellPrice(int32_t DbPrice, int32_t EconomyValue); // Function Phoenix.InventoryObjectManagerBPInterface.GetItemSellPrice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3316760
	bool GetItemProperties(struct FName InventoryObjectID, struct FItemProperties& ItemProperties, struct FName Variation); // Function Phoenix.InventoryObjectManagerBPInterface.GetItemProperties // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33165e0
	int32_t GetInventorySlotCapacityByName(struct FName ItemId, struct FName ItemType, struct FName SlotLevelName); // Function Phoenix.InventoryObjectManagerBPInterface.GetInventorySlotCapacityByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3316480
	int32_t GetInventorySlotCapacityByIndex(struct FName ItemId, struct FName ItemType, int32_t SlotLevelIndex); // Function Phoenix.InventoryObjectManagerBPInterface.GetInventorySlotCapacityByIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3316360
};

// Class Phoenix.InventoryState
// Size: 0x30 (Inherited: 0x28)
struct UInventoryState : UObject {
	struct UUserWidget* InventoryOwner; // 0x28(0x08)

	void OnEndState(); // Function Phoenix.InventoryState.OnEndState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3317850
	void InitializeState(struct UUserWidget* OwningWidget); // Function Phoenix.InventoryState.InitializeState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3317310
	bool HandleUMGInputAction(enum class EUMGInputAction InputAction, enum class EInputEvent InputEvent, struct UUserWidget* InventoryButton); // Function Phoenix.InventoryState.HandleUMGInputAction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33171f0
	bool HandleClicked(struct UUserWidget* InventoryButton); // Function Phoenix.InventoryState.HandleClicked // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3317150
	void GetTooltipLegendData(struct FInventoryResult InventoryItem, struct TArray<struct FLegendItemData>& LegendData); // Function Phoenix.InventoryState.GetTooltipLegendData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x3316f90
	struct UUserWidget* GetTooltipContent(struct UUserWidget* hoveredButton); // Function Phoenix.InventoryState.GetTooltipContent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3316ef0
	struct TArray<struct UUserWidget*> GetNonExpandableTooltipContent(struct UUserWidget* hoveredButton); // Function Phoenix.InventoryState.GetNonExpandableTooltipContent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3316b60
	struct FString GetMenuTitle(enum class EInventoryTabCategory TabCategory); // Function Phoenix.InventoryState.GetMenuTitle // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x33169e0
	struct TArray<struct FInventoryHolder> GetInventoryItemData(enum class EInventorySortType SortType); // Function Phoenix.InventoryState.GetInventoryItemData // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x3316230
	enum class EInventoryTabCategory GetDefaultInventoryTab(); // Function Phoenix.InventoryState.GetDefaultInventoryTab // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x170d8d0
};

// Class Phoenix.InvestigatableComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UInvestigatableComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	int32_t totalInvestigations; // 0xd0(0x04)
	char pad_D4[0xc]; // 0xd4(0x0c)

	bool GetInvestigatable(); // Function Phoenix.InvestigatableComponent.GetInvestigatable // (Final|Native|Public|BlueprintCallable) // @ game+0x33165a0
};

// Class Phoenix.InvestigatableKnowledge
// Size: 0x128 (Inherited: 0xe0)
struct UInvestigatableKnowledge : UInvestigatableComponent {
	struct FKnowledgeInfo DbKnowledgeInfo; // 0xe0(0x30)
	struct TArray<struct FName> SecretFactLockNames; // 0x110(0x10)
	enum class EKnowledgeAction KnowledgeActionOverride; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
};

// Class Phoenix.IsmDestructionManager
// Size: 0x98 (Inherited: 0x28)
struct UIsmDestructionManager : UObject {
	char pad_28[0x60]; // 0x28(0x60)
	struct TArray<struct FIsmDesInstance> PendingInstances; // 0x88(0x10)

	void RegisterMapping(struct TSoftObjectPtr<UStaticMesh>& InStaticMesh, struct TSoftClassPtr<UObject>& InDestructibleActor); // Function Phoenix.IsmDestructionManager.RegisterMapping // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3317930
	struct UIsmDestructionManager* Get(); // Function Phoenix.IsmDestructionManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3315cc0
	bool ConvertInstanceIfNecessary(struct AActor* HitTarget, struct FBox& Box, float Damage, struct FHitResult& HitResult, struct AActor* Instigator, struct AMunitionType_Base* Munition); // Function Phoenix.IsmDestructionManager.ConvertInstanceIfNecessary // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33156f0
};

// Class Phoenix.IsmParent
// Size: 0x258 (Inherited: 0x248)
struct AIsmParent : AActor {
	struct UStaticMesh* InstancedMesh; // 0x248(0x08)
	bool HierarchicalISM; // 0x250(0x01)
	bool DisableISM; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
};

// Class Phoenix.IsmParentComponent
// Size: 0x220 (Inherited: 0x220)
struct UIsmParentComponent : USceneComponent {
};

// Class Phoenix.ItemScrollBox
// Size: 0x888 (Inherited: 0x880)
struct UItemScrollBox : UScrollBox {
	float StickScrollStepSize; // 0x880(0x04)
	char pad_884[0x4]; // 0x884(0x04)

	void SetNavigationScrollPadding(float NewNavigationScrollPadding); // Function Phoenix.ItemScrollBox.SetNavigationScrollPadding // (Final|Native|Public|BlueprintCallable) // @ game+0x3317d40
	void SetNavigationDestination(enum class EDescendantScrollDestination NewNavigationDestination); // Function Phoenix.ItemScrollBox.SetNavigationDestination // (Final|Native|Public|BlueprintCallable) // @ game+0x3317cc0
	void SetAlwaysShowScrollbarTrack(bool NewAlwaysShowScrollbarTrack); // Function Phoenix.ItemScrollBox.SetAlwaysShowScrollbarTrack // (Final|Native|Public|BlueprintCallable) // @ game+0x3317a80
	void OnStickScroll(float AnalogVal); // Function Phoenix.ItemScrollBox.OnStickScroll // (Final|Native|Public|BlueprintCallable) // @ game+0x33178b0
};

// Class Phoenix.ItemTool
// Size: 0x2f0 (Inherited: 0x2e0)
struct AItemTool : ATool {
	struct UStaticMeshComponent* Mesh; // 0x2e0(0x08)
	struct UObject* AbleExecutionClass; // 0x2e8(0x08)

	struct UItemToolRecord* GetItemToolRecord(); // Function Phoenix.ItemTool.GetItemToolRecord // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33168d0
	struct ACharacter* GetCharacter(); // Function Phoenix.ItemTool.GetCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3315f20
};

// Class Phoenix.ItemToolRecord
// Size: 0x58 (Inherited: 0x50)
struct UItemToolRecord : UToolRecord {
	struct AItemTool* ItemTool; // 0x50(0x08)
};

// Class Phoenix.KnowledgeManager
// Size: 0x370 (Inherited: 0x28)
struct UKnowledgeManager : UObject {
	char pad_28[0x348]; // 0x28(0x348)

	void UpdateGoldChestChallenge(struct AActor* Chest); // Function Phoenix.KnowledgeManager.UpdateGoldChestChallenge // (Final|Native|Public|BlueprintCallable) // @ game+0x3317dc0
	void OnSaveGameLoaded(); // Function Phoenix.KnowledgeManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3317890
	void OnNewGame(); // Function Phoenix.KnowledgeManager.OnNewGame // (Final|Native|Public) // @ game+0x3317870
	void KnowledgeLevelSet(struct FString KnowledgeCard, struct FString Level); // Function Phoenix.KnowledgeManager.KnowledgeLevelSet // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33176d0
	bool IsSubjectCompletelyKnown(struct FName ObjectID); // Function Phoenix.KnowledgeManager.IsSubjectCompletelyKnown // (Final|Native|Public|BlueprintCallable) // @ game+0x3317630
	struct FName IsKnowledgeSubject(struct FName ObjectID, bool IsRecursion); // Function Phoenix.KnowledgeManager.IsKnowledgeSubject // (Final|Native|Public|BlueprintCallable) // @ game+0x3317550
	struct FName IsGroupMember(struct FName ObjectID); // Function Phoenix.KnowledgeManager.IsGroupMember // (Final|Native|Public|BlueprintCallable) // @ game+0x33174c0
	bool IsFactKnown(struct FName ObjectID, struct FName FactColumnID, enum class EKnowledgeLevel& KnowledgeLevel); // Function Phoenix.KnowledgeManager.IsFactKnown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33173a0
	float GetSubjectKnowledgePoints(struct FName ObjectID); // Function Phoenix.KnowledgeManager.GetSubjectKnowledgePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x3316e50
	struct FName GetSubjectKnowledgeCategory(struct FName ObjectID); // Function Phoenix.KnowledgeManager.GetSubjectKnowledgeCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x3316dc0
	struct FName GetRegionKnowledgeCardFromLocation(struct FVector Location); // Function Phoenix.KnowledgeManager.GetRegionKnowledgeCardFromLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3316d10
	enum class EKnowledgeLevel GetPlayerKnowledgeLevel(struct FName ObjectID, struct FName FactColumnID); // Function Phoenix.KnowledgeManager.GetPlayerKnowledgeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x3316c40
	struct FName GetNameFromKnowledgeLevel(enum class EKnowledgeLevel KnowledgeLevel); // Function Phoenix.KnowledgeManager.GetNameFromKnowledgeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x3316ac0
	struct TArray<struct FKnowledgeAuthority> GetKnowledgeAuthority(struct FName KnowledgeSubjectID); // Function Phoenix.KnowledgeManager.GetKnowledgeAuthority // (Final|Native|Public|BlueprintCallable) // @ game+0x3316900
	struct TArray<struct FName> GetGroupMembers(struct FName ObjectID); // Function Phoenix.KnowledgeManager.GetGroupMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x3316150
	float GetFieldGuideCompletionPercentage(); // Function Phoenix.KnowledgeManager.GetFieldGuideCompletionPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x3316120
	int32_t GetCompanionLevel(struct FString CharacterID); // Function Phoenix.KnowledgeManager.GetCompanionLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x3316070
	struct TMap<struct FName, struct FCollectionCategory> GetCollections(); // Function Phoenix.KnowledgeManager.GetCollections // (Final|Native|Public|BlueprintCallable) // @ game+0x3315f50
	struct TArray<struct FName> GetAllKnowledgeCardsByCategory(struct FString Category); // Function Phoenix.KnowledgeManager.GetAllKnowledgeCardsByCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x3315de0
	struct TArray<struct FName> GetAllKnowledgeCards(); // Function Phoenix.KnowledgeManager.GetAllKnowledgeCards // (Final|Native|Public|BlueprintCallable) // @ game+0x3315d60
	struct UKnowledgeManager* Get(); // Function Phoenix.KnowledgeManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3315d10
	void GainKnowledgeFromNPC(struct FName ObjectID, struct FName NPCID, bool InDisplayTicker); // Function Phoenix.KnowledgeManager.GainKnowledgeFromNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x3315bb0
	void GainKnowledgeFromAction(struct FName ObjectID, enum class EKnowledgeAction KnowledgeAction, bool InDisplayTicker); // Function Phoenix.KnowledgeManager.GainKnowledgeFromAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3315a90
	void GainKnowledgeFact(struct FName ObjectID, struct FName FactColumnID, enum class EKnowledgeAction KnowledgeAction, bool InDisplayTicker); // Function Phoenix.KnowledgeManager.GainKnowledgeFact // (Final|Native|Public|BlueprintCallable) // @ game+0x3315930
	void CompleteAllKnowledgeCards(); // Function Phoenix.KnowledgeManager.CompleteAllKnowledgeCards // (Final|Exec|Native|Public) // @ game+0x33156d0
	void CompleteAllCollections(); // Function Phoenix.KnowledgeManager.CompleteAllCollections // (Final|Exec|Native|Public) // @ game+0x33156b0
	void AddKnowledgePointsToCard(struct FString KnowledgeCard, float PointsToAdd); // Function Phoenix.KnowledgeManager.AddKnowledgePointsToCard // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33154d0
	void AddKnowledgeFromInventory(struct FString Level); // Function Phoenix.KnowledgeManager.AddKnowledgeFromInventory // (Final|Exec|Native|Public) // @ game+0x33153e0
};

// Class Phoenix.Ladder
// Size: 0x250 (Inherited: 0x248)
struct ALadder : AActor {
	bool bPlayerClimbingEnabled; // 0x248(0x01)
	bool bPlayerMountTopEnabled; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)

	float GetMeshHeight(); // Function Phoenix.Ladder.GetMeshHeight // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x331ca20
	float GetLadderTopZ(); // Function Phoenix.Ladder.GetLadderTopZ // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x331c640
	int32_t GetLadderHeight(); // Function Phoenix.Ladder.GetLadderHeight // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x331c610
	float GetLadderBottomZ(); // Function Phoenix.Ladder.GetLadderBottomZ // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x331c5e0
	void EnablePlayerMountTop(); // Function Phoenix.Ladder.EnablePlayerMountTop // (Final|Native|Public|BlueprintCallable) // @ game+0x331bd50
	void EnablePlayerClimbing(); // Function Phoenix.Ladder.EnablePlayerClimbing // (Final|Native|Public|BlueprintCallable) // @ game+0x331bd30
	void DisablePlayerMountTop(); // Function Phoenix.Ladder.DisablePlayerMountTop // (Final|Native|Public|BlueprintCallable) // @ game+0x331bd10
	void DisablePlayerClimbing(); // Function Phoenix.Ladder.DisablePlayerClimbing // (Final|Native|Public|BlueprintCallable) // @ game+0x331bcf0
	bool CanPlayerClimbLadder(); // Function Phoenix.Ladder.CanPlayerClimbLadder // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x331ba60
};

// Class Phoenix.LadderNavLinkComponent
// Size: 0x2d0 (Inherited: 0x280)
struct ULadderNavLinkComponent : UOdcNavLinkComponent {
	bool bIsBottomLinkPosValid; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FVector LadderBottomLinkEnd; // 0x284(0x0c)
	bool bIsTopLinkPosValid; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	struct FVector LadderTopLinkEnd; // 0x294(0x0c)
	struct FOdcLadderInfo LadderInfo; // 0x2a0(0x28)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UpdateNavLink(struct FOdcLadderInfo& Info); // Function Phoenix.LadderNavLinkComponent.UpdateNavLink // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x331dcf0
	void RegisterNavLink(); // Function Phoenix.LadderNavLinkComponent.RegisterNavLink // (Final|Native|Protected|BlueprintCallable) // @ game+0x331d460
	bool HasValidLinks(); // Function Phoenix.LadderNavLinkComponent.HasValidLinks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x331ccc0
};

// Class Phoenix.RegionData
// Size: 0x50 (Inherited: 0x28)
struct URegionData : UObject {
	struct FString RegionName; // 0x28(0x10)
	bool IsUnlocked; // 0x38(0x01)
	bool IsNewlyUnlocked; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
	struct APhoenixMapRegion* SplineActor; // 0x40(0x08)
	float CurrentAlphaValue; // 0x48(0x04)
	float FadeTime; // 0x4c(0x04)
};

// Class Phoenix.LandscapeManager
// Size: 0x270 (Inherited: 0x28)
struct ULandscapeManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnAnyLevelLoaded; // 0x30(0x10)
	char pad_40[0xe0]; // 0x40(0xe0)
	struct TArray<struct URegionData*> OverlandRegionData; // 0x120(0x10)
	struct TMap<enum class ERegionType, struct URegionSplineContainer*> MapRegions; // 0x130(0x50)
	struct TMap<enum class ERegionType, struct URegionSplineContainer*> LevelRegions; // 0x180(0x50)
	struct TMap<enum class ERegionType, struct URegionSplineContainer*> SubLevelRegions; // 0x1d0(0x50)
	struct TMap<enum class ERegionType, struct URegionSplineContainer*> InnerLevelRegions; // 0x220(0x50)

	void RemoveCriticalLevel(struct ULevelStreaming* InLevel); // Function Phoenix.LandscapeManager.RemoveCriticalLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x331d480
	void PrepareMapCapture(); // Function Phoenix.LandscapeManager.PrepareMapCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x331d440
	void OnShow(); // Function Phoenix.LandscapeManager.OnShow // (Final|Native|Public) // @ game+0x331d400
	void OnSaveGameLoad(); // Function Phoenix.LandscapeManager.OnSaveGameLoad // (Final|Native|Public) // @ game+0x331d420
	void OnLoad(); // Function Phoenix.LandscapeManager.OnLoad // (Final|Native|Public) // @ game+0x331d400
	void OnGameToSave(); // Function Phoenix.LandscapeManager.OnGameToSave // (Final|Native|Public) // @ game+0x331d3e0
	bool IsReadyForMapCapture(); // Function Phoenix.LandscapeManager.IsReadyForMapCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x331d200
	bool IsLocationExploredRegion(struct FVector Location, float MapScale); // Function Phoenix.LandscapeManager.IsLocationExploredRegion // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x331d110
	bool IsLocationExploredFog(struct FVector Location, float MapScale); // Function Phoenix.LandscapeManager.IsLocationExploredFog // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x331d020
	bool IsLoadedLevelCritical(struct ULevel* InLevel); // Function Phoenix.LandscapeManager.IsLoadedLevelCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x331cf80
	bool IsLevelCritical(struct ULevelStreaming* InLevel); // Function Phoenix.LandscapeManager.IsLevelCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x331cee0
	int32_t GetNumActiveLevelLoads(bool InCriticalOnly); // Function Phoenix.LandscapeManager.GetNumActiveLevelLoads // (Final|Native|Public|BlueprintCallable) // @ game+0x331ca60
	struct FBox GetLandscapeWorldBounds(); // Function Phoenix.LandscapeManager.GetLandscapeWorldBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x331c740
	struct ULandscapeManager* Get(); // Function Phoenix.LandscapeManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331c0f0
	void ForceLandscapeLODs(); // Function Phoenix.LandscapeManager.ForceLandscapeLODs // (Final|Native|Public|BlueprintCallable) // @ game+0x331c0d0
	void DoMapCapture(); // Function Phoenix.LandscapeManager.DoMapCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void ClearCriticalLevels(); // Function Phoenix.LandscapeManager.ClearCriticalLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void CleanupMapCapture(); // Function Phoenix.LandscapeManager.CleanupMapCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x331ba90
	void AddCriticalLevel(struct ULevelStreaming* InLevel); // Function Phoenix.LandscapeManager.AddCriticalLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x331b710
};

// Class Phoenix.LandscapeUtils
// Size: 0x28 (Inherited: 0x28)
struct ULandscapeUtils : UBlueprintFunctionLibrary {

	void LogLandscapeComponentLayerInfoData(struct ULandscapeHeightfieldCollisionComponent* LandColComponent); // Function Phoenix.LandscapeUtils.LogLandscapeComponentLayerInfoData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331d360
	struct TArray<struct FLayerInfoWeight> LineTraceForLayerInfoWeight(struct FVector Start, struct FVector End); // Function Phoenix.LandscapeUtils.LineTraceForLayerInfoWeight // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x331d230
	float GetWetnessFromLayerInfoData(struct ULandscapeHeightfieldCollisionComponent* LandColComponent, struct FVector& InLocation, struct TArray<struct FString>& InWetnessLayerInfoNames, struct UPhysicalMaterial*& OutPhysMaterial); // Function Phoenix.LandscapeUtils.GetWetnessFromLayerInfoData // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x331cb00
	struct TArray<struct FLayerInfoWeight> GetLandscapeComponentLayerInfoData(struct ULandscapeHeightfieldCollisionComponent* LandColComponent); // Function Phoenix.LandscapeUtils.GetLandscapeComponentLayerInfoData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331c670
	void ClearLandscapeComponentLayerInfoData(); // Function Phoenix.LandscapeUtils.ClearLandscapeComponentLayerInfoData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331bc50
};

// Class Phoenix.Leader_Manager
// Size: 0x1d0 (Inherited: 0x1b8)
struct ULeader_Manager : UEnemy_Manager {
	char pad_1B8[0x18]; // 0x1b8(0x18)
};

// Class Phoenix.Legend
// Size: 0x388 (Inherited: 0x328)
struct ULegend : UPhoenixUserWidget {
	struct FSoftClassPath LegendItemSoftClassPath; // 0x328(0x18)
	struct FSlateColor LegendItemTextColor; // 0x340(0x28)
	struct TArray<struct FLegendItemData> LegendItemData; // 0x368(0x10)
	struct TArray<struct ULegendItem*> mLegendItems; // 0x378(0x10)

	void RemoveAllLegendItems(int32_t StartFromIndex); // Function Phoenix.Legend.RemoveAllLegendItems // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitLegendData(struct TArray<struct FLegendItemData> LegendData); // Function Phoenix.Legend.InitLegendData // (Final|Native|Public|BlueprintCallable) // @ game+0x331ccf0
	struct ULegendItem* GetLegendItem(int32_t Index); // Function Phoenix.Legend.GetLegendItem // (Final|Native|Public|BlueprintCallable) // @ game+0x331c770
	void AddLegendItem(struct ULegendItem* NewLegendItem); // Function Phoenix.Legend.AddLegendItem // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LegendBox
// Size: 0x268 (Inherited: 0x268)
struct ULegendBox : UUserWidget {

	void MoveCursorToButton(); // Function Phoenix.LegendBox.MoveCursorToButton // (Exec|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LegendItem
// Size: 0x380 (Inherited: 0x328)
struct ULegendItem : UPhoenixUserWidget {
	struct FMulticastInlineDelegate HoldReleasedEvent; // 0x328(0x10)
	struct FLegendItemData mLegendItemData; // 0x338(0x30)
	bool mIsHolding; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	float mProgress; // 0x36c(0x04)
	bool mDisabledState; // 0x370(0x01)
	char pad_371[0x3]; // 0x371(0x03)
	float mHoldTimeRemaining; // 0x374(0x04)
	char pad_378[0x8]; // 0x378(0x08)

	void UpdateFillMeterStyle(enum class EInputDeviceUsed UsedInputDevice); // Function Phoenix.LegendItem.UpdateFillMeterStyle // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void StopHolding(); // Function Phoenix.LegendItem.StopHolding // (Final|Native|Public|BlueprintCallable) // @ game+0x331dcd0
	void StartHolding(); // Function Phoenix.LegendItem.StartHolding // (Final|Native|Public|BlueprintCallable) // @ game+0x331dcb0
	void SetTextColor(struct FSlateColor InColor); // Function Phoenix.LegendItem.SetTextColor // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetProgressUsed(bool ProgressUsed); // Function Phoenix.LegendItem.SetProgressUsed // (Final|Native|Public|BlueprintCallable) // @ game+0x331db90
	void SetProgress(float Progress); // Function Phoenix.LegendItem.SetProgress // (Final|Native|Public) // @ game+0x331db10
	void SetLegendItemData(struct FLegendItemData& LegendItemData); // Function Phoenix.LegendItem.SetLegendItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x331da50
	void SetHoldDuration(float NewHoldDuration); // Function Phoenix.LegendItem.SetHoldDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x331d8c0
	void SetDisabledState(bool Disabled); // Function Phoenix.LegendItem.SetDisabledState // (Final|Native|Public|BlueprintCallable) // @ game+0x331d7b0
	void ProgressUsedChanged(bool ProgressUsed); // Function Phoenix.LegendItem.ProgressUsedChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ProgressChanged(float Progress); // Function Phoenix.LegendItem.ProgressChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LegendItemHoldReleaseEvent__DelegateSignature(struct ULegendItem* LegendItem, bool HoldWasCompleted); // DelegateFunction Phoenix.LegendItem.LegendItemHoldReleaseEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void LegendItemDataChanged(struct FString ButtonString, struct FString TextString, bool TextStringIsLocalized); // Function Phoenix.LegendItem.LegendItemDataChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct FLegendItemData GetLegendItemData(); // Function Phoenix.LegendItem.GetLegendItemData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x331c810
	void DisabledStateChanged(bool Disabled); // Function Phoenix.LegendItem.DisabledStateChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LerpVolumeMapLocationTagInterpolant
// Size: 0x30 (Inherited: 0x30)
struct ULerpVolumeMapLocationTagInterpolant : ULerpVolumeDynamicTagInterpolant {
};

// Class Phoenix.LerpVolumeDBLocationTagInterpolant
// Size: 0x48 (Inherited: 0x30)
struct ULerpVolumeDBLocationTagInterpolant : ULerpVolumeDynamicTagInterpolant {
	struct FString Location; // 0x30(0x10)
	struct FName LocationName; // 0x40(0x08)
};

// Class Phoenix.Letterbox_Base
// Size: 0x268 (Inherited: 0x268)
struct ULetterbox_Base : UUserWidget {

	void ShowLetterbox(bool Show); // Function Phoenix.Letterbox_Base.ShowLetterbox // (Final|Native|Public|BlueprintCallable) // @ game+0x331dc20
	void OnShowLetterbox(bool Show); // Function Phoenix.Letterbox_Base.OnShowLetterbox // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LevelStreamingLatencyProfiler
// Size: 0xa8 (Inherited: 0x28)
struct ULevelStreamingLatencyProfiler : UObject {
	char pad_28[0x80]; // 0x28(0x80)
};

// Class Phoenix.LeviosoComponent
// Size: 0x2b8 (Inherited: 0x190)
struct ULeviosoComponent : UStateEffectComponent {
	struct FLeviosoData LeviosoData; // 0x190(0x90)
	struct AMunitionType_Base* ActiveMunition; // 0x220(0x08)
	struct UPrimitiveComponent* SavedPhysMesh; // 0x228(0x08)
	char pad_230[0x10]; // 0x230(0x10)
	struct UCurveFloat* SavedHoverTargetOffset; // 0x240(0x08)
	struct UCurveVector* SavedHoverTargetRotation; // 0x248(0x08)
	struct TArray<struct AActor*> IgnoreActors; // 0x250(0x10)
	char pad_260[0x58]; // 0x260(0x58)

	void SetIgnoreActors(struct TArray<struct AActor*> i_Ingores); // Function Phoenix.LeviosoComponent.SetIgnoreActors // (Final|Native|Public|BlueprintCallable) // @ game+0x331d940
	void SetFloorHeight(float Height); // Function Phoenix.LeviosoComponent.SetFloorHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x331d840
	void SetData(struct FLeviosoData InData); // Function Phoenix.LeviosoComponent.SetData // (Final|Native|Public) // @ game+0x331d510
};

// Class Phoenix.LeviosoSpellTool
// Size: 0x8f0 (Inherited: 0x868)
struct ALeviosoSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> LeviosoFX2; // 0x868(0x10)
	float MassMax; // 0x878(0x04)
	float LinearDamping; // 0x87c(0x04)
	float AngularDamping; // 0x880(0x04)
	float BeingClimbedLinearDamping; // 0x884(0x04)
	float BeingClimbedAngularDamping; // 0x888(0x04)
	bool NoSimulatingWhenBeingClimbed; // 0x88c(0x01)
	char pad_88D[0x3]; // 0x88d(0x03)
	float HoverForce; // 0x890(0x04)
	float RagdollHoverForce; // 0x894(0x04)
	float HoverHeight; // 0x898(0x04)
	float MinDiff; // 0x89c(0x04)
	float MaxDiff; // 0x8a0(0x04)
	float TorqueScale; // 0x8a4(0x04)
	struct UCurveFloat* HoverTargetOffset; // 0x8a8(0x08)
	struct UCurveVector* HoverTargetRotation; // 0x8b0(0x08)
	bool UpdateHeight; // 0x8b8(0x01)
	char pad_8B9[0x3]; // 0x8b9(0x03)
	float NoSupportDropRate; // 0x8bc(0x04)
	float SupportTraceLength; // 0x8c0(0x04)
	char pad_8C4[0x4]; // 0x8c4(0x04)
	struct AMunitionType_Base* AOEMunition; // 0x8c8(0x08)
	struct TArray<struct AActor*> IgnoreActors; // 0x8d0(0x10)
	char pad_8E0[0x10]; // 0x8e0(0x10)
};

// Class Phoenix.LightClippingPlanesSupportLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULightClippingPlanesSupportLibrary : UBlueprintFunctionLibrary {

	void GetLightClippingPlanesSource(struct ULocalLightComponent* LightComponent, struct ALightClippingPlanes*& LightClippingPlanesActor); // Function Phoenix.LightClippingPlanesSupportLibrary.GetLightClippingPlanesSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c880
	void GetAllWorldLightsWithTag(struct UObject* WorldContextObject, struct FName LightTag, struct TArray<struct ULocalLightComponent*>& Lights); // Function Phoenix.LightClippingPlanesSupportLibrary.GetAllWorldLightsWithTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c4c0
	void GetAllWithLightClippingPlanesActor(struct ALightClippingPlanes* LightClippingPlanesActor, struct TArray<struct ULocalLightComponent*>& Lights, enum class ELightClippingPlanesFilterType FilterType); // Function Phoenix.LightClippingPlanesSupportLibrary.GetAllWithLightClippingPlanesActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c260
	void GetAllLevelLightsWithTag(struct ULevel* Level, struct FName LightTag, struct TArray<struct ULocalLightComponent*>& Lights); // Function Phoenix.LightClippingPlanesSupportLibrary.GetAllLevelLightsWithTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c140
	void FindAndAssignLightClippingPlanesSource(struct FName LightTag, struct ALightClippingPlanes* LightClippingPlanesActor, int32_t& AssignedLights, bool bForceEvenIfAlreadySet, bool bInvertClippingPlanes); // Function Phoenix.LightClippingPlanesSupportLibrary.FindAndAssignLightClippingPlanesSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331bd70
	void ClearLightClippingSource(struct ULocalLightComponent* LightComponent); // Function Phoenix.LightClippingPlanesSupportLibrary.ClearLightClippingSource // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331bc70
	void ClearAllLightClippingPlanesSource(struct ALightClippingPlanes* LightClippingPlanesActor, int32_t& UnassignedLights); // Function Phoenix.LightClippingPlanesSupportLibrary.ClearAllLightClippingPlanesSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331bab0
	void AssignLightClippingPlanesSource(struct ULocalLightComponent* LightComponent, struct ALightClippingPlanes* LightClippingPlanesActor, bool& bSuccess, bool bInvertClippingPlanes); // Function Phoenix.LightClippingPlanesSupportLibrary.AssignLightClippingPlanesSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331b7a0
};

// Class Phoenix.LightClippingVolumeSupportLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULightClippingVolumeSupportLibrary : UBlueprintFunctionLibrary {

	void GetLightClippingVolumeSource(struct ULocalLightComponent* LightComponent, struct ALightClippingVolume*& LightClippingVolumeActor); // Function Phoenix.LightClippingVolumeSupportLibrary.GetLightClippingVolumeSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c950
	void GetAllWithLightClippingVolumeActor(struct ALightClippingVolume* LightClippingVolumeActor, struct TArray<struct ULocalLightComponent*>& Lights, enum class ELightClippingVolumeFilterType FilterType); // Function Phoenix.LightClippingVolumeSupportLibrary.GetAllWithLightClippingVolumeActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x331c390
	void FindAndAssignLightClippingVolumeSource(struct FName LightTag, struct ALightClippingVolume* LightClippingVolumeActor, int32_t& AssignedLights, bool bForceEvenIfAlreadySet, enum class ELightClippingProviderVolumeMode VolumeMode); // Function Phoenix.LightClippingVolumeSupportLibrary.FindAndAssignLightClippingVolumeSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331bf20
	void ClearLightClippingSource(struct ULocalLightComponent* LightComponent); // Function Phoenix.LightClippingVolumeSupportLibrary.ClearLightClippingSource // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x331bc70
	void ClearAllLightClippingVolumeSource(struct ALightClippingVolume* LightClippingVolumeActor, int32_t& UnassignedLights); // Function Phoenix.LightClippingVolumeSupportLibrary.ClearAllLightClippingVolumeSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331bb80
	void AssignLightClippingVolumeSource(struct ULocalLightComponent* LightComponent, struct ALightClippingVolume* LightClippingVolumeActor, bool& bSuccess, enum class ELightClippingProviderVolumeMode VolumeMode); // Function Phoenix.LightClippingVolumeSupportLibrary.AssignLightClippingVolumeSource // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x331b900
};

// Class Phoenix.LightComponentState
// Size: 0x28 (Inherited: 0x28)
struct ULightComponentState : UObject {
};

// Class Phoenix.LightComponentStateData
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateData : UObject {
	struct ULightComponentState* State; // 0x28(0x08)
};

// Class Phoenix.LightComponentStateDataBoolMap
// Size: 0x80 (Inherited: 0x30)
struct ULightComponentStateDataBoolMap : ULightComponentStateData {
	struct TMap<struct TWeakObjectPtr<struct ULightComponent>, bool> BoolMap; // 0x30(0x50)
};

// Class Phoenix.LightComponentStateBoolMap
// Size: 0x28 (Inherited: 0x28)
struct ULightComponentStateBoolMap : ULightComponentState {
};

// Class Phoenix.LightComponentStateVisibility
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateVisibility : ULightComponentStateBoolMap {
	bool bVisible; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.LightComponentStateCastTranslucentShadows
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateCastTranslucentShadows : ULightComponentStateBoolMap {
	bool bCastTranslucentShadows; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.LightComponentStateCastShadows
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateCastShadows : ULightComponentStateBoolMap {
	bool bCastShadows; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.LightComponentStateTag
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateTag : ULightComponentStateBoolMap {
	struct FName Tag; // 0x28(0x08)
};

// Class Phoenix.LightComponentStateAddTag
// Size: 0x30 (Inherited: 0x30)
struct ULightComponentStateAddTag : ULightComponentStateTag {
};

// Class Phoenix.LightComponentStateRemoveTag
// Size: 0x30 (Inherited: 0x30)
struct ULightComponentStateRemoveTag : ULightComponentStateTag {
};

// Class Phoenix.LightComponentStateDataIntMap
// Size: 0x80 (Inherited: 0x30)
struct ULightComponentStateDataIntMap : ULightComponentStateData {
	char pad_30[0x50]; // 0x30(0x50)
};

// Class Phoenix.LightComponentStateIntMap
// Size: 0x28 (Inherited: 0x28)
struct ULightComponentStateIntMap : ULightComponentState {
};

// Class Phoenix.LightComponentStateLightingChannels
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateLightingChannels : ULightComponentStateIntMap {
	struct FLightingChannels LightingChannels; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.LightComponentStateDataFloatMap
// Size: 0x80 (Inherited: 0x30)
struct ULightComponentStateDataFloatMap : ULightComponentStateData {
	char pad_30[0x50]; // 0x30(0x50)
};

// Class Phoenix.LightComponentStateFloatMap
// Size: 0x28 (Inherited: 0x28)
struct ULightComponentStateFloatMap : ULightComponentState {
};

// Class Phoenix.LightComponentStateContactShadowLength
// Size: 0x30 (Inherited: 0x28)
struct ULightComponentStateContactShadowLength : ULightComponentStateFloatMap {
	float ContactShadowLength; // 0x28(0x04)
	bool bInWorldSpace; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Phoenix.LightComponentStatesLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULightComponentStatesLibrary : UBlueprintFunctionLibrary {

	void LightComponentStatesUpdate(struct AActor* Actor, struct FLightComponentStatesSaveData& LightComponentStatesSaveData, bool bIncludeChildActors); // Function Phoenix.LightComponentStatesLibrary.LightComponentStatesUpdate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3322970
	void LightComponentStatesRestore(struct FLightComponentStatesSaveData& LightComponentStatesSaveData); // Function Phoenix.LightComponentStatesLibrary.LightComponentStatesRestore // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33228d0
	void LightComponentStatesInitialize(struct UObject* Owner, struct FLightComponentStatesSaveData& LightComponentStatesSaveData, struct FLightComponentStates LightComponentStates); // Function Phoenix.LightComponentStatesLibrary.LightComponentStatesInitialize // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3322750
	void AddLightComponentStateVisibility(struct UObject* Owner, struct FLightComponentStatesSaveData& LightComponentStatesSaveData, bool bVisible); // Function Phoenix.LightComponentStatesLibrary.AddLightComponentStateVisibility // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3322490
	void AddLightComponentStateCastShadow(struct UObject* Owner, struct FLightComponentStatesSaveData& LightComponentStatesSaveData, bool bCastShadow); // Function Phoenix.LightComponentStatesLibrary.AddLightComponentStateCastShadow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3322490
};

// Class Phoenix.LightInterface
// Size: 0x28 (Inherited: 0x28)
struct ULightInterface : UInterface {

	void OnExitedNearby(); // Function Phoenix.LightInterface.OnExitedNearby // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnExitedLightProximity(struct AActor* LumosBP); // Function Phoenix.LightInterface.OnExitedLightProximity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnExitedLight(struct AActor* LumosBP, bool bPlayerOwned); // Function Phoenix.LightInterface.OnExitedLight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEnteredNearby(struct AActor* LumosBP); // Function Phoenix.LightInterface.OnEnteredNearby // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEnteredLightProximity(struct AActor* LumosBP); // Function Phoenix.LightInterface.OnEnteredLightProximity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEnteredLight(struct AActor* LumosBP, bool bPlayerOwned); // Function Phoenix.LightInterface.OnEnteredLight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisableLightRaytrace(); // Function Phoenix.LightInterface.DisableLightRaytrace // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisableLightInteraction(); // Function Phoenix.LightInterface.DisableLightInteraction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LightSmoothOnOff
// Size: 0x210 (Inherited: 0xc8)
struct ULightSmoothOnOff : UActorComponent {
	float DefaultIntensity; // 0xc8(0x04)
	float IntensityChangeFilter; // 0xcc(0x04)
	bool DisableIntensityFilter; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct FRuntimeFloatCurve TurnOnCurve; // 0xd8(0x88)
	float TurnOnDuration; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct FRuntimeFloatCurve TurnOffCurve; // 0x168(0x88)
	float TurnOffDuration; // 0x1f0(0x04)
	bool DisableOnOffSmoothing; // 0x1f4(0x01)
	char pad_1F5[0x3]; // 0x1f5(0x03)
	float TimeFactor; // 0x1f8(0x04)
	char pad_1FC[0x14]; // 0x1fc(0x14)

	void TurnOnOff(bool On, bool smooth); // Function Phoenix.LightSmoothOnOff.TurnOnOff // (Final|Native|Public|BlueprintCallable) // @ game+0x3322c60
	void SetIntensity(float NewIntensity, bool Filter); // Function Phoenix.LightSmoothOnOff.SetIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x3322aa0
	bool IsOnSmoothed(); // Function Phoenix.LightSmoothOnOff.IsOnSmoothed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3322720
	bool IsOn(); // Function Phoenix.LightSmoothOnOff.IsOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33226f0
	void Initialize(float Intensity, bool Visible); // Function Phoenix.LightSmoothOnOff.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x3322610
	float GetSmoothedIntensity(); // Function Phoenix.LightSmoothOnOff.GetSmoothedIntensity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33225e0
	float GetIntensity(); // Function Phoenix.LightSmoothOnOff.GetIntensity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33225c0
	void AbortFadeOn(bool abortFade); // Function Phoenix.LightSmoothOnOff.AbortFadeOn // (Final|Native|Public|BlueprintCallable) // @ game+0x3322400
	void AbortFadeOff(bool abortFade); // Function Phoenix.LightSmoothOnOff.AbortFadeOff // (Final|Native|Public|BlueprintCallable) // @ game+0x3322370
};

// Class Phoenix.LinearColorTweenDummy
// Size: 0x28 (Inherited: 0x28)
struct ULinearColorTweenDummy : UObject {
};

// Class Phoenix.DialogueLineRule_BodyIdle
// Size: 0x90 (Inherited: 0x38)
struct UDialogueLineRule_BodyIdle : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
	struct UPoseGroupProvider* DefaultPoseGroup; // 0x40(0x08)
	struct UBaseArchitectAsset* PoseGroupLookup; // 0x48(0x08)
	struct FGameplayTagContainer PoseGroupTags; // 0x50(0x20)
	struct FAnimationRequestLayerReference IdleLayer; // 0x70(0x08)
	struct FAnimationRequestLayerReference TransitionLayer; // 0x78(0x08)
	float BlendTime; // 0x80(0x04)
	float BlendInTime; // 0x84(0x04)
	float BlendOutTime; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.DialogueLineRuleState_BodyIdle
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_BodyIdle : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_MoveCamera_Event
// Size: 0xa8 (Inherited: 0x28)
struct UDialogueLineRule_MoveCamera_Event : UObject {
	bool Enabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FSceneRigStage_ActorReference Actor; // 0x30(0x10)
	struct TArray<struct FDialogLineRule_CameraAnimation> Animations; // 0x40(0x10)
	struct FDialogLineRule_CameraFixup CameraFixup; // 0x50(0x48)
	struct UTransformProvider* PlacementTransform; // 0x98(0x08)
	struct FAnimationRequestLayerReference PlacementLayer; // 0xa0(0x08)
};

// Class Phoenix.DialogueLineRule_MoveCamera_SpeakingActorEvent
// Size: 0xb0 (Inherited: 0xa8)
struct UDialogueLineRule_MoveCamera_SpeakingActorEvent : UDialogueLineRule_MoveCamera_Event {
	float OffsetFromDialogueLine; // 0xa8(0x04)
	float SwitchCameraLengthThreshold; // 0xac(0x04)
};

// Class Phoenix.DialogueLineRule_MoveCamera_SpeakingActorStartEvent
// Size: 0xb0 (Inherited: 0xa8)
struct UDialogueLineRule_MoveCamera_SpeakingActorStartEvent : UDialogueLineRule_MoveCamera_Event {
	float OffsetFromDialogueLine; // 0xa8(0x04)
	float SwitchCameraLengthThreshold; // 0xac(0x04)
};

// Class Phoenix.DialogueLineRule_MoveCamera_EndingEvent
// Size: 0xb8 (Inherited: 0xa8)
struct UDialogueLineRule_MoveCamera_EndingEvent : UDialogueLineRule_MoveCamera_Event {
	bool ForChoicesAtEnd; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	float OffsetFromEnd; // 0xac(0x04)
	float MinimumPreviousCameraLength; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Phoenix.DialogueLineRule_MoveCamera_DuringPauseEvent
// Size: 0xc8 (Inherited: 0xa8)
struct UDialogueLineRule_MoveCamera_DuringPauseEvent : UDialogueLineRule_MoveCamera_Event {
	float DurationThreshold; // 0xa8(0x04)
	float DurationVariability; // 0xac(0x04)
	float ShowBeforePause; // 0xb0(0x04)
	float ShowBeforePauseVariability; // 0xb4(0x04)
	float ShowAfterPause; // 0xb8(0x04)
	float ShowAfterPauseVariability; // 0xbc(0x04)
	float CombinePausesThreshold; // 0xc0(0x04)
	float CombinePauseThresholdVariability; // 0xc4(0x04)
};

// Class Phoenix.DialogueLineRule_Camera
// Size: 0x60 (Inherited: 0x38)
struct UDialogueLineRule_Camera : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
	struct TArray<struct FDialogLineRule_CameraCharacter> Characters; // 0x40(0x10)
	struct TArray<struct UDialogueLineRule_MoveCamera_Event*> Events; // 0x50(0x10)
};

// Class Phoenix.DialogueLineRuleState_Camera
// Size: 0x90 (Inherited: 0x58)
struct UDialogueLineRuleState_Camera : UDialogueLineRuleState {
	struct TArray<struct USceneAction_Animation*> LastAnimationActions; // 0x58(0x10)
	struct TArray<struct UAnimSequenceBase*> LastCameraClips; // 0x68(0x10)
	struct USceneAction_Transform* LastTransformAction; // 0x78(0x08)
	struct UCameraFixupOperations* LastCameraFixupOperations; // 0x80(0x08)
	struct USceneAction_CameraFixup* LastCameraFixupAction; // 0x88(0x08)
};

// Class Phoenix.DialogueLineRule_Dialog
// Size: 0x50 (Inherited: 0x38)
struct UDialogueLineRule_Dialog : UDialogueLineRule {
	bool UseSameSpeakerPreAndPostRoll; // 0x38(0x01)
	bool UseDifferentSpeakerPreAndPostRoll; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float SameSpeakerDelayBetweenLines; // 0x3c(0x04)
	float DifferentSpeakerDelayBetweenLines; // 0x40(0x04)
	float FirstConversationDelay; // 0x44(0x04)
	float LaterConversationDelay; // 0x48(0x04)
	bool bEnableDialogueSkipping; // 0x4c(0x01)
	bool bEnableGameOptions; // 0x4d(0x01)
	char pad_4E[0x2]; // 0x4e(0x02)
};

// Class Phoenix.DialogueLineRuleState_Dialog
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_Dialog : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_ExplicitLayeredAnimation
// Size: 0x40 (Inherited: 0x38)
struct UDialogueLineRule_ExplicitLayeredAnimation : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.DialogueLineRuleState_ExplicitLayeredAnimation
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_ExplicitLayeredAnimation : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_FacialEmotion
// Size: 0x40 (Inherited: 0x38)
struct UDialogueLineRule_FacialEmotion : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.DialogueLineRuleState_FacialEmotion
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_FacialEmotion : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_FillerLayeredAnimation
// Size: 0xa0 (Inherited: 0x38)
struct UDialogueLineRule_FillerLayeredAnimation : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
	struct FGameplayTagContainer Tags; // 0x40(0x20)
	struct FAnimationRequestLayerReference Layer; // 0x60(0x08)
	struct UAnimMaskAsset* Mask; // 0x68(0x08)
	enum class ELineRule_LayeredAnimationType ActiveWhen; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float BlendWeight; // 0x74(0x04)
	float BlendWeightVariability; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct UFloatProvider* ComputedBlendWeight; // 0x80(0x08)
	float BlendTime; // 0x88(0x04)
	float BlendTimeVariability; // 0x8c(0x04)
	float PaddingTime; // 0x90(0x04)
	float PaddingTimeVariability; // 0x94(0x04)
	bool FitSmallAnimations; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.DialogueLineRuleState_FillerLayeredAnimation
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_FillerLayeredAnimation : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_LayeredAnimation
// Size: 0x98 (Inherited: 0x38)
struct UDialogueLineRule_LayeredAnimation : UDialogueLineRule {
	char pad_38[0x8]; // 0x38(0x08)
	struct FGameplayTagContainer Tags; // 0x40(0x20)
	struct FAnimationRequestLayerReference Layer; // 0x60(0x08)
	struct UAnimMaskAsset* Mask; // 0x68(0x08)
	enum class ELineRule_LayeredAnimationType ActiveWhen; // 0x70(0x01)
	enum class ELineRule_LayeredAnimationStartFromType StartsFrom; // 0x71(0x01)
	enum class ELineRule_LayeredAnimationLipSyncIntensityType LipSyncIntensity; // 0x72(0x01)
	char pad_73[0x1]; // 0x73(0x01)
	float BlendWeight; // 0x74(0x04)
	float BlendWeightVariability; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct UFloatProvider* ComputedBlendWeight; // 0x80(0x08)
	float BlendTime; // 0x88(0x04)
	float BlendTimeVariability; // 0x8c(0x04)
	bool Blocking; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.DialogueLineRuleState_LayeredAnimation
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_LayeredAnimation : UDialogueLineRuleState {
};

// Class Phoenix.DialogueLineRule_PickCamera_Event
// Size: 0xb8 (Inherited: 0x28)
struct UDialogueLineRule_PickCamera_Event : UObject {
	bool Enabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FSceneRigStage_ActorReference Actor; // 0x30(0x10)
	struct TArray<struct FDialogueLineRule_PickCameraItem> CameraList; // 0x40(0x10)
	enum class EManagedCameraPriority Priority; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct FCameraActionTransitionSettings TransitionInSettings; // 0x58(0x30)
	struct FCameraActionTransitionSettings TransitionOutSettings; // 0x88(0x30)
};

// Class Phoenix.DialogueLineRule_PickCamera_SpeakingActorEvent
// Size: 0xc0 (Inherited: 0xb8)
struct UDialogueLineRule_PickCamera_SpeakingActorEvent : UDialogueLineRule_PickCamera_Event {
	float OffsetFromDialogueLine; // 0xb8(0x04)
	float SwitchCameraLengthThreshold; // 0xbc(0x04)
};

// Class Phoenix.DialogueLineRule_PickCamera_SpeakingActorStartEvent
// Size: 0xc0 (Inherited: 0xb8)
struct UDialogueLineRule_PickCamera_SpeakingActorStartEvent : UDialogueLineRule_PickCamera_Event {
	float OffsetFromDialogueLine; // 0xb8(0x04)
	float SwitchCameraLengthThreshold; // 0xbc(0x04)
};

// Class Phoenix.DialogueLineRule_PickCamera_EndingEvent
// Size: 0xc8 (Inherited: 0xb8)
struct UDialogueLineRule_PickCamera_EndingEvent : UDialogueLineRule_PickCamera_Event {
	bool ForChoicesAtEnd; // 0xb8(0x01)
	bool ForBeforeEmbeddedSequence; // 0xb9(0x01)
	char pad_BA[0x2]; // 0xba(0x02)
	float OffsetFromEnd; // 0xbc(0x04)
	float MinimumOffsetFromEnd; // 0xc0(0x04)
	float MinimumPreviousCameraLength; // 0xc4(0x04)
};

// Class Phoenix.DialogueLineRule_PickCamera_DuringPauseEvent
// Size: 0xd8 (Inherited: 0xb8)
struct UDialogueLineRule_PickCamera_DuringPauseEvent : UDialogueLineRule_PickCamera_Event {
	float DurationThreshold; // 0xb8(0x04)
	float DurationVariability; // 0xbc(0x04)
	float ShowBeforePause; // 0xc0(0x04)
	float ShowBeforePauseVariability; // 0xc4(0x04)
	float ShowAfterPause; // 0xc8(0x04)
	float ShowAfterPauseVariability; // 0xcc(0x04)
	float CombinePausesThreshold; // 0xd0(0x04)
	float CombinePauseThresholdVariability; // 0xd4(0x04)
};

// Class Phoenix.DialogueLineRule_PickCamera
// Size: 0x48 (Inherited: 0x38)
struct UDialogueLineRule_PickCamera : UDialogueLineRule {
	struct TArray<struct UDialogueLineRule_PickCamera_Event*> Events; // 0x38(0x10)
};

// Class Phoenix.DialogueLineRuleState_PickCamera
// Size: 0x68 (Inherited: 0x58)
struct UDialogueLineRuleState_PickCamera : UDialogueLineRuleState {
	struct USceneAction_Camera* LastCameraAction; // 0x58(0x08)
	struct UStoryGraph_Conversation* CurrentConversation; // 0x60(0x08)
};

// Class Phoenix.DialogueLineRule_ScreenFade
// Size: 0x80 (Inherited: 0x38)
struct UDialogueLineRule_ScreenFade : UDialogueLineRule {
	float OffsetFromDialogueLine; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UFloatProvider* InitialScreenFade; // 0x40(0x08)
	struct UFloatProvider* FinalScreenFade; // 0x48(0x08)
	struct UFloatProvider* BlendTime; // 0x50(0x08)
	enum class ETimeRigFadeEventType FadeEventType; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct UBoolProvider* KeepStateOnCompletion; // 0x60(0x08)
	struct UBoolProvider* KeepFadeAfterSceneRigCompletion; // 0x68(0x08)
	struct UBoolProvider* EnableFading; // 0x70(0x08)
	struct FColor FadeColor; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.DialogueLineRuleState_ScreenFade
// Size: 0x58 (Inherited: 0x58)
struct UDialogueLineRuleState_ScreenFade : UDialogueLineRuleState {
};

// Class Phoenix.LineTraceTestActor
// Size: 0x260 (Inherited: 0x248)
struct ALineTraceTestActor : AActor {
	float TraceLength; // 0x248(0x04)
	bool bTraceComplex; // 0x24c(0x01)
	enum class ELineTraceTestActorQueryMobilityType QueryMobilityType; // 0x24d(0x01)
	enum class ELineTraceTestActorTraceType LineTraceBy; // 0x24e(0x01)
	enum class ELineTraceTestActorCollisionChannel SelectedChannel; // 0x24f(0x01)
	enum class ELineTraceTestActorObjectTypeQuery SelectedObjectType; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	struct FName SelectedProfileName; // 0x254(0x08)
	char pad_25C[0x4]; // 0x25c(0x04)
};

// Class Phoenix.LoadingScreenChooser
// Size: 0x40 (Inherited: 0x28)
struct ULoadingScreenChooser : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.Loadingcreen
// Size: 0x378 (Inherited: 0x328)
struct ULoadingcreen : UPhoenixUserWidget {
	struct UImage* LoadingImage; // 0x328(0x08)
	struct TArray<struct FString> Tips; // 0x330(0x10)
	struct FString BackgroundID; // 0x340(0x10)
	struct TArray<struct FString> DebugBackgroundIDs; // 0x350(0x10)
	char pad_360[0x18]; // 0x360(0x18)

	void SetTextureByName(struct FString Name); // Function Phoenix.Loadingcreen.SetTextureByName // (Final|Native|Public|BlueprintCallable) // @ game+0x3327080
	void SetTexture(struct UTexture2D* Texture); // Function Phoenix.Loadingcreen.SetTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x3326ff0
	void PickBackgroundID(enum class ELoadingScreenLocation DestinationLocation); // Function Phoenix.Loadingcreen.PickBackgroundID // (Final|Native|Public|BlueprintCallable) // @ game+0x3325fe0
	void OnDisplayNextTip(struct FString TipKey); // Function Phoenix.Loadingcreen.OnDisplayNextTip // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GenerateTipList(enum class ELoadingScreenLocation DestinationLocation); // Function Phoenix.Loadingcreen.GenerateTipList // (Final|Native|Public|BlueprintCallable) // @ game+0x3325af0
	void DisplayPrevTip(); // Function Phoenix.Loadingcreen.DisplayPrevTip // (Final|Native|Public|BlueprintCallable) // @ game+0x3325ad0
	void DisplayNextTip(); // Function Phoenix.Loadingcreen.DisplayNextTip // (Final|Native|Public|BlueprintCallable) // @ game+0x3325ab0
};

// Class Phoenix.LocalizationDebuggerWindow
// Size: 0x30 (Inherited: 0x28)
struct ULocalizationDebuggerWindow : UObject {
	struct UUserWidget* Widget; // 0x28(0x08)
};

// Class Phoenix.LocationBasedDatabaseTables
// Size: 0x28 (Inherited: 0x28)
struct ULocationBasedDatabaseTables : UObject {

	void RecordWorldEventLocationMeta(struct FString Name, float StreamInRadius, float StreamOutRadius); // Function Phoenix.LocationBasedDatabaseTables.RecordWorldEventLocationMeta // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3326be0
	void RecordWorldEventDatabaseLocation(struct FString Name, struct FString Guid, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordWorldEventDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326a20
	void RecordWorldEventDatabaseDescriptors(struct FString Name, struct FGameplayTagContainer& locationDescriptors, struct TArray<struct TSoftObjectPtr<UWorldEventCondition>> Conditions); // Function Phoenix.LocationBasedDatabaseTables.RecordWorldEventDatabaseDescriptors // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x3326870
	void RecordVaultDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordVaultDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordTentDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordTentDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordSphinxPuzzleDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordSphinxPuzzleDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordRuinDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordRuinDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordObjectAndOwner(struct FString Name, struct FString Owner); // Function Phoenix.LocationBasedDatabaseTables.RecordObjectAndOwner // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3326500
	void RecordMountZoneLocation(struct AMountZoneVolumeBase* InVolume); // Function Phoenix.LocationBasedDatabaseTables.RecordMountZoneLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void RecordMiscDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordMiscDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordKnowledgeLocationDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordKnowledgeLocationDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordKnowledgeInvestigatableDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordKnowledgeInvestigatableDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordHamletDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordHamletDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordFastTravelDatabaseLocation(struct FString Name, struct FVector Position, struct FVector BeaconPosition, float ZRot, struct AFastTravelLocation* locationActor); // Function Phoenix.LocationBasedDatabaseTables.RecordFastTravelDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326670
	void RecordEnemyDenLocationsDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordEnemyDenLocationsDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordDungeonChestDatabaseOwner(struct FString Name, struct FString Owner); // Function Phoenix.LocationBasedDatabaseTables.RecordDungeonChestDatabaseOwner // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3326500
	void RecordDungeonChestDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordDungeonChestDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordDevMiscDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordDevMiscDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordDevBanditCampDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordDevBanditCampDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordClusterDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordClusterDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordChestDatabaseOwner(struct FString Name, struct FString Owner); // Function Phoenix.LocationBasedDatabaseTables.RecordChestDatabaseOwner // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3326500
	void RecordCharacterSpawnLocation(struct ADynamicObjectVolume* InVolume); // Function Phoenix.LocationBasedDatabaseTables.RecordCharacterSpawnLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void RecordBroomTestPaths(); // Function Phoenix.LocationBasedDatabaseTables.RecordBroomTestPaths // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33264e0
	void RecordBroomRacePath(struct FString RaceName, struct FString PathName, int32_t PathIndex, struct TArray<struct FVector>& PathPoints); // Function Phoenix.LocationBasedDatabaseTables.RecordBroomRacePath // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3326360
	void RecordBroomRaceGates(struct FString RaceName, struct TArray<struct FTransform>& RaceGateTransforms, struct TArray<struct FString>& GateTypes); // Function Phoenix.LocationBasedDatabaseTables.RecordBroomRaceGates // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33261d0
	void RecordBeastDenDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordBeastDenDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordBanditCampDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordBanditCampDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordAncientMagicDatabaseLocation(struct FString Name, struct FVector Position, float ZRot); // Function Phoenix.LocationBasedDatabaseTables.RecordAncientMagicDatabaseLocation // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x3326060
	void RecordAmbientCreatureSpawnLocation(struct AAmbientCreatureSpawnVolume* InVolume); // Function Phoenix.LocationBasedDatabaseTables.RecordAmbientCreatureSpawnLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void GetWorldEventLocations(struct FGameplayTagContainer& LocationRequiredDescriptors, struct FGameplayTagContainer& LocationDeniedDescriptors, struct TArray<struct FEventLocationResult>& OutResults); // Function Phoenix.LocationBasedDatabaseTables.GetWorldEventLocations // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3325be0
};

// Class Phoenix.LocationManager
// Size: 0xc0 (Inherited: 0x28)
struct ULocationManager : UObject {
	char pad_28[0x98]; // 0x28(0x98)
};

// Class Phoenix.LockableInterface
// Size: 0x28 (Inherited: 0x28)
struct ULockableInterface : UInterface {

	void SetAudioSwitch(struct UAkComponent* AkComponent); // Function Phoenix.LockableInterface.SetAudioSwitch // (Native|Event|Public|BlueprintEvent) // @ game+0x1bf0fc0
	void OnUnlocked(bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects, bool FromMinigame); // Function Phoenix.LockableInterface.OnUnlocked // (Native|Event|Public|BlueprintEvent) // @ game+0x3325e60
	void OnLocked(); // Function Phoenix.LockableInterface.OnLocked // (Native|Event|Public|BlueprintEvent) // @ game+0x3325e40
	struct FVector GetSoundPos(); // Function Phoenix.LockableInterface.GetSoundPos // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x3325ba0
	struct UMeshComponent* GetAttachToMesh(); // Function Phoenix.LockableInterface.GetAttachToMesh // (Native|Event|Public|BlueprintEvent) // @ game+0x32b5050
};

// Class Phoenix.LockableComponent
// Size: 0x220 (Inherited: 0xc8)
struct ULockableComponent : UActorComponent {
	char pad_C8[0x20]; // 0xc8(0x20)
	struct UMeshComponent* LockMeshComponent; // 0xe8(0x08)
	struct USceneComponent* CalloutLocator; // 0xf0(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0xf8(0x08)
	struct USphereComponent* LockHitSphere; // 0x100(0x08)
	int32_t SerializedVersion; // 0x108(0x04)
	bool AlwaysFaceCamera; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	struct FName Socket; // 0x110(0x08)
	bool Locked; // 0x118(0x01)
	char pad_119[0x3]; // 0x119(0x03)
	struct FName Inventory_KeyName; // 0x11c(0x08)
	struct FDatabaseLockList DatabaseLock_KeyName; // 0x124(0x08)
	bool AutomaticallyChangeLockStateWithKeyPossession; // 0x12c(0x01)
	bool ShowLock; // 0x12d(0x01)
	bool PerceptibleWhenLocked; // 0x12e(0x01)
	char pad_12F[0x1]; // 0x12f(0x01)
	struct FName GroupName; // 0x130(0x08)
	struct FString ScheduleUnlockedTime; // 0x138(0x10)
	struct FString ScheduleLockedTime; // 0x148(0x10)
	struct UParticleSystem* LockPickParticleSystem; // 0x158(0x08)
	struct UParticleSystem* LockLocationUnlockParticleSystem; // 0x160(0x08)
	struct UObject* AlohomoraCompleteAbilityClass; // 0x168(0x08)
	float AlohomoraFailTime; // 0x170(0x04)
	float AlohomoraAtLevelTime; // 0x174(0x04)
	float AlohomoraOneAboveTime; // 0x178(0x04)
	float AlohomoraTwoAboveTime; // 0x17c(0x04)
	float UnlockWithKeyTime; // 0x180(0x04)
	float TimeForWiggleSound; // 0x184(0x04)
	struct UAkAudioEvent* UnlockSound; // 0x188(0x08)
	struct UAkAudioEvent* UnlockingSound; // 0x190(0x08)
	struct UAkAudioEvent* UnlockingStopSound; // 0x198(0x08)
	struct UAkAudioEvent* VoidSound; // 0x1a0(0x08)
	struct UAkAudioEvent* WiggleSound; // 0x1a8(0x08)
	struct UAkAudioEvent* AddedSound; // 0x1b0(0x08)
	struct UAkAudioEvent* RemovedSound; // 0x1b8(0x08)
	struct UAkAudioEvent* HitByMunitionSound; // 0x1c0(0x08)
	struct UAkAudioEvent* ClosedWithLockSound; // 0x1c8(0x08)
	struct UAkAudioEvent* BumpedIntoLockSound; // 0x1d0(0x08)
	struct UAkAudioEvent* UnlockFailSound; // 0x1d8(0x08)
	struct FGuid Guid; // 0x1e0(0x10)
	bool HasBeenSetUp; // 0x1f0(0x01)
	bool DeleteThisComponent; // 0x1f1(0x01)
	char pad_1F2[0x2e]; // 0x1f2(0x2e)

	void UpdateLockAfterChange(bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects, bool DoChild); // Function Phoenix.LockableComponent.UpdateLockAfterChange // (Final|Native|Public|BlueprintCallable) // @ game+0x332b720
	void UnlockTimeReached(struct UObject* Caller); // Function Phoenix.LockableComponent.UnlockTimeReached // (Final|Native|Protected|BlueprintCallable) // @ game+0x332b580
	void UnlockIfLinked(struct UObject* Caller, struct FName& inGroupName); // Function Phoenix.LockableComponent.UnlockIfLinked // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x332b4a0
	void UnlockButtonReleasedEarly(struct UObject* Caller); // Function Phoenix.LockableComponent.UnlockButtonReleasedEarly // (Final|Native|Protected|BlueprintCallable) // @ game+0x332b410
	void UnlockButtonPressed(struct UObject* Caller); // Function Phoenix.LockableComponent.UnlockButtonPressed // (Final|Native|Protected|BlueprintCallable) // @ game+0x332b380
	void Unlock(bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects, bool DoChild, bool FromMinigame); // Function Phoenix.LockableComponent.Unlock // (Native|Public|BlueprintCallable) // @ game+0x332b1a0
	void PlayerHitByMunitions(); // Function Phoenix.LockableComponent.PlayerHitByMunitions // (Final|Native|Protected|BlueprintCallable) // @ game+0x332ae70
	void OnPlayerRemovedLock(struct AAmbulatory_Character* AmbulatoryCharacter); // Function Phoenix.LockableComponent.OnPlayerRemovedLock // (Final|Native|Public|BlueprintCallable) // @ game+0x332ad60
	void OnLockSphereHit(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.LockableComponent.OnLockSphereHit // (Final|Native|Protected|HasOutParms) // @ game+0x332ab20
	bool HasKey(); // Function Phoenix.LockableComponent.HasKey // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x332a680
	struct UMeshComponent* GetLockMeshComponent(); // Function Phoenix.LockableComponent.GetLockMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c160
	struct ALockable* GetLockable(); // Function Phoenix.LockableComponent.GetLockable // (Final|Native|Protected|BlueprintCallable) // @ game+0x332a330
	void DestroyLock(); // Function Phoenix.LockableComponent.DestroyLock // (Native|Public) // @ game+0x3304d70
	bool CanPlayerUseAlohomoraOnLock(); // Function Phoenix.LockableComponent.CanPlayerUseAlohomoraOnLock // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33299b0
	bool CanPlayerOpenLock(); // Function Phoenix.LockableComponent.CanPlayerOpenLock // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3329980
};

// Class Phoenix.LockableManager
// Size: 0x270 (Inherited: 0x28)
struct ULockableManager : UObject {
	char pad_28[0xd0]; // 0x28(0xd0)
	struct TArray<struct ULockableComponent*> AlohomoraComponents; // 0xf8(0x10)
	char pad_108[0x168]; // 0x108(0x168)

	void OnPreGameSave(); // Function Phoenix.LockableManager.OnPreGameSave // (Final|Native|Private) // @ game+0x332ae10
	void OnPostGameLoad(); // Function Phoenix.LockableManager.OnPostGameLoad // (Final|Native|Private) // @ game+0x332adf0
	void LockablesSuperAlohomora(bool Enable); // Function Phoenix.LockableManager.LockablesSuperAlohomora // (Final|Exec|Native|Public) // @ game+0x332aa90
	void LockablesSetAlohomora(enum class EAlohomoraLevel AlohomoraLevel); // Function Phoenix.LockableManager.LockablesSetAlohomora // (Final|Exec|Native|Public) // @ game+0x332aa10
	void LockablesMasterKey(bool Enable); // Function Phoenix.LockableManager.LockablesMasterKey // (Final|Exec|Native|Public) // @ game+0x332a980
	void LockablesMarkLocks(bool Enable); // Function Phoenix.LockableManager.LockablesMarkLocks // (Final|Exec|Native|Public) // @ game+0x332a8f0
	void LockablesDrawDebugInfo(bool Enable); // Function Phoenix.LockableManager.LockablesDrawDebugInfo // (Final|Exec|Native|Public) // @ game+0x31e0320
};

// Class Phoenix.LockableManagerFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct ULockableManagerFunctionLibrary : UBlueprintFunctionLibrary {

	void WaitForDoorAndSetState(struct FString DoorName, enum class EDoorState DoorState, bool LockVisible, bool PlaySoundsAndEffects); // Function Phoenix.LockableManagerFunctionLibrary.WaitForDoorAndSetState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332b8a0
	struct ADoor* FindNamedDoor(struct FString DoorName); // Function Phoenix.LockableManagerFunctionLibrary.FindNamedDoor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a100
};

// Class Phoenix.LockComponent
// Size: 0xf8 (Inherited: 0xc8)
struct ULockComponent : UActorComponent {
	struct FGameplayTagContainer KeyContainer; // 0xc8(0x20)
	enum class ELockLevel LockLevel; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	float LockValue; // 0xec(0x04)
	bool ConsumeKey; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)

	bool UnlockWithKey(struct FGameplayTagContainer& Key, struct AActor* Instigator); // Function Phoenix.LockComponent.UnlockWithKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x332b610
	bool Unlock(float UnlockValue, bool bCompleteAttempt); // Function Phoenix.LockComponent.Unlock // (Final|Native|Public|BlueprintCallable) // @ game+0x332b040
	void Lock(); // Function Phoenix.LockComponent.Lock // (Final|Native|Public|BlueprintCallable) // @ game+0x332a840
	bool IsLocked(); // Function Phoenix.LockComponent.IsLocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x332a6b0
	float GetUnlockedPercent(); // Function Phoenix.LockComponent.GetUnlockedPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x332a640
	float GetMaxLockValue(); // Function Phoenix.LockComponent.GetMaxLockValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x332a360
	enum class ELockLevel GetLockLevel(); // Function Phoenix.LockComponent.GetLockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x332a270
	float GetCurrentLockValue(); // Function Phoenix.LockComponent.GetCurrentLockValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c890
};

// Class Phoenix.LockDifficultyHelper
// Size: 0x28 (Inherited: 0x28)
struct ULockDifficultyHelper : UObject {

	enum class ELockDifficulty ConvertLockLevelToLockDifficulty(enum class EDoorLockLevel LockLevel); // Function Phoenix.LockDifficultyHelper.ConvertLockLevelToLockDifficulty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3329f40
	enum class EDoorLockLevel ConvertLockDifficultyToLockLevel(enum class ELockDifficulty LockDifficulty); // Function Phoenix.LockDifficultyHelper.ConvertLockDifficultyToLockLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3329ec0
};

// Class Phoenix.LockInterface
// Size: 0x28 (Inherited: 0x28)
struct ULockInterface : UInterface {

	void OnUnlocked(); // Function Phoenix.LockInterface.OnUnlocked // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnLocked(); // Function Phoenix.LockInterface.OnLocked // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToUnlock(); // Function Phoenix.LockInterface.OnFailedToUnlock // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool CanUnlock(struct UPrimitiveComponent* Comp, struct FVector Location); // Function Phoenix.LockInterface.CanUnlock // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.LockManager
// Size: 0x100 (Inherited: 0xa8)
struct ULockManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x58]; // 0xa8(0x58)

	void OnSaveLoad(); // Function Phoenix.LockManager.OnSaveLoad // (Final|Native|Private) // @ game+0x332ad40
	void OnPreSaveLoad(); // Function Phoenix.LockManager.OnPreSaveLoad // (Final|Native|Private) // @ game+0x332ae50
	void OnPreNewGame(); // Function Phoenix.LockManager.OnPreNewGame // (Final|Native|Private) // @ game+0x332ae30
	void OnNewGame(); // Function Phoenix.LockManager.OnNewGame // (Final|Native|Private) // @ game+0x332ad40
	struct FName GetLockName(struct FDatabaseLockList DatabaseLockList); // Function Phoenix.LockManager.GetLockName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x332a290
};

// Class Phoenix.LockManagerInterface
// Size: 0x28 (Inherited: 0x28)
struct ULockManagerInterface : UObject {

	void Unlock(struct FName LockId); // Function Phoenix.LockManagerInterface.Unlock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332b110
	void SetLock(struct FName LockId, enum class ELockStates NewState); // Function Phoenix.LockManagerInterface.SetLock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332af70
	void Lock(struct FName LockId); // Function Phoenix.LockManagerInterface.Lock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a860
	bool IsUnlockedPure(struct FName LockId); // Function Phoenix.LockManagerInterface.IsUnlockedPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x332a790
	bool IsUnlocked(struct FName LockId); // Function Phoenix.LockManagerInterface.IsUnlocked // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a790
	bool IsLockedPure(struct FName LockId); // Function Phoenix.LockManagerInterface.IsLockedPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x332a6e0
	bool IsLocked(struct FName LockId); // Function Phoenix.LockManagerInterface.IsLocked // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a6e0
	enum class ELockStates GetState(struct FName LockId); // Function Phoenix.LockManagerInterface.GetState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a590
	void BranchState(struct FName LockId, enum class EMinimalLockState& LockState); // Function Phoenix.LockManagerInterface.BranchState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33296f0
};

// Class Phoenix.LODActorRotationManager
// Size: 0x248 (Inherited: 0x248)
struct ALODActorRotationManager : AActor {

	struct TArray<struct AActor*> FilterValidActorRef(struct TArray<struct TSoftObjectPtr<AActor>> ActorRefList); // Function Phoenix.LODActorRotationManager.FilterValidActorRef // (Final|Native|Public|BlueprintCallable) // @ game+0x3329fc0
	void CheckLOD0ActorRefValid(struct TSoftObjectPtr<AActor> ActorRef, bool& bTrue); // Function Phoenix.LODActorRotationManager.CheckLOD0ActorRefValid // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3329b20
	void CheckAnyActorRefValid(struct TArray<struct TSoftObjectPtr<AActor>> ActorRefList, bool& bTrue); // Function Phoenix.LODActorRotationManager.CheckAnyActorRefValid // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33299e0
};

// Class Phoenix.LODProxyContainer
// Size: 0x2b0 (Inherited: 0x248)
struct ALODProxyContainer : AActor {
	struct UStaticMesh* BaseProxyMesh; // 0x248(0x08)
	struct TArray<struct UStaticMesh*> AdditionalProxyMeshes; // 0x250(0x10)
	struct TArray<struct UStaticMesh*> WinterProxyMeshes; // 0x260(0x10)
	struct TArray<struct FMeshOffset> MeshOffset; // 0x270(0x10)
	struct UStaticMesh* AlphaMesh; // 0x280(0x08)
	struct AActor* LandscapeMeshProxyActor; // 0x288(0x08)
	struct UMaterialInterface* DefaultMaterial; // 0x290(0x08)
	struct UMaterialInterface* FallMaterial; // 0x298(0x08)
	struct UMaterialInterface* WinterMaterial; // 0x2a0(0x08)
	struct UStaticMesh* LandscapeStaticMesh; // 0x2a8(0x08)
};

// Class Phoenix.LODViewerManager
// Size: 0x28 (Inherited: 0x28)
struct ULODViewerManager : UObject {

	struct TArray<struct FString> PopulateListOfSkeletalMeshes(); // Function Phoenix.LODViewerManager.PopulateListOfSkeletalMeshes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332ae90
	int32_t GetSkeletalMeshPredictedLODLevel(struct USkeletalMeshComponent* SkeletalMeshComponent); // Function Phoenix.LODViewerManager.GetSkeletalMeshPredictedLODLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a500
	struct FName GetObjectPathByString(struct FString AssetName); // Function Phoenix.LODViewerManager.GetObjectPathByString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a410
	int32_t GetNumLODsForViewer(struct USkeletalMesh* SkeletalMesh); // Function Phoenix.LODViewerManager.GetNumLODsForViewer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a380
	struct TArray<struct FLODViewerInfos> GetLODInfoFromSkeletalMesh(struct USkeletalMesh* SkeletalMesh); // Function Phoenix.LODViewerManager.GetLODInfoFromSkeletalMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x332a1a0
	float ComputeScreenRadius(struct FVector& Origin, float Radius, struct FVector& ViewOrigin, struct UPhoenixSignificanceManager* SigManager); // Function Phoenix.LODViewerManager.ComputeScreenRadius // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3329d50
	float ComputePixelsOnScreen(float ScreenDiameter, float ResolutionMax); // Function Phoenix.LODViewerManager.ComputePixelsOnScreen // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3329c80
	struct TArray<float> CalculateLODDistancesFromSphereRadius(struct TArray<float> LODScreenSizes, float Radius, struct UPhoenixSignificanceManager* SigManager); // Function Phoenix.LODViewerManager.CalculateLODDistancesFromSphereRadius // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33297e0
};

// Class Phoenix.LoopingTransformByCurveComponent
// Size: 0x2d0 (Inherited: 0x220)
struct ULoopingTransformByCurveComponent : USceneComponent {
	struct UCurveFloat* TranslateXCurve; // 0x218(0x08)
	struct UCurveFloat* TranslateYCurve; // 0x220(0x08)
	struct UCurveFloat* TranslateZCurve; // 0x228(0x08)
	struct UCurveFloat* RotateXCurve; // 0x230(0x08)
	struct UCurveFloat* RotateYCurve; // 0x238(0x08)
	struct UCurveFloat* RotateZCurve; // 0x240(0x08)
	struct UCurveFloat* ScaleXCurve; // 0x248(0x08)
	struct UCurveFloat* ScaleYCurve; // 0x250(0x08)
	struct UCurveFloat* ScaleZCurve; // 0x258(0x08)
	float CurvePlayRate; // 0x260(0x04)
	float TranslationWeight; // 0x264(0x04)
	float RotationWeight; // 0x268(0x04)
	float ScaleWeight; // 0x26c(0x04)
	struct FRotator PerpetualRotationPerSecond; // 0x270(0x0c)
	char pad_284[0x4c]; // 0x284(0x4c)
};

// Class Phoenix.LoopingTransformComponent
// Size: 0x280 (Inherited: 0x220)
struct ULoopingTransformComponent : USceneComponent {
	enum class ETransformFunction TranslateXFunction; // 0x218(0x01)
	enum class ETransformFunction TranslateYFunction; // 0x219(0x01)
	enum class ETransformFunction TranslateZFunction; // 0x21a(0x01)
	enum class ETransformFunction RotateXFunction; // 0x21b(0x01)
	enum class ETransformFunction RotateYFunction; // 0x21c(0x01)
	enum class ETransformFunction RotateZFunction; // 0x21d(0x01)
	enum class ETransformFunction ScaleXFunction; // 0x21e(0x01)
	enum class ETransformFunction ScaleYFunction; // 0x21f(0x01)
	enum class ETransformFunction ScaleZFunction; // 0x220(0x01)
	float CurvePeriod; // 0x224(0x04)
	float CurveAmplitude; // 0x228(0x04)
	bool bApplyCurveCumulatively; // 0x22c(0x01)
	float RandomOffsetMax; // 0x230(0x04)
	char pad_236[0x4a]; // 0x236(0x4a)
};

// Class Phoenix.LootDrop
// Size: 0x68 (Inherited: 0x28)
struct ULootDrop : UObject {
	char pad_28[0x40]; // 0x28(0x40)

	void SetContainerID(struct FString ContainerID); // Function Phoenix.LootDrop.SetContainerID // (Final|Native|Public|BlueprintCallable) // @ game+0x33326e0
	bool RemoveItems(struct FString Item, int32_t Quantity, struct FString Variation); // Function Phoenix.LootDrop.RemoveItems // (Final|Native|Public|BlueprintCallable) // @ game+0x3332420
	void RemoveAllItems(); // Function Phoenix.LootDrop.RemoveAllItems // (Final|Native|Public|BlueprintCallable) // @ game+0x3332400
	void LootDropGenerateContents(struct FString ContentCategory, int32_t Level); // Function Phoenix.LootDrop.LootDropGenerateContents // (Final|Exec|Native|Public) // @ game+0x3331970
	struct TArray<struct FLootSlot> GetContents(); // Function Phoenix.LootDrop.GetContents // (Final|Native|Public|BlueprintCallable) // @ game+0x33314f0
	struct FString GetContainerID(); // Function Phoenix.LootDrop.GetContainerID // (Final|Native|Public|BlueprintCallable) // @ game+0x3331470
	struct TArray<struct FLootSlot> GenerateContents(struct FString Category, int32_t Level, bool bForceGeneration); // Function Phoenix.LootDrop.GenerateContents // (Final|Native|Public|BlueprintCallable) // @ game+0x3331120
	bool AddItems(struct FString Item, int32_t Quantity, struct FString Variation, bool IsUnique, bool IsAlreadyIdentified); // Function Phoenix.LootDrop.AddItems // (Final|Native|Public|BlueprintCallable) // @ game+0x3330b60
};

// Class Phoenix.LootDropComponent
// Size: 0x178 (Inherited: 0xc8)
struct ULootDropComponent : UActorComponent {
	struct FLootDropInfo DbLootDropInfo; // 0xc8(0x30)
	int32_t LootDropLevel; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct TArray<struct FString> LootContainers; // 0x100(0x10)
	struct TArray<struct FLootSlot> LootItems; // 0x110(0x10)
	bool PlayerLevelOverride; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	int32_t SecondsBeforeRerollingLoot; // 0x124(0x04)
	bool bCogOverride; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	struct FName PersistentID; // 0x12c(0x08)
	bool bResetExpiryIfUnique; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
	struct FMulticastInlineDelegate OnInventoryUpdated; // 0x138(0x10)
	bool bPreloadLootDropItemsFromDb; // 0x148(0x01)
	char pad_149[0x7]; // 0x149(0x07)
	struct TArray<struct UObject*> LootDropAssetTypes; // 0x150(0x10)
	char pad_160[0x18]; // 0x160(0x18)

	void SetupInventory(); // Function Phoenix.LootDropComponent.SetupInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x3332980
	void SetLootLevel(int32_t Level); // Function Phoenix.LootDropComponent.SetLootLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x33328f0
	void SetLoopGroup(struct FString lootGroup); // Function Phoenix.LootDropComponent.SetLoopGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x3332800
	void SetCurrentLootCategoryID(); // Function Phoenix.LootDropComponent.SetCurrentLootCategoryID // (Final|Native|Public|BlueprintCallable) // @ game+0x33327d0
	void SaveLootToInventory(); // Function Phoenix.LootDropComponent.SaveLootToInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x33326c0
	void SaveLootItemsToInventory(struct TArray<struct FLootSlot>& InLootItems); // Function Phoenix.LootDropComponent.SaveLootItemsToInventory // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33325e0
	bool IsContainerEmpty(); // Function Phoenix.LootDropComponent.IsContainerEmpty // (Final|Native|Public|BlueprintCallable) // @ game+0x3331940
	int32_t GetLootLevel(); // Function Phoenix.LootDropComponent.GetLootLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x3331790
	struct TArray<struct FLootSlot> GetLootItems(); // Function Phoenix.LootDropComponent.GetLootItems // (Final|Native|Public|BlueprintCallable) // @ game+0x3331700
	struct ULootDropComponent* GetLootDropComponent(struct AActor* InActor); // Function Phoenix.LootDropComponent.GetLootDropComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3331670
	struct TArray<struct FInventoryResult> GetInventoryInfo(); // Function Phoenix.LootDropComponent.GetInventoryInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x3331580
	void FillFromInventory(); // Function Phoenix.LootDropComponent.FillFromInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x3331100
	void ClearCurrentLootCategoryID(); // Function Phoenix.LootDropComponent.ClearCurrentLootCategoryID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3330fc0
};

// Class Phoenix.LumosEmberTrick
// Size: 0x60 (Inherited: 0x30)
struct ULumosEmberTrick : UDataAsset {
	struct UCurveFloat* RadiusCurve; // 0x30(0x08)
	struct UCurveFloat* RotationCurve; // 0x38(0x08)
	enum class EEmberTrickAxis TrickAxis; // 0x40(0x01)
	enum class EEmberTrickRotation TrickRotation; // 0x41(0x01)
	char pad_42[0x2]; // 0x42(0x02)
	float RadiusValueMultiplier; // 0x44(0x04)
	float RadiusTimeMultiplier; // 0x48(0x04)
	float RotationValueMultiplier; // 0x4c(0x04)
	float RotationTimeMultiplier; // 0x50(0x04)
	struct TWeakObjectPtr<struct USceneComponent> TrickSceneComponent; // 0x54(0x08)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.LumosEmberActor
// Size: 0x350 (Inherited: 0x248)
struct ALumosEmberActor : AActor {
	struct FLumosScalabilitySettings CurrentScalabilitySettings; // 0x248(0x48)
	struct UCurveFloat* ArcHeightMultiplierCurve; // 0x290(0x08)
	float DistanceInFrontOfPlayer; // 0x298(0x04)
	float HeightAbovePlayer; // 0x29c(0x04)
	float EmberSpeedMultiplierOfDistance; // 0x2a0(0x04)
	float BreadcrumbHeightModSpeed; // 0x2a4(0x04)
	float EmberLifeTime; // 0x2a8(0x04)
	struct FName FollowBone; // 0x2ac(0x08)
	float BreadcrumbTrailSegmentLength; // 0x2b4(0x04)
	int32_t MaxBreadcrumbs; // 0x2b8(0x04)
	bool bDebug; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	struct TArray<struct ULumosEmberTrick*> PossibleEmberTricks; // 0x2c0(0x10)
	bool bDisconnectedFromWand; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct UCurveFloat* FlickerCurve; // 0x2d8(0x08)
	int32_t FlickerCurveLoops; // 0x2e0(0x04)
	char pad_2E4[0x3c]; // 0x2e4(0x3c)
	struct ULumosEmberTrick* EmberTrick; // 0x320(0x08)
	char pad_328[0x28]; // 0x328(0x28)

	void UpdateLumosFlicker(float DeltaTime, bool bIsFading); // Function Phoenix.LumosEmberActor.UpdateLumosFlicker // (Final|Native|Public|BlueprintCallable) // @ game+0x33329a0
	void RefreshCurrentScalabilitySettings(); // Function Phoenix.LumosEmberActor.RefreshCurrentScalabilitySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33323e0
	struct UMaterialSwapMeshStatesFireAndForgetComponent* GetScalabilityMeshStatesComponent(); // Function Phoenix.LumosEmberActor.GetScalabilityMeshStatesComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3331900
	void GetLumosFlicker(float& IntensityMultiplier); // Function Phoenix.LumosEmberActor.GetLumosFlicker // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33317c0
	void ExternallyStartLumosFlickerForActor(struct AActor* OnlyForOwningActor, bool& bMatchedOwner); // Function Phoenix.LumosEmberActor.ExternallyStartLumosFlickerForActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3331020
	void ExternallyStartLumosFlicker(); // Function Phoenix.LumosEmberActor.ExternallyStartLumosFlicker // (Final|Native|Public|BlueprintCallable) // @ game+0x3331000
	void CharacterTeleported(struct AAmbulatory_Character* TeleportedCharacter, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.LumosEmberActor.CharacterTeleported // (Final|Native|Public|HasDefaults) // @ game+0x3330e90
	void CacheLerpVolumeLumosVolumetricScatteringIntensity(float Value, bool bSuccess); // Function Phoenix.LumosEmberActor.CacheLerpVolumeLumosVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x3330db0
	void CacheLerpVolumeLumosEVAdjust(float Value, bool bSuccess); // Function Phoenix.LumosEmberActor.CacheLerpVolumeLumosEVAdjust // (Final|Native|Public|BlueprintCallable) // @ game+0x3330db0
};

// Class Phoenix.LumosDynamicLightAdaptationModSettingsInterface
// Size: 0x58 (Inherited: 0x28)
struct ULumosDynamicLightAdaptationModSettingsInterface : UDynamicLightAdaptationModSettingsInterface {
	struct FLerpVolumesScalarName AdjustBaseEV; // 0x28(0x08)
	struct FLerpVolumesScalarName OutdoorsDayTimeEVBoost; // 0x30(0x08)
	struct FLerpVolumesScalarName MaxEV; // 0x38(0x08)
	struct FLerpVolumesScalarName MinEV; // 0x40(0x08)
	struct FLerpVolumesScalarName StartCutoffMaxEV; // 0x48(0x08)
	struct FLerpVolumesScalarName StartCutoffMinEV; // 0x50(0x08)
};

// Class Phoenix.LumosPostProcessingAsset
// Size: 0x620 (Inherited: 0x30)
struct ULumosPostProcessingAsset : UDataAsset {
	struct FPostProcessSettings PostProcessSettings; // 0x30(0x5f0)
};

// Class Phoenix.LumosScalabilityAsset
// Size: 0x78 (Inherited: 0x30)
struct ULumosScalabilityAsset : UDataAsset {
	struct FLumosScalabilitySettings Settings; // 0x30(0x48)
};

// Class Phoenix.LumosScalabilityOverrideBase
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilityOverrideBase : UObject {
};

// Class Phoenix.LumosScalabilityModifyBase
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilityModifyBase : UObject {
	bool bContinueModifiers; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.LumosScalabilitySettingsAsset
// Size: 0x190 (Inherited: 0x30)
struct ULumosScalabilitySettingsAsset : UDataAsset {
	struct FLumosScalabilitySettingsQuality PlayerLevels; // 0x30(0x28)
	struct FLumosScalabilitySettingsQuality NPCLevels; // 0x58(0x28)
	struct TMap<struct FName, struct FLumosScalabilitySettingsQuality> CustomLevels; // 0x80(0x50)
	struct TMap<enum class EPhoenixScalabilityPlatform, struct FLumosScalabilitySettingsQuality> PerPlatformPlayerLevels; // 0xd0(0x50)
	struct TMap<enum class EPhoenixScalabilityPlatform, struct FLumosScalabilitySettingsQuality> PerPlatformNPCLevels; // 0x120(0x50)
	struct TArray<struct ULumosScalabilityOverrideBase*> SettingsOverrides; // 0x170(0x10)
	struct TArray<struct ULumosScalabilityModifyBase*> Modifiers; // 0x180(0x10)

	void LumosScalabilitySetupPostProcessingComponent(struct FLumosScalabilitySettings& ScalabilitySettings, struct UPostProcessComponent* PostProcessComponent, bool& bEnablePostProcessing, bool bMerge); // Function Phoenix.LumosScalabilitySettingsAsset.LumosScalabilitySetupPostProcessingComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3332200
	void LumosScalabilitySetupPostProcessing(struct FLumosScalabilitySettings& ScalabilitySettings, struct FPostProcessSettings& PostProcessSettings, bool& bEnablePostProcessing, bool bMerge); // Function Phoenix.LumosScalabilitySettingsAsset.LumosScalabilitySetupPostProcessing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3331fa0
	void LumosScalabilitySetupLight(struct FLumosScalabilitySettings& ScalabilitySettings, struct ULightComponent* LumosLight); // Function Phoenix.LumosScalabilitySettingsAsset.LumosScalabilitySetupLight // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3331e50
	void LumosScalabilityLightMinDistance(struct FLumosScalabilitySettings& ScalabilitySettings, float InLightMinDistance, float& OutLightMinDistance); // Function Phoenix.LumosScalabilitySettingsAsset.LumosScalabilityLightMinDistance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3331cc0
	void LumosScalabilityGetSettings(struct ULumosScalabilitySettingsAsset* ScalabilitySettingsAsset, struct AActor* Caster, bool bIsPlayer, struct FLumosScalabilitySettings& ScalabilitySettings, bool& bFound); // Function Phoenix.LumosScalabilitySettingsAsset.LumosScalabilityGetSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3331aa0
	void GetLumosScalabilityChangedMessage(struct FName& HermesMessage); // Function Phoenix.LumosScalabilitySettingsAsset.GetLumosScalabilityChangedMessage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3331870
	void Get(struct AActor* Caster, bool bIsPlayer, struct FLumosScalabilitySettings& ScalabilitySettings); // Function Phoenix.LumosScalabilitySettingsAsset.Get // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33312e0
};

// Class Phoenix.LumosScalabilitySettingsRule
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRule : UObject {
};

// Class Phoenix.LumosScalabilityOverrideWithRule
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilityOverrideWithRule : ULumosScalabilityOverrideBase {
	struct ULumosScalabilitySettingsRule* Rule; // 0x28(0x08)
};

// Class Phoenix.LumosScalabilityOverride
// Size: 0x38 (Inherited: 0x30)
struct ULumosScalabilityOverride : ULumosScalabilityOverrideWithRule {
	struct ULumosScalabilityAsset* LumosAsset; // 0x30(0x08)
};

// Class Phoenix.LumosScalabilityOverrideScalabilityLevel
// Size: 0x38 (Inherited: 0x30)
struct ULumosScalabilityOverrideScalabilityLevel : ULumosScalabilityOverrideWithRule {
	enum class EPhoenixScalabilityLevel Level; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.LumosScalabilityOverrideScalabilityDelta
// Size: 0x38 (Inherited: 0x30)
struct ULumosScalabilityOverrideScalabilityDelta : ULumosScalabilityOverrideWithRule {
	int32_t LevelDelta; // 0x30(0x04)
	enum class EPhoenixScalabilityLevel MinLevel; // 0x34(0x01)
	enum class EPhoenixScalabilityLevel MaxLevel; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Phoenix.LumosScalabilityOverrideCustomScalabilityLevel
// Size: 0x40 (Inherited: 0x30)
struct ULumosScalabilityOverrideCustomScalabilityLevel : ULumosScalabilityOverrideWithRule {
	struct FName Custom; // 0x30(0x08)
	enum class EPhoenixScalabilityLevel Level; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.LumosScalabilityOverrideCustomScalabilityDelta
// Size: 0x40 (Inherited: 0x30)
struct ULumosScalabilityOverrideCustomScalabilityDelta : ULumosScalabilityOverrideWithRule {
	struct FName Custom; // 0x30(0x08)
	int32_t LevelDelta; // 0x38(0x04)
	enum class EPhoenixScalabilityLevel MinLevel; // 0x3c(0x01)
	enum class EPhoenixScalabilityLevel MaxLevel; // 0x3d(0x01)
	char pad_3E[0x2]; // 0x3e(0x02)
};

// Class Phoenix.LumosScalabilityModifyWithRule
// Size: 0x40 (Inherited: 0x30)
struct ULumosScalabilityModifyWithRule : ULumosScalabilityModifyBase {
	struct ULumosScalabilitySettingsRule* Rule; // 0x30(0x08)
	int32_t LightingScenarios; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.LumosScalabilityModifyRadiusFactor
// Size: 0x48 (Inherited: 0x40)
struct ULumosScalabilityModifyRadiusFactor : ULumosScalabilityModifyWithRule {
	float LightRadiusFactor; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.LumosScalabilityModifyShadows
// Size: 0x50 (Inherited: 0x40)
struct ULumosScalabilityModifyShadows : ULumosScalabilityModifyWithRule {
	bool bProjectDynamicShadows; // 0x40(0x01)
	bool bCastVolumetricShadow; // 0x41(0x01)
	bool bCastTranslucentShadows; // 0x42(0x01)
	enum class ELumosContactShadows ContactShadows; // 0x43(0x01)
	float ContactShadowLength; // 0x44(0x04)
	bool bOverride_bProjectDynamicShadows; // 0x48(0x01)
	bool bOverride_bCastVolumetricShadow; // 0x49(0x01)
	bool bOverride_bCastTranslucentShadows; // 0x4a(0x01)
	bool bOverride_ContactShadows; // 0x4b(0x01)
	bool bOverride_ContactShadowLength; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
};

// Class Phoenix.LumosScalabilityModifyContactShadows
// Size: 0x50 (Inherited: 0x40)
struct ULumosScalabilityModifyContactShadows : ULumosScalabilityModifyWithRule {
	enum class ELumosContactShadows ContactShadows; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float ContactShadowLength; // 0x44(0x04)
	bool bOnlyIfContactShadowsEnabled; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.LumosScalabilityModifyOverrides
// Size: 0x50 (Inherited: 0x40)
struct ULumosScalabilityModifyOverrides : ULumosScalabilityModifyWithRule {
	float MinDistance; // 0x40(0x04)
	float OuterConeAngle; // 0x44(0x04)
	bool bOverride_MinDistance; // 0x48(0x01)
	bool bOverride_OuterConeAngle; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
};

// Class Phoenix.LumosScalabilityModifyPostProcessing
// Size: 0x50 (Inherited: 0x40)
struct ULumosScalabilityModifyPostProcessing : ULumosScalabilityModifyWithRule {
	struct ULumosPostProcessingAsset* PostProcessing; // 0x40(0x08)
	bool bUsePostProcessing; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.LumosScalabilitySettingsRuleTrue
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleTrue : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleFalse
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleFalse : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleAnd
// Size: 0x38 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleAnd : ULumosScalabilitySettingsRule {
	struct TArray<struct ULumosScalabilitySettingsRule*> Rules; // 0x28(0x10)
};

// Class Phoenix.LumosScalabilitySettingsRuleOr
// Size: 0x38 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleOr : ULumosScalabilitySettingsRule {
	struct TArray<struct ULumosScalabilitySettingsRule*> Rules; // 0x28(0x10)
};

// Class Phoenix.LumosScalabilitySettingsRuleNot
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleNot : ULumosScalabilitySettingsRule {
	struct ULumosScalabilitySettingsRule* Rule; // 0x28(0x08)
};

// Class Phoenix.LumosScalabilitySettingsRuleNPCKey
// Size: 0xb0 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleNPCKey : ULumosScalabilitySettingsRule {
	struct FDbSingleColumnInfo NPCKey; // 0x28(0x88)
};

// Class Phoenix.LumosScalabilitySettingsRuleLevel
// Size: 0x38 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleLevel : ULumosScalabilitySettingsRule {
	struct FString LevelNameContains; // 0x28(0x10)
};

// Class Phoenix.LumosScalabilitySettingsRuleLevelBase
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleLevelBase : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleLevelExact
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleLevelExact : ULumosScalabilitySettingsRuleLevelBase {
	struct FLerpVolumesLevelName Level; // 0x28(0x08)
};

// Class Phoenix.LumosScalabilitySettingsRuleLevelsExact
// Size: 0x38 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleLevelsExact : ULumosScalabilitySettingsRuleLevelBase {
	struct TArray<struct FLerpVolumesLevelName> Levels; // 0x28(0x10)
};

// Class Phoenix.LumosScalabilitySettingsRuleIsPlayer
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleIsPlayer : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleIsNotPlayer
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleIsNotPlayer : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleIsCompanion
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleIsCompanion : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRuleTag
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleTag : ULumosScalabilitySettingsRule {
	struct FName ActorTag; // 0x28(0x08)
};

// Class Phoenix.LumosScalabilitySettingsRuleScalability
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilitySettingsRuleScalability : ULumosScalabilitySettingsRule {
	enum class EPhoenixScalabilityCategory Category; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t Levels; // 0x2c(0x04)
};

// Class Phoenix.LumosScalabilitySettingsRulePlatforms
// Size: 0x30 (Inherited: 0x28)
struct ULumosScalabilitySettingsRulePlatforms : ULumosScalabilitySettingsRule {
	int32_t Platforms; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.LumosScalabilitySettingsRulePlatformsHighEnd
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRulePlatformsHighEnd : ULumosScalabilitySettingsRule {
};

// Class Phoenix.LumosScalabilitySettingsRulePlatformsLowEnd
// Size: 0x28 (Inherited: 0x28)
struct ULumosScalabilitySettingsRulePlatformsLowEnd : ULumosScalabilitySettingsRule {
};

// Class Phoenix.SceneActionState_LumosDynamicScalability
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_LumosDynamicScalability : USceneRigActionState {
};

// Class Phoenix.SceneAction_LumosDynamicScalability
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_LumosDynamicScalability : USceneRigActionBase {
};

// Class Phoenix.SceneAction_LumosDynamicScalabilityOverride
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_LumosDynamicScalabilityOverride : USceneAction_LumosDynamicScalability {
	struct ULumosScalabilityOverrideBase* ScalabilityOverride; // 0x88(0x08)
};

// Class Phoenix.SceneAction_LumosDynamicScalabilityMod
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_LumosDynamicScalabilityMod : USceneAction_LumosDynamicScalability {
	struct ULumosScalabilityModifyBase* ScalabilityMod; // 0x88(0x08)
};

// Class Phoenix.LumosSpellTool
// Size: 0xa50 (Inherited: 0x958)
struct ALumosSpellTool : AChannelingSpellTool {
	struct TArray<struct FLumosLevelData> LevelDataArray; // 0x958(0x10)
	struct AActor* LumosActorClass; // 0x968(0x08)
	struct ULumosScalabilitySettingsAsset* LumosScalabilitySettings; // 0x970(0x08)
	struct TArray<struct AActor*> IgnoreActorList; // 0x978(0x10)
	float ObjectNearVolume; // 0x988(0x04)
	float ObjectNearTime; // 0x98c(0x04)
	int32_t InterpTimeMS; // 0x990(0x04)
	struct FVector CollisionQueryOffset; // 0x994(0x0c)
	struct UAkAudioEvent* LumosMotionStartFX; // 0x9a0(0x08)
	struct UAkAudioEvent* LumosMotionStopFX; // 0x9a8(0x08)
	char pad_9B0[0x8]; // 0x9b0(0x08)
	struct ALumosEmberActor* LumosActor; // 0x9b8(0x08)
	struct ALumosEmberActor* LastLumosActor; // 0x9c0(0x08)
	char pad_9C8[0x88]; // 0x9c8(0x88)

	void TurnOffLumos(struct UObject* i_caller); // Function Phoenix.LumosSpellTool.TurnOffLumos // (Final|Native|Private) // @ game+0x3339a20
	void StopLumos(); // Function Phoenix.LumosSpellTool.StopLumos // (Final|Native|Public|BlueprintCallable) // @ game+0x33399e0
	void SetLumosVolumetricScatteringIntensity(float Intensity); // Function Phoenix.LumosSpellTool.SetLumosVolumetricScatteringIntensity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33397b0
	void SetLumosLevelSettingsNew(float IntensityFactor, float Radius, float MinDistance); // Function Phoenix.LumosSpellTool.SetLumosLevelSettingsNew // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33396a0
	void SetLumosLevelSettings(float Intensity, float Radius, float MinDistance); // Function Phoenix.LumosSpellTool.SetLumosLevelSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3339590
	void ResetLumosLevelSettings(); // Function Phoenix.LumosSpellTool.ResetLumosLevelSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3339290
	void ObjectNearSound(); // Function Phoenix.LumosSpellTool.ObjectNearSound // (Final|Native|Public|BlueprintCallable) // @ game+0x3339120
	bool IsLumosActive(); // Function Phoenix.LumosSpellTool.IsLumosActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3338e60
	float GetLumosVolumetricScatteringIntensity(); // Function Phoenix.LumosSpellTool.GetLumosVolumetricScatteringIntensity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3338510
	float GetLumosLevelIntensityFactor(); // Function Phoenix.LumosSpellTool.GetLumosLevelIntensityFactor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33384e0
	int32_t GetLumosDebug(); // Function Phoenix.LumosSpellTool.GetLumosDebug // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33384b0
	struct ALumosEmberActor* GetLumosActor(); // Function Phoenix.LumosSpellTool.GetLumosActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3338490
	void DeactivateLumos(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.LumosSpellTool.DeactivateLumos // (Final|Native|Public|BlueprintCallable) // @ game+0x3338050
	void ActivateLumos(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.LumosSpellTool.ActivateLumos // (Final|Native|Public|BlueprintCallable) // @ game+0x3337e00
};

// Class Phoenix.LumosDefaultValueInterpolant
// Size: 0x30 (Inherited: 0x28)
struct ULumosDefaultValueInterpolant : ULerpVolumeInterpolant {
	struct FLerpVolumesScalarName Name; // 0x28(0x08)
};

// Class Phoenix.LumosVolumetricScatteringIntensityInterpolant
// Size: 0x30 (Inherited: 0x30)
struct ULumosVolumetricScatteringIntensityInterpolant : ULumosDefaultValueInterpolant {
};

// Class Phoenix.LumosLevelIntensityFactorInterpolant
// Size: 0x30 (Inherited: 0x30)
struct ULumosLevelIntensityFactorInterpolant : ULumosDefaultValueInterpolant {
};

// Class Phoenix.MailManager
// Size: 0xf0 (Inherited: 0x28)
struct UMailManager : UObject {
	char pad_28[0xc8]; // 0x28(0xc8)

	void UpdateMailArchiveAndDeleteBP(struct FString MailKey, struct FString sender, bool& o_canArchive, bool& o_canDelete); // Function Phoenix.MailManager.UpdateMailArchiveAndDeleteBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3339b40
	bool StationKnownByMailManagerBP(struct UStationComponent* Station); // Function Phoenix.MailManager.StationKnownByMailManagerBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3339950
	void OnSaveGameLoaded(); // Function Phoenix.MailManager.OnSaveGameLoaded // (Final|Native|Protected) // @ game+0x3339180
	void OnNewGame(); // Function Phoenix.MailManager.OnNewGame // (Final|Native|Protected) // @ game+0x3339160
	void MailUIEventBP(bool bStart, enum class EMailType mailType); // Function Phoenix.MailManager.MailUIEventBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3339050
	void MailAvailableDelegate__DelegateSignature(struct FMailEntry Entry, int32_t DisplayPriority); // DelegateFunction Phoenix.MailManager.MailAvailableDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void HandleMailUIButtonBP(int32_t Button, struct FString MailKey, struct FString sender, bool bFromArchive, bool& o_bMailListChanged); // Function Phoenix.MailManager.HandleMailUIButtonBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3338ae0
	int32_t GetUnreadMailCountBP(); // Function Phoenix.MailManager.GetUnreadMailCountBP // (Final|Native|Public|BlueprintCallable) // @ game+0x33389f0
	void GetRadiantTaskTextBP(struct TArray<struct FString>& o_iconNames, struct TArray<int32_t>& o_taskQuantities); // Function Phoenix.MailManager.GetRadiantTaskTextBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33388a0
	void GetRadiantRewardIconsBP(struct TArray<struct FString>& o_rewardIcons); // Function Phoenix.MailManager.GetRadiantRewardIconsBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33387e0
	bool GetMailOwlVisibilityBP(); // Function Phoenix.MailManager.GetMailOwlVisibilityBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3338680
	void GetMailItemsBP(bool bFromArchive, struct TArray<struct FUIMailInfo>& MailInfo); // Function Phoenix.MailManager.GetMailItemsBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3338540
	enum class EBulletinBoardType GetBulletinBoardTypeBP(); // Function Phoenix.MailManager.GetBulletinBoardTypeBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3338390
	void GetBulletinBoardTextBP(struct TArray<int32_t>& o_mailIndexes, struct TArray<struct FString>& o_senders, struct TArray<bool>& o_acceptRadiantVisibles, struct TArray<struct FString>& o_descriptions); // Function Phoenix.MailManager.GetBulletinBoardTextBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3338170
	struct UMailManager* Get(); // Function Phoenix.MailManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3338120
	void BulletinItemClickedBP(int32_t ItemIndex, bool bRadiantVisible); // Function Phoenix.MailManager.BulletinItemClickedBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3337ef0
	void AcceptBulletinBoardRadiantMissionBP(); // Function Phoenix.MailManager.AcceptBulletinBoardRadiantMissionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33264e0
};

// Class Phoenix.ManualNavigationInvokerComponent
// Size: 0xd0 (Inherited: 0xd0)
struct UManualNavigationInvokerComponent : UNavigationInvokerComponent {
};

// Class Phoenix.MapBase
// Size: 0x930 (Inherited: 0x28)
struct UMapBase : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	float HogwartsDotIconScale; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct TMap<struct FString, struct UMapIconMeshRenderWidget*> IconInstanceRenderWidgets; // 0x48(0x50)
	char pad_98[0x408]; // 0x98(0x408)
	struct UMapFX* ClosestFastTravelFX; // 0x4a0(0x08)
	struct UMapIcon* ClosestFastTravelIcon; // 0x4a8(0x08)
	struct TArray<struct FMapIconEntry> RegionDotIconList; // 0x4b0(0x10)
	struct UObject* MapIconWidgetClass; // 0x4c0(0x08)
	struct UMapScreenBase* BaseMapWidget; // 0x4c8(0x08)
	struct UObject* MapBPWidgetClass; // 0x4d0(0x08)
	struct UObject* MapIconBPClass; // 0x4d8(0x08)
	struct UObject* MapSpriteIconBPClass; // 0x4e0(0x08)
	struct UWorldSupportWorld* MapWorld; // 0x4e8(0x08)
	struct TArray<struct FMapLevelData> LevelsToLoad; // 0x4f0(0x10)
	char pad_500[0x120]; // 0x500(0x120)
	struct UMapIcon* PlayerMarkerIcon; // 0x620(0x08)
	char pad_628[0x8]; // 0x628(0x08)
	struct UMaterialInstanceDynamic* PlayerMarkerMaterial; // 0x630(0x08)
	char pad_638[0x30]; // 0x638(0x30)
	struct UDebugTextPanel* DebugTextPanel; // 0x668(0x08)
	float WayMarkerScale; // 0x670(0x04)
	char pad_674[0x14]; // 0x674(0x14)
	struct UMapIcon* hoverIcon; // 0x688(0x08)
	struct UMapIcon* LastHoverIcon; // 0x690(0x08)
	struct UMapIcon* LastHoverIconUnhover; // 0x698(0x08)
	char pad_6A0[0x8]; // 0x6a0(0x08)
	struct UMapMovementComponent* MovementComponent; // 0x6a8(0x08)
	struct AMapPawn* MapPawn; // 0x6b0(0x08)
	char pad_6B8[0x208]; // 0x6b8(0x208)
	struct TArray<struct UMapIcon*> StackIcons; // 0x8c0(0x10)
	char pad_8D0[0x34]; // 0x8d0(0x34)
	float ZoomFadeStart; // 0x904(0x04)
	float ZoomFadeEnd; // 0x908(0x04)
	float MinimumAlpha; // 0x90c(0x04)
	int32_t MaxFrameCountToCover; // 0x910(0x04)
	float MapAnalogControllerMin; // 0x914(0x04)
	float CursorSnapDistance; // 0x918(0x04)
	char pad_91C[0x4]; // 0x91c(0x04)
	struct UMapCameraParameters* CameraParameters; // 0x920(0x08)
	struct UMapCameraParameters* DebugCameraParameters; // 0x928(0x08)

	bool TutorialDisablesMapBehavior_Blueprint(enum class EMapLocTypes MapBehavior); // Function Phoenix.MapBase.TutorialDisablesMapBehavior_Blueprint // (Final|Native|Public|BlueprintCallable) // @ game+0x3339ab0
	void TrackHoveredMission(); // Function Phoenix.MapBase.TrackHoveredMission // (Final|Native|Protected|BlueprintCallable) // @ game+0x3339a00
	void SetTurnOffFogCheck(bool pTurnOffFogCheck); // Function Phoenix.MapBase.SetTurnOffFogCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x33398c0
	void SetLastHoveredIcon(struct UMapIcon* lastIcon); // Function Phoenix.MapBase.SetLastHoveredIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x3339500
	void SetKnowledgeCardActive(bool pKnowledgeCardActive); // Function Phoenix.MapBase.SetKnowledgeCardActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3339470
	void SetHoveredIcon(struct UMapIcon* hoverIcon); // Function Phoenix.MapBase.SetHoveredIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x33393e0
	void SetCoverDisplayed(bool Enable); // Function Phoenix.MapBase.SetCoverDisplayed // (Final|Native|Public|BlueprintCallable) // @ game+0x3339350
	void SetCoverAlpha(float Alpha); // Function Phoenix.MapBase.SetCoverAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x33392d0
	void ReturnCursorToPlayerLocation(); // Function Phoenix.MapBase.ReturnCursorToPlayerLocation // (Final|Native|Protected|BlueprintCallable) // @ game+0x33392b0
	void PlaceWayMarkerClick(); // Function Phoenix.MapBase.PlaceWayMarkerClick // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void PlaceWayMarkerBP(); // Function Phoenix.MapBase.PlaceWayMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x3339270
	void OnWaitPopupDismissed(struct UPopupScreen* Popup, int32_t ConfirmationResult); // Function Phoenix.MapBase.OnWaitPopupDismissed // (Final|Native|Public) // @ game+0x33391a0
	void OnMenuClosedStartFastTravel(); // Function Phoenix.MapBase.OnMenuClosedStartFastTravel // (Final|Native|Public) // @ game+0x3339140
	float IsWaitAvailable(); // Function Phoenix.MapBase.IsWaitAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x3339020
	bool IsMissionByBeacon(struct UBeaconInfo* BeaconInfo); // Function Phoenix.MapBase.IsMissionByBeacon // (Final|Native|Public|BlueprintCallable) // @ game+0x3338f80
	bool IsMissionBeaconNoArea(enum class EBeaconType BeaconType); // Function Phoenix.MapBase.IsMissionBeaconNoArea // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3338f00
	bool IsMissionBeacon(enum class EBeaconType BeaconType); // Function Phoenix.MapBase.IsMissionBeacon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3338e80
	void InputReadyCallback(); // Function Phoenix.MapBase.InputReadyCallback // (Final|Native|Private) // @ game+0x3338e40
	void IconOutlineTextureCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapBase.IconOutlineTextureCallback // (Final|Native|Private) // @ game+0x3338d70
	void IconInstanceTextureCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapBase.IconInstanceTextureCallback // (Final|Native|Private) // @ game+0x3338ca0
	void GoToPreviousMap(); // Function Phoenix.MapBase.GoToPreviousMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3338ac0
	void GoToNextMap(); // Function Phoenix.MapBase.GoToNextMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3338aa0
	enum class EMapZoomTypes GetZoomTypeBP(); // Function Phoenix.MapBase.GetZoomTypeBP // (Final|Native|Public|BlueprintCallable) // @ game+0x3338a70
	float GetZoomFactor(); // Function Phoenix.MapBase.GetZoomFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x3338a40
	struct FName GetWorldName(); // Function Phoenix.MapBase.GetWorldName // (Final|Native|Public|BlueprintCallable) // @ game+0x3338a20
	bool GetTurnOffFogCheck(); // Function Phoenix.MapBase.GetTurnOffFogCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x33389d0
	struct UWorldSupportWorld* GetMapWorld(); // Function Phoenix.MapBase.GetMapWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x33387c0
	struct UMapScreenBase* GetMapWidget(); // Function Phoenix.MapBase.GetMapWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x33387a0
	bool GetMapVisible(); // Function Phoenix.MapBase.GetMapVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x3338780
	enum class EMapTypes GetMapType(); // Function Phoenix.MapBase.GetMapType // (Final|Native|Public|BlueprintCallable) // @ game+0x3338760
	float GetMapScale(); // Function Phoenix.MapBase.GetMapScale // (Final|Native|Public|BlueprintCallable) // @ game+0x32a1a10
	bool GetMapReadyCalled(); // Function Phoenix.MapBase.GetMapReadyCalled // (Final|Native|Private|BlueprintCallable) // @ game+0x3338740
	struct APlayerController* GetMapPlayerController(); // Function Phoenix.MapBase.GetMapPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x3338710
	struct FName GetMapName(); // Function Phoenix.MapBase.GetMapName // (Final|Native|Public|BlueprintCallable) // @ game+0x33386d0
	enum class EMapFadeState GetMapFadeState(); // Function Phoenix.MapBase.GetMapFadeState // (Final|Native|Public|BlueprintCallable) // @ game+0x33386b0
	struct UMapIcon* GetLastHoveredIcon(); // Function Phoenix.MapBase.GetLastHoveredIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x3338470
	bool GetKnowledgeCardActive(); // Function Phoenix.MapBase.GetKnowledgeCardActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3338450
	bool GetIsMouseDragging(); // Function Phoenix.MapBase.GetIsMouseDragging // (Final|Native|Public|BlueprintCallable) // @ game+0x3338420
	bool GetHoveredState(); // Function Phoenix.MapBase.GetHoveredState // (Final|Native|Public|BlueprintCallable) // @ game+0x3338400
	struct UMapIcon* GetHoveredIcon(); // Function Phoenix.MapBase.GetHoveredIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x33383e0
	bool GetCameraLerpInProgress(); // Function Phoenix.MapBase.GetCameraLerpInProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x33383c0
	bool CanGoToMissionLogFromIcon(struct UMapIcon* MapIcon); // Function Phoenix.MapBase.CanGoToMissionLogFromIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3337fb0
	void AdvanceTime(); // Function Phoenix.MapBase.AdvanceTime // (Final|Native|Public|BlueprintCallable) // @ game+0x3337ed0
};

// Class Phoenix.MapBaseActor
// Size: 0x288 (Inherited: 0x248)
struct AMapBaseActor : AActor {
	float ZoomFadeStart; // 0x248(0x04)
	float ZoomFadeEnd; // 0x24c(0x04)
	float MinimumAlpha; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct AMapCursor* MapCursorClass; // 0x258(0x08)
	int32_t MaxFrameCountToCover; // 0x260(0x04)
	float MapAnalogControllerMin; // 0x264(0x04)
	struct UMapCameraParameters* CameraParameters; // 0x268(0x08)
	char pad_270[0x18]; // 0x270(0x18)

	void SetMapPawn(struct AMapPawn* Pawn); // Function Phoenix.MapBaseActor.SetMapPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x3339830
	struct AMapPawn* GetMapPawn(); // Function Phoenix.MapBaseActor.GetMapPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x33386f0
};

// Class Phoenix.RegionSplineContainer
// Size: 0x80 (Inherited: 0x28)
struct URegionSplineContainer : UObject {
	char pad_28[0x58]; // 0x28(0x58)
};

// Class Phoenix.MapCommon
// Size: 0x28 (Inherited: 0x28)
struct UMapCommon : UObject {
};

// Class Phoenix.MapCursor
// Size: 0x580 (Inherited: 0x250)
struct AMapCursor : ADecalActor {
	float CursorSpeedMultiplier; // 0x250(0x04)
	float CursorSpeedMultiplierDungeon; // 0x254(0x04)
	float CursorSpeedMultiplierZoomFactor; // 0x258(0x04)
	float CursorSpeedMultiplierZoomFactorDungeon; // 0x25c(0x04)
	bool ShouldSnapCursor; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float MaxFadeFromCursor; // 0x264(0x04)
	float FadeDistanceFromCursorToStartFade; // 0x268(0x04)
	float MaxFadeDistance; // 0x26c(0x04)
	float FadeMultiplier; // 0x270(0x04)
	bool DisableMouseInput; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	float MouseSlop; // 0x278(0x04)
	float SnapToIconLerpFactor; // 0x27c(0x04)
	float SnapToIconLerpFactorHogwarts; // 0x280(0x04)
	float VerticalHorinzontalCollideAdjust; // 0x284(0x04)
	float MouseEdgeMovementSpeed; // 0x288(0x04)
	float ShowMouseCursorTop; // 0x28c(0x04)
	float VerticalEdgeBoundTop; // 0x290(0x04)
	float VerticalEdgeBoundBottom; // 0x294(0x04)
	float HorizontalEdgeBound; // 0x298(0x04)
	float CursorMoveOnScroll; // 0x29c(0x04)
	float ToggleInputLerpFactor; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x2a8(0x08)
	struct UMaterial* CursorMaterial; // 0x2b0(0x08)
	char pad_2B8[0xe8]; // 0x2b8(0xe8)
	struct UTexture2D* CursorTexture; // 0x3a0(0x08)
	struct UMapScreenBase* MapScreen; // 0x3a8(0x08)
	struct UUIManager* UIManager; // 0x3b0(0x08)
	struct UMapSubSystem* MapSubSystem; // 0x3b8(0x08)
	struct APlayerController* PlayerController; // 0x3c0(0x08)
	struct UMapBase* MapBase; // 0x3c8(0x08)
	struct UMapOverland* OverlandMap; // 0x3d0(0x08)
	struct UMapHogsmeade* HogsmeadeMap; // 0x3d8(0x08)
	struct UMapHogwarts* HogwartsMap; // 0x3e0(0x08)
	struct UMapMovementComponent* MapMoveComponent; // 0x3e8(0x08)
	struct ULocalPlayer* LocalPlayer; // 0x3f0(0x08)
	struct UWorld* TraceWorld; // 0x3f8(0x08)
	char pad_400[0x150]; // 0x400(0x150)
	struct AActor* HitActor; // 0x550(0x08)
	struct AActor* LastHitActor; // 0x558(0x08)
	struct USceneComponent* StaticHitComponent; // 0x560(0x08)
	struct USceneComponent* LastStaticHitComponent; // 0x568(0x08)
	char pad_570[0x10]; // 0x570(0x10)

	void ToggleShowScreenPosition(); // Function Phoenix.MapCursor.ToggleShowScreenPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x333def0
	void ToggleShowMouseLocation(); // Function Phoenix.MapCursor.ToggleShowMouseLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x333ded0
	void ToggleShowCursorLocation(); // Function Phoenix.MapCursor.ToggleShowCursorLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x333deb0
	void ToggleShowCollisionActor(); // Function Phoenix.MapCursor.ToggleShowCollisionActor // (Final|Native|Public|BlueprintCallable) // @ game+0x333de90
	void SetToMouse(); // Function Phoenix.MapCursor.SetToMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x333de70
	void SetToGamePad(bool doLerp, struct FVector lerpLocation); // Function Phoenix.MapCursor.SetToGamePad // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333dd80
	void SetScreenBounds(struct FVector4 BoundsArray); // Function Phoenix.MapCursor.SetScreenBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333dc60
	void SetRightMouseButtonClicked(bool Clicked); // Function Phoenix.MapCursor.SetRightMouseButtonClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x333dbd0
	void SetCursorControl(enum class ECursorControlTypes& ControlType); // Function Phoenix.MapCursor.SetCursorControl // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x333da20
	void SetCursorBounds(struct FVector4 BoundsArray); // Function Phoenix.MapCursor.SetCursorBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d990
	void MouseSnapToPlayer(); // Function Phoenix.MapCursor.MouseSnapToPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x333d790
	struct FVector4 GetScreenBounds(); // Function Phoenix.MapCursor.GetScreenBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1373d70
	bool GetMouseActive(); // Function Phoenix.MapCursor.GetMouseActive // (Final|Native|Public|BlueprintCallable) // @ game+0x333d570
	bool GetLerpingToNewLocation(); // Function Phoenix.MapCursor.GetLerpingToNewLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x333d310
	bool GetGamePadActive(); // Function Phoenix.MapCursor.GetGamePadActive // (Final|Native|Public|BlueprintCallable) // @ game+0x333d2f0
	struct FVector GetCursorTranslation(); // Function Phoenix.MapCursor.GetCursorTranslation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d260
	struct FVector4 GetCursorBounds(); // Function Phoenix.MapCursor.GetCursorBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d230
	void GamepadSnapToPlayer(); // Function Phoenix.MapCursor.GamepadSnapToPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x333d140
};

// Class Phoenix.MapLocation
// Size: 0xa0 (Inherited: 0x28)
struct UMapLocation : UObject {
	struct AMapLocationActor* locationActor; // 0x28(0x08)
	struct UMapMarkupComponent* MapMarkupComponent; // 0x30(0x08)
	char pad_38[0x58]; // 0x38(0x58)
	struct TArray<struct UMapLocation*> Children; // 0x90(0x10)

	void SetParent(struct UMapLocation* ParentIn); // Function Phoenix.MapLocation.SetParent // (Final|Native|Public) // @ game+0x333db40
	void SetIsPrimary(bool IsPrimaryIn); // Function Phoenix.MapLocation.SetIsPrimary // (Final|Native|Public) // @ game+0x333dab0
	struct UMapLocation* RemoveLocation(struct UMapLocation* LocationIn); // Function Phoenix.MapLocation.RemoveLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x333d8d0
	bool IsRoot(); // Function Phoenix.MapLocation.IsRoot // (Final|Native|Public) // @ game+0x333d760
	bool IsPrimary(); // Function Phoenix.MapLocation.IsPrimary // (Final|Native|Public|BlueprintCallable) // @ game+0x333d730
	float GetVolume(); // Function Phoenix.MapLocation.GetVolume // (Final|Native|Public) // @ game+0x333d700
	struct FRotator GetRotation(); // Function Phoenix.MapLocation.GetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d6c0
	struct UMapLocation* GetPrimaryInTree(); // Function Phoenix.MapLocation.GetPrimaryInTree // (Final|Native|Public|BlueprintCallable) // @ game+0x333d690
	struct UMapLocation* GetParent(); // Function Phoenix.MapLocation.GetParent // (Final|Native|Public|BlueprintCallable) // @ game+0x333d660
	struct UMapMarkupComponent* GetMapMarkupComponent(); // Function Phoenix.MapLocation.GetMapMarkupComponent // (Final|Native|Public) // @ game+0x333d520
	struct FString GetLocationId(); // Function Phoenix.MapLocation.GetLocationId // (Final|Native|Public|BlueprintCallable) // @ game+0x333d4a0
	struct UMapLocation* GetLocationByName(struct FString LocationName); // Function Phoenix.MapLocation.GetLocationByName // (Final|Native|Public) // @ game+0x333d3a0
	struct AMapLocationActor* GetLocationActor(); // Function Phoenix.MapLocation.GetLocationActor // (Final|Native|Public) // @ game+0x333d370
	struct FVector GetLocation(); // Function Phoenix.MapLocation.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d330
	struct FVector GetExtent(); // Function Phoenix.MapLocation.GetExtent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x333d2b0
	struct TArray<struct UMapLocation*> GetChildren(); // Function Phoenix.MapLocation.GetChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x333d1a0
	struct FVector GetCenter(); // Function Phoenix.MapLocation.GetCenter // (Final|Native|Public|HasDefaults) // @ game+0x333d160
	int32_t Depth(); // Function Phoenix.MapLocation.Depth // (Final|Native|Public) // @ game+0x333cbf0
	struct UMapLocation* CreateLocationUsingComponent(struct FString RegionIn, struct AMapLocationActor* LocationActorIn, struct FMarkupData MarkupDataIn); // Function Phoenix.MapLocation.CreateLocationUsingComponent // (Final|Native|Static|Public) // @ game+0x333ca60
	struct UMapLocation* CreateLocation(struct FString RegionIn, struct FString LocationIdIn, struct FVector LocationIn, struct FVector ExtentIn, struct FRotator RotationIn, struct FMarkupData MarkupDataIn); // Function Phoenix.MapLocation.CreateLocation // (Final|Native|Static|Public|HasDefaults) // @ game+0x333c7c0
	bool ContainsPoint(struct FVector Point); // Function Phoenix.MapLocation.ContainsPoint // (Final|Native|Public|HasDefaults) // @ game+0x333c720
	bool ContainsLocation(struct FString LocationIdIn); // Function Phoenix.MapLocation.ContainsLocation // (Final|Native|Public) // @ game+0x333c620
	bool AddLocation(struct UMapLocation* MapLocation); // Function Phoenix.MapLocation.AddLocation // (Final|Native|Public) // @ game+0x333c3b0
};

// Class Phoenix.MapData
// Size: 0x30 (Inherited: 0x28)
struct UMapData : UObject {
	struct UMapLocation* Root; // 0x28(0x08)

	struct UMapLocation* FindLocationThatContainsPoint(struct FVector Point, struct UMapLocation* StartLocation); // Function Phoenix.MapData.FindLocationThatContainsPoint // (Final|Native|Public|HasDefaults) // @ game+0x333d050
	struct UMapLocation* FindLocationByName(struct FString Name, struct UMapLocation* StartLocation); // Function Phoenix.MapData.FindLocationByName // (Final|Native|Public) // @ game+0x333cf20
	int32_t FindDepthOfLocation(struct UMapLocation* LocationIn, struct UMapLocation* SearchRoot, int32_t CurrentDepth); // Function Phoenix.MapData.FindDepthOfLocation // (Final|Native|Public) // @ game+0x333ce10
	struct UMapData* CreateMapData(); // Function Phoenix.MapData.CreateMapData // (Final|Native|Static|Public) // @ game+0x333cbc0
	bool ContainsLocation(struct FString LocationName); // Function Phoenix.MapData.ContainsLocation // (Final|Native|Public) // @ game+0x333c520
	bool AddLocationInternal(struct UMapLocation* MapLocation, struct UMapLocation* Parent); // Function Phoenix.MapData.AddLocationInternal // (Final|Native|Public) // @ game+0x333c450
	bool AddLocation(struct UMapLocation* MapLocation); // Function Phoenix.MapData.AddLocation // (Final|Native|Public) // @ game+0x333c310
};

// Class Phoenix.MapDebuggerWindow
// Size: 0x40 (Inherited: 0x28)
struct UMapDebuggerWindow : UObject {
	struct TArray<struct AActor*> audioCueActors; // 0x28(0x10)
	struct AActor* enterLeaveActor; // 0x38(0x08)
};

// Class Phoenix.MapDungeon
// Size: 0x9d0 (Inherited: 0x930)
struct UMapDungeon : UMapBase {
	struct AMapDungeonActor* DungeonMapActor; // 0x930(0x08)
	struct UObject* MapNavActorClass; // 0x938(0x08)
	struct UDungeonMapScreen* MapWidget; // 0x940(0x08)
	char pad_948[0x18]; // 0x948(0x18)
	float DefaultIconScale; // 0x960(0x04)
	struct FLinearColor MapIconDiscoveredColor; // 0x964(0x10)
	struct FLinearColor MapIconColor; // 0x974(0x10)
	float MapIconTier4ScaleFactor; // 0x984(0x04)
	float MaxZoomDistance; // 0x988(0x04)
	float MaxRadius; // 0x98c(0x04)
	float CursorScale; // 0x990(0x04)
	float CursorScaleFactor; // 0x994(0x04)
	char pad_998[0x8]; // 0x998(0x08)
	struct FVector4 MapBounds; // 0x9a0(0x10)
	struct FVector4 MapScreenBounds; // 0x9b0(0x10)
	struct FVector DecalSize; // 0x9c0(0x0c)
	char pad_9CC[0x4]; // 0x9cc(0x04)

	struct UDungeonMapScreen* GetMapScreenWidget(); // Function Phoenix.MapDungeon.GetMapScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x333d550
	struct AMapDungeonActor* GetDungeonMapActor(); // Function Phoenix.MapDungeon.GetDungeonMapActor // (Final|Native|Public|BlueprintCallable) // @ game+0x333d290
	void DungeonShowAll(bool Show); // Function Phoenix.MapDungeon.DungeonShowAll // (Final|Native|Public|BlueprintCallable) // @ game+0x333cc40
};

// Class Phoenix.MapNavData
// Size: 0xc8 (Inherited: 0x28)
struct UMapNavData : UObject {
	struct FString LevelName; // 0x28(0x10)
	struct TArray<struct FString> SubLevelNames; // 0x38(0x10)
	int32_t NumNavmeshes; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<int32_t> Offsets; // 0x50(0x10)
	struct TArray<struct FVector> Vertexes; // 0x60(0x10)
	struct TArray<int32_t> TriangleIndexes; // 0x70(0x10)
	struct TArray<struct FIntPoint> NavLayers; // 0x80(0x10)
	struct TArray<struct FMapTriangle> Triangles; // 0x90(0x10)
	struct TArray<struct FIntPoint> TriangleCentroid; // 0xa0(0x10)
	struct FMapBoundingBox Bounds; // 0xb0(0x18)
};

// Class Phoenix.MapDungeonComponent
// Size: 0x570 (Inherited: 0x510)
struct UMapDungeonComponent : UProceduralMeshComponent {
	char pad_510[0x60]; // 0x510(0x60)
};

// Class Phoenix.MapDungeonActor
// Size: 0x390 (Inherited: 0x248)
struct AMapDungeonActor : AActor {
	struct UMaterialInstanceDynamic* DungeonMaterialDynamic; // 0x248(0x08)
	struct UMaterialInterface* DungeonMaterial; // 0x250(0x08)
	struct UMapDungeonComponent* MapDungeonComponent; // 0x258(0x08)
	struct TArray<struct UMaterial*> OverrideMaterials; // 0x260(0x10)
	char pad_270[0x10]; // 0x270(0x10)
	int32_t CurrentLayer; // 0x280(0x04)
	struct FLinearColor CurrentLayerColor; // 0x284(0x10)
	struct FLinearColor OtherLayerColor; // 0x294(0x10)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct FDbSingleColumnInfo TestList; // 0x2a8(0x88)
	char pad_330[0x18]; // 0x330(0x18)
	struct TArray<struct FString> DataFiles; // 0x348(0x10)
	char pad_358[0x38]; // 0x358(0x38)
};

// Class Phoenix.MapFilterRegion
// Size: 0x270 (Inherited: 0x250)
struct AMapFilterRegion : ADecalActor {
	struct UMaterialInterface* Material; // 0x250(0x08)
	char pad_258[0x18]; // 0x258(0x18)

	void SetTexture(struct UTexture2D* inTexture); // Function Phoenix.MapFilterRegion.SetTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x333dcf0
	struct FString GetName(); // Function Phoenix.MapFilterRegion.GetName // (Final|Native|Public|BlueprintCallable) // @ game+0x333d5a0
};

// Class Phoenix.MapFXManager
// Size: 0x70 (Inherited: 0x28)
struct UMapFXManager : UObject {
	struct TArray<struct FMapFXItem> FXList; // 0x28(0x10)
	struct TArray<struct UMapFX*> FXActiveList; // 0x38(0x10)
	struct TArray<struct UMapFXChain*> FXChainActiveList; // 0x48(0x10)
	char pad_58[0x18]; // 0x58(0x18)

	void FXComplete(struct UMapFX* MapFX); // Function Phoenix.MapFXManager.FXComplete // (Final|Native|Private) // @ game+0x333cd60
	void FXChainComplete(struct UMapFXChain* MapFXChain); // Function Phoenix.MapFXManager.FXChainComplete // (Final|Native|Private) // @ game+0x333ccd0
};

// Class Phoenix.MapFXBase
// Size: 0x30 (Inherited: 0x28)
struct UMapFXBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.MapFX
// Size: 0x70 (Inherited: 0x30)
struct UMapFX : UMapFXBase {
	struct UNiagaraComponent* NiagaraComponent; // 0x30(0x08)
	char pad_38[0x38]; // 0x38(0x38)

	void OnFinished(struct UNiagaraComponent* PSystem); // Function Phoenix.MapFX.OnFinished // (Final|Native|Private) // @ game+0x333d7b0
};

// Class Phoenix.MapFXChain
// Size: 0x80 (Inherited: 0x30)
struct UMapFXChain : UMapFXBase {
	char pad_30[0x50]; // 0x30(0x50)

	void OnFinished(struct UNiagaraComponent* PSystem); // Function Phoenix.MapFXChain.OnFinished // (Final|Native|Private) // @ game+0x333d840
	void FXTimerCallback(); // Function Phoenix.MapFXChain.FXTimerCallback // (Final|Native|Public) // @ game+0x333cdf0
};

// Class Phoenix.HogsmeadeMaterialFade
// Size: 0x40 (Inherited: 0x28)
struct UHogsmeadeMaterialFade : UObject {
	struct UMaterialInstanceDynamic* Material; // 0x28(0x08)
	char pad_30[0x10]; // 0x30(0x10)
};

// Class Phoenix.MapHogsmeade
// Size: 0x9d0 (Inherited: 0x930)
struct UMapHogsmeade : UMapBase {
	struct UHogsmeadeMapScreen* MapWidget; // 0x930(0x08)
	struct TArray<struct UHogsmeadeMaterialFade*> MaterialFades; // 0x938(0x10)
	char pad_948[0x4]; // 0x948(0x04)
	float ZoomFactorTier1; // 0x94c(0x04)
	float ZoomFactorTier2; // 0x950(0x04)
	float ZoomFactorTier3; // 0x954(0x04)
	float ZoomFactorTier4; // 0x958(0x04)
	float ZoomFactorTier5; // 0x95c(0x04)
	struct FLinearColor MapIconDiscoveredColor; // 0x960(0x10)
	struct FLinearColor MapIconColor; // 0x970(0x10)
	float DefaultIconScale; // 0x980(0x04)
	float CursorScale; // 0x984(0x04)
	float CursorScaleFactor; // 0x988(0x04)
	struct FVector DecalSize; // 0x98c(0x0c)
	char pad_998[0x8]; // 0x998(0x08)
	struct FVector4 MapBounds; // 0x9a0(0x10)
	struct FVector4 MapScreenBounds; // 0x9b0(0x10)
	struct FVector HogsmeadeCenter; // 0x9c0(0x0c)
	char pad_9CC[0x4]; // 0x9cc(0x04)

	void RemoveWayMarkerBP(); // Function Phoenix.MapHogsmeade.RemoveWayMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x333d970
	struct UHogsmeadeMapScreen* GetMapScreenWidget(); // Function Phoenix.MapHogsmeade.GetMapScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x333d290
	void DoFastTravel(); // Function Phoenix.MapHogsmeade.DoFastTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x333cc20
};

// Class Phoenix.MapHogwarts
// Size: 0xc70 (Inherited: 0x930)
struct UMapHogwarts : UMapBase {
	bool bDebugPathHelper; // 0x930(0x01)
	char pad_931[0x7]; // 0x931(0x07)
	struct TArray<struct APhoenixPathActor*> MapPathActors; // 0x938(0x10)
	struct FLinearColor Road50Color; // 0x948(0x10)
	struct FLinearColor Road100Color; // 0x958(0x10)
	struct FLinearColor Road200Color; // 0x968(0x10)
	struct FLinearColor RoadUnknownColor; // 0x978(0x10)
	float RegionHoverOverAlpha; // 0x988(0x04)
	char pad_98C[0x4]; // 0x98c(0x04)
	struct TArray<struct TWeakObjectPtr<struct AActor>> RegisteredMarkupActors; // 0x990(0x10)
	struct UMaterialInstanceDynamic* PathDynamicMaterial; // 0x9a0(0x08)
	struct AMapHogwartsCamera* StartCamera; // 0x9a8(0x08)
	struct AMapHogwartsCamera* CurrentCamera; // 0x9b0(0x08)
	char pad_9B8[0x78]; // 0x9b8(0x78)
	struct TArray<struct AMapLocationActor*> OtherObjectsToDarken; // 0xa30(0x10)
	struct TArray<struct ATargetPoint*> TargetPointActors; // 0xa40(0x10)
	char pad_A50[0xd0]; // 0xa50(0xd0)
	struct TArray<struct UMapPath*> OverlandMapPaths; // 0xb20(0x10)
	char pad_B30[0x38]; // 0xb30(0x38)
	struct TArray<struct FHogwartsRegion> Regions; // 0xb68(0x10)
	char pad_B78[0x8]; // 0xb78(0x08)
	struct TArray<struct FName> MissionsForThisRegion; // 0xb80(0x10)
	char pad_B90[0x10]; // 0xb90(0x10)
	struct TMap<struct FString, struct FVector> FastTravelLocations; // 0xba0(0x50)
	struct TMap<struct FString, struct FString> SubLevelNameToMapName; // 0xbf0(0x50)
	bool ShowDebugMapPath; // 0xc40(0x01)
	bool ShowPathDebug; // 0xc41(0x01)
	bool ShowZoneBanner; // 0xc42(0x01)
	char pad_C43[0x5]; // 0xc43(0x05)
	struct TArray<struct AMapLocationActor*> LocationActors; // 0xc48(0x10)
	float MapIconTier3ScaleFactor; // 0xc58(0x04)
	float MapIconTier4ScaleFactor; // 0xc5c(0x04)
	float DefaultIconScale; // 0xc60(0x04)
	char pad_C64[0xc]; // 0xc64(0x0c)

	void WayPointCallbackHogwarts(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapHogwarts.WayPointCallbackHogwarts // (Final|Native|Private) // @ game+0x3341960
	void UnregisterMarkupActor(struct AActor* Actor); // Function Phoenix.MapHogwarts.UnregisterMarkupActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void TestEvent(); // Function Phoenix.MapHogwarts.TestEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowPortraitTravel(struct TMap<struct FString, struct FVector>& Locations); // Function Phoenix.MapHogwarts.ShowPortraitTravel // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3341820
	void SetZoomType(enum class EMapZoomTypes ZoomType); // Function Phoenix.MapHogwarts.SetZoomType // (Native|Public|BlueprintCallable) // @ game+0x33417a0
	void SetUseNewIcons(bool pUseNewIcons); // Function Phoenix.MapHogwarts.SetUseNewIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x3341710
	void RegisterMarkupActor(struct AActor* Actor); // Function Phoenix.MapHogwarts.RegisterMarkupActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x31e6670
	void OverlandMapZoom(float Val); // Function Phoenix.MapHogwarts.OverlandMapZoom // (Final|Native|Public|BlueprintCallable) // @ game+0x3341330
	void OnStartPathing(struct UObject* i_caller, uint32_t BeaconHandle); // Function Phoenix.MapHogwarts.OnStartPathing // (Final|Native|Private) // @ game+0x3341260
	void OnSaveGameLoaded(); // Function Phoenix.MapHogwarts.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x1074730
	void OnMapItemSelected_Event(struct FString ItemString, int32_t ItemIndex, bool WasCanceled); // Function Phoenix.MapHogwarts.OnMapItemSelected_Event // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnMapItemSelected(struct FString& ItemString, int32_t ItemIndex, bool WasCanceled); // Function Phoenix.MapHogwarts.OnMapItemSelected // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3341130
	void OnCameraBlendComplete(); // Function Phoenix.MapHogwarts.OnCameraBlendComplete // (Final|Native|Private) // @ game+0x3341110
	bool IsBannerActive(); // Function Phoenix.MapHogwarts.IsBannerActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33410e0
	bool InHogwartsLocation(struct FVector Location); // Function Phoenix.MapHogwarts.InHogwartsLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3341040
	bool InHogwarts(); // Function Phoenix.MapHogwarts.InHogwarts // (Final|Native|Public|BlueprintCallable) // @ game+0x3341010
	void HandleMapLocationChanged(struct UObject* Caller, struct FString CurrentMapLocationName); // Function Phoenix.MapHogwarts.HandleMapLocationChanged // (Final|Native|Private) // @ game+0x3340f30
	void GiveMeHelp_Event(); // Function Phoenix.MapHogwarts.GiveMeHelp_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	enum class EMapZoomTypes GetZoomType(float Zoom); // Function Phoenix.MapHogwarts.GetZoomType // (Native|Public|BlueprintCallable) // @ game+0x3340e70
	bool GetUseNewIcons(); // Function Phoenix.MapHogwarts.GetUseNewIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x3340e50
	struct TArray<struct FName> GetMissionsForThisRegion(); // Function Phoenix.MapHogwarts.GetMissionsForThisRegion // (Final|Native|Public|BlueprintCallable) // @ game+0x3340b50
	struct FVector GetMapTransform(); // Function Phoenix.MapHogwarts.GetMapTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3340b10
	struct UHogwartsMapScreen* GetMapScreenWidget(); // Function Phoenix.MapHogwarts.GetMapScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x3340ad0
	struct FString GetMapLocationName(); // Function Phoenix.MapHogwarts.GetMapLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x3340a50
	void GetAllActorsWithTag(struct UWorld* World, struct FName Tag, struct TArray<struct AActor*>& Actors); // Function Phoenix.MapHogwarts.GetAllActorsWithTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33408e0
	void GetAllActorsOfClass(struct UWorld* World, struct AActor* ActorClass, struct TArray<struct AActor*>& Actors); // Function Phoenix.MapHogwarts.GetAllActorsOfClass // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33407b0
	void CheckLoadedProperly(); // Function Phoenix.MapHogwarts.CheckLoadedProperly // (Final|Native|Private) // @ game+0x1074730
	void ChangeTier(); // Function Phoenix.MapHogwarts.ChangeTier // (Final|Native|Public|BlueprintCallable) // @ game+0x3340630
	float CalulatePathDistance(struct TArray<struct FVector> InPathPoints); // Function Phoenix.MapHogwarts.CalulatePathDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x3340530
	void ActivateFastTravelByIcon(); // Function Phoenix.MapHogwarts.ActivateFastTravelByIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x3340510
	void ActivateFastTravel(struct FString LocationID, struct FVector FastTravelDestination); // Function Phoenix.MapHogwarts.ActivateFastTravel // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33403d0
	void ActivateBanner(bool ACTIVE); // Function Phoenix.MapHogwarts.ActivateBanner // (Final|Native|Public|BlueprintCallable) // @ game+0x3340340
};

// Class Phoenix.MapPathSpline
// Size: 0x248 (Inherited: 0x248)
struct AMapPathSpline : AActor {
};

// Class Phoenix.LevelData
// Size: 0x50 (Inherited: 0x28)
struct ULevelData : UObject {
	char pad_28[0x28]; // 0x28(0x28)
};

// Class Phoenix.MapHogwartsBPActor
// Size: 0x5d0 (Inherited: 0x288)
struct AMapHogwartsBPActor : AMapBaseActor {
	char pad_288[0x8]; // 0x288(0x08)
	struct UMaterialInterface* PathMaterial; // 0x290(0x08)
	struct UMaterialInterface* PostProcessMaterial; // 0x298(0x08)
	struct UMaterialInstanceDynamic* PostProcessMaterialInstance; // 0x2a0(0x08)
	struct UMapLocation* TestLocation; // 0x2a8(0x08)
	struct FString TargetNPC; // 0x2b0(0x10)
	bool HasTarget; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	float CursorScale; // 0x2c4(0x04)
	float CursorScaleFactor; // 0x2c8(0x04)
	struct FVector DecalSize; // 0x2cc(0x0c)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct FVector4 MapBounds; // 0x2e0(0x10)
	struct FVector4 ScreenBounds; // 0x2f0(0x10)
	float CursorSnapDistance; // 0x300(0x04)
	bool IsMapTargetScheduledEntity; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	struct UScheduledEntity* MapTargetScheduledEntity; // 0x308(0x08)
	bool IsMapTargetWorldLocation; // 0x310(0x01)
	char pad_311[0x3]; // 0x311(0x03)
	struct FVector MapTargetWorldLocation; // 0x314(0x0c)
	struct TArray<struct FPathLocationData> PathMapLocationList; // 0x320(0x10)
	bool ShowFloors; // 0x330(0x01)
	bool UseNavPath; // 0x331(0x01)
	char pad_332[0x2]; // 0x332(0x02)
	struct FVector PathWorldMarkerOffset; // 0x334(0x0c)
	bool UpdatePathOnPrimaryLocationChange; // 0x340(0x01)
	bool bUsePointsOfInterest; // 0x341(0x01)
	char pad_342[0x6]; // 0x342(0x06)
	struct TMap<struct FString, struct FVector> PointsOfInterest; // 0x348(0x50)
	struct TMap<struct FString, struct FLocationGroup> Groups; // 0x398(0x50)
	char pad_3E8[0x8]; // 0x3e8(0x08)
	struct FVector WorldToMapOffset; // 0x3f0(0x0c)
	char pad_3FC[0x4]; // 0x3fc(0x04)
	struct UMapData* MapData; // 0x400(0x08)
	struct UMapData* FloorData; // 0x408(0x08)
	struct UMapData* StairData; // 0x410(0x08)
	struct AActor* PlayerMarkerActor; // 0x418(0x08)
	struct AActor* FocusPointActor; // 0x420(0x08)
	struct AActor* PathEndActor; // 0x428(0x08)
	struct UStaticMeshComponent* IsolationMeshComponent; // 0x430(0x08)
	struct FLinearColor BaseColor; // 0x438(0x10)
	struct FLinearColor OriginColor; // 0x448(0x10)
	struct FLinearColor PathColor; // 0x458(0x10)
	bool UseZoomMaterailForPath; // 0x468(0x01)
	char pad_469[0x3]; // 0x469(0x03)
	float UVDistanceMul; // 0x46c(0x04)
	struct TArray<struct ULevelData*> LevelData; // 0x470(0x10)
	bool UseComplexCollision; // 0x480(0x01)
	char pad_481[0x7]; // 0x481(0x07)
	struct UMapCameraParameters* CameraParametersBirdsEye; // 0x488(0x08)
	struct UMapObjectComponent* DefaultStartComponent; // 0x490(0x08)
	struct UMaterialInterface* DebugStairVolumeMaterial; // 0x498(0x08)
	struct UMaterialInterface* DebugRoomVolumeMaterial; // 0x4a0(0x08)
	struct UMaterialInterface* DebugFloorVolumeMaterial; // 0x4a8(0x08)
	float TranslateSpeed; // 0x4b0(0x04)
	char pad_4B4[0x4]; // 0x4b4(0x04)
	struct TArray<struct FVector> PathPoints; // 0x4b8(0x10)
	struct AActor* NextPathPointActor; // 0x4c8(0x08)
	struct FString LastLevelName; // 0x4d0(0x10)
	struct FString TargetName; // 0x4e0(0x10)
	char pad_4F0[0x10]; // 0x4f0(0x10)
	struct TArray<struct ULevelData*> PathStructures; // 0x500(0x10)
	struct UMapLocation* LastMapLocation; // 0x510(0x08)
	struct TArray<struct FVector> HitPoints; // 0x518(0x10)
	struct TArray<struct FVector> MissPoints; // 0x528(0x10)
	struct TArray<struct FVector> DebugRayStart; // 0x538(0x10)
	struct TArray<struct FVector> DebugRayEnd; // 0x548(0x10)
	char pad_558[0x8]; // 0x558(0x08)
	struct ULevelStreamingDynamic* NavMeshLevel; // 0x560(0x08)
	char pad_568[0x20]; // 0x568(0x20)
	struct TArray<struct AActor*> DebugActors; // 0x588(0x10)
	char pad_598[0x38]; // 0x598(0x38)

	void SetStaticMapTarget(struct FVector Target); // Function Phoenix.MapHogwartsBPActor.SetStaticMapTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3341680
	void SetNextState(enum class EMap3DState NewState); // Function Phoenix.MapHogwartsBPActor.SetNextState // (Final|Native|Public|BlueprintCallable) // @ game+0x3341600
	void SetDynamicMapTarget(struct UScheduledEntity* Target); // Function Phoenix.MapHogwartsBPActor.SetDynamicMapTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3341570
	void PushLocationListToScreen(struct TArray<struct FString> InLocationList, int32_t InStartIndex); // Function Phoenix.MapHogwartsBPActor.PushLocationListToScreen // (Final|Native|Private|BlueprintCallable) // @ game+0x33413b0
	void PushLocaitonNameToScreen(struct FString LocationName); // Function Phoenix.MapHogwartsBPActor.PushLocaitonNameToScreen // (Final|Native|Private|BlueprintCallable) // @ game+0x31cc3a0
	void OnTransitionToSingleState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToSingleState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToSingleState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToSingleState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToSingleState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToSingleState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToGroupState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToGroupState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToGroupState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToGroupState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToGroupState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToGroupState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToCastleState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToCastleState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToCastleState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToCastleState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransitionToCastleState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnTransitionToCastleState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStartState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnStartState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStartState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnStartState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStartState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnStartState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSingleState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnSingleState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSingleState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnSingleState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSingleState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnSingleState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnGroupState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnGroupState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnGroupState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnGroupState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnGroupState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnGroupState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFastTravelState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnFastTravelState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFastTravelState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnFastTravelState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFastTravelState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnFastTravelState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDiscoverState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnDiscoverState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDiscoverState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnDiscoverState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDiscoverState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnDiscoverState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCastleState_Update_Event(); // Function Phoenix.MapHogwartsBPActor.OnCastleState_Update_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCastleState_Start_Event(); // Function Phoenix.MapHogwartsBPActor.OnCastleState_Start_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnCastleState_Exit_Event(); // Function Phoenix.MapHogwartsBPActor.OnCastleState_Exit_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivate_Event(bool Activate); // Function Phoenix.MapHogwartsBPActor.OnActivate_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GiveMeHelp_Event(); // Function Phoenix.MapHogwartsBPActor.GiveMeHelp_Event // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void GiveMeHelp(); // Function Phoenix.MapHogwartsBPActor.GiveMeHelp // (Final|Native|Protected|BlueprintCallable) // @ game+0x3340f10
	enum class EMap3DState GetState(); // Function Phoenix.MapHogwartsBPActor.GetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3340e20
	struct FString GetRoomStairFloorString(struct UMapMarkupComponent* MapLocation, struct UMapMarkupComponent* StairLocation, struct UMapLocation* FloorLocation, struct UMapLocation* PrimaryrLocation, bool IsOnlyPrimaryLocation); // Function Phoenix.MapHogwartsBPActor.GetRoomStairFloorString // (Final|Native|Public|BlueprintCallable) // @ game+0x3340c10
	bool GetIsActive(); // Function Phoenix.MapHogwartsBPActor.GetIsActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3340a30
	struct UMapHogwarts* GetHogwartsMap(); // Function Phoenix.MapHogwartsBPActor.GetHogwartsMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3340a10
	struct AMapLocationActor* FindLocationActorThatContainsPoint(struct FVector Point); // Function Phoenix.MapHogwartsBPActor.FindLocationActorThatContainsPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3340710
	struct AMapLocationActor* FindLocationActorBelowPoint(struct FVector Point); // Function Phoenix.MapHogwartsBPActor.FindLocationActorBelowPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3340670
	void DoUp(); // Function Phoenix.MapHogwartsBPActor.DoUp // (Native|Public|BlueprintCallable) // @ game+0x31e03b0
	void DoSelect(); // Function Phoenix.MapHogwartsBPActor.DoSelect // (Native|Public|BlueprintCallable) // @ game+0x169c650
	void DoDown(); // Function Phoenix.MapHogwartsBPActor.DoDown // (Native|Public|BlueprintCallable) // @ game+0x31e1670
	void DoBack(); // Function Phoenix.MapHogwartsBPActor.DoBack // (Native|Public|BlueprintCallable) // @ game+0x31e06d0
	void ClearMapTarget(); // Function Phoenix.MapHogwartsBPActor.ClearMapTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3340650
};

// Class Phoenix.MapHogwartsCamera
// Size: 0x930 (Inherited: 0x870)
struct AMapHogwartsCamera : ACameraActor {
	struct ATargetPoint* RotateCenterTarget; // 0x870(0x08)
	bool AllowRotation; // 0x878(0x01)
	bool AllowZoom; // 0x879(0x01)
	char pad_87A[0x2]; // 0x87a(0x02)
	float YawSpeed; // 0x87c(0x04)
	float MouseSensitivity; // 0x880(0x04)
	float MaxMouseDragYawSpeed; // 0x884(0x04)
	float YawAcceleration; // 0x888(0x04)
	float YawDeceleration; // 0x88c(0x04)
	float MouseDragYawAcceleration; // 0x890(0x04)
	float MouseFlickYawDeceleration; // 0x894(0x04)
	float ZoomAmount; // 0x898(0x04)
	float Zoom; // 0x89c(0x04)
	float ZoomSpeed; // 0x8a0(0x04)
	float MinZoomAppliedWithInput; // 0x8a4(0x04)
	float ZoomAcceleration; // 0x8a8(0x04)
	float ZoomDeceleration; // 0x8ac(0x04)
	struct TArray<struct AActor*> ActorsToHide; // 0x8b0(0x10)
	bool AllowInitialCircleMove; // 0x8c0(0x01)
	char pad_8C1[0x3]; // 0x8c1(0x03)
	struct FVector FocusLocation; // 0x8c4(0x0c)
	char pad_8D0[0x60]; // 0x8d0(0x60)

	void UpdateCamera(); // Function Phoenix.MapHogwartsCamera.UpdateCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x3341940
};

// Class Phoenix.MapIcon
// Size: 0x188 (Inherited: 0x28)
struct UMapIcon : UObject {
	struct UBeaconInfo* BeaconInfo; // 0x28(0x08)
	char pad_30[0x8]; // 0x30(0x08)
	struct UMapIconWidget* NameWidget; // 0x38(0x08)
	struct AMapFilterRegion* FilterRegion; // 0x40(0x08)
	struct UTexture2D* FilterRegionTexture; // 0x48(0x08)
	struct UTexture2D* Texture; // 0x50(0x08)
	char pad_58[0x50]; // 0x58(0x50)
	enum class EMapToolTipTypes IconType; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	struct FHoverDataEvent EventData; // 0xac(0x10)
	char pad_BC[0xac]; // 0xbc(0xac)
	struct UMapIconInstance* IconInstance; // 0x168(0x08)
	struct UMapIconInstance* IconInstanceBadge; // 0x170(0x08)
	char pad_178[0x10]; // 0x178(0x10)

	void StopAnimationAndChain(enum class EMapIconState NextState); // Function Phoenix.MapIcon.StopAnimationAndChain // (Final|Native|Public|BlueprintCallable) // @ game+0x3346090
	void StopAnimation(); // Function Phoenix.MapIcon.StopAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x3346070
	void SetTargetScale(float Scale); // Function Phoenix.MapIcon.SetTargetScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3345f60
	void SetTargetColor(struct FLinearColor pTargetColor); // Function Phoenix.MapIcon.SetTargetColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3345ed0
	void SetState(enum class EMapIconState IconState, bool SaveState); // Function Phoenix.MapIcon.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3345e00
	void SetStartingScale(float Scale); // Function Phoenix.MapIcon.SetStartingScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3345d80
	void SetScale(float ScaleIn); // Function Phoenix.MapIcon.SetScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3345d00
	void SetIconVisibility(bool pVisbility); // Function Phoenix.MapIcon.SetIconVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x3345920
	void SetIconPriority(int32_t Priority); // Function Phoenix.MapIcon.SetIconPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x3345890
	void SetIconFlags(int32_t flags); // Function Phoenix.MapIcon.SetIconFlags // (Final|Native|Public|BlueprintCallable) // @ game+0x3345800
	void SetIconBadgeVisibility(bool pVisbility); // Function Phoenix.MapIcon.SetIconBadgeVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x3345770
	void SetColor(struct FLinearColor ColorIn); // Function Phoenix.MapIcon.SetColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3345550
	void SetBadgeName(struct FString pBadgeName); // Function Phoenix.MapIcon.SetBadgeName // (Final|Native|Public|BlueprintCallable) // @ game+0x3345460
	bool IsStopping(); // Function Phoenix.MapIcon.IsStopping // (Final|Native|Public|BlueprintCallable) // @ game+0x33452c0
	bool IsBadgeStopping(); // Function Phoenix.MapIcon.IsBadgeStopping // (Final|Native|Public|BlueprintCallable) // @ game+0x3345200
	float GetTargetScale(); // Function Phoenix.MapIcon.GetTargetScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3345090
	enum class EMapIconState GetState(); // Function Phoenix.MapIcon.GetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3345060
	float GetStartingScale(); // Function Phoenix.MapIcon.GetStartingScale // (Final|Native|Public|BlueprintCallable) // @ game+0x3345030
	int32_t GetIconPriority(); // Function Phoenix.MapIcon.GetIconPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x3344fc0
	int32_t GetIconFlags(); // Function Phoenix.MapIcon.GetIconFlags // (Final|Native|Public|BlueprintCallable) // @ game+0x3344f90
	enum class EMapFadeState GetFadeState(); // Function Phoenix.MapIcon.GetFadeState // (Final|Native|Public|BlueprintCallable) // @ game+0x3344f60
	struct FVector GetBeaconWorldPosition(); // Function Phoenix.MapIcon.GetBeaconWorldPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3344e80
	enum class EBeaconType GetBeaconType(); // Function Phoenix.MapIcon.GetBeaconType // (Final|Native|Public|BlueprintCallable) // @ game+0x3344e50
	struct FString GetBeaconName(); // Function Phoenix.MapIcon.GetBeaconName // (Final|Native|Public|BlueprintCallable) // @ game+0x3344dd0
	struct FString GetBeaconIcon(); // Function Phoenix.MapIcon.GetBeaconIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x3344d50
	struct FString GetBeaconFastTravelLocationID(); // Function Phoenix.MapIcon.GetBeaconFastTravelLocationID // (Final|Native|Public|BlueprintCallable) // @ game+0x3344cd0
	struct FString GetBeaconDescShort(); // Function Phoenix.MapIcon.GetBeaconDescShort // (Final|Native|Public|BlueprintCallable) // @ game+0x3344c50
	void ExcludeIconFromStackedFade(bool pExcludeFromStackedFade); // Function Phoenix.MapIcon.ExcludeIconFromStackedFade // (Final|Native|Public|BlueprintCallable) // @ game+0x3344bc0
};

// Class Phoenix.MapIconInstance
// Size: 0x180 (Inherited: 0x28)
struct UMapIconInstance : UObject {
	char pad_28[0x158]; // 0x28(0x158)
};

// Class Phoenix.MapIconList
// Size: 0x60 (Inherited: 0x28)
struct UMapIconList : UObject {
	struct TArray<struct UMapIconInstance*> Icons; // 0x28(0x10)
	char pad_38[0x28]; // 0x38(0x28)
};

// Class Phoenix.MapIconMeshRenderWidget
// Size: 0x348 (Inherited: 0x268)
struct UMapIconMeshRenderWidget : UUserWidget {
	struct FString Name; // 0x268(0x10)
	struct UMaterialInterface* Material; // 0x278(0x08)
	int32_t NumIcons; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UMaterialInstanceDynamic* MaterialDynamic; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)
	struct URUserVectorArtData* MeshAsset; // 0x2a0(0x08)
	char pad_2A8[0x90]; // 0x2a8(0x90)
	struct TArray<struct TWeakObjectPtr<struct UBeaconInfo>> BeaconsInList; // 0x338(0x10)

	void SetTexture(struct UTexture2D* Texture); // Function Phoenix.MapIconMeshRenderWidget.SetTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x3345fe0
	void SetOutlineTexture(struct UTexture2D* Texture); // Function Phoenix.MapIconMeshRenderWidget.SetOutlineTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x3345c70
	void SetName(struct FString pName); // Function Phoenix.MapIconMeshRenderWidget.SetName // (Final|Native|Public|BlueprintCallable) // @ game+0x3345b60
	void SetMaterial(struct UMaterialInterface* pMaterial); // Function Phoenix.MapIconMeshRenderWidget.SetMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x3345ad0
	void SetLayer3Texture(struct UTexture2D* Texture); // Function Phoenix.MapIconMeshRenderWidget.SetLayer3Texture // (Final|Native|Public|BlueprintCallable) // @ game+0x3345a40
	void SetLayer2Texture(struct UTexture2D* Texture); // Function Phoenix.MapIconMeshRenderWidget.SetLayer2Texture // (Final|Native|Public|BlueprintCallable) // @ game+0x33459b0
	void SetCurrentTextureName(struct FString pTextureName); // Function Phoenix.MapIconMeshRenderWidget.SetCurrentTextureName // (Final|Native|Public|BlueprintCallable) // @ game+0x3345660
	void SetCurrentBeaconState(enum class EBeaconState pCurrentBeaconState); // Function Phoenix.MapIconMeshRenderWidget.SetCurrentBeaconState // (Final|Native|Public|BlueprintCallable) // @ game+0x33455e0
	bool RemoveIcon(struct UMapIconInstance* Icon); // Function Phoenix.MapIconMeshRenderWidget.RemoveIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x33453c0
	void IconTextureCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapIconMeshRenderWidget.IconTextureCallback // (Final|Native|Private) // @ game+0x3345130
	struct FString GetWidgetName(); // Function Phoenix.MapIconMeshRenderWidget.GetWidgetName // (Final|Native|Public|BlueprintCallable) // @ game+0x33450e0
	struct UMaterialInstanceDynamic* GetMaterialDynamic(); // Function Phoenix.MapIconMeshRenderWidget.GetMaterialDynamic // (Final|Native|Public|BlueprintCallable) // @ game+0x3345010
	struct UMaterialInterface* GetMaterial(); // Function Phoenix.MapIconMeshRenderWidget.GetMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x3344ff0
	struct FString GetCurrentTextureName(); // Function Phoenix.MapIconMeshRenderWidget.GetCurrentTextureName // (Final|Native|Public|BlueprintCallable) // @ game+0x3344f10
	enum class EBeaconState GetCurrentBeaconState(); // Function Phoenix.MapIconMeshRenderWidget.GetCurrentBeaconState // (Final|Native|Public|BlueprintCallable) // @ game+0x3344ef0
	struct FLinearColor GetColorAndOpacity(); // Function Phoenix.MapIconMeshRenderWidget.GetColorAndOpacity // (Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3344ec0
	struct UMaterialInstanceDynamic* CreateMaterial(struct UMaterialInterface* pMaterial); // Function Phoenix.MapIconMeshRenderWidget.CreateMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x3344b20
	bool CONTAINS(struct UMapIconInstance* Icon); // Function Phoenix.MapIconMeshRenderWidget.CONTAINS // (Final|Native|Public|BlueprintCallable) // @ game+0x3344a80
	void ClearIcons(); // Function Phoenix.MapIconMeshRenderWidget.ClearIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x3344a60
	void ClearBeaconList(); // Function Phoenix.MapIconMeshRenderWidget.ClearBeaconList // (Final|Native|Public|BlueprintCallable) // @ game+0x3344a40
	void AddIconToList(struct UMapIconInstance* MapIconInstance); // Function Phoenix.MapIconMeshRenderWidget.AddIconToList // (Final|Native|Public|BlueprintCallable) // @ game+0x33449b0
	struct UMapIconInstance* AddIcon(struct UBeaconInfo* Beacon, struct FVector2D Position, float Scale, float flags, struct FLinearColor Color); // Function Phoenix.MapIconMeshRenderWidget.AddIcon // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33447e0
	void AddBeaconToList(struct UBeaconInfo* pBeaconInfo); // Function Phoenix.MapIconMeshRenderWidget.AddBeaconToList // (Final|Native|Public|BlueprintCallable) // @ game+0x3344750
};

// Class Phoenix.MapIconWidget
// Size: 0x288 (Inherited: 0x268)
struct UMapIconWidget : UUserWidget {
	struct UPhoenixTextBlock* IconName; // 0x268(0x08)
	struct UImage* RegionBorder; // 0x270(0x08)
	char pad_278[0x10]; // 0x278(0x10)

	void PlayFanfare_Event(); // Function Phoenix.MapIconWidget.PlayFanfare_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	float GetZoomFactor(); // Function Phoenix.MapIconWidget.GetZoomFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x3345110
	float GetPitchFactor(); // Function Phoenix.MapIconWidget.GetPitchFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x1373e60
	float GetDistanceFromGround(); // Function Phoenix.MapIconWidget.GetDistanceFromGround // (Final|Native|Public|BlueprintCallable) // @ game+0x3344f40
};

// Class Phoenix.MapLocationActor
// Size: 0x358 (Inherited: 0x258)
struct AMapLocationActor : AStaticMeshActor {
	struct FDbSingleColumnInfo MyLocationID; // 0x258(0x88)
	struct UMapCameraParameters* CameraParameters; // 0x2e0(0x08)
	bool Visited; // 0x2e8(0x01)
	bool IsTower; // 0x2e9(0x01)
	bool HasMaterialInstance; // 0x2ea(0x01)
	char pad_2EB[0x5]; // 0x2eb(0x05)
	struct FString RegionName; // 0x2f0(0x10)
	struct UArrowComponent* TargetFocusPoint; // 0x300(0x08)
	bool bIsHighlighted; // 0x308(0x01)
	bool bIsForward; // 0x309(0x01)
	char pad_30A[0x4e]; // 0x30a(0x4e)

	void OnPushBackward_Event(); // Function Phoenix.MapLocationActor.OnPushBackward_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPushBackward(); // Function Phoenix.MapLocationActor.OnPushBackward // (Final|Native|Public|BlueprintCallable) // @ game+0x33453a0
	void OnBringForward_Event(); // Function Phoenix.MapLocationActor.OnBringForward_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBringForward(); // Function Phoenix.MapLocationActor.OnBringForward // (Final|Native|Public|BlueprintCallable) // @ game+0x3345380
	void OnActivateHighlight_Event(bool Activate); // Function Phoenix.MapLocationActor.OnActivateHighlight_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivateHighlight(bool Activate); // Function Phoenix.MapLocationActor.OnActivateHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x33452f0
};

// Class Phoenix.MapMarkupComponent
// Size: 0x180 (Inherited: 0xc8)
struct UMapMarkupComponent : UActorComponent {
	bool ShowBannerWhenEntering; // 0xc8(0x01)
	enum class EMapRegionType Type; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
	struct FDbSingleColumnInfo DbId; // 0xd0(0x88)
	struct FString RegionName; // 0x158(0x10)
	char pad_168[0x18]; // 0x168(0x18)

	bool IsStairs(); // Function Phoenix.MapMarkupComponent.IsStairs // (Final|Native|Public|BlueprintCallable) // @ game+0x3345290
	bool IsRoom(); // Function Phoenix.MapMarkupComponent.IsRoom // (Final|Native|Public|BlueprintCallable) // @ game+0x3345260
	bool IsFloor(); // Function Phoenix.MapMarkupComponent.IsFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x3345230
	enum class EMapRegionType GetType(); // Function Phoenix.MapMarkupComponent.GetType // (Final|Native|Public|BlueprintCallable) // @ game+0x33450c0
};

// Class Phoenix.MapCameraParameters
// Size: 0xa0 (Inherited: 0x30)
struct UMapCameraParameters : UDataAsset {
	bool LimitRotationBasedOnPitch; // 0x30(0x01)
	bool LimitPitch; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float PitchDefault; // 0x34(0x04)
	struct FVector2D PitchLimit; // 0x38(0x08)
	float PitchSpeedMultiplier; // 0x40(0x04)
	bool LimitYaw; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
	float YawDefault; // 0x48(0x04)
	struct FVector2D YawLimit; // 0x4c(0x08)
	float YawSpeedMultiplier; // 0x54(0x04)
	bool LimitPitchBasedOnRadius; // 0x58(0x01)
	bool LimitRadius; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	float RadiusDefault; // 0x5c(0x04)
	struct FVector2D RadiusLimit; // 0x60(0x08)
	float RaduisSpeedMultiplier; // 0x68(0x04)
	float ZoomSnapInterpSpeed; // 0x6c(0x04)
	float MoveSpeed; // 0x70(0x04)
	float MoveAccelerationFactor; // 0x74(0x04)
	float MoveDecelerationFactor; // 0x78(0x04)
	float MoveMouseDragMaxSpeedFactor; // 0x7c(0x04)
	float MoveMouseDragAccelerationFrequency; // 0x80(0x04)
	float MoveMouseDragDecelerationFrequency; // 0x84(0x04)
	float MoveMouseDragDampingFactor; // 0x88(0x04)
	float MoveDecelerationFactorMouseFlick; // 0x8c(0x04)
	float GamepadCameraFollowAccelerationFrequency; // 0x90(0x04)
	float GamepadCameraFollowDecelerationFrequency; // 0x94(0x04)
	float GamepadCameraFollowDampingFactor; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.MapMovementComponent
// Size: 0x210 (Inherited: 0x168)
struct UMapMovementComponent : UFloatingPawnMovement {
	float MaxPitchRotSpeed; // 0x168(0x04)
	float MaxYawRotSpeed; // 0x16c(0x04)
	float MaxZoomSpeed; // 0x170(0x04)
	float MinCameraRadius; // 0x174(0x04)
	float MaxCameraRadius; // 0x178(0x04)
	float MinCameraPitch; // 0x17c(0x04)
	float MaxCameraPitch; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UMapCameraParameters* CurrentCameraParameters; // 0x188(0x08)
	char pad_190[0x4]; // 0x190(0x04)
	float CameraPitch; // 0x194(0x04)
	float CurrentCameraYaw; // 0x198(0x04)
	float TargetCameraYaw; // 0x19c(0x04)
	char pad_1A0[0x70]; // 0x1a0(0x70)
};

// Class Phoenix.MapObjectComponent
// Size: 0x8f0 (Inherited: 0x510)
struct UMapObjectComponent : UStaticMeshComponent {
	struct FDbSingleColumnInfo MyLocationID; // 0x510(0x88)
	struct FDbSingleColumnInfo UpLocationID; // 0x598(0x88)
	struct FDbSingleColumnInfo DownLocationID; // 0x620(0x88)
	struct FDbSingleColumnInfo LeftLocationID; // 0x6a8(0x88)
	struct FDbSingleColumnInfo RightLocationID; // 0x730(0x88)
	bool LimitCamera; // 0x7b8(0x01)
	char pad_7B9[0x3]; // 0x7b9(0x03)
	struct FVector2D RestrictedRadiusRange; // 0x7bc(0x08)
	float StartRadius; // 0x7c4(0x04)
	struct FVector2D RestrictedPitchRange; // 0x7c8(0x08)
	float StartPitch; // 0x7d0(0x04)
	struct FVector2D RestrictedYawRange; // 0x7d4(0x08)
	float StartYaw; // 0x7dc(0x04)
	struct FVector2D RestrictedElevationRange; // 0x7e0(0x08)
	float StartElevation; // 0x7e8(0x04)
	bool HasMaterialInstance; // 0x7ec(0x01)
	char pad_7ED[0x3]; // 0x7ed(0x03)
	struct FVector MyDBLocation; // 0x7f0(0x0c)
	char pad_7FC[0x4]; // 0x7fc(0x04)
	struct FString ParentComponent; // 0x800(0x10)
	struct FString ChildComponent; // 0x810(0x10)
	struct FString UpComponent; // 0x820(0x10)
	struct FString DownComponent; // 0x830(0x10)
	struct FString LeftComponent; // 0x840(0x10)
	struct FString RightComponent; // 0x850(0x10)
	float AnimationSpeed; // 0x860(0x04)
	float AnimationBounce; // 0x864(0x04)
	float AnimationBounceFalloff; // 0x868(0x04)
	float MaxAnimationScale; // 0x86c(0x04)
	float MinAnimationScale; // 0x870(0x04)
	char pad_874[0x7c]; // 0x874(0x7c)
};

// Class Phoenix.MapOverland
// Size: 0xcd0 (Inherited: 0x930)
struct UMapOverland : UMapBase {
	struct UTextureUtil* FogMaskBlitter; // 0x930(0x08)
	char pad_938[0x8]; // 0x938(0x08)
	struct UStaticMeshComponent* Tiles[0x40]; // 0x940(0x200)
	struct UOverlandMapScreen* MapWidget; // 0xb40(0x08)
	char pad_B48[0x8]; // 0xb48(0x08)
	struct TArray<struct AActor*> RegionActors; // 0xb50(0x10)
	struct AActor* MapBounds; // 0xb60(0x08)
	struct UTextureUtil* RegionMaskBlitter; // 0xb68(0x08)
	char pad_B70[0x8]; // 0xb70(0x08)
	struct TArray<struct URegionData*> NewlyDiscoveredRegions; // 0xb78(0x10)
	char pad_B88[0x28]; // 0xb88(0x28)
	struct TArray<struct APhoenixMapRegion*> RegionSplineActors; // 0xbb0(0x10)
	char pad_BC0[0x10]; // 0xbc0(0x10)
	bool bIsFastTravelListShowingRegions; // 0xbd0(0x01)
	char pad_BD1[0x3]; // 0xbd1(0x03)
	float ZoomFactorTier1; // 0xbd4(0x04)
	float ZoomFactorTier2; // 0xbd8(0x04)
	float ZoomFactorTier3; // 0xbdc(0x04)
	float ZoomFactorTier4; // 0xbe0(0x04)
	float ZoomFactorTier5; // 0xbe4(0x04)
	float RegionSplineHeight; // 0xbe8(0x04)
	struct FLinearColor MapIconDiscoveredColor; // 0xbec(0x10)
	struct FLinearColor MapIconColor; // 0xbfc(0x10)
	float DefaultIconScale; // 0xc0c(0x04)
	float CursorScale; // 0xc10(0x04)
	float CursorScaleFactor; // 0xc14(0x04)
	struct FVector DecalSize; // 0xc18(0x0c)
	char pad_C24[0xc]; // 0xc24(0x0c)
	struct FVector4 MapCursorBounds; // 0xc30(0x10)
	struct FVector4 MapCursorBoundsInitial; // 0xc40(0x10)
	struct FVector4 MapCursorBoundsHogwarts; // 0xc50(0x10)
	struct FVector4 MapCursorBoundsForest; // 0xc60(0x10)
	struct FVector4 MapCursorBoundsSwamp; // 0xc70(0x10)
	struct FVector4 MapCursorBoundsTundra; // 0xc80(0x10)
	struct FVector4 MapScreenBounds; // 0xc90(0x10)
	struct FVector4 MapScreenBoundsInitial; // 0xca0(0x10)
	struct UTexture2D* FogMaskTexture; // 0xcb0(0x08)
	struct UTexture2D* RegionMaskTexture; // 0xcb8(0x08)
	struct UTexture2D* RegionHighlightMaskTexture; // 0xcc0(0x08)
	char pad_CC8[0x4]; // 0xcc8(0x04)
	float AboveFogHeight; // 0xccc(0x04)

	void RemoveWayMarkerBP(); // Function Phoenix.MapOverland.RemoveWayMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x333d970
	struct UOverlandMapScreen* GetMapScreenWidget(); // Function Phoenix.MapOverland.GetMapScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x334d8b0
	void DoFastTravel(); // Function Phoenix.MapOverland.DoFastTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x334ca20
	void CursorCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapOverland.CursorCallback // (Final|Native|Private) // @ game+0x334c8f0
};

// Class Phoenix.MapPawn
// Size: 0x318 (Inherited: 0x2d0)
struct AMapPawn : ADefaultPawn {
	struct UCameraComponent* CameraComponent; // 0x2d0(0x08)
	char pad_2D8[0x40]; // 0x2d8(0x40)
};

// Class Phoenix.MapPlayerController
// Size: 0x5b8 (Inherited: 0x5b0)
struct AMapPlayerController : APlayerController {
	struct AUMGInputManager* UMGInputManager; // 0x5b0(0x08)
};

// Class Phoenix.PhoenixMapRegion
// Size: 0x290 (Inherited: 0x248)
struct APhoenixMapRegion : AActor {
	struct UMaterialInstanceDynamic* RegionMaterialDynamic; // 0x248(0x08)
	enum class ERegionType Region; // 0x250(0x01)
	enum class ERegionType SubRegion; // 0x251(0x01)
	char pad_252[0x2]; // 0x252(0x02)
	int32_t SubRegionIndex; // 0x254(0x04)
	bool IsSubRegion; // 0x258(0x01)
	bool IsLevelBounds; // 0x259(0x01)
	bool IsInnerLevelBounds; // 0x25a(0x01)
	bool IsSpecialCase; // 0x25b(0x01)
	enum class ESplineMeshAxis RegionFowardAxis; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FString RegionName; // 0x260(0x10)
	struct FLinearColor HighlightColor; // 0x270(0x10)
	struct FVector RegionCenterPoint; // 0x280(0x0c)
	char pad_28C[0x4]; // 0x28c(0x04)
};

// Class Phoenix.MapRegionBox
// Size: 0x2f8 (Inherited: 0x248)
struct AMapRegionBox : AActor {
	struct FDbSingleColumnInfo LocationID; // 0x248(0x88)
	struct FString WorldID; // 0x2d0(0x10)
	struct FString TypeID; // 0x2e0(0x10)
	struct UBoxComponent* Region; // 0x2f0(0x08)
};

// Class Phoenix.MapRegionInfoWidget
// Size: 0x330 (Inherited: 0x328)
struct UMapRegionInfoWidget : UPhoenixUserWidget {
	char pad_328[0x8]; // 0x328(0x08)

	void ShowBP(); // Function Phoenix.MapRegionInfoWidget.ShowBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Show(); // Function Phoenix.MapRegionInfoWidget.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x33513a0
	void SetDataBP(struct FString RegionName, struct FString EnemyLevel, int32_t MinLevel, int32_t MaxLevel, struct TArray<struct FRegionPopuplData>& RegionData); // Function Phoenix.MapRegionInfoWidget.SetDataBP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetData(struct FString& RegionName, struct FString& EnemyLevel, int32_t MinLevel, int32_t MaxLevel, struct TArray<struct FRegionPopuplData>& RegionData); // Function Phoenix.MapRegionInfoWidget.SetData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3350690
	void HideBP(); // Function Phoenix.MapRegionInfoWidget.HideBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Hide(); // Function Phoenix.MapRegionInfoWidget.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x334e030
};

// Class Phoenix.SharedMapData
// Size: 0x88 (Inherited: 0x30)
struct USharedMapData : UDataAsset {
	float PathDirectionShortDotsTimerMax; // 0x30(0x04)
	int32_t PathDirectionMediumDotsThreshold; // 0x34(0x04)
	float PathDirectionMediumDotsTimerMax; // 0x38(0x04)
	int32_t PathDirectionLongDotsThreshold; // 0x3c(0x04)
	float PathDirectionLongDotsTimerMax; // 0x40(0x04)
	float PathDirectionTimerMax; // 0x44(0x04)
	int32_t DirectionIndicatorLength; // 0x48(0x04)
	float OverlandPathPointSpacingModifier; // 0x4c(0x04)
	float HogwartsPathPointSpacingModifier; // 0x50(0x04)
	float HogwartsZoomedPathPointSpacingModifier; // 0x54(0x04)
	float HogsmeadePathPointSpacingModifier; // 0x58(0x04)
	float IconScale; // 0x5c(0x04)
	float MinimumTimeBeforeRestart; // 0x60(0x04)
	struct FLinearColor DirectionColor; // 0x64(0x10)
	struct FLinearColor TrackedColor; // 0x74(0x10)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.MapSubSystem
// Size: 0x4eb8 (Inherited: 0x30)
struct UMapSubSystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct FVector> CurrentMapPathMission; // 0x38(0x10)
	struct TArray<struct FVector> CurrentMapPathWaymarker; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)
	struct USplineComponent* PathSplineComponent[0x2]; // 0x60(0x10)
	struct APhoenixPathActor* PathActor[0x2]; // 0x70(0x10)
	char pad_80[0x58]; // 0x80(0x58)
	struct UCleanNameToDisplayName* CleanNameToDisplayName; // 0xd8(0x08)
	char pad_E0[0x40]; // 0xe0(0x40)
	struct TArray<struct UMapIconInstance*> MapIconInstancePool; // 0x120(0x10)
	char pad_130[0x40b4]; // 0x130(0x40b4)
	struct FMapOptions MapOptions; // 0x41e4(0x10)
	char pad_41F4[0x4]; // 0x41f4(0x04)
	struct TArray<struct AActor*> InWorldDirectionArrowPool; // 0x41f8(0x10)
	struct UMaterialInstanceDynamic* InWorldArrowMaterial; // 0x4208(0x08)
	char pad_4210[0x8]; // 0x4210(0x08)
	struct UMapIconList* PathIconList; // 0x4218(0x08)
	struct UMapIconList* RegionSplineDotList; // 0x4220(0x08)
	struct FMapIconListContainer MapIconList[0x2]; // 0x4228(0x20)
	struct TArray<struct UMapIconList*> MapIconListArray; // 0x4248(0x10)
	char pad_4258[0x8]; // 0x4258(0x08)
	struct UTexture2D* RegionMaskTempTexture; // 0x4260(0x08)
	char pad_4268[0x98]; // 0x4268(0x98)
	struct UObject* IconRenderWidgetClass; // 0x4300(0x08)
	struct UStaticMesh* MapPlayerMarker; // 0x4308(0x08)
	struct UObject* InGameDirectionArrowClass; // 0x4310(0x08)
	struct AActor* InGameDirectionArrow; // 0x4318(0x08)
	struct UMaterialInterface* IconRenderWidgetSimpleMaterial; // 0x4320(0x08)
	struct UMaterialInterface* IconRenderWidgetPathMaterial; // 0x4328(0x08)
	struct TMap<struct FString, struct UTexture2D*> MapIconTextureCache; // 0x4330(0x50)
	struct UTextureUtil* RegionMaskHighlightBlitter; // 0x4380(0x08)
	struct UTexture2D* RegionMaskHighlightTexture; // 0x4388(0x08)
	struct TMap<enum class ERegionType, struct UTexture2D*> RegionTextureToRegionMap; // 0x4390(0x50)
	struct TMap<enum class ERegionType, int32_t> RegionTypeToRegionPixelMap; // 0x43e0(0x50)
	struct TMap<struct FString, struct UTexture2D*> RegionTextureToRegionNameMap; // 0x4430(0x50)
	char pad_4480[0x108]; // 0x4480(0x108)
	struct UWorldSupportWorld* SplineWorld; // 0x4588(0x08)
	char pad_4590[0x80]; // 0x4590(0x80)
	struct UDebugTextPanel* DebugTextPanel; // 0x4610(0x08)
	char pad_4618[0x10]; // 0x4618(0x10)
	struct TMap<enum class EMapLocTypes, struct FMapLocDataItem> IconLocMap; // 0x4628(0x50)
	struct UDataTable* IconColorsTable; // 0x4678(0x08)
	struct UDataTable* MiniMapIconOutlinesTable; // 0x4680(0x08)
	struct UDataTable* IconAnimationTable; // 0x4688(0x08)
	struct UDataTable* MiniMapIconBackgroundLayersTable; // 0x4690(0x08)
	struct UDataTable* MapFXTables; // 0x4698(0x08)
	struct UDataTable* MapLocTable; // 0x46a0(0x08)
	struct UDataTable* MapDungeonSubdivisionTable; // 0x46a8(0x08)
	struct UDataTable* IconTierTable; // 0x46b0(0x08)
	struct UDataTable* IconCacheTable; // 0x46b8(0x08)
	struct UDataTable* IconTierTableHogsmeade; // 0x46c0(0x08)
	struct UDataTable* IconTierTableHogwarts; // 0x46c8(0x08)
	struct UDataTable* IconStylesTable; // 0x46d0(0x08)
	struct UDataTable* RegionSplineNamesTable; // 0x46d8(0x08)
	char pad_46E0[0x8]; // 0x46e0(0x08)
	struct UObject* RegionSplineClass; // 0x46e8(0x08)
	struct UObject* IntrusionFullScreenFX; // 0x46f0(0x08)
	struct TMap<enum class ERegionType, struct FString> RegionSplineLocNameMap; // 0x46f8(0x50)
	struct TMap<enum class ERegionType, struct FMapRegionEnemyLevel> RegionSplineEnemyLevelMap; // 0x4748(0x50)
	struct TMap<struct FString, struct UBeaconInfo*> DiscoverableBeacons; // 0x4798(0x50)
	char pad_47E8[0x120]; // 0x47e8(0x120)
	struct TArray<struct UMapBase*> MapScreens; // 0x4908(0x10)
	struct TArray<struct UWorldSupportWorld*> MapWorlds; // 0x4918(0x10)
	struct UMapIcon* LastPathToHighlight; // 0x4928(0x08)
	char pad_4930[0x18]; // 0x4930(0x18)
	struct UMapBase* ActiveMap; // 0x4948(0x08)
	struct UMapBase* LastActiveMap; // 0x4950(0x08)
	char pad_4958[0x10]; // 0x4958(0x10)
	struct TArray<int32_t> NewlyDiscoveredBeacons; // 0x4968(0x10)
	struct TArray<struct FString> NewlyDiscoveredFastTravelLocations; // 0x4978(0x10)
	struct TArray<struct FString> PreviouslySeenFastTravelLocations; // 0x4988(0x10)
	char pad_4998[0x28]; // 0x4998(0x28)
	struct TArray<struct UMapIcon*> MapIcons; // 0x49c0(0x10)
	struct AMapPawn* MapPawn; // 0x49d0(0x08)
	char pad_49D8[0x8]; // 0x49d8(0x08)
	struct UMapMovementComponent* MovementComponent; // 0x49e0(0x08)
	struct AActor* PreviousViewTarget; // 0x49e8(0x08)
	char pad_49F0[0x28]; // 0x49f0(0x28)
	struct FMapDungeonSaveDataBlob DungeonFOWDataList; // 0x4a18(0x10)
	char pad_4A28[0x30]; // 0x4a28(0x30)
	struct UPackage* MapNavMeshAssetPackage; // 0x4a58(0x08)
	struct UMapNavData* MapNavMeshData; // 0x4a60(0x08)
	char pad_4A68[0x30]; // 0x4a68(0x30)
	struct UMapFXManager* FXManager; // 0x4a98(0x08)
	char pad_4AA0[0xb0]; // 0x4aa0(0xb0)
	struct TArray<struct UBeaconInfo*> OverlandFastTravelLocationList; // 0x4b50(0x10)
	struct TArray<struct UBeaconInfo*> HogwartsFastTravelLocationList; // 0x4b60(0x10)
	struct TArray<struct UBeaconInfo*> HogsmeadeFastTravelLocationList; // 0x4b70(0x10)
	struct TArray<struct UBeaconInfo*> OverlandSphinxPuzzleLocationList; // 0x4b80(0x10)
	struct TArray<struct UBeaconInfo*> OverlandTreasureVaultLocationList; // 0x4b90(0x10)
	struct TArray<struct UBeaconInfo*> OverlandChestLocationList; // 0x4ba0(0x10)
	struct TArray<struct UBeaconInfo*> DungeonChestLocationList; // 0x4bb0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandAstronomyLocationList; // 0x4bc0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandDemiguiseLocationList; // 0x4bd0(0x10)
	struct TArray<struct UBeaconInfo*> HogwartsDemiguiseLocationList; // 0x4be0(0x10)
	struct TArray<struct UBeaconInfo*> HogsmeadeDemiguiseLocationList; // 0x4bf0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandAncientMagicLocationList; // 0x4c00(0x10)
	struct TArray<struct UBeaconInfo*> OverlandHamletLocationList; // 0x4c10(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBanditCampLocationList; // 0x4c20(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBeastDenLocationList; // 0x4c30(0x10)
	struct TArray<struct UBeaconInfo*> OverlandEnemyDenLocationList; // 0x4c40(0x10)
	struct TArray<struct UBeaconInfo*> OverlandForagablesLocationList; // 0x4c50(0x10)
	struct TArray<struct UBeaconInfo*> OverlandPlantsLocationList; // 0x4c60(0x10)
	struct TArray<struct UBeaconInfo*> OverlandDungeonsLocationList; // 0x4c70(0x10)
	struct TArray<struct UBeaconInfo*> OverlandTentsLocationList; // 0x4c80(0x10)
	struct TArray<struct UBeaconInfo*> OverlandNamedEnemyLocationList; // 0x4c90(0x10)
	struct TArray<struct UBeaconInfo*> OverlandKnowledgeEnemyLocationList; // 0x4ca0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBothyLocationList; // 0x4cb0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandCombatChallengesLocationList; // 0x4cc0(0x10)
	struct TArray<struct UBeaconInfo*> HogsmeadeLocationList; // 0x4cd0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBroomPlatformLocationList; // 0x4ce0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBroomRaceLocationList; // 0x4cf0(0x10)
	struct TArray<struct UBeaconInfo*> OverlandBroomBalloonLocationList; // 0x4d00(0x10)
	struct TArray<struct UBeaconInfo*> OverlandRuinLocationList; // 0x4d10(0x10)
	struct TArray<struct UBeaconInfo*> VendorsLocationList; // 0x4d20(0x10)
	struct TArray<struct UBeaconInfo*> KnowledgeInvestigatablesLocationList; // 0x4d30(0x10)
	char pad_4D40[0x40]; // 0x4d40(0x40)
	struct TMap<int32_t, struct USplineComponent*> IconAnimationSplines; // 0x4d80(0x50)
	char pad_4DD0[0x40]; // 0x4dd0(0x40)
	struct UTexture2D* DummyTexture; // 0x4e10(0x08)
	char pad_4E18[0x20]; // 0x4e18(0x20)
	struct UUIAccessibilityManager* AccessibilityManager; // 0x4e38(0x08)
	char pad_4E40[0x8]; // 0x4e40(0x08)
	struct UTexture2D* OverlandMapTexture; // 0x4e48(0x08)
	char pad_4E50[0x50]; // 0x4e50(0x50)
	struct USharedMapData* SharedMapData; // 0x4ea0(0x08)
	struct TArray<struct UObject*> BPClasses; // 0x4ea8(0x10)

	void UpdatePlayerRegionAsync(); // Function Phoenix.MapSubSystem.UpdatePlayerRegionAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x3351780
	void UpdateDungeonFogMaskAsync(struct FVector PlayerPosition); // Function Phoenix.MapSubSystem.UpdateDungeonFogMaskAsync // (Final|Native|Private|HasDefaults|BlueprintCallable) // @ game+0x31c1690
	bool UnloadLevels(); // Function Phoenix.MapSubSystem.UnloadLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x3351730
	bool UnloadFieldGuideLevels(); // Function Phoenix.MapSubSystem.UnloadFieldGuideLevels // (Final|Exec|Native|Public) // @ game+0xe899c0
	void UIReleaseTransitionLock(); // Function Phoenix.MapSubSystem.UIReleaseTransitionLock // (Final|Exec|Native|Public) // @ game+0x1074730
	void TriggerMapScreenFadeOut(); // Function Phoenix.MapSubSystem.TriggerMapScreenFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x3351710
	void TriggerMapScreenFadeIn(); // Function Phoenix.MapSubSystem.TriggerMapScreenFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x33516f0
	void TriggerAccessibility(enum class EAccessibilityAudioCueEventType Type, struct AActor* Actor); // Function Phoenix.MapSubSystem.TriggerAccessibility // (Final|Native|Public|BlueprintCallable) // @ game+0x3351620
	void TeleportToListIndex(int32_t Index); // Function Phoenix.MapSubSystem.TeleportToListIndex // (Final|Exec|Native|Public) // @ game+0x321dc10
	void SubdivideAndCreateOctreeAsync(); // Function Phoenix.MapSubSystem.SubdivideAndCreateOctreeAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x3351600
	bool StopMap(bool pCleanupActors, enum class EMapPostFadeState PostFadeState); // Function Phoenix.MapSubSystem.StopMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3351520
	void StartTutorialOpenMap(struct FName TutorialName); // Function Phoenix.MapSubSystem.StartTutorialOpenMap // (Final|Exec|Native|Public) // @ game+0x32a3030
	void StartMapExitTransition(float InDuration); // Function Phoenix.MapSubSystem.StartMapExitTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x33514a0
	bool StartMap(); // Function Phoenix.MapSubSystem.StartMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3351470
	void ShowMap(bool ShowMap); // Function Phoenix.MapSubSystem.ShowMap // (Final|Native|Public|BlueprintCallable) // @ game+0x33513e0
	void ShowDebugPanel(); // Function Phoenix.MapSubSystem.ShowDebugPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void SetToMapFromIndexOrTab(bool InToMapFromIndexOrTab); // Function Phoenix.MapSubSystem.SetToMapFromIndexOrTab // (Final|Native|Public|BlueprintCallable) // @ game+0x3351290
	void SetShouldRevealMinimapOnStart(bool RevealMinimapOnStart); // Function Phoenix.MapSubSystem.SetShouldRevealMinimapOnStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3351200
	void SetOverrideFIG01FTCheck(bool pOverrideCheck); // Function Phoenix.MapSubSystem.SetOverrideFIG01FTCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x3351170
	void SetMiniMapManager(struct UMinimapManager* pMiniMapManager); // Function Phoenix.MapSubSystem.SetMiniMapManager // (Final|Native|Public|BlueprintCallable) // @ game+0x3351060
	void SetMapTransitionStyle(enum class EMapTransitionStyle InStyle); // Function Phoenix.MapSubSystem.SetMapTransitionStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x3350f60
	void SetLastActiveMap(); // Function Phoenix.MapSubSystem.SetLastActiveMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3350e60
	void SetIsInVault(bool InIsInVault); // Function Phoenix.MapSubSystem.SetIsInVault // (Final|Native|Public|BlueprintCallable) // @ game+0x3350dd0
	void SetIsFromOverland(bool IsFromOverland); // Function Phoenix.MapSubSystem.SetIsFromOverland // (Final|Native|Public|BlueprintCallable) // @ game+0x3350d40
	void SetIsFromDungeon(bool IsFromDungeon); // Function Phoenix.MapSubSystem.SetIsFromDungeon // (Final|Native|Public|BlueprintCallable) // @ game+0x3350cb0
	void SetInPauseMenu(bool InPauseMenuFlag); // Function Phoenix.MapSubSystem.SetInPauseMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x3350b90
	void SetIfFromFieldGuide(bool pIsFromFieldGuide); // Function Phoenix.MapSubSystem.SetIfFromFieldGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x3350b00
	void SetHasIntroPlayed(bool HasPlayed); // Function Phoenix.MapSubSystem.SetHasIntroPlayed // (Final|Native|Public|BlueprintCallable) // @ game+0x3350a50
	void SetFieldGuideWorldToNull(); // Function Phoenix.MapSubSystem.SetFieldGuideWorldToNull // (Final|Exec|Native|Public) // @ game+0x1074730
	void SetFelixFelicisPotionRadius(float PotionRadius); // Function Phoenix.MapSubSystem.SetFelixFelicisPotionRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x33509d0
	void SetFadeToGame(bool pSetFadeToGame); // Function Phoenix.MapSubSystem.SetFadeToGame // (Final|Native|Public|BlueprintCallable) // @ game+0x3350940
	void SetDeveloperMenuUsed(bool pUsedDeveloperMenu); // Function Phoenix.MapSubSystem.SetDeveloperMenuUsed // (Final|Native|Public|BlueprintCallable) // @ game+0x33508b0
	void SetCoverDisplayed(bool IsDisplayed); // Function Phoenix.MapSubSystem.SetCoverDisplayed // (Final|Native|Public|BlueprintCallable) // @ game+0x3350570
	bool SetActiveMapByType(enum class EMapTypes& MapType); // Function Phoenix.MapSubSystem.SetActiveMapByType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33504d0
	bool SetActiveMap(struct FName MapName); // Function Phoenix.MapSubSystem.SetActiveMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3350430
	void RestoreMap(); // Function Phoenix.MapSubSystem.RestoreMap // (Final|Native|Public|BlueprintCallable) // @ game+0x33502d0
	void RemovePathToLocation(); // Function Phoenix.MapSubSystem.RemovePathToLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x33502b0
	void RemoveAreaBeaconByHandle(int32_t Handle); // Function Phoenix.MapSubSystem.RemoveAreaBeaconByHandle // (Final|Exec|Native|Public) // @ game+0x321dc10
	void RecenterMapPawn(); // Function Phoenix.MapSubSystem.RecenterMapPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x3350270
	void OutputWidgetLog(); // Function Phoenix.MapSubSystem.OutputWidgetLog // (Final|Exec|Native|Public) // @ game+0x3350250
	void OutputCanvasPanelLog(); // Function Phoenix.MapSubSystem.OutputCanvasPanelLog // (Final|Exec|Native|Public) // @ game+0x1074730
	void OnStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.MapSubSystem.OnStatChanged // (Final|Native|Private) // @ game+0x3350140
	void OnStartPathing(struct UObject* i_caller, uint32_t BeaconHandle); // Function Phoenix.MapSubSystem.OnStartPathing // (Final|Native|Public) // @ game+0x3350070
	void OnStartNewDay(); // Function Phoenix.MapSubSystem.OnStartNewDay // (Final|Native|Private) // @ game+0x3350050
	void MiniResetPlayerLocation(); // Function Phoenix.MapSubSystem.MiniResetPlayerLocation // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapToggleIntrusionAlert(); // Function Phoenix.MapSubSystem.MiniMapToggleIntrusionAlert // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapToggleIconsNearMe(); // Function Phoenix.MapSubSystem.MiniMapToggleIconsNearMe // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapToggleIcons(); // Function Phoenix.MapSubSystem.MiniMapToggleIcons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapShowIconStats(); // Function Phoenix.MapSubSystem.MiniMapShowIconStats // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapSetTutorialIntroLevel(struct FName IntroLevel); // Function Phoenix.MapSubSystem.MiniMapSetTutorialIntroLevel // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MiniMapSetSize(float Size, float ZoomTime); // Function Phoenix.MapSubSystem.MiniMapSetSize // (Final|Exec|Native|Public) // @ game+0x334fef0
	void MiniMapSetScale(float Size); // Function Phoenix.MapSubSystem.MiniMapSetScale // (Final|Exec|Native|Public) // @ game+0x334fe70
	void MiniMapSetPlayerToHogwarts(); // Function Phoenix.MapSubSystem.MiniMapSetPlayerToHogwarts // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapSetPlayerToHogsmeade(); // Function Phoenix.MapSubSystem.MiniMapSetPlayerToHogsmeade // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapSetPlayerLocationToCursor(); // Function Phoenix.MapSubSystem.MiniMapSetPlayerLocationToCursor // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapSetPlayerLocation(float X, float Y, float Z); // Function Phoenix.MapSubSystem.MiniMapSetPlayerLocation // (Final|Exec|Native|Public) // @ game+0x334fd50
	void MiniMapSetPlayerActorPosition(float X, float Y, float Z); // Function Phoenix.MapSubSystem.MiniMapSetPlayerActorPosition // (Final|Exec|Native|Public) // @ game+0x334fd50
	void MiniMapSetPerceptionOverlay(); // Function Phoenix.MapSubSystem.MiniMapSetPerceptionOverlay // (Final|Exec|Native|Public) // @ game+0x1074730
	void MiniMapSetOptions(int32_t Size, float Opacity, int32_t PathlineOn); // Function Phoenix.MapSubSystem.MiniMapSetOptions // (Final|Exec|Native|Public) // @ game+0x334fc40
	void MiniMapSetNoFlyTexture(int32_t Value); // Function Phoenix.MapSubSystem.MiniMapSetNoFlyTexture // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MiniMapSetMap(struct FName MapName); // Function Phoenix.MapSubSystem.MiniMapSetMap // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MiniMapSetLevelName(struct FString LevelName); // Function Phoenix.MapSubSystem.MiniMapSetLevelName // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void MiniMapSetLevel(int32_t LevelIndex); // Function Phoenix.MapSubSystem.MiniMapSetLevel // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MiniMapSetIconSize(float Size); // Function Phoenix.MapSubSystem.MiniMapSetIconSize // (Final|Exec|Native|Public) // @ game+0x3341330
	void MiniMapSetIconScale(float IconDistanceScale); // Function Phoenix.MapSubSystem.MiniMapSetIconScale // (Final|Exec|Native|Public) // @ game+0x3341330
	void MiniMapSetDungeonRadius(float Value); // Function Phoenix.MapSubSystem.MiniMapSetDungeonRadius // (Final|Exec|Native|Public) // @ game+0x3341330
	void MiniMapReveal(int32_t Reveal); // Function Phoenix.MapSubSystem.MiniMapReveal // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MiniMapQuickFade(int32_t Reveal); // Function Phoenix.MapSubSystem.MiniMapQuickFade // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MiniMapDungeonSetPartialTextureUpdate(bool Enable); // Function Phoenix.MapSubSystem.MiniMapDungeonSetPartialTextureUpdate // (Final|Exec|Native|Public) // @ game+0x31e0320
	void MiniMapDungeonEnableFogOfWar(bool Enable); // Function Phoenix.MapSubSystem.MiniMapDungeonEnableFogOfWar // (Final|Exec|Native|Public) // @ game+0x31e0320
	void MiniMapDungeonDebug(float Value); // Function Phoenix.MapSubSystem.MiniMapDungeonDebug // (Final|Exec|Native|Public) // @ game+0x3341330
	void MiniMapDebugMap(struct FName MapName); // Function Phoenix.MapSubSystem.MiniMapDebugMap // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MiniMapDeactivateIntrusionArea(struct FName IntrusionVolumeActorName); // Function Phoenix.MapSubSystem.MiniMapDeactivateIntrusionArea // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MiniMapAlwaysShowFastTravelIcons(int32_t Value); // Function Phoenix.MapSubSystem.MiniMapAlwaysShowFastTravelIcons // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MiniMapActivateIntrusionArea(struct FName IntrusionVolumeActorName); // Function Phoenix.MapSubSystem.MiniMapActivateIntrusionArea // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MapWriteLog(); // Function Phoenix.MapSubSystem.MapWriteLog // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapVerifyBeacons(int32_t LocationIndex, int32_t pTeleportType, int32_t pEndIndex); // Function Phoenix.MapSubSystem.MapVerifyBeacons // (Final|Exec|Native|Public) // @ game+0x334faf0
	void MapUnlockAllRegions(); // Function Phoenix.MapSubSystem.MapUnlockAllRegions // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapUnlockAllMapIcons(int32_t Type); // Function Phoenix.MapSubSystem.MapUnlockAllMapIcons // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapUnloadOverlandLevels(); // Function Phoenix.MapSubSystem.MapUnloadOverlandLevels // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTurnOnDebugCamera(int32_t Value); // Function Phoenix.MapSubSystem.MapTurnOnDebugCamera // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapTurnOnCompletionMessages(int32_t Value); // Function Phoenix.MapSubSystem.MapTurnOnCompletionMessages // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapTurnOnCollisionSphere(int32_t Value); // Function Phoenix.MapSubSystem.MapTurnOnCollisionSphere // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapTurnOnAllMapLocations(struct FName Filter, bool pSetStateToShown); // Function Phoenix.MapSubSystem.MapTurnOnAllMapLocations // (Final|Exec|Native|Public) // @ game+0x334fa20
	void MapTurnOffMapLocationNames(); // Function Phoenix.MapSubSystem.MapTurnOffMapLocationNames // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTriggerMapScreenFadeOut(); // Function Phoenix.MapSubSystem.MapTriggerMapScreenFadeOut // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTriggerMapScreenFadeIn(); // Function Phoenix.MapSubSystem.MapTriggerMapScreenFadeIn // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapToggleRegionSplineDots(int32_t Value); // Function Phoenix.MapSubSystem.MapToggleRegionSplineDots // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapTogglePushIconsAway(); // Function Phoenix.MapSubSystem.MapTogglePushIconsAway // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTogglePathDots(); // Function Phoenix.MapSubSystem.MapTogglePathDots // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTogglePathDebug(); // Function Phoenix.MapSubSystem.MapTogglePathDebug // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapToggleMapRoads(); // Function Phoenix.MapSubSystem.MapToggleMapRoads // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapToggleMapBounds(); // Function Phoenix.MapSubSystem.MapToggleMapBounds // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapToggleIconStacking(int32_t Value); // Function Phoenix.MapSubSystem.MapToggleIconStacking // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapToggleFogDrawMode(int32_t DrawMode); // Function Phoenix.MapSubSystem.MapToggleFogDrawMode // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapToggleFogCheckForIcons(); // Function Phoenix.MapSubSystem.MapToggleFogCheckForIcons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapToggleFog(); // Function Phoenix.MapSubSystem.MapToggleFog // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTestRegionSaturation(struct FName Region); // Function Phoenix.MapSubSystem.MapTestRegionSaturation // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MapTestMissionIcons(); // Function Phoenix.MapSubSystem.MapTestMissionIcons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapTeleportToLocation(struct FString pName, int32_t pTeleportType); // Function Phoenix.MapSubSystem.MapTeleportToLocation // (Final|Exec|Native|Public) // @ game+0x31cc0f0
	void MapStopFXChain(); // Function Phoenix.MapSubSystem.MapStopFXChain // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapStopFX(); // Function Phoenix.MapSubSystem.MapStopFX // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapStopFieldGuideTest(); // Function Phoenix.MapSubSystem.MapStopFieldGuideTest // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapSpawnFXChain(struct FName FXChainName, float X, float Y, float Z, float SX, float SY, float SZ); // Function Phoenix.MapSubSystem.MapSpawnFXChain // (Final|Exec|Native|Public) // @ game+0x334f800
	void MapSpawnFX(struct FName FXName, float X, float Y, float Z, float SX, float SY, float SZ); // Function Phoenix.MapSubSystem.MapSpawnFX // (Final|Exec|Native|Public) // @ game+0x334f800
	void MapShowTierLevel(); // Function Phoenix.MapSubSystem.MapShowTierLevel // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapShowPathingDebug(); // Function Phoenix.MapSubSystem.MapShowPathingDebug // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapShowMapIconStats(); // Function Phoenix.MapSubSystem.MapShowMapIconStats // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapShowMap(); // Function Phoenix.MapSubSystem.MapShowMap // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapShowIconsWithoutRegions(int32_t Value); // Function Phoenix.MapSubSystem.MapShowIconsWithoutRegions // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapShowCursorPosition(); // Function Phoenix.MapSubSystem.MapShowCursorPosition // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapShowCollisionActor(); // Function Phoenix.MapSubSystem.MapShowCollisionActor // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapSetSpecificIcons(); // Function Phoenix.MapSubSystem.MapSetSpecificIcons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapSetPlayerToCursorPosition(); // Function Phoenix.MapSubSystem.MapSetPlayerToCursorPosition // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapSetIsFromFieldGuide(int32_t Value); // Function Phoenix.MapSubSystem.MapSetIsFromFieldGuide // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapSetIconSize(float Size); // Function Phoenix.MapSubSystem.MapSetIconSize // (Final|Exec|Native|Public) // @ game+0x334f780
	void MapSetBeaconState(enum class EBeaconType BeaconType, enum class EBeaconState BeaconState); // Function Phoenix.MapSubSystem.MapSetBeaconState // (Final|Exec|Native|Public) // @ game+0x334f6b0
	void MapSendHermesString(struct FName MessageName, struct FName Parameter); // Function Phoenix.MapSubSystem.MapSendHermesString // (Final|Exec|Native|Public) // @ game+0x334f5e0
	void MapSendHermes(struct FName MessageName); // Function Phoenix.MapSubSystem.MapSendHermes // (Final|Exec|Native|Public) // @ game+0x32a3030
	void MapRestoreIcons(); // Function Phoenix.MapSubSystem.MapRestoreIcons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapRemoveDebugPane(); // Function Phoenix.MapSubSystem.MapRemoveDebugPane // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapReloadMapTables(); // Function Phoenix.MapSubSystem.MapReloadMapTables // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapProcessFlightNav(); // Function Phoenix.MapSubSystem.MapProcessFlightNav // (Final|Exec|Native|Static|Public) // @ game+0x33264e0
	void MapOverrideMapCamera(); // Function Phoenix.MapSubSystem.MapOverrideMapCamera // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapOpenFieldGuideTest(int32_t DoFastTravel); // Function Phoenix.MapSubSystem.MapOpenFieldGuideTest // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapMoveToTier(int32_t tierValue, float Time); // Function Phoenix.MapSubSystem.MapMoveToTier // (Final|Exec|Native|Public) // @ game+0x334f510
	void MapLoadOverlandLevels(); // Function Phoenix.MapSubSystem.MapLoadOverlandLevels // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapLerpToIcon(float X, float Y, float Z, float Speed); // Function Phoenix.MapSubSystem.MapLerpToIcon // (Final|Exec|Native|Public) // @ game+0x334c790
	void MapIconTextureCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MapSubSystem.MapIconTextureCallback // (Final|Native|Private) // @ game+0x334f440
	void MapHideIcons(int32_t Value); // Function Phoenix.MapSubSystem.MapHideIcons // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapGiveMeHelp(); // Function Phoenix.MapSubSystem.MapGiveMeHelp // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapFillRegionMask(); // Function Phoenix.MapSubSystem.MapFillRegionMask // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDungeonTogglePPV(); // Function Phoenix.MapSubSystem.MapDungeonTogglePPV // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDungeonShowStats(); // Function Phoenix.MapSubSystem.MapDungeonShowStats // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDungeonShowAll(); // Function Phoenix.MapSubSystem.MapDungeonShowAll // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDumpUnmatchedBeacons(); // Function Phoenix.MapSubSystem.MapDumpUnmatchedBeacons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDumpNoRegionBeacons(); // Function Phoenix.MapSubSystem.MapDumpNoRegionBeacons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDumpDynamicBeacons(); // Function Phoenix.MapSubSystem.MapDumpDynamicBeacons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDumpDiscoverableBeacons(); // Function Phoenix.MapSubSystem.MapDumpDiscoverableBeacons // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapDoKnowledgeCard(struct FString Item); // Function Phoenix.MapSubSystem.MapDoKnowledgeCard // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void MapCreateDebugPane(); // Function Phoenix.MapSubSystem.MapCreateDebugPane // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapClearWorldStack(); // Function Phoenix.MapSubSystem.MapClearWorldStack // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapClearRegionMask(); // Function Phoenix.MapSubSystem.MapClearRegionMask // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapCancelLogs(); // Function Phoenix.MapSubSystem.MapCancelLogs // (Final|Exec|Native|Public) // @ game+0x1074730
	void MapAlwaysShowMerlin(int32_t ShowMerlin); // Function Phoenix.MapSubSystem.MapAlwaysShowMerlin // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapAlwaysShowDemiguise(int32_t ShowDemiguise); // Function Phoenix.MapSubSystem.MapAlwaysShowDemiguise // (Final|Exec|Native|Public) // @ game+0x321dc10
	void MapAlwaysDefaultToOverlandMap(int32_t Value); // Function Phoenix.MapSubSystem.MapAlwaysDefaultToOverlandMap // (Final|Exec|Native|Public) // @ game+0x321dc10
	uint32_t MapAddDynamicBeacon(enum class EBeaconType BeaconType, struct FName BeaconName, struct FName BeaconIcon, float X, float Y, float Z); // Function Phoenix.MapSubSystem.MapAddDynamicBeacon // (Final|Exec|Native|Public) // @ game+0x334f260
	uint32_t MapAddAreaBeaconAtPlayerLocation(float Radius); // Function Phoenix.MapSubSystem.MapAddAreaBeaconAtPlayerLocation // (Final|Exec|Native|Public) // @ game+0x334f1d0
	void Locate(struct FString ItemToLocate, struct FString Category, struct FString OnMap); // Function Phoenix.MapSubSystem.Locate // (Final|Native|Public|BlueprintCallable) // @ game+0x334ef30
	bool LoadLevels(); // Function Phoenix.MapSubSystem.LoadLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x334ef00
	void LoadGameLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.LoadGameLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc3a0
	bool LoadFieldGuideLevels(); // Function Phoenix.MapSubSystem.LoadFieldGuideLevels // (Final|Exec|Native|Public) // @ game+0x19e8aa0
	bool IsTutorialLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsTutorialLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334edc0
	bool IsTutorial(); // Function Phoenix.MapSubSystem.IsTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x334eda0
	bool IsTentLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsTentLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334eca0
	bool IsTent(); // Function Phoenix.MapSubSystem.IsTent // (Final|Native|Public|BlueprintCallable) // @ game+0x334ec80
	bool IsSanctuaryLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsSanctuaryLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334eb80
	bool IsSanctuary(); // Function Phoenix.MapSubSystem.IsSanctuary // (Final|Native|Public|BlueprintCallable) // @ game+0x334eb60
	bool IsPathDisplayEnabled(); // Function Phoenix.MapSubSystem.IsPathDisplayEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x334eb30
	bool IsOverlandLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsOverlandLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334ea30
	bool IsOverland(); // Function Phoenix.MapSubSystem.IsOverland // (Final|Native|Public|BlueprintCallable) // @ game+0x334ea10
	bool IsMapReadyCalled(); // Function Phoenix.MapSubSystem.IsMapReadyCalled // (Final|Native|Public|BlueprintCallable) // @ game+0x334e950
	bool IsMapReady(); // Function Phoenix.MapSubSystem.IsMapReady // (Final|Native|Public|BlueprintCallable) // @ game+0x334e920
	bool IsMapActive(); // Function Phoenix.MapSubSystem.IsMapActive // (Final|Native|Public|BlueprintCallable) // @ game+0x334e8f0
	bool IsHoloLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsHoloLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334e7f0
	bool IsHolo(); // Function Phoenix.MapSubSystem.IsHolo // (Final|Native|Public|BlueprintCallable) // @ game+0x334e7d0
	bool IsHogwartsLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsHogwartsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334e6d0
	bool IsHogwarts(); // Function Phoenix.MapSubSystem.IsHogwarts // (Final|Native|Public|BlueprintCallable) // @ game+0x334e6b0
	bool IsHogsmeadeLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsHogsmeadeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334e5b0
	bool IsHogsmeade(); // Function Phoenix.MapSubSystem.IsHogsmeade // (Final|Native|Public|BlueprintCallable) // @ game+0x334e590
	bool IsFTPointValidPreFIG01b(struct FString FTLocationID); // Function Phoenix.MapSubSystem.IsFTPointValidPreFIG01b // (Final|Native|Public|BlueprintCallable) // @ game+0x334e420
	bool IsFromOverland(); // Function Phoenix.MapSubSystem.IsFromOverland // (Final|Native|Public|BlueprintCallable) // @ game+0x334e570
	bool IsFromDungeon(); // Function Phoenix.MapSubSystem.IsFromDungeon // (Final|Native|Public|BlueprintCallable) // @ game+0x334e550
	bool IsExclusiveMissionActive(); // Function Phoenix.MapSubSystem.IsExclusiveMissionActive // (Final|Native|Public|BlueprintCallable) // @ game+0x334e3f0
	bool IsDungeonMap(); // Function Phoenix.MapSubSystem.IsDungeonMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334e3c0
	bool IsDungeonLevel(struct FString LevelName); // Function Phoenix.MapSubSystem.IsDungeonLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x334e2c0
	bool IsDungeon(); // Function Phoenix.MapSubSystem.IsDungeon // (Final|Native|Public|BlueprintCallable) // @ game+0x334e2a0
	bool IsBeaconNameInMapDB(struct FString BeaconName); // Function Phoenix.MapSubSystem.IsBeaconNameInMapDB // (Final|Native|Public|BlueprintCallable) // @ game+0x334e1a0
	bool IsBeaconComplete(struct FString BeaconName); // Function Phoenix.MapSubSystem.IsBeaconComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x334e0a0
	bool HasDungeonBeenEntered(struct FString DungeonName); // Function Phoenix.MapSubSystem.HasDungeonBeenEntered // (Final|Native|Public|BlueprintCallable) // @ game+0x334df30
	bool GetUsingGamePad(); // Function Phoenix.MapSubSystem.GetUsingGamePad // (Final|Native|Public|BlueprintCallable) // @ game+0x334dea0
	struct FLinearColor GetTrackedWaypointColor(); // Function Phoenix.MapSubSystem.GetTrackedWaypointColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334de40
	struct FLinearColor GetTrackedMissionColor(); // Function Phoenix.MapSubSystem.GetTrackedMissionColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334de00
	struct FLinearColor GetTrackedColor(); // Function Phoenix.MapSubSystem.GetTrackedColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334ddc0
	bool GetShouldRevealMinimapOnStart(); // Function Phoenix.MapSubSystem.GetShouldRevealMinimapOnStart // (Final|Native|Public|BlueprintCallable) // @ game+0x334dd70
	struct FMapWithinRegion GetRegionForLocation(struct FVector Location, struct UMapBase* MapBase); // Function Phoenix.MapSubSystem.GetRegionForLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334dc50
	void GetPlayerLocation(); // Function Phoenix.MapSubSystem.GetPlayerLocation // (Final|Exec|Native|Public) // @ game+0x1074730
	struct UMapOverland* GetOverlandMap(); // Function Phoenix.MapSubSystem.GetOverlandMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334db90
	struct TArray<int32_t> GetNewlyDiscoveredBeacons(); // Function Phoenix.MapSubSystem.GetNewlyDiscoveredBeacons // (Final|Native|Public|BlueprintCallable) // @ game+0x334dad0
	struct UMinimapManager* GetMiniMapManager(); // Function Phoenix.MapSubSystem.GetMiniMapManager // (Final|Native|Public|BlueprintCallable) // @ game+0x334d990
	struct UWorld* GetMapWorld(); // Function Phoenix.MapSubSystem.GetMapWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x334d960
	enum class EMapTransitionStyle GetMapTransitionStyle(); // Function Phoenix.MapSubSystem.GetMapTransitionStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x334d920
	struct UMapScreenBase* GetMapScreenWidget(); // Function Phoenix.MapSubSystem.GetMapScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x334d8d0
	struct AMapPawn* GetMapPawn(); // Function Phoenix.MapSubSystem.GetMapPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x334d890
	struct UMapBase* GetMapByType(enum class EMapTypes MapType); // Function Phoenix.MapSubSystem.GetMapByType // (Final|Native|Private|BlueprintCallable) // @ game+0x334d800
	struct TArray<struct UBeaconInfo*> GetMapBeaconsNearLocation(struct FVector Location, float Radius); // Function Phoenix.MapSubSystem.GetMapBeaconsNearLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334d6d0
	struct UBeaconInfo* GetMapBeaconFromName(struct FString BeaconName); // Function Phoenix.MapSubSystem.GetMapBeaconFromName // (Final|Native|Public|BlueprintCallable) // @ game+0x334d5d0
	bool GetMapActivated(); // Function Phoenix.MapSubSystem.GetMapActivated // (Final|Native|Public|BlueprintCallable) // @ game+0x334d590
	struct FLinearColor GetMainLineColor(); // Function Phoenix.MapSubSystem.GetMainLineColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334d550
	struct FString GetLocatedItem(); // Function Phoenix.MapSubSystem.GetLocatedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x334d4d0
	struct UMapBase* GetLastActiveMap(); // Function Phoenix.MapSubSystem.GetLastActiveMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334d4a0
	bool GetIsInVault(); // Function Phoenix.MapSubSystem.GetIsInVault // (Final|Native|Public|BlueprintCallable) // @ game+0x334d460
	bool GetIsFromFieldGuide(); // Function Phoenix.MapSubSystem.GetIsFromFieldGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x334d440
	bool GetInPauseMenu(); // Function Phoenix.MapSubSystem.GetInPauseMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x334d3c0
	struct FLinearColor GetIconColorByState(enum class EBeaconState BeaconState); // Function Phoenix.MapSubSystem.GetIconColorByState // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334d320
	struct UMapHogwarts* GetHogwartsMap(); // Function Phoenix.MapSubSystem.GetHogwartsMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334d2f0
	struct UMapHogsmeade* GetHogsmeadeMap(); // Function Phoenix.MapSubSystem.GetHogsmeadeMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334d2c0
	bool GetHasIntroPlayed(); // Function Phoenix.MapSubSystem.GetHasIntroPlayed // (Final|Native|Public|BlueprintCallable) // @ game+0x334d2a0
	struct UWorld* GetGameWorld(); // Function Phoenix.MapSubSystem.GetGameWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x334d260
	struct APlayerController* GetGamePlayerController(); // Function Phoenix.MapSubSystem.GetGamePlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x334d230
	struct APawn* GetGamePawn(); // Function Phoenix.MapSubSystem.GetGamePawn // (Final|Native|Public|BlueprintCallable) // @ game+0x334d1f0
	struct UMapFXManager* GetFXManager(); // Function Phoenix.MapSubSystem.GetFXManager // (Final|Native|Public|BlueprintCallable) // @ game+0x334d170
	struct FName GetFilter(); // Function Phoenix.MapSubSystem.GetFilter // (Final|Native|Public|BlueprintCallable) // @ game+0x334d1d0
	bool GetFelixFelicisPotionActive(); // Function Phoenix.MapSubSystem.GetFelixFelicisPotionActive // (Final|Native|Public|BlueprintCallable) // @ game+0x334d1b0
	bool GetFadeToGame(); // Function Phoenix.MapSubSystem.GetFadeToGame // (Final|Native|Public|BlueprintCallable) // @ game+0x334d190
	struct UMapDungeon* GetDungeonMap(); // Function Phoenix.MapSubSystem.GetDungeonMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334d140
	bool GetDeveloperMenuUsed(); // Function Phoenix.MapSubSystem.GetDeveloperMenuUsed // (Final|Native|Public|BlueprintCallable) // @ game+0x334d120
	enum class ECursorControlTypes GetCursorControl(); // Function Phoenix.MapSubSystem.GetCursorControl // (Final|Native|Public|BlueprintCallable) // @ game+0x334d100
	struct FMapWithinRegion GetCurrentPlayerRegionInfo(); // Function Phoenix.MapSubSystem.GetCurrentPlayerRegionInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x334d020
	bool GetCoverIsDisplayed(); // Function Phoenix.MapSubSystem.GetCoverIsDisplayed // (Final|Native|Public|BlueprintCallable) // @ game+0x334d000
	struct FLinearColor GetColorFromState(struct UBeaconInfo* BeaconInfo); // Function Phoenix.MapSubSystem.GetColorFromState // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334cf60
	struct TArray<struct UBeaconInfo*> GetChestsInVault(struct FString VaultName); // Function Phoenix.MapSubSystem.GetChestsInVault // (Final|Native|Public|BlueprintCallable) // @ game+0x334ce20
	enum class EBeaconState GetBeaconState(struct FString BeaconName); // Function Phoenix.MapSubSystem.GetBeaconState // (Final|Native|Public|BlueprintCallable) // @ game+0x334cd20
	struct FLinearColor GetAuthorityFigureColor(); // Function Phoenix.MapSubSystem.GetAuthorityFigureColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x334cce0
	enum class EMapTypes GetActiveMapType(); // Function Phoenix.MapSubSystem.GetActiveMapType // (Final|Native|Public|BlueprintCallable) // @ game+0x334ccb0
	struct FName GetActiveMapName(); // Function Phoenix.MapSubSystem.GetActiveMapName // (Final|Native|Public|BlueprintCallable) // @ game+0x334cc70
	int32_t GetActiveMapIndex(); // Function Phoenix.MapSubSystem.GetActiveMapIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x334cc50
	struct UMapBase* GetActiveMap(); // Function Phoenix.MapSubSystem.GetActiveMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334cc20
	struct UUIAccessibilityManager* GetAccessibilityManager(); // Function Phoenix.MapSubSystem.GetAccessibilityManager // (Final|Native|Public|BlueprintCallable) // @ game+0x334cc00
	int32_t FindMapByType(enum class EMapTypes MapType); // Function Phoenix.MapSubSystem.FindMapByType // (Final|Native|Private|BlueprintCallable) // @ game+0x334cb70
	int32_t FindMap(struct FName MapName); // Function Phoenix.MapSubSystem.FindMap // (Final|Native|Private|BlueprintCallable) // @ game+0x334cad0
	void EnablePathDisplay(bool Enable); // Function Phoenix.MapSubSystem.EnablePathDisplay // (Final|Native|Public|BlueprintCallable) // @ game+0x334ca40
	struct FName DetermineMap(); // Function Phoenix.MapSubSystem.DetermineMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334c9e0
	void DeactivateMap(); // Function Phoenix.MapSubSystem.DeactivateMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334c9c0
	void CreateAreaBeacon(float X, float Y, float Z, float Radius); // Function Phoenix.MapSubSystem.CreateAreaBeacon // (Final|Exec|Native|Public) // @ game+0x334c790
	void CompleteBeaconOfType(enum class EBeaconType BeaconType); // Function Phoenix.MapSubSystem.CompleteBeaconOfType // (Final|Exec|Native|Public) // @ game+0x334c710
	bool ClearActiveMap(); // Function Phoenix.MapSubSystem.ClearActiveMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334c630
	void AudioCueTrigger(int32_t DisplayType, int32_t CueType); // Function Phoenix.MapSubSystem.AudioCueTrigger // (Final|Exec|Native|Public) // @ game+0x334c560
	bool AreItemsRevealed(struct FString ItemName); // Function Phoenix.MapSubSystem.AreItemsRevealed // (Final|Native|Public|BlueprintCallable) // @ game+0x334c460
	void ActivateMapByType(enum class EMapTypes MapType, bool fromOverland, bool fromDungeon); // Function Phoenix.MapSubSystem.ActivateMapByType // (Final|Native|Public|BlueprintCallable) // @ game+0x334c340
	void ActivateMap(); // Function Phoenix.MapSubSystem.ActivateMap // (Final|Native|Public|BlueprintCallable) // @ game+0x334c320
};

// Class Phoenix.Marker
// Size: 0x250 (Inherited: 0x248)
struct AMarker : AActor {
	struct FName UniqueName; // 0x248(0x08)

	struct FName GenerateUniqueName(struct FName InBaseName); // Function Phoenix.Marker.GenerateUniqueName // (Final|Native|Public|BlueprintCallable) // @ game+0x3355930
};

// Class Phoenix.SetParameterValue
// Size: 0x30 (Inherited: 0x28)
struct USetParameterValue : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.SetScalarParameterValue
// Size: 0x38 (Inherited: 0x30)
struct USetScalarParameterValue : USetParameterValue {
	float m_Scalar; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.SetVectorParameterValue
// Size: 0x40 (Inherited: 0x30)
struct USetVectorParameterValue : USetParameterValue {
	struct FLinearColor m_Vector; // 0x30(0x10)
};

// Class Phoenix.SetTextureParameterValue
// Size: 0x38 (Inherited: 0x30)
struct USetTextureParameterValue : USetParameterValue {
	struct UTexture* m_Texture; // 0x30(0x08)
};

// Class Phoenix.MaterialPropertyData
// Size: 0xb8 (Inherited: 0x30)
struct UMaterialPropertyData : UDataAsset {
	enum class EObjectPropertyType ObjectPropertyType; // 0x30(0x01)
	char bWaterproof : 1; // 0x31(0x01)
	char bImmuneToFireDamage : 1; // 0x31(0x01)
	char bDamagableWhenCharred : 1; // 0x31(0x01)
	char bDestroyWhenCharred : 1; // 0x31(0x01)
	char bOnlyBurnWhenCriticalHealth : 1; // 0x31(0x01)
	char bOverlayBurn : 1; // 0x31(0x01)
	char bFreezable : 1; // 0x31(0x01)
	char bDamagableWhenFrozen : 1; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct UAkAudioEvent* PieceHitSfx; // 0x38(0x08)
	struct TArray<struct UMultiFX2_Base*> WetFX2; // 0x40(0x10)
	float FireDamagePerSecond; // 0x50(0x04)
	float BurnRate; // 0x54(0x04)
	float CharacterDurationScale; // 0x58(0x04)
	float BurnRingWidth; // 0x5c(0x04)
	float FireJumpDistance; // 0x60(0x04)
	float CharredPercent; // 0x64(0x04)
	struct UMaterialInterface* BurnMaterial; // 0x68(0x08)
	struct UMaterialInterface* CharredMaterial; // 0x70(0x08)
	float CharredDamageMultiplier; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct TArray<struct UMultiFX2_Base*> FireFX2; // 0x80(0x10)
	float FireParticleSpawnRateScale; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
	struct UPhysicalMaterial* IcePhysicalMaterial; // 0x98(0x08)
	float FrozenDamageMultiplier; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct UAkAudioEvent* FastSfx; // 0xa8(0x08)
	float bDestroyWhenCharredDelay; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Phoenix.MaterialDefaultParametersBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMaterialDefaultParametersBlueprintLibrary : UBlueprintFunctionLibrary {

	void GetMaterialDefaultVectorParameter(struct FMaterialDefaultParameters& MaterialDefaultParameters, struct FName ParameterName, struct FLinearColor& DefaultValue, bool& bSuccess); // Function Phoenix.MaterialDefaultParametersBlueprintLibrary.GetMaterialDefaultVectorParameter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3356490
	void GetMaterialDefaultTextureParameter(struct FMaterialDefaultParameters& MaterialDefaultParameters, struct FName ParameterName, struct UTexture*& DefaultValue, bool& bSuccess); // Function Phoenix.MaterialDefaultParametersBlueprintLibrary.GetMaterialDefaultTextureParameter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3356080
	void GetMaterialDefaultScalarParameter(struct FMaterialDefaultParameters& MaterialDefaultParameters, struct FName ParameterName, float& DefaultValue, bool& bSuccess); // Function Phoenix.MaterialDefaultParametersBlueprintLibrary.GetMaterialDefaultScalarParameter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3355c80
	void GetMaterialDefaultParameters(struct UMaterialInterface* Material, struct FMaterialDefaultParameters& MaterialDefaultParameters); // Function Phoenix.MaterialDefaultParametersBlueprintLibrary.GetMaterialDefaultParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33559c0
};

// Class Phoenix.FoodsMathHelpers
// Size: 0x28 (Inherited: 0x28)
struct UFoodsMathHelpers : UBlueprintFunctionLibrary {

	void UniformPointsOnSphere(int32_t NumPoints, struct TArray<struct FVector>& PointsOnSphere); // Function Phoenix.FoodsMathHelpers.UniformPointsOnSphere // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3358ba0
	void UniformPointOnSphere(int32_t NumPoints, int32_t Point, struct FVector& PointOnSphere); // Function Phoenix.FoodsMathHelpers.UniformPointOnSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3358a50
	void TriangleWaveSine(float Time, float Period, float& Output, float Amplitude); // Function Phoenix.FoodsMathHelpers.TriangleWaveSine // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3358870
	void TriangleWaveCosine(float Time, float Period, float& Output, float Amplitude, float Phase); // Function Phoenix.FoodsMathHelpers.TriangleWaveCosine // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3358670
	void TriangleWave(float Time, float Period, float& Output, float Amplitude); // Function Phoenix.FoodsMathHelpers.TriangleWave // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3358480
	void RotationSafeUp(struct FVector Unit, struct FVector& SafeUp); // Function Phoenix.FoodsMathHelpers.RotationSafeUp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3358370
	void RotationSafePerp(struct FVector& UnitA, struct FVector& UnitB, struct FVector& SafePerp); // Function Phoenix.FoodsMathHelpers.RotationSafePerp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3358220
	void RotationFromUnitZYSafe(struct FVector UnitZ, struct FVector UnitY, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitZYSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x33580c0
	void RotationFromUnitZY(struct FVector UnitZ, struct FVector UnitY, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitZY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357f60
	void RotationFromUnitZXSafe(struct FVector UnitZ, struct FVector UnitX, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitZXSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357e00
	void RotationFromUnitZX(struct FVector UnitZ, struct FVector UnitX, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitZX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357cc0
	void RotationFromUnitZ(struct FVector UnitZ, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357bc0
	void RotationFromUnitYZSafe(struct FVector UnitY, struct FVector UnitZ, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitYZSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357a60
	void RotationFromUnitYZ(struct FVector UnitY, struct FVector UnitZ, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitYZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357900
	void RotationFromUnitYXSafe(struct FVector UnitY, struct FVector UnitX, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitYXSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x33577a0
	void RotationFromUnitYX(struct FVector UnitY, struct FVector UnitX, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitYX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357640
	void RotationFromUnitY(struct FVector UnitY, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357540
	void RotationFromUnitXZSafe(struct FVector UnitX, struct FVector UnitZ, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitXZSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x33573e0
	void RotationFromUnitXZ(struct FVector UnitX, struct FVector UnitZ, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitXZ // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357280
	void RotationFromUnitXYSafe(struct FVector UnitX, struct FVector UnitY, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitXYSafe // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3357120
	void RotationFromUnitXY(struct FVector UnitX, struct FVector UnitY, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitXY // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3356fc0
	void RotationFromUnitX(struct FVector UnitX, struct FRotator& Rotation); // Function Phoenix.FoodsMathHelpers.RotationFromUnitX // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3356ec0
	void RandomUniformPointsOnSphere(int32_t NumPoints, float RandomHalfAngleDegrees, struct TArray<struct FVector>& PointsOnSphere); // Function Phoenix.FoodsMathHelpers.RandomUniformPointsOnSphere // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3356ce0
	void RandomUniformPointOnSphere(int32_t NumPoints, int32_t Point, struct FVector& PointOnSphere, float RandomHalfAngleInnerDegrees, float RandomHalfAngleOuterDegrees); // Function Phoenix.FoodsMathHelpers.RandomUniformPointOnSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3356b10
	void RandomInCone(struct FVector Direction, struct FVector& RandomDir, float HalfAngleInnerDegrees, float HalfAngleOuterDegrees); // Function Phoenix.FoodsMathHelpers.RandomInCone // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3356980
	void MakeOrthogonalUnitVector(struct FVector In, struct FVector& Orthoganal); // Function Phoenix.FoodsMathHelpers.MakeOrthogonalUnitVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3356890
};

// Class Phoenix.MazeRunnerAI
// Size: 0x510 (Inherited: 0x508)
struct AMazeRunnerAI : ASocialNavigatorController {
	char pad_508[0x8]; // 0x508(0x08)
};

// Class Phoenix.MealButtonWidget
// Size: 0x268 (Inherited: 0x268)
struct UMealButtonWidget : UUserWidget {
};

// Class Phoenix.MeleeSpellTool
// Size: 0x7f8 (Inherited: 0x7e8)
struct AMeleeSpellTool : ASpellTool {
	float MeleeRange; // 0x7e8(0x04)
	float MeleeHalfAngle; // 0x7ec(0x04)
	bool HitMultipleTargets; // 0x7f0(0x01)
	bool OnlyAffectCharacters; // 0x7f1(0x01)
	bool CastAtTarget; // 0x7f2(0x01)
	char pad_7F3[0x5]; // 0x7f3(0x05)
};

// Class Phoenix.MenuCursorWidget
// Size: 0x278 (Inherited: 0x268)
struct UMenuCursorWidget : UUserWidget {
	bool IsScaledDown; // 0x268(0x01)
	bool DefaultExpandState; // 0x269(0x01)
	bool FadeInStarted; // 0x26a(0x01)
	bool FadeOutStarted; // 0x26b(0x01)
	bool DoneFading; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	float FadeSpeed; // 0x270(0x04)
	float DefaultFadeSpeed; // 0x274(0x04)

	void SetTooltipExpandState(bool IsExpanded, bool ShouldAnimate); // Function Phoenix.MenuCursorWidget.SetTooltipExpandState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ScaleCursor(bool IsHover); // Function Phoenix.MenuCursorWidget.ScaleCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x335e200
	void ResetTooltipState(); // Function Phoenix.MenuCursorWidget.ResetTooltipState // (Final|Native|Public|BlueprintCallable) // @ game+0x335dfc0
	void OnScaleCursor(); // Function Phoenix.MenuCursorWidget.OnScaleCursor // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Cursor_FadeOutDone(); // Function Phoenix.MenuCursorWidget.Cursor_FadeOutDone // (Final|Native|Public|BlueprintCallable) // @ game+0x335d080
	void Cursor_FadeOut(); // Function Phoenix.MenuCursorWidget.Cursor_FadeOut // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Cursor_FadeInDone(); // Function Phoenix.MenuCursorWidget.Cursor_FadeInDone // (Final|Native|Public|BlueprintCallable) // @ game+0x335d060
	void Cursor_FadeIn(); // Function Phoenix.MenuCursorWidget.Cursor_FadeIn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.MenuReaderTestScreen
// Size: 0x390 (Inherited: 0x370)
struct UMenuReaderTestScreen : UScreen {
	struct TArray<struct FString> ButtonStrings; // 0x370(0x10)
	struct TArray<struct FString> DummyPronunciationStrings; // 0x380(0x10)
};

// Class Phoenix.MenuTextButton
// Size: 0x268 (Inherited: 0x268)
struct UMenuTextButton : UUserWidget {

	void MoveCursorToButton(); // Function Phoenix.MenuTextButton.MoveCursorToButton // (Exec|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.MiniMapParameters
// Size: 0x40 (Inherited: 0x30)
struct UMiniMapParameters : UDataAsset {
	struct FVector2D BottomLeft; // 0x30(0x08)
	float Width; // 0x38(0x04)
	float Height; // 0x3c(0x04)
};

// Class Phoenix.MinimapBase
// Size: 0x4a0 (Inherited: 0x268)
struct UMinimapBase : UUserWidget {
	bool InSearchAreaState; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	float MinYElevationDist; // 0x26c(0x04)
	float MinYElevationDistHogwarts; // 0x270(0x04)
	float MaxXElevationDist; // 0x274(0x04)
	float MinYElevationDistSquared; // 0x278(0x04)
	float MaxXElevationDistSquared; // 0x27c(0x04)
	float ElevationBuffer; // 0x280(0x04)
	float ElevationBufferSquared; // 0x284(0x04)
	struct FLinearColor DefaultIconColor; // 0x288(0x10)
	struct FLinearColor DefaultDiscoveredColor; // 0x298(0x10)
	struct UMiniMapParameters* MiniMapParameters; // 0x2a8(0x08)
	char pad_2B0[0x48]; // 0x2b0(0x48)
	struct UTexture2D* MapVirtualTexture; // 0x2f8(0x08)
	struct UTexture2D* MapRegularVirtualTexture; // 0x300(0x08)
	struct UTexture2D* MapNoFlyVirtualTexture; // 0x308(0x08)
	struct UTextureRenderTarget2D* MapRenderTarget; // 0x310(0x08)
	struct UTextureRenderTarget2D* MapRenderTargetNoFly; // 0x318(0x08)
	char pad_320[0x28]; // 0x320(0x28)
	struct UMaterialInterface* Material; // 0x348(0x08)
	struct UMaterialInstanceDynamic* MaterialDynamic; // 0x350(0x08)
	char pad_358[0x148]; // 0x358(0x148)

	void ShowOutline(struct UMapIconInstance* Icon); // Function Phoenix.MinimapBase.ShowOutline // (Final|Native|Public) // @ game+0x335f060
	void ShowMap(bool Visibile); // Function Phoenix.MinimapBase.ShowMap // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSize(float Size); // Function Phoenix.MinimapBase.SetSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335ef50
	void SetPlayerPositionTextureSpaceEvent(struct FVector2D pPlayerLocation); // Function Phoenix.MinimapBase.SetPlayerPositionTextureSpaceEvent // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335eed0
	void SetPlayerPositionEvent(struct FVector pPlayerLocation); // Function Phoenix.MinimapBase.SetPlayerPositionEvent // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void SetPlayerPosition(struct FVector pPlayerPosition); // Function Phoenix.MinimapBase.SetPlayerPosition // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x335ee40
	void SetPathPulseVisibility(float PulseVisibility); // Function Phoenix.MinimapBase.SetPathPulseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x335edc0
	void SetPathPulseSpeed(float Speed); // Function Phoenix.MinimapBase.SetPathPulseSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x335ed40
	void SetOpacity(float Alpha); // Function Phoenix.MinimapBase.SetOpacity // (Final|Native|Protected|BlueprintCallable) // @ game+0x335ecc0
	void SetMiniMapSize(float Size, float ZoomTime); // Function Phoenix.MinimapBase.SetMiniMapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335eaa0
	void SetMaterialTexture(struct FString TextureParameter, struct UTexture2D* Texture); // Function Phoenix.MinimapBase.SetMaterialTexture // (Final|Native|Protected|BlueprintCallable) // @ game+0x335e7b0
	void SetMapOpacity(float Opacity); // Function Phoenix.MinimapBase.SetMapOpacity // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetIntrusionColor(struct FLinearColor Color); // Function Phoenix.MinimapBase.SetIntrusionColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335e600
	void SetIconDistanceScale(float IconDistanceScale); // Function Phoenix.MinimapBase.SetIconDistanceScale // (Final|Native|Public|BlueprintCallable) // @ game+0x335e460
	void SetColorByName(struct FString ParameterName, struct FLinearColor Color); // Function Phoenix.MinimapBase.SetColorByName // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335e290
	void PulseCircleIcon(struct UMapIconInstance* Icon); // Function Phoenix.MinimapBase.PulseCircleIcon // (Final|Native|Public) // @ game+0x335de60
	void OverrideLevelBounds(struct FVector2D TopLeft, struct FVector2D BottomRight); // Function Phoenix.MinimapBase.OverrideLevelBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335dda0
	bool IsPointInBounds(struct FVector2D Point, struct FVector2D TL, struct FVector2D BR); // Function Phoenix.MinimapBase.IsPointInBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335dca0
	struct FVector2D GetWorldToTextureScale(); // Function Phoenix.MinimapBase.GetWorldToTextureScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335daa0
	void GetVisibleBoundsInPixels(struct FVector2D& TL, struct FVector2D& BR); // Function Phoenix.MinimapBase.GetVisibleBoundsInPixels // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x335d9c0
	void GetVisibleBounds(struct FVector2D& TL, struct FVector2D& BR); // Function Phoenix.MinimapBase.GetVisibleBounds // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x335d8e0
	struct FVector2D GetTopLeftPadded(); // Function Phoenix.MinimapBase.GetTopLeftPadded // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d890
	struct FVector GetPlayerLocation(); // Function Phoenix.MinimapBase.GetPlayerLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d7e0
	struct FVector2D GetOnScreenTextureArea(); // Function Phoenix.MinimapBase.GetOnScreenTextureArea // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d790
	float GetMiniMapZoomSize(); // Function Phoenix.MinimapBase.GetMiniMapZoomSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335d770
	float GetMiniMapSize(); // Function Phoenix.MinimapBase.GetMiniMapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335d700
	float GetMiniMapInitialSize(); // Function Phoenix.MinimapBase.GetMiniMapInitialSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335d6e0
	struct FVector2D GetMapToTextureRatio(); // Function Phoenix.MinimapBase.GetMapToTextureRatio // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d6b0
	struct FVector2D GetMapMultiplier(); // Function Phoenix.MinimapBase.GetMapMultiplier // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d660
	void GetBoundsForTextureSpaceSubSection(struct FVector WorldPosition, struct FVector2D& TL, struct FVector2D& BR, float& AvgMultiplier); // Function Phoenix.MinimapBase.GetBoundsForTextureSpaceSubSection // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x335d390
	struct FVector2D GetBottomRightPadded(); // Function Phoenix.MinimapBase.GetBottomRightPadded // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d360
	void FadeInMissionIcon(struct UMapIconInstance* Icon); // Function Phoenix.MinimapBase.FadeInMissionIcon // (Final|Native|Public) // @ game+0x335d130
	void FadeInCircleIcon(struct UMapIconInstance* Icon); // Function Phoenix.MinimapBase.FadeInCircleIcon // (Final|Native|Public) // @ game+0x335d0a0
	struct FVector2D ConvertFromWorldSpaceToTextureSpaceSubSection(struct FVector WorldPosition); // Function Phoenix.MinimapBase.ConvertFromWorldSpaceToTextureSpaceSubSection // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335cfb0
	void CalculateScale(); // Function Phoenix.MinimapBase.CalculateScale // (Native|Public|BlueprintCallable) // @ game+0x335cec0
};

// Class Phoenix.MinimapDungeon
// Size: 0x578 (Inherited: 0x4a0)
struct UMinimapDungeon : UMinimapBase {
	char pad_4A0[0x8]; // 0x4a0(0x08)
	struct UTexture2D* BlackTexture; // 0x4a8(0x08)
	struct UMapDungeon* DungeonMap; // 0x4b0(0x08)
	char pad_4B8[0x50]; // 0x4b8(0x50)
	struct UTextureUtil* DungeonTextureBlitter; // 0x508(0x08)
	struct UTexture2D* MapTexture; // 0x510(0x08)
	struct UTexture2D* RevealTexture; // 0x518(0x08)
	struct UTexture2D* SeenTexture; // 0x520(0x08)
	char pad_528[0x50]; // 0x528(0x50)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapDungeon.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapDungeon.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapDungeon.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.MinimapHogsmeade
// Size: 0x4d0 (Inherited: 0x4a0)
struct UMinimapHogsmeade : UMinimapBase {
	char pad_4A0[0x30]; // 0x4a0(0x30)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapHogsmeade.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapHogsmeade.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	struct FVector2D GetTopLeftBound(); // Function Phoenix.MinimapHogsmeade.GetTopLeftBound // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d850
	struct FVector GetDebugPlayerOffset(); // Function Phoenix.MinimapHogsmeade.GetDebugPlayerOffset // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d560
	struct FVector2D GetBottomRightBound(); // Function Phoenix.MinimapHogsmeade.GetBottomRightBound // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d320
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapHogsmeade.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.MinimapHogwarts
// Size: 0x4f0 (Inherited: 0x4a0)
struct UMinimapHogwarts : UMinimapBase {
	struct UDataTable* ZLevelData; // 0x4a0(0x08)
	char pad_4A8[0x48]; // 0x4a8(0x48)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapHogwarts.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void SetCurrentFloor(int32_t Floor); // Function Phoenix.MinimapHogwarts.SetCurrentFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x335e3d0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapHogwarts.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	struct FVector2D GetTopLeftBound(); // Function Phoenix.MinimapHogwarts.GetTopLeftBound // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d850
	struct FVector GetDebugPlayerOffset(); // Function Phoenix.MinimapHogwarts.GetDebugPlayerOffset // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d560
	int32_t GetCurrentFloor(); // Function Phoenix.MinimapHogwarts.GetCurrentFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x335d540
	struct FVector2D GetBottomRightBound(); // Function Phoenix.MinimapHogwarts.GetBottomRightBound // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335d320
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapHogwarts.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.SharedMinimapData
// Size: 0x80 (Inherited: 0x30)
struct USharedMinimapData : UDataAsset {
	float PathDirectionTimerMax; // 0x30(0x04)
	int32_t DirectionIndicatorLength; // 0x34(0x04)
	float PathPointSpacingModifier; // 0x38(0x04)
	float PathPointSpacingModifierHogsmeade; // 0x3c(0x04)
	float IconScale; // 0x40(0x04)
	float AllowedOffMapDistanceModifier; // 0x44(0x04)
	float MinimumTimeBeforeRestart; // 0x48(0x04)
	float PathAlphaDecayFactor; // 0x4c(0x04)
	float MinimumPathAlpha; // 0x50(0x04)
	float MaxHeightDelta; // 0x54(0x04)
	float MinimumPathPointScale; // 0x58(0x04)
	float DefaultOverlapDistance; // 0x5c(0x04)
	struct FLinearColor DirectionColor; // 0x60(0x10)
	struct FLinearColor TrackedColor; // 0x70(0x10)
};

// Class Phoenix.MinimapManager
// Size: 0x7b0 (Inherited: 0x2e8)
struct UMinimapManager : UHUDElementGroup {
	struct UCanvasPanel* MaskedIconContainer; // 0x2e8(0x08)
	struct UCanvasPanel* UnmaskedIconContainer; // 0x2f0(0x08)
	struct UImage* FadeCircle; // 0x2f8(0x08)
	char pad_300[0x30]; // 0x300(0x30)
	struct USharedMinimapData* SharedMinimapData; // 0x330(0x08)
	float IconRange1Arrow; // 0x338(0x04)
	float IconRange2Arrow; // 0x33c(0x04)
	float IconRange3Arrow; // 0x340(0x04)
	char pad_344[0x14]; // 0x344(0x14)
	struct FMiniMapSaveDataBlob MiniMapSaveDataBlob; // 0x358(0x50)
	char pad_3A8[0x88]; // 0x3a8(0x88)
	struct TMap<struct FString, struct UMapIconMeshRenderWidget*> IconInstanceRenderWidgets; // 0x430(0x50)
	char pad_480[0x8]; // 0x480(0x08)
	struct UTextureUtil* IntrusionBlitter; // 0x488(0x08)
	struct UTexture2D* IntrusionTexture; // 0x490(0x08)
	char pad_498[0x10]; // 0x498(0x10)
	struct AActor* IntrusionFXActor; // 0x4a8(0x08)
	char pad_4B0[0xd0]; // 0x4b0(0xd0)
	struct UObject* IconClass; // 0x580(0x08)
	struct UObject* IconRenderWidgetClass; // 0x588(0x08)
	struct UMaterialInterface* IconRenderWidgetPulseMaterial; // 0x590(0x08)
	struct UMaterialInterface* IconRenderWidgetGlowMaterial; // 0x598(0x08)
	struct UMaterialInterface* IconRenderWidgetSimpleMaterial; // 0x5a0(0x08)
	struct UMaterialInterface* IconRenderWidgetPathMaterial; // 0x5a8(0x08)
	struct UMaterialInterface* IconRenderAreaBeaconMaterial; // 0x5b0(0x08)
	struct UObject* MinimapWidgetClass; // 0x5b8(0x08)
	char pad_5C0[0x8]; // 0x5c0(0x08)
	struct APawn* PlayerPawn; // 0x5c8(0x08)
	struct APawn* PrevPawn; // 0x5d0(0x08)
	struct APlayerController* PlayerController; // 0x5d8(0x08)
	char pad_5E0[0x10]; // 0x5e0(0x10)
	struct TArray<struct UMinimapBase*> MiniMaps; // 0x5f0(0x10)
	struct UMinimapBase* ActiveMiniMap; // 0x600(0x08)
	struct UMinimapOverland* OverlandMiniMap; // 0x608(0x08)
	struct UMinimapHogwarts* HogwartsMiniMap; // 0x610(0x08)
	struct UMinimapHogsmeade* HogsmeadeMiniMap; // 0x618(0x08)
	struct UMinimapDungeon* DungeonMiniMap; // 0x620(0x08)
	struct UMinimapTutorial* TutorialMiniMap; // 0x628(0x08)
	struct UMinimapSanctuary* SanctuaryMiniMap; // 0x630(0x08)
	struct UMinimapTents* TentsMiniMap; // 0x638(0x08)
	char pad_640[0x10]; // 0x640(0x10)
	struct UMinimapBase* FadingOutMap; // 0x650(0x08)
	struct UMinimapBase* FadingInMap; // 0x658(0x08)
	char pad_660[0x20]; // 0x660(0x20)
	bool MiniMapVisible; // 0x680(0x01)
	char pad_681[0x7]; // 0x681(0x07)
	struct TArray<struct UWidget*> MapWidgetsToRotate; // 0x688(0x10)
	struct TArray<struct UWidget*> PlayerWidgetsToRotate; // 0x698(0x10)
	float MinimapCamRotation; // 0x6a8(0x04)
	float MiniMapPlayerRotation; // 0x6ac(0x04)
	char pad_6B0[0xb0]; // 0x6b0(0xb0)
	struct TArray<struct FVector> UpdatePath; // 0x760(0x10)
	struct UMaterialInterface* PathMaterial; // 0x770(0x08)
	struct UMaterialInstanceDynamic* PathMaterialDynamic; // 0x778(0x08)
	struct UImage* PathImage; // 0x780(0x08)
	char pad_788[0x10]; // 0x788(0x10)
	struct TArray<struct UMapIconList*> MapIconListArray; // 0x798(0x10)
	struct UMapIconList* PathIconList; // 0x7a8(0x08)

	void UnrevealMiniMapInternal(); // Function Phoenix.MinimapManager.UnrevealMiniMapInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x335f3c0
	void UnrevealMiniMapEvent(bool InstantIntro); // Function Phoenix.MinimapManager.UnrevealMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UnrevealMiniMap(bool InstantIntro, bool ForceUnreveal, bool fromHUD); // Function Phoenix.MinimapManager.UnrevealMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335f290
	void TurnOnCloudyMiniMapEvent(); // Function Phoenix.MinimapManager.TurnOnCloudyMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TurnOnCloudyMiniMapDarkEvent(); // Function Phoenix.MinimapManager.TurnOnCloudyMiniMapDarkEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TurnOffCloudyMiniMapEvent(); // Function Phoenix.MinimapManager.TurnOffCloudyMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SwitchToPlayerPawn(); // Function Phoenix.MinimapManager.SwitchToPlayerPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x335f1a0
	void SwitchToHoverdronePawn(struct APawn* HoverPawn); // Function Phoenix.MinimapManager.SwitchToHoverdronePawn // (Final|Native|Public|BlueprintCallable) // @ game+0x335f110
	void Shutdown(); // Function Phoenix.MinimapManager.Shutdown // (Final|Native|Public|BlueprintCallable) // @ game+0x335f0f0
	void ShowPathLayerEvent(bool Enable); // Function Phoenix.MinimapManager.ShowPathLayerEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowMiniMapEvent(bool Enable); // Function Phoenix.MinimapManager.ShowMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowMiniMap(bool Enable); // Function Phoenix.MinimapManager.ShowMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335efd0
	void SetVisibleOpacityMiniMapEvent(bool Visible, float Opacity); // Function Phoenix.MinimapManager.SetVisibleOpacityMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetOpacityQucikMiniMapEvent(float Opacity, float MapOpacity); // Function Phoenix.MinimapManager.SetOpacityQucikMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetOpacityMiniMapEvent(float Opacity); // Function Phoenix.MinimapManager.SetOpacityMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetMiniMapWidgetSize(struct FVector2D Size); // Function Phoenix.MinimapManager.SetMiniMapWidgetSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x335ec40
	void SetMiniMapSize(float Size, float ZoomTime); // Function Phoenix.MinimapManager.SetMiniMapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335eb70
	void SetMiniMapLevel(enum class EMiniMapLevels LevelType, bool hideCurrentMap, bool ShowMap, bool LoadNavMesh, bool AllowMiniMapReveal); // Function Phoenix.MinimapManager.SetMiniMapLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x335e8e0
	void SetLockMiniMapReveal(bool pLockMiniMapReveal); // Function Phoenix.MinimapManager.SetLockMiniMapReveal // (Final|Native|Public|BlueprintCallable) // @ game+0x335e720
	void SetIsDroneMap(bool pIsDroneMap); // Function Phoenix.MinimapManager.SetIsDroneMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335e690
	void SetIntrusionAlertOnBP(bool Enable); // Function Phoenix.MinimapManager.SetIntrusionAlertOnBP // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void SetIntrusionAlertOn(bool pIntrusionAlertOn); // Function Phoenix.MinimapManager.SetIntrusionAlertOn // (Final|Native|Public|BlueprintCallable) // @ game+0x335e570
	void SetInTentTransition(bool pInTentTransition); // Function Phoenix.MinimapManager.SetInTentTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x335e4e0
	void SanctuarySetHubUnlock(struct FString NameOfUnlock); // Function Phoenix.MinimapManager.SanctuarySetHubUnlock // (Final|Native|Public|BlueprintCallable) // @ game+0x335e110
	void RevealMiniMapInternalTents(); // Function Phoenix.MinimapManager.RevealMiniMapInternalTents // (Final|Native|Public|BlueprintCallable) // @ game+0x335e0f0
	void RevealMiniMapInternal(); // Function Phoenix.MinimapManager.RevealMiniMapInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x335e0d0
	void RevealMiniMapInstantInternal(); // Function Phoenix.MinimapManager.RevealMiniMapInstantInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x335e0b0
	void RevealMiniMapEvent(bool InstantIntro); // Function Phoenix.MinimapManager.RevealMiniMapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RevealMiniMap(bool InstantIntro, bool fromHUD); // Function Phoenix.MinimapManager.RevealMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335dfe0
	void RemoveIntrusionArea(struct AActor* IntrusionActor); // Function Phoenix.MinimapManager.RemoveIntrusionArea // (Final|Native|Public|BlueprintCallable) // @ game+0x335df30
	void QuickFadeOutMinimapEvent(); // Function Phoenix.MinimapManager.QuickFadeOutMinimapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void QuickFadeOutMinimap(); // Function Phoenix.MinimapManager.QuickFadeOutMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x335df10
	void QuickFadeInMinimapEvent(); // Function Phoenix.MinimapManager.QuickFadeInMinimapEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void QuickFadeInMinimap(); // Function Phoenix.MinimapManager.QuickFadeInMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x335def0
	void MinimapScaleChanged(enum class EMiniMapSizeOption MiniMapSize); // Function Phoenix.MinimapManager.MinimapScaleChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool IsParentHoverDrone(); // Function Phoenix.MinimapManager.IsParentHoverDrone // (Final|Native|Public|BlueprintCallable) // @ game+0x335dc70
	void IconTextureCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapManager.IconTextureCallback // (Final|Native|Public) // @ game+0x335db10
	void HoverdroneToggleMinimap(bool bShowMiniMap); // Function Phoenix.MinimapManager.HoverdroneToggleMinimap // (Final|Native|Private) // @ game+0x31e0320
	void HandlePlayerAndMapRotation(); // Function Phoenix.MinimapManager.HandlePlayerAndMapRotation // (Final|Native|Protected|BlueprintCallable) // @ game+0x335daf0
	void HandleMapRotation(); // Function Phoenix.MinimapManager.HandleMapRotation // (Final|Native|Protected|BlueprintCallable) // @ game+0x335dad0
	struct UMinimapTutorial* GetTutorialMiniMap(); // Function Phoenix.MinimapManager.GetTutorialMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d8c0
	struct UMinimapTents* GetTentsMiniMap(); // Function Phoenix.MinimapManager.GetTentsMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d830
	struct UMinimapSanctuary* GetSanctuaryMiniMap(); // Function Phoenix.MinimapManager.GetSanctuaryMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d810
	struct UMinimapOverland* GetOverlandMiniMap(); // Function Phoenix.MinimapManager.GetOverlandMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d7c0
	bool GetMiniMapVisibility(); // Function Phoenix.MinimapManager.GetMiniMapVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x335d750
	float GetMiniMapSize(); // Function Phoenix.MinimapManager.GetMiniMapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x335d720
	struct UMapSubSystem* GetMapSubsytem(); // Function Phoenix.MinimapManager.GetMapSubsytem // (Final|Native|Protected|BlueprintCallable) // @ game+0x335d690
	bool GetIsDroneMap(); // Function Phoenix.MinimapManager.GetIsDroneMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d640
	bool GetIntrusionAlertOn(); // Function Phoenix.MinimapManager.GetIntrusionAlertOn // (Final|Native|Public|BlueprintCallable) // @ game+0x335d620
	bool GetInTentTransition(); // Function Phoenix.MinimapManager.GetInTentTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x335d600
	struct UMinimapHogwarts* GetHogwartsMiniMap(); // Function Phoenix.MinimapManager.GetHogwartsMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d5e0
	struct UMinimapHogsmeade* GetHogsmeadeMiniMap(); // Function Phoenix.MinimapManager.GetHogsmeadeMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d5c0
	struct UMinimapDungeon* GetDungeonMiniMap(); // Function Phoenix.MinimapManager.GetDungeonMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d5a0
	bool GetAreIntrusionAreasActive(); // Function Phoenix.MinimapManager.GetAreIntrusionAreasActive // (Final|Native|Public|BlueprintCallable) // @ game+0x335d2f0
	struct UMinimapBase* GetActiveMiniMap(); // Function Phoenix.MinimapManager.GetActiveMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x335d2c0
	struct UMinimapBase* FindMapByName(struct FString MapName); // Function Phoenix.MinimapManager.FindMapByName // (Final|Native|Protected|BlueprintCallable) // @ game+0x335d1c0
	void DoMapTransitionStart(); // Function Phoenix.MinimapManager.DoMapTransitionStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void DoMapTransitionEnd(); // Function Phoenix.MinimapManager.DoMapTransitionEnd // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BeginPlay(); // Function Phoenix.MinimapManager.BeginPlay // (Native|Public|BlueprintCallable) // @ game+0x335cea0
	void BeginDestroy(); // Function Phoenix.MinimapManager.BeginDestroy // (Native|Public|BlueprintCallable) // @ game+0x3285440
	void AddMiniMap(struct UMinimapBase* pMiniMapbase); // Function Phoenix.MinimapManager.AddMiniMap // (Final|Native|Protected|BlueprintCallable) // @ game+0x335cde0
	void AddIntrusionArea(struct AActor* IntrusionActor); // Function Phoenix.MinimapManager.AddIntrusionArea // (Final|Native|Public|BlueprintCallable) // @ game+0x335cd50
};

// Class Phoenix.MinimapOverland
// Size: 0x4d0 (Inherited: 0x4a0)
struct UMinimapOverland : UMinimapBase {
	char pad_4A0[0x30]; // 0x4a0(0x30)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapOverland.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapOverland.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
};

// Class Phoenix.PerceptionIconData
// Size: 0x68 (Inherited: 0x28)
struct UPerceptionIconData : UObject {
	struct AActor* NPCCharacter; // 0x28(0x08)
	struct UBeaconInfo* BeaconInfo; // 0x30(0x08)
	struct UHUDCompassIcon* Icon; // 0x38(0x08)
	struct UPerceptionTextureCacheItem* TextureItem; // 0x40(0x08)
	char pad_48[0x20]; // 0x48(0x20)
};

// Class Phoenix.PerceptionDrawQueueItem
// Size: 0x60 (Inherited: 0x28)
struct UPerceptionDrawQueueItem : UObject {
	char pad_28[0x30]; // 0x28(0x30)
	struct UPerceptionIconData* perceptionData; // 0x58(0x08)
};

// Class Phoenix.PerceptionTextureCacheItem
// Size: 0x40 (Inherited: 0x28)
struct UPerceptionTextureCacheItem : UObject {
	struct UTexture2D* Texture; // 0x28(0x08)
	float FOV; // 0x30(0x04)
	char pad_34[0xc]; // 0x34(0x0c)
};

// Class Phoenix.MiniMapPerceptionIcons
// Size: 0xe8 (Inherited: 0x28)
struct UMiniMapPerceptionIcons : UObject {
	struct TArray<struct UPerceptionIconData*> PerceptionIcons; // 0x28(0x10)
	struct TArray<struct UPerceptionTextureCacheItem*> PerceptionTextureCache; // 0x38(0x10)
	struct TArray<struct UPerceptionDrawQueueItem*> DrawQueue; // 0x48(0x10)
	struct UTextureUtil* TextureBlitter; // 0x58(0x08)
	struct UTexture2D* OverlayTexture; // 0x60(0x08)
	struct UMapSubSystem* MapSubSystem; // 0x68(0x08)
	struct UMinimapManager* MinimapManager; // 0x70(0x08)
	struct UMinimapBase* Minimap; // 0x78(0x08)
	char pad_80[0x68]; // 0x80(0x68)
};

// Class Phoenix.MinimapRetentionBox
// Size: 0x150 (Inherited: 0x150)
struct UMinimapRetentionBox : URetainerBox {
};

// Class Phoenix.MinimapSanctuary
// Size: 0x530 (Inherited: 0x4a0)
struct UMinimapSanctuary : UMinimapBase {
	struct UTexture2D* BlackTexture; // 0x4a0(0x08)
	char pad_4A8[0x88]; // 0x4a8(0x88)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapSanctuary.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void SetMapType(enum class ESanctuaryMiniMapType MapType, bool LoadNavMesh, bool fromInit); // Function Phoenix.MinimapSanctuary.SetMapType // (Final|Native|Public|BlueprintCallable) // @ game+0x3363730
	void SetHubLevelUnlock(struct FString NameOfUnlock, bool LoadTexture, bool FromLoadGame); // Function Phoenix.MinimapSanctuary.SetHubLevelUnlock // (Final|Native|Public|BlueprintCallable) // @ game+0x33635a0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapSanctuary.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapSanctuary.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.MinimapTents
// Size: 0x4d0 (Inherited: 0x4a0)
struct UMinimapTents : UMinimapBase {
	char pad_4A0[0x30]; // 0x4a0(0x30)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapTents.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapTents.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapTents.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.MinimapTutorial
// Size: 0x4e0 (Inherited: 0x4a0)
struct UMinimapTutorial : UMinimapBase {
	struct UTexture2D* BlackTexture; // 0x4a0(0x08)
	char pad_4A8[0x30]; // 0x4a8(0x30)
	struct UTexture2D* MapTexture; // 0x4d8(0x08)

	void TextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.MinimapTutorial.TextureLoadedCallback // (Native|Public) // @ game+0x335f1c0
	void Init(bool LoadNavMesh); // Function Phoenix.MinimapTutorial.Init // (Native|Public|BlueprintCallable) // @ game+0x335dbe0
	void ChangeLevel(int32_t LevelIndex, bool fromInit); // Function Phoenix.MinimapTutorial.ChangeLevel // (Native|Public|BlueprintCallable) // @ game+0x335cee0
};

// Class Phoenix.MiniSelectionDiamondBase
// Size: 0x268 (Inherited: 0x268)
struct UMiniSelectionDiamondBase : UUserWidget {

	void SetState(bool IsActive); // Function Phoenix.MiniSelectionDiamondBase.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3363850
	void OnSetState(int32_t NewState); // Function Phoenix.MiniSelectionDiamondBase.OnSetState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.MissionBannerWidget
// Size: 0x530 (Inherited: 0x2e8)
struct UMissionBannerWidget : UHUDElementGroup {
	char pad_2E8[0x30]; // 0x2e8(0x30)
	bool StepUpdateInProgress; // 0x318(0x01)
	bool MissionStepsShowing; // 0x319(0x01)
	bool WaypointShowing; // 0x31a(0x01)
	char pad_31B[0x215]; // 0x31b(0x215)

	void UpdateExistingStepBanner(struct TArray<struct FString>& objectiveText, struct TArray<bool>& objectiveChecked, struct TArray<bool>& objectiveCheckChanged, struct TArray<int32_t>& objectiveRuntimeValue1, struct TArray<int32_t>& objectiveRuntimeValue2); // Function Phoenix.MissionBannerWidget.UpdateExistingStepBanner // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void UpdateColorBlindColors(struct FLinearColor ObjectiveTintColor); // Function Phoenix.MissionBannerWidget.UpdateColorBlindColors // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void ShowBPStepBanner(enum class BannerUpdateType updateType, struct FName updateTitle, struct FName bannerText, struct FName bannerText2, bool bShowTrackMission, struct TArray<struct FString>& objectiveText, struct TArray<bool>& objectiveChecked, struct TArray<bool>& objectiveCheckChanged, struct TArray<int32_t>& objectiveRuntimeValue1, struct TArray<int32_t>& objectiveRuntimeValue2, struct FString MissionDescription, struct FString MissionTypeIcon, struct FString MissionObjectiveIcon, struct FLinearColor ObjectiveTintColor); // Function Phoenix.MissionBannerWidget.ShowBPStepBanner // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void ShowBPMissionBanner(enum class BannerUpdateType updateType, struct FName updateTitle, struct FName bannerText, struct FName bannerText2, bool bShowTrackMission, struct TArray<struct FString>& objectiveText, struct TArray<bool>& objectiveChecked, struct TArray<bool>& objectiveCheckChanged, struct TArray<int32_t>& objectiveRuntimeValue1, struct TArray<int32_t>& objectiveRuntimeValue2); // Function Phoenix.MissionBannerWidget.ShowBPMissionBanner // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void ShowBPCelebrationBanner(enum class BannerUpdateType updateType, struct FName updateTitle, struct FName bannerText, struct FName bannerText2, bool bShowTrackMission, struct TArray<struct FString>& objectiveText, struct TArray<bool>& objectiveChecked, struct TArray<bool>& objectiveCheckChanged, struct TArray<int32_t>& objectiveRuntimeValue1, struct TArray<int32_t>& objectiveRuntimeValue2); // Function Phoenix.MissionBannerWidget.ShowBPCelebrationBanner // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void BeginOrEndPlay(bool endPlay); // Function Phoenix.MissionBannerWidget.BeginOrEndPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x33628f0
	void BannerComplete(enum class ENotificationCategory Category); // Function Phoenix.MissionBannerWidget.BannerComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x3362870
};

// Class Phoenix.MissionBPLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMissionBPLibrary : UBlueprintFunctionLibrary {

	void UpdateMissionProgress(struct FMissionID MissionID, struct FString StepName, int32_t ProgressIncrement, int32_t ProgressGoal); // Function Phoenix.MissionBPLibrary.UpdateMissionProgress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363960
	void TrackMission(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.TrackMission // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33638e0
	void ResetMissionDevOnly(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.ResetMissionDevOnly // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33633d0
	void RequestMissionUpdates(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.RequestMissionUpdates // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363520
	void PrintMissionString(struct FMissionID MissionID, struct FString inString); // Function Phoenix.MissionBPLibrary.PrintMissionString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363450
	void PlayMissionDevOnly(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.PlayMissionDevOnly // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33633d0
	bool IsFocusMission(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.IsFocusMission // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363340
	bool IsExclusiveMissionActive(); // Function Phoenix.MissionBPLibrary.IsExclusiveMissionActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363310
	bool IsExclusiveMission(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.IsExclusiveMission // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363280
	void HermesMissionIDDelegate__DelegateSignature(struct UObject* Caller, struct FMissionID& MissionID); // DelegateFunction Phoenix.MissionBPLibrary.HermesMissionIDDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesExecuteOwned_MissionID(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FMissionID& MissionID); // Function Phoenix.MissionBPLibrary.HermesExecuteOwned_MissionID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xf5def0
	void HermesExecuteAll_MissionID(struct FString Name, struct UObject* Caller, struct FMissionID& MissionID); // Function Phoenix.MissionBPLibrary.HermesExecuteAll_MissionID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0xf5cc50
	void HermesBind_MissionID(struct FDelegate Delegate_MissionID, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.MissionBPLibrary.HermesBind_MissionID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3363150
	bool GetMissionStepComplete(struct FMissionID MissionID, struct FString StepName); // Function Phoenix.MissionBPLibrary.GetMissionStepComplete // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3363070
	enum class EMissionStatus GetMissionStatus(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.GetMissionStatus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3362fe0
	bool GetMissionComplete(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.GetMissionComplete // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3362f50
	struct FString GetCurrentMissionStepName(struct FMissionID MissionID); // Function Phoenix.MissionBPLibrary.GetCurrentMissionStepName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3362e80
	void CompleteMissionTask(struct FMissionID MissionID, struct FString StepName); // Function Phoenix.MissionBPLibrary.CompleteMissionTask // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3362d70
	void BranchMissionStepComplete(struct FMissionID MissionID, struct FString StepName, enum class EMissionComplete& Complete); // Function Phoenix.MissionBPLibrary.BranchMissionStepComplete // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3362c50
	void BranchMissionStatus(struct FMissionID MissionID, enum class EMissionStatus& Status); // Function Phoenix.MissionBPLibrary.BranchMissionStatus // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3362b80
	void BranchMissionComplete(struct FMissionID MissionID, enum class EMissionComplete& Complete); // Function Phoenix.MissionBPLibrary.BranchMissionComplete // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3362ab0
	void BindMissionUpdates(struct FMissionID MissionID, struct FDelegate Delegate_MissionID, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.MissionBPLibrary.BindMissionUpdates // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3362980
};

// Class Phoenix.MissionButtonWidget
// Size: 0x558 (Inherited: 0x4a8)
struct UMissionButtonWidget : UIconButtonWidget {
	struct FMissionLogData MissionData; // 0x4a8(0xa8)
	bool IsFocusMission; // 0x550(0x01)
	char pad_551[0x7]; // 0x551(0x07)
};

// Class Phoenix.MissionEntryPoint
// Size: 0x378 (Inherited: 0x250)
struct AMissionEntryPoint : ATriggerBox {
	char pad_250[0x8]; // 0x250(0x08)
	struct FDbSingleColumnInfo m_missionID; // 0x258(0x88)
	float m_ringRadius; // 0x2e0(0x04)
	char pad_2E4[0x14]; // 0x2e4(0x14)
	struct UMissionEntryPointEffectComponent* RingEffectComponent; // 0x2f8(0x08)
	struct USceneComponent* CalloutLocator; // 0x300(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x308(0x08)
	struct FName BeaconableObjectID; // 0x310(0x08)
	char pad_318[0x60]; // 0x318(0x60)
};

// Class Phoenix.MissionEntryPointEffectComponent
// Size: 0x490 (Inherited: 0x480)
struct UMissionEntryPointEffectComponent : UPrimitiveComponent {
	struct UNiagaraSystem* NiagaraSystem; // 0x480(0x08)
	struct UNiagaraComponent* NiagaraComponent; // 0x488(0x08)

	void Enable(); // Function Phoenix.MissionEntryPointEffectComponent.Enable // (Final|Native|Public|BlueprintCallable) // @ game+0x3362e60
	void Disable(); // Function Phoenix.MissionEntryPointEffectComponent.Disable // (Final|Native|Public|BlueprintCallable) // @ game+0x3362e40
};

// Class Phoenix.MissionFailScreenBase
// Size: 0x378 (Inherited: 0x370)
struct UMissionFailScreenBase : UScreen {
	enum class EUIGameOverReason MyReason; // 0x370(0x01)
	char pad_371[0x7]; // 0x371(0x07)

	void SetReason(enum class EUIGameOverReason Reason); // Function Phoenix.MissionFailScreenBase.SetReason // (Final|Native|Public) // @ game+0x32e90e0
	void SetDisplayText(struct FString Title, struct FString Description); // Function Phoenix.MissionFailScreenBase.SetDisplayText // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CannotAbandonQuest(); // Function Phoenix.MissionFailScreenBase.CannotAbandonQuest // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.MissionInteractionManager
// Size: 0x100 (Inherited: 0x28)
struct UMissionInteractionManager : UObject {
	char pad_28[0xd8]; // 0x28(0xd8)
};

// Class Phoenix.MissionLogWidget
// Size: 0x3d8 (Inherited: 0x3c8)
struct UMissionLogWidget : UTabPageWidget {
	struct TArray<struct FMissionTabData> MissionTabDataSet; // 0x3c8(0x10)

	bool TrackNewObjective(struct FString ObjectiveName); // Function Phoenix.MissionLogWidget.TrackNewObjective // (Final|Native|Protected|BlueprintCallable) // @ game+0x3368790
	bool MissionHasBeaconOnMap(struct FName MissionID); // Function Phoenix.MissionLogWidget.MissionHasBeaconOnMap // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3367880
	bool HasBeenInitialized(); // Function Phoenix.MissionLogWidget.HasBeenInitialized // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3367660
	bool GetTrackedMissionId(struct FName& MissionID); // Function Phoenix.MissionLogWidget.GetTrackedMissionId // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366fb0
	bool GetTrackedMissionData(struct FMissionLogData& MissionData); // Function Phoenix.MissionLogWidget.GetTrackedMissionData // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366db0
	struct TArray<struct FMissionLogData> GetMissionLogData(int32_t& OutTrackedMissionIndex); // Function Phoenix.MissionLogWidget.GetMissionLogData // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3366780
	bool GetMapIconAndGlint(struct FName MissionID, struct FString& Icon, struct FString& Glint, struct FLinearColor& IconColor); // Function Phoenix.MissionLogWidget.GetMapIconAndGlint // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366460
	bool GetLighthouseGoalInfo(struct FName& LighthouseGoalID, struct TArray<struct FName>& LighthouseObjectives, struct TArray<bool>& ObjectiveUnlockedStates, struct TArray<bool>& ObjectiveCompleteStates); // Function Phoenix.MissionLogWidget.GetLighthouseGoalInfo // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366280
	bool GetActiveObjectiveTrackableStates(struct TArray<bool>& TrackableStates, struct FString& TrackedObjective); // Function Phoenix.MissionLogWidget.GetActiveObjectiveTrackableStates // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366060
	bool CanAbandonMission(struct FName MissionID); // Function Phoenix.MissionLogWidget.CanAbandonMission // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x3365c00
};

// Class Phoenix.MissionManager
// Size: 0xab8 (Inherited: 0x28)
struct UMissionManager : UObject {
	char pad_28[0x488]; // 0x28(0x488)
	struct UMissionInteractionManager* InteractionManager; // 0x4b0(0x08)
	char pad_4B8[0x548]; // 0x4b8(0x548)
	struct FName FailureReasonTextKey; // 0xa00(0x08)
	char pad_A08[0xb0]; // 0xa08(0xb0)

	void UpdateBlueprintTaskProgressBP(struct FName MissionID, struct FString missionStepNickname, int32_t ProgressIncrement, int32_t ProgressGoal); // Function Phoenix.MissionManager.UpdateBlueprintTaskProgressBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33688b0
	void TrackUpdatedMissionBP(); // Function Phoenix.MissionManager.TrackUpdatedMissionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368890
	bool StationKnownByMissionManagerBP(struct UStationComponent* Object); // Function Phoenix.MissionManager.StationKnownByMissionManagerBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368700
	void ShouldForcePlantItemBP(struct AActor* interactionActor, struct FString& o_itemToPlant); // Function Phoenix.MissionManager.ShouldForcePlantItemBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3368570
	void SetMissionLogFocusMissionBP(struct FName MissionID); // Function Phoenix.MissionManager.SetMissionLogFocusMissionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33684f0
	bool SetMapCursorToMissionLocationBP(struct FName MissionID); // Function Phoenix.MissionManager.SetMapCursorToMissionLocationBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368460
	void ResetMissionDevOnlyBP(struct FName MissionID); // Function Phoenix.MissionManager.ResetMissionDevOnlyBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368080
	void RequestMissionUpdateBP(struct FName MissionID); // Function Phoenix.MissionManager.RequestMissionUpdateBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368310
	void PlaySceneRigFinished(); // Function Phoenix.MissionManager.PlaySceneRigFinished // (Final|Native|Private) // @ game+0x33682f0
	void PlayMissionFromFrontEnd(struct FString MissionName, struct FString Gender, struct FString SkipOption); // Function Phoenix.MissionManager.PlayMissionFromFrontEnd // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3368100
	void PlayMissionDevOnlyBP(struct FName MissionID); // Function Phoenix.MissionManager.PlayMissionDevOnlyBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3368080
	void OnStartNewDay(); // Function Phoenix.MissionManager.OnStartNewDay // (Final|Native|Public) // @ game+0x1074730
	void OnPreGameSave(); // Function Phoenix.MissionManager.OnPreGameSave // (Final|Native|Public) // @ game+0x3368060
	void OnPostGameSave(); // Function Phoenix.MissionManager.OnPostGameSave // (Final|Native|Public) // @ game+0x3368040
	void OnPostGameLoad(); // Function Phoenix.MissionManager.OnPostGameLoad // (Final|Native|Public) // @ game+0x3368020
	void MarkMissionAsViewed(struct FName& MissionName); // Function Phoenix.MissionManager.MarkMissionAsViewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33677f0
	bool IsNewMission(struct FName MissionName); // Function Phoenix.MissionManager.IsNewMission // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3367760
	bool IsFocusMissionBP(struct FName MissionID, struct FName CharacterID); // Function Phoenix.MissionManager.IsFocusMissionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3367690
	void HandleStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.MissionManager.HandleStatChanged // (Final|Native|Private) // @ game+0x3367550
	void HandleSceneRigFadeOutComplete(struct UObject* i_caller, int32_t Value); // Function Phoenix.MissionManager.HandleSceneRigFadeOutComplete // (Final|Native|Private) // @ game+0x3367480
	void HandleSceneRigFadeOut(struct UObject* i_caller, int32_t Value); // Function Phoenix.MissionManager.HandleSceneRigFadeOut // (Final|Native|Private) // @ game+0x33673b0
	void HandlePerformTasksDone(struct APerformTasksForAI* InPerformTasksForAI); // Function Phoenix.MissionManager.HandlePerformTasksDone // (Final|Native|Private) // @ game+0x3367320
	void HandleMissionEditorMessage(struct UObject* i_caller, struct FString Message); // Function Phoenix.MissionManager.HandleMissionEditorMessage // (Final|Native|Private) // @ game+0x3340f30
	void HandleHighPriorityStreamingComplete(); // Function Phoenix.MissionManager.HandleHighPriorityStreamingComplete // (Final|Native|Private) // @ game+0x3367300
	void HandleGiftingBP(struct FName CharacterID, struct FString ItemId, int32_t ItemCount); // Function Phoenix.MissionManager.HandleGiftingBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33671f0
	void HandleFleshCreated(struct AActor* InActor, struct UScheduledEntity* InScheduledEntity); // Function Phoenix.MissionManager.HandleFleshCreated // (Final|Native|Private) // @ game+0x3367120
	void HandleExperienceLevelChanged(int32_t ExpLevel, bool bIndicateHUD); // Function Phoenix.MissionManager.HandleExperienceLevelChanged // (Final|Native|Private) // @ game+0x3367050
	void GetNewlyHilitedSpell(struct FString& Spell); // Function Phoenix.MissionManager.GetNewlyHilitedSpell // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3366d00
	bool GetMissionStepCompletedBP(struct FName MissionID, struct FString StepNickname); // Function Phoenix.MissionManager.GetMissionStepCompletedBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3366c20
	struct FString GetMissionStepBP(struct FName MissionID); // Function Phoenix.MissionManager.GetMissionStepBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3366b50
	enum class MissionStatus GetMissionStatusBP(struct FName MissionID); // Function Phoenix.MissionManager.GetMissionStatusBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3366ac0
	struct TArray<struct FString> GetMissionSkipOptions(struct FString MissionName); // Function Phoenix.MissionManager.GetMissionSkipOptions // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3366990
	struct FName GetMissionName(struct FDatabaseMissionList DatabaseMissionList); // Function Phoenix.MissionManager.GetMissionName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x332a290
	struct TArray<struct FMissionLogData> GetMissionLogDataSingleBP(int32_t missionIndex); // Function Phoenix.MissionManager.GetMissionLogDataSingleBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33668f0
	struct TArray<struct FMissionLogData> GetMissionLogDataBP(int32_t& OutTrackedMissionIndex); // Function Phoenix.MissionManager.GetMissionLogDataBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3366840
	bool GetMissionBeaconWorldLocationBP(struct FName MissionID, struct FVector& WorldLocation); // Function Phoenix.MissionManager.GetMissionBeaconWorldLocationBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33666b0
	struct UBeaconInfo* GetMissionBeaconBP(struct FName MissionID); // Function Phoenix.MissionManager.GetMissionBeaconBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3366620
	struct TArray<struct FString> GetFrontEndMissionList(int32_t& StartIndex); // Function Phoenix.MissionManager.GetFrontEndMissionList // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x33661b0
	struct UMissionManager* Get(); // Function Phoenix.MissionManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3366010
	void DismissMissionLogBP(); // Function Phoenix.MissionManager.DismissMissionLogBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33264e0
	void CompleteBlueprintConditionBP(struct FName MissionID, struct FString missionStepNickname); // Function Phoenix.MissionManager.CompleteBlueprintConditionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3365f40
	void CheckMissionRestriction(struct FString restrictionType, struct FString restrictionValue, struct FRestrictionInfo& ioRestrictionInfo, bool& o_canSpawn); // Function Phoenix.MissionManager.CheckMissionRestriction // (Final|Native|Public|HasOutParms) // @ game+0x3365ca0
	bool AutomationBlocksDungeonLoad(struct FName DungeonName); // Function Phoenix.MissionManager.AutomationBlocksDungeonLoad // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x3365b70
	void AbandonMissionBP(); // Function Phoenix.MissionManager.AbandonMissionBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3365b50
};

// Class Phoenix.MissionSpawnComponent
// Size: 0x150 (Inherited: 0xc8)
struct UMissionSpawnComponent : UActorComponent {
	struct FDbSingleColumnInfo m_missionID; // 0xc8(0x88)
};

// Class Phoenix.MountedAI_Controller
// Size: 0x500 (Inherited: 0x350)
struct AMountedAI_Controller : AAIController {
	float DistanceFromGroundPathNodeThreshold; // 0x350(0x04)
	float DistanceFromAirPathNodeThreshold; // 0x354(0x04)
	float DistanceFromSplineThreshold; // 0x358(0x04)
	float SplineTrackingPointHeadstartDistance; // 0x35c(0x04)
	float TicksForPredictedLocation; // 0x360(0x04)
	bool bKeepWithinDistanceOfPlayer; // 0x364(0x01)
	char pad_365[0x3]; // 0x365(0x03)
	float DistanceFromPlayerWaitThreshold; // 0x368(0x04)
	float DistanceFromPlayerSlowDownThreshold; // 0x36c(0x04)
	float PlayerDistanceThresholdChangeDistance; // 0x370(0x04)
	char pad_374[0x4]; // 0x374(0x04)
	struct FRuntimeFloatCurve DistanceFromPlayerToTargetSpeedMultiplierCurve; // 0x378(0x88)
	struct FRuntimeFloatCurve DistanceFromPlayerToMaxSpeedMultiplierCurve; // 0x400(0x88)
	struct ACreature_Character* CreatureCharacter; // 0x488(0x08)
	struct ANPC_Character* RiderCharacter; // 0x490(0x08)
	struct UCreature_MountComponent* CreatureMountComponent; // 0x498(0x08)
	struct UIcarus3DMovementComponent* FlightMovementComponent; // 0x4a0(0x08)
	struct UCreature_PathFollowingComponent* CreaturePathFollowingComponent; // 0x4a8(0x08)
	char pad_4B0[0x8]; // 0x4b0(0x08)
	struct APathNode* PathNode; // 0x4b8(0x08)
	struct APathNode* NextPathNode; // 0x4c0(0x08)
	char pad_4C8[0x18]; // 0x4c8(0x18)
	struct ANPC_Spline* Spline; // 0x4e0(0x08)
	char pad_4E8[0x18]; // 0x4e8(0x18)

	void StartMovingToPathNode(struct APathNode* InPathNode); // Function Phoenix.MountedAI_Controller.StartMovingToPathNode // (Final|Native|Public|BlueprintCallable) // @ game+0x3368670
	void StartMoving(); // Function Phoenix.MountedAI_Controller.StartMoving // (Final|Native|Public|BlueprintCallable) // @ game+0x3368650
};

// Class Phoenix.MountHeightLimitComponent
// Size: 0x110 (Inherited: 0xc8)
struct UMountHeightLimitComponent : UActorComponent {
	char pad_C8[0x28]; // 0xc8(0x28)
	struct UMountRegionHeights* RegionHeights; // 0xf0(0x08)
	char pad_F8[0x18]; // 0xf8(0x18)

	void SetHeightOverrides(float InTargetHeight, float InHeightBuffer); // Function Phoenix.MountHeightLimitComponent.SetHeightOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x3368390
	float GetFlyHeight(); // Function Phoenix.MountHeightLimitComponent.GetFlyHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3366180
	void ClearHeightOverrides(); // Function Phoenix.MountHeightLimitComponent.ClearHeightOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x3365f20
};

// Class Phoenix.MountRegionHeights
// Size: 0x90 (Inherited: 0x30)
struct UMountRegionHeights : UDataAsset {
	float HeightBuffer; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TMap<enum class ERegionType, struct FRegionHeightData> HeightMap; // 0x38(0x50)
	float HeightRaiseInterpSpeed; // 0x88(0x04)
	float HeightLowerInterpSpeed; // 0x8c(0x04)
};

// Class Phoenix.MountZoneVolumeBase
// Size: 0x3b8 (Inherited: 0x280)
struct AMountZoneVolumeBase : AVolume {
	bool bDisableOnHighEndPlatforms; // 0x280(0x01)
	char IgnoredMounts; // 0x281(0x01)
	enum class EPrerequisiteType PrerequisiteType; // 0x282(0x01)
	char pad_283[0x5]; // 0x283(0x05)
	struct FDbSingleColumnInfo MissionID; // 0x288(0x88)
	char MissionStates; // 0x310(0x01)
	char pad_311[0x7]; // 0x311(0x07)
	struct FDbSingleColumnInfo LockId; // 0x318(0x88)
	char pad_3A0[0x18]; // 0x3a0(0x18)

	bool IsIgnored(enum class EMountTypes InType); // Function Phoenix.MountZoneVolumeBase.IsIgnored // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x336cb20
	bool GetMountType(struct APawn* InPawn, enum class EMountTypes& OutType); // Function Phoenix.MountZoneVolumeBase.GetMountType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c6c0
	struct UCreature_MountComponent* GetMount(struct APawn* InPawn); // Function Phoenix.MountZoneVolumeBase.GetMount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x336c630
	bool GetEquivalentGroundType(enum class EMountTypes InType, enum class EMountTypes& OutType); // Function Phoenix.MountZoneVolumeBase.GetEquivalentGroundType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c550
	bool GetEquivalentFlyingType(enum class EMountTypes InType, enum class EMountTypes& OutType); // Function Phoenix.MountZoneVolumeBase.GetEquivalentFlyingType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c470
	struct AFlyingBroom* GetBroom(struct APawn* InPawn); // Function Phoenix.MountZoneVolumeBase.GetBroom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x336c350
	void EnableZone(bool Enable); // Function Phoenix.MountZoneVolumeBase.EnableZone // (Native|Protected|BlueprintCallable) // @ game+0x32018d0
};

// Class Phoenix.MountHeightLimitVolume
// Size: 0x3c0 (Inherited: 0x3b8)
struct AMountHeightLimitVolume : AMountZoneVolumeBase {
	float FlyHeightOverride; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.MountHeightLimitVolume.OnOverlapEnd // (Final|Native|Protected) // @ game+0x3367d60
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.MountHeightLimitVolume.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x3367920
};

// Class Phoenix.MountSpeedLimitVolume
// Size: 0x3c0 (Inherited: 0x3b8)
struct AMountSpeedLimitVolume : AMountZoneVolumeBase {
	bool bEnforceGroundGait; // 0x3b8(0x01)
	enum class EMountGroundSpeedLimit GroundGaitLimit; // 0x3b9(0x01)
	enum class ECreatureMovementSpeed EnforcedGroundGait; // 0x3ba(0x01)
	bool bEnforceFlyingGait; // 0x3bb(0x01)
	enum class EMountFlyingSpeedLimit FlyingGaitLimit; // 0x3bc(0x01)
	enum class EMountFlyingGait EnforcedFlyingGait; // 0x3bd(0x01)
	char pad_3BE[0x2]; // 0x3be(0x02)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.MountSpeedLimitVolume.OnOverlapEnd // (Final|Native|Protected) // @ game+0x3367ec0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.MountSpeedLimitVolume.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x3367b40
};

// Class Phoenix.MountStreamingComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UMountStreamingComponent : UActorComponent {
	bool bAllowInteriorStreaming; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.MountViewDistanceLimiter
// Size: 0xf8 (Inherited: 0xc8)
struct UMountViewDistanceLimiter : UActorComponent {
	struct UCameraHeightWithCullingRenderSettingsComponent* CameraHeightRenderSettingsComponent; // 0xc8(0x08)
	float MaxFogOnOffValue; // 0xd0(0x04)
	float FogOnOffInterpSpeed; // 0xd4(0x04)
	char pad_D8[0x20]; // 0xd8(0x20)
};

// Class Phoenix.MoveToPointPuzzleComponent
// Size: 0x1a8 (Inherited: 0xc8)
struct UMoveToPointPuzzleComponent : UActorComponent {
	struct TArray<struct ATargetPoint*> TargetPointArray; // 0xc8(0x10)
	struct TArray<struct ATargetPoint*> FinalPointArray; // 0xd8(0x10)
	struct TArray<struct ATargetPoint*> BlockerArray; // 0xe8(0x10)
	struct TArray<struct AActor*> DynamicBlockerArray; // 0xf8(0x10)
	float TargetThreshold; // 0x108(0x04)
	float Friction; // 0x10c(0x04)
	float BounceFriction; // 0x110(0x04)
	float CollisionSpeedAdjustment; // 0x114(0x04)
	enum class ETargetOrientation TargetOrientation; // 0x118(0x01)
	bool bMustMatchFinalOrientation; // 0x119(0x01)
	char pad_11A[0x2]; // 0x11a(0x02)
	uint32_t FinalOrientation; // 0x11c(0x04)
	struct FMulticastInlineDelegate OnStartMoving; // 0x120(0x10)
	struct FMulticastInlineDelegate OnStopMoving; // 0x130(0x10)
	struct FMulticastInlineDelegate OnTargetReached; // 0x140(0x10)
	struct FMulticastInlineDelegate OnFinalTargetReached; // 0x150(0x10)
	struct FMulticastInlineDelegate OnFinalTargetLeft; // 0x160(0x10)
	char pad_170[0x38]; // 0x170(0x38)

	void OnBeginOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& OverlapInfo); // Function Phoenix.MoveToPointPuzzleComponent.OnBeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x336cf90
	bool Move(struct FVector Direction, float Speed); // Function Phoenix.MoveToPointPuzzleComponent.Move // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x336ce10
};

// Class Phoenix.SublevelEntry
// Size: 0x50 (Inherited: 0x28)
struct USublevelEntry : UObject {
	char pad_28[0x28]; // 0x28(0x28)

	void OnLevelLoadFailed(); // Function Phoenix.SublevelEntry.OnLevelLoadFailed // (Final|Native|Private) // @ game+0x336d1b0
	void OnLevelLoaded(); // Function Phoenix.SublevelEntry.OnLevelLoaded // (Final|Native|Private) // @ game+0x336d1d0
};

// Class Phoenix.MultiFXManager
// Size: 0x28 (Inherited: 0x28)
struct UMultiFXManager : UObject {

	void UpdateFX(); // Function Phoenix.MultiFXManager.UpdateFX // (Final|Native|Private) // @ game+0x336dd80
	void SpawnMultiFXPlus(struct FMultiFXPlus& MultiPlus, struct UObject* Object, struct FMultiFXPlusHandles& FXHandles, struct FVector& Location, struct FRotator& Rotation); // Function Phoenix.MultiFXManager.SpawnMultiFXPlus // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336db20
	struct FMultiFXHandle SpawnMultiFXAttached(struct FMultiFX& MultiFX, struct USceneComponent* AttachToComponent, struct FMaterialSwapParameters& MaterialSwapParameters, struct FName AttachPointName, struct FVector& Location, struct FRotator& Rotation, struct FVector& Scale, enum class EAttachLocation LocationType, bool bAutoDestroy); // Function Phoenix.MultiFXManager.SpawnMultiFXAttached // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336d790
	struct FMultiFXHandle SpawnMultiFXAtLocation(struct FMultiFX& MultiFX, struct UObject* WorldContextObject, struct FMaterialSwapParameters& MaterialSwapParameters, struct FVector& Location, struct FRotator& Rotation, struct FVector& Scale, bool bAutoDestroy); // Function Phoenix.MultiFXManager.SpawnMultiFXAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336d490
	void SetVfxRotation(struct FMultiFXHandle& InHandle, struct FRotator& Rotation); // Function Phoenix.MultiFXManager.SetVfxRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336d3b0
	void SetVfxLocation(struct FMultiFXHandle& InHandle, struct FVector& Location); // Function Phoenix.MultiFXManager.SetVfxLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336d2d0
	void SetCustomTimeDilation(struct FMultiFXHandle& InHandle, float Dilation); // Function Phoenix.MultiFXManager.SetCustomTimeDilation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336d1f0
	void MovementStopped(struct AActor* InActor); // Function Phoenix.MultiFXManager.MovementStopped // (Final|Native|Private) // @ game+0x336cf00
	bool IsVfxPlaying(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.IsVfxPlaying // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336cd80
	bool IsVfxLooping(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.IsVfxLooping // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336ccf0
	bool IsValid(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.IsValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336cc60
	bool IsPlusComplete(struct FMultiFXPlusHandles& InHandles); // Function Phoenix.MultiFXManager.IsPlusComplete // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336cbb0
	struct FRotator GetVfxRotation(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetVfxRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336ca80
	struct FVector GetVfxLocation(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetVfxLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x336c9e0
	struct USkinFXComponent* GetSkinFxComponent(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetSkinFxComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c950
	int32_t GetSfxHandle(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetSfxHandle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c8c0
	struct UParticleSystemComponent* GetParticleSystemComponent(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetParticleSystemComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c830
	struct UNiagaraComponent* GetNiagaraComponent(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetNiagaraComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c7a0
	float GetCustomTimeDilation(struct FMultiFXHandle& InHandle); // Function Phoenix.MultiFXManager.GetCustomTimeDilation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c3e0
	void DetachVfxRule(struct FMultiFXHandle& InHandle, enum class EDetachmentRule DetachmentRules); // Function Phoenix.MultiFXManager.DetachVfxRule // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c280
	void DestroyPlus(struct FMultiFXPlusHandles& InHandles, bool bImmediate, enum class ESkinFXEffectEndStyle EndStyle); // Function Phoenix.MultiFXManager.DestroyPlus // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c150
	void Destroy(struct FMultiFXHandle& InHandle, bool bImmediate, enum class ESkinFXEffectEndStyle EndStyle); // Function Phoenix.MultiFXManager.Destroy // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x336c030
};

// Class Phoenix.FXAdjustments_LocalOffset
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_LocalOffset : UFXAdjustments {
	struct FVector LocalOffset; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXAdjustments_Offset
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_Offset : UFXAdjustments {
	struct FVector Offset; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXAdjustments_ApplyRotation
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_ApplyRotation : UFXAdjustments {
	struct FRotator Rotation; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXAdjustments_Scale
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_Scale : UFXAdjustments {
	struct FVector Scale; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXAdjustments_InstigatorScale
// Size: 0x28 (Inherited: 0x28)
struct UFXAdjustments_InstigatorScale : UFXAdjustments {
};

// Class Phoenix.FXAdjustments_Location
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_Location : UFXAdjustments {
	enum class EMultiFXLocation Location; // 0x28(0x01)
	bool bFailIfNotFound; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.FXAdjustments_Orientation
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_Orientation : UFXAdjustments {
	enum class EMultiFXOrientation Orientation; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_MakeInstigatorTheTarget
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_MakeInstigatorTheTarget : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_TargetCharacter
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_TargetCharacter : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_TargetSkeleton
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_TargetSkeleton : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_TargetRootActor
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_TargetRootActor : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_TargetWeapon
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_TargetWeapon : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_TargetGeometryCollection
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_TargetGeometryCollection : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_InstigatorCharacter
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_InstigatorCharacter : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_FindNearbyTarget
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_FindNearbyTarget : UFXAdjustments {
	struct AActor* ActorType; // 0x28(0x08)
	float Range; // 0x30(0x04)
	bool bFailIfNotFound; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.FXAdjustments_FindNearbyTargetInHeirarchy
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_FindNearbyTargetInHeirarchy : UFXAdjustments {
	struct AActor* ActorType; // 0x28(0x08)
	bool bFailIfNotFound; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXAdjustments_Or
// Size: 0x40 (Inherited: 0x28)
struct UFXAdjustments_Or : UFXAdjustments {
	struct TArray<struct UFXAdjustments*> Adjustments; // 0x28(0x10)
	bool bFailIfNotFound; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.FXAdjustments_ConditionalAdjustments
// Size: 0x50 (Inherited: 0x28)
struct UFXAdjustments_ConditionalAdjustments : UFXAdjustments {
	struct TArray<struct UFXFilter*> Filters; // 0x28(0x10)
	struct TArray<struct UFXAdjustments*> ConitionalAdjustments; // 0x38(0x10)
	bool bFailIfNotFound; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.FXAdjustments_UseBone
// Size: 0x40 (Inherited: 0x28)
struct UFXAdjustments_UseBone : UFXAdjustments {
	struct TArray<struct FName> BoneNames; // 0x28(0x10)
	bool bLocation; // 0x38(0x01)
	bool bRotation; // 0x39(0x01)
	bool bFailIfNotFound; // 0x3a(0x01)
	char pad_3B[0x5]; // 0x3b(0x05)
};

// Class Phoenix.FXAdjustments_SetAttachNameToNearestBone
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_SetAttachNameToNearestBone : UFXAdjustments {
	bool bFailIfNotFound; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAdjustments_OnGround
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustments_OnGround : UFXAdjustments {
	float TraceDistance; // 0x28(0x04)
	float TraceRadius; // 0x2c(0x04)
	bool bPlayIfNoGround; // 0x30(0x01)
	bool bUseGroundTarget; // 0x31(0x01)
	bool bUseGroundPosition; // 0x32(0x01)
	bool bUseGoundNormalOrientation; // 0x33(0x01)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.BeamTarget
// Size: 0x220 (Inherited: 0x220)
struct UBeamTarget : USceneComponent {
};

// Class Phoenix.FXAdjustments_Beam
// Size: 0x30 (Inherited: 0x28)
struct UFXAdjustments_Beam : UFXAdjustments {
	enum class EMultiFXBeamSource SourceObject; // 0x28(0x01)
	enum class EMultiFXLocation SourceLocation; // 0x29(0x01)
	enum class EMultiFXLocation TargetLocation; // 0x2a(0x01)
	char pad_2B[0x5]; // 0x2b(0x05)
};

// Class Phoenix.MultiFX2_ExplodingSkeletonInfoBase
// Size: 0x28 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonInfoBase : UObject {
};

// Class Phoenix.MultiFX2_ExplodingSkeletonInfoStandard
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonInfoStandard : UMultiFX2_ExplodingSkeletonInfoBase {
	bool bUseDitheredAlphaFade; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.MultiFX2_ExplodingSkeletonInfoCollisionOverride
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonInfoCollisionOverride : UMultiFX2_ExplodingSkeletonInfoBase {
	struct FName CollisionProfileName; // 0x28(0x08)
};

// Class Phoenix.MultiFX2_ExplodingSkeletonFade
// Size: 0x38 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonFade : UMultiFX2_ExplodingSkeletonInfoBase {
	struct FName FadeMaterialKey; // 0x28(0x08)
	struct FName FadeMaterialParmeter; // 0x30(0x08)
};

// Class Phoenix.MultiFX2_ExplodingSkeletonMIDFade
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonMIDFade : UMultiFX2_ExplodingSkeletonInfoBase {
	struct FName FadeMaterialParmeter; // 0x28(0x08)
};

// Class Phoenix.MultiFX2_ExplodingSkeletonSkinFX
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_ExplodingSkeletonSkinFX : UMultiFX2_ExplodingSkeletonInfoBase {
	struct ASkinFXDefinition* SkinFXEffect; // 0x28(0x08)
};

// Class Phoenix.MultiFX2_ExplodingSkeleton
// Size: 0xb8 (Inherited: 0x68)
struct UMultiFX2_ExplodingSkeleton : UMultiFX2_Filtered {
	struct UMultiFX2_ExplodingSkeletonInfoBase* Info; // 0x68(0x08)
	struct UExplodingSkeletonPieceSetup* PieceSetup; // 0x70(0x08)
	struct FName OverrideCollisionProfile; // 0x78(0x08)
	struct FVector LinearImpulse; // 0x80(0x0c)
	bool bUseLinearImpulseOrigin; // 0x8c(0x01)
	bool bUseInstigatorToTargetAsX; // 0x8d(0x01)
	bool bUseNpcImpactDataForImpulse; // 0x8e(0x01)
	char pad_8F[0x1]; // 0x8f(0x01)
	float LinearImpulseStrength; // 0x90(0x04)
	float RadialImpulseRadius; // 0x94(0x04)
	float RadialImpulseStrength; // 0x98(0x04)
	bool bRadialImpulseFalloff; // 0x9c(0x01)
	bool bUseSkeletalCentroidAsImpulseOrigin; // 0x9d(0x01)
	char pad_9E[0x2]; // 0x9e(0x02)
	struct FExplodingSkeletonInitialDelay InitialDelay; // 0xa0(0x0c)
	struct FVector BaseOffset; // 0xac(0x0c)
};

// Class Phoenix.MultiFX2_Vfx
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_Vfx : UMultiFX2_Filtered {
	struct UParticleSystem* VFX; // 0x68(0x08)
	bool bAttached; // 0x70(0x01)
	bool bIgnoreDeactivate; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.MultiFX2_VfxBones
// Size: 0x90 (Inherited: 0x78)
struct UMultiFX2_VfxBones : UMultiFX2_Vfx {
	int32_t MaxBoneFX; // 0x78(0x04)
	bool bRandomBone; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
	struct TArray<struct FName> BoneList; // 0x80(0x10)
};

// Class Phoenix.MultiFX2_NiagraSpawnInfoBase
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_NiagraSpawnInfoBase : UObject {
	float Delay; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.MultiFX2_NiagraStandardSpawnInfo
// Size: 0x30 (Inherited: 0x30)
struct UMultiFX2_NiagraStandardSpawnInfo : UMultiFX2_NiagraSpawnInfoBase {
};

// Class Phoenix.MultiFX2_NiagraSkeletalSpawnInfo
// Size: 0xd0 (Inherited: 0x30)
struct UMultiFX2_NiagraSkeletalSpawnInfo : UMultiFX2_NiagraSpawnInfoBase {
	struct FNiagaraHelpersPrimFilter Filter; // 0x30(0x18)
	char pad_48[0x8]; // 0x48(0x08)
	struct FNiagaraSystemSpawnMultiSkeletalInfo SpawnInfo; // 0x50(0x80)
};

// Class Phoenix.MultiFX2_NiagraStaticalSpawnInfo
// Size: 0xd0 (Inherited: 0x30)
struct UMultiFX2_NiagraStaticalSpawnInfo : UMultiFX2_NiagraSpawnInfoBase {
	struct FNiagaraHelpersPrimFilter Filter; // 0x30(0x18)
	char pad_48[0x8]; // 0x48(0x08)
	struct FNiagaraSystemSpawnMultiStaticInfo SpawnInfo; // 0x50(0x80)
};

// Class Phoenix.MultiFX2_NiagraPrimSpawnInfo
// Size: 0xc0 (Inherited: 0x30)
struct UMultiFX2_NiagraPrimSpawnInfo : UMultiFX2_NiagraSpawnInfoBase {
	struct FNiagaraHelpersPrimFilter Filter; // 0x30(0x18)
	char pad_48[0x8]; // 0x48(0x08)
	struct FNiagaraSystemSpawnAttachedInfo SpawnInfo; // 0x50(0x70)
};

// Class Phoenix.MultiFX2_NiagraBoneListSpawnInfo
// Size: 0x50 (Inherited: 0x30)
struct UMultiFX2_NiagraBoneListSpawnInfo : UMultiFX2_NiagraSpawnInfoBase {
	int32_t MaxBoneFX; // 0x30(0x04)
	bool bRandomBone; // 0x34(0x01)
	bool bUseLR; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	struct TArray<struct FName> BoneList; // 0x38(0x10)
	bool bOptimized; // 0x48(0x01)
	bool bShowBoneList; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
};

// Class Phoenix.MultiFX2_NiagraBoneListSpawnInfoByType
// Size: 0xa0 (Inherited: 0x50)
struct UMultiFX2_NiagraBoneListSpawnInfoByType : UMultiFX2_NiagraBoneListSpawnInfo {
	struct TMap<enum class EBoneTargetType, struct FBoneListSpawnInfo> TypeMap; // 0x50(0x50)
};

// Class Phoenix.MultiFX2_NiagraPropertyBase
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_NiagraPropertyBase : UObject {
	struct FName PropertyName; // 0x28(0x08)
};

// Class Phoenix.MultiFX2_UMultiFX2_NiagraPropertyVelocity
// Size: 0x38 (Inherited: 0x30)
struct UMultiFX2_UMultiFX2_NiagraPropertyVelocity : UMultiFX2_NiagraPropertyBase {
	enum class ENiagraPropertyTarget TargetType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2_UMultiFX2_NiagraPropertyActorCenter
// Size: 0x38 (Inherited: 0x30)
struct UMultiFX2_UMultiFX2_NiagraPropertyActorCenter : UMultiFX2_NiagraPropertyBase {
	enum class ENiagraPropertyTarget TargetType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2_UMultiFX2_NiagraPropertyActorExtents
// Size: 0x38 (Inherited: 0x30)
struct UMultiFX2_UMultiFX2_NiagraPropertyActorExtents : UMultiFX2_NiagraPropertyBase {
	enum class ENiagraPropertyTarget TargetType; // 0x30(0x01)
	bool FullExtent; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.MultiFX2_UMultiFX2_NiagraPropertyActorWaterHeight
// Size: 0x38 (Inherited: 0x30)
struct UMultiFX2_UMultiFX2_NiagraPropertyActorWaterHeight : UMultiFX2_NiagraPropertyBase {
	enum class ENiagraPropertyTarget TargetType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2_NiagraBase
// Size: 0x80 (Inherited: 0x68)
struct UMultiFX2_NiagraBase : UMultiFX2_Filtered {
	struct UMultiFX2_NiagraSpawnInfoBase* SpawnInfo; // 0x68(0x08)
	struct TArray<struct UMultiFX2_NiagraPropertyBase*> NiagaraProperties; // 0x70(0x10)
};

// Class Phoenix.MultiFX2_NiagraVfx
// Size: 0x90 (Inherited: 0x80)
struct UMultiFX2_NiagraVfx : UMultiFX2_NiagraBase {
	struct UNiagaraSystem* NiagaraVFX; // 0x80(0x08)
	bool bAttached; // 0x88(0x01)
	bool bIgnoreDeactivate; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
};

// Class Phoenix.MultiFX2_NiagraVfxWithVars
// Size: 0x90 (Inherited: 0x80)
struct UMultiFX2_NiagraVfxWithVars : UMultiFX2_NiagraBase {
	struct UNiagaraSystemWithVars* NiagaraVfxWithVars; // 0x80(0x08)
	bool bAttached; // 0x88(0x01)
	bool bIgnoreDeactivate; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
};

// Class Phoenix.MultiFX2_Water_Ripple
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_Water_Ripple : UMultiFX2_Filtered {
	float Radius; // 0x68(0x04)
	float Intensity; // 0x6c(0x04)
	float Duration; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.MultiFX2_Water_Ripple_Curve
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_Water_Ripple_Curve : UMultiFX2_Filtered {
	enum class ENiagraWaterRippleCurveProperty SourceProperty; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UCurveFloat* CurveRadius; // 0x70(0x08)
	struct UCurveFloat* CurveIntensity; // 0x78(0x08)
	struct UCurveFloat* CurveDuration; // 0x80(0x08)
};

// Class Phoenix.MultiFX2_Sfx
// Size: 0x90 (Inherited: 0x68)
struct UMultiFX2_Sfx : UMultiFX2_Filtered {
	char pad_68[0x10]; // 0x68(0x10)
	struct UAkAudioEvent* SFX; // 0x78(0x08)
	bool bPlayAtLocation; // 0x80(0x01)
	bool bIgnoreDeactivate; // 0x81(0x01)
	bool bStopWhenTargetDestroyed; // 0x82(0x01)
	bool bUseExistingAKComponent; // 0x83(0x01)
	bool bNoOcclusionOnPlayerTarget; // 0x84(0x01)
	bool bNoOcclusionOnPlayerInstigator; // 0x85(0x01)
	enum class ESfxOcclusion Occlusion; // 0x86(0x01)
	bool bUseMotionListener; // 0x87(0x01)
	bool bUsePlayerOrientatedMotionListener; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)

	void OnAkPostEventFunc(enum class EAkCallbackType CallbackType, struct UAkCallbackInfo* CallbackInfo); // Function Phoenix.MultiFX2_Sfx.OnAkPostEventFunc // (Final|Native|Protected|Const) // @ game+0x3374c20
};

// Class Phoenix.MultiFX2_SfxEndSfx
// Size: 0x98 (Inherited: 0x90)
struct UMultiFX2_SfxEndSfx : UMultiFX2_Sfx {
	struct UAkAudioEvent* EndSfx; // 0x90(0x08)
};

// Class Phoenix.MultiFX2_Dialogue
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_Dialogue : UMultiFX2_Filtered {
	struct UAvaAudioDialogueEvent* DialogueEvent; // 0x68(0x08)
	struct FString DialogueEventName; // 0x70(0x10)
	bool bStopWhenAttachedToDestroyed; // 0x80(0x01)
	enum class AvaAudioDialogueFlags flags; // 0x81(0x01)
	bool bIgnoreDeactivate; // 0x82(0x01)
	char pad_83[0x5]; // 0x83(0x05)
};

// Class Phoenix.MultiFX2_SkinFx
// Size: 0x260 (Inherited: 0x68)
struct UMultiFX2_SkinFx : UMultiFX2_Filtered {
	struct ASkinFXDefinition* SkinFX; // 0x68(0x08)
	struct FMaterialSwapParameters Params; // 0x70(0x50)
	struct FMaterialSwapRules Rules; // 0xc0(0xe0)
	struct FSkinFXASREnvelope EnvelopeOverride; // 0x1a0(0x2c)
	float TimeScale; // 0x1cc(0x04)
	struct FNiagaraMaterialDriverSetup NiagaraOverride; // 0x1d0(0x78)
	struct TArray<struct UMaterialSwapMeshState*> OverrideMeshStates; // 0x248(0x10)
	enum class ESkinFXEffectEndStyle EndStyle; // 0x258(0x01)
	struct FMultiFX2_SkinFxImpactOptions ImpactOptions; // 0x259(0x01)
	bool bUseEnvelopeOverride; // 0x25a(0x01)
	bool bUseNiagaraOverride; // 0x25b(0x01)
	bool bUseMeshStatesOverride; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
};

// Class Phoenix.MultiFX2_MaterialPermuterSwapInfoBase
// Size: 0x28 (Inherited: 0x28)
struct UMultiFX2_MaterialPermuterSwapInfoBase : UObject {
};

// Class Phoenix.MultiFX2_MaterialPermuterSwapInfoKey
// Size: 0x138 (Inherited: 0x28)
struct UMultiFX2_MaterialPermuterSwapInfoKey : UMultiFX2_MaterialPermuterSwapInfoBase {
	struct FMaterialSwapKeyUI SwapInfo; // 0x28(0x110)
};

// Class Phoenix.MultiFX2_MaterialPermuterSwapInfoInPlaceMIDs
// Size: 0x128 (Inherited: 0x28)
struct UMultiFX2_MaterialPermuterSwapInfoInPlaceMIDs : UMultiFX2_MaterialPermuterSwapInfoBase {
	struct FMaterialSwapInfoInPlaceMIDs SwapInfo; // 0x28(0x100)
};

// Class Phoenix.MultiFX2_MaterialPermuterSwapInfoOverrideMaterial
// Size: 0x138 (Inherited: 0x28)
struct UMultiFX2_MaterialPermuterSwapInfoOverrideMaterial : UMultiFX2_MaterialPermuterSwapInfoBase {
	struct FMaterialSwapInfoOverrideMaterial SwapInfo; // 0x28(0x110)
};

// Class Phoenix.MultiFX2_MaterialPermuterSwapInfoOverrideMaterials
// Size: 0x140 (Inherited: 0x28)
struct UMultiFX2_MaterialPermuterSwapInfoOverrideMaterials : UMultiFX2_MaterialPermuterSwapInfoBase {
	struct FMaterialSwapInfoOverrideMaterials SwapInfo; // 0x28(0x118)
};

// Class Phoenix.MultiFX2_MaterialPermuterSwap
// Size: 0xc0 (Inherited: 0x68)
struct UMultiFX2_MaterialPermuterSwap : UMultiFX2_Filtered {
	struct UMultiFX2_MaterialPermuterSwapInfoBase* SwapInfo; // 0x68(0x08)
	struct FMaterialSwapParameters Parameters; // 0x70(0x50)
};

// Class Phoenix.MultiFX2_ActorMeshStates
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_ActorMeshStates : UMultiFX2_Filtered {
	struct TArray<struct UMaterialSwapMeshState*> MeshStates; // 0x68(0x10)
	struct FName MeshStatesTag; // 0x78(0x08)
	bool bUpdateOnTick; // 0x80(0x01)
	bool bDependOnInstigator; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
};

// Class Phoenix.MultiFX2_ActorMeshStatesSimple
// Size: 0x90 (Inherited: 0x88)
struct UMultiFX2_ActorMeshStatesSimple : UMultiFX2_ActorMeshStates {
	bool bIncludeChildren; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.MultiFX2_ActorMeshStatesRules
// Size: 0x168 (Inherited: 0x88)
struct UMultiFX2_ActorMeshStatesRules : UMultiFX2_ActorMeshStates {
	struct FMaterialSwapRules Rules; // 0x88(0xe0)
};

// Class Phoenix.MultiFX2_Decal
// Size: 0xa8 (Inherited: 0x68)
struct UMultiFX2_Decal : UMultiFX2_Filtered {
	bool bAttached; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UMaterialInterface* Material; // 0x70(0x08)
	struct FVector Size; // 0x78(0x0c)
	float FadeInDelay; // 0x84(0x04)
	float FadeInTime; // 0x88(0x04)
	float LifeSpan; // 0x8c(0x04)
	float FadeTime; // 0x90(0x04)
	enum class EDecalOrientation DecalOrientation; // 0x94(0x01)
	char pad_95[0x3]; // 0x95(0x03)
	struct FVector DecalLocalOffset; // 0x98(0x0c)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.MultiFX2_Footprint
// Size: 0xb8 (Inherited: 0x68)
struct UMultiFX2_Footprint : UMultiFX2_Filtered {
	struct TMap<enum class EFootprintTypes, struct FMultiFX2_FootprintInfo> InfoMap; // 0x68(0x50)
};

// Class Phoenix.MultiFX2_Decal3D
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_Decal3D : UMultiFX2_Filtered {
	struct UObject* Decal3D; // 0x68(0x08)
	bool Decal3DRandomOrientation; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float LifeSpan; // 0x74(0x04)
};

// Class Phoenix.MultiFX2_CameraShake
// Size: 0x80 (Inherited: 0x68)
struct UMultiFX2_CameraShake : UMultiFX2_Filtered {
	struct UCameraShakeBase* CameraShake; // 0x68(0x08)
	float InnerRadius; // 0x70(0x04)
	float OuterRadius; // 0x74(0x04)
	float Falloff; // 0x78(0x04)
	bool bOrientShakeTowardsEpicenter; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
};

// Class Phoenix.MultiFX2_ForceFeedback
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_ForceFeedback : UMultiFX2_Filtered {
	struct UForceFeedbackEffect* ForceFeedbackEffect; // 0x68(0x08)
	float InnerRadius; // 0x70(0x04)
	float OuterRadius; // 0x74(0x04)
};

// Class Phoenix.MultiFX2_GameEvent
// Size: 0x98 (Inherited: 0x68)
struct UMultiFX2_GameEvent : UMultiFX2_Filtered {
	struct FGameplayTagContainer TagContainer; // 0x68(0x20)
	enum class EGameEvent_Intensity Intensity; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float Duration; // 0x8c(0x04)
	float Range; // 0x90(0x04)
	float Falloff; // 0x94(0x04)
};

// Class Phoenix.MultiFX2_SpawnActor
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_SpawnActor : UMultiFX2_Filtered {
	struct AActor* SpawnActorClass; // 0x68(0x08)
	bool bAttached; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float LifeSpan; // 0x74(0x04)
	bool bDestroyActorOnDeactivate; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	struct FName HermesMesageOnDeactivate; // 0x7c(0x08)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.MultiFX2_CombatCursed
// Size: 0x68 (Inherited: 0x68)
struct UMultiFX2_CombatCursed : UMultiFX2_Filtered {
};

// Class Phoenix.MultiFX2_EnableCCD
// Size: 0x70 (Inherited: 0x68)
struct UMultiFX2_EnableCCD : UMultiFX2_Filtered {
	float Duration; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.MultiFX2_SceneComponent
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_SceneComponent : UMultiFX2_Filtered {
	struct USceneComponent* SpawnSceneComponentClass; // 0x68(0x08)
	bool bAttached; // 0x70(0x01)
	bool bIgnoreDeactivate; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.MultiFX2_SkeletalComponent
// Size: 0x80 (Inherited: 0x68)
struct UMultiFX2_SkeletalComponent : UMultiFX2_Filtered {
	struct USkeletalMesh* SkeletalMesh; // 0x68(0x08)
	struct UAnimationAsset* Anim; // 0x70(0x08)
	bool bLooped; // 0x78(0x01)
	bool bAttached; // 0x79(0x01)
	bool bIgnoreDeactivate; // 0x7a(0x01)
	char pad_7B[0x5]; // 0x7b(0x05)
};

// Class Phoenix.MultiFX2_Stencil
// Size: 0x70 (Inherited: 0x68)
struct UMultiFX2_Stencil : UMultiFX2_Filtered {
	char StencilValue; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Phoenix.MultiFX2_StencilEffect
// Size: 0x70 (Inherited: 0x68)
struct UMultiFX2_StencilEffect : UMultiFX2_Filtered {
	struct FName StencilEffect; // 0x68(0x08)
};

// Class Phoenix.MultiFX2_CustomDepthLockBase
// Size: 0x68 (Inherited: 0x68)
struct UMultiFX2_CustomDepthLockBase : UMultiFX2_Filtered {
};

// Class Phoenix.MultiFX2_CustomDepthLock
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_CustomDepthLock : UMultiFX2_CustomDepthLockBase {
	struct FStencilValueRenderCustomDepthFilter Filter; // 0x68(0x18)
	char StencilValue; // 0x80(0x01)
	bool bRenderCustomDepth; // 0x81(0x01)
	char pad_82[0x2]; // 0x82(0x02)
	int32_t StencilLockPriority; // 0x84(0x04)
};

// Class Phoenix.MultiFX2_MaterialParameterBase
// Size: 0x90 (Inherited: 0x68)
struct UMultiFX2_MaterialParameterBase : UMultiFX2_Filtered {
	struct FName MaterialName; // 0x68(0x08)
	int32_t MaterialIndex; // 0x70(0x04)
	bool bApplyToAll; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	struct FName ParameterName; // 0x78(0x08)
	struct FName MeshName; // 0x80(0x08)
	bool bApplyToAllMeshes; // 0x88(0x01)
	bool bCreateMIDs; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
};

// Class Phoenix.MultiFX2_MaterialParameterScalar
// Size: 0x98 (Inherited: 0x90)
struct UMultiFX2_MaterialParameterScalar : UMultiFX2_MaterialParameterBase {
	float ScalarParameter; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.MultiFX2_MaterialParameterVector
// Size: 0xa0 (Inherited: 0x90)
struct UMultiFX2_MaterialParameterVector : UMultiFX2_MaterialParameterBase {
	struct FVector VectorParameter; // 0x90(0x0c)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.MultiFX2_MaterialParameterColor
// Size: 0xa0 (Inherited: 0x90)
struct UMultiFX2_MaterialParameterColor : UMultiFX2_MaterialParameterBase {
	struct FLinearColor ColorParameter; // 0x90(0x10)
};

// Class Phoenix.MultiFX2_MaterialParameterCurve
// Size: 0xa0 (Inherited: 0x90)
struct UMultiFX2_MaterialParameterCurve : UMultiFX2_MaterialParameterBase {
	struct UCurveBase* CurveParameter; // 0x90(0x08)
	float UpdateRate; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.MultiFX2_HermesEvent
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_HermesEvent : UMultiFX2_Filtered {
	struct FString HermesMessage; // 0x68(0x10)
};

// Class Phoenix.MultiFX2_WindPointSource
// Size: 0xa0 (Inherited: 0x68)
struct UMultiFX2_WindPointSource : UMultiFX2_Filtered {
	struct UWindEnvelopeController* Envelope; // 0x68(0x08)
	int32_t EnvelopeAffects; // 0x70(0x04)
	float Radius; // 0x74(0x04)
	float InnerRadius; // 0x78(0x04)
	float Strength; // 0x7c(0x04)
	float Speed; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UWindGustController* WindGustController; // 0x88(0x08)
	float OutdoorsOnly; // 0x90(0x04)
	float Priority; // 0x94(0x04)
	bool bAutoKillAfterEnvelope; // 0x98(0x01)
	bool bAttached; // 0x99(0x01)
	enum class EWindSourceCombine SourceCombine; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Phoenix.MultiFX2_WindDirectionalSource
// Size: 0xa0 (Inherited: 0x68)
struct UMultiFX2_WindDirectionalSource : UMultiFX2_Filtered {
	struct UWindEnvelopeController* Envelope; // 0x68(0x08)
	enum class EWindDirectionalEnvelopeAffects EnvelopeAffects; // 0x70(0x01)
	char pad_71[0x3]; // 0x71(0x03)
	float Strength; // 0x74(0x04)
	float Speed; // 0x78(0x04)
	float BlendDistance; // 0x7c(0x04)
	bool bUseScaleAsBounds; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct UWindGustController* WindGustController; // 0x88(0x08)
	float OutdoorsOnly; // 0x90(0x04)
	float Priority; // 0x94(0x04)
	bool bAutoKillAfterEnvelope; // 0x98(0x01)
	bool bAttached; // 0x99(0x01)
	enum class EWindSourceCombine SourceCombine; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Phoenix.MultiFX2_WindVortexSource
// Size: 0xa0 (Inherited: 0x68)
struct UMultiFX2_WindVortexSource : UMultiFX2_Filtered {
	struct UWindEnvelopeController* Envelope; // 0x68(0x08)
	int32_t EnvelopeAffects; // 0x70(0x04)
	float Height; // 0x74(0x04)
	float Radius; // 0x78(0x04)
	float InnerRadius; // 0x7c(0x04)
	float Strength; // 0x80(0x04)
	float Speed; // 0x84(0x04)
	struct UWindGustController* WindGustController; // 0x88(0x08)
	float OutdoorsOnly; // 0x90(0x04)
	float Priority; // 0x94(0x04)
	bool bAutoKillAfterEnvelope; // 0x98(0x01)
	bool bAttached; // 0x99(0x01)
	enum class EWindSourceCombine SourceCombine; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Phoenix.MultiFX2_AddIAGameplayTags
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_AddIAGameplayTags : UMultiFX2_Filtered {
	struct FGameplayTagContainer GameplayTags; // 0x68(0x20)
};

// Class Phoenix.MultiFX2_RemoveIAGameplayTags
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_RemoveIAGameplayTags : UMultiFX2_Filtered {
	struct FGameplayTagContainer GameplayTags; // 0x68(0x20)
};

// Class Phoenix.MultiFX2_SetPhysicalMaterial
// Size: 0x70 (Inherited: 0x68)
struct UMultiFX2_SetPhysicalMaterial : UMultiFX2_Filtered {
	struct UPhysicalMaterial* PhysicalMaterial; // 0x68(0x08)
};

// Class Phoenix.MultiFX2_SetHidden
// Size: 0x68 (Inherited: 0x68)
struct UMultiFX2_SetHidden : UMultiFX2_Filtered {
};

// Class Phoenix.MultiFX2_PlayOne
// Size: 0x78 (Inherited: 0x68)
struct UMultiFX2_PlayOne : UMultiFX2_Filtered {
	struct TArray<struct UMultiFX2_Base*> PlayOneFXBaseArray; // 0x68(0x10)
};

// Class Phoenix.MultiFX2End_Vfx
// Size: 0x38 (Inherited: 0x28)
struct UMultiFX2End_Vfx : UFXEnd {
	struct UParticleSystem* VFX; // 0x28(0x08)
	bool bAttached; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2End_NiagraVfx
// Size: 0x38 (Inherited: 0x28)
struct UMultiFX2End_NiagraVfx : UFXEnd {
	struct UNiagaraSystem* NiagaraVFX; // 0x28(0x08)
	bool bAttached; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2End_Sfx
// Size: 0x38 (Inherited: 0x28)
struct UMultiFX2End_Sfx : UFXEnd {
	struct UAkAudioEvent* SFX; // 0x28(0x08)
	bool bPlayOnExistingAkComponent; // 0x30(0x01)
	bool bPlayAtLocation; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.MultiFX2End_MultiFX2
// Size: 0x38 (Inherited: 0x28)
struct UMultiFX2End_MultiFX2 : UFXEnd {
	struct TArray<struct UMultiFX2_Base*> endFX; // 0x28(0x10)
};

// Class Phoenix.MultiFX2End_Fadeout
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2End_Fadeout : UFXEnd {
	float FadeOutTime; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)

	void EndFade(struct FMultiFX2Handle InHandle, struct UMultiFX2_Base* FXBase); // Function Phoenix.MultiFX2End_Fadeout.EndFade // (Final|Native|Protected) // @ game+0x337afd0
};

// Class Phoenix.FXFilter_IsCharacter
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsCharacter : UFXFilter {
};

// Class Phoenix.FXFilter_IsPlayer
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_IsPlayer : UFXFilter {
	bool TreatPlayerMountAsPlayer; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXFilter_IsCompanion
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsCompanion : UFXFilter {
};

// Class Phoenix.FXFilter_IsPlayerDueling
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsPlayerDueling : UFXFilter {
};

// Class Phoenix.FXFilter_IsSimulatingPhysics
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsSimulatingPhysics : UFXFilter {
};

// Class Phoenix.FXFilter_IsCreature
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsCreature : UFXFilter {
};

// Class Phoenix.FXFilter_IsMount
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsMount : UFXFilter {
};

// Class Phoenix.FXFilter_IsMounted
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsMounted : UFXFilter {
};

// Class Phoenix.FXFilter_IsActor
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsActor : UFXFilter {
};

// Class Phoenix.FXFilter_IsOnGround
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsOnGround : UFXFilter {
};

// Class Phoenix.FXFilter_InstigatorIsPlayer
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_InstigatorIsPlayer : UFXFilter {
};

// Class Phoenix.FXFilter_IsBroken
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsBroken : UFXFilter {
};

// Class Phoenix.FXFilter_IsDead
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_IsDead : UFXFilter {
	bool ConsiderTakeAKneeDead; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXFilter_IsArmed
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_IsArmed : UFXFilter {
};

// Class Phoenix.FXFilter_IsValidSize
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_IsValidSize : UFXFilter {
	enum class EObjectSizeClass SmallestValidSize; // 0x30(0x01)
	enum class EObjectSizeClass LargestValidSize; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.FXFilter_IsValidDbId
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_IsValidDbId : UFXFilter {
	struct TArray<struct FName> ValidDbIds; // 0x30(0x10)
};

// Class Phoenix.FXFilter_IsValidSubtype
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_IsValidSubtype : UFXFilter {
	struct TArray<struct FName> ValidSubtypes; // 0x30(0x10)
};

// Class Phoenix.FXFilter_IsValidClass
// Size: 0x48 (Inherited: 0x30)
struct UFXFilter_IsValidClass : UFXFilter {
	struct TArray<struct TSoftClassPtr<UObject>> ValidClasses; // 0x30(0x10)
	bool bIncludeParents; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Phoenix.FXFilter_SecondsBetweenSpawns
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_SecondsBetweenSpawns : UFXFilter {
	float SecondsBetweenSpawns; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXFilter_RepeatMode
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_RepeatMode : UFXFilter {
	enum class EMultiFXRepeat RepeatMode; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	int32_t MaxCount; // 0x34(0x04)
	bool bImmediate; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Phoenix.FXFilter_Spell
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_Spell : UFXFilter {
	enum class EMultiFXSpell SpellCondition; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXFilter_SpellUpgrade
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_SpellUpgrade : UFXFilter {
	enum class ESpellUpgrades SpellUpgrade; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXFilter_SpellType
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_SpellType : UFXFilter {
	struct TArray<struct FName> SpellNames; // 0x30(0x10)
};

// Class Phoenix.FXFilter_HasIAGameplayTag
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_HasIAGameplayTag : UFXFilter {
	enum class EMultiFXActor Actor; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FGameplayTag GameplayTag; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.FXFilter_State
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_State : UFXFilter {
	enum class EMultiFXState State; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.FXFilter_Season
// Size: 0x38 (Inherited: 0x30)
struct UFXFilter_Season : UFXFilter {
	bool bSummer; // 0x30(0x01)
	bool bFall; // 0x31(0x01)
	bool bWinter; // 0x32(0x01)
	bool bSpring; // 0x33(0x01)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.FXFilter_ValuePropertyCompare
// Size: 0x48 (Inherited: 0x30)
struct UFXFilter_ValuePropertyCompare : UFXFilter {
	enum class EMultiFXPropertyOwner PropertyOwner; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FName Name; // 0x34(0x08)
	enum class EMultiFXCompare Condition; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
	float Value; // 0x40(0x04)
	enum class EMultiFXVectorExtension VectorUsage; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Phoenix.FXFilter_Disable
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_Disable : UFXFilter {
};

// Class Phoenix.FXFilter_Or
// Size: 0x40 (Inherited: 0x30)
struct UFXFilter_Or : UFXFilter {
	struct TArray<struct UFXFilter*> Filters; // 0x30(0x10)
};

// Class Phoenix.MultiFX2Poke
// Size: 0x28 (Inherited: 0x28)
struct UMultiFX2Poke : UBlueprintFunctionLibrary {

	void FXPokeSkinFXVectorParameter(struct FMultiFX2Handle& FXHandle, struct ASkinFXDefinition* FX, struct FName Parameter, struct FVector Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeSkinFXVectorParameter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x337cf10
	void FXPokeSkinFXScalarParameter(struct FMultiFX2Handle& FXHandle, struct ASkinFXDefinition* FX, struct FName Parameter, float Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeSkinFXScalarParameter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337cd60
	void FXPokeSkinFXParameters(struct FMultiFX2Handle& FXHandle, struct ASkinFXDefinition* FX, struct FMaterialSwapParameters Parameters, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeSkinFXParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337ca70
	void FXPokeSkinFXColorParameter(struct FMultiFX2Handle& FXHandle, struct ASkinFXDefinition* FX, struct FName Parameter, struct FLinearColor Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeSkinFXColorParameter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x337c8b0
	void FXPokeNiagaraVector4(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXVector4 FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraVector4 // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c5c0
	void FXPokeNiagaraVector(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXVector FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraVector // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c730
	void FXPokeNiagaraQuat(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXQuat FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraQuat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c440
	void FXPokeNiagaraInt(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXInt FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraInt // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c2e0
	void FXPokeNiagaraFloat(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXFloat FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraFloat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c180
	void FXPokeNiagaraColor(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXColor FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337c010
	void FXPokeNiagaraBool(struct FMultiFX2Handle& FXHandle, struct FPokeNiagaraFXBool FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagaraBool // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337beb0
	void FXPokeNiagara(struct FMultiFX2Handle& FXHandle, struct FFXPokeNiagara FXPoke, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeNiagara // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337b7b0
	void FXPokeMaterialSwapVectorParameter(struct FMultiFX2Handle& FXHandle, struct FName Parameter, struct FVector Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeMaterialSwapVectorParameter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x337b630
	void FXPokeMaterialSwapScalarParameter(struct FMultiFX2Handle& FXHandle, struct FName Parameter, float Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeMaterialSwapScalarParameter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337b4c0
	void FXPokeMaterialSwapParameters(struct FMultiFX2Handle& FXHandle, struct FMaterialSwapParameters Parameters, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeMaterialSwapParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x337b210
	void FXPokeMaterialSwapColorParameter(struct FMultiFX2Handle& FXHandle, struct FName Parameter, struct FLinearColor Value, bool& bSuccess); // Function Phoenix.MultiFX2Poke.FXPokeMaterialSwapColorParameter // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x337b0a0
};

// Class Phoenix.MultiFX2_PostProcessingDefinition
// Size: 0x670 (Inherited: 0x30)
struct UMultiFX2_PostProcessingDefinition : UDataAsset {
	struct FPostProcessSettings Settings; // 0x30(0x5f0)
	struct FPostProcessingFXCurveSet DefaultCurves; // 0x620(0x50)

	float LongestCurve(bool bKillOnly); // Function Phoenix.MultiFX2_PostProcessingDefinition.LongestCurve // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x337d1e0
	bool HasCurves(); // Function Phoenix.MultiFX2_PostProcessingDefinition.HasCurves // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x337d0c0
	bool CurvesCanKill(); // Function Phoenix.MultiFX2_PostProcessingDefinition.CurvesCanKill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x337ae80
};

// Class Phoenix.MultiFX2_PostProcessing
// Size: 0x88 (Inherited: 0x68)
struct UMultiFX2_PostProcessing : UMultiFX2_Filtered {
	struct UMultiFX2_PostProcessingDefinition* Definition; // 0x68(0x08)
	float AutoBlendInTime; // 0x70(0x04)
	float AutoBlendOutTime; // 0x74(0x04)
	float DefaultBlendOutTime; // 0x78(0x04)
	bool bUseAutoBlendIn; // 0x7c(0x01)
	bool bUseAutoBlendOut; // 0x7d(0x01)
	char pad_7E[0x2]; // 0x7e(0x02)
	float Priority; // 0x80(0x04)
	enum class EFXPostProcessingDuplicateAction IfAlreadyRunning; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
};

// Class Phoenix.FXUpdate_Tick
// Size: 0x80 (Inherited: 0x28)
struct UFXUpdate_Tick : UFXUpdate {
	float UpdateRate; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct TMap<struct FMultiFX2Handle, struct FFXUpdateInfo> UpdateInfos; // 0x30(0x50)

	void Update(struct FMultiFX2Handle InHandle, struct UMultiFX2_Base* InMultiBase); // Function Phoenix.FXUpdate_Tick.Update // (Native|Public) // @ game+0x33812b0
};

// Class Phoenix.FXUpdate_PostProcessingCurves
// Size: 0xd0 (Inherited: 0x80)
struct UFXUpdate_PostProcessingCurves : UFXUpdate_Tick {
	struct FPostProcessingFXCurveSet Curves; // 0x80(0x50)
};

// Class Phoenix.MultiFX2PostProcessComponent
// Size: 0x840 (Inherited: 0x220)
struct UMultiFX2PostProcessComponent : USceneComponent {
	struct UMultiFX2_PostProcessingDefinition* Definition; // 0x220(0x08)
	char pad_228[0x8]; // 0x228(0x08)
	struct FPostProcessSettings Settings; // 0x230(0x5f0)
	float BlendWeight; // 0x820(0x04)
	float FadeBlendWeight; // 0x824(0x04)
	float FadeSpeed; // 0x828(0x04)
	float DefaultFadeOutTime; // 0x82c(0x04)
	float AutoFadeOutTime; // 0x830(0x04)
	float Birth; // 0x834(0x04)
	float Priority; // 0x838(0x04)
	char pad_83C[0x4]; // 0x83c(0x04)
};

// Class Phoenix.MultiFX2PostProcessSingleton
// Size: 0x258 (Inherited: 0x248)
struct AMultiFX2PostProcessSingleton : AActor {
	struct TArray<struct UMultiFX2PostProcessComponent*> PostProcessComponents; // 0x248(0x10)
};

// Class Phoenix.FXUpdate_Timed
// Size: 0x88 (Inherited: 0x28)
struct UFXUpdate_Timed : UFXUpdate {
	float Duration; // 0x28(0x04)
	bool bForceKill; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	struct UWorld* World; // 0x30(0x08)
	char pad_38[0x50]; // 0x38(0x50)

	void DeactivateFX(struct FMultiFX2Handle InHandle, struct UMultiFX2_Base* FXBase); // Function Phoenix.FXUpdate_Timed.DeactivateFX // (Final|Native|Protected) // @ game+0x3380d30
};

// Class Phoenix.FXUpdate_EndWhenMovementStops
// Size: 0x28 (Inherited: 0x28)
struct UFXUpdate_EndWhenMovementStops : UFXUpdate {

	void MovementStopped(struct AActor* InActor); // Function Phoenix.FXUpdate_EndWhenMovementStops.MovementStopped // (Final|Native|Public) // @ game+0x3380f60
};

// Class Phoenix.FXUpdate_KeepOnGround
// Size: 0x90 (Inherited: 0x80)
struct UFXUpdate_KeepOnGround : UFXUpdate_Tick {
	float MaxDistance; // 0x80(0x04)
	float InterpolationWeight; // 0x84(0x04)
	bool bPlayIfNoGround; // 0x88(0x01)
	bool bOrientToGround; // 0x89(0x01)
	bool bReApplyAdjustments; // 0x8a(0x01)
	char pad_8B[0x5]; // 0x8b(0x05)
};

// Class Phoenix.MultiFX2_BeamTargetBase
// Size: 0x28 (Inherited: 0x28)
struct UMultiFX2_BeamTargetBase : UObject {
};

// Class Phoenix.MultiFX2_BeamTarget
// Size: 0x28 (Inherited: 0x28)
struct UMultiFX2_BeamTarget : UMultiFX2_BeamTargetBase {
};

// Class Phoenix.MultiFX2_BeamGroundBelow
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_BeamGroundBelow : UMultiFX2_BeamTargetBase {
	float MaxDistance; // 0x28(0x04)
	bool bPlayIfNoGround; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class Phoenix.MultiFX2_BeamTargetProperty
// Size: 0x30 (Inherited: 0x28)
struct UMultiFX2_BeamTargetProperty : UMultiFX2_BeamTargetBase {
	struct FName PropertyName; // 0x28(0x08)
};

// Class Phoenix.FXUpdate_BeamTargetSkeleton
// Size: 0x28 (Inherited: 0x28)
struct UFXUpdate_BeamTargetSkeleton : UFXUpdate {
};

// Class Phoenix.FXUpdate_BeamTargetAttach
// Size: 0x90 (Inherited: 0x80)
struct UFXUpdate_BeamTargetAttach : UFXUpdate_Tick {
	struct UMultiFX2_BeamTargetBase* TargetType; // 0x80(0x08)
	float InterpolationWeight; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.FXUpdate_BeamTargetLocation
// Size: 0x98 (Inherited: 0x90)
struct UFXUpdate_BeamTargetLocation : UFXUpdate_BeamTargetAttach {
	struct FName PropertyName; // 0x90(0x08)
};

// Class Phoenix.FXUpdate_LocationRotationScale
// Size: 0xd8 (Inherited: 0x80)
struct UFXUpdate_LocationRotationScale : UFXUpdate_Tick {
	float InterpolationWeight; // 0x80(0x04)
	struct FName LocationPropertyName; // 0x84(0x08)
	bool bUseLocationPropertyName; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
	struct FVector OverrideLocation; // 0x90(0x0c)
	bool bUseOverrideLocation; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	struct FName RotationPropertyName; // 0xa0(0x08)
	bool bUseRotationPropertyName; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	struct FRotator OverrideRotation; // 0xac(0x0c)
	bool bUseOverrideRotation; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	struct FName ScalePropertyName; // 0xbc(0x08)
	bool bUseScalePropertyName; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct FVector OverrideScale; // 0xc8(0x0c)
	bool bUseOverrideScale; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
};

// Class Phoenix.FXUpdate_BroomFlight
// Size: 0x90 (Inherited: 0x80)
struct UFXUpdate_BroomFlight : UFXUpdate_Tick {
	float MaxDistance; // 0x80(0x04)
	float InterpolationWeight; // 0x84(0x04)
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Phoenix.FXUpdate_UpdateLocation
// Size: 0x88 (Inherited: 0x80)
struct UFXUpdate_UpdateLocation : UFXUpdate_Tick {
	bool bUpdateXY; // 0x80(0x01)
	bool bUpdateZ; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
};

// Class Phoenix.FXUpdate_ContinousMatchTimeDilation
// Size: 0x88 (Inherited: 0x80)
struct UFXUpdate_ContinousMatchTimeDilation : UFXUpdate_Tick {
	enum class EMultiFXUse UseTimeDilation; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Phoenix.FXUpdate_InitialMatchTimeDilation
// Size: 0x30 (Inherited: 0x28)
struct UFXUpdate_InitialMatchTimeDilation : UFXUpdate {
	enum class EMultiFXUse UseTimeDilation; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXUpdate_SetTimeDilation
// Size: 0x30 (Inherited: 0x28)
struct UFXUpdate_SetTimeDilation : UFXUpdate {
	float TimeDilation; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.FXUpdate_ApplyAdjustments
// Size: 0xa0 (Inherited: 0x80)
struct UFXUpdate_ApplyAdjustments : UFXUpdate_Tick {
	bool bUseFXAsSource; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct TArray<struct UFXAdjustments*> Adjustments; // 0x88(0x10)
	bool bDeactivateIfAdjustmentsFail; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.FXUpdate_AddFXTag
// Size: 0x30 (Inherited: 0x28)
struct UFXUpdate_AddFXTag : UFXUpdate {
	struct FName Tag; // 0x28(0x08)
};

// Class Phoenix.FXUpdate_TranslucencySortPriority
// Size: 0x30 (Inherited: 0x28)
struct UFXUpdate_TranslucencySortPriority : UFXUpdate {
	int32_t TranslucencySortPriority; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.FXUpdate_Property
// Size: 0x98 (Inherited: 0x80)
struct UFXUpdate_Property : UFXUpdate_Tick {
	enum class EMultiFXUse PropertySource; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	struct FName SourcePropertyName; // 0x84(0x08)
	struct FName TargetPropertyName; // 0x8c(0x08)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.FXUpdate_NiagaraCurves
// Size: 0xa0 (Inherited: 0x80)
struct UFXUpdate_NiagaraCurves : UFXUpdate_Tick {
	struct TArray<struct FUpdateNiagaraFXFloatCurve> FloatCurves; // 0x80(0x10)
	struct TArray<struct FUpdateNiagaraFXColorCurve> ColorCurves; // 0x90(0x10)
};

// Class Phoenix.FXUpdate_NiagaraSkinFXCurves
// Size: 0xa8 (Inherited: 0x80)
struct UFXUpdate_NiagaraSkinFXCurves : UFXUpdate_Tick {
	struct TArray<struct FUpdateNiagaraSkinFXFloatCurve> FloatCurves; // 0x80(0x10)
	struct TArray<struct FUpdateNiagaraSkinFXColorCurve> ColorCurves; // 0x90(0x10)
	struct ASkinFXDefinition* SkinFX; // 0xa0(0x08)
};

// Class Phoenix.Multiplier_AttackSpeedChoice
// Size: 0x28 (Inherited: 0x28)
struct UMultiplier_AttackSpeedChoice : UNPC_MobilitySpeedChoice {
};

// Class Phoenix.MunitionSpellInterface
// Size: 0x28 (Inherited: 0x28)
struct UMunitionSpellInterface : UInterface {

	void SetPlayerShieldBreaker(bool ShieldBreaker); // Function Phoenix.MunitionSpellInterface.SetPlayerShieldBreaker // (Native|Public|BlueprintCallable) // @ game+0x3381070
	void SetEnemyShieldBreaker(enum class EEnemyShieldBreaker ShieldBreaker); // Function Phoenix.MunitionSpellInterface.SetEnemyShieldBreaker // (Native|Public|BlueprintCallable) // @ game+0x3380ff0
	bool IsUnblockable(struct AActor* SpellTarget); // Function Phoenix.MunitionSpellInterface.IsUnblockable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3380ec0
	bool IsPlayerShieldBreaker(); // Function Phoenix.MunitionSpellInterface.IsPlayerShieldBreaker // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b4f30
	enum class EEnemyShieldBreaker IsEnemyShieldBreaker(); // Function Phoenix.MunitionSpellInterface.IsEnemyShieldBreaker // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3285520
	struct ASpellTool* GetSpellTool(); // Function Phoenix.MunitionSpellInterface.GetSpellTool // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x32b5050
};

// Class Phoenix.MunitionType_AccioSubsonicSpell
// Size: 0x528 (Inherited: 0x528)
struct AMunitionType_AccioSubsonicSpell : AMunitionType_SubsonicSpell {
};

// Class Phoenix.MunitionType_AOE_MultiFX
// Size: 0x658 (Inherited: 0x360)
struct AMunitionType_AOE_MultiFX : AMunitionType_Base {
	char pad_360[0x8]; // 0x360(0x08)
	float MinDamage; // 0x368(0x04)
	float CharacterDamage; // 0x36c(0x04)
	float m_radiusStart; // 0x370(0x04)
	float m_radiusEnd; // 0x374(0x04)
	bool bUseCustomGrowthDuration; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	float CustomGrowthDuration; // 0x37c(0x04)
	float m_hitVictimInterval; // 0x380(0x04)
	enum class ECollisionChannel CollisionChannel; // 0x384(0x01)
	char pad_385[0x3]; // 0x385(0x03)
	struct UDamageType* m_damageType; // 0x388(0x08)
	float PhysicsImpulse; // 0x390(0x04)
	float PhysicsAngularImpulse; // 0x394(0x04)
	bool bOnlyTestDamageOnce; // 0x398(0x01)
	char pad_399[0x1]; // 0x399(0x01)
	bool bUnblockable; // 0x39a(0x01)
	bool bBreakBlockFX; // 0x39b(0x01)
	bool bAffectCompanions; // 0x39c(0x01)
	bool bAffectCharacters; // 0x39d(0x01)
	bool bOnlyAffectCharactersOfHostileTeams; // 0x39e(0x01)
	bool bAffectObjects; // 0x39f(0x01)
	bool bTransformedCharactersAffectedLikeCharacters; // 0x3a0(0x01)
	bool bRespectInstigatorCanHit; // 0x3a1(0x01)
	bool bTriggerNPCResponse; // 0x3a2(0x01)
	bool bRespectCover; // 0x3a3(0x01)
	bool bCalculatePositionOnce; // 0x3a4(0x01)
	enum class EComboType ComboType; // 0x3a5(0x01)
	char pad_3A6[0x2]; // 0x3a6(0x02)
	float AnnounceTime; // 0x3a8(0x04)
	float AnnounceHomingSpeed; // 0x3ac(0x04)
	bool bKeepAnnounceStartRunning; // 0x3b0(0x01)
	bool bForceAnnounceStartEndOnCancel; // 0x3b1(0x01)
	char pad_3B2[0x6]; // 0x3b2(0x06)
	struct TArray<struct UMultiFX2_Base*> AnnounceStartFX2; // 0x3b8(0x10)
	struct TArray<struct UMultiFX2_Base*> AnnounceFX2; // 0x3c8(0x10)
	struct TArray<struct UMultiFX2_Base*> AnnounceFizzleFX2; // 0x3d8(0x10)
	struct UAkAudioEvent* AnnounceMotionFX; // 0x3e8(0x08)
	bool bRequireTriggerToWarn; // 0x3f0(0x01)
	char pad_3F1[0x3]; // 0x3f1(0x03)
	float WarningTime; // 0x3f4(0x04)
	float WarningHomingSpeed; // 0x3f8(0x04)
	char pad_3FC[0x4]; // 0x3fc(0x04)
	struct TArray<struct UMultiFX2_Base*> WarningStartFX2; // 0x400(0x10)
	struct TArray<struct UMultiFX2_Base*> WarningFX2; // 0x410(0x10)
	struct TArray<struct UMultiFX2_Base*> WarningFizzleFX2; // 0x420(0x10)
	struct UAkAudioEvent* WarningMotionFX; // 0x430(0x08)
	bool bRequireTriggerToExplode; // 0x438(0x01)
	char pad_439[0x7]; // 0x439(0x07)
	struct TArray<struct UMultiFX2_Base*> ExplosionFX2; // 0x440(0x10)
	bool ExplosionFX_EndImmediately; // 0x450(0x01)
	char pad_451[0x3]; // 0x451(0x03)
	float ExplosionStartTime; // 0x454(0x04)
	float ExplosionEndTime; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct TArray<struct UMultiFX2_Base*> ExplosionStartFX2; // 0x460(0x10)
	struct TArray<struct UMultiFX2_Base*> ExplosionEndFX2; // 0x470(0x10)
	struct UAkAudioEvent* ExplosionMotionFX; // 0x480(0x08)
	bool PlayExplosionOnGround; // 0x488(0x01)
	bool m_stopAtCollision; // 0x489(0x01)
	char pad_48A[0x6]; // 0x48a(0x06)
	struct TArray<struct UMultiFX2_Base*> HitActorFX2; // 0x490(0x10)
	struct TArray<struct UMultiFX2_Base*> HitTerrainFX2; // 0x4a0(0x10)
	struct TArray<struct UMultiFX2_Base*> HitBlockedFX2; // 0x4b0(0x10)
	enum class ENoiseSize FireNoiseSize; // 0x4c0(0x01)
	enum class ENoiseSize ImpactNoiseSize; // 0x4c1(0x01)
	bool bThrowTarget; // 0x4c2(0x01)
	char pad_4C3[0x1]; // 0x4c3(0x01)
	int32_t TargetHalfAngleXY; // 0x4c4(0x04)
	int32_t TargetHalfAngleZ; // 0x4c8(0x04)
	float LaunchAngle; // 0x4cc(0x04)
	float InAirLaunchAngle; // 0x4d0(0x04)
	float MaximumLaunchAngle; // 0x4d4(0x04)
	float HeightAdjustment; // 0x4d8(0x04)
	float LevelMinZThreshold; // 0x4dc(0x04)
	float LevelMaxZThreshold; // 0x4e0(0x04)
	float BasePhysicsImpulse; // 0x4e4(0x04)
	float MassScaledPhysicsImpulse; // 0x4e8(0x04)
	float CharacterBasePhysicsImpulse; // 0x4ec(0x04)
	float CharacterMassScaledPhysicsImpulse; // 0x4f0(0x04)
	float MaxVelocity; // 0x4f4(0x04)
	int32_t TargetingPercent; // 0x4f8(0x04)
	bool bUpdateTarget; // 0x4fc(0x01)
	char pad_4FD[0x3]; // 0x4fd(0x03)
	float LeviosoImpulseScale; // 0x500(0x04)
	float MinDamageDealt; // 0x504(0x04)
	float MaxDamageDealt; // 0x508(0x04)
	float MinDamageDealtCharacter; // 0x50c(0x04)
	float MaxDamageDealtCharacter; // 0x510(0x04)
	float MinDamageTaken; // 0x514(0x04)
	float MaxDamageTaken; // 0x518(0x04)
	float MinDamageTakenCharacter; // 0x51c(0x04)
	float MaxDamageTakenCharacter; // 0x520(0x04)
	float MinDamageTakenCharacterWall; // 0x524(0x04)
	float MaxDamageTakenCharacterWall; // 0x528(0x04)
	float MinDamageTakenCharacterFloor; // 0x52c(0x04)
	float MaxDamageTakenCharacterFloor; // 0x530(0x04)
	float MinDamageTakenCharacterCharacter; // 0x534(0x04)
	float MaxDamageTakenCharacterCharacter; // 0x538(0x04)
	float ArrestoTimeExtension; // 0x53c(0x04)
	bool bTriggerMunitionSentMessage; // 0x540(0x01)
	char pad_541[0x57]; // 0x541(0x57)
	struct TArray<struct AActor*> m_ignoreActors; // 0x598(0x10)
	char pad_5A8[0x90]; // 0x5a8(0x90)
	struct UAkComponent* AnnounceMotionComponent; // 0x638(0x08)
	struct UAkComponent* WarningMotionComponent; // 0x640(0x08)
	struct UAkComponent* ExplosionMotionComponent; // 0x648(0x08)
	struct ASpellTool* SpellTool; // 0x650(0x08)

	void TriggerWarningStart(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerWarningStart // (Final|Native|Public|BlueprintCallable) // @ game+0x3381290
	void TriggerWarningLoop(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerWarningLoop // (Final|Native|Public|BlueprintCallable) // @ game+0x3381270
	void TriggerWarning(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerWarning // (Final|Native|Public|BlueprintCallable) // @ game+0x3381250
	void TriggerImpactEnd(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerImpactEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x3381230
	void TriggerImpact(bool bSkipStartState); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerImpact // (Final|Native|Public|BlueprintCallable) // @ game+0x33811a0
	void TriggerFizzle(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerFizzle // (Final|Native|Public|BlueprintCallable) // @ game+0x3381180
	void TriggerExplode(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerExplode // (Final|Native|Public|BlueprintCallable) // @ game+0x3381160
	void TriggerEnd(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x3381140
	void TriggerArresto(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerArresto // (Final|Native|Public|BlueprintCallable) // @ game+0x3381120
	void TriggerAnnounceLoop(); // Function Phoenix.MunitionType_AOE_MultiFX.TriggerAnnounceLoop // (Final|Native|Public|BlueprintCallable) // @ game+0x3381100
	void OnWarning(struct FVector& Location, struct FRotator& Rotation, struct FMultiFX2Handle FXHandle); // Function Phoenix.MunitionType_AOE_MultiFX.OnWarning // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnHit(struct FMunitionImpactData& MunitionImpact, struct FHitResult& HitResult, bool bHit, bool bBlocked, bool bFailed); // Function Phoenix.MunitionType_AOE_MultiFX.OnHit // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnExplode(struct FVector& Location, struct FRotator& Rotation, struct FMultiFX2Handle FXHandle); // Function Phoenix.MunitionType_AOE_MultiFX.OnExplode // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnAnnounce(struct FVector& Location, struct FRotator& Rotation, struct FMultiFX2Handle FXHandle); // Function Phoenix.MunitionType_AOE_MultiFX.OnAnnounce // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool IsArresto(); // Function Phoenix.MunitionType_AOE_MultiFX.IsArresto // (Final|Native|Public|BlueprintCallable) // @ game+0x3380ea0
	struct FMultiFX2Handle GetWarningFXHandle(); // Function Phoenix.MunitionType_AOE_MultiFX.GetWarningFXHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3380e80
	struct FMultiFX2Handle GetFizzleFXHandle(); // Function Phoenix.MunitionType_AOE_MultiFX.GetFizzleFXHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3380e60
	struct FMultiFX2Handle GetExplodeFXHandle(); // Function Phoenix.MunitionType_AOE_MultiFX.GetExplodeFXHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3380e40
	struct FMultiFX2Handle GetAnnounceFXHandle(); // Function Phoenix.MunitionType_AOE_MultiFX.GetAnnounceFXHandle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3380e20
	void EndArresto(); // Function Phoenix.MunitionType_AOE_MultiFX.EndArresto // (Final|Native|Public|BlueprintCallable) // @ game+0x3380e00
	void Cancel(); // Function Phoenix.MunitionType_AOE_MultiFX.Cancel // (Final|Native|Public|BlueprintCallable) // @ game+0x3380d10
};

// Class Phoenix.MunitionType_AttackHitbox
// Size: 0x470 (Inherited: 0x470)
struct AMunitionType_AttackHitbox : AMunitionType_Hitbox {
};

// Class Phoenix.MunitionType_ConeSpell
// Size: 0x3b8 (Inherited: 0x360)
struct AMunitionType_ConeSpell : AMunitionType_Base {
	char pad_360[0x8]; // 0x360(0x08)
	float EndRadius; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct UDamageType* DamageType; // 0x370(0x08)
	bool StopAtCollision; // 0x378(0x01)
	char pad_379[0x7]; // 0x379(0x07)
	struct UParticleSystem* ExplosionVFX; // 0x380(0x08)
	struct UAkAudioEvent* ExplosionSfx; // 0x388(0x08)
	struct ASpellTool* SpellTool; // 0x390(0x08)
	char pad_398[0x20]; // 0x398(0x20)

	void OnHit(struct FHitResult& HitResult, bool bDestroyed, bool bHit, bool bBlocked, bool bFailed); // Function Phoenix.MunitionType_ConeSpell.OnHit // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	struct ASpellTool* GetSpellTool(); // Function Phoenix.MunitionType_ConeSpell.GetSpellTool // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3384650
};

// Class Phoenix.MunitionType_PhoenixSubsonic
// Size: 0x488 (Inherited: 0x468)
struct AMunitionType_PhoenixSubsonic : AMunitionType_Subsonic {
	bool bCanOppugnoAfterProtego; // 0x468(0x01)
	char pad_469[0x7]; // 0x469(0x07)
	struct AActor* OppugnoPhysicsObjectClass; // 0x470(0x08)
	char pad_478[0x8]; // 0x478(0x08)
	struct ASpellTool* SpellTool; // 0x480(0x08)

	struct ASpellTool* GetSpellTool(); // Function Phoenix.MunitionType_PhoenixSubsonic.GetSpellTool // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a9c50
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.MunitionType_PhoenixSubsonic.BeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x3383df0
};

// Class Phoenix.MunitionType_Potion
// Size: 0x530 (Inherited: 0x528)
struct AMunitionType_Potion : AMunitionType_SubsonicSpell {
	float SpawnDistance; // 0x528(0x04)
	char pad_52C[0x4]; // 0x52c(0x04)
};

// Class Phoenix.Actor_SubsonicProximity
// Size: 0x260 (Inherited: 0x248)
struct AActor_SubsonicProximity : AActor {
	struct USphereComponent* SphereComponent; // 0x248(0x08)
	char pad_250[0x10]; // 0x250(0x10)
};

// Class Phoenix.MunitionType_SuperSonicSpell
// Size: 0x3a0 (Inherited: 0x360)
struct AMunitionType_SuperSonicSpell : AMunitionType_Base {
	char pad_360[0x8]; // 0x360(0x08)
	struct ASpellTool* SpellTool; // 0x368(0x08)
	bool AlwaysHit; // 0x370(0x01)
	char pad_371[0x3]; // 0x371(0x03)
	float IncreaseRangeBy; // 0x374(0x04)
	bool IgnoreProtego; // 0x378(0x01)
	char pad_379[0x27]; // 0x379(0x27)
};

// Class Phoenix.NamedCreatureTypeManager
// Size: 0x150 (Inherited: 0xa8)
struct UNamedCreatureTypeManager : UPhxDbRegistryTypeManager {
	struct TMap<struct FName, struct UCreatureState*> NamedCreatureStates; // 0xa8(0x50)
	char pad_F8[0x58]; // 0xf8(0x58)

	struct AActor* SpawnShell(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel); // Function Phoenix.NamedCreatureTypeManager.SpawnShell // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3384fb0
	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.NamedCreatureTypeManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3384ca0
	bool GetSpawnPath(struct FString InItemID, struct FSoftObjectPath& OutPath); // Function Phoenix.NamedCreatureTypeManager.GetSpawnPath // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3384530
	bool GetSpawnAsset(struct FString InItemID, struct AActor*& OutAsset); // Function Phoenix.NamedCreatureTypeManager.GetSpawnAsset // (Native|Public|HasOutParms) // @ game+0x3384430
	bool GetShellSpawnPath(struct FString InItemID, struct FSoftObjectPath& OutPath); // Function Phoenix.NamedCreatureTypeManager.GetShellSpawnPath // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3264dc0
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.NamedCreatureTypeManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.NamedPoint
// Size: 0x270 (Inherited: 0x248)
struct ANamedPoint : ATargetPoint {
	struct FString m_nameOverride; // 0x248(0x10)
	bool m_bAppendLevelName; // 0x258(0x01)
	enum class EVolumeType VolumeType; // 0x259(0x01)
	char pad_25A[0x6]; // 0x25a(0x06)
	struct UPrimitiveComponent* Volume; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)
};

// Class Phoenix.NavigationArrow
// Size: 0x268 (Inherited: 0x248)
struct ANavigationArrow : AActor {
	float PathActivationRadius; // 0x248(0x04)
	float NearFadeDistanceOutterRadius; // 0x24c(0x04)
	float NearFadeDistanceInnerRadius; // 0x250(0x04)
	float FarFadeDistanceOutterRadius; // 0x254(0x04)
	float FarFadeDistanceInnerRadius; // 0x258(0x04)
	char pad_25C[0xc]; // 0x25c(0x0c)

	void ShowEvent(); // Function Phoenix.NavigationArrow.ShowEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Show(); // Function Phoenix.NavigationArrow.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x3384c80
	bool IsListVisible(); // Function Phoenix.NavigationArrow.IsListVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x33846d0
	void HideEvent(); // Function Phoenix.NavigationArrow.HideEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Hide(); // Function Phoenix.NavigationArrow.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x33846b0
	struct UMaterialInstanceDynamic* GetMaterial(); // Function Phoenix.NavigationArrow.GetMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x33843b0
};

// Class Phoenix.NavigationBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UNavigationBlueprintLibrary : UBlueprintFunctionLibrary {

	void UpdateNavigationObstacles(struct AActor* TargetActor); // Function Phoenix.NavigationBlueprintLibrary.UpdateNavigationObstacles // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3385640
	bool TraceWater(struct UObject* WorldContextObject, struct FVector& TraceStart, struct FVector& TraceEnd, float Radius, bool bTraceComplex, struct TArray<struct AActor*>& ActorsToIgnore, bool bIgnoreSelf, struct FHitResult& OutHit); // Function Phoenix.NavigationBlueprintLibrary.TraceWater // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3385340
	void SwitchDynamicNavigation(struct AActor* TargetActor, bool bBlock); // Function Phoenix.NavigationBlueprintLibrary.SwitchDynamicNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3385280
	void SetObjectStateInfoObstacleComponentActive(struct AActor* TargetActor, bool bActive); // Function Phoenix.NavigationBlueprintLibrary.SetObjectStateInfoObstacleComponentActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3384af0
	void SetCanEverAffectNavigation(struct UActorComponent* ActorComponent, bool bCanAffectNavigation); // Function Phoenix.NavigationBlueprintLibrary.SetCanEverAffectNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3384960
	void RefreshObjectStateInfoActorObstacles(struct AActor* TargetActor, bool bForceDynamicSpawnedFlag); // Function Phoenix.NavigationBlueprintLibrary.RefreshObjectStateInfoActorObstacles // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3384880
};

// Class Phoenix.NavigationRedirectionVolume
// Size: 0x290 (Inherited: 0x280)
struct ANavigationRedirectionVolume : AVolume {
	struct FVector RedirectionLocation; // 0x280(0x0c)
	bool ForceOverlandArea; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
};

// Class Phoenix.ControllerButtonGraphicsDecorator
// Size: 0x28 (Inherited: 0x28)
struct UControllerButtonGraphicsDecorator : URichTextBlockDecorator {
};

// Class Phoenix.NiagaraDataInterfaceAccessibilityColorRemap
// Size: 0x40 (Inherited: 0x38)
struct UNiagaraDataInterfaceAccessibilityColorRemap : UNiagaraDataInterface {
	struct FName ColorTableTag; // 0x38(0x08)
};

// Class Phoenix.NiagaraPoserComponent
// Size: 0x2c0 (Inherited: 0x220)
struct UNiagaraPoserComponent : USceneComponent {
	struct FNiagraPoserSetup Setup; // 0x218(0x68)
	struct UPoseableMeshComponent* MeshComponent; // 0x280(0x08)
	struct UNiagaraComponent* NiagaraComponent; // 0x288(0x08)
	struct TArray<struct FNiagraPoserBone> Bones; // 0x290(0x10)
	struct FString EmitterName; // 0x2a0(0x10)
	float Age; // 0x2b0(0x04)
	int32_t UpdateCounter; // 0x2b4(0x04)

	void Reset(); // Function Phoenix.NiagaraPoserComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x3384940
	void CreateNiagaraSystem(struct UNiagaraSystem* NiagaraSystem, bool pAutoActivate); // Function Phoenix.NiagaraPoserComponent.CreateNiagaraSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x3384230
};

// Class Phoenix.NiagaraPoser
// Size: 0x250 (Inherited: 0x248)
struct ANiagaraPoser : AActor {
	struct UNiagaraPoserComponent* PoserComponent; // 0x248(0x08)

	void SetNiagaraSystem(struct UNiagaraSystem* NiagaraSystem, bool pAutoActivate); // Function Phoenix.NiagaraPoser.SetNiagaraSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x3384a20
	void Reset(); // Function Phoenix.NiagaraPoser.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x31e1760
	struct UNiagaraSystem* GetNiagaraSystem(); // Function Phoenix.NiagaraPoser.GetNiagaraSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x33843e0
};

// Class Phoenix.NoCookComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UNoCookComponent : UActorComponent {
	struct FPerPlatformBool NoCookActor; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.NoDismountZoneVolume
// Size: 0x3b8 (Inherited: 0x3b8)
struct ANoDismountZoneVolume : AMountZoneVolumeBase {

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.NoDismountZoneVolume.OnOverlapEnd // (Final|Native|Protected) // @ game+0x3389410
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.NoDismountZoneVolume.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x3388fd0
};

// Class Phoenix.NoMountHUDBase
// Size: 0x2f0 (Inherited: 0x2e8)
struct UNoMountHUDBase : UHUDElementGroup {
	bool IsAnimating; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)

	void OnUseStateChanged(bool Show); // Function Phoenix.NoMountHUDBase.OnUseStateChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.NoMountZoneVolume
// Size: 0x400 (Inherited: 0x3b8)
struct ANoMountZoneVolume : AMountZoneVolumeBase {
	struct UStaticMeshComponent* ShieldMesh; // 0x3b8(0x08)
	enum class ENoMountZoneError NoMountZoneError; // 0x3c0(0x01)
	bool bGenerateShieldMesh; // 0x3c1(0x01)
	bool bAlternateStencilValues; // 0x3c2(0x01)
	enum class ENoMountZoneVersion Version; // 0x3c3(0x01)
	char pad_3C4[0x34]; // 0x3c4(0x34)
	struct UModel* ConversionTempModel; // 0x3f8(0x08)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.NoMountZoneVolume.OnOverlapEnd // (Final|Native|Protected) // @ game+0x3389570
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.NoMountZoneVolume.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x33891f0
};

// Class Phoenix.NonCombat_Character
// Size: 0x1830 (Inherited: 0x1660)
struct ANonCombat_Character : ABase_Character {
	struct FGameplayTag GroupTag; // 0x1660(0x08)
	struct USocialAgentPathFollowerComponent* SocialAgentComponent; // 0x1668(0x08)
	struct UCustomizableCharacterComponent* CCComponent; // 0x1670(0x08)
	struct UCognitionStimuliSourceComponent* CogSourceComp; // 0x1678(0x08)
	struct UNPC_ReactionComponent* NPCReactionComponent; // 0x1680(0x08)
	bool bAllowDBInstanceRedirect; // 0x1688(0x01)
	bool bCreateScheduledEntity; // 0x1689(0x01)
	bool bIsAScheduledEntity; // 0x168a(0x01)
	char pad_168B[0x5]; // 0x168b(0x05)
	struct FString DefaultWorldID; // 0x1690(0x10)
	struct FMulticastInlineDelegate CustomAbilityFinishedDelegate; // 0x16a0(0x10)
	char pad_16B0[0x138]; // 0x16b0(0x138)
	struct UInteractionArchitectAsset* DefaultMunition; // 0x17e8(0x08)
	struct FVariantMapHandle NPCVariantMapHandle; // 0x17f0(0x04)
	char pad_17F4[0x4]; // 0x17f4(0x04)
	struct UAblAbility* IdleAbility; // 0x17f8(0x08)
	struct UAblAbility* MoveStartAbility; // 0x1800(0x08)
	struct UAblAbility* MoveAbility; // 0x1808(0x08)
	struct UAblAbility* PivotAbility; // 0x1810(0x08)
	struct UAblAbility* StairAbility; // 0x1818(0x08)
	struct UAblAbility* MoveStopAbility; // 0x1820(0x08)
	char pad_1828[0x8]; // 0x1828(0x08)

	void UnregisterForInteractionSense(struct UObject* InObject); // Function Phoenix.NonCombat_Character.UnregisterForInteractionSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3389fe0
	void Suspend(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.Suspend // (Final|Native|Public|BlueprintCallable) // @ game+0x3389f50
	void StopCustomAbility(); // Function Phoenix.NonCombat_Character.StopCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3389f20
	void StopAndIdle(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.StopAndIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x3389e90
	void StartChildSpawnFX(struct FTransform inSpawnLoc); // Function Phoenix.NonCombat_Character.StartChildSpawnFX // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3389da0
	void Resume(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.Resume // (Final|Native|Public|BlueprintCallable) // @ game+0x3389d10
	void Release(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.Release // (Final|Native|Public|BlueprintCallable) // @ game+0x33899e0
	void RegisterForInteractionSense(struct UObject* InObject); // Function Phoenix.NonCombat_Character.RegisterForInteractionSense // (Final|Native|Public|BlueprintCallable) // @ game+0x3389950
	void PlayCustomAbility(struct UAblAbility* InAbility, bool bPreventReactions); // Function Phoenix.NonCombat_Character.PlayCustomAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3389870
	void OnStationOnFinishedExit(); // Function Phoenix.NonCombat_Character.OnStationOnFinishedExit // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStationOnFinishedEnter(); // Function Phoenix.NonCombat_Character.OnStationOnFinishedEnter // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnReactionQueued(struct UAblReactionData* InReactionData, struct UAblReactionComponent* InReactionComponent); // Function Phoenix.NonCombat_Character.OnReactionQueued // (Native|Protected) // @ game+0x33897a0
	void OnReactionEnd(struct UAblReactionData* InReactionData, struct UAblReactionComponent* InReactionComponent); // Function Phoenix.NonCombat_Character.OnReactionEnd // (Native|Protected) // @ game+0x33896d0
	void OnChildSpawnFX(struct FTransform inSpawnLoc); // Function Phoenix.NonCombat_Character.OnChildSpawnFX // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x3388af0
	bool IsSuspended(); // Function Phoenix.NonCombat_Character.IsSuspended // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33889b0
	bool IsScheduledEntity(); // Function Phoenix.NonCombat_Character.IsScheduledEntity // (Final|Native|Public|BlueprintCallable) // @ game+0x3388980
	bool IsReleased(); // Function Phoenix.NonCombat_Character.IsReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3388960
	bool IsFrozen(); // Function Phoenix.NonCombat_Character.IsFrozen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3388940
	bool IsAlive(); // Function Phoenix.NonCombat_Character.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3388920
	void HandleRagdollImpact(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.HandleRagdollImpact // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	struct UCapsuleComponent* GetNpcCapsuleComponent(); // Function Phoenix.NonCombat_Character.GetNpcCapsuleComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3206ff0
	struct FVector GetImpactLocation(); // Function Phoenix.NonCombat_Character.GetImpactLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33885c0
	struct FVector GetImpactDirection(); // Function Phoenix.NonCombat_Character.GetImpactDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3388580
	void Freeze(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.Freeze // (Final|Native|Public|BlueprintCallable) // @ game+0x33884f0
	void ForceScheduledEntityState(); // Function Phoenix.NonCombat_Character.ForceScheduledEntityState // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void ForceProtego(bool inProtegoOnOff); // Function Phoenix.NonCombat_Character.ForceProtego // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0320
	void EnableCallout(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.EnableCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x3388460
	void DisableCallout(struct UObject* i_caller); // Function Phoenix.NonCombat_Character.DisableCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x33883d0
	void ApplySpawnFX(); // Function Phoenix.NonCombat_Character.ApplySpawnFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33883b0
	void ApplyReplicaFX(); // Function Phoenix.NonCombat_Character.ApplyReplicaFX // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3388390
};

// Class Phoenix.NonCombat_MovementComponent
// Size: 0xfd0 (Inherited: 0xfa0)
struct UNonCombat_MovementComponent : UAmbulatory_MovementComponent {
	char pad_FA0[0x20]; // 0xfa0(0x20)
	struct FNavAgent NavAgent; // 0xfc0(0x08)
	char pad_FC8[0x8]; // 0xfc8(0x08)
};

// Class Phoenix.NotificationPanelWidget
// Size: 0x3a8 (Inherited: 0x2e8)
struct UNotificationPanelWidget : UHUDElementGroup {
	struct UPooledVerticalBox* NotificationsBox; // 0x2e8(0x08)
	bool IsActiveChallengeUpdateIncrementable; // 0x2f0(0x01)
	bool IsActiveMoneyNotificationIncrementable; // 0x2f1(0x01)
	char pad_2F2[0xb6]; // 0x2f2(0xb6)

	void RequestCollectionObtainedNotification(struct FCollectionNotificationData NewItem); // Function Phoenix.NotificationPanelWidget.RequestCollectionObtainedNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x3389c70
	void RequestCollectionKnownNotification(struct FCollectionNotificationData NewItem); // Function Phoenix.NotificationPanelWidget.RequestCollectionKnownNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x3389bd0
	void RequestChallengeUpdatedNotification(struct FChallengeNotificationData NewItem); // Function Phoenix.NotificationPanelWidget.RequestChallengeUpdatedNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x3389b20
	void RequestChallengeCompleteNotification(struct FChallengeNotificationData NewItem); // Function Phoenix.NotificationPanelWidget.RequestChallengeCompleteNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x3389a70
	void OnNotificationAborted(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnNotificationAborted // (Final|Native|Public) // @ game+0x3388f40
	void OnDisplayPickupNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayPickupNotification // (Final|Native|Public) // @ game+0x3388eb0
	void OnDisplayMoneyNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayMoneyNotification // (Final|Native|Public) // @ game+0x3388e20
	void OnDisplayCollectionObtainedNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayCollectionObtainedNotification // (Final|Native|Public) // @ game+0x3388d90
	void OnDisplayCollectionKnownNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayCollectionKnownNotification // (Final|Native|Public) // @ game+0x3388d00
	void OnDisplayChallengeUpdatedNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayChallengeUpdatedNotification // (Final|Native|Public) // @ game+0x3388c70
	void OnDisplayChallengeCompleteNotification(struct UObject* Caller); // Function Phoenix.NotificationPanelWidget.OnDisplayChallengeCompleteNotification // (Final|Native|Public) // @ game+0x3388be0
	void ItemCollected(struct FPickupNotificationData NewItem); // Function Phoenix.NotificationPanelWidget.ItemCollected // (Final|Native|Public|BlueprintCallable) // @ game+0x33889d0
	void IncrementCurrentMoneyNotification(int32_t Amount); // Function Phoenix.NotificationPanelWidget.IncrementCurrentMoneyNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void IncrementCurrentChallengeUpdate(struct FChallengeNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.IncrementCurrentChallengeUpdate // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddPickupNotification(struct FPickupNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddPickupNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddMoneyNotification(struct FPickupNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddMoneyNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddCollectionObtainedNotification(struct FCollectionNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddCollectionObtainedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddCollectionKnownNotification(struct FCollectionNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddCollectionKnownNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddChallengeUpdatedNotification(struct FChallengeNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddChallengeUpdatedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddChallengeCompleteNotification(struct FChallengeNotificationData ItemData); // Function Phoenix.NotificationPanelWidget.AddChallengeCompleteNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.NotificationWidget
// Size: 0x2b0 (Inherited: 0x268)
struct UNotificationWidget : UUserWidget {
	struct UPhoenixTextBlock* Subheader; // 0x268(0x08)
	struct UImage* Icon; // 0x270(0x08)
	struct UPhoenixTextBlock* Header; // 0x278(0x08)
	struct FString ItemName; // 0x280(0x10)
	struct FName Variation; // 0x290(0x08)
	struct FString ImageId; // 0x298(0x10)
	int32_t ItemCount; // 0x2a8(0x04)
	float LifeTime; // 0x2ac(0x04)

	void ToggleCountVisibility(bool IsVisible); // Function Phoenix.NotificationWidget.ToggleCountVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetIsInventoryFullNotification(bool IsInventoryFull); // Function Phoenix.NotificationWidget.SetIsInventoryFullNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitDetails(struct FString NewItemName, struct FName NewVariation, struct FString DisplayName, bool bIsHeaderTranslatable, int32_t NewItemCount, struct FString NewIconName, bool bSpecialCollection); // Function Phoenix.NotificationWidget.InitDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x3388600
	bool IncrementCount(int32_t Amount); // Function Phoenix.NotificationWidget.IncrementCount // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.NPC_AnimInstance_Interface
// Size: 0x28 (Inherited: 0x28)
struct UNPC_AnimInstance_Interface : UInterface {

	void SetState(enum class EEnemyAIAnimState& InState); // Function Phoenix.NPC_AnimInstance_Interface.SetState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetMainState(enum class EEnemy_AnimMainState& InState); // Function Phoenix.NPC_AnimInstance_Interface.SetMainState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAbilityActive(enum class EEnemy_Ability InAbility, bool bUse); // Function Phoenix.NPC_AnimInstance_Interface.SetAbilityActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void HandleHeadTracking(struct AActor* Owner); // Function Phoenix.NPC_AnimInstance_Interface.HandleHeadTracking // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	enum class EEnemyAIAnimState GetState(); // Function Phoenix.NPC_AnimInstance_Interface.GetState // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	enum class EEnemy_AnimMainState GetMainState(); // Function Phoenix.NPC_AnimInstance_Interface.GetMainState // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	enum class EEnemy_Ability GetActiveAbility(); // Function Phoenix.NPC_AnimInstance_Interface.GetActiveAbility // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
	bool GetAbilityActive(enum class EEnemy_Ability InAbility); // Function Phoenix.NPC_AnimInstance_Interface.GetAbilityActive // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x38a7480
};

// Class Phoenix.NPC_BTComponent
// Size: 0x2b0 (Inherited: 0x2b0)
struct UNPC_BTComponent : UBehaviorTreeComponent {
};

// Class Phoenix.NPC_Character_Interface
// Size: 0x28 (Inherited: 0x28)
struct UNPC_Character_Interface : UInterface {
};

// Class Phoenix.NPC_AbilityTaskScratchPad
// Size: 0xa0 (Inherited: 0x28)
struct UNPC_AbilityTaskScratchPad : UAblAbilityTaskScratchPad {
	struct FNPC_AbilityTaskMovementEntry MoveData; // 0x28(0x24)
	char pad_4C[0x54]; // 0x4c(0x54)
};

// Class Phoenix.NPC_QBUpdateDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UNPC_QBUpdateDataAsset : UDataAsset {
	struct TMap<enum class ENPC_QBUpdate, struct UNPC_QBUpdate*> UpdateClassMap; // 0x30(0x50)
};

// Class Phoenix.NPC_PerceptionUpdateDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UNPC_PerceptionUpdateDataAsset : UDataAsset {
	struct TMap<enum class ENPC_PerceptionUpdate, struct UNPC_PerceptionUpdate*> UpdateClassMap; // 0x30(0x50)
};

// Class Phoenix.NPC_MobilityDataContainerAsset
// Size: 0xe8 (Inherited: 0x30)
struct UNPC_MobilityDataContainerAsset : UDataAsset {
	struct FNPC_MobilityDataContainer ContainerData; // 0x30(0xb8)
};

// Class Phoenix.NPC_GameEvent_PerceptionUpdate
// Size: 0x40 (Inherited: 0x40)
struct UNPC_GameEvent_PerceptionUpdate : UNPC_PerceptionUpdate {
};

// Class Phoenix.NPC_MovementCapsuleComponent
// Size: 0x4e0 (Inherited: 0x4a0)
struct UNPC_MovementCapsuleComponent : UCapsuleComponent {
	bool bUseBoneLocationTracking; // 0x4a0(0x01)
	char pad_4A1[0x3]; // 0x4a1(0x03)
	struct FName BoneNameToLocationTrack; // 0x4a4(0x08)
	float CapsuleLocationInterpToSpeed; // 0x4ac(0x04)
	float StartTrackingLocationTolerance; // 0x4b0(0x04)
	float EndTrackingLocationTolerance; // 0x4b4(0x04)
	bool bTrackBoneZ; // 0x4b8(0x01)
	bool bUseInFloorSweep; // 0x4b9(0x01)
	bool bDisabledAtSpawn; // 0x4ba(0x01)
	bool bDisabledAlways; // 0x4bb(0x01)
	enum class ECollisionEnabled ActivateCollisionEnabledType; // 0x4bc(0x01)
	char pad_4BD[0x23]; // 0x4bd(0x23)
};

// Class Phoenix.NPC_PerceptionComponent
// Size: 0x1a8 (Inherited: 0x1a8)
struct UNPC_PerceptionComponent : UGame_PerceptionComponent {
};

// Class Phoenix.NPC_RagdollBehaviorComponent
// Size: 0x1e0 (Inherited: 0x1e0)
struct UNPC_RagdollBehaviorComponent : URagdollBehaviorComponent {
};

// Class Phoenix.AblReactionComponentConfig
// Size: 0x80 (Inherited: 0x30)
struct UAblReactionComponentConfig : UDataAsset {
	struct TArray<struct UAblReactionAbility*> ReactionsToResetDuration; // 0x30(0x10)
	struct FGameplayTagContainer ResetReactionDurationTags; // 0x40(0x20)
	struct UAblReactionAbility* DefaultFallingAbility; // 0x60(0x08)
	struct UAblReactionAbility* DefaultRagdollAbility; // 0x68(0x08)
	float RecentlyOnFireTime; // 0x70(0x04)
	float InAirDistanceFromGround; // 0x74(0x04)
	bool bDefaultCanReactToAllies; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.NPC_ReactionComponent
// Size: 0x360 (Inherited: 0x1d0)
struct UNPC_ReactionComponent : UAblReactionComponent {
	struct FMulticastInlineDelegate OnComboStart; // 0x1d0(0x10)
	struct FMulticastInlineDelegate OnComboEnd; // 0x1e0(0x10)
	struct UAblReactionComponentConfig* Config; // 0x1f0(0x08)
	char pad_1F8[0x108]; // 0x1f8(0x108)
	struct TMap<struct FGameplayTag, float> ReactionDurationOverrides; // 0x300(0x50)
	char pad_350[0x10]; // 0x350(0x10)

	void StartSettingReactionsEnabledValue(bool bValue, enum class ECharacterShutdownPriority Priority, struct UObject* InInstigator); // Function Phoenix.NPC_ReactionComponent.StartSettingReactionsEnabledValue // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7e70
	void StartSettingReactionsEnabledFromAlliesValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.NPC_ReactionComponent.StartSettingReactionsEnabledFromAlliesValue // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7d40
	bool IsFullBodyReactionQueuedOrRunning(struct UAblReactionComponent* ReactionComponent); // Function Phoenix.NPC_ReactionComponent.IsFullBodyReactionQueuedOrRunning // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a6880
	void HandleReactionFinished(struct UAblReactionData* ReactionData, struct UAblReactionComponent* ReactionComponent); // Function Phoenix.NPC_ReactionComponent.HandleReactionFinished // (Final|Native|Public) // @ game+0x33a6790
	void FinishSettingReactionsEnabledValue(enum class ECharacterShutdownPriority Priority, struct UObject* InInstigator); // Function Phoenix.NPC_ReactionComponent.FinishSettingReactionsEnabledValue // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5e90
	void FinishSettingReactionsEnabledFromAlliesValue(struct UObject* InInstigator); // Function Phoenix.NPC_ReactionComponent.FinishSettingReactionsEnabledFromAlliesValue // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5df0
};

// Class Phoenix.NPC_Spline
// Size: 0x268 (Inherited: 0x248)
struct ANPC_Spline : AActor {
	bool bDrawUpArrows; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct USplineComponent* SplineComponent; // 0x250(0x08)
	struct TArray<struct UArrowComponent*> PointUpArrows; // 0x258(0x10)
};

// Class Phoenix.NPC_SplineNavLink
// Size: 0x2b0 (Inherited: 0x268)
struct ANPC_SplineNavLink : ANPC_Spline {
	struct USplineNavLinkComponent* NavLinkComponent; // 0x268(0x08)
	struct FNPC_JumpSplineData JSData; // 0x270(0x40)
};

// Class Phoenix.NPC_Volume
// Size: 0x2a8 (Inherited: 0x248)
struct ANPC_Volume : AActor {
	struct UShapeComponent* CollisionComponent; // 0x248(0x08)
	struct TSet<struct TWeakObjectPtr<struct AActor>> EnteredList; // 0x250(0x50)
	char pad_2A0[0x8]; // 0x2a0(0x08)

	void SetActive(bool bInActive); // Function Phoenix.NPC_Volume.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac170
	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.NPC_Volume.OnEndOverlap // (Final|Native|Public) // @ game+0x33ac0a0
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.NPC_Volume.OnBeginOverlap // (Final|Native|Public) // @ game+0x33abfd0
	bool GetActive(); // Function Phoenix.NPC_Volume.GetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33abfb0
};

// Class Phoenix.NPC_SplineVolume
// Size: 0x2f0 (Inherited: 0x2a8)
struct ANPC_SplineVolume : ANPC_Volume {
	struct TArray<struct ANPC_Spline*> SplineList; // 0x2a8(0x10)
	bool bIdle; // 0x2b8(0x01)
	char pad_2B9[0x3]; // 0x2b9(0x03)
	float IdleInterval; // 0x2bc(0x04)
	float IdleIntervalDeviation; // 0x2c0(0x04)
	float VolumeMoveScale; // 0x2c4(0x04)
	bool bApplyVolumeSpeed; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float MinVolumeSpeed; // 0x2cc(0x04)
	float MaxVolumeSpeed; // 0x2d0(0x04)
	bool bChangeSpeed; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)
	float MinSpeed; // 0x2d8(0x04)
	float MaxSpeed; // 0x2dc(0x04)
	bool bChangeScurrySpeed; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	float ScurryMinSpeed; // 0x2e4(0x04)
	float ScurryMaxSpeed; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
};

// Class Phoenix.Player_FootfallDataAsset
// Size: 0x68 (Inherited: 0x30)
struct UPlayer_FootfallDataAsset : UDataAsset {
	struct FPlayer_FootfallData Data; // 0x30(0x38)
};

// Class Phoenix.NPC_SystemSettings
// Size: 0x80 (Inherited: 0x38)
struct UNPC_SystemSettings : UDeveloperSettings {
	struct FNPC_OptimizationSettings Settings; // 0x38(0x28)
	float PlayerRelTargetProximityDist; // 0x60(0x04)
	float PlayerRelTargetTrackingChangeTime; // 0x64(0x04)
	float TeleportMoveGlobalTimer; // 0x68(0x04)
	float TeleportMoveStuckTimer; // 0x6c(0x04)
	float TooCloseCounterAttackGlobalTimer; // 0x70(0x04)
	float TooCloseCounterAttackConsiderationTimer; // 0x74(0x04)
	float CombatQBUpdateBudget; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class Phoenix.NPC_System
// Size: 0x970 (Inherited: 0x28)
struct UNPC_System : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate CombatBeginsEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate CombatEndsEvent; // 0x40(0x10)
	struct FMulticastInlineDelegate BossFightChangedEvent; // 0x50(0x10)
	struct FMulticastInlineDelegate BossFightStartEvent; // 0x60(0x10)
	struct FMulticastInlineDelegate BossFightEndEvent; // 0x70(0x10)
	struct TMap<int32_t, struct FDifficultyScaleData> DifficultyScaleDataMap; // 0x80(0x50)
	struct TMap<struct FName, struct FBossFightData> BossFightTracker; // 0xd0(0x50)
	struct TMap<struct FString, struct FAssetTrackerData> SpawnTracker; // 0x120(0x50)
	char pad_170[0x258]; // 0x170(0x258)
	struct TMap<struct FGameplayTag, struct UNPC_Manager*> NPCManagerMap; // 0x3c8(0x50)
	struct UEnemyWeapon_Manager* WeaponManager; // 0x418(0x08)
	struct FMulticastInlineDelegate HighestEnemyChangedEvent; // 0x420(0x10)
	struct FMulticastInlineDelegate RemoveFromManagerEvent; // 0x430(0x10)
	struct FMulticastInlineDelegate AddToManagerEvent; // 0x440(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> NonNPCList; // 0x450(0x10)
	char pad_460[0x328]; // 0x460(0x328)
	struct TArray<struct ANPC_Character*> PostDeath_PendingNPCs; // 0x788(0x10)
	struct TMap<struct ANPC_Character*, struct FTimerHandle> PostDeath_ManagedNPCs; // 0x798(0x50)
	char pad_7E8[0x80]; // 0x7e8(0x80)
	struct FPostDeath_Params PostDeath_Params; // 0x868(0x18)
	char pad_880[0xf0]; // 0x880(0xf0)

	void TrackObject(struct FString ObjectName, struct AActor* ParentObject, struct AActor* ChildObject); // Function Phoenix.NPC_System.TrackObject // (Final|Native|Public|BlueprintCallable) // @ game+0x33a8150
	void TrackerCallback(struct AActor* ChildObject); // Function Phoenix.NPC_System.TrackerCallback // (Final|Native|Public) // @ game+0x33a82b0
	void TerminateAllBossFights(); // Function Phoenix.NPC_System.TerminateAllBossFights // (Final|Native|Public) // @ game+0x33a8130
	void StartWandLinkEvent(struct AActor* TargetActor, struct TArray<struct AActor*> ExcludeListAlways, struct TArray<struct AActor*> ExcludeListOnce); // Function Phoenix.NPC_System.StartWandLinkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7f80
	void StartBossFight(struct FName InBossFightName); // Function Phoenix.NPC_System.StartBossFight // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7cb0
	void SetToDead(struct AActor* InActorPtr); // Function Phoenix.NPC_System.SetToDead // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7910
	void SetOverrideThreatLevel(enum class ENPC_CombatThreatLevel InThreatLevel); // Function Phoenix.NPC_System.SetOverrideThreatLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7890
	void SetLoadoutConfigurationContext(struct FString InContext); // Function Phoenix.NPC_System.SetLoadoutConfigurationContext // (Final|Native|Public|BlueprintCallable) // @ game+0x33a77a0
	void SetCanPerceivePlayerStatic(bool bCanPerceive); // Function Phoenix.NPC_System.SetCanPerceivePlayerStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a7720
	void SetBossFightState(struct FName InBossFightName, enum class EBossStates InBossState); // Function Phoenix.NPC_System.SetBossFightState // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7650
	void SetBossFightCharacter(struct FName InBossFightName, struct AActor* InBossCharacterPtr); // Function Phoenix.NPC_System.SetBossFightCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7580
	void SendHermesMessageToDOVActors(struct ADynamicObjectVolume* InDOVPtr, struct FName InMessage); // Function Phoenix.NPC_System.SendHermesMessageToDOVActors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a74c0
	void SelectCycle(); // Function Phoenix.NPC_System.SelectCycle // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void ReportGameEvent(struct FGameplayTagContainer TagContainer, struct FVector Location, enum class EGameEvent_Intensity Intensity, float Duration, float Range, float Falloff, struct AActor* Instigator, bool bTrackBackToInstigator, struct AActor* Target, struct FName Name); // Function Phoenix.NPC_System.ReportGameEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33a7180
	void RemoveObject(struct AActor* ChildObject); // Function Phoenix.NPC_System.RemoveObject // (Final|Native|Public|BlueprintCallable) // @ game+0x33a70f0
	void RemoveNonNPC(struct AActor* NonNPCPtr); // Function Phoenix.NPC_System.RemoveNonNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x33a7060
	void RemoveFromManager(struct AActor* InActorPtr); // Function Phoenix.NPC_System.RemoveFromManager // (Final|Native|Public|BlueprintCallable) // @ game+0x33a6fd0
	void PostDeath_TimerModeCallback(); // Function Phoenix.NPC_System.PostDeath_TimerModeCallback // (Final|Native|Private) // @ game+0x33a6fb0
	void PostDeath_CleanupCallback(struct ANPC_Character* InNPCCharacter); // Function Phoenix.NPC_System.PostDeath_CleanupCallback // (Final|Native|Private) // @ game+0x33a6f20
	int32_t ParryLaunchedProjectileStart(struct FEnemy_ParryWindowSetupData& InSetupData, struct AActor* InOwner, struct AActor* InProjectile, float InVelocityMag, float InPostParryVelocityMag); // Function Phoenix.NPC_System.ParryLaunchedProjectileStart // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33a6d70
	void ParryLaunchedProjectileNotifyMunitionCreated(int32_t InWindowID, struct AActor* InOwnerPtr, struct AActor* InTargetPtr, struct AMunitionType_Base* InMunitionPtr); // Function Phoenix.NPC_System.ParryLaunchedProjectileNotifyMunitionCreated // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a6c30
	void ParryLaunchedProjectileEnd(int32_t InWindowID); // Function Phoenix.NPC_System.ParryLaunchedProjectileEnd // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x25dc920
	void OnSaveGameLoaded(); // Function Phoenix.NPC_System.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x33a6c10
	void OnGameToBeSaved(); // Function Phoenix.NPC_System.OnGameToBeSaved // (Final|Native|Public) // @ game+0x33a6bf0
	void OnCurtainRaised(); // Function Phoenix.NPC_System.OnCurtainRaised // (Final|Native|Public) // @ game+0x33a6bd0
	void OnCurtainLowered(); // Function Phoenix.NPC_System.OnCurtainLowered // (Final|Native|Public) // @ game+0x33a6bb0
	void OnBossDeadEvent(struct AActor* DeadActor); // Function Phoenix.NPC_System.OnBossDeadEvent // (Final|Native|Public) // @ game+0x33a6b20
	void KillNPC(struct AActor* InActorPtr); // Function Phoenix.NPC_System.KillNPC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a6940
	void KilledEvent(struct AActor* EnemyPtr, struct AActor* KilledByPtr, bool bKilledByPlayer, bool bPlayCameraCut); // Function Phoenix.NPC_System.KilledEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x33a69c0
	bool IsPlayerInCombat(); // Function Phoenix.NPC_System.IsPlayerInCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x33a6910
	bool IsBossFightActive(); // Function Phoenix.NPC_System.IsBossFightActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33a6860
	void GetTrackedChildren(struct AActor* ParentObject, struct TArray<struct AActor*>& FoundChildren); // Function Phoenix.NPC_System.GetTrackedChildren // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33a65f0
	struct FAssetTrackerData GetObjectTracker(struct FString ObjectName); // Function Phoenix.NPC_System.GetObjectTracker // (Final|Native|Public|BlueprintCallable) // @ game+0x33a64f0
	void GetNPCsByTypeWithinRadius(enum class ENPC_ManagerType ManagerType, struct FVector& SourceLocation, float Radius, struct TArray<struct AActor*>& FoundNPCs); // Function Phoenix.NPC_System.GetNPCsByTypeWithinRadius // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33a6360
	float GetClosest(struct AActor* NPCPtr); // Function Phoenix.NPC_System.GetClosest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33a62c0
	enum class EBossStates GetBossFightState(struct FName InBossFightName); // Function Phoenix.NPC_System.GetBossFightState // (Final|Native|Public|BlueprintCallable) // @ game+0x33a6220
	struct FName GetBossFightNameFromBossCharacter(struct AActor* BossActor); // Function Phoenix.NPC_System.GetBossFightNameFromBossCharacter // (Final|Native|Public) // @ game+0x33a6190
	struct FName GetBossFightName(struct FName BossDbId); // Function Phoenix.NPC_System.GetBossFightName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a6100
	struct FBossFightData GetBossFightData(struct FName InBossFightName); // Function Phoenix.NPC_System.GetBossFightData // (Final|Native|Public|BlueprintCallable) // @ game+0x33a6050
	struct AActor* GetBossFightCharacter(struct FName InBossFightName); // Function Phoenix.NPC_System.GetBossFightCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5fb0
	struct UNPC_System* Get(); // Function Phoenix.NPC_System.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a5f80
	void FollowAttackTimeout(); // Function Phoenix.NPC_System.FollowAttackTimeout // (Final|Native|Public) // @ game+0x33a5f60
	void FinishAvadaKedavraEvent(); // Function Phoenix.NPC_System.FinishAvadaKedavraEvent // (Final|Native|Public) // @ game+0x33a5dd0
	void EndWandLinkEvent(); // Function Phoenix.NPC_System.EndWandLinkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5c80
	void EndBossFight(struct FName InBossFightName); // Function Phoenix.NPC_System.EndBossFight // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5bf0
	void EnableTargetPerception(struct AActor* InActorPtr, bool bEnable); // Function Phoenix.NPC_System.EnableTargetPerception // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5b20
	void EnableCombat(struct AActor* InActorPtr, bool bEnable); // Function Phoenix.NPC_System.EnableCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5a70
	void ClearLoadoutConfigurationContext(); // Function Phoenix.NPC_System.ClearLoadoutConfigurationContext // (Final|Native|Public|BlueprintCallable) // @ game+0x33a59a0
	void ChangeManager(struct AActor* InActorPtr, struct FGameplayTag InNewTag); // Function Phoenix.NPC_System.ChangeManager // (Final|Native|Public|BlueprintCallable) // @ game+0x33a58d0
	bool CanPerceivePlayerStatic(); // Function Phoenix.NPC_System.CanPerceivePlayerStatic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a58a0
	bool AnyNPCLOSPlayer(); // Function Phoenix.NPC_System.AnyNPCLOSPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a5870
	bool AnyNPCAwareOfPlayer(); // Function Phoenix.NPC_System.AnyNPCAwareOfPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a5840
	bool AnyNPCAttackingPlayer(); // Function Phoenix.NPC_System.AnyNPCAttackingPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33a5810
	void AdvanceBossFightSystem(struct FName InBossFightName); // Function Phoenix.NPC_System.AdvanceBossFightSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5780
	void AdvanceBossFightManual(struct FName InBossFightName); // Function Phoenix.NPC_System.AdvanceBossFightManual // (Final|Native|Public|BlueprintCallable) // @ game+0x33a56f0
	void AdvanceBossFight(struct FName InBossFightName); // Function Phoenix.NPC_System.AdvanceBossFight // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5660
	void AddToManager(struct AActor* InActorPtr); // Function Phoenix.NPC_System.AddToManager // (Final|Native|Public|BlueprintCallable) // @ game+0x33a55d0
	void AddNonNPC(struct AActor* NonNPCPtr); // Function Phoenix.NPC_System.AddNonNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x33a5540
};

// Class Phoenix.NPC_DBRegManager
// Size: 0x6f0 (Inherited: 0xa8)
struct UNPC_DBRegManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x648]; // 0xa8(0x648)

	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent, enum class ESpawnActorCollisionHandlingMethod inCollisioinMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.NPC_DBRegManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x33a79a0
	void SaveData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.NPC_DBRegManager.SaveData // (Native|Public) // @ game+0x32658b0
	void RestoreData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.NPC_DBRegManager.RestoreData // (Native|Public) // @ game+0x3265670
	void OnSaveGameLoaded(); // Function Phoenix.NPC_DBRegManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x1074730
	uint32_t GetUniqueObjectID(struct FString InItemID); // Function Phoenix.NPC_DBRegManager.GetUniqueObjectID // (Native|Public) // @ game+0x33a66e0
	bool GetSpawnPath(struct FString InItemID, struct FSoftObjectPath& OutPath); // Function Phoenix.NPC_DBRegManager.GetSpawnPath // (Native|Public|HasOutParms|HasDefaults) // @ game+0x3384530
	bool GetSpawnAsset(struct FString InItemID, struct AActor*& OutAsset); // Function Phoenix.NPC_DBRegManager.GetSpawnAsset // (Native|Public|HasOutParms) // @ game+0x3384430
	float GetHealth(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.NPC_DBRegManager.GetHealth // (Native|Public) // @ game+0x3264680
	bool CreateItemAsScheduledEntity(struct FString InItemID); // Function Phoenix.NPC_DBRegManager.CreateItemAsScheduledEntity // (Native|Public) // @ game+0x33a59c0
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.NPC_DBRegManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.NPCDistance_SpeedChoice
// Size: 0x30 (Inherited: 0x28)
struct UNPCDistance_SpeedChoice : UNPC_MobilitySpeedChoice {
	float MinDist; // 0x28(0x04)
	float MaxDist; // 0x2c(0x04)
};

// Class Phoenix.NPCGameplayUtil
// Size: 0x28 (Inherited: 0x28)
struct UNPCGameplayUtil : UObject {

	void SetLinearDampeningAcrossPhysicsBodies(struct USkeletalMeshComponent* SkeletalMeshComp, float LinearDampening); // Function Phoenix.NPCGameplayUtil.SetLinearDampeningAcrossPhysicsBodies // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ac430
	void AddImpulseSpread(struct USkeletalMeshComponent* SkeletalMeshComp, struct FVector Velocity, bool bVelocityChange); // Function Phoenix.NPCGameplayUtil.AddImpulseSpread // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33abea0
};

// Class Phoenix.NPCTimersWrapper
// Size: 0x28 (Inherited: 0x28)
struct UNPCTimersWrapper : UObject {
};

// Class Phoenix.NumericTweenDummy
// Size: 0x28 (Inherited: 0x28)
struct UNumericTweenDummy : UObject {
};

// Class Phoenix.Object_OwningStation
// Size: 0x40 (Inherited: 0x38)
struct UObject_OwningStation : UActorProvider {
	struct UActorProvider* FindOwningStationFor; // 0x38(0x08)
};

// Class Phoenix.Object_StationStoryContent
// Size: 0x60 (Inherited: 0x28)
struct UObject_StationStoryContent : UObjectProvider {
	char pad_28[0x8]; // 0x28(0x08)
	struct FGameplayTagContainer Tags; // 0x30(0x20)
	struct TArray<struct UAnimationArchitectTagProvider*> TagProviders; // 0x50(0x10)
};

// Class Phoenix.ObjectBuoyancyComponent
// Size: 0x120 (Inherited: 0xc8)
struct UObjectBuoyancyComponent : UActorComponent {
	struct AActor* Owner; // 0xc8(0x08)
	struct UStaticMeshComponent* TargetMesh; // 0xd0(0x08)
	float TargetMass; // 0xd8(0x04)
	struct FVector TargetLoc; // 0xdc(0x0c)
	float HoverHeight; // 0xe8(0x04)
	float TargetBuoyancy; // 0xec(0x04)
	float ForcePercent; // 0xf0(0x04)
	struct FBoxSphereBounds targetBounds; // 0xf4(0x1c)
	float meshOrigin; // 0x110(0x04)
	float meshExtent; // 0x114(0x04)
	bool bTicking; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)

	void ToggleOn(bool bToggle); // Function Phoenix.ObjectBuoyancyComponent.ToggleOn // (Final|Native|Private|BlueprintCallable) // @ game+0x33ac6a0
};

// Class Phoenix.ObjectGrouper
// Size: 0x258 (Inherited: 0x248)
struct AObjectGrouper : AActor {
	struct TArray<struct AActor*> Objects; // 0x248(0x10)
};

// Class Phoenix.ObjectLevitateComponent
// Size: 0x158 (Inherited: 0xc8)
struct UObjectLevitateComponent : UActorComponent {
	float HoverForce; // 0xc8(0x04)
	float TorqueScale; // 0xcc(0x04)
	float HoverHeight; // 0xd0(0x04)
	float LinearDamping; // 0xd4(0x04)
	float AngularDamping; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UParticleSystem* DefaultLevitateVfx; // 0xe0(0x08)
	struct UAkAudioEvent* DefaultLevitateSfx; // 0xe8(0x08)
	bool bOverrideEffects; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct UParticleSystem* LevitateVfx; // 0xf8(0x08)
	struct UAkAudioEvent* LevitateSfx; // 0x100(0x08)
	struct UCurveFloat* HoverTargetOffset; // 0x108(0x08)
	struct UCurveVector* HoverTargetRotation; // 0x110(0x08)
	struct AActor* Owner; // 0x118(0x08)
	struct UStaticMeshComponent* LevitateMesh; // 0x120(0x08)
	float SavedHoverHeight; // 0x128(0x04)
	float SavedHoverForce; // 0x12c(0x04)
	float SavedMass; // 0x130(0x04)
	char pad_134[0x24]; // 0x134(0x24)
};

// Class Phoenix.ObjectStateComponent
// Size: 0x638 (Inherited: 0x5a0)
struct UObjectStateComponent : UBaseStateComponent {
	struct FObjectStateData ObjectStateData; // 0x5a0(0x98)

	void SetTargetable(bool bTargetable); // Function Phoenix.ObjectStateComponent.SetTargetable // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac610
	void SetStartBroken(bool StartBroken); // Function Phoenix.ObjectStateComponent.SetStartBroken // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac580
	void SetNeverAffectNavmesh(bool NeverAffectNavmesh); // Function Phoenix.ObjectStateComponent.SetNeverAffectNavmesh // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac4f0
	void SetImportant(bool bImportant); // Function Phoenix.ObjectStateComponent.SetImportant // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac280
	void SetHitSfx(struct UAkAudioEvent* InSfx); // Function Phoenix.ObjectStateComponent.SetHitSfx // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac3a0
	void SetDamageable(bool bDamageable); // Function Phoenix.ObjectStateComponent.SetDamageable // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac310
	void SetCanHighlight(bool bCanHighlight); // Function Phoenix.ObjectStateComponent.SetCanHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac280
	void SetBaseHealth(float baseHealth); // Function Phoenix.ObjectStateComponent.SetBaseHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x33ac200
};

// Class Phoenix.ObjectScalingData
// Size: 0x98 (Inherited: 0x30)
struct UObjectScalingData : UDataAsset {
	char bGrowable : 1; // 0x30(0x01)
	char bShrinkable : 1; // 0x30(0x01)
	char pad_30_2 : 6; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UCurveVector* CurveScaleLarger; // 0x38(0x08)
	struct UCurveVector* CurveScaleLargerOffset; // 0x40(0x08)
	struct UCurveVector* CurveScaleLargerRotation; // 0x48(0x08)
	struct UCurveVector* RestoreCurveScaleLarger; // 0x50(0x08)
	struct UCurveVector* RestoreCurveScaleLargerOffset; // 0x58(0x08)
	struct UCurveVector* RestoreCurveScaleLargerRotation; // 0x60(0x08)
	struct UCurveVector* CurveScaleSmaller; // 0x68(0x08)
	struct UCurveVector* CurveScaleSmallerOffset; // 0x70(0x08)
	struct UCurveVector* CurveScaleSmallerRotation; // 0x78(0x08)
	struct UCurveVector* RestoreCurveScaleSmaller; // 0x80(0x08)
	struct UCurveVector* RestoreCurveScaleSmallerOffset; // 0x88(0x08)
	struct UCurveVector* RestoreCurveScaleSmallerRotation; // 0x90(0x08)
};

// Class Phoenix.RepairInfo
// Size: 0x250 (Inherited: 0x28)
struct URepairInfo : UObject {
	struct UGeometryCollection* DestructibleGeometryCollection; // 0x28(0x08)
	struct UStaticMesh* BaseMesh; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct UPhysicalMaterial* ChunkPhysicalMaterial; // 0x40(0x08)
	struct TArray<struct UMultiFX2_Base*> DeathFX2; // 0x48(0x10)
	struct TArray<struct UMultiFX2_Base*> DamagableInPiecesFX2; // 0x58(0x10)
	enum class ENoiseSize DeathNoiseSize; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UObject* ChunkTrailVfx; // 0x70(0x08)
	struct TArray<struct UMultiFX2_Base*> ChunkTrailFX2; // 0x78(0x10)
	struct UObject* ChunkFadeVfx; // 0x88(0x08)
	struct UObject* ChunkImpactVfx; // 0x90(0x08)
	struct UAkAudioEvent* RepairSfx; // 0x98(0x08)
	struct UReparoData* ReparoDataPtr; // 0xa0(0x08)
	struct TArray<struct UReparoData*> ReparoDataArray; // 0xa8(0x10)
	struct AFieldSystemActor* DestroyObjectFieldSystemClass; // 0xb8(0x08)
	int32_t MaxClusterLevel; // 0xc0(0x04)
	bool bSimpleDestroy; // 0xc4(0x01)
	char pad_C5[0x18b]; // 0xc5(0x18b)
};

// Class Phoenix.ObjectStateDataContainer
// Size: 0xc0 (Inherited: 0x28)
struct UObjectStateDataContainer : UObjectStateDataContainerBase {
	struct FObjectStateData Data; // 0x28(0x98)
};

// Class Phoenix.ObjectStateInfoData
// Size: 0x4a8 (Inherited: 0x30)
struct UObjectStateInfoData : UDataAsset {
	bool bShowDebug; // 0x30(0x01)
	bool DebugObjectStateDiagnosis; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
	struct AActor* ObjectStateDiagnosisActorClass; // 0x38(0x08)
	float BumpSoundThreshold; // 0x40(0x04)
	float ImpulseIgnoreThreshold; // 0x44(0x04)
	char pad_48[0x4]; // 0x48(0x04)
	float RagdollImpulseIgnoreThreshold; // 0x4c(0x04)
	char pad_50[0x4]; // 0x50(0x04)
	float ChaosImpulseMultiplier; // 0x54(0x04)
	float ImpulseDamageDivider; // 0x58(0x04)
	float ImpactDamageThreshold; // 0x5c(0x04)
	float ObjectToCharacterVelocityThreshold; // 0x60(0x04)
	float CharacterToCharacterVelocityThreshold; // 0x64(0x04)
	float BecomeMovableDamageThreshold; // 0x68(0x04)
	float BecomeMovableVelocityThreshold; // 0x6c(0x04)
	float CharacterVelocityScale; // 0x70(0x04)
	float CharacterDamageScale; // 0x74(0x04)
	float CharacterToCharacterDamageScale; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
	struct FGameplayTagContainer CharacterCanBeDamagedStates; // 0x80(0x20)
	struct FGameplayTagContainer CharacterCanDealDamageStates; // 0xa0(0x20)
	float PlayerVelocityScale; // 0xc0(0x04)
	float PlayerDamageScale; // 0xc4(0x04)
	float LevelLoadedImpactIgnoreTime; // 0xc8(0x04)
	float SpawnedImpactIgnoreTime; // 0xcc(0x04)
	float ResetImpactIgnoreTime; // 0xd0(0x04)
	float CharacterStaticPhysicsHitIgnoreTime; // 0xd4(0x04)
	float OppugnoVelocityScale; // 0xd8(0x04)
	float OppugnoLaunchAngleMax; // 0xdc(0x04)
	float MaxMassDamagePercent; // 0xe0(0x04)
	float MaxHealthDamagePercent; // 0xe4(0x04)
	float MassContributionToDamage; // 0xe8(0x04)
	float HighPostImpactVelocityThreshold; // 0xec(0x04)
	float DestroyedVelocityScaleXY; // 0xf0(0x04)
	float DestroyedVelocityScaleZ; // 0xf4(0x04)
	float DestroyedVelocityScaleMin; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct TArray<struct UMultiFX2_Base*> PhysicsHitFX2; // 0x100(0x10)
	struct UInteractionArchitectAsset* PhysicsMunitionDataAsset; // 0x110(0x08)
	struct FGameplayTag PhysicsMunitionTag; // 0x118(0x08)
	float PhysicsFloorBounceDegreesFromVerticalThreshold; // 0x120(0x04)
	float PhysicsWallBounceDegreesFromHorizontalThreshold; // 0x124(0x04)
	float PhysicsWallBounceVelocityThreshold; // 0x128(0x04)
	struct FGameplayTag PhysicsWallBounceMunitionTag; // 0x12c(0x08)
	char pad_134[0x4]; // 0x134(0x04)
	struct TArray<struct FPhysicsReactionGroup> PhysicsHitArray; // 0x138(0x10)
	float PhysicsHitFromAboveThreshold; // 0x148(0x04)
	struct FGameplayTag PhysicsHitFromAboveMunitionTag; // 0x14c(0x08)
	float PhysicsHitFromBelowThreshold; // 0x154(0x04)
	struct FGameplayTag PhysicsHitFromBelowMunitionTag; // 0x158(0x08)
	struct UInteractionArchitectAsset* DefaultMunitionDataAsset; // 0x160(0x08)
	struct UInteractionArchitectAsset* SendMunitionDataAsset; // 0x168(0x08)
	float MinDamageOnVelocityTrackedCollision; // 0x170(0x04)
	float MaintainVelocityTime; // 0x174(0x04)
	float AccioGroundHitZThreshold; // 0x178(0x04)
	float AdditionalCommonBreakableCollisionDamage; // 0x17c(0x04)
	float IgnoreFallDamageTimeAfterSpawn; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct UCurveFloat* CurveHeightDamage; // 0x188(0x08)
	float VelocityTransferPercent; // 0x190(0x04)
	float ImpactIngoreTime; // 0x194(0x04)
	struct UCameraShakeBase* ImpactCameraShake; // 0x198(0x08)
	float ImpactCameraShakeDamageThreshold; // 0x1a0(0x04)
	float ImpactCameraShakeVelocityThreshold; // 0x1a4(0x04)
	float ImpactCameraShakeInnerRadius; // 0x1a8(0x04)
	float ImpactCameraShakeOuterRadius; // 0x1ac(0x04)
	float ImpactCameraShakeFalloff; // 0x1b0(0x04)
	float ImpactCameraShakeBaseDamage; // 0x1b4(0x04)
	float ImpactCameraShakeScale; // 0x1b8(0x04)
	float ImpactCameraShakeScaleMin; // 0x1bc(0x04)
	float ImpactCameraShakeScaleMax; // 0x1c0(0x04)
	char pad_1C4[0x4]; // 0x1c4(0x04)
	struct UAkAudioEvent* ImpactControllerVibration; // 0x1c8(0x08)
	float VulnerableTagDamageScale; // 0x1d0(0x04)
	float InReactionDamageIncrease; // 0x1d4(0x04)
	float InReactionDamageMultiplier; // 0x1d8(0x04)
	char pad_1DC[0x4]; // 0x1dc(0x04)
	struct UDataTable* ClassSizeData; // 0x1e0(0x08)
	struct UParticleSystem* SteamEffectPS; // 0x1e8(0x08)
	struct UInteractionArchitectAsset* FireDamageMunitionDataAsset; // 0x1f0(0x08)
	struct FGameplayTagContainer FireDamageTags; // 0x1f8(0x20)
	struct AMunitionType_Base* OnFireCharacterAOE; // 0x218(0x08)
	float FireDamageFloorPercent; // 0x220(0x04)
	char pad_224[0x4]; // 0x224(0x04)
	struct TArray<struct UMultiFX2_Base*> FrozenExtraDamageFX2; // 0x228(0x10)
	float ActivateRange; // 0x238(0x04)
	float DeactivateRange; // 0x23c(0x04)
	struct UMaterialPropertyData* DefaultMaterialPropertyData; // 0x240(0x08)
	struct TArray<struct AActor*> NoTrackingBaseClasses; // 0x248(0x10)
	struct TSet<struct AActor*> NoTrackingActorClassSet; // 0x258(0x50)
	struct TArray<struct UStateEffectComponent*> HealingRemoveEffects; // 0x2a8(0x10)
	struct FGameplayTagContainer HealingRemoveGameplayStateTags; // 0x2b8(0x20)
	struct TArray<struct FHealingFX> HealingFXArray; // 0x2d8(0x10)
	float DamageInPiecesAmountMultiplier; // 0x2e8(0x04)
	float DamageInPiecesMaxAmount; // 0x2ec(0x04)
	float DamageInPiecesImpulseMax; // 0x2f0(0x04)
	float DamageInPiecesImpulseMultiplier; // 0x2f4(0x04)
	float DamageInPiecesHealthZeroScale; // 0x2f8(0x04)
	float DamageInPiecesHealthZeroRadius; // 0x2fc(0x04)
	float NearDeathKneelInvulnerableTime; // 0x300(0x04)
	float KneelingHealth; // 0x304(0x04)
	float NonCombatKneelingRecoveryTime; // 0x308(0x04)
	float CreatureKneelingRecoveryTime; // 0x30c(0x04)
	float RecoverHealthPercent; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	int64_t TimeInInfirmary; // 0x318(0x08)
	struct AActor* ProtectionActor; // 0x320(0x08)
	struct TArray<struct UMultiFX2_Base*> BeamAwayFX2; // 0x328(0x10)
	struct TArray<struct UStateEffectComponent*> KneelingRemoveEffects; // 0x338(0x10)
	float DestroyImpulseMultiplier; // 0x348(0x04)
	float DestroyImpulseMax; // 0x34c(0x04)
	float DestroyNonSpellImpulseMultiplier; // 0x350(0x04)
	float BreakMeshVelocityThreshold; // 0x354(0x04)
	float BreakMeshVelocityMultiplier; // 0x358(0x04)
	float DestroyCenterOfObjectRadius; // 0x35c(0x04)
	float DestroyNonSpellRadius; // 0x360(0x04)
	float LargeChunkThreshold; // 0x364(0x04)
	float ThrowDeadCharacterThreshold; // 0x368(0x04)
	float DestroyVelocityScale; // 0x36c(0x04)
	struct TArray<struct UStateEffectComponent*> DestroyedTerminateStateEffects; // 0x370(0x10)
	float OverkillPercent; // 0x380(0x04)
	float PlayerOverkillPercent; // 0x384(0x04)
	struct AActor* LootDropContainer; // 0x388(0x08)
	struct AActor* LootDropContainerOnlyCoins; // 0x390(0x08)
	struct FVector LootDropImpulse; // 0x398(0x0c)
	struct FVector LootDropAngularImpulse; // 0x3a4(0x0c)
	float DisableChunkTime; // 0x3b0(0x04)
	float DisableChunkLinearSpeed; // 0x3b4(0x04)
	float DisableChunkLinearSpeedFrameMultiplier; // 0x3b8(0x04)
	float DisableChunkAngularSpeed; // 0x3bc(0x04)
	float DisableChunkAngularSpeedFrameMultiplier; // 0x3c0(0x04)
	int32_t DisableChunkSlowFrames; // 0x3c4(0x04)
	int32_t DisableChunkAfterFrames; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct UCameraShakeBase* DestroyCameraShake; // 0x3d0(0x08)
	float DestroyCameraShakeInnerRadius; // 0x3d8(0x04)
	float DestroyCameraShakeOuterRadius; // 0x3dc(0x04)
	float DestroyCameraShakeFalloff; // 0x3e0(0x04)
	float DestroyCameraShakeBaseMass; // 0x3e4(0x04)
	float DestroyCameraShakeScale; // 0x3e8(0x04)
	float DestroyCameraShakeScaleMin; // 0x3ec(0x04)
	float DestroyCameraShakeScaleMax; // 0x3f0(0x04)
	char pad_3F4[0x4]; // 0x3f4(0x04)
	struct UAkAudioEvent* DestroyControllerVibration; // 0x3f8(0x08)
	float CursedReflectedPercent; // 0x400(0x04)
	float CursedDamageMultiplier; // 0x404(0x04)
	float CursedDuration; // 0x408(0x04)
	float LongTalentCursedDuration; // 0x40c(0x04)
	struct TArray<struct UMultiFX2_Base*> CombatCursedActivateFX2; // 0x410(0x10)
	struct TArray<struct UMultiFX2_Base*> CombatCursedFlairFX2; // 0x420(0x10)
	struct UGameplayPropertyMod* CursedAllyDamageMod; // 0x430(0x08)
	struct TArray<struct UMultiFX2_Base*> HiddenFX2; // 0x438(0x10)
	float StartFastSpeed; // 0x448(0x04)
	float EndFastSpeed; // 0x44c(0x04)
	float TimeBeforeSlowSpeedCheckBegins; // 0x450(0x04)
	float SlowSpeedThreshold; // 0x454(0x04)
	int32_t SlowFramesBeforeTrackingEnd; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct UFieldSystem* AnchorFieldSystem; // 0x460(0x08)
	struct AFieldSystemActor* AnchorFieldSystemClass; // 0x468(0x08)
	struct TArray<struct FCooldownPickupData> CooldownPickupArray; // 0x470(0x10)
	struct TArray<struct FCooldownPickupImpulse> CooldownPickupImpulseArray; // 0x480(0x10)
	float CooldownPickupImpulseScaleLEnemy; // 0x490(0x04)
	float CooldownPickupImpulseScaleXLEnemy; // 0x494(0x04)
	float CooldownPickupLifetime; // 0x498(0x04)
	float CooldownPickupTargetingTimeMin; // 0x49c(0x04)
	float CooldownPickupTargetingTimeMax; // 0x4a0(0x04)
	char pad_4A4[0x4]; // 0x4a4(0x04)
};

// Class Phoenix.ObjectStateInterface
// Size: 0x28 (Inherited: 0x28)
struct UObjectStateInterface : UInterface {

	void SetupSfx(struct UAkComponent* AkComponent); // Function Phoenix.ObjectStateInterface.SetupSfx // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnReset(); // Function Phoenix.ObjectStateInterface.OnReset // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UPrimitiveComponent* GetMainPrimitive(); // Function Phoenix.ObjectStateInterface.GetMainPrimitive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct FName GetMainBone(); // Function Phoenix.ObjectStateInterface.GetMainBone // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.UnloadLevelTracker
// Size: 0x70 (Inherited: 0x28)
struct UUnloadLevelTracker : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UWorld* World; // 0x30(0x08)
	struct ULevelStreaming* StreamingLevel; // 0x38(0x08)
	struct UObjectStateManager* Manager; // 0x40(0x08)
	struct TArray<struct FString> RemovedOSINames; // 0x48(0x10)
	char pad_58[0x18]; // 0x58(0x18)

	void OnLevelUnloaded(); // Function Phoenix.UnloadLevelTracker.OnLevelUnloaded // (Final|Native|Public) // @ game+0x33ba600
	void Cleanup(); // Function Phoenix.UnloadLevelTracker.Cleanup // (Final|Native|Public) // @ game+0x33b9b10
};

// Class Phoenix.ObjectStateManager
// Size: 0x320 (Inherited: 0x28)
struct UObjectStateManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TMap<struct AActor*, struct UObjectStateInfo*> OsiMap; // 0x38(0x50)
	struct TArray<struct UObjectStateInfo*> OsiActiveList; // 0x88(0x10)
	struct TArray<struct UObjectStateInfo*> OsiInactiveList; // 0x98(0x10)
	struct TArray<struct UObjectStateInfo*> OsiToActivateLater; // 0xa8(0x10)
	struct TMap<struct AActor*, struct AActor*> OverrideRepairLocationMap; // 0xb8(0x50)
	struct TMap<uint32_t, struct UMaterialPropertyData*> MaterialPropertyMap; // 0x108(0x50)
	struct TArray<struct AActor*> PlayerActorList; // 0x158(0x10)
	struct TArray<struct FObjectStateCollisionPair> CollisionPairs; // 0x168(0x10)
	struct TWeakObjectPtr<struct UWorld> World; // 0x178(0x08)
	struct TMap<struct TWeakObjectPtr<struct AActor>, struct FOriginalInfo> OriginalInfoMap; // 0x180(0x50)
	struct TMap<struct FString, struct UObjectStateInfo*> OsiRemovedMap; // 0x1d0(0x50)
	struct UContextFilterComponent* ContextFilterComponent; // 0x220(0x08)
	char pad_228[0xa0]; // 0x228(0xa0)
	struct TArray<struct UUnloadLevelTracker*> UnloadTrackerArray; // 0x2c8(0x10)
	char pad_2D8[0x48]; // 0x2d8(0x48)

	void UpdateOriginalInfo(struct AActor* InActor); // Function Phoenix.ObjectStateManager.UpdateOriginalInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x33ba760
	void SetOriginalTransform(struct AActor* InActor, struct FTransform InTransform); // Function Phoenix.ObjectStateManager.SetOriginalTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33ba620
	void OnActorEndPlay(struct AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.ObjectStateManager.OnActorEndPlay // (Final|Native|Protected) // @ game+0x33ba530
	bool IsRevelioActor(struct AActor* InActor); // Function Phoenix.ObjectStateManager.IsRevelioActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba4a0
	void HighlightActorWithRevelio(struct AActor* InActor, bool bHighlight); // Function Phoenix.ObjectStateManager.HighlightActorWithRevelio // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba3e0
	struct UObjectStateManager* GetObjectStateManager(struct UObject* WorldContext); // Function Phoenix.ObjectStateManager.GetObjectStateManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba2e0
	struct UObjectStateInfo* GetObjectStateInfo(struct AActor* InActor); // Function Phoenix.ObjectStateManager.GetObjectStateInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba250
	int32_t GetDbUniqueId(struct AActor* InActor); // Function Phoenix.ObjectStateManager.GetDbUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba1c0
	struct FName GetDbSubType(struct AActor* InActor); // Function Phoenix.ObjectStateManager.GetDbSubType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba130
	struct FName GetDbId(struct AActor* InActor); // Function Phoenix.ObjectStateManager.GetDbId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba0a0
	struct FName GetDbClassId(struct AActor* InActor); // Function Phoenix.ObjectStateManager.GetDbClassId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ba010
	struct UCharacterStateInfo* GetCharacterStateInfo(struct ABase_Character* InCharacter); // Function Phoenix.ObjectStateManager.GetCharacterStateInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9f80
	struct UObjectStateManager* Get(struct UWorld* World); // Function Phoenix.ObjectStateManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9e50
	void EnableCcdForXSeconds(struct AActor* InActor, float Time); // Function Phoenix.ObjectStateManager.EnableCcdForXSeconds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9d90
	bool EnableCcd(struct AActor* InActor); // Function Phoenix.ObjectStateManager.EnableCcd // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9d00
	void EnableAutoRepair(struct UObject* InObject, float MinRepairDelay, float MaxRepairDelay, struct UReparoData* ReparoDataOverride); // Function Phoenix.ObjectStateManager.EnableAutoRepair // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9bb0
	void DisableAutoRepair(struct UObject* InObject); // Function Phoenix.ObjectStateManager.DisableAutoRepair // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33b9b30
};

// Class Phoenix.ObliviateSpellTool
// Size: 0x870 (Inherited: 0x868)
struct AObliviateSpellTool : AFireOnceSpellTool {
	float DazeTime; // 0x868(0x04)
	char pad_86C[0x4]; // 0x86c(0x04)
};

// Class Phoenix.OffscreenThreatComponent
// Size: 0x5e0 (Inherited: 0x5d0)
struct UOffscreenThreatComponent : UWidgetComponent {
	int32_t PointerIndex; // 0x5d0(0x04)
	char pad_5D4[0xc]; // 0x5d4(0x0c)

	void SetAttackState(enum class EEnemy_AttackThreatState AttackState); // Function Phoenix.OffscreenThreatComponent.SetAttackState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.OnScreenObjectIndicator
// Size: 0x270 (Inherited: 0x248)
struct AOnScreenObjectIndicator : AActor {
	struct UWidgetComponent* WidgetComponent; // 0x248(0x08)
	struct UUserWidget* IndicatorScreenWidgetClass; // 0x250(0x08)
	struct UUserWidget* IndicatorScreenWidget; // 0x258(0x08)
	struct UCanvasPanelSlot* OffscreenIndicatorHudSlot; // 0x260(0x08)
	bool bOffscreen; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
};

// Class Phoenix.OppugnoInterface
// Size: 0x28 (Inherited: 0x28)
struct UOppugnoInterface : UInterface {

	void OnOppugnoThrow(struct AActor* Instigator, struct AActor* Target, struct FVector Velocity); // Function Phoenix.OppugnoInterface.OnOppugnoThrow // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x33bdd30
	void OnOppugnoPull(struct AActor* Instigator); // Function Phoenix.OppugnoInterface.OnOppugnoPull // (Native|Event|Public|BlueprintEvent) // @ game+0x33bdca0
	void OnOppugnoImpact(struct AActor* Instigator, struct AActor* Target, struct AActor* HitObject); // Function Phoenix.OppugnoInterface.OnOppugnoImpact // (Native|Event|Public|BlueprintEvent) // @ game+0x33bda10
	void OnOppugnoHold(struct AActor* Instigator); // Function Phoenix.OppugnoInterface.OnOppugnoHold // (Native|Event|Public|BlueprintEvent) // @ game+0x33bd980
	void OnOppugnoEnd(struct AActor* Instigator); // Function Phoenix.OppugnoInterface.OnOppugnoEnd // (Native|Event|Public|BlueprintEvent) // @ game+0x1bf0fc0
	void OnHitByOppugnoImpact(struct AActor* Instigator, struct AActor* Object); // Function Phoenix.OppugnoInterface.OnHitByOppugnoImpact // (Native|Event|Public|BlueprintEvent) // @ game+0x33bd8b0
};

// Class Phoenix.OppugnoSpecialTagsActor
// Size: 0x28 (Inherited: 0x28)
struct UOppugnoSpecialTagsActor : UInterface {

	struct FGameplayTagContainer GetSpecialTags(); // Function Phoenix.OppugnoSpecialTagsActor.GetSpecialTags // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33bd680
	void AddSpecialTag(struct FGameplayTag GameplayTag); // Function Phoenix.OppugnoSpecialTagsActor.AddSpecialTag // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33bd280
};

// Class Phoenix.OppugnoSpellTool
// Size: 0xc48 (Inherited: 0x958)
struct AOppugnoSpellTool : AChannelingSpellTool {
	struct TArray<struct FOppugnoLevelData> LevelDataArray; // 0x958(0x10)
	float TargetIdentifyRadius; // 0x968(0x04)
	float OppugnoAngularDamping; // 0x96c(0x04)
	float OppugnoLinearDamping; // 0x970(0x04)
	float ClearActorTagAfterThrowTime; // 0x974(0x04)
	struct TArray<struct AActor*> ActorsToSpawn; // 0x978(0x10)
	struct TArray<struct UMultiFX2_Base*> SpawnFX2; // 0x988(0x10)
	float AdjustTargetHeight; // 0x998(0x04)
	float RagdollImpulseScale; // 0x99c(0x04)
	float DisableCharacterCollisionTime; // 0x9a0(0x04)
	char pad_9A4[0x4]; // 0x9a4(0x04)
	struct TArray<struct FVector> ObjectOffsetArray; // 0x9a8(0x10)
	struct FVector HoldTorque; // 0x9b8(0x0c)
	float MinimumHoldTorque; // 0x9c4(0x04)
	struct TArray<struct UMultiFX2_Base*> PullFX2; // 0x9c8(0x10)
	struct UAkAudioEvent* PullMotionFX; // 0x9d8(0x08)
	struct TArray<struct UMultiFX2_Base*> HoldFX2; // 0x9e0(0x10)
	struct TArray<struct UMultiFX2_Base*> ThrowFX2; // 0x9f0(0x10)
	struct UAkAudioEvent* ThrowMotionFX; // 0xa00(0x08)
	struct TArray<struct UMultiFX2_Base*> ImpactFX2; // 0xa08(0x10)
	struct UCurveFloat* ThrowTimeDilationCurve; // 0xa18(0x08)
	bool bReplacePhysicsObjectWithMunitionOnThrow; // 0xa20(0x01)
	char pad_A21[0x7]; // 0xa21(0x07)
	struct AMunitionType_Subsonic* MunitionToSpawn; // 0xa28(0x08)
	float MinDamageDealt; // 0xa30(0x04)
	float MaxDamageDealt; // 0xa34(0x04)
	float MinDamageDealtCharacter; // 0xa38(0x04)
	float MaxDamageDealtCharacter; // 0xa3c(0x04)
	float MinDamageTaken; // 0xa40(0x04)
	float MaxDamageTaken; // 0xa44(0x04)
	float MinDamageTakenCharacter; // 0xa48(0x04)
	float MaxDamageTakenCharacter; // 0xa4c(0x04)
	float InterpPositionSpeed; // 0xa50(0x04)
	float InterpRotationSpeed; // 0xa54(0x04)
	enum class EObjectSizeClass MaximumCharacterSize; // 0xa58(0x01)
	char pad_A59[0x7]; // 0xa59(0x07)
	struct TArray<struct AActor*> IgnoreActors; // 0xa60(0x10)
	struct AActor* AttachedActor; // 0xa70(0x08)
	struct TArray<struct UPrimitiveComponent*> RestorePullCollisionPrim; // 0xa78(0x10)
	char pad_A88[0x1c0]; // 0xa88(0x1c0)

	void TriggerOnOppugnoImpact(struct AActor* InSrcActor, struct AActor* InTargetActor); // Function Phoenix.OppugnoSpellTool.TriggerOnOppugnoImpact // (Final|Native|Public|BlueprintCallable) // @ game+0x33be530
	void SetThrowTarget(struct FVector InLocation); // Function Phoenix.OppugnoSpellTool.SetThrowTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33be460
	void OnOppugnoMunitionImpact(struct AMunitionType_Base* MunitionInstance, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.OppugnoSpellTool.OnOppugnoMunitionImpact // (Native|Public|HasOutParms) // @ game+0x33bdb10
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.OppugnoSpellTool.OnActorHit // (Native|Public|HasOutParms|HasDefaults) // @ game+0x33bd710
};

// Class Phoenix.OptionsWidget
// Size: 0x268 (Inherited: 0x268)
struct UOptionsWidget : UUserWidget {

	void ReturnToFrontEndMenu(); // Function Phoenix.OptionsWidget.ReturnToFrontEndMenu // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.OverlandMapScreen
// Size: 0x4e0 (Inherited: 0x4d8)
struct UOverlandMapScreen : UMapScreenBase {
	struct UMapOverland* OverlandMap; // 0x4d8(0x08)

	void RegionChange_Event(struct APhoenixMapRegion* regionActor, struct APhoenixMapRegion* subregionActor, bool noString); // Function Phoenix.OverlandMapScreen.RegionChange_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HoveredFilterRegion_Event(struct UMapIcon* Icon); // Function Phoenix.OverlandMapScreen.HoveredFilterRegion_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UMapOverland* GetMap(); // Function Phoenix.OverlandMapScreen.GetMap // (Final|Native|Public|BlueprintCallable) // @ game+0x3300f90
	void ExitHogwarts_Event(); // Function Phoenix.OverlandMapScreen.ExitHogwarts_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void EnterHogwarts_Event(); // Function Phoenix.OverlandMapScreen.EnterHogwarts_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.MapPath
// Size: 0xb0 (Inherited: 0x28)
struct UMapPath : UObject {
	struct TArray<struct FVector> Path; // 0x28(0x10)
	struct TArray<struct UMapPath*> IntersectedPaths; // 0x38(0x10)
	struct TArray<float> IntersectedChildTSegmentValues; // 0x48(0x10)
	struct TArray<int32_t> IntersectedChildSegment; // 0x58(0x10)
	struct TArray<float> IntersectedParentTSegmentValues; // 0x68(0x10)
	struct TArray<int32_t> IntersectedParentSegment; // 0x78(0x10)
	int32_t ClosestPathIndexToA; // 0x88(0x04)
	int32_t ClosestPathIndexToB; // 0x8c(0x04)
	float Length; // 0x90(0x04)
	float Width; // 0x94(0x04)
	char pad_98[0x8]; // 0x98(0x08)
	struct TArray<struct FPathPointTags> PathTags; // 0xa0(0x10)
};

// Class Phoenix.MapPathData
// Size: 0x38 (Inherited: 0x28)
struct UMapPathData : UObject {
	struct TArray<struct UMapPath*> AllPaths; // 0x28(0x10)
};

// Class Phoenix.OverlandPathFinder
// Size: 0x188 (Inherited: 0x28)
struct UOverlandPathFinder : UObject {
	struct UMapPath* ClosestPathToStart; // 0x28(0x08)
	struct UMapPath* ClosestPathToEnd; // 0x30(0x08)
	struct TArray<struct FVector> PathPoints; // 0x38(0x10)
	float MaxSpliceDistance; // 0x48(0x04)
	bool ShowUnknownRoads; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct TArray<struct APhoenixPathActor*> MapPathActors; // 0x50(0x10)
	struct FLinearColor Road50Color; // 0x60(0x10)
	struct FLinearColor Road100Color; // 0x70(0x10)
	struct FLinearColor Road200Color; // 0x80(0x10)
	struct FLinearColor RoadUnknownColor; // 0x90(0x10)
	struct FDebugMapData debugAStarSearchData; // 0xa0(0x50)
	struct UMapPathData* AllRoads; // 0xf0(0x08)
	struct UMapPathData* AllFlights; // 0xf8(0x08)
	char pad_100[0x68]; // 0x100(0x68)
	struct TArray<struct ULevelStreamingDynamic*> StreamingLevels; // 0x168(0x10)
	char pad_178[0x10]; // 0x178(0x10)

	void RoadSplineTileLoadedCallback(); // Function Phoenix.OverlandPathFinder.RoadSplineTileLoadedCallback // (Final|Native|Public) // @ game+0x1074730
	void MapCreateRoadSplineData(); // Function Phoenix.OverlandPathFinder.MapCreateRoadSplineData // (Final|Exec|Native|Public) // @ game+0x1074730
	struct TArray<struct FVector> GetPath(); // Function Phoenix.OverlandPathFinder.GetPath // (Final|Native|Public|BlueprintCallable) // @ game+0x33bd600
};

// Class Phoenix.OverlapAudioDataAsset
// Size: 0x40 (Inherited: 0x40)
struct UOverlapAudioDataAsset : UOverlapEffectsDataAsset {
};

// Class Phoenix.OverlapAudioComponent
// Size: 0x138 (Inherited: 0x138)
struct UOverlapAudioComponent : UOverlapEffectsComponent {
};

// Class Phoenix.OwlMailNotification
// Size: 0x2e8 (Inherited: 0x2e8)
struct UOwlMailNotification : UHUDElementGroup {

	int32_t PlayMailDialogLine(struct FString MailID); // Function Phoenix.OwlMailNotification.PlayMailDialogLine // (Final|Native|Public|BlueprintCallable) // @ game+0x33bded0
};

// Class Phoenix.OwnershipComponent
// Size: 0x350 (Inherited: 0xc8)
struct UOwnershipComponent : UActorComponent {
	struct FDbDoubleColumnInfo m_DbIdInfo[0x3]; // 0xc8(0x288)

	bool IsTakingObjectStealing(struct AActor* ObjectToTake, struct AActor* WhoIsTaking); // Function Phoenix.OwnershipComponent.IsTakingObjectStealing // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f04680
	bool IsEntityAnOwner(struct AActor* Owned, struct UScheduledEntity* ScheduledEntity); // Function Phoenix.OwnershipComponent.IsEntityAnOwner // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f04680
	bool HasOwnership(struct AActor* Owned); // Function Phoenix.OwnershipComponent.HasOwnership // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f044a0
	bool GetOwnership(struct AActor* Owned, struct FString& o_OwnerName); // Function Phoenix.OwnershipComponent.GetOwnership // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33bd510
	enum class SocialCapitalStatusIDs GetMinimumPlayerStatusWithOwners(struct AActor* OwnedObject); // Function Phoenix.OwnershipComponent.GetMinimumPlayerStatusWithOwners // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33bd480
	void CopyOwnership(struct AActor* From, struct AActor* To); // Function Phoenix.OwnershipComponent.CopyOwnership // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33bd310
};

// Class Phoenix.P4Support
// Size: 0x28 (Inherited: 0x28)
struct UP4Support : UObject {

	struct FString GetCurrentPerforceChangelist(); // Function Phoenix.P4Support.GetCurrentPerforceChangelist // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33bd3d0
};

// Class Phoenix.PadlockComponent
// Size: 0x3a0 (Inherited: 0x220)
struct UPadlockComponent : ULockableComponent {
	enum class ELockDifficulty LockDifficulty; // 0x220(0x01)
	bool ReverseLock; // 0x221(0x01)
	char pad_222[0xe]; // 0x222(0x0e)
	struct FTransform LockMeshRelativeTransform; // 0x230(0x30)
	struct TArray<struct UStaticMesh*> LockedMeshArray; // 0x260(0x10)
	struct TArray<struct UStaticMesh*> UnlockedMeshArray; // 0x270(0x10)
	struct UCurveFloat* GlowCurve; // 0x280(0x08)
	struct UParticleSystem* GlowParticleSystem; // 0x288(0x08)
	char pad_290[0xe8]; // 0x290(0xe8)
	struct UMaterialInstanceDynamic* LockMaterialInstance; // 0x378(0x08)
	struct UMeshComponent* RemovedMeshComponent; // 0x380(0x08)
	struct FTimerHandle DeleteLockTimerHandle; // 0x388(0x08)
	char pad_390[0x10]; // 0x390(0x10)

	void StartGlow(); // Function Phoenix.PadlockComponent.StartGlow // (Final|Native|Protected) // @ game+0x33be510
	void StartDelayedGlow(); // Function Phoenix.PadlockComponent.StartDelayedGlow // (Final|Native|Protected) // @ game+0x33be4f0
	void SetGlowStrength(float GlowWipeStrength); // Function Phoenix.PadlockComponent.SetGlowStrength // (Final|Native|Protected) // @ game+0x33be160
};

// Class Phoenix.PadlockDoor
// Size: 0x528 (Inherited: 0x520)
struct APadlockDoor : ADoor {
	struct ULockableComponent* LockableComponent; // 0x520(0x08)

	void SetLockedAndDifficulty(bool Locked, enum class ELockDifficulty Difficulty, bool OpenLockable, bool ThrowLock, bool PlaySoundsAndEffects, bool DoChild); // Function Phoenix.PadlockDoor.SetLockedAndDifficulty // (Final|Native|Public|BlueprintCallable) // @ game+0x33be260
	void SetLockDifficulty(enum class ELockDifficulty Difficulty); // Function Phoenix.PadlockDoor.SetLockDifficulty // (Final|Native|Public|BlueprintCallable) // @ game+0x33be1e0
	enum class ELockDifficulty GetLockDifficulty(); // Function Phoenix.PadlockDoor.GetLockDifficulty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33bd450
};

// Class Phoenix.PageStack
// Size: 0x38 (Inherited: 0x28)
struct UPageStack : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	void Reset(); // Function Phoenix.PageStack.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x33be140
	void Push(struct FString Widget); // Function Phoenix.PageStack.Push // (Final|Native|Public|BlueprintCallable) // @ game+0x33be050
	struct FString Pop(); // Function Phoenix.PageStack.Pop // (Final|Native|Public|BlueprintCallable) // @ game+0x33bdfd0
	struct FString Peek(); // Function Phoenix.PageStack.Peek // (Final|Native|Public|BlueprintCallable) // @ game+0x33bde50
	struct TArray<struct FString> GetStack(); // Function Phoenix.PageStack.GetStack // (Final|Native|Public|BlueprintCallable) // @ game+0x33bd6e0
};

// Class Phoenix.ParallaxWidget
// Size: 0x288 (Inherited: 0x268)
struct UParallaxWidget : UUserWidget {
	float SlideRate; // 0x268(0x04)
	char pad_26C[0x1c]; // 0x26c(0x1c)

	void SyncParallaxToCursor(struct UCanvasPanelSlot* ParallaxingObject); // Function Phoenix.ParallaxWidget.SyncParallaxToCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3e00
	void SetInitialCursorPosition(struct UCanvasPanelSlot* ParallaxingObject); // Function Phoenix.ParallaxWidget.SetInitialCursorPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3730
	void IgnoreParallax(); // Function Phoenix.ParallaxWidget.IgnoreParallax // (Final|Native|Public|BlueprintCallable) // @ game+0x33c31a0
	struct UCanvasPanelSlot* GetSlot(); // Function Phoenix.ParallaxWidget.GetSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x3344ff0
	void ApplyParallaxEffect(struct UCanvasPanelSlot* ParallaxingObject); // Function Phoenix.ParallaxWidget.ApplyParallaxEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2450
	void ApplyParallax(); // Function Phoenix.ParallaxWidget.ApplyParallax // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2430
};

// Class Phoenix.ParallaxWindowHelper
// Size: 0x240 (Inherited: 0x220)
struct UParallaxWindowHelper : USceneComponent {
	struct FVector PositiveExtents; // 0x218(0x0c)
	struct FVector NegativeExtents; // 0x224(0x0c)
	float RotationAngle; // 0x230(0x04)
	bool bShowDebugBox; // 0x234(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
};

// Class Phoenix.ParticleFXContainer
// Size: 0x270 (Inherited: 0x248)
struct AParticleFXContainer : AActor {
	char pad_248[0x20]; // 0x248(0x20)
	struct USceneComponent* SceneComp; // 0x268(0x08)

	void DestroySelf(); // Function Phoenix.ParticleFXContainer.DestroySelf // (Final|Native|Public) // @ game+0x33c28f0
	void DeactiveAndDestroyAfterXSeconds(float Seconds); // Function Phoenix.ParticleFXContainer.DeactiveAndDestroyAfterXSeconds // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2760
	void AddParticleEmitter(struct UParticleSystem* SystemTemplate); // Function Phoenix.ParticleFXContainer.AddParticleEmitter // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2310
	void AddNiagaraSystem(struct UNiagaraSystem* SystemTemplate); // Function Phoenix.ParticleFXContainer.AddNiagaraSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2280
};

// Class Phoenix.ParticleMeshRenderWidget
// Size: 0x2f0 (Inherited: 0x268)
struct UParticleMeshRenderWidget : UUserWidget {
	struct FSMeshWidgetParticleEmitterProperties Properties; // 0x268(0x48)
	struct UStaticMesh* ParticleMesh; // 0x2b0(0x08)
	struct UMaterialInterface* Material; // 0x2b8(0x08)
	struct UTexture2D* ParticleTexture; // 0x2c0(0x08)
	char pad_2C8[0x10]; // 0x2c8(0x10)
	struct UMaterialInstanceDynamic* MaterialDynamic; // 0x2d8(0x08)
	struct URUserVectorArtData* MeshAsset; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)

	void StopEmitter(); // Function Phoenix.ParticleMeshRenderWidget.StopEmitter // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x33c3de0
	void StartEmitter(); // Function Phoenix.ParticleMeshRenderWidget.StartEmitter // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x33c3c90
	void SetMaterial(struct UMaterialInterface* pMaterial); // Function Phoenix.ParticleMeshRenderWidget.SetMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x33c37c0
	struct FLinearColor GetColorAndOpacity(); // Function Phoenix.ParticleMeshRenderWidget.GetColorAndOpacity // (Final|BlueprintCosmetic|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x3344ec0
	struct UMaterialInstanceDynamic* CreateMaterial(struct UMaterialInterface* pMaterial); // Function Phoenix.ParticleMeshRenderWidget.CreateMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x33c26c0
};

// Class Phoenix.MapPathComponent
// Size: 0x570 (Inherited: 0x510)
struct UMapPathComponent : UProceduralMeshComponent {
	char pad_510[0x60]; // 0x510(0x60)
};

// Class Phoenix.PhoenixPathActor
// Size: 0x280 (Inherited: 0x248)
struct APhoenixPathActor : AActor {
	struct UMaterialInstanceDynamic* PathDynamicMaterial; // 0x248(0x08)
	struct UMaterialInterface* PathMaterial; // 0x250(0x08)
	struct UMaterialInterface* WorldPathMaterial; // 0x258(0x08)
	struct TArray<struct FVector> ManagedPathPoints; // 0x260(0x10)
	float PathWidth; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UMapPathComponent* PathComponent; // 0x278(0x08)
};

// Class Phoenix.PathCollector
// Size: 0x38 (Inherited: 0x28)
struct UPathCollector : UObject {
	struct TArray<struct FPathCollectorPath> ClosestPaths; // 0x28(0x10)
};

// Class Phoenix.PathHelperComponent
// Size: 0x2a8 (Inherited: 0xc8)
struct UPathHelperComponent : UActorComponent {
	float TravelSpeed; // 0xc8(0x04)
	float MinTravelSpeed; // 0xcc(0x04)
	float TravelTime; // 0xd0(0x04)
	float DistanceBeforeAttract; // 0xd4(0x04)
	float Height; // 0xd8(0x04)
	float HelperRadius; // 0xdc(0x04)
	float Deflection; // 0xe0(0x04)
	float DelayBetweenPoints; // 0xe4(0x04)
	float StartDelay; // 0xe8(0x04)
	float AttractHoldTime; // 0xec(0x04)
	float StartMoveDistSq; // 0xf0(0x04)
	bool bNearActivate; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	float CameraRotationTime; // 0xf8(0x04)
	int32_t DebugNumberOfPathPointsToShow; // 0xfc(0x04)
	bool bIsRunningHelp; // 0x100(0x01)
	bool bAllowCollisionDuringZip; // 0x101(0x01)
	bool bShowExitPath; // 0x102(0x01)
	bool bShowDebug; // 0x103(0x01)
	bool bJustFollowPath; // 0x104(0x01)
	bool bOrientActorToPath; // 0x105(0x01)
	bool bHideActorAtEnd; // 0x106(0x01)
	char pad_107[0x1]; // 0x107(0x01)
	struct TArray<struct FVector> Path; // 0x108(0x10)
	struct FVector NextPoint; // 0x118(0x0c)
	struct FVector CurrentPoint; // 0x124(0x0c)
	float DistanceToAvatarSq; // 0x130(0x04)
	float PlayerSpeed; // 0x134(0x04)
	float PlayerToPathHelperDot; // 0x138(0x04)
	struct FVector PlayerForward; // 0x13c(0x0c)
	struct FVector CurrentVelocity; // 0x148(0x0c)
	float CurrentSpeed; // 0x154(0x04)
	struct FVector FirstPointInView; // 0x158(0x0c)
	int32_t FirstPointInViewIndex; // 0x164(0x04)
	bool FirstPointInViewAchieved; // 0x168(0x01)
	char pad_169[0x3]; // 0x169(0x03)
	float MaxZipPointDistance; // 0x16c(0x04)
	float SpawnDistance; // 0x170(0x04)
	float MinSpawnDistance; // 0x174(0x04)
	float ReverseSpawnDistance; // 0x178(0x04)
	float MinReverseSpawnDistance; // 0x17c(0x04)
	char pad_180[0x2c]; // 0x180(0x2c)
	int32_t EndPointIndex; // 0x1ac(0x04)
	bool HasLineOfSight; // 0x1b0(0x01)
	bool UseCreatureAnimation; // 0x1b1(0x01)
	char pad_1B2[0x6]; // 0x1b2(0x06)
	struct FMulticastInlineDelegate StartStartEvent; // 0x1b8(0x10)
	struct FMulticastInlineDelegate DeployStartEvent; // 0x1c8(0x10)
	char pad_1D8[0x14]; // 0x1d8(0x14)
	int32_t NumberOfFramesForTurn; // 0x1ec(0x04)
	struct FMulticastInlineDelegate DeployTurnStartEvent; // 0x1f0(0x10)
	struct FMulticastInlineDelegate RunStartEvent; // 0x200(0x10)
	struct FMulticastInlineDelegate AttractStartEvent; // 0x210(0x10)
	struct FMulticastInlineDelegate OnPopOutStart; // 0x220(0x10)
	struct FMulticastInlineDelegate OnEndStartEvent; // 0x230(0x10)
	char pad_240[0x68]; // 0x240(0x68)

	void StartStart(); // Function Phoenix.PathHelperComponent.StartStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3dc0
	void StartRun(); // Function Phoenix.PathHelperComponent.StartRun // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3da0
	void StartHelp_Event(); // Function Phoenix.PathHelperComponent.StartHelp_Event // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void StartHelp(struct TArray<struct FVector> InPath); // Function Phoenix.PathHelperComponent.StartHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3cb0
	void StartDeployTurn(); // Function Phoenix.PathHelperComponent.StartDeployTurn // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3c70
	void StartDeploy(); // Function Phoenix.PathHelperComponent.StartDeploy // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3c50
	void SetState(enum class EHelperState InState); // Function Phoenix.PathHelperComponent.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3970
	void SetNewStopAndAttractPoint(int32_t Index, struct FVector Point, bool CreatePoint); // Function Phoenix.PathHelperComponent.SetNewStopAndAttractPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c3850
	void RunStart(); // Function Phoenix.PathHelperComponent.RunStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3500
	void PopOutStart(); // Function Phoenix.PathHelperComponent.PopOutStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c34c0
	void EndStart(); // Function Phoenix.PathHelperComponent.EndStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2910
	void DeployTurnStart(); // Function Phoenix.PathHelperComponent.DeployTurnStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c28d0
	void DeployStart(); // Function Phoenix.PathHelperComponent.DeployStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c28b0
	float CalculateAngleBetweenTwoVectors(struct FVector v1, struct FVector v2); // Function Phoenix.PathHelperComponent.CalculateAngleBetweenTwoVectors // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c2500
	void AttractStart(); // Function Phoenix.PathHelperComponent.AttractStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33c24e0
};

// Class Phoenix.PathNavigationManager
// Size: 0x5e8 (Inherited: 0x28)
struct UPathNavigationManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TMap<struct FString, struct FMapLocationHint> MapLocationHints; // 0x30(0x50)
	struct FMulticastInlineDelegate OnNavigationPathUpdated; // 0x80(0x10)
	int64_t MapTargetBeaconHandle; // 0x90(0x08)
	int64_t WayMarkerBeaconHandle; // 0x98(0x08)
	int64_t MissionBeaconHandle; // 0xa0(0x08)
	struct TWeakObjectPtr<struct UBeaconInfo> MapTargetBeacon; // 0xa8(0x08)
	struct FString MapTargetBeaconLongName; // 0xb0(0x10)
	struct UScheduledEntity* MapTargetScheduledEntity; // 0xc0(0x08)
	struct FVector MapTargetWorldLocation; // 0xc8(0x0c)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct TArray<struct FVector> MapTargetWaypoints; // 0xd8(0x10)
	enum class EPathTargetType PathTargetType; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	float MaxSpliceDistance; // 0xec(0x04)
	bool ShowUnknownRoads; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct TArray<struct FVector> HogwartExits; // 0xf8(0x10)
	struct FVector CoastNorthLocation; // 0x108(0x0c)
	struct FVector CoastSouthLocation; // 0x114(0x0c)
	struct AGuideSpline* GuideSplineClass; // 0x120(0x08)
	char pad_128[0x28]; // 0x128(0x28)
	struct TArray<struct FVector> GuidePathPoints; // 0x150(0x10)
	struct AGuideSpline* GuideSplineActor; // 0x160(0x08)
	float WiggleIterDist; // 0x168(0x04)
	float WiggleMaxDist; // 0x16c(0x04)
	float WiggleInitialDist; // 0x170(0x04)
	float WiggleRange; // 0x174(0x04)
	float WiggleMaxAngleDegrees; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
	struct UObject* PathSelectWidgetClass; // 0x180(0x08)
	struct UPathSelectHUD* PathSelectWidget; // 0x188(0x08)
	bool bShowingPathSelectUI; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)
	struct UPathCollector* PathCollector; // 0x198(0x08)
	struct UOverlandPathFinder* OverlandPathFinder; // 0x1a0(0x08)
	struct FDebugMapData debugHelperData; // 0x1a8(0x50)
	char pad_1F8[0x8]; // 0x1f8(0x08)
	struct UWorldSupportWorld* FlightPathWorld; // 0x200(0x08)
	struct UMapPathData* AllRoads; // 0x208(0x08)
	struct TArray<struct ANavigationArrow*> PathMarkerActorsTS; // 0x210(0x10)
	struct TMap<struct FName, struct AAuthoredPath*> RegisteredAuthoredPaths; // 0x220(0x50)
	char pad_270[0x90]; // 0x270(0x90)
	struct TArray<struct FVector> PathTS; // 0x300(0x10)
	struct TArray<struct FMapIconEntry> MinimapPathTS; // 0x310(0x10)
	struct TArray<struct FMapIconEntry> ElevationChangePointsTS; // 0x320(0x10)
	char pad_330[0x20]; // 0x330(0x20)
	struct USplineComponent* Spline; // 0x350(0x08)
	char pad_358[0x1a0]; // 0x358(0x1a0)
	struct TMap<struct FName, struct FPathDestinationLocation> PathDestinationLocationsMap; // 0x4f8(0x50)
	char pad_548[0xa0]; // 0x548(0xa0)

	void UseAuthoredPath(struct FName Name); // Function Phoenix.PathNavigationManager.UseAuthoredPath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3f20
	void UpdateMissionBeacons(bool bStart); // Function Phoenix.PathNavigationManager.UpdateMissionBeacons // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3e90
	struct AGuideSpline* SpawnGuideSplineFromPath(struct TArray<struct FVector>& InPath); // Function Phoenix.PathNavigationManager.SpawnGuideSplineFromPath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33c3b90
	void ShowPathSelectionUI(); // Function Phoenix.PathNavigationManager.ShowPathSelectionUI // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3b70
	void SetWaypointPathTarget(struct TArray<struct FVector> Waypoints); // Function Phoenix.PathNavigationManager.SetWaypointPathTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3a80
	void SetStaticPathTarget(struct FVector staticTarget); // Function Phoenix.PathNavigationManager.SetStaticPathTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c39f0
	void SetImportantPathName(struct FName Name); // Function Phoenix.PathNavigationManager.SetImportantPathName // (Final|Native|Public|BlueprintCallable) // @ game+0x33c36a0
	void SetBeaconPathTarget(int64_t NewBeaconHandle, bool bValidateOnly, struct FString BeaconLongName); // Function Phoenix.PathNavigationManager.SetBeaconPathTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3520
	void RemoveGuideSpline(); // Function Phoenix.PathNavigationManager.RemoveGuideSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x33c34e0
	void ReDisplayMissionObjective(); // Function Phoenix.PathNavigationManager.ReDisplayMissionObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void PathNavigation_ToggleUseForcePathDestination(); // Function Phoenix.PathNavigationManager.PathNavigation_ToggleUseForcePathDestination // (Final|Exec|Native|Public) // @ game+0x13244f0
	void PathNavigation_TogglePauseThread(); // Function Phoenix.PathNavigationManager.PathNavigation_TogglePauseThread // (Final|Exec|Native|Public) // @ game+0x33c3490
	void PathNavigation_SetUseForcePathDestination(bool bNewValue); // Function Phoenix.PathNavigationManager.PathNavigation_SetUseForcePathDestination // (Final|Exec|Native|Public) // @ game+0x330f550
	void PathNavigation_SetForcePathDestination(float X, float Y, float Z); // Function Phoenix.PathNavigationManager.PathNavigation_SetForcePathDestination // (Final|Exec|Native|Public) // @ game+0x33c33a0
	void OnCurtainRaised(); // Function Phoenix.PathNavigationManager.OnCurtainRaised // (Final|Native|Public) // @ game+0x33c3380
	void OnCurtainLowered(); // Function Phoenix.PathNavigationManager.OnCurtainLowered // (Final|Native|Public) // @ game+0x33c3360
	void MarkHogwartsNavmeshLoaded(enum class EHogwartsNavmeshID NavMesh, bool bLoaded); // Function Phoenix.PathNavigationManager.MarkHogwartsNavmeshLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3290
	bool IsWaypointPathTarget(); // Function Phoenix.PathNavigationManager.IsWaypointPathTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3260
	bool IsLocationInAreaBeaconArea(struct FVector Location); // Function Phoenix.PathNavigationManager.IsLocationInAreaBeaconArea // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33c31c0
	void HidePathSelectionUI(); // Function Phoenix.PathNavigationManager.HidePathSelectionUI // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3180
	bool HasGuidePath(); // Function Phoenix.PathNavigationManager.HasGuidePath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3150
	bool HasDestinationLocation(bool ShowDestinationsInAreaBeacons); // Function Phoenix.PathNavigationManager.HasDestinationLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33c30b0
	bool GiveMeHelp(); // Function Phoenix.PathNavigationManager.GiveMeHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x33c3080
	struct FVector GetWaymarkerDestinationLocation(); // Function Phoenix.PathNavigationManager.GetWaymarkerDestinationLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c3040
	struct FVector GetPathDestinationLocation(); // Function Phoenix.PathNavigationManager.GetPathDestinationLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c3000
	struct TArray<struct FVector> GetPath(); // Function Phoenix.PathNavigationManager.GetPath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2f80
	struct TArray<struct ANavigationArrow*> GetNagivationMarkerActors(); // Function Phoenix.PathNavigationManager.GetNagivationMarkerActors // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2f00
	struct FVector GetMissionDestinationLocation(); // Function Phoenix.PathNavigationManager.GetMissionDestinationLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c2ec0
	struct TArray<struct FMapIconEntry> GetMinimapPath(); // Function Phoenix.PathNavigationManager.GetMinimapPath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2e40
	struct FName GetImportantPathName(); // Function Phoenix.PathNavigationManager.GetImportantPathName // (Final|Native|Public|BlueprintCallable) // @ game+0x33387c0
	struct FVector GetGuidePathEndPoint(); // Function Phoenix.PathNavigationManager.GetGuidePathEndPoint // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c2e00
	struct TArray<struct FVector> GetGuidePath(); // Function Phoenix.PathNavigationManager.GetGuidePath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2d80
	struct TArray<struct FMapIconEntry> GetElevationChangePoints(); // Function Phoenix.PathNavigationManager.GetElevationChangePoints // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2d00
	struct FVector GetDestinationLocationForBeacon(struct UBeaconInfo* Beacon); // Function Phoenix.PathNavigationManager.GetDestinationLocationForBeacon // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c2c50
	bool GetCanPlayerTrackDestination(); // Function Phoenix.PathNavigationManager.GetCanPlayerTrackDestination // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33c2c20
	struct FName GetAuthoredPathName(); // Function Phoenix.PathNavigationManager.GetAuthoredPathName // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2be0
	struct UPathNavigationManager* Get(); // Function Phoenix.PathNavigationManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33c2b90
	bool FindPath(struct FVector& Start, struct FVector& End, struct TArray<struct FVector>& OutPath, bool& OutMissingHogwartsSection); // Function Phoenix.PathNavigationManager.FindPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33c29d0
	bool ExecuteSave(int32_t CharacterID); // Function Phoenix.PathNavigationManager.ExecuteSave // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2930
	void Debug_StartMap(enum class EMapTypes MapTypeIn, struct UWorld* WorldIn); // Function Phoenix.PathNavigationManager.Debug_StartMap // (Final|Exec|Native|Public) // @ game+0x33c27e0
	void ClearWaypointPathTarget(); // Function Phoenix.PathNavigationManager.ClearWaypointPathTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c26a0
	void ClearWaymarkerTarget(); // Function Phoenix.PathNavigationManager.ClearWaymarkerTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2680
	void ClearPathTarget(); // Function Phoenix.PathNavigationManager.ClearPathTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2660
	void ClearPathAndMissionTarget(); // Function Phoenix.PathNavigationManager.ClearPathAndMissionTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2640
	void ClearImportantPathName(); // Function Phoenix.PathNavigationManager.ClearImportantPathName // (Final|Native|Public|BlueprintCallable) // @ game+0x33c2610
	void ClearAuthoredPath(); // Function Phoenix.PathNavigationManager.ClearAuthoredPath // (Final|Native|Public|BlueprintCallable) // @ game+0x33c25f0
	void AddWaypointPathTarget(struct FVector Point); // Function Phoenix.PathNavigationManager.AddWaypointPathTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c23a0
	void AddMissionBeacon(struct UScheduledEntity* dynamicTarget, struct FVector staticTarget, int64_t BeaconHandle); // Function Phoenix.PathNavigationManager.AddMissionBeacon // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33c2160
};

// Class Phoenix.PathNode
// Size: 0x288 (Inherited: 0x248)
struct APathNode : AActor {
	struct TArray<struct APathNode*> m_nextArray; // 0x248(0x10)
	float m_waitTime; // 0x258(0x04)
	float m_threshold; // 0x25c(0x04)
	float m_arrivalTimeout; // 0x260(0x04)
	enum class EEnemyAIState m_nextAction; // 0x264(0x01)
	bool m_onArrivalEnablePerception; // 0x265(0x01)
	bool m_applyPathSpeed; // 0x266(0x01)
	enum class EPathNodeSpeed m_selectedSpeed; // 0x267(0x01)
	float m_pathSpeed; // 0x268(0x04)
	bool m_airPathNode; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	float m_airPathSpeedMultiplyer; // 0x270(0x04)
	bool m_perchPathNode; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	struct FMulticastInlineDelegate m_arrivedDelegate; // 0x278(0x10)

	float GetArrivalTimeout(); // Function Phoenix.PathNode.GetArrivalTimeout // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33c76e0
	void BroadcastArrived(struct AActor* pActor); // Function Phoenix.PathNode.BroadcastArrived // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7160
	void Arrived(); // Function Phoenix.PathNode.Arrived // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PathSelectHUD
// Size: 0x268 (Inherited: 0x268)
struct UPathSelectHUD : UUserWidget {

	void Start(); // Function Phoenix.PathSelectHUD.Start // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Patronus_Character
// Size: 0x550 (Inherited: 0x540)
struct APatronus_Character : AAble_Character {
	struct UAnimationComponent* AnimationComponent; // 0x538(0x08)
	float RootMotionTranslationScale; // 0x540(0x04)
	char pad_54C[0x4]; // 0x54c(0x04)
};

// Class Phoenix.PausePopoutWidget
// Size: 0x280 (Inherited: 0x268)
struct UPausePopoutWidget : UUserWidget {
	struct UHeaderWidget* PopoutHeader; // 0x268(0x08)
	struct UPhoenixTextBlock* PopoutDescription; // 0x270(0x08)
	struct UPhoenixTextBlock* LegendText; // 0x278(0x08)

	void SetPopoutData(struct FText NewTitle, struct FText NewDescription); // Function Phoenix.PausePopoutWidget.SetPopoutData // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7f20
	void OnPopoutDataSet(); // Function Phoenix.PausePopoutWidget.OnPopoutDataSet // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PearDoor
// Size: 0x530 (Inherited: 0x520)
struct APearDoor : ADoor {
	char pad_520[0x8]; // 0x520(0x08)
	struct ULockableComponent* LockableComponent; // 0x528(0x08)

	void TickleThePear(struct UObject* Caller); // Function Phoenix.PearDoor.TickleThePear // (Final|Native|Protected|BlueprintCallable) // @ game+0x33c8180
};

// Class Phoenix.PearLockComponent
// Size: 0x270 (Inherited: 0x220)
struct UPearLockComponent : ULockableComponent {
	struct USkeletalMeshComponent* PearMeshComponent; // 0x220(0x08)
	struct UStaticMeshComponent* DoorknobMeshComponent; // 0x228(0x08)
	struct USkeletalMesh* PearMesh; // 0x230(0x08)
	struct UAnimationAsset* LaughingAnimation; // 0x238(0x08)
	struct UStaticMesh* DoorknobMesh; // 0x240(0x08)
	float TickleTime; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UNiagaraSystem* PearDoorknobTransformSystem; // 0x250(0x08)
	struct UNiagaraComponent* PearDoorknobComponent; // 0x258(0x08)
	struct AAmbulatory_Character* Character; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)

	void ReplacePearDoorknob(); // Function Phoenix.PearLockComponent.ReplacePearDoorknob // (Final|Native|Protected) // @ game+0x33c7e70
	void DestroyPearMeshComponent(); // Function Phoenix.PearLockComponent.DestroyPearMeshComponent // (Final|Native|Protected) // @ game+0x33c72f0
};

// Class Phoenix.PlayerPerceptionPointComponent
// Size: 0xf8 (Inherited: 0xc8)
struct UPlayerPerceptionPointComponent : UActorComponent {
	int32_t Priority; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct TArray<struct UAISenseConfig*> SensesConfigList; // 0xd0(0x10)
	struct APerceptionPoint* PerceptionPoint; // 0xe0(0x08)
	struct UPlayer_FootfallDataAsset* FootfallDataAsset; // 0xe8(0x08)
	char pad_F0[0x8]; // 0xf0(0x08)
};

// Class Phoenix.PerceptionPointArea
// Size: 0x2c8 (Inherited: 0x248)
struct APerceptionPointArea : AActor {
	struct UShapeComponent* CollisionComponent; // 0x248(0x08)
	struct TSet<struct TWeakObjectPtr<struct AActor>> EnteredList; // 0x250(0x50)
	struct FMulticastInlineDelegate OnEnter; // 0x2a0(0x10)
	struct FMulticastInlineDelegate OnExit; // 0x2b0(0x10)
	char pad_2C0[0x8]; // 0x2c0(0x08)

	void SetActive(bool bInActive); // Function Phoenix.PerceptionPointArea.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7e90
	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.PerceptionPointArea.OnEndOverlap // (Final|Native|Public) // @ game+0x33c79d0
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.PerceptionPointArea.OnBeginOverlap // (Final|Native|Public) // @ game+0x33c7900
	bool GetActive(); // Function Phoenix.PerceptionPointArea.GetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x33c76c0
};

// Class Phoenix.PerceptionPointBox
// Size: 0x2c8 (Inherited: 0x2c8)
struct APerceptionPointBox : APerceptionPointArea {
};

// Class Phoenix.PerceptionPointController
// Size: 0x358 (Inherited: 0x350)
struct APerceptionPointController : AAIController {
	char pad_350[0x8]; // 0x350(0x08)
};

// Class Phoenix.PerceptionPointSphere
// Size: 0x2c8 (Inherited: 0x2c8)
struct APerceptionPointSphere : APerceptionPointArea {
};

// Class Phoenix.AIPerformTaskBase
// Size: 0xe0 (Inherited: 0x28)
struct UAIPerformTaskBase : UObject {
	struct ASceneRigActor* ParallelSceneRigActor; // 0x28(0x08)
	bool bSkipThisTask; // 0x30(0x01)
	bool bShouldWaitToFinish; // 0x31(0x01)
	char pad_32[0xe]; // 0x32(0x0e)
	struct FTransform ElementTransform; // 0x40(0x30)
	bool bTrackPlayer; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct AActor* HeadTrackingTargetActor; // 0x78(0x08)
	struct AActor* PerformTaskContainer; // 0x80(0x08)
	char pad_88[0x58]; // 0x88(0x58)

	void OnPerformTaskExecutionCompleteImp(struct UScheduledEntity* ScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.AIPerformTaskBase.OnPerformTaskExecutionCompleteImp // (Final|Native|Protected) // @ game+0x33cba90
	void OnFleshLoadComplete(struct AActor* FleshActor); // Function Phoenix.AIPerformTaskBase.OnFleshLoadComplete // (Final|Native|Protected) // @ game+0x33cb950
};

// Class Phoenix.AIPerformTaskApparateToLocation
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskApparateToLocation : UAIPerformTaskBase {
	struct UAblAbility* ApparateInAblAbility; // 0xd8(0x08)
	struct UAblAbility* ApparateOutAblAbility; // 0xe0(0x08)

	void OnApparateOutCompleted(struct UScheduledEntity* InScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.AIPerformTaskApparateToLocation.OnApparateOutCompleted // (Final|Native|Private) // @ game+0x33c7830
};

// Class Phoenix.AIPerformTaskCastSpell
// Size: 0x100 (Inherited: 0xe0)
struct UAIPerformTaskCastSpell : UAIPerformTaskBase {
	struct AActor* SpellTargetActor; // 0xe0(0x08)
	enum class EPerformTasksSpell SpellType; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct UAblAbility* CustomSpellAbility; // 0xf0(0x08)
	struct USpellToolRecord* CustomSpellToolRecord; // 0xf8(0x08)

	void WeaponsAreReady(struct AActor* InActor); // Function Phoenix.AIPerformTaskCastSpell.WeaponsAreReady // (Final|Native|Protected) // @ game+0x33c8210
	void OnTargetActorSpawnInFinished(struct AActor* SpawnedActor); // Function Phoenix.AIPerformTaskCastSpell.OnTargetActorSpawnInFinished // (Final|Native|Private) // @ game+0x33c7de0
};

// Class Phoenix.AIPerformTaskCastChannelingSpell
// Size: 0x110 (Inherited: 0x100)
struct UAIPerformTaskCastChannelingSpell : UAIPerformTaskCastSpell {
	enum class EPerformTasksChannelingSpell ChannelingSpellType; // 0x100(0x01)
	bool bShouldStopChannelingSpell; // 0x101(0x01)
	char pad_102[0xe]; // 0x102(0x0e)

	void DisillusionmentFinished(char InAction); // Function Phoenix.AIPerformTaskCastChannelingSpell.DisillusionmentFinished // (Final|Native|Private) // @ game+0x33c7310
};

// Class Phoenix.AIPerformTaskStartFollowSpline
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskStartFollowSpline : UAIPerformTaskBase {
	struct ASplineFollowerForAI* FollowSplineForAI; // 0xd8(0x08)
};

// Class Phoenix.AIPerformTaskSimpleFollowSpline
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskSimpleFollowSpline : UAIPerformTaskBase {
	struct ASimpleSplineFollowerForAI* FollowSimpleSplineForAI; // 0xd8(0x08)
};

// Class Phoenix.AIPerformTaskTeleportToLocation
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskTeleportToLocation : UAIPerformTaskBase {
};

// Class Phoenix.PerformTaskAITeleportToTransform
// Size: 0xe0 (Inherited: 0xe0)
struct UPerformTaskAITeleportToTransform : UAIPerformTaskBase {
	struct ATargetPoint* TeleportTargetPoint; // 0xd8(0x08)
};

// Class Phoenix.AIPerformTaskJumpDown
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskJumpDown : UAIPerformTaskBase {
	struct UAblAbility* JumpDownAbility; // 0xd8(0x08)

	void JumpFinished(); // Function Phoenix.AIPerformTaskJumpDown.JumpFinished // (Final|Native|Private) // @ game+0x33c7810
};

// Class Phoenix.AIPerformTaskMoveToStation
// Size: 0x1a0 (Inherited: 0xe0)
struct UAIPerformTaskMoveToStation : UAIPerformTaskBase {
	struct AStation* TargetStation; // 0xd8(0x08)
	struct FDbSingleColumnInfo ActivityType; // 0xe0(0x88)
	struct FName ActionName; // 0x168(0x08)
	bool bInteract; // 0x170(0x01)
	int32_t ConnectionIndex; // 0x174(0x04)
	float stationDuration; // 0x178(0x04)
	char pad_181[0x17]; // 0x181(0x17)
	enum class EPerformTaskSpeedMode SpeedMode; // 0x198(0x01)
	char pad_199[0x7]; // 0x199(0x07)

	void StartStationExit(); // Function Phoenix.AIPerformTaskMoveToStation.StartStationExit // (Final|Native|Protected) // @ game+0x33c8140
	void OnStationEnterFinished(struct UObject* i_caller); // Function Phoenix.AIPerformTaskMoveToStation.OnStationEnterFinished // (Final|Native|Protected) // @ game+0x33c7d50
};

// Class Phoenix.AIPerformTaskRunSceneRig
// Size: 0x100 (Inherited: 0xe0)
struct UAIPerformTaskRunSceneRig : UAIPerformTaskBase {
	struct ASceneRigActor* SceneRigActor; // 0xd8(0x08)
	bool bOrientToPlayer; // 0xe0(0x01)
	enum class EPerformTaskSceneRigSetting CurrentTaskSetting; // 0xe1(0x01)
	struct FMulticastInlineDelegate OnSceneRigPlayed; // 0xe8(0x10)
	char pad_FA[0x6]; // 0xfa(0x06)
};

// Class Phoenix.PerformTaskSetPlayerSpeedMode
// Size: 0x100 (Inherited: 0xe0)
struct UPerformTaskSetPlayerSpeedMode : UAIPerformTaskBase {
	enum class ETargetSpeedMode SpeedMode; // 0xd8(0x01)
	enum class ETargetSpeedMode SpeedModifier; // 0xd9(0x01)
	bool bShouldRevertToDefault; // 0xda(0x01)
	float changePlayerSpeedRadius; // 0xdc(0x04)
	float revertRadius; // 0xe0(0x04)
	char pad_EB[0x15]; // 0xeb(0x15)
};

// Class Phoenix.PerformTaskSetTempAnimationArchitectAsset
// Size: 0xf0 (Inherited: 0xe0)
struct UPerformTaskSetTempAnimationArchitectAsset : UAIPerformTaskBase {
	struct UAnimationArchitectAsset* TriggerAnimationArchitectAsset; // 0xd8(0x08)
	enum class EPerformTaskSetting CurrentTaskSetting; // 0xe0(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.PerformTasksForAI
// Size: 0x530 (Inherited: 0x248)
struct APerformTasksForAI : AActor {
	struct FDbSingleColumnInfo NPCKey; // 0x248(0x88)
	struct FText Description; // 0x2d0(0x18)
	enum class EPerformTaskContainerType PerformTaskContainerType; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct FString LevelOwnerName; // 0x2f0(0x10)
	struct TArray<struct FAIPerformTaskContainer> TasksToBePerformedContainer; // 0x300(0x10)
	bool bStartOff; // 0x310(0x01)
	bool bAutoActivate; // 0x311(0x01)
	bool bAlwaysActive; // 0x312(0x01)
	bool bCanActivateAgainWhenUnfinished; // 0x313(0x01)
	bool bLumosOn; // 0x314(0x01)
	char pad_315[0x3]; // 0x315(0x03)
	struct UAblAbility* ApparateInAblAbility; // 0x318(0x08)
	struct UAblAbility* ApparateOutAblAbility; // 0x320(0x08)
	struct UAblAbility* JumpDownAbilityPtr; // 0x328(0x08)
	struct FDbSingleColumnInfo m_missionID; // 0x330(0x88)
	int32_t MissionUID; // 0x3b8(0x04)
	bool bReleaseOnCompletion; // 0x3bc(0x01)
	char pad_3BD[0x3]; // 0x3bd(0x03)
	struct FDialogueConversationReference ClearedDialogueReference; // 0x3c0(0x10)
	struct UAvaAudioDialogueEvent* ClearedDialogueEvent; // 0x3d0(0x08)
	float clearedAudioDelay; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct APerformTasksForAI* NextTask; // 0x3e0(0x08)
	struct TArray<struct AActor*> OffTargets; // 0x3e8(0x10)
	struct USceneComponent* Scene; // 0x3f8(0x08)
	struct UBoxComponent* Trigger; // 0x400(0x08)
	struct USphereComponent* SphereTrigger; // 0x408(0x08)
	struct UTextRenderComponent* TextRenderer; // 0x410(0x08)
	float FirstDelay; // 0x418(0x04)
	char pad_41C[0x4]; // 0x41c(0x04)
	struct FMulticastInlineDelegate OnPerformTriggerTaskCompleteBP; // 0x420(0x10)
	struct FMulticastInlineDelegate OnWholePerformTaskTriggerStart; // 0x430(0x10)
	struct FMulticastInlineDelegate OnWholePerformTaskTriggerComplete; // 0x440(0x10)
	bool bShowAxisInGame; // 0x450(0x01)
	char pad_451[0x7]; // 0x451(0x07)
	struct TArray<struct USpellToolRecord*> SpellToolRecords; // 0x458(0x10)
	char pad_468[0xc8]; // 0x468(0xc8)

	void SwitchOnBPImplementation(); // Function Phoenix.PerformTasksForAI.SwitchOnBPImplementation // (Final|Native|Public|BlueprintCallable) // @ game+0x33c8160
	void SetScheduledEntity(struct UScheduledEntity* InAI_ScheduledEntity); // Function Phoenix.PerformTasksForAI.SetScheduledEntity // (Final|Native|Public|BlueprintCallable) // @ game+0x33c80b0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.PerformTasksForAI.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x33c7b30
	void OnFleshLoadComplete(struct AActor* FleshActor); // Function Phoenix.PerformTasksForAI.OnFleshLoadComplete // (Final|Native|Private) // @ game+0x33c7aa0
	void HardExecuteStartPerformTasksForAI(); // Function Phoenix.PerformTasksForAI.HardExecuteStartPerformTasksForAI // (Final|Native|Public|BlueprintCallable) // @ game+0x33c77f0
	struct FAIPerformTaskContainer GetTaskAtIndex(int32_t TaskIndex); // Function Phoenix.PerformTasksForAI.GetTaskAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33c7730
	struct UScheduledEntity* GetScheduledEntity(); // Function Phoenix.PerformTasksForAI.GetScheduledEntity // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7700
	void ForceFinishCurrentTask(); // Function Phoenix.PerformTasksForAI.ForceFinishCurrentTask // (Final|Native|Public|BlueprintCallable) // @ game+0x33c76a0
	void FinishPerformTaskTriggerBP(); // Function Phoenix.PerformTasksForAI.FinishPerformTaskTriggerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7680
	struct TArray<struct APerformTasksForAI*> FindMissionActors(struct FName InMissionID, int32_t InMissionUID); // Function Phoenix.PerformTasksForAI.FindMissionActors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33c7570
	void ExecuteStartPerformTasksForAI(); // Function Phoenix.PerformTasksForAI.ExecuteStartPerformTasksForAI // (Final|Native|Public|BlueprintCallable) // @ game+0x33c7550
	void ClearScheduledEntity(); // Function Phoenix.PerformTasksForAI.ClearScheduledEntity // (Final|Native|Public|BlueprintCallable) // @ game+0x33c72d0
	void CleanUpAndStartNextPerformTask(struct UScheduledEntity* ScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.PerformTasksForAI.CleanUpAndStartNextPerformTask // (Final|Native|Private) // @ game+0x33c7200
	void CallSwitchOnBP(struct UObject* InTarget); // Function Phoenix.PerformTasksForAI.CallSwitchOnBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CallSwitchOffBP(struct UObject* InTarget); // Function Phoenix.PerformTasksForAI.CallSwitchOffBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.AIPerformTaskMoveToLocation
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskMoveToLocation : UAIPerformTaskBase {
	enum class EPerformTaskSpeedMode SpeedMode; // 0xd8(0x01)
};

// Class Phoenix.AIPerformTaskWaitForPlayer
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskWaitForPlayer : UAIPerformTaskBase {
	float ProximityRadius; // 0xd8(0x04)
	bool bOrientToPlayer; // 0xdc(0x01)
	bool ProximityCheckBeforeStopping; // 0xdd(0x01)
};

// Class Phoenix.AIPerformTaskVO
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskVO : UAIPerformTaskBase {
	bool bOrientToPlayer; // 0xd8(0x01)
};

// Class Phoenix.AIPerformTaskTutorial
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskTutorial : UAIPerformTaskBase {
	struct FName TutorialName; // 0xd8(0x08)
	bool bOrientToPlayer; // 0xe0(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.AIPerformTaskUnlockSpell
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskUnlockSpell : UAIPerformTaskBase {
	struct FName SpellType; // 0xd8(0x08)
	int32_t SpellSlot; // 0xe0(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
};

// Class Phoenix.AIPerformTaskTrigger
// Size: 0x100 (Inherited: 0xe0)
struct UAIPerformTaskTrigger : UAIPerformTaskBase {
	struct FVector WaitTriggerScale; // 0xd8(0x0c)
	struct USphereComponent* WaitTrigger; // 0xe8(0x08)
	bool bOrientToPlayer; // 0xf0(0x01)
	char pad_F5[0xb]; // 0xf5(0x0b)

	void OnWaitTriggerOverlap(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.AIPerformTaskTrigger.OnWaitTriggerOverlap // (Final|Native|Private|HasOutParms) // @ game+0x33cbb80
};

// Class Phoenix.AIPerformTaskAblAbility
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskAblAbility : UAIPerformTaskBase {
	struct UAblAbility* PartialBodyAbilityPtr; // 0xd8(0x08)
	struct FName AbilityChannelName; // 0xe0(0x08)
	bool bPlayPartialBodyAnimation; // 0xe8(0x01)
};

// Class Phoenix.AIPerformTaskCombatMode
// Size: 0x100 (Inherited: 0xe0)
struct UAIPerformTaskCombatMode : UAIPerformTaskBase {
	struct FName NewTeamName; // 0xd8(0x08)
	struct FName AudioSubtypeID; // 0xe0(0x08)
	bool bStartCombatMode; // 0xe8(0x01)
	float Duration; // 0xec(0x04)
	enum class EPerformTaskCombatMode CombatMode; // 0xf0(0x01)
	char pad_F6[0xa]; // 0xf6(0x0a)

	void FinishAfterDuration(); // Function Phoenix.AIPerformTaskCombatMode.FinishAfterDuration // (Final|Native|Protected) // @ game+0x33cb0f0
};

// Class Phoenix.AIPerformTaskSetCompanion
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskSetCompanion : UAIPerformTaskBase {
	bool bSetCompanion; // 0xd8(0x01)
	bool bIsForcedCompanion; // 0xd9(0x01)
};

// Class Phoenix.AIPerformTaskEnableTriggerOverlapForPT
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskEnableTriggerOverlapForPT : UAIPerformTaskBase {
	struct AActor* PerformTaskTrigger; // 0xd8(0x08)
	bool bShouldActivate; // 0xe0(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.AIPerformTaskSpawnHogwartsExpress
// Size: 0x100 (Inherited: 0xe0)
struct UAIPerformTaskSpawnHogwartsExpress : UAIPerformTaskBase {
	enum class EPerformTaskHogwarsExpressSettings CurrentTaskSetting; // 0xd8(0x01)
	bool bUpdateLocation; // 0xd9(0x01)
	struct FVector NewLocation; // 0xdc(0x0c)
	bool bUpdateSpeed; // 0xe8(0x01)
	float NewSpeed; // 0xec(0x04)
	char pad_F3[0xd]; // 0xf3(0x0d)
};

// Class Phoenix.AIPerformTaskTeleportToStation
// Size: 0x1a0 (Inherited: 0x1a0)
struct UAIPerformTaskTeleportToStation : UAIPerformTaskMoveToStation {
};

// Class Phoenix.AIPerformTaskWaitForHermes
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskWaitForHermes : UAIPerformTaskBase {
	struct FName CustomHermesMessage; // 0xd8(0x08)
	bool bOrientToPlayer; // 0xe0(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)

	void OnHermesMessageExecuted(struct UObject* i_caller); // Function Phoenix.AIPerformTaskWaitForHermes.OnHermesMessageExecuted // (Final|Native|Private) // @ game+0x33cba00
};

// Class Phoenix.PerkFX
// Size: 0x28 (Inherited: 0x28)
struct UPerkFX : UObject {

	void DoPerkFX(struct FString PerkName, struct AActor* InActor, struct FVector InLocation, struct FRotator InRotation); // Function Phoenix.PerkFX.DoPerkFX // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33caf30
};

// Class Phoenix.PerksSettings
// Size: 0x78 (Inherited: 0x28)
struct UPerksSettings : UObject {
	struct TMap<struct FString, struct FPerkInfoFX> PerkFXMap; // 0x28(0x50)
};

// Class Phoenix.PerksTree
// Size: 0x90 (Inherited: 0x28)
struct UPerksTree : UObject {
	char pad_28[0x68]; // 0x28(0x68)

	bool UpgradePerk(struct FString PerkID); // Function Phoenix.PerksTree.UpgradePerk // (Final|Native|Public|BlueprintCallable) // @ game+0x33cc790
	bool UpdatePerkPoints(int32_t Amount); // Function Phoenix.PerksTree.UpdatePerkPoints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cc700
	void ResetPerks(); // Function Phoenix.PerksTree.ResetPerks // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cc6e0
	void RemovePerk(struct FString InPerkID); // Function Phoenix.PerksTree.RemovePerk // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33cc5f0
	struct FPerkTreeEntry RefreshDataForSlot(struct FString PerkCategory, int32_t Row, int32_t Column); // Function Phoenix.PerksTree.RefreshDataForSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cc370
	bool PurchasePerk(struct FString PerkID); // Function Phoenix.PerksTree.PurchasePerk // (Final|Native|Public|BlueprintCallable) // @ game+0x33cc270
	void PerkUpdatePoints(int32_t Amount); // Function Phoenix.PerksTree.PerkUpdatePoints // (Final|Exec|Native|Protected) // @ game+0x33cc1e0
	void PerkShowPurchasedCount(); // Function Phoenix.PerksTree.PerkShowPurchasedCount // (Final|Exec|Native|Protected) // @ game+0x1074730
	void PerkShowPoints(); // Function Phoenix.PerksTree.PerkShowPoints // (Final|Exec|Native|Protected) // @ game+0x1074730
	void PerkSetLevel(struct FString PerkID, int32_t Level); // Function Phoenix.PerksTree.PerkSetLevel // (Final|Exec|Native|Protected) // @ game+0x33cc0b0
	void PerkResetAllPerks(); // Function Phoenix.PerksTree.PerkResetAllPerks // (Final|Exec|Native|Protected) // @ game+0x33cc090
	void PerkPurchase(struct FString PerkID); // Function Phoenix.PerksTree.PerkPurchase // (Final|Exec|Native|Protected) // @ game+0x33cbfa0
	void PerkIsUpgradeable(struct FString PerkID); // Function Phoenix.PerksTree.PerkIsUpgradeable // (Final|Exec|Native|Protected) // @ game+0x31cc3a0
	void PerkIsAvailable(struct FString PerkID); // Function Phoenix.PerksTree.PerkIsAvailable // (Final|Exec|Native|Protected) // @ game+0x31cc3a0
	void PerkIsActive(struct FString PerkID); // Function Phoenix.PerksTree.PerkIsActive // (Final|Exec|Native|Protected) // @ game+0x31cc3a0
	void PerkCurriculumRefresh(struct FString Curriculum, int32_t Year); // Function Phoenix.PerksTree.PerkCurriculumRefresh // (Final|Exec|Native|Protected) // @ game+0x31cc0f0
	void PerkActivateAllInCategory(struct FString Category); // Function Phoenix.PerksTree.PerkActivateAllInCategory // (Final|Exec|Native|Protected) // @ game+0x33cbeb0
	void PerkActivateAll(); // Function Phoenix.PerksTree.PerkActivateAll // (Final|Exec|Native|Protected) // @ game+0x33cbe90
	void PerkActivate(struct FString PerkID); // Function Phoenix.PerksTree.PerkActivate // (Final|Exec|Native|Public) // @ game+0x33cbda0
	void OnSaveGameLoaded(); // Function Phoenix.PerksTree.OnSaveGameLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0x33cbb60
	bool IsPerkUpgradeable(struct FString PerkID); // Function Phoenix.PerksTree.IsPerkUpgradeable // (Final|Native|Public|BlueprintCallable) // @ game+0x33cb850
	bool IsPerkAvailable(struct FString PerkID); // Function Phoenix.PerksTree.IsPerkAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x33cb750
	int32_t GetTotalPerks(struct FString CategoryID); // Function Phoenix.PerksTree.GetTotalPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33cb660
	int32_t GetPurchasedPerkCount(struct FString CategoryID); // Function Phoenix.PerksTree.GetPurchasedPerkCount // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33cb570
	enum class EPerkState GetPerkState(struct FString PerkID); // Function Phoenix.PerksTree.GetPerkState // (Final|Native|Public|BlueprintCallable) // @ game+0x33cb470
	int32_t GetPerkPoints(); // Function Phoenix.PerksTree.GetPerkPoints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cb440
	int32_t GetPerkLevel(struct FString PerkID); // Function Phoenix.PerksTree.GetPerkLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x33cb340
	struct TArray<struct FPerkTreeEntry> GetAllPerks(bool UIDisplayOnly, struct FString CategoryID); // Function Phoenix.PerksTree.GetAllPerks // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33cb140
	struct UPerksTree* Get(); // Function Phoenix.PerksTree.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cb110
};

// Class Phoenix.PerkWidget
// Size: 0x3c8 (Inherited: 0x3c8)
struct UPerkWidget : UTabPageWidget {
};

// Class Phoenix.PersistentBreakable
// Size: 0x2b0 (Inherited: 0x2b0)
struct APersistentBreakable : AWorldObject {

	bool ResetState(enum class EBreakableState NextState); // Function Phoenix.PersistentBreakable.ResetState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32e5f90
};

// Class Phoenix.PetrificusComponent
// Size: 0x1a8 (Inherited: 0x190)
struct UPetrificusComponent : UStateEffectComponent {
	struct FPetrificusData PetrificusData; // 0x190(0x10)
	char pad_1A0[0x8]; // 0x1a0(0x08)
};

// Class Phoenix.PetrificusSpellTool
// Size: 0x880 (Inherited: 0x868)
struct APetrificusSpellTool : AFireOnceSpellTool {
	struct UInteractionArchitectAsset* ChargedEndMunitionDataAsset; // 0x868(0x08)
	struct TArray<struct UMultiFX2_Base*> PetrificusFX2; // 0x870(0x10)
};

// Class Phoenix.Phoenix3DMovementComponent
// Size: 0x650 (Inherited: 0x250)
struct UPhoenix3DMovementComponent : UIcarus3DMovementComponent {
	bool bEnableRootMotion; // 0x250(0x01)
	char bEnablePhysicsInteraction : 1; // 0x251(0x01)
	char bPushForceScaledToMass : 1; // 0x251(0x01)
	char bPushForceUsingZOffset : 1; // 0x251(0x01)
	char bScalePushForceToVelocity : 1; // 0x251(0x01)
	char pad_251_4 : 4; // 0x251(0x01)
	char pad_252[0x2]; // 0x252(0x02)
	float InitialPushForceFactor; // 0x254(0x04)
	float PushForceFactor; // 0x258(0x04)
	float PushForcePointZOffsetFactor; // 0x25c(0x04)
	struct FRootMotionMovementParams RootMotionParams; // 0x260(0x40)
	char pad_2A0[0x3b0]; // 0x2a0(0x3b0)

	void OnFullRagdollStart(); // Function Phoenix.Phoenix3DMovementComponent.OnFullRagdollStart // (Final|Native|Protected) // @ game+0x33cb9e0
};

// Class Phoenix.AmbulatoryBlobShadowDecalCharacterComponent
// Size: 0x350 (Inherited: 0x350)
struct UAmbulatoryBlobShadowDecalCharacterComponent : USimpleBlobShadowDecalCharacterComponent {
};

// Class Phoenix.PhoenixBPLibrary
// Size: 0x40 (Inherited: 0x28)
struct UPhoenixBPLibrary : UBlueprintFunctionLibrary {
	char pad_28[0x18]; // 0x28(0x18)

	void VerifyKey(struct TArray<struct FString>& Keys); // Function Phoenix.PhoenixBPLibrary.VerifyKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x33d24f0
	void SetActorId(struct AActor* Actor, struct FName ActorId); // Function Phoenix.PhoenixBPLibrary.SetActorId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d2430
	struct TSoftObjectPtr<UObject> MakeSoftObjectReferenceFromPath(struct FSoftObjectPath& Path); // Function Phoenix.PhoenixBPLibrary.MakeSoftObjectReferenceFromPath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x33d2350
	struct TSoftObjectPtr<UObject> MakeSoftObjectReference(struct FString PathString); // Function Phoenix.PhoenixBPLibrary.MakeSoftObjectReference // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33d2280
	struct UForceResidentStreamableRenderAssetCollectionWrapper* LoadGearAppearanceItemDefinitionLODs(struct UWorld* World, struct TArray<struct UGearAppearanceItemDefinition*> GearAppearanceItemDefinitions, bool bIncludeTextures); // Function Phoenix.PhoenixBPLibrary.LoadGearAppearanceItemDefinitionLODs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d2110
	bool IsRegexMatch(struct FString Pattern, struct FString Input); // Function Phoenix.PhoenixBPLibrary.IsRegexMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33d1fa0
	bool IsItemOwned(struct FString ProductID); // Function Phoenix.PhoenixBPLibrary.IsItemOwned // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d1eb0
	void HermesStationComponentDelegate__DelegateSignature(struct UObject* Caller, struct UStationComponent* StationComponent); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesStationComponentDelegate__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void HermesSpellForceDelegate__DelegateSignature(struct UObject* Caller, struct FSpellForce& SpellForce); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesSpellForceDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesReflectAttackDelegate__DelegateSignature(struct UObject* Caller, struct FDamageResult& DamageResult); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesReflectAttackDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesParryWindowEndDelegate__DelegateSignature(struct UObject* Caller, struct FEnemy_ParryWindowEndData& ParryWindowEndData); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesParryWindowEndDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesParryWindowBeginDelegate__DelegateSignature(struct UObject* Caller, struct FEnemy_ParryWindowBeginData& ParryWindowBeginData); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesParryWindowBeginDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesParryTimeToImpactDelegate__DelegateSignature(struct UObject* Caller, struct FEnemy_ParryTimeToImpactData& ParryTimeToImpactData); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesParryTimeToImpactDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesParryEventDelegate__DelegateSignature(struct UObject* Caller, enum class EEnemy_ParryButtonPressed ButtonPressed); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesParryEventDelegate__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void HermesLockDelegate__DelegateSignature(struct UObject* Caller, struct FLockManagerLock& Lock); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesLockDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesInventoryResultDelegate__DelegateSignature(struct UObject* Caller, struct FInventoryResult& InventoryResult); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesInventoryResultDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesExecuteOwnedStationComponent(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct UStationComponent* StationComponent); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedStationComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xf5d840
	void HermesExecuteOwnedSpellForce(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FSpellForce& SpellForce); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedSpellForce // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1cf0
	void HermesExecuteOwnedReflectAttack(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FDamageResult& DamageResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedReflectAttack // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1060
	void HermesExecuteOwnedParryWindowEnd(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FEnemy_ParryWindowEndData& ParryWindowEndData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedParryWindowEnd // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1b40
	void HermesExecuteOwnedParryWindowBegin(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FEnemy_ParryWindowBeginData& ParryWindowBeginData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedParryWindowBegin // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1980
	void HermesExecuteOwnedParryTimeToImpact(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FEnemy_ParryTimeToImpactData& ParryTimeToImpactData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedParryTimeToImpact // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d17a0
	void HermesExecuteOwnedParryEvent(struct FString Name, struct UObject* Owner, struct UObject* Caller, enum class EEnemy_ParryButtonPressed ButtonPressed); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedParryEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d1610
	void HermesExecuteOwnedLock(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FLockManagerLock& Lock); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedLock // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1460
	void HermesExecuteOwnedInventoryResult(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FInventoryResult& InventoryResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedInventoryResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1250
	void HermesExecuteOwnedDamageResult(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FDamageResult& DamageResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedDamageResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d1060
	void HermesExecuteOwnedActorHitBySpell(struct FString Name, struct UObject* Owner, struct UObject* Caller, struct FHitBySpellData& HitBySpell); // Function Phoenix.PhoenixBPLibrary.HermesExecuteOwnedActorHitBySpell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0e60
	void HermesExecuteAllStationComponent(struct FString Name, struct UObject* Caller, struct UStationComponent* StationComponent); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllStationComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xf5c680
	void HermesExecuteAllSpellForce(struct FString Name, struct UObject* Caller, struct FSpellForce& SpellForce); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllSpellForce // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0ce0
	void HermesExecuteAllReflectAttack(struct FString Name, struct UObject* Caller, struct FDamageResult& DamageResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllReflectAttack // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0070
	void HermesExecuteAllParryWindowEnd(struct FString Name, struct UObject* Caller, struct FEnemy_ParryWindowEndData& ParryWindowEndData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllParryWindowEnd // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0b70
	void HermesExecuteAllParryWindowBegin(struct FString Name, struct UObject* Caller, struct FEnemy_ParryWindowBeginData& ParryWindowBeginData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllParryWindowBegin // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d09f0
	void HermesExecuteAllParryTimeToImpact(struct FString Name, struct UObject* Caller, struct FEnemy_ParryTimeToImpactData& ParryTimeToImpactData); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllParryTimeToImpact // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0850
	void HermesExecuteAllParryEvent(struct FString Name, struct UObject* Caller, enum class EEnemy_ParryButtonPressed ButtonPressed); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllParryEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d06f0
	void HermesExecuteAllLock(struct FString Name, struct UObject* Caller, struct FLockManagerLock& Lock); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllLock // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0580
	void HermesExecuteAllInventoryResult(struct FString Name, struct UObject* Caller, struct FInventoryResult& InventoryResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllInventoryResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d03b0
	void HermesExecuteAllGameplayTags(struct FString Name, struct UObject* Caller, struct FGameplayTagContainerWrapper& Wrapper); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllGameplayTags // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0220
	void HermesExecuteAllDamageResult(struct FString Name, struct UObject* Caller, struct FDamageResult& DamageResult); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllDamageResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d0070
	void HermesExecuteAllActorHitBySpell(struct FString Name, struct UObject* Caller, struct FHitBySpellData& HitBySpell); // Function Phoenix.PhoenixBPLibrary.HermesExecuteAllActorHitBySpell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cfeb0
	void HermesDamageResultDelegate__DelegateSignature(struct UObject* Caller, struct FDamageResult& DamageResult); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesDamageResultDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	void HermesBindStationComponent(struct FDelegate Delegate_StationComponent, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindStationComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cfd80
	void HermesBindSpellForce(struct FDelegate Delegate_MunitionImpactData, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindSpellForce // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cfc50
	void HermesBindReflectAttack(struct FDelegate Delegate_ReflectAttack, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindReflectAttack // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf400
	void HermesBindParryWindowEnd(struct FDelegate Delegate_ActorParryWindowEnd, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindParryWindowEnd // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cfb20
	void HermesBindParryWindowBegin(struct FDelegate Delegate_ActorParryWindowBegin, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindParryWindowBegin // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf9f0
	void HermesBindParryTimeToImpact(struct FDelegate Delegate_ActorParryTimeToImpact, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindParryTimeToImpact // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf8c0
	void HermesBindParryEvent(struct FDelegate Delegate_ActorParryEvent, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindParryEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf790
	void HermesBindLock(struct FDelegate Delegate_Lock, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindLock // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf660
	void HermesBindInventoryResult(struct FDelegate Delegate_InventoryResult, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindInventoryResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf530
	void HermesBindDamageResult(struct FDelegate Delegate_DamageResult, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindDamageResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf400
	void HermesBindActorHitBySpell(struct FDelegate Delegate_ActorHitBySpell, struct UObject* Owner, struct FHermesBPDelegateHandle& Handle); // Function Phoenix.PhoenixBPLibrary.HermesBindActorHitBySpell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33cf2d0
	void HermesActorHitBySpellDelegate__DelegateSignature(struct UObject* Caller, struct FHitBySpellData& HitBySpell); // DelegateFunction Phoenix.PhoenixBPLibrary.HermesActorHitBySpellDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x38a7480
	struct FVector GetRuntimeVectorCurveValue(struct FRuntimeCurveVector& Curve, float Time); // Function Phoenix.PhoenixBPLibrary.GetRuntimeVectorCurveValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33cf070
	struct FLinearColor GetRuntimeLinearColorCurveValue(struct FRuntimeCurveLinearColor& Curve, float Time); // Function Phoenix.PhoenixBPLibrary.GetRuntimeLinearColorCurveValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33cef00
	float GetRuntimeFloatCurveValue(struct FRuntimeFloatCurve& Curve, float Time); // Function Phoenix.PhoenixBPLibrary.GetRuntimeFloatCurveValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ced90
	enum class HouseIds GetObjectHouseID(struct AActor* Actor); // Function Phoenix.PhoenixBPLibrary.GetObjectHouseID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ced00
	enum class HouseIds GetHouseEnumFromHouseID(struct FString InHouseID); // Function Phoenix.PhoenixBPLibrary.GetHouseEnumFromHouseID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33cec60
	struct FRotator GetDisillusionmentEyeRotation(struct FName ParentSocket, struct USceneComponent* Mesh, struct FVector& TargetLocation, float MaxHorizontalAngle, float MaxVerticalAngle); // Function Phoenix.PhoenixBPLibrary.GetDisillusionmentEyeRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x33cea80
	struct FString GetActorName(struct AActor* Actor); // Function Phoenix.PhoenixBPLibrary.GetActorName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ce9b0
	bool GetActorId(struct AActor* Actor, struct FName& OutActorId); // Function Phoenix.PhoenixBPLibrary.GetActorId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ce8d0
	void ForceUpdateTextureMips(struct AActor* Actor); // Function Phoenix.PhoenixBPLibrary.ForceUpdateTextureMips // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ce850
	void DestroyComponent(struct UActorComponent* Component, bool bPromoteChildren); // Function Phoenix.PhoenixBPLibrary.DestroyComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ce790
	void CultureChanged(); // Function Phoenix.PhoenixBPLibrary.CultureChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x13244f0
	bool ChangeOutfit(struct AActor* Actor, struct TArray<struct FName> GearIDs, struct TArray<struct USkeletalMeshComponent*>& OldMeshes, struct TArray<struct USkeletalMeshComponent*>& NewMeshes, bool bSkipChangingGear); // Function Phoenix.PhoenixBPLibrary.ChangeOutfit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ce560
	struct TSoftObjectPtr<UWorld> CastToWorldSoftObjectReference(struct TSoftObjectPtr<UObject> ObjRef); // Function Phoenix.PhoenixBPLibrary.CastToWorldSoftObjectReference // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ce420
	struct FText AVATranslateSubtitle(struct FString Key, struct FString DebugLogText); // Function Phoenix.PhoenixBPLibrary.AVATranslateSubtitle // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ce210
	struct FText AVATranslate(struct FString Key, struct FString DebugLogText); // Function Phoenix.PhoenixBPLibrary.AVATranslate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ce030
	bool AvaIsRunningWithEditor(); // Function Phoenix.PhoenixBPLibrary.AvaIsRunningWithEditor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1039f30
	bool AvaIsRunningCommandlet(); // Function Phoenix.PhoenixBPLibrary.AvaIsRunningCommandlet // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ce3f0
};

// Class Phoenix.PhoenixCameraSettings
// Size: 0xb8 (Inherited: 0x28)
struct UPhoenixCameraSettings : UObject {
	struct FPhoenixCameraSettingsData SettingsData; // 0x28(0x88)
	bool bDirty; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)

	void SetToggleAim(bool bInToggleAim); // Function Phoenix.PhoenixCameraSettings.SetToggleAim // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5e70
	void SetSpeedFollowCamera(float InFollowSpeed); // Function Phoenix.PhoenixCameraSettings.SetSpeedFollowCamera // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5df0
	void SetSettingsData(struct FPhoenixCameraSettingsData& InSettingsData); // Function Phoenix.PhoenixCameraSettings.SetSettingsData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33d5cd0
	void SetMotionBlur(bool bInMotionBlur); // Function Phoenix.PhoenixCameraSettings.SetMotionBlur // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5c40
	void SetInvertY(bool bInInvertY); // Function Phoenix.PhoenixCameraSettings.SetInvertY // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5bb0
	void SetInvertX(bool bInInvertX); // Function Phoenix.PhoenixCameraSettings.SetInvertX // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5b20
	void SetInvertFlightY(bool bInInvertFlightY); // Function Phoenix.PhoenixCameraSettings.SetInvertFlightY // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5a90
	void SetInputSensitivityDefault(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetInputSensitivityDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5a10
	void SetInputSensitivityAiming(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetInputSensitivityAiming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5990
	void SetInputAccelerationDefault(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetInputAccelerationDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5910
	void SetInputAccelerationAiming(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetInputAccelerationAiming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5890
	void SetGamepadSouthpaw(bool bInSouthpaw); // Function Phoenix.PhoenixCameraSettings.SetGamepadSouthpaw // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5810
	void SetGamepadDeadzone(float InDeadzone); // Function Phoenix.PhoenixCameraSettings.SetGamepadDeadzone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5790
	void SetGamepadAimingSwitch(bool bInAimingSwitch); // Function Phoenix.PhoenixCameraSettings.SetGamepadAimingSwitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5700
	bool SetFilmGrain(bool bInFilmGrain); // Function Phoenix.PhoenixCameraSettings.SetFilmGrain // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5660
	void SetFieldOfViewOffset(float InFieldOfViewOffset); // Function Phoenix.PhoenixCameraSettings.SetFieldOfViewOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d55e0
	void SetDirectorCam_ZoomInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_ZoomInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5560
	void SetDirectorCam_ZoomInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_ZoomInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d54e0
	void SetDirectorCam_ZoomFiltering(float InFiltering); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_ZoomFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5460
	void SetDirectorCam_TruckInLocalSpace(bool bInValue); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_TruckInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d53d0
	void SetDirectorCam_SwitchRollAndZoomInput(bool bInValue); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_SwitchRollAndZoomInput // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5340
	void SetDirectorCam_RotationInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_RotationInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d52c0
	void SetDirectorCam_RotationInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_RotationInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5240
	void SetDirectorCam_RotationFiltering(float InFiltering); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_RotationFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d51c0
	void SetDirectorCam_RollInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_RollInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5140
	void SetDirectorCam_RollInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_RollInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d50c0
	void SetDirectorCam_PedestalInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_PedestalInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d5040
	void SetDirectorCam_PedestalInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_PedestalInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4fc0
	void SetDirectorCam_PedestalInLocalSpace(bool bInValue); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_PedestalInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4f30
	void SetDirectorCam_MoveInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_MoveInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4eb0
	void SetDirectorCam_MoveInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_MoveInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4e30
	void SetDirectorCam_MoveFiltering(float InFiltering); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_MoveFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4db0
	void SetDirectorCam_FocusDistanceInputSensitivity(float InSensitivity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_FocusDistanceInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4d30
	void SetDirectorCam_FocusDistanceInputAcceleration(float InAcceleration); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_FocusDistanceInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4cb0
	void SetDirectorCam_FocusDistanceFiltering(float InFiltering); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_FocusDistanceFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4c30
	void SetDirectorCam_DollyInLocalSpace(bool bInValue); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_DollyInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4ba0
	void SetDirectorCam_Aperture(float InAperture); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_Aperture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4b20
	void SetDirectorCam_AmbientIntensity(float InIntensity); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_AmbientIntensity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4aa0
	void SetDirectorCam_AmbientFrequency(float InFrequency); // Function Phoenix.PhoenixCameraSettings.SetDirectorCam_AmbientFrequency // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4a10
	void SetDepthOfField(bool bInDepthOfField); // Function Phoenix.PhoenixCameraSettings.SetDepthOfField // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4980
	void SetCineCameraShake(bool bInCineCameraShake); // Function Phoenix.PhoenixCameraSettings.SetCineCameraShake // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d48f0
	bool SetChromaticAberration(bool bInChromaticAberration); // Function Phoenix.PhoenixCameraSettings.SetChromaticAberration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4850
	void SetCameraShake(float InCameraShake); // Function Phoenix.PhoenixCameraSettings.SetCameraShake // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d47d0
	void SetAmountMotionBlur(float InMotionBlurAmount); // Function Phoenix.PhoenixCameraSettings.SetAmountMotionBlur // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4750
	void SetAimAssistStrength(float InStrength); // Function Phoenix.PhoenixCameraSettings.SetAimAssistStrength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d46d0
	void ResetGameplaySettings(); // Function Phoenix.PhoenixCameraSettings.ResetGameplaySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d46b0
	void ResetDisplaySettings(); // Function Phoenix.PhoenixCameraSettings.ResetDisplaySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4690
	void ResetConsoleDisplaySettings(); // Function Phoenix.PhoenixCameraSettings.ResetConsoleDisplaySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4670
	void ResetAccessibilitySettings(); // Function Phoenix.PhoenixCameraSettings.ResetAccessibilitySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4650
	bool GetToggleAim(); // Function Phoenix.PhoenixCameraSettings.GetToggleAim // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4620
	float GetSpeedFollowCamera(); // Function Phoenix.PhoenixCameraSettings.GetSpeedFollowCamera // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d45f0
	struct FPhoenixCameraSettingsData GetSettingsData(); // Function Phoenix.PhoenixCameraSettings.GetSettingsData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4570
	bool GetMotionBlur(); // Function Phoenix.PhoenixCameraSettings.GetMotionBlur // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4540
	bool GetInvertY(); // Function Phoenix.PhoenixCameraSettings.GetInvertY // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4510
	bool GetInvertX(); // Function Phoenix.PhoenixCameraSettings.GetInvertX // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d44e0
	float GetInputSensitivityDefault(); // Function Phoenix.PhoenixCameraSettings.GetInputSensitivityDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d44b0
	float GetInputSensitivityAiming(); // Function Phoenix.PhoenixCameraSettings.GetInputSensitivityAiming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4480
	float GetInputAccelerationDefault(); // Function Phoenix.PhoenixCameraSettings.GetInputAccelerationDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4450
	float GetInputAccelerationAiming(); // Function Phoenix.PhoenixCameraSettings.GetInputAccelerationAiming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4420
	bool GetGamepadSouthpaw(); // Function Phoenix.PhoenixCameraSettings.GetGamepadSouthpaw // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d43f0
	float GetGamepadDeadzone(); // Function Phoenix.PhoenixCameraSettings.GetGamepadDeadzone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d43c0
	bool GetGamepadAimingSwitch(); // Function Phoenix.PhoenixCameraSettings.GetGamepadAimingSwitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4390
	bool GetFlightInvertY(); // Function Phoenix.PhoenixCameraSettings.GetFlightInvertY // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4360
	bool GetFilmGrain(); // Function Phoenix.PhoenixCameraSettings.GetFilmGrain // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4330
	float GetFieldOfViewOffset(); // Function Phoenix.PhoenixCameraSettings.GetFieldOfViewOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4300
	bool GetDirty(); // Function Phoenix.PhoenixCameraSettings.GetDirty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d42d0
	float GetDirectorCam_ZoomInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_ZoomInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d42a0
	float GetDirectorCam_ZoomInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_ZoomInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4270
	float GetDirectorCam_ZoomFiltering(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_ZoomFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4240
	bool GetDirectorCam_TruckInLocalSpace(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_TruckInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4210
	bool GetDirectorCam_SwitchRollAndZoomInput(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_SwitchRollAndZoomInput // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d41e0
	float GetDirectorCam_RotationInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_RotationInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d41b0
	float GetDirectorCam_RotationInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_RotationInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4180
	float GetDirectorCam_RotationFiltering(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_RotationFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4150
	float GetDirectorCam_RollInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_RollInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4120
	float GetDirectorCam_RollInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_RollInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d40f0
	float GetDirectorCam_PedestalInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_PedestalInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d40c0
	float GetDirectorCam_PedestalInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_PedestalInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4090
	bool GetDirectorCam_PedestalInLocalSpace(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_PedestalInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4060
	float GetDirectorCam_MoveInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_MoveInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4030
	float GetDirectorCam_MoveInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_MoveInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d4000
	float GetDirectorCam_MoveFiltering(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_MoveFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3fd0
	float GetDirectorCam_FocusDistanceInputSensitivity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_FocusDistanceInputSensitivity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3fa0
	float GetDirectorCam_FocusDistanceInputAcceleration(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_FocusDistanceInputAcceleration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3f70
	float GetDirectorCam_FocusDistanceFiltering(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_FocusDistanceFiltering // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3f40
	bool GetDirectorCam_DollyInLocalSpace(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_DollyInLocalSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3f10
	float GetDirectorCam_Aperture(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_Aperture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3ee0
	float GetDirectorCam_AmbientIntensity(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_AmbientIntensity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3eb0
	float GetDirectorCam_AmbientFrequency(); // Function Phoenix.PhoenixCameraSettings.GetDirectorCam_AmbientFrequency // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3e80
	bool GetDepthOfField(); // Function Phoenix.PhoenixCameraSettings.GetDepthOfField // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3e50
	bool GetCineCameraShake(); // Function Phoenix.PhoenixCameraSettings.GetCineCameraShake // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3e20
	bool GetChromaticAberration(); // Function Phoenix.PhoenixCameraSettings.GetChromaticAberration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3df0
	float GetCameraShake(); // Function Phoenix.PhoenixCameraSettings.GetCameraShake // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3dc0
	float GetAppliedFieldOfView(struct UObject* InWorldContextObject); // Function Phoenix.PhoenixCameraSettings.GetAppliedFieldOfView // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3d30
	float GetAmountMotionBlur(); // Function Phoenix.PhoenixCameraSettings.GetAmountMotionBlur // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3d00
	float GetAimAssistStrength(); // Function Phoenix.PhoenixCameraSettings.GetAimAssistStrength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3cd0
	void ApplyToCameraManager(struct APlayerController* PC); // Function Phoenix.PhoenixCameraSettings.ApplyToCameraManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3c50
	void Apply(struct UObject* InWorldContextObject); // Function Phoenix.PhoenixCameraSettings.Apply // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33d3bd0
};

// Class Phoenix.CameraStackBehaviorWingardiumCrossBlend
// Size: 0x388 (Inherited: 0x368)
struct UCameraStackBehaviorWingardiumCrossBlend : UCameraStackBehaviorMultiCrossBlendStandalone {
	struct UCameraStackSecondaryTargetGetter* Target; // 0x368(0x08)
	float MinTargetHeight; // 0x370(0x04)
	float MaxTargetHeight; // 0x374(0x04)
	float ProbeSize; // 0x378(0x04)
	enum class ECollisionChannel ProbeChannel; // 0x37c(0x01)
	char pad_37D[0xb]; // 0x37d(0x0b)
};

// Class Phoenix.CameraStackBehaviorTransfigurationCrossBlend
// Size: 0x370 (Inherited: 0x368)
struct UCameraStackBehaviorTransfigurationCrossBlend : UCameraStackBehaviorMultiCrossBlendStandalone {
	char pad_368[0x8]; // 0x368(0x08)
};

// Class Phoenix.CameraStackBehaviorFlowWaterCollision
// Size: 0x78 (Inherited: 0x50)
struct UCameraStackBehaviorFlowWaterCollision : UCameraStackBehavior {
	float ProbeSize; // 0x50(0x04)
	bool bCheckForWaterVolumeOverlap; // 0x54(0x01)
	bool bMaintainArmOriginFraming; // 0x55(0x01)
	char pad_56[0x22]; // 0x56(0x22)
};

// Class Phoenix.CameraStackBehaviorAttachToSplineBroom
// Size: 0x248 (Inherited: 0x248)
struct UCameraStackBehaviorAttachToSplineBroom : UCameraStackBehaviorAttachToSpline {
};

// Class Phoenix.CameraStackBehaviorMoveTargetToIKHeight
// Size: 0x1d0 (Inherited: 0x1b8)
struct UCameraStackBehaviorMoveTargetToIKHeight : UCameraStackBehaviorBlend {
	char pad_1B8[0x18]; // 0x1b8(0x18)
};

// Class Phoenix.CameraStackBehaviorMoveTargetToRagdollCOM
// Size: 0x1d8 (Inherited: 0x1b8)
struct UCameraStackBehaviorMoveTargetToRagdollCOM : UCameraStackBehaviorBlend {
	float verticalOffset; // 0x1b8(0x04)
	char pad_1BC[0x1c]; // 0x1bc(0x1c)
};

// Class Phoenix.CameraStackBehaviorJumpLag
// Size: 0x1f8 (Inherited: 0x1b8)
struct UCameraStackBehaviorJumpLag : UCameraStackBehaviorBlend {
	char pad_1B8[0x40]; // 0x1b8(0x40)

	void OnTeleport(struct AAmbulatory_Character* Character, struct FVector AmountDisplaced, struct FRotator AmountRotated); // Function Phoenix.CameraStackBehaviorJumpLag.OnTeleport // (Final|Native|Protected|HasDefaults) // @ game+0x33daad0
};

// Class Phoenix.CameraStackBehaviorFollowTargetRotationSpringMountSteering
// Size: 0x238 (Inherited: 0x218)
struct UCameraStackBehaviorFollowTargetRotationSpringMountSteering : UCameraStackBehaviorFollowTargetRotationSpring {
	float MaximumInput; // 0x218(0x04)
	float InputAlphaInterpSpeed; // 0x21c(0x04)
	struct FVector2D SpineDeltaMappedRange; // 0x220(0x08)
	char pad_228[0x10]; // 0x228(0x10)
};

// Class Phoenix.CameraStackBehaviorFlyingMountHeightCrossBlend
// Size: 0x3a8 (Inherited: 0x368)
struct UCameraStackBehaviorFlyingMountHeightCrossBlend : UCameraStackBehaviorMultiCrossBlendStandalone {
	struct FFloatRange HeightRange; // 0x368(0x10)
	struct FFloatRange DescendingVelocityRange; // 0x378(0x10)
	float FilterHalflifeIncrease; // 0x388(0x04)
	float FilterHalflifeDecrease; // 0x38c(0x04)
	float FilterHalflifeDescending; // 0x390(0x04)
	char pad_394[0x14]; // 0x394(0x14)
};

// Class Phoenix.CameraStackBehaviorChooseByMountType
// Size: 0xa8 (Inherited: 0x50)
struct UCameraStackBehaviorChooseByMountType : UCameraStackBehavior {
	struct UCameraStackBehavior* DefaultBehavior; // 0x50(0x08)
	struct TMap<struct FName, struct UCameraStackBehavior*> MountSpecificBehaviors; // 0x58(0x50)
};

// Class Phoenix.CameraStackBehaviorCrossBlendByCapturedBeastSize
// Size: 0x370 (Inherited: 0x368)
struct UCameraStackBehaviorCrossBlendByCapturedBeastSize : UCameraStackBehaviorMultiCrossBlendStandalone {
	char pad_368[0x8]; // 0x368(0x08)
};

// Class Phoenix.CameraStackBehaviorCrossBlendByCrouchingPose
// Size: 0x370 (Inherited: 0x368)
struct UCameraStackBehaviorCrossBlendByCrouchingPose : UCameraStackBehaviorMultiCrossBlendStandalone {
	char pad_368[0x8]; // 0x368(0x08)
};

// Class Phoenix.CameraStackBehaviorAddOffsetsWhileCrouching
// Size: 0x228 (Inherited: 0x1b8)
struct UCameraStackBehaviorAddOffsetsWhileCrouching : UCameraStackBehaviorBlend {
	float TargetZOffset; // 0x1b8(0x04)
	float ArmOriginZOffset; // 0x1bc(0x04)
	struct FVector CameraSpaceTranslation; // 0x1c0(0x0c)
	bool bApplyToStealthOnly; // 0x1cc(0x01)
	char pad_1CD[0x3]; // 0x1cd(0x03)
	float BlendDuration; // 0x1d0(0x04)
	bool bAddArmOriginZOffsetWhileMoving; // 0x1d4(0x01)
	char pad_1D5[0x3]; // 0x1d5(0x03)
	float ArmOriginZOffsetWhileMoving; // 0x1d8(0x04)
	float MovingBlendDuration; // 0x1dc(0x04)
	char pad_1E0[0x48]; // 0x1e0(0x48)
};

// Class Phoenix.CameraStackBehaviorDisableCreatureTickThrottling
// Size: 0x50 (Inherited: 0x50)
struct UCameraStackBehaviorDisableCreatureTickThrottling : UCameraStackBehavior {
};

// Class Phoenix.PhoenixCameraStackManager
// Size: 0x3030 (Inherited: 0x2e70)
struct APhoenixCameraStackManager : ACameraStackManager {
	bool bEnableObjectFading; // 0x2e68(0x01)
	float ObjectFadeDuration; // 0x2e6c(0x04)
	float MinObjectFadeOpacity; // 0x2e70(0x04)
	float ObjectFadingProbeSize; // 0x2e74(0x04)
	float MinFadeCameraDistanceToAvatar; // 0x2e78(0x04)
	float AvatarCapsuleRefRadius; // 0x2e7c(0x04)
	char pad_2E85[0x1ab]; // 0x2e85(0x1ab)

	void StartFadeToZeroOpacity(); // Function Phoenix.PhoenixCameraStackManager.StartFadeToZeroOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x33db630
	void OnCurtainRaised(); // Function Phoenix.PhoenixCameraStackManager.OnCurtainRaised // (Final|Native|Protected) // @ game+0x33daab0
	void FinishFadeToZeroOpacity(); // Function Phoenix.PhoenixCameraStackManager.FinishFadeToZeroOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x33da8c0
	void EnableForceFadeAll(); // Function Phoenix.PhoenixCameraStackManager.EnableForceFadeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x33da8a0
	void DisableForceFadeAll(); // Function Phoenix.PhoenixCameraStackManager.DisableForceFadeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x33da880
};

// Class Phoenix.CameraStackReticleTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackReticleTargetGetter : UCameraStackSecondaryTargetGetterBlend {
};

// Class Phoenix.CameraStackLockOnTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackLockOnTargetGetter : UCameraStackReticleTargetGetter {
};

// Class Phoenix.CameraStackAimModeTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackAimModeTargetGetter : UCameraStackLockOnTargetGetter {
};

// Class Phoenix.CameraStackTransfigurationPreviewTargetGetter
// Size: 0xc0 (Inherited: 0xb0)
struct UCameraStackTransfigurationPreviewTargetGetter : UCameraStackSecondaryTargetGetterBlend {
	bool bObjectCenter; // 0xa8(0x01)
	char pad_B1[0xf]; // 0xb1(0x0f)
};

// Class Phoenix.CameraStackStationaryTransfigurationPreviewTargetGetter
// Size: 0xc0 (Inherited: 0xc0)
struct UCameraStackStationaryTransfigurationPreviewTargetGetter : UCameraStackTransfigurationPreviewTargetGetter {
};

// Class Phoenix.CameraStackTransfigurationPreviewAttachmentLocationTargetGetter
// Size: 0xc0 (Inherited: 0xc0)
struct UCameraStackTransfigurationPreviewAttachmentLocationTargetGetter : UCameraStackTransfigurationPreviewTargetGetter {
};

// Class Phoenix.CameraStackCapturedBeastTargetGetter
// Size: 0x68 (Inherited: 0x60)
struct UCameraStackCapturedBeastTargetGetter : UCameraStackSecondaryTargetGetter {
	char pad_60[0x8]; // 0x60(0x08)
};

// Class Phoenix.CameraStackToolInteractionBeastTargetGetter
// Size: 0x68 (Inherited: 0x60)
struct UCameraStackToolInteractionBeastTargetGetter : UCameraStackSecondaryTargetGetter {
	char pad_60[0x8]; // 0x60(0x08)
};

// Class Phoenix.CameraStackDuelingPartnerTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackDuelingPartnerTargetGetter : UCameraStackSecondaryTargetGetterBlend {
};

// Class Phoenix.CameraStackActiveSpellTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackActiveSpellTargetGetter : UCameraStackSecondaryTargetGetterBlend {
};

// Class Phoenix.CameraStackSpellCastTargetGetter
// Size: 0xc0 (Inherited: 0xb0)
struct UCameraStackSpellCastTargetGetter : UCameraStackSecondaryTargetGetterBlend {
	float Timeout; // 0xa8(0x04)
	char pad_B4[0xc]; // 0xb4(0x0c)
};

// Class Phoenix.CameraStackKillCamTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackKillCamTargetGetter : UCameraStackSecondaryTargetGetterBlend {
};

// Class Phoenix.CameraStackDebugTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackDebugTargetGetter : UCameraStackSecondaryTargetGetterBlend {
};

// Class Phoenix.CameraStackAvatarTargetTrackerGetterBase
// Size: 0xc0 (Inherited: 0xb0)
struct UCameraStackAvatarTargetTrackerGetterBase : UCameraStackSecondaryTargetGetterBlend {
	bool bUseActorCenterIfApplicable; // 0xa8(0x01)
	bool bUseRootBoneIfApplicable; // 0xa9(0x01)
	char pad_B2[0xe]; // 0xb2(0x0e)
};

// Class Phoenix.CameraStackAvatarFaceTargetGetter
// Size: 0xc0 (Inherited: 0xc0)
struct UCameraStackAvatarFaceTargetGetter : UCameraStackAvatarTargetTrackerGetterBase {
};

// Class Phoenix.CameraStackAvatarAimAtTargetGetter
// Size: 0xc0 (Inherited: 0xc0)
struct UCameraStackAvatarAimAtTargetGetter : UCameraStackAvatarTargetTrackerGetterBase {
};

// Class Phoenix.CameraStackMovementTrajectoryTargetGetter
// Size: 0x98 (Inherited: 0x60)
struct UCameraStackMovementTrajectoryTargetGetter : UCameraStackSecondaryTargetGetter {
	float TimeAhead; // 0x60(0x04)
	struct FVector2D TargetDistanceAheadRange; // 0x64(0x08)
	struct FVector2D TargetDistanceSpeedRange; // 0x6c(0x08)
	float InterpolationSpeed; // 0x74(0x04)
	bool bDrawDebug; // 0x78(0x01)
	char pad_79[0x1f]; // 0x79(0x1f)
};

// Class Phoenix.CameraStackMountCreatureGetter
// Size: 0x78 (Inherited: 0x60)
struct UCameraStackMountCreatureGetter : UCameraStackSecondaryTargetGetter {
	struct FVector OffsetFromCreature; // 0x60(0x0c)
	char pad_6C[0xc]; // 0x6c(0x0c)
};

// Class Phoenix.CameraStackNamedSecondaryTargetGetter
// Size: 0xb0 (Inherited: 0xb0)
struct UCameraStackNamedSecondaryTargetGetter : UCameraStackSecondaryTargetGetterBlend {
	struct FName TargetActorName; // 0xa8(0x08)
};

// Class Phoenix.CameraStackClimbingLedgeTargetGetter
// Size: 0xc0 (Inherited: 0xb0)
struct UCameraStackClimbingLedgeTargetGetter : UCameraStackSecondaryTargetGetterBlend {
	struct FVector LedgeRelativeLocation; // 0xa8(0x0c)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class Phoenix.CameraStackAvatarSyncSplineGetter
// Size: 0x30 (Inherited: 0x30)
struct UCameraStackAvatarSyncSplineGetter : UCameraStackSplineGetter {
};

// Class Phoenix.CameraStackBroomFlightGetter
// Size: 0x30 (Inherited: 0x30)
struct UCameraStackBroomFlightGetter : UCameraStackSplineGetter {
};

// Class Phoenix.CameraStackNamedSplineGetter
// Size: 0x38 (Inherited: 0x30)
struct UCameraStackNamedSplineGetter : UCameraStackSplineGetter {
	struct FName SplineActorName; // 0x30(0x08)
};

// Class Phoenix.PhoenixCameraStackStatics
// Size: 0x28 (Inherited: 0x28)
struct UPhoenixCameraStackStatics : UCameraStackStatics {

	struct ACameraStackLookAtTargetActor* SpawnCameraLookAtTargetActor(struct UObject* WorldContextObject, struct FVector WorldLocation, enum class ECameraStackLookAtStrength LookAtStrength); // Function Phoenix.PhoenixCameraStackStatics.SpawnCameraLookAtTargetActor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33db510
	void SetPlayerCameraLookAtLocationForDuration(struct UObject* WorldContextObject, struct FVector LookAtLocation, float Duration, enum class ECameraStackLookAtStrength LookAtStrength, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.SetPlayerCameraLookAtLocationForDuration // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33db360
	void SetPlayerCameraLookAtLocation(struct UObject* WorldContextObject, struct FVector LookAtLocation, enum class ECameraStackLookAtStrength LookAtStrength, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.SetPlayerCameraLookAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33db210
	void SetPlayerCameraLookAtActorForDuration(struct UObject* WorldContextObject, struct AActor* LookAtActor, float Duration, enum class ECameraStackLookAtStrength LookAtStrength, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.SetPlayerCameraLookAtActorForDuration // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33db080
	void SetPlayerCameraLookAtActor(struct UObject* WorldContextObject, struct AActor* LookAtActor, enum class ECameraStackLookAtStrength LookAtStrength, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.SetPlayerCameraLookAtActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33daf30
	void ReleasePlayerCameraLookAt(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.ReleasePlayerCameraLookAt // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33dae70
	void PlayWorldCameraShakeScale(struct UObject* WorldContextObject, struct UCameraShakeBase* Shake, struct FVector epicenter, float InnerRadius, float OuterRadius, float Falloff, float InScale, bool bOrientShakeTowardsEpicenter); // Function Phoenix.PhoenixCameraStackStatics.PlayWorldCameraShakeScale // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x33dac00
	struct ACameraStackLookAtTargetActor* GetLookAtTargetActorWithStrength(struct UObject* WorldContextObject, enum class ECameraStackLookAtStrength LookAtStrength, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.GetLookAtTargetActorWithStrength // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33da9b0
	struct ACameraStackLookAtTargetActor* GetHighestPriorityLookAtTargetActor(struct UObject* WorldContextObject, int32_t PlayerIndex); // Function Phoenix.PhoenixCameraStackStatics.GetHighestPriorityLookAtTargetActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33da8e0
};

// Class Phoenix.PhoenixTextBlock
// Size: 0x418 (Inherited: 0x2a8)
struct UPhoenixTextBlock : UTextBlock {
	struct FString LocalizationKey; // 0x2a8(0x10)
	bool Translatable; // 0x2b8(0x01)
	bool ScaleFontSize; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)
	struct FSlateBrush TextBackground; // 0x2c0(0x88)
	struct FLinearColor BackgroundBrushColor; // 0x348(0x10)
	char pad_358[0x20]; // 0x358(0x20)
	struct FDelegate TextBackgroundDelegate; // 0x378(0x10)
	struct FDataTableRowHandle ColorTag; // 0x388(0x10)
	char pad_398[0x8]; // 0x398(0x08)
	struct FSoftObjectPath AsianFontPath; // 0x3a0(0x18)
	char pad_3B8[0x60]; // 0x3b8(0x60)

	void SetTextKey(struct FString Key); // Function Phoenix.PhoenixTextBlock.SetTextKey // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7760
	void SetColorTag(struct FDataTableRowHandle NewColorTag); // Function Phoenix.PhoenixTextBlock.SetColorTag // (Final|Native|Public|BlueprintCallable) // @ game+0x33f74e0
	bool PreValidateLocalizationKey(struct FString RequestedKey); // Function Phoenix.PhoenixTextBlock.PreValidateLocalizationKey // (Final|Native|Private) // @ game+0x33f70f0
	struct FString GetPhoenixText(); // Function Phoenix.PhoenixTextBlock.GetPhoenixText // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6de0
	struct FSlateFontInfo GetFontInfo(); // Function Phoenix.PhoenixTextBlock.GetFontInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6cd0
	float GetCurrentFontScale(); // Function Phoenix.PhoenixTextBlock.GetCurrentFontScale // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6c50
	struct FDataTableRowHandle GetColorTag(); // Function Phoenix.PhoenixTextBlock.GetColorTag // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6c20
	void FontLoadCallback(struct UFont* LoadedFont); // Function Phoenix.PhoenixTextBlock.FontLoadCallback // (Final|Native|Private) // @ game+0x33f6a80
};

// Class Phoenix.PhoenixConversationTextBlock
// Size: 0x418 (Inherited: 0x418)
struct UPhoenixConversationTextBlock : UPhoenixTextBlock {
};

// Class Phoenix.PhoenixCreditEntryWidget
// Size: 0x328 (Inherited: 0x328)
struct UPhoenixCreditEntryWidget : UPhoenixUserWidget {

	void SetCreditEntryInfo(struct FCreditEntry CreditEntry); // Function Phoenix.PhoenixCreditEntryWidget.SetCreditEntryInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetCreditEntryAnimProgress(float Progress); // Function Phoenix.PhoenixCreditEntryWidget.SetCreditEntryAnimProgress // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CreditEntryAnimationEnded__DelegateSignature(); // DelegateFunction Phoenix.PhoenixCreditEntryWidget.CreditEntryAnimationEnded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
};

// Class Phoenix.PhoenixCreditsScreen
// Size: 0x3e0 (Inherited: 0x370)
struct UPhoenixCreditsScreen : UScreen {
	struct TSoftObjectPtr<UDataTable> CreditsDataTable; // 0x370(0x28)
	float RollAnimationDuration; // 0x398(0x04)
	float TimeBetweenEntries; // 0x39c(0x04)
	struct UCanvasPanel* CreditsCanvasPanel; // 0x3a0(0x08)
	struct TArray<struct FCreditEntry> AllCreditEntries; // 0x3a8(0x10)
	struct TArray<struct FAnimatedCreditEntry> AnimatedCreditEntries; // 0x3b8(0x10)
	bool DataTableLoaded; // 0x3c8(0x01)
	bool CreditsRolling; // 0x3c9(0x01)
	bool LastEntryReached; // 0x3ca(0x01)
	char pad_3CB[0x1]; // 0x3cb(0x01)
	float DurationMultiplier; // 0x3cc(0x04)
	int32_t CreditsEntryCounter; // 0x3d0(0x04)
	float TotalRollTime; // 0x3d4(0x04)
	float TimeToNextEntry; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)

	void StartRollingCredits(); // Function Phoenix.PhoenixCreditsScreen.StartRollingCredits // (Final|Native|Public|BlueprintCallable) // @ game+0x33db650
	struct UPhoenixCreditEntryWidget* CreateCreditEntry(struct FCreditEntry CreditEntry); // Function Phoenix.PhoenixCreditsScreen.CreateCreditEntry // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PhoenixFootPlantEffects
// Size: 0x78 (Inherited: 0x50)
struct UPhoenixFootPlantEffects : UFootPlantEffects {
	float VfxRadius; // 0x50(0x04)
	enum class EFootprintTypes FootprintType; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
	float FootOffsetZ; // 0x58(0x04)
	float FootprintScale; // 0x5c(0x04)
	float ScaleMultiplier; // 0x60(0x04)
	float FemaleFootprintScaleAdjustment; // 0x64(0x04)
	struct FVector2D FootprintScaleVariationRange; // 0x68(0x08)
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.PhoenixForceFeedbackComponent
// Size: 0x300 (Inherited: 0x300)
struct UPhoenixForceFeedbackComponent : UForceFeedbackComponent {
	float CadenceMultiplier; // 0x2f8(0x04)

	void SetCadenceMultiplier(float NewCadenceMultiplier); // Function Phoenix.PhoenixForceFeedbackComponent.SetCadenceMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3660
};

// Class Phoenix.PhoenixGameInstance
// Size: 0x438 (Inherited: 0x230)
struct UPhoenixGameInstance : UArchitectGameInstance {
	char pad_230[0x30]; // 0x230(0x30)
	struct FMulticastInlineDelegate PlayerSpawnedDelegate; // 0x260(0x10)
	enum class ERespawnReason RespawnReason; // 0x270(0x01)
	char pad_271[0x27]; // 0x271(0x27)
	struct UFastTravelManager* FastTravelManagerClass; // 0x298(0x08)
	bool bAllowHoldPlayerUntilColliding; // 0x2a0(0x01)
	char pad_2A1[0x7]; // 0x2a1(0x07)
	struct TSoftObjectPtr<UPhoenixPersistentAssets> PersistentAssetsPaths; // 0x2a8(0x28)
	char pad_2D0[0x28]; // 0x2d0(0x28)
	struct TArray<struct UObject*> PersistentAssets; // 0x2f8(0x10)
	char pad_308[0x120]; // 0x308(0x120)
	struct TArray<struct UPhxDbRegistryTypeManager*> mRegistryTypeManagers; // 0x428(0x10)

	void UpdateSaveSpawnLocationEx(struct FVector PlayerPostion, struct FRotator PlayerOrientation); // Function Phoenix.PhoenixGameInstance.UpdateSaveSpawnLocationEx // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33e6420
	void UpdateSaveSpawnLocation(); // Function Phoenix.PhoenixGameInstance.UpdateSaveSpawnLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33e6400
	void UpdateChallengeSpawnLocation(); // Function Phoenix.PhoenixGameInstance.UpdateChallengeSpawnLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33e63e0
	void StartNewGame(bool bInIsIntro); // Function Phoenix.PhoenixGameInstance.StartNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x33e62a0
	void SetSaveSpawnLocationToPlayerStart(struct APlayerStart* InPlayerStart); // Function Phoenix.PhoenixGameInstance.SetSaveSpawnLocationToPlayerStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33e51d0
	void SetPlayingFromFrontend(); // Function Phoenix.PhoenixGameInstance.SetPlayingFromFrontend // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4d20
	void SetPlayingFromDeveloperMenu(bool bDeveloperMenu); // Function Phoenix.PhoenixGameInstance.SetPlayingFromDeveloperMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4c90
	void SetPlayingDeveloperOverland(bool DeveloperOverland); // Function Phoenix.PhoenixGameInstance.SetPlayingDeveloperOverland // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4c00
	void SetPlayingDemoBuild(); // Function Phoenix.PhoenixGameInstance.SetPlayingDemoBuild // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4be0
	void SetCurrentLoadingScreenLocationByLevelName(struct FName LevelName, struct FString PlayerStartTag); // Function Phoenix.PhoenixGameInstance.SetCurrentLoadingScreenLocationByLevelName // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3870
	void SetCurrentLoadingScreenLocation(enum class ELoadingScreenLocation Location); // Function Phoenix.PhoenixGameInstance.SetCurrentLoadingScreenLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x33e37f0
	bool SaveGameOptions(); // Function Phoenix.PhoenixGameInstance.SaveGameOptions // (Final|Native|Public|BlueprintCallable) // @ game+0xe899c0
	bool PlayOverland(); // Function Phoenix.PhoenixGameInstance.PlayOverland // (Final|Native|Public|BlueprintCallable) // @ game+0x33e2dc0
	void PhoenixOpenLevelBySoftObjectPtr(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld> Level, bool bAbsolute, struct FString OPTIONS); // Function Phoenix.PhoenixGameInstance.PhoenixOpenLevelBySoftObjectPtr // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e2ba0
	void PhoenixOpenLevel(struct UObject* WorldContextObject, struct FName LevelName, bool bAbsolute, struct FString OPTIONS); // Function Phoenix.PhoenixGameInstance.PhoenixOpenLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e2a00
	void OnSaveGameLoaded(); // Function Phoenix.PhoenixGameInstance.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x33e26c0
	void OnDBVersionCheck(int32_t SaveVersion, int32_t SaveChangeList); // Function Phoenix.PhoenixGameInstance.OnDBVersionCheck // (Final|Native|Public) // @ game+0x33e2520
	void OnAcceptEULA(bool Update); // Function Phoenix.PhoenixGameInstance.OnAcceptEULA // (Final|Native|Public|BlueprintCallable) // @ game+0x33e2490
	void OnAboutToSaveGame(); // Function Phoenix.PhoenixGameInstance.OnAboutToSaveGame // (Final|Native|Public) // @ game+0x33e2470
	bool NewGame(bool bInIsIntro); // Function Phoenix.PhoenixGameInstance.NewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x33e23d0
	bool LoadGameOptions(); // Function Phoenix.PhoenixGameInstance.LoadGameOptions // (Final|Native|Public|BlueprintCallable) // @ game+0xe899c0
	bool LoadGame(struct FString SlotName, int32_t SlotIndex); // Function Phoenix.PhoenixGameInstance.LoadGame // (Final|Native|Public|BlueprintCallable) // @ game+0x33e2170
	void LevelShutdown(); // Function Phoenix.PhoenixGameInstance.LevelShutdown // (Final|Native|Public|BlueprintCallable) // @ game+0x33e2150
	void HoldPlayerUntilColliding(bool bFromHoverDrone); // Function Phoenix.PhoenixGameInstance.HoldPlayerUntilColliding // (Final|Native|Public|BlueprintCallable) // @ game+0x33e1ec0
	bool HasLoadSaveData(); // Function Phoenix.PhoenixGameInstance.HasLoadSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x33e1e90
	struct FRotator GetSaveRotation(); // Function Phoenix.PhoenixGameInstance.GetSaveRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1930
	struct FVector GetSavePosition(); // Function Phoenix.PhoenixGameInstance.GetSavePosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1900
	struct FString GetSaveGameWorld(); // Function Phoenix.PhoenixGameInstance.GetSaveGameWorld // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1840
	struct FVector GetSafePlayerPosition(); // Function Phoenix.PhoenixGameInstance.GetSafePlayerPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33e1800
	bool GetPlayingFromFrontend(); // Function Phoenix.PhoenixGameInstance.GetPlayingFromFrontend // (Final|Native|Public|BlueprintCallable) // @ game+0x33e1700
	bool GetPlayingFromDeveloperMenu(); // Function Phoenix.PhoenixGameInstance.GetPlayingFromDeveloperMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x33e16e0
	bool GetPlayingDeveloperOverland(); // Function Phoenix.PhoenixGameInstance.GetPlayingDeveloperOverland // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e16c0
	bool GetPlayingDemoBuild(); // Function Phoenix.PhoenixGameInstance.GetPlayingDemoBuild // (Final|Native|Public|BlueprintCallable) // @ game+0x33e16a0
	struct FVector GetPlayerPosition(); // Function Phoenix.PhoenixGameInstance.GetPlayerPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33e15e0
	struct APawn* GetPlayerPawn(); // Function Phoenix.PhoenixGameInstance.GetPlayerPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x33e15b0
	struct FRotator GetPlayerOrientation(); // Function Phoenix.PhoenixGameInstance.GetPlayerOrientation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33e1570
	struct UPhoenixGameInstance* GetPhoenixGameInstancePure(); // Function Phoenix.PhoenixGameInstance.GetPhoenixGameInstancePure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e14f0
	struct UPhoenixGameInstance* GetPhoenixGameInstance(); // Function Phoenix.PhoenixGameInstance.GetPhoenixGameInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e14c0
	struct FString GetCurrentWorldName(); // Function Phoenix.PhoenixGameInstance.GetCurrentWorldName // (Final|Native|Public|BlueprintCallable) // @ game+0x33e0830
	enum class ELoadingScreenLocation GetCurrentLoadingScreenLocation(); // Function Phoenix.PhoenixGameInstance.GetCurrentLoadingScreenLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x33e0810
	void GameSaveHorcrux(struct FString SaveLabel); // Function Phoenix.PhoenixGameInstance.GameSaveHorcrux // (Final|Exec|Native|Public) // @ game+0x33e04b0
	void GameLoadImportedHorcruxToNewCharacter(int32_t DestCharacterID); // Function Phoenix.PhoenixGameInstance.GameLoadImportedHorcruxToNewCharacter // (Final|Exec|Native|Public) // @ game+0x33e0420
	void GameLoadImportedHorcrux(); // Function Phoenix.PhoenixGameInstance.GameLoadImportedHorcrux // (Final|Exec|Native|Public) // @ game+0x33e0400
	void GameLoadHorcruxToNewCharacter(struct FString SaveLabel, int32_t DestCharacterID); // Function Phoenix.PhoenixGameInstance.GameLoadHorcruxToNewCharacter // (Final|Exec|Native|Public) // @ game+0x33e02d0
	void GameLoadHorcrux(struct FString SaveLabel); // Function Phoenix.PhoenixGameInstance.GameLoadHorcrux // (Final|Exec|Native|Public) // @ game+0x33e01e0
	void GameLoadCloudSave(struct FString SlotName, bool bNewCharacter, int32_t DestCharacterID); // Function Phoenix.PhoenixGameInstance.GameLoadCloudSave // (Final|Exec|Native|Public) // @ game+0x33e0060
	void ForceSeasonUpdate(enum class ESeasonEnum NewSeason); // Function Phoenix.PhoenixGameInstance.ForceSeasonUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfdc0
	void FadeReset(); // Function Phoenix.PhoenixGameInstance.FadeReset // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfd80
	void FadeOutToColor(struct FColor inFadeColor); // Function Phoenix.PhoenixGameInstance.FadeOutToColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33dfd00
	void FadeOut(); // Function Phoenix.PhoenixGameInstance.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfce0
	void FadeIn(); // Function Phoenix.PhoenixGameInstance.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfcc0
	struct ULevel* DetectLevelBelowCamera(struct UObject* WorldContextObject); // Function Phoenix.PhoenixGameInstance.DetectLevelBelowCamera // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33dfb00
	bool ContinueGame(); // Function Phoenix.PhoenixGameInstance.ContinueGame // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfa10
	void ClearPlayerHold(); // Function Phoenix.PhoenixGameInstance.ClearPlayerHold // (Final|Native|Public|BlueprintCallable) // @ game+0x33df9f0
	void ClearChallengeSpawnLocationFlag(); // Function Phoenix.PhoenixGameInstance.ClearChallengeSpawnLocationFlag // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33df930
	bool AutoSaveGameData(enum class EAutoSaveReason Type); // Function Phoenix.PhoenixGameInstance.AutoSaveGameData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33df850
};

// Class Phoenix.PhoenixGameMode
// Size: 0x380 (Inherited: 0x350)
struct APhoenixGameMode : AAble_GameMode {
	struct FMulticastInlineDelegate OnAsyncLoadAssetListComplete; // 0x350(0x10)
	char pad_360[0x8]; // 0x360(0x08)
	struct APlayerStart* ProgrammaticPlayerStart; // 0x368(0x08)
	struct TArray<struct AActor*> InterestPointActors; // 0x370(0x10)

	void YeeTest(); // Function Phoenix.PhoenixGameMode.YeeTest // (Final|Exec|Native|Public) // @ game+0x1074730
	void VCGetContents(struct FString ContainerID); // Function Phoenix.PhoenixGameMode.VCGetContents // (Final|Exec|Native|Public) // @ game+0x33e6500
	void UnregisterInterestPointActor(struct FString ActorName); // Function Phoenix.PhoenixGameMode.UnregisterInterestPointActor // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void SetProgrammaticPlayerStartInfo(struct FVector& InLocation, struct FRotator& InRotation, bool bForceUse); // Function Phoenix.PhoenixGameMode.SetProgrammaticPlayerStartInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33e4dd0
	void SetLocale(struct FString LocaleString); // Function Phoenix.PhoenixGameMode.SetLocale // (Final|Exec|Native|Public) // @ game+0x31cc3a0
	void RemoveInstancedStaticMeshCollision(struct UInstancedStaticMeshComponent* InstancedMeshComponent, int32_t InstanceIndex); // Function Phoenix.PhoenixGameMode.RemoveInstancedStaticMeshCollision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e3000
	void RegisterInterestPointActor(struct FString InActorName, float InSpawnX, float InSpawnY, float InSpawnZ, bool bSpawnNewActor); // Function Phoenix.PhoenixGameMode.RegisterInterestPointActor // (Final|Exec|Native|Public) // @ game+0x33e2e10
	bool PlayerStartedAtProgrammaticLocation(); // Function Phoenix.PhoenixGameMode.PlayerStartedAtProgrammaticLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e2df0
	void OpenLevelByReference(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld> Level, bool bAbsolute, struct FString OPTIONS); // Function Phoenix.PhoenixGameMode.OpenLevelByReference // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e26e0
	void LootDrop(struct FString LootCategoryID, int32_t Level); // Function Phoenix.PhoenixGameMode.LootDrop // (Final|Exec|Native|Public) // @ game+0x33e22a0
	struct ULevelStreaming* GetStreamingLevelAva(struct UObject* WorldContextObject, struct FName PackageName); // Function Phoenix.PhoenixGameMode.GetStreamingLevelAva // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1c70
	struct FString GetPlayerStartTag(); // Function Phoenix.PhoenixGameMode.GetPlayerStartTag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1620
	struct APhoenixGameMode* GetPhoenixGameMode(); // Function Phoenix.PhoenixGameMode.GetPhoenixGameMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e1510
	struct FString GetOptions(); // Function Phoenix.PhoenixGameMode.GetOptions // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1360
	void GameStartMission(); // Function Phoenix.PhoenixGameMode.GameStartMission // (Final|Exec|Native|Public) // @ game+0x33e05a0
	void GameFinishMission(); // Function Phoenix.PhoenixGameMode.GameFinishMission // (Final|Exec|Native|Public) // @ game+0x33e0040
	void GameDBImport(struct FString ImportFilename); // Function Phoenix.PhoenixGameMode.GameDBImport // (Final|Exec|Native|Public) // @ game+0x33dff50
	void GameDBExport(struct FString ExportFilename); // Function Phoenix.PhoenixGameMode.GameDBExport // (Final|Exec|Native|Public) // @ game+0x33dfe60
	void GameAbortMission(); // Function Phoenix.PhoenixGameMode.GameAbortMission // (Final|Exec|Native|Public) // @ game+0x33dfe40
	void Dbg_ShowHUD(); // Function Phoenix.PhoenixGameMode.Dbg_ShowHUD // (Final|Exec|Native|Public) // @ game+0x33dfae0
	void Dbg_HideHUD(); // Function Phoenix.PhoenixGameMode.Dbg_HideHUD // (Final|Exec|Native|Public) // @ game+0x33dfac0
	void ClearForceUseProgrammaticPlayerStart(); // Function Phoenix.PhoenixGameMode.ClearForceUseProgrammaticPlayerStart // (Final|Native|Public|BlueprintCallable) // @ game+0x33df950
	void AsyncLoadAssetList(struct UObject* WorldContextObject, struct TArray<struct TSoftObjectPtr<UObject>>& AssetsToStream, int32_t& UniqueId); // Function Phoenix.PhoenixGameMode.AsyncLoadAssetList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33df660
};

// Class Phoenix.PhoenixGameSettings
// Size: 0x438 (Inherited: 0x138)
struct UPhoenixGameSettings : UGameUserSettings {
	char pad_138[0x4]; // 0x138(0x04)
	float EffectsSoundVolume; // 0x13c(0x04)
	float MusicSoundVolume; // 0x140(0x04)
	float VoiceSoundVolume; // 0x144(0x04)
	bool SoundMuted; // 0x148(0x01)
	bool MonoAudio; // 0x149(0x01)
	char pad_14A[0x2]; // 0x14a(0x02)
	float DynamicRange; // 0x14c(0x04)
	struct FString MasteringSuite; // 0x150(0x10)
	bool bEnableRaytracingShadows; // 0x160(0x01)
	bool bEnableRaytracingReflections; // 0x161(0x01)
	bool bEnableRaytracingAO; // 0x162(0x01)
	char pad_163[0x5]; // 0x163(0x05)
	struct FString PerformanceMode; // 0x168(0x10)
	char pad_178[0x1]; // 0x178(0x01)
	bool bFrameRateUncapped; // 0x179(0x01)
	char pad_17A[0x36]; // 0x17a(0x36)
	struct FPhoenixCameraSettingsData CameraSettings; // 0x1b0(0x88)
	bool MenuReaderEnabled; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct FString MenuReaderVoiceID; // 0x240(0x10)
	struct FString MenuReaderVoiceDescription; // 0x250(0x10)
	struct FString MenuReaderVoiceGender; // 0x260(0x10)
	float MenuReaderVolume; // 0x270(0x04)
	enum class EColorVisionDeficiency ColorVisionDeficiencyType; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	float CursorSpeedMultiplier; // 0x278(0x04)
	int32_t MiniMapSize; // 0x27c(0x04)
	float MiniMapOpacity; // 0x280(0x04)
	bool PathLineEnabled; // 0x284(0x01)
	char pad_285[0x3]; // 0x285(0x03)
	float AccessibilityAudioCueOpacity; // 0x288(0x04)
	float AccessibilityAudioCueScale; // 0x28c(0x04)
	bool UseMinimalHud; // 0x290(0x01)
	bool ShowTargetHighlights; // 0x291(0x01)
	bool ShowTargetName; // 0x292(0x01)
	bool ShowHudBeacons; // 0x293(0x01)
	bool ShowNotificationElements; // 0x294(0x01)
	bool ShowXPElements; // 0x295(0x01)
	bool ShowMissionElements; // 0x296(0x01)
	bool ShowSpellElements; // 0x297(0x01)
	bool ShowMeterElements; // 0x298(0x01)
	bool ShowMapElements; // 0x299(0x01)
	bool ShowTargetElements; // 0x29a(0x01)
	bool ShowSpecialNotificationElements; // 0x29b(0x01)
	bool ShowTutorialElements; // 0x29c(0x01)
	bool ShowToolWheelElements; // 0x29d(0x01)
	bool ShowEnemyDamageElements; // 0x29e(0x01)
	bool ShowBeastControls; // 0x29f(0x01)
	int32_t FontSizeOffset; // 0x2a0(0x04)
	int32_t FontIndex; // 0x2a4(0x04)
	int32_t HighContrastMode; // 0x2a8(0x04)
	bool AudioVisualizer; // 0x2ac(0x01)
	bool bEnableKeyboardSprintWalkToggle; // 0x2ad(0x01)
	bool bAccessibilitySpellToggle; // 0x2ae(0x01)
	bool SubtitlesEnabled; // 0x2af(0x01)
	bool ControllerRumble; // 0x2b0(0x01)
	bool RGBPeripheralsEnabled; // 0x2b1(0x01)
	bool AlwaysUseCameraAiming; // 0x2b2(0x01)
	char pad_2B3[0x5]; // 0x2b3(0x05)
	struct FString INILanguageSetting; // 0x2b8(0x10)
	struct FString SwitchTextLanguageSetting; // 0x2c8(0x10)
	bool TiltControls; // 0x2d8(0x01)
	char pad_2D9[0x3]; // 0x2d9(0x03)
	float TiltSensitivity; // 0x2dc(0x04)
	bool bIsUpscaleModeModified; // 0x2e0(0x01)
	enum class EUpscaleMode UpscaleMode; // 0x2e1(0x01)
	char pad_2E2[0x2]; // 0x2e2(0x02)
	float UpscaleSoftness; // 0x2e4(0x04)
	char pad_2E8[0x10]; // 0x2e8(0x10)
	enum class EAntiAliasingMode AntiAliasingMode; // 0x2f8(0x01)
	enum class EAntiAliasingMode DefaultAntiAliasingMode; // 0x2f9(0x01)
	char pad_2FA[0x1]; // 0x2fa(0x01)
	enum class ENvidiaLatencyMode NvidiaLatencyMode; // 0x2fb(0x01)
	bool NvidiaFrameGeneration; // 0x2fc(0x01)
	char pad_2FD[0x3]; // 0x2fd(0x03)
	float Brightness; // 0x300(0x04)
	float MinToneMapLuminance; // 0x304(0x04)
	float MidToneMapLuminance; // 0x308(0x04)
	float MaxToneMapLuminance; // 0x30c(0x04)
	float UIBrightness; // 0x310(0x04)
	bool bAutomaticHDRCalibration; // 0x314(0x01)
	char pad_315[0x3]; // 0x315(0x03)
	int32_t MonitorIdx; // 0x318(0x04)
	bool bHardwareBenchmarkApplied; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	int32_t GPUConfigPreset; // 0x320(0x04)
	int32_t RecViewDistanceQuality; // 0x324(0x04)
	int32_t RecAntiAliasingQuality; // 0x328(0x04)
	int32_t RecShadowQuality; // 0x32c(0x04)
	int32_t RecPostProcessQuality; // 0x330(0x04)
	int32_t RecTextureQuality; // 0x334(0x04)
	int32_t RecEffectsQuality; // 0x338(0x04)
	int32_t RecFoliageQuality; // 0x33c(0x04)
	int32_t RecShadingQuality; // 0x340(0x04)
	int32_t RecFogQuality; // 0x344(0x04)
	int32_t RecSkyQuality; // 0x348(0x04)
	int32_t RecPopulationQuality; // 0x34c(0x04)
	int32_t RecRaytracingQuality; // 0x350(0x04)
	bool bAltTooltipsEnabled; // 0x354(0x01)
	bool bPauseOnFocusLoss; // 0x355(0x01)
	char pad_356[0x2]; // 0x356(0x02)
	float FrameRateLimitMinimized; // 0x358(0x04)
	uint32_t SubVersion; // 0x35c(0x04)
	char pad_360[0x18]; // 0x360(0x18)
	struct FMulticastInlineDelegate PerformanceModeChangedDelegate; // 0x378(0x10)
	struct FMulticastInlineDelegate AutoTargetCameraFocusChangedDelegate; // 0x388(0x10)
	char pad_398[0xa0]; // 0x398(0xa0)

	void TriggerAutoReboot(); // Function Phoenix.PhoenixGameSettings.TriggerAutoReboot // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x33e63c0
	bool TestHighContrastMode(enum class EHighContrastMode inContrastMode); // Function Phoenix.PhoenixGameSettings.TestHighContrastMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e6330
	struct UPopupScreen* ShowRaytracingRebootPopup(); // Function Phoenix.PhoenixGameSettings.ShowRaytracingRebootPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x33e6270
	bool ShouldShowRGBPeripheralsButton(); // Function Phoenix.PhoenixGameSettings.ShouldShowRGBPeripheralsButton // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e6240
	bool ShouldControllerRumble(); // Function Phoenix.PhoenixGameSettings.ShouldControllerRumble // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e6210
	void SetVoiceSoundVolume(float NewVal); // Function Phoenix.PhoenixGameSettings.SetVoiceSoundVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33e6190
	void SetUseMinimalHud(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetUseMinimalHud // (Final|Native|Public|BlueprintCallable) // @ game+0x33e6100
	void SetUpscaleSoftness(float NewSharpness); // Function Phoenix.PhoenixGameSettings.SetUpscaleSoftness // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3a20
	void SetUpscaleMode(enum class EUpscaleMode UpscaleModeInput); // Function Phoenix.PhoenixGameSettings.SetUpscaleMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e6080
	void SetUncapFrameRate(bool InUncapFrameRate); // Function Phoenix.PhoenixGameSettings.SetUncapFrameRate // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5ff0
	void SetTiltSensitivity(float NewVal); // Function Phoenix.PhoenixGameSettings.SetTiltSensitivity // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5f70
	void SetTiltControls(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetTiltControls // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5ee0
	void SetSwitchTextLanguage(struct FString Lang); // Function Phoenix.PhoenixGameSettings.SetSwitchTextLanguage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e5e00
	void SetSubtitlesEnabled(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetSubtitlesEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5d70
	void SetSoundMuted(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetSoundMuted // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5ce0
	void SetSkyQuality(int32_t Value); // Function Phoenix.PhoenixGameSettings.SetSkyQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5c50
	void SetShowXPElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowXPElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5bc0
	void SetShowTutorialElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowTutorialElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5b30
	void SetShowToolWheelElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowToolWheelElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5aa0
	void SetShowTargetName(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowTargetName // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5a10
	void SetShowTargetHighlights(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowTargetHighlights // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5980
	void SetShowTargetElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowTargetElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e58f0
	void SetShowSpellElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowSpellElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5860
	void SetShowSpecialNotificationElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowSpecialNotificationElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e57d0
	void SetShowNotificationElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowNotificationElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5740
	void SetShowMissionElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowMissionElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e56b0
	void SetShowMeterElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowMeterElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5620
	void SetShowMapElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowMapElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5590
	void SetShowHudBeacons(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowHudBeacons // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5500
	void SetShowEnemyDamageElements(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowEnemyDamageElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5470
	void SetShowBeastControls(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetShowBeastControls // (Final|Native|Public|BlueprintCallable) // @ game+0x33e53e0
	bool SetSelectedMonitor(int32_t SelectedMonitorIdx, bool bForceFullscreen); // Function Phoenix.PhoenixGameSettings.SetSelectedMonitor // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5310
	void SetSelectedGPU(struct FGraphicsAdapterDesc& GpuDesc); // Function Phoenix.PhoenixGameSettings.SetSelectedGPU // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33e5260
	void SetRGBPeripheralsEnabled(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetRGBPeripheralsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4f00
	void SetRaytracingSupported(bool bShouldSupport); // Function Phoenix.PhoenixGameSettings.SetRaytracingSupported // (Native|Public|BlueprintCallable|Const) // @ game+0x33e5140
	void SetRaytracingShadows(bool bInEnableRaytracingShadows); // Function Phoenix.PhoenixGameSettings.SetRaytracingShadows // (Final|Native|Public|BlueprintCallable) // @ game+0x3344bc0
	void SetRaytracingReflections(bool bInEnableRaytracingReflections); // Function Phoenix.PhoenixGameSettings.SetRaytracingReflections // (Final|Native|Public|BlueprintCallable) // @ game+0x33e50b0
	void SetRaytracingQuality(int32_t Value); // Function Phoenix.PhoenixGameSettings.SetRaytracingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x33e5020
	void SetRaytracingAmbientOcclusion(bool bInEnableRaytracingAO); // Function Phoenix.PhoenixGameSettings.SetRaytracingAmbientOcclusion // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4f90
	void SetPopulationQuality(int32_t Value); // Function Phoenix.PhoenixGameSettings.SetPopulationQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4d40
	void SetPerformanceMode(struct FString InPerformanceMode); // Function Phoenix.PhoenixGameSettings.SetPerformanceMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4af0
	void SetPauseOnFocusLoss(bool bEnable); // Function Phoenix.PhoenixGameSettings.SetPauseOnFocusLoss // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4a60
	void SetNvidiaLatencyMode(enum class ENvidiaLatencyMode InMode); // Function Phoenix.PhoenixGameSettings.SetNvidiaLatencyMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e49e0
	void SetNvidiaFrameGeneration(bool bEnabled); // Function Phoenix.PhoenixGameSettings.SetNvidiaFrameGeneration // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4950
	void SetMusicSoundVolume(float NewVal); // Function Phoenix.PhoenixGameSettings.SetMusicSoundVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33e48d0
	void SetMonoAudio(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetMonoAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4840
	void SetMiniMapSize(int32_t Size); // Function Phoenix.PhoenixGameSettings.SetMiniMapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x33e47b0
	void SetMiniMapPathEnabled(bool Enabled); // Function Phoenix.PhoenixGameSettings.SetMiniMapPathEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4720
	void SetMiniMapOpacity(float Opacity); // Function Phoenix.PhoenixGameSettings.SetMiniMapOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x33e46a0
	void SetMenuReaderVolume(float InVolume); // Function Phoenix.PhoenixGameSettings.SetMenuReaderVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4620
	void SetMenuReaderVoice(struct FString InVoiceID, struct FString InDescription, struct FString InGender); // Function Phoenix.PhoenixGameSettings.SetMenuReaderVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4410
	void SetMenuReaderEnabled(bool Enabled); // Function Phoenix.PhoenixGameSettings.SetMenuReaderEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x330e320
	void SetMasteringSuite(struct FString NewVal); // Function Phoenix.PhoenixGameSettings.SetMasteringSuite // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4320
	void SetINILanguageSetting(struct FString NewVal); // Function Phoenix.PhoenixGameSettings.SetINILanguageSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4180
	void SetIgnoreConfirmVideoMode(bool bIgnore); // Function Phoenix.PhoenixGameSettings.SetIgnoreConfirmVideoMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4290
	void SetHighContrastModeBits(int32_t inContrastMode); // Function Phoenix.PhoenixGameSettings.SetHighContrastModeBits // (Final|Native|Public|BlueprintCallable) // @ game+0x33e40f0
	void SetHighContrastMode(enum class EHighContrastMode inContrastMode); // Function Phoenix.PhoenixGameSettings.SetHighContrastMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4070
	void SetHideNonCinematicElements(bool bHide, struct UObject* InInstigator); // Function Phoenix.PhoenixGameSettings.SetHideNonCinematicElements // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3fa0
	bool SetHDRToneMapParameters(bool bAutomatic, float MinToneMapLuminance, float MidToneMapLuminance, float MaxToneMapLuminance, float UIBrightness); // Function Phoenix.PhoenixGameSettings.SetHDRToneMapParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3de0
	void SetFontSizeOffset(int32_t NewVal); // Function Phoenix.PhoenixGameSettings.SetFontSizeOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3d50
	void SetFontIndex(int32_t NewVal); // Function Phoenix.PhoenixGameSettings.SetFontIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3cc0
	void SetFogQuality(int32_t Value); // Function Phoenix.PhoenixGameSettings.SetFogQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3c30
	void SetEnableKeyboardSprintWalkToggle(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetEnableKeyboardSprintWalkToggle // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3ba0
	void SetEffectSoundVolume(float NewVal); // Function Phoenix.PhoenixGameSettings.SetEffectSoundVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3b20
	void SetDynamicRange(float NewVal); // Function Phoenix.PhoenixGameSettings.SetDynamicRange // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3aa0
	void SetDLSSSharpness(float NewSharpness); // Function Phoenix.PhoenixGameSettings.SetDLSSSharpness // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3a20
	void SetCursorSpeedMultiplier(float NewVal); // Function Phoenix.PhoenixGameSettings.SetCursorSpeedMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x33e39a0
	void SetControllerRumble(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetControllerRumble // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3760
	void SetColorVisionDeficiencyType(enum class EColorVisionDeficiency NewVal); // Function Phoenix.PhoenixGameSettings.SetColorVisionDeficiencyType // (Final|Native|Public|BlueprintCallable) // @ game+0x33e36e0
	void SetBrightness(float NewBrightness); // Function Phoenix.PhoenixGameSettings.SetBrightness // (Final|Native|Public|BlueprintCallable) // @ game+0x33e35e0
	void SetAudioVisualizer(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetAudioVisualizer // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3550
	void SetAntiAliasMode(enum class EAntiAliasingMode Mode); // Function Phoenix.PhoenixGameSettings.SetAntiAliasMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33e34d0
	void SetAlwaysUseCameraAiming(bool NewVal); // Function Phoenix.PhoenixGameSettings.SetAlwaysUseCameraAiming // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3440
	void SetAltTooltipsEnabled(bool bEnable); // Function Phoenix.PhoenixGameSettings.SetAltTooltipsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33e33b0
	void SetAccessibilitySpellToggle(bool ToggleOn); // Function Phoenix.PhoenixGameSettings.SetAccessibilitySpellToggle // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3320
	void SetAccessibilityAudioCueScale(float Scale); // Function Phoenix.PhoenixGameSettings.SetAccessibilityAudioCueScale // (Final|Native|Public|BlueprintCallable) // @ game+0x33e32a0
	void SetAccessibilityAudioCueOpacity(float Opacity); // Function Phoenix.PhoenixGameSettings.SetAccessibilityAudioCueOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3220
	void ResetUISettings(); // Function Phoenix.PhoenixGameSettings.ResetUISettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3200
	void ResetHDRCalibrationSettings(); // Function Phoenix.PhoenixGameSettings.ResetHDRCalibrationSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e31c0
	void ResetHardwareBenchmark(); // Function Phoenix.PhoenixGameSettings.ResetHardwareBenchmark // (Final|Native|Public|BlueprintCallable) // @ game+0x33e31e0
	void ResetGraphicsSettings(); // Function Phoenix.PhoenixGameSettings.ResetGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e31a0
	void ResetGameplaySettings(); // Function Phoenix.PhoenixGameSettings.ResetGameplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3180
	void ResetDisplaySettings(); // Function Phoenix.PhoenixGameSettings.ResetDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3160
	void ResetConsoleDisplaySettings(); // Function Phoenix.PhoenixGameSettings.ResetConsoleDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3140
	void ResetBrightnessSetting(); // Function Phoenix.PhoenixGameSettings.ResetBrightnessSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3120
	void ResetAudioSettings(); // Function Phoenix.PhoenixGameSettings.ResetAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e3100
	void ResetAccessibilitySettings(); // Function Phoenix.PhoenixGameSettings.ResetAccessibilitySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33e30e0
	void RequestTooltipsUpdate(); // Function Phoenix.PhoenixGameSettings.RequestTooltipsUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x33e30c0
	bool PerformanceModeChangeRequiresReboot(struct FString NewPerformanceMode); // Function Phoenix.PhoenixGameSettings.PerformanceModeChangeRequiresReboot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e2900
	void OnRaytracingRebootPopupButtonPressed(struct UPopupScreen* PopupScreen, int32_t CompletionActionIndex); // Function Phoenix.PhoenixGameSettings.OnRaytracingRebootPopupButtonPressed // (Final|Native|Private) // @ game+0x33e25f0
	bool IsUncapFrameRateSupported(); // Function Phoenix.PhoenixGameSettings.IsUncapFrameRateSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e2120
	bool IsPerformanceModeSwitchingAvailable(); // Function Phoenix.PhoenixGameSettings.IsPerformanceModeSwitchingAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e20f0
	bool IsNvidiaLatencySupported(); // Function Phoenix.PhoenixGameSettings.IsNvidiaLatencySupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e20c0
	bool IsNvidiaFrameGenerationSupported(); // Function Phoenix.PhoenixGameSettings.IsNvidiaFrameGenerationSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e2090
	bool IsNvidiaFrameGenerationLatencyModeCurrentlySupported(enum class ENvidiaLatencyMode InMode); // Function Phoenix.PhoenixGameSettings.IsNvidiaFrameGenerationLatencyModeCurrentlySupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e2000
	bool IsInRaytracingPerformanceMode(); // Function Phoenix.PhoenixGameSettings.IsInRaytracingPerformanceMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1fd0
	bool IsHDTextureInstallationAllowed(); // Function Phoenix.PhoenixGameSettings.IsHDTextureInstallationAllowed // (Final|Native|Public|BlueprintCallable) // @ game+0x33e1f80
	bool IsHardwareBenchmarkApplied(); // Function Phoenix.PhoenixGameSettings.IsHardwareBenchmarkApplied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1fb0
	bool IsFidelityFXCasEnabled(); // Function Phoenix.PhoenixGameSettings.IsFidelityFXCasEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aa190
	bool IsDLSSEnabled(); // Function Phoenix.PhoenixGameSettings.IsDLSSEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1f50
	bool HasHardwareBenchmark(); // Function Phoenix.PhoenixGameSettings.HasHardwareBenchmark // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1e60
	void HandleFrameRateCapOnPerformanceModeChanged(); // Function Phoenix.PhoenixGameSettings.HandleFrameRateCapOnPerformanceModeChanged // (Final|Native|Private) // @ game+0x33e1e40
	float GetVoiceSoundVolume(); // Function Phoenix.PhoenixGameSettings.GetVoiceSoundVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1e20
	bool GetUseMinimalHud(); // Function Phoenix.PhoenixGameSettings.GetUseMinimalHud // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1e00
	float GetUpscaleSoftness(); // Function Phoenix.PhoenixGameSettings.GetUpscaleSoftness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e08b0
	enum class EUpscaleMode GetUpscaleMode(); // Function Phoenix.PhoenixGameSettings.GetUpscaleMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1de0
	float GetTiltSensitivity(); // Function Phoenix.PhoenixGameSettings.GetTiltSensitivity // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3252b10
	bool GetTiltControls(); // Function Phoenix.PhoenixGameSettings.GetTiltControls // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3344ef0
	struct FString GetSwitchTextLanguage(); // Function Phoenix.PhoenixGameSettings.GetSwitchTextLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1d60
	bool GetSubtitlesEnabled(); // Function Phoenix.PhoenixGameSettings.GetSubtitlesEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1d40
	int32_t GetSteamDeckV1_GPUDeviceID(); // Function Phoenix.PhoenixGameSettings.GetSteamDeckV1_GPUDeviceID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e1c50
	bool GetSoundMuted(); // Function Phoenix.PhoenixGameSettings.GetSoundMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1c30
	int32_t GetSkyQuality(); // Function Phoenix.PhoenixGameSettings.GetSkyQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1c00
	bool GetShowXPElements(); // Function Phoenix.PhoenixGameSettings.GetShowXPElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1be0
	bool GetShowTutorialElements(); // Function Phoenix.PhoenixGameSettings.GetShowTutorialElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1bc0
	bool GetShowToolWheelElements(); // Function Phoenix.PhoenixGameSettings.GetShowToolWheelElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1ba0
	bool GetShowTargetName(); // Function Phoenix.PhoenixGameSettings.GetShowTargetName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1b80
	bool GetShowTargetHighlights(); // Function Phoenix.PhoenixGameSettings.GetShowTargetHighlights // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1b60
	bool GetShowTargetElements(); // Function Phoenix.PhoenixGameSettings.GetShowTargetElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1b40
	bool GetShowSpellElements(); // Function Phoenix.PhoenixGameSettings.GetShowSpellElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1b20
	bool GetShowSpecialNotificationElements(); // Function Phoenix.PhoenixGameSettings.GetShowSpecialNotificationElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1b00
	bool GetShowNotificationElements(); // Function Phoenix.PhoenixGameSettings.GetShowNotificationElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1ae0
	bool GetShowMissionElements(); // Function Phoenix.PhoenixGameSettings.GetShowMissionElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1ac0
	bool GetShowMeterElements(); // Function Phoenix.PhoenixGameSettings.GetShowMeterElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3286450
	bool GetShowMapElements(); // Function Phoenix.PhoenixGameSettings.GetShowMapElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1aa0
	bool GetShowHudBeacons(); // Function Phoenix.PhoenixGameSettings.GetShowHudBeacons // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1a80
	bool GetShowEnemyDamageElements(); // Function Phoenix.PhoenixGameSettings.GetShowEnemyDamageElements // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1a60
	bool GetShowBeastControls(); // Function Phoenix.PhoenixGameSettings.GetShowBeastControls // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1a40
	int32_t GetSelectedMonitor(); // Function Phoenix.PhoenixGameSettings.GetSelectedMonitor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1a20
	bool GetSelectedGPU(struct FGraphicsAdapterDesc& OutGpuDesc); // Function Phoenix.PhoenixGameSettings.GetSelectedGPU // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1960
	bool GetRGBPeripheralsEnabled(); // Function Phoenix.PhoenixGameSettings.GetRGBPeripheralsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1750
	bool GetRaytracingShadows(); // Function Phoenix.PhoenixGameSettings.GetRaytracingShadows // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e17e0
	bool GetRaytracingReflections(); // Function Phoenix.PhoenixGameSettings.GetRaytracingReflections // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e17c0
	int32_t GetRaytracingQuality(); // Function Phoenix.PhoenixGameSettings.GetRaytracingQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1790
	bool GetRaytracingAmbientOcclusion(); // Function Phoenix.PhoenixGameSettings.GetRaytracingAmbientOcclusion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1770
	int32_t GetPopulationQuality(); // Function Phoenix.PhoenixGameSettings.GetPopulationQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1720
	struct UPhoenixGameSettings* GetPhoenixGameSettings(); // Function Phoenix.PhoenixGameSettings.GetPhoenixGameSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33e1540
	struct FString GetPerformanceMode(); // Function Phoenix.PhoenixGameSettings.GetPerformanceMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1400
	bool GetPauseOnFocusLoss(); // Function Phoenix.PhoenixGameSettings.GetPauseOnFocusLoss // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e13e0
	struct TArray<struct FNvidiaLatencyModeInfo> GetNvidiaLatencyPermittedModes(); // Function Phoenix.PhoenixGameSettings.GetNvidiaLatencyPermittedModes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1280
	enum class ENvidiaLatencyMode GetNvidiaLatencyMode(bool bDoCheck); // Function Phoenix.PhoenixGameSettings.GetNvidiaLatencyMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e11e0
	bool GetNvidiaFrameGeneration(bool bDoCheck); // Function Phoenix.PhoenixGameSettings.GetNvidiaFrameGeneration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1140
	struct FIntPoint GetNativeResolutionOfCurrentMonitor(int32_t OverrideMonitorIdx); // Function Phoenix.PhoenixGameSettings.GetNativeResolutionOfCurrentMonitor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e10b0
	float GetMusicSoundVolume(); // Function Phoenix.PhoenixGameSettings.GetMusicSoundVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1090
	bool GetMonoAudio(); // Function Phoenix.PhoenixGameSettings.GetMonoAudio // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1070
	int32_t GetMiniMapSize(); // Function Phoenix.PhoenixGameSettings.GetMiniMapSize // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1373e60
	bool GetMiniMapPathEnabled(); // Function Phoenix.PhoenixGameSettings.GetMiniMapPathEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e1050
	float GetMiniMapOpacity(); // Function Phoenix.PhoenixGameSettings.GetMiniMapOpacity // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3344f40
	float GetMenuReaderVolume(); // Function Phoenix.PhoenixGameSettings.GetMenuReaderVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1373f10
	void GetMenuReaderVoice(struct FString& OutVoiceID, struct FString& OutDescription, struct FString& OutGender); // Function Phoenix.PhoenixGameSettings.GetMenuReaderVoice // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0ed0
	bool GetMenuReaderEnabled(); // Function Phoenix.PhoenixGameSettings.GetMenuReaderEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0eb0
	struct FString GetMasteringSuite(); // Function Phoenix.PhoenixGameSettings.GetMasteringSuite // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0df0
	struct FString GetINILanguageSetting(); // Function Phoenix.PhoenixGameSettings.GetINILanguageSetting // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0d30
	int32_t GetHighContrastMode(); // Function Phoenix.PhoenixGameSettings.GetHighContrastMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0d10
	void GetHDRToneMapParameters(float& OutMinToneMapLuminance, float& OutMidToneMapLuminance, float& OutMaxToneMapLuminance, float& UIBrightness); // Function Phoenix.PhoenixGameSettings.GetHDRToneMapParameters // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0b70
	void GetGPUDeviceIDandRev(int32_t& OutDeviceID, int32_t& OutDeviceRevision); // Function Phoenix.PhoenixGameSettings.GetGPUDeviceIDandRev // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33e0a90
	bool GetFrameRateUncapped(); // Function Phoenix.PhoenixGameSettings.GetFrameRateUncapped // (Final|Native|Public|BlueprintCallable) // @ game+0x33e0a70
	int32_t GetFontSizeOffset(); // Function Phoenix.PhoenixGameSettings.GetFontSizeOffset // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0a40
	int32_t GetFontIndex(); // Function Phoenix.PhoenixGameSettings.GetFontIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0a10
	int32_t GetFogQuality(); // Function Phoenix.PhoenixGameSettings.GetFogQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e09e0
	bool GetEnableKeyboardSprintWalkToggle(); // Function Phoenix.PhoenixGameSettings.GetEnableKeyboardSprintWalkToggle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e09c0
	float GetEffectsSoundVolume(); // Function Phoenix.PhoenixGameSettings.GetEffectsSoundVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e09a0
	float GetDynamicRange(); // Function Phoenix.PhoenixGameSettings.GetDynamicRange // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0980
	float GetDLSSSharpness(); // Function Phoenix.PhoenixGameSettings.GetDLSSSharpness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e08b0
	void GetDifficultyGamePreset(enum class EDifficulty& Difficulty); // Function Phoenix.PhoenixGameSettings.GetDifficultyGamePreset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33e08f0
	enum class EAntiAliasingMode GetDefaultAntiAliasMode(); // Function Phoenix.PhoenixGameSettings.GetDefaultAntiAliasMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e08d0
	float GetCursorSpeedMultiplier(); // Function Phoenix.PhoenixGameSettings.GetCursorSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3345110
	bool GetControllerRumble(); // Function Phoenix.PhoenixGameSettings.GetControllerRumble // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e07f0
	enum class EColorVisionDeficiency GetColorVisionDeficiencyType(); // Function Phoenix.PhoenixGameSettings.GetColorVisionDeficiencyType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e07d0
	float GetBrightness(); // Function Phoenix.PhoenixGameSettings.GetBrightness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e07a0
	struct TArray<struct FString> GetAvailablePerformanceModesForBootFlow(); // Function Phoenix.PhoenixGameSettings.GetAvailablePerformanceModesForBootFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0720
	struct TArray<struct FString> GetAvailablePerformanceModes(); // Function Phoenix.PhoenixGameSettings.GetAvailablePerformanceModes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e06a0
	bool GetAudioVisualizer(); // Function Phoenix.PhoenixGameSettings.GetAudioVisualizer // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0680
	enum class EAntiAliasingMode GetAntiAliasMode(); // Function Phoenix.PhoenixGameSettings.GetAntiAliasMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0660
	bool GetAlwaysUseCameraAiming(); // Function Phoenix.PhoenixGameSettings.GetAlwaysUseCameraAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0640
	bool GetAltTooltipsEnabled(); // Function Phoenix.PhoenixGameSettings.GetAltTooltipsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e0620
	bool GetAccessibilitySpellToggle(); // Function Phoenix.PhoenixGameSettings.GetAccessibilitySpellToggle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e0600
	float GetAccessibilityAudioCueScale(); // Function Phoenix.PhoenixGameSettings.GetAccessibilityAudioCueScale // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e05e0
	float GetAccessibilityAudioCueOpacity(); // Function Phoenix.PhoenixGameSettings.GetAccessibilityAudioCueOpacity // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33e05c0
	void FinalizeMinimapSettings(); // Function Phoenix.PhoenixGameSettings.FinalizeMinimapSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfda0
	bool EqualEqual_GraphicsAdapterDesc(struct FGraphicsAdapterDesc& A, struct FGraphicsAdapterDesc& B); // Function Phoenix.PhoenixGameSettings.EqualEqual_GraphicsAdapterDesc // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x33dfb90
	void EnableFidelityFXCas(bool bShouldEnable); // Function Phoenix.PhoenixGameSettings.EnableFidelityFXCas // (Final|Native|Public|BlueprintCallable) // @ game+0x330f550
	struct FString CreatePerformanceModesOptionDesc(); // Function Phoenix.PhoenixGameSettings.CreatePerformanceModesOptionDesc // (Final|Native|Public|BlueprintCallable) // @ game+0x33dfa40
	void ClearHighContrastMode(enum class EHighContrastMode inContrastMode); // Function Phoenix.PhoenixGameSettings.ClearHighContrastMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33df970
	bool CanUncapFrameRate(); // Function Phoenix.PhoenixGameSettings.CanUncapFrameRate // (Final|Native|Public|BlueprintCallable) // @ game+0x33df900
	bool CanPerformAutoReboot(); // Function Phoenix.PhoenixGameSettings.CanPerformAutoReboot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33df8d0
	void AttemptToApplyPerformanceMode(bool IsGameBootup); // Function Phoenix.PhoenixGameSettings.AttemptToApplyPerformanceMode // (Final|Native|Public|BlueprintCallable) // @ game+0x33df7c0
	bool AreNonCinematicElementsHidden(); // Function Phoenix.PhoenixGameSettings.AreNonCinematicElementsHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33df640
	void ApplySettingsDetailed(bool bApplyResolutionSettings, bool bApplyNonResolutionSettings, bool bRequestUIUpdate, bool bSaveSettings, bool bCheckForCommandLineOverrides); // Function Phoenix.PhoenixGameSettings.ApplySettingsDetailed // (Final|Native|Public|BlueprintCallable) // @ game+0x33df460
	bool AllowOptionToSetAlwaysUseCameraAiming(); // Function Phoenix.PhoenixGameSettings.AllowOptionToSetAlwaysUseCameraAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0xe899c0
};

// Class Phoenix.SavedSettingsData
// Size: 0x38 (Inherited: 0x28)
struct USavedSettingsData : USaveGame {
	struct TArray<char> SettingsData; // 0x28(0x10)
};

// Class Phoenix.PhoenixGameViewportClient
// Size: 0x390 (Inherited: 0x360)
struct UPhoenixGameViewportClient : UGameViewportClient {
	char pad_360[0x30]; // 0x360(0x30)
};

// Class Phoenix.FXFilter_HighContrastGameplay
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_HighContrastGameplay : UFXFilter {
};

// Class Phoenix.FXFilter_StencilManagerEnabled
// Size: 0x30 (Inherited: 0x30)
struct UFXFilter_StencilManagerEnabled : UFXFilter {
};

// Class Phoenix.FXAdjustmentsKillFXAutoGroup
// Size: 0x38 (Inherited: 0x28)
struct UFXAdjustmentsKillFXAutoGroup : UFXAdjustments {
	struct FName Group; // 0x28(0x08)
	bool bImmediate; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.MultiFX2_HighContrastGameplayMarkup
// Size: 0x90 (Inherited: 0x68)
struct UMultiFX2_HighContrastGameplayMarkup : UMultiFX2_CustomDepthLockBase {
	struct FStencilValueRenderCustomDepthFilter Filter; // 0x68(0x18)
	enum class EHighContrastGameplayMarkup StencilValue; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	int32_t PriorityBoost; // 0x84(0x04)
	char bAutoAdjustForTargeting : 1; // 0x88(0x01)
	char pad_88_1 : 7; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.FXUpdate_ComponentHighContrastGameplayMarkupBase
// Size: 0x88 (Inherited: 0x80)
struct UFXUpdate_ComponentHighContrastGameplayMarkupBase : UFXUpdate_Tick {
	bool bOnce; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Phoenix.FXUpdate_ComponentHighContrastGameplayMarkup
// Size: 0x90 (Inherited: 0x88)
struct UFXUpdate_ComponentHighContrastGameplayMarkup : UFXUpdate_ComponentHighContrastGameplayMarkupBase {
	enum class EHighContrastGameplayMarkup StencilValue; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.FXUpdate_ComponentHighContrastGameplayAutoMarkup
// Size: 0x88 (Inherited: 0x88)
struct UFXUpdate_ComponentHighContrastGameplayAutoMarkup : UFXUpdate_ComponentHighContrastGameplayMarkupBase {
};

// Class Phoenix.FXAutoTriggerHighContrastGameplayConditions
// Size: 0x50 (Inherited: 0x30)
struct UFXAutoTriggerHighContrastGameplayConditions : UDataAsset {
	struct TArray<struct UFXAutoTriggerBool*> AndConditions; // 0x30(0x10)
	struct TArray<struct FLerpVolumesLevelName> ExcludeLevels; // 0x40(0x10)
};

// Class Phoenix.PhoenixHighContrastGameplaySettings
// Size: 0x38 (Inherited: 0x30)
struct UPhoenixHighContrastGameplaySettings : UDataAsset {
	struct UFXAutoTriggerHighContrastGameplayConditions* Conditions; // 0x30(0x08)
};

// Class Phoenix.FXAutoTriggerPrerequisiteGameplayHighContrast
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerPrerequisiteGameplayHighContrast : UFXAutoTriggerPrerequisiteBase {
	struct UFXAutoTriggerHighContrastGameplayConditions* Conditions; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolGameplayHighContrast
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameplayHighContrast : UFXAutoTriggerBool {
	struct UFXAutoTriggerHighContrastGameplayConditions* Conditions; // 0x28(0x08)
};

// Class Phoenix.FXAutoTriggerBoolActorTagList
// Size: 0x38 (Inherited: 0x28)
struct UFXAutoTriggerBoolActorTagList : UFXAutoTriggerBool {
	struct TArray<struct FName> ActorTags; // 0x28(0x10)
};

// Class Phoenix.FXAutoTriggerBoolActorTagListHas
// Size: 0x38 (Inherited: 0x38)
struct UFXAutoTriggerBoolActorTagListHas : UFXAutoTriggerBoolActorTagList {
};

// Class Phoenix.FXAutoTriggerBoolActorTagListDoesntHave
// Size: 0x38 (Inherited: 0x38)
struct UFXAutoTriggerBoolActorTagListDoesntHave : UFXAutoTriggerBoolActorTagList {
};

// Class Phoenix.FXAutoTriggerBoolGameplayMatchNPCType
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolGameplayMatchNPCType : UFXAutoTriggerBool {
	int32_t Types; // 0x28(0x04)
	int32_t ExcludeTypes; // 0x2c(0x04)
};

// Class Phoenix.MultiFX2_HighContrastGameplayNPCMarkup
// Size: 0x80 (Inherited: 0x68)
struct UMultiFX2_HighContrastGameplayNPCMarkup : UMultiFX2_CustomDepthLockBase {
	struct FStencilValueRenderCustomDepthFilter Filter; // 0x68(0x18)
};

// Class Phoenix.FXAutoTriggerRequiredActorsExternalBucketHighContrast
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerRequiredActorsExternalBucketHighContrast : UFXAutoTriggerRequiredActorsBase {
	enum class EHighContrastGameplayBucket Bucket; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.FXAutoTriggerBoolWithinHighContrastDistance
// Size: 0x30 (Inherited: 0x28)
struct UFXAutoTriggerBoolWithinHighContrastDistance : UFXAutoTriggerBool {
	enum class EHighContrastDistanceType Type; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.HighContrastGameplayMarkupActorComponent
// Size: 0x138 (Inherited: 0xc8)
struct UHighContrastGameplayMarkupActorComponent : UHighContrastGameplayMarkupComponent {
	enum class EHighContrastGameplayMarkup Type; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FStencilValueRenderCustomDepthFilter Filter; // 0xd0(0x18)
	struct TMap<struct TWeakObjectPtr<struct AActor>, struct UStencilManagerDynamicLock*> StateMap; // 0xe8(0x50)
};

// Class Phoenix.HighContrastGameplayMarkupOwnerComponent
// Size: 0x138 (Inherited: 0x138)
struct UHighContrastGameplayMarkupOwnerComponent : UHighContrastGameplayMarkupActorComponent {
};

// Class Phoenix.HighContrastGameplayMarkupOtherActorComponent
// Size: 0x148 (Inherited: 0x138)
struct UHighContrastGameplayMarkupOtherActorComponent : UHighContrastGameplayMarkupActorComponent {
	struct TArray<struct TSoftObjectPtr<AActor>> MarkupActors; // 0x138(0x10)
};

// Class Phoenix.HighContrastGameplayMarkupOtherActor
// Size: 0x250 (Inherited: 0x248)
struct AHighContrastGameplayMarkupOtherActor : AActor {
	struct UHighContrastGameplayMarkupOtherActorComponent* Component; // 0x248(0x08)
};

// Class Phoenix.FXAutoTriggerHighContrastGameplay
// Size: 0x28 (Inherited: 0x28)
struct UFXAutoTriggerHighContrastGameplay : UBlueprintFunctionLibrary {

	void RemoveNPCHighContrastGameplayHints(struct AActor* Actor); // Function Phoenix.FXAutoTriggerHighContrastGameplay.RemoveNPCHighContrastGameplayHints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ec4c0
	void IsHighContrastGameplay(struct UObject* WorldContextObject, bool& bHighContrastGameplay); // Function Phoenix.FXAutoTriggerHighContrastGameplay.IsHighContrastGameplay // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x33ec1a0
	void HighContrastGameplayMarkupMeshImmediateVeryDangerous(struct UMeshComponent* MeshComponent, enum class EHighContrastGameplayMarkup Markup); // Function Phoenix.FXAutoTriggerHighContrastGameplay.HighContrastGameplayMarkupMeshImmediateVeryDangerous // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ec0e0
	void HighContrastGameplayMarkupActorImmediateVeryDangerous(struct AActor* Actor, enum class EHighContrastGameplayMarkup Markup, bool bIncludeChildren); // Function Phoenix.FXAutoTriggerHighContrastGameplay.HighContrastGameplayMarkupActorImmediateVeryDangerous // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ebfe0
	void GetNPCHighContrastGameplayHint(struct AActor* Actor, enum class EHighContrastGameplayNPCHint& Hint, bool& bHasHint); // Function Phoenix.FXAutoTriggerHighContrastGameplay.GetNPCHighContrastGameplayHint // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ebb70
	void AddNPCHighContrastGameplayHint(struct AActor* Actor, enum class EHighContrastGameplayNPCHint Hint); // Function Phoenix.FXAutoTriggerHighContrastGameplay.AddNPCHighContrastGameplayHint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33eb750
};

// Class Phoenix.StencilManagerExternalControlDisableHighContrast
// Size: 0x28 (Inherited: 0x28)
struct UStencilManagerExternalControlDisableHighContrast : UStencilManagerExternalControl {
};

// Class Phoenix.PhoenixHUD
// Size: 0x610 (Inherited: 0x338)
struct APhoenixHUD : ACharacterStateHUD {
	char pad_338[0x10]; // 0x338(0x10)
	struct UFont* VerdanaFont; // 0x348(0x08)
	struct UFont* UE4Font; // 0x350(0x08)
	float DefaultFontScale; // 0x358(0x04)
	float GlobalHUDMult; // 0x35c(0x04)
	struct UTexture2D* CursorMain; // 0x360(0x08)
	struct UTexture2D* CursorHoveringButton; // 0x368(0x08)
	struct UTexture2D* ButtonBackground; // 0x370(0x08)
	struct UMaterialInterface* MaterialBackground; // 0x378(0x08)
	float m_subReticuleMoveToTargetTime; // 0x380(0x04)
	char pad_384[0x4]; // 0x384(0x04)
	struct UUserWidget* m_ReticuleWidgetClass; // 0x388(0x08)
	struct UUserWidget* LoadingScreenWidgetClass; // 0x390(0x08)
	struct UPhoenixHUDWidget* HUDWidgetRef; // 0x398(0x08)
	bool KnowledgeNotificationShown; // 0x3a0(0x01)
	char pad_3A1[0x7]; // 0x3a1(0x07)
	struct FString KnowledgeNotificationSubject; // 0x3a8(0x10)
	char pad_3B8[0x1f0]; // 0x3b8(0x1f0)
	bool bShowAnimDebugInfo; // 0x5a8(0x01)
	char pad_5A9[0x3]; // 0x5a9(0x03)
	float StickX; // 0x5ac(0x04)
	float StickY; // 0x5b0(0x04)
	float ModifiedStickX; // 0x5b4(0x04)
	float ModifiedStickY; // 0x5b8(0x04)
	char pad_5BC[0x4]; // 0x5bc(0x04)
	struct UCurveFloat* DeadZoneCurve; // 0x5c0(0x08)
	struct UCurveFloat* SpeedCurve; // 0x5c8(0x08)
	char pad_5D0[0x40]; // 0x5d0(0x40)

	void ToggleHUD(bool Show, bool AllowSelectiveTicking, bool AllowAnimation); // Function Phoenix.PhoenixHUD.ToggleHUD // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void StartSettingHUDVisible(bool bNewValue, enum class EStandardManagedPriority Priority, struct UObject* Provider, bool AllowAnimation); // Function Phoenix.PhoenixHUD.StartSettingHUDVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x33ecbe0
	void ShowHUDGroup(struct FString GroupName, struct UObject* Provider); // Function Phoenix.PhoenixHUD.ShowHUDGroup // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33ec770
	void SetDefaultHUDVisible(bool bDefaultValue, bool AllowSelectiveTicking); // Function Phoenix.PhoenixHUD.SetDefaultHUDVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x33ec540
	void ReadActiveOwlMail(); // Function Phoenix.PhoenixHUD.ReadActiveOwlMail // (Final|Native|Public|BlueprintCallable) // @ game+0x33ec460
	void OnMailRecieved(struct FMailEntry Entry, int32_t DisplayPriority); // Function Phoenix.PhoenixHUD.OnMailRecieved // (Final|Native|Protected) // @ game+0x33ec270
	void HideHUDGroup(struct FString GroupName, struct UObject* Provider); // Function Phoenix.PhoenixHUD.HideHUDGroup // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x33ebe90
	void HandleHUDGroupUnregistration(struct UObject* i_caller, struct FName& HUDGroupName); // Function Phoenix.PhoenixHUD.HandleHUDGroupUnregistration // (Final|Native|Public|HasOutParms) // @ game+0x33ebdb0
	void HandleHUDGroupRegistration(struct UObject* i_caller, struct FName& HUDGroupName); // Function Phoenix.PhoenixHUD.HandleHUDGroupRegistration // (Final|Native|Public|HasOutParms) // @ game+0x33ebcd0
	struct UReticule* GetReticuleWidget(); // Function Phoenix.PhoenixHUD.GetReticuleWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x33ebc90
	void FinishSettingHUDVisible(enum class EStandardManagedPriority Priority, struct UObject* Provider, bool AllowAnimation); // Function Phoenix.PhoenixHUD.FinishSettingHUDVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x33eba50
	void EnableAnimDebugInfo(bool bInFlag); // Function Phoenix.PhoenixHUD.EnableAnimDebugInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x31e0320
};

// Class Phoenix.PhoenixHUDWidget
// Size: 0x310 (Inherited: 0x268)
struct UPhoenixHUDWidget : UUserWidget {
	struct UCanvasPanel* LockOnReticlePanel; // 0x268(0x08)
	struct UCanvasPanel* CapturingWidgetPanel; // 0x270(0x08)
	struct UZoneNotification* HUD_ZoneNotification; // 0x278(0x08)
	struct UComboHelperHud* ComboHelperHud; // 0x280(0x08)
	struct UReticule* Reticule; // 0x288(0x08)
	char pad_290[0x4]; // 0x290(0x04)
	int32_t ConjurationIntroType; // 0x294(0x04)
	int32_t TransfigurationIntroType; // 0x298(0x04)
	float BeaconMinVertElevationDistMeters; // 0x29c(0x04)
	float BeaconMaxHorizElevationDistMeters; // 0x2a0(0x04)
	float BeaconElevationBufferMeters; // 0x2a4(0x04)
	float MinVisibleBeaconTextDistMeters; // 0x2a8(0x04)
	char pad_2AC[0x64]; // 0x2ac(0x64)

	bool WorldToViewport(struct FVector WorldPos, struct FVector2D& o_Point, bool LockToViewableSpace); // Function Phoenix.PhoenixHUDWidget.WorldToViewport // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33ecd40
	void UpdateOutOfAreaAlertTimer(float Time); // Function Phoenix.PhoenixHUDWidget.UpdateOutOfAreaAlertTimer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void TogglePersistentStepBanner(bool IsPersistent); // Function Phoenix.PhoenixHUDWidget.TogglePersistentStepBanner // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ToggleMissionDetailsHold(bool IsHeld); // Function Phoenix.PhoenixHUDWidget.ToggleMissionDetailsHold // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SyncSettingsVisibilities(); // Function Phoenix.PhoenixHUDWidget.SyncSettingsVisibilities // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ShowZoneNotification(struct FName Header_Name, struct FName Label_Name, struct FName Image_Left, struct FName Image_Right, float duration_seconds, bool PlaySound); // Function Phoenix.PhoenixHUDWidget.ShowZoneNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33eca00
	void ShowTransformationUI(bool Show, int32_t IntroType); // Function Phoenix.PhoenixHUDWidget.ShowTransformationUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33ec930
	void ShowSpellBar(bool Show); // Function Phoenix.PhoenixHUDWidget.ShowSpellBar // (Final|Native|Public|BlueprintCallable) // @ game+0x33ec8a0
	void ShowOutOfAreaAlert(struct FName Message, float InitialTime); // Function Phoenix.PhoenixHUDWidget.ShowOutOfAreaAlert // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ShowNotificationsHUD(); // Function Phoenix.PhoenixHUDWidget.ShowNotificationsHUD // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ShowNoFlyHUD(struct FName& ErrorMessageKey); // Function Phoenix.PhoenixHUDWidget.ShowNoFlyHUD // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void ShowMountHUD(struct UCreature_MountComponent* MountComponent, bool bIncludeCharge); // Function Phoenix.PhoenixHUDWidget.ShowMountHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowCreatureNurturingHUD(bool Show); // Function Phoenix.PhoenixHUDWidget.ShowCreatureNurturingHUD // (Native|Event|Public|BlueprintEvent) // @ game+0x33ec6e0
	void ShowCreatureCaptureHUD(); // Function Phoenix.PhoenixHUDWidget.ShowCreatureCaptureHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowConjurationUI(bool Show, int32_t IntroType); // Function Phoenix.PhoenixHUDWidget.ShowConjurationUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33ec610
	void ShowBroomRaceHUD(); // Function Phoenix.PhoenixHUDWidget.ShowBroomRaceHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowBroomHUD(struct AFlyingBroom* BroomActor); // Function Phoenix.PhoenixHUDWidget.ShowBroomHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetHudElementVisibility(struct FString ElementName, enum class ESlateVisibility NewVisibility, struct UObject* Provider); // Function Phoenix.PhoenixHUDWidget.SetHudElementVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetGlobalHudVisibility(bool ShouldShow, bool AllowTicking, bool ShouldAnimate); // Function Phoenix.PhoenixHUDWidget.SetGlobalHudVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetCurrentTargetActor(struct AActor* Target, bool ShowName, bool ShowHealth); // Function Phoenix.PhoenixHUDWidget.SetCurrentTargetActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetAndShowHintMessage(struct FString HintKey, struct FTutorialLayoutData HintPositionData, bool bIgnoreShowTutorialElementsFlag, float MaxDuration); // Function Phoenix.PhoenixHUDWidget.SetAndShowHintMessage // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RemoveBeaconFromHUD(struct UHUDCompassIcon* Beacon); // Function Phoenix.PhoenixHUDWidget.RemoveBeaconFromHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ReadActiveOwlMail(); // Function Phoenix.PhoenixHUDWidget.ReadActiveOwlMail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OverrideSpellBar(); // Function Phoenix.PhoenixHUDWidget.OverrideSpellBar // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void OnShowSpellBar(bool Show); // Function Phoenix.PhoenixHUDWidget.OnShowSpellBar // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnShowEnemyInfo(bool Show); // Function Phoenix.PhoenixHUDWidget.OnShowEnemyInfo // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetHUDVisibility(); // Function Phoenix.PhoenixHUDWidget.OnSetHUDVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetEnemyData(struct FName& Name, float pct); // Function Phoenix.PhoenixHUDWidget.OnSetEnemyData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnMailRecieved(struct FMailEntry Entry, int32_t DisplayPriority); // Function Phoenix.PhoenixHUDWidget.OnMailRecieved // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnAddTextTickerNotification(struct FString NotificationText); // Function Phoenix.PhoenixHUDWidget.OnAddTextTickerNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddSpecialItemNotification(struct FString Name, struct FString IconName, int32_t Count, struct FString UnlockMessage); // Function Phoenix.PhoenixHUDWidget.OnAddSpecialItemNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddPickupNotification(struct FString Name, struct FString IconName, int32_t Count, bool bSpecial, struct FName Variation); // Function Phoenix.PhoenixHUDWidget.OnAddPickupNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddFastTravelUnlockedNotification(struct FString Name, struct FString IconName); // Function Phoenix.PhoenixHUDWidget.OnAddFastTravelUnlockedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddCompanionLevelUpNotification(struct FString CompanionName); // Function Phoenix.PhoenixHUDWidget.OnAddCompanionLevelUpNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddCollectionObtainedNotification(struct FName CollectionItemID, struct FName CollectionCategory); // Function Phoenix.PhoenixHUDWidget.OnAddCollectionObtainedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddCollectionKnownNotification(struct FName CollectionItemID, struct FName CollectionCategory); // Function Phoenix.PhoenixHUDWidget.OnAddCollectionKnownNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddChallengeUpdatedNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t CompletedAmt, int32_t TotalRequired); // Function Phoenix.PhoenixHUDWidget.OnAddChallengeUpdatedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddChallengeUnlockedNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t TotalRequired); // Function Phoenix.PhoenixHUDWidget.OnAddChallengeUnlockedNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAddChallengeCompleteNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t CompletedLevel, int32_t TotalLevels, int32_t TotalInstancesForLevel); // Function Phoenix.PhoenixHUDWidget.OnAddChallengeCompleteNotification // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UHUDCompassIcon* MakeBeaconIcon(struct FString IconName); // Function Phoenix.PhoenixHUDWidget.MakeBeaconIcon // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void HideZoneNotification(); // Function Phoenix.PhoenixHUDWidget.HideZoneNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33ebfc0
	void HideOutOfAreaAlert(); // Function Phoenix.PhoenixHUDWidget.HideOutOfAreaAlert // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void HideNotificationsHUD(); // Function Phoenix.PhoenixHUDWidget.HideNotificationsHUD // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void HideNoFlyHUD(); // Function Phoenix.PhoenixHUDWidget.HideNoFlyHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideMountHUD(); // Function Phoenix.PhoenixHUDWidget.HideMountHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideCreatureCaptureHUD(); // Function Phoenix.PhoenixHUDWidget.HideCreatureCaptureHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideBroomRaceHUD(); // Function Phoenix.PhoenixHUDWidget.HideBroomRaceHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HideBroomHUD(); // Function Phoenix.PhoenixHUDWidget.HideBroomHUD // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UMissionBannerWidget* GetMissionBanner(); // Function Phoenix.PhoenixHUDWidget.GetMissionBanner // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ExperienceChangedBP(struct FExperienceChange ExperienceChangedData); // Function Phoenix.PhoenixHUDWidget.ExperienceChangedBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ClearSpellBarOverride(); // Function Phoenix.PhoenixHUDWidget.ClearSpellBarOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void ClearHintMessage(); // Function Phoenix.PhoenixHUDWidget.ClearHintMessage // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AnimateTrackingInfoWidget(); // Function Phoenix.PhoenixHUDWidget.AnimateTrackingInfoWidget // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddSpecialItemNotification(struct FString Name, struct FString IconName, int32_t Count, struct FString UnlockMessage); // Function Phoenix.PhoenixHUDWidget.AddSpecialItemNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33eb810
	void AddFastTravelUnlockedNotification(struct FString Site, struct FString IconName); // Function Phoenix.PhoenixHUDWidget.AddFastTravelUnlockedNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33eb5d0
	void AddCompanionLevelUpNotification(struct UObject* i_caller, struct FString CompanionName, int32_t Level); // Function Phoenix.PhoenixHUDWidget.AddCompanionLevelUpNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33eb4b0
	void AddCollectionNotification(struct FString Name, struct FString IconName, int32_t Count, bool bSpecial, struct FName Variation); // Function Phoenix.PhoenixHUDWidget.AddCollectionNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33eb270
	void AddBeaconToHUD(struct UHUDCompassIcon* Beacon, struct UCanvasPanelSlot*& BeaconSlot); // Function Phoenix.PhoenixHUDWidget.AddBeaconToHUD // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PhoenixImage
// Size: 0x228 (Inherited: 0x210)
struct UPhoenixImage : UImage {
	struct FDataTableRowHandle ColorTag; // 0x210(0x10)
	char pad_220[0x8]; // 0x220(0x08)

	void SetColorTag(struct FDataTableRowHandle NewColorTag); // Function Phoenix.PhoenixImage.SetColorTag // (Final|Native|Public|BlueprintCallable) // @ game+0x33f2c10
};

// Class Phoenix.PhoenixLocalizationCommandlet
// Size: 0x80 (Inherited: 0x80)
struct UPhoenixLocalizationCommandlet : UCommandlet {
};

// Class Phoenix.PhoenixManagedCharacter
// Size: 0x3b0 (Inherited: 0x3b0)
struct UPhoenixManagedCharacter : UManagedCharacterComponent {
};

// Class Phoenix.PhoenixMMCommandImplementations
// Size: 0xd8 (Inherited: 0x60)
struct UPhoenixMMCommandImplementations : UMastermindDebugCommandManager {
	char pad_60[0x78]; // 0x60(0x78)

	void ToggleWorldBounds(); // Function Phoenix.PhoenixMMCommandImplementations.ToggleWorldBounds // (Exec|Native|Public) // @ game+0x33f2ce0
	bool ToggleWImGUIMainWindow(); // Function Phoenix.PhoenixMMCommandImplementations.ToggleWImGUIMainWindow // (Final|Exec|Native|Static|Public) // @ game+0x33f2cb0
	void RunAtDungeonExitDelegate(struct FVector TargetLocation); // Function Phoenix.PhoenixMMCommandImplementations.RunAtDungeonExitDelegate // (Final|Native|Private|HasDefaults) // @ game+0x33f2b80
	void RunAtDungeonDelegate(struct FVector TargetLocation); // Function Phoenix.PhoenixMMCommandImplementations.RunAtDungeonDelegate // (Final|Native|Private|HasDefaults) // @ game+0x33f2af0
	void ReleaseCamera(); // Function Phoenix.PhoenixMMCommandImplementations.ReleaseCamera // (Exec|Native|Public) // @ game+0x33f2ad0
	void QATargetNearestEnemy(); // Function Phoenix.PhoenixMMCommandImplementations.QATargetNearestEnemy // (Exec|Native|Public) // @ game+0x33f2910
	void QAStreamingRecordSession(struct FString SessionName); // Function Phoenix.PhoenixMMCommandImplementations.QAStreamingRecordSession // (Exec|Native|Public) // @ game+0x33f2820
	void QAStreamingForceUnload(); // Function Phoenix.PhoenixMMCommandImplementations.QAStreamingForceUnload // (Exec|Native|Public) // @ game+0x3304db0
	void QASetPlayerStart(float locX, float locY, float locZ, float rotX, float rotY, float rotZ); // Function Phoenix.PhoenixMMCommandImplementations.QASetPlayerStart // (Exec|Native|Public) // @ game+0x33f2630
	void QASetPlayerRotation(float rotX, float rotY, float rotZ); // Function Phoenix.PhoenixMMCommandImplementations.QASetPlayerRotation // (Exec|Native|Public) // @ game+0x33f2510
	void QARunForward(float Speed); // Function Phoenix.PhoenixMMCommandImplementations.QARunForward // (Exec|Native|Public) // @ game+0x33f2480
	void QARunAtDungeonExit(); // Function Phoenix.PhoenixMMCommandImplementations.QARunAtDungeonExit // (Exec|Native|Public) // @ game+0x33f2460
	void QARunAtDungeonEntrance(); // Function Phoenix.PhoenixMMCommandImplementations.QARunAtDungeonEntrance // (Exec|Native|Public) // @ game+0x33f2440
	void QARecordPlayerLocation(struct FString IdentifyingString); // Function Phoenix.PhoenixMMCommandImplementations.QARecordPlayerLocation // (Exec|Native|Public) // @ game+0x33f2350
	void QAPressButtonConsole(struct FString ButtonName, float TimePressed); // Function Phoenix.PhoenixMMCommandImplementations.QAPressButtonConsole // (Exec|Native|Public) // @ game+0x33f2210
	void QAPlayerLookInDirection(float AroundY); // Function Phoenix.PhoenixMMCommandImplementations.QAPlayerLookInDirection // (Exec|Native|Public) // @ game+0x33f2180
	void QALookAtActor(struct FString ActorName, float Target); // Function Phoenix.PhoenixMMCommandImplementations.QALookAtActor // (Exec|Native|Public) // @ game+0x33f2040
	void QALockPlayerPosition(bool Set, float X, float Y, float Z); // Function Phoenix.PhoenixMMCommandImplementations.QALockPlayerPosition // (Exec|Native|Public) // @ game+0x33f1ee0
	void QALockPlayerAtCurrentPosition(bool Set); // Function Phoenix.PhoenixMMCommandImplementations.QALockPlayerAtCurrentPosition // (Exec|Native|Public) // @ game+0x33f1e50
	void QALocationLogRemoveLast(); // Function Phoenix.PhoenixMMCommandImplementations.QALocationLogRemoveLast // (Exec|Native|Public) // @ game+0x33f1e30
	void QALocationLogDump(); // Function Phoenix.PhoenixMMCommandImplementations.QALocationLogDump // (Exec|Native|Public) // @ game+0x3304d70
	void QALocationLogClear(); // Function Phoenix.PhoenixMMCommandImplementations.QALocationLogClear // (Exec|Native|Public) // @ game+0x33f1e10
	void QALocationLogAdd(struct FString LocationName); // Function Phoenix.PhoenixMMCommandImplementations.QALocationLogAdd // (Exec|Native|Public) // @ game+0x33f1d20
	void QALevelUp(); // Function Phoenix.PhoenixMMCommandImplementations.QALevelUp // (Exec|Native|Public) // @ game+0x33f1d00
	void QAKillNearestEnemy(); // Function Phoenix.PhoenixMMCommandImplementations.QAKillNearestEnemy // (Exec|Native|Public) // @ game+0x33f1ce0
	void QAKillEnemiesInRadius(float Radius); // Function Phoenix.PhoenixMMCommandImplementations.QAKillEnemiesInRadius // (Exec|Native|Public) // @ game+0x1981460
	void QAIsLevelLoaded(); // Function Phoenix.PhoenixMMCommandImplementations.QAIsLevelLoaded // (Exec|Native|Public) // @ game+0x19fc450
	void QAHoldMMUntilFinishedStreaming(); // Function Phoenix.PhoenixMMCommandImplementations.QAHoldMMUntilFinishedStreaming // (Exec|Native|Public) // @ game+0x33f1cc0
	void QAGoToPosition(float X, float Y, float Z); // Function Phoenix.PhoenixMMCommandImplementations.QAGoToPosition // (Exec|Native|Public) // @ game+0x33f1b80
	void QAGodMode(); // Function Phoenix.PhoenixMMCommandImplementations.QAGodMode // (Exec|Native|Public) // @ game+0x33f1ca0
	void QAGivePlayerResource(struct FString ResourceType, float Amount); // Function Phoenix.PhoenixMMCommandImplementations.QAGivePlayerResource // (Exec|Native|Public) // @ game+0x33f1a40
	void QAGivePlayer(struct FString Item); // Function Phoenix.PhoenixMMCommandImplementations.QAGivePlayer // (Exec|Native|Public) // @ game+0x33f1950
	void QAGetUpscaleMode(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetUpscaleMode // (Exec|Native|Public) // @ game+0x33f1930
	void QAGetTODLocations(struct FString TODGroup); // Function Phoenix.PhoenixMMCommandImplementations.QAGetTODLocations // (Exec|Native|Public) // @ game+0x32f85c0
	void QAGetTime(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetTime // (Exec|Native|Public) // @ game+0x33f1910
	void QAGetScreenResolution(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetScreenResolution // (Exec|Native|Public) // @ game+0x3309580
	void QAGetPSOProgress(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetPSOProgress // (Exec|Native|Public) // @ game+0x33f18b0
	void QAGetPOIs(struct FString SearchString); // Function Phoenix.PhoenixMMCommandImplementations.QAGetPOIs // (Exec|Native|Public) // @ game+0x33f17c0
	void QAGetPlayerWorldLocation(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetPlayerWorldLocation // (Exec|Native|Public) // @ game+0x1980b80
	void QAGetPlayerInformation(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetPlayerInformation // (Exec|Native|Public) // @ game+0x33f18f0
	void QAGetPlatform(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetPlatform // (Exec|Native|Public) // @ game+0x33f18d0
	void QAGetOverlandTileInformation(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetOverlandTileInformation // (Exec|Native|Public) // @ game+0x33f17a0
	void QAGetOverlandLightProbeCaptureTimes(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetOverlandLightProbeCaptureTimes // (Exec|Native|Public) // @ game+0x33f1780
	void QAGetNearbyEnemies(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetNearbyEnemies // (Exec|Native|Public) // @ game+0x33f1760
	void QAGetNearbyActors(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetNearbyActors // (Exec|Native|Public) // @ game+0x33f1740
	void QAGetGameStateInformation(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetGameStateInformation // (Exec|Native|Public) // @ game+0x33f1720
	void QAGetCL(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetCL // (Exec|Native|Public) // @ game+0x3309530
	void QAGetCameraInformation(); // Function Phoenix.PhoenixMMCommandImplementations.QAGetCameraInformation // (Exec|Native|Public) // @ game+0x33f1700
	void QAGetAverageFrametime(int32_t FrameSampleCount, int32_t SampleFrequencyMS); // Function Phoenix.PhoenixMMCommandImplementations.QAGetAverageFrametime // (Exec|Native|Public) // @ game+0x33f1630
	void QAGetAllLocation(struct FString ActorName); // Function Phoenix.PhoenixMMCommandImplementations.QAGetAllLocation // (Exec|Native|Public) // @ game+0x33f1540
	void QACameraLookInDirection(float AroundY, float AroundZ); // Function Phoenix.PhoenixMMCommandImplementations.QACameraLookInDirection // (Exec|Native|Public) // @ game+0x33f1470
	bool InputKeyConsoleCommand(struct FString KeyStates, struct FString Button); // Function Phoenix.PhoenixMMCommandImplementations.InputKeyConsoleCommand // (Final|Exec|Native|Static|Public) // @ game+0x33f0ef0
	void HoldStreamingUpdate(); // Function Phoenix.PhoenixMMCommandImplementations.HoldStreamingUpdate // (Final|Native|Private) // @ game+0x33f0b60
	void ButtonDelegate(struct FKey Key); // Function Phoenix.PhoenixMMCommandImplementations.ButtonDelegate // (Final|Native|Private) // @ game+0x33f0810
};

// Class Phoenix.SessionTracker
// Size: 0x28 (Inherited: 0x28)
struct USessionTracker : UObject {
};

// Class Phoenix.StreamUnloadSession
// Size: 0x28 (Inherited: 0x28)
struct UStreamUnloadSession : USessionTracker {

	void Tick(); // Function Phoenix.StreamUnloadSession.Tick // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.StreamTimeSession
// Size: 0x28 (Inherited: 0x28)
struct UStreamTimeSession : USessionTracker {

	void Tick(); // Function Phoenix.StreamTimeSession.Tick // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.FrameTimeSession
// Size: 0x28 (Inherited: 0x28)
struct UFrameTimeSession : USessionTracker {

	void Tick(); // Function Phoenix.FrameTimeSession.Tick // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.LockPlayerSession
// Size: 0x28 (Inherited: 0x28)
struct ULockPlayerSession : USessionTracker {

	void Tick(); // Function Phoenix.LockPlayerSession.Tick // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.PhoenixMMDebugCommandManager
// Size: 0x70 (Inherited: 0x60)
struct UPhoenixMMDebugCommandManager : UMastermindDebugCommandManager {
	struct TArray<struct UObject*> CommandClasses; // 0x60(0x10)
};

// Class Phoenix.MultiplePoiTestsManager
// Size: 0x38 (Inherited: 0x28)
struct UMultiplePoiTestsManager : UObject {
	struct TArray<struct FMultiplePoiTest> AllTests; // 0x28(0x10)
};

// Class Phoenix.NavArea_Jump
// Size: 0x48 (Inherited: 0x48)
struct UNavArea_Jump : UNavArea {
};

// Class Phoenix.NavArea_Vertical
// Size: 0x48 (Inherited: 0x48)
struct UNavArea_Vertical : UNavArea {
};

// Class Phoenix.NavArea_Fall
// Size: 0x48 (Inherited: 0x48)
struct UNavArea_Fall : UNavArea {
};

// Class Phoenix.PhoenixNavigationSystem
// Size: 0x15e0 (Inherited: 0x15e0)
struct UPhoenixNavigationSystem : UNavigationSystemV1 {
};

// Class Phoenix.PhoenixNotificationManager
// Size: 0x198 (Inherited: 0x28)
struct UPhoenixNotificationManager : UObject {
	char pad_28[0x170]; // 0x28(0x170)

	void QueueNotification(struct UObject* Owner, enum class ENotificationCategory Category, struct FString CallbackName, int32_t Priority); // Function Phoenix.PhoenixNotificationManager.QueueNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x33f2930
	void PauseNotifications(bool ShouldPause, struct UObject* Provider, struct FName ProviderName); // Function Phoenix.PhoenixNotificationManager.PauseNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x33f1360
	void PauseNotificationCategory(bool ShouldPause, enum class ENotificationCategory Category, struct UObject* Provider, struct FName ProviderName); // Function Phoenix.PhoenixNotificationManager.PauseNotificationCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x33f1200
	void NotificationComplete(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.NotificationComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x33f1180
	bool IsNotificationPending(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.IsNotificationPending // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33f10f0
	bool IsNotificationActive(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.IsNotificationActive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33f1060
	int32_t GetConcurrentNotifications(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.GetConcurrentNotifications // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33f0ad0
	struct TArray<enum class ENotificationCategory> GetBlockingCategories(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.GetBlockingCategories // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33f09f0
	void ClearPendingNotificationsInCategory(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.ClearPendingNotificationsInCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x33f0970
	void ClearActiveNotificationsInCategory(enum class ENotificationCategory Category); // Function Phoenix.PhoenixNotificationManager.ClearActiveNotificationsInCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x33f08f0
};

// Class Phoenix.PhoenixPersistentAssets
// Size: 0x40 (Inherited: 0x30)
struct UPhoenixPersistentAssets : UDataAsset {
	struct TArray<struct FSoftObjectPath> AssetPaths; // 0x30(0x10)
};

// Class Phoenix.SurfaceImpactSettings
// Size: 0x48 (Inherited: 0x28)
struct USurfaceImpactSettings : UObject {
	float VfxLandscapeLayerInfoWetnessOverrideThreshold; // 0x28(0x04)
	float SfxLandscapeLayerInfoWetnessOverrideThreshold; // 0x2c(0x04)
	float ImpactLandscapeLayerInfoWetnessOverrideThreshold; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<struct FString> LandscapeWetnessLayerInfo; // 0x38(0x10)
};

// Class Phoenix.WeatherRemapBase
// Size: 0x30 (Inherited: 0x28)
struct UWeatherRemapBase : UObject {
	struct UPhoenixPhysicalMaterial* RemapPPM; // 0x28(0x08)
};

// Class Phoenix.WeatherRemapSnow
// Size: 0x30 (Inherited: 0x30)
struct UWeatherRemapSnow : UWeatherRemapBase {
};

// Class Phoenix.WeatherRemapRain
// Size: 0x40 (Inherited: 0x30)
struct UWeatherRemapRain : UWeatherRemapBase {
	float VfxThreshold; // 0x30(0x04)
	float SfxThreshold; // 0x34(0x04)
	float ImpactThreshold; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.SurfaceImpactTypeData
// Size: 0x90 (Inherited: 0x30)
struct USurfaceImpactTypeData : UDataAsset {
	struct TArray<struct UWeatherRemapBase*> WeatherRemap; // 0x30(0x10)
	struct TMap<enum class EImpactTypes, struct FImpactEffectData> ImpactTypeMap; // 0x40(0x50)
};

// Class Phoenix.PhoenixPhysicalMaterial
// Size: 0xe8 (Inherited: 0x80)
struct UPhoenixPhysicalMaterial : UPhysicalMaterial {
	enum class EImpactTypes ImpactType; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float SlidingTime; // 0x84(0x04)
	float ImpactDamageScale; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct USurfaceImpactTypeData* BaseSurfaceImpactFile; // 0x90(0x08)
	struct TMap<struct AActor*, struct FSlidingData> SlidingActorMap; // 0x98(0x50)

	bool WeatherAndLandscapePhysicalMaterialRemap(struct FVector& ImpactLocation, struct UPrimitiveComponent* ImpactComponent, struct AActor* Instigator, bool FootFall, struct UPhoenixPhysicalMaterial*& OutVfxRemapPPM, struct UPhoenixPhysicalMaterial*& OutSfxRemapPPM); // Function Phoenix.PhoenixPhysicalMaterial.WeatherAndLandscapePhysicalMaterialRemap // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33f2d00
	struct FMultiFX2Handle Impact(enum class EImpactTypes InImpactType, struct FVector& ImpactLocation, struct FVector& ImpactNormal, struct FVector& ImpactDirection, struct UPrimitiveComponent* ImpactComponent, struct AActor* Instigator, struct FName ImpactBone, float ImpactScale, float AudioImpactVelocity, struct FVector& Velocity, bool UseRemap); // Function Phoenix.PhoenixPhysicalMaterial.Impact // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33f0b80
};

// Class Phoenix.PhoenixPlayerController
// Size: 0x9a0 (Inherited: 0x950)
struct APhoenixPlayerController : ABiped_PlayerController {
	char pad_950[0x10]; // 0x950(0x10)
	struct UTriggerEffectManager* TriggerEffectManager; // 0x960(0x08)
	struct ULEDEffects* LEDEffects; // 0x968(0x08)
	struct ULEDFadeEffect* PlayerHouseLEDFadeEffect; // 0x970(0x08)
	struct ULEDFadeEffect* DamageTakenLEDEffect; // 0x978(0x08)
	struct ULEDFadeEffect* pPlayerHouseLEDFadeEffect; // 0x980(0x08)
	struct ULEDFadeEffect* pDamageTakenLEDEffect; // 0x988(0x08)
	struct APhoenixHUD* m_pPhoenixHUD; // 0x990(0x08)
	struct UEncounterTracker* m_pEncounterTracker; // 0x998(0x08)

	void MapCaptureStart(); // Function Phoenix.PhoenixPlayerController.MapCaptureStart // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.PhoenixPlayerInput
// Size: 0x3e0 (Inherited: 0x3b8)
struct UPhoenixPlayerInput : UControlMapperPlayerInput {
	struct FMulticastInlineDelegate OnKeyLayoutChanged; // 0x3b8(0x10)
	char pad_3C8[0x18]; // 0x3c8(0x18)

	enum class EKeyLayout GetKeyLayout(); // Function Phoenix.PhoenixPlayerInput.GetKeyLayout // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33f6db0
	void ForceRebuildTransposedKeyMaps(bool bRestoreDefaults, enum class EKeyLayout InCurrentLayout, enum class EKeyLayout InNewLayout); // Function Phoenix.PhoenixPlayerInput.ForceRebuildTransposedKeyMaps // (Final|Native|Public|BlueprintCallable) // @ game+0x33f6b10
};

// Class Phoenix.PhoenixPreloadSettings
// Size: 0x68 (Inherited: 0x28)
struct UPhoenixPreloadSettings : UObject {
	bool bPreloadAssets; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<struct FSoftClassPath> ClassesToPreload; // 0x30(0x10)
	bool bPreloadArchitectAssets; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
	struct FSoftObjectPath ArchitectPreloadListPath; // 0x48(0x18)
	bool bPreloadCreatureManagerAssets; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)
};

// Class Phoenix.PhoenixRichTextBlock
// Size: 0x7d8 (Inherited: 0x678)
struct UPhoenixRichTextBlock : URichTextBlock {
	struct FString LocalizationKey; // 0x678(0x10)
	bool Translatable; // 0x688(0x01)
	bool ScaleFontSize; // 0x689(0x01)
	bool ForceDisplayGamepadGraphics; // 0x68a(0x01)
	char pad_68B[0x5]; // 0x68b(0x05)
	struct FSlateBrush TextBackground; // 0x690(0x88)
	struct FLinearColor BackgroundBrushColor; // 0x718(0x10)
	char pad_728[0x20]; // 0x728(0x20)
	struct FDelegate TextBackgroundDelegate; // 0x748(0x10)
	struct FDataTableRowHandle ColorTag; // 0x758(0x10)
	char pad_768[0x48]; // 0x768(0x48)
	struct TArray<struct UTexture2D*> ReferencedTextures; // 0x7b0(0x10)
	char pad_7C0[0x18]; // 0x7c0(0x18)

	void SetTextKey(struct FString Key); // Function Phoenix.PhoenixRichTextBlock.SetTextKey // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7670
	void SetPhoenixText(struct FString InText); // Function Phoenix.PhoenixRichTextBlock.SetPhoenixText // (Final|Native|Public|BlueprintCallable) // @ game+0x33f7580
	struct FString ReplaceInputActions(struct FString KeyText); // Function Phoenix.PhoenixRichTextBlock.ReplaceInputActions // (Final|Native|Private|BlueprintCallable) // @ game+0x33f73a0
	bool PreValidateLocalizationKey(struct FString RequestedKey); // Function Phoenix.PhoenixRichTextBlock.PreValidateLocalizationKey // (Final|Native|Private) // @ game+0x33f70f0
	void FontLoadCallback(struct UFont* Font); // Function Phoenix.PhoenixRichTextBlock.FontLoadCallback // (Final|Native|Private) // @ game+0x33f69f0
};

// Class Phoenix.PhoenixTrackingVolume
// Size: 0x2b8 (Inherited: 0x248)
struct APhoenixTrackingVolume : AActor {
	struct UShapeComponent* CollisionComponent; // 0x248(0x08)
	struct FString VolumeData; // 0x250(0x10)
	struct TSet<struct AActor*> EnteredList; // 0x260(0x50)
	enum class ETrackingVolumeType VolumeType; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	float VolumeSearchRadius; // 0x2b4(0x04)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.PhoenixTrackingVolume.OnEndOverlap // (Final|Native|Public) // @ game+0x33ac0a0
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.PhoenixTrackingVolume.OnBeginOverlap // (Final|Native|Public) // @ game+0x33abfd0
};

// Class Phoenix.PHX_Able_Preview_Actor
// Size: 0xcd0 (Inherited: 0xcc0)
struct APHX_Able_Preview_Actor : AAmbulatory_Character {
	struct UCustomizableCharacterComponent* Customization; // 0xcc0(0x08)
	struct UBipedStateComponent* ObjectStateComponent; // 0xcc8(0x08)
};

// Class Phoenix.PHX_Able_Preview_Actor_Simple
// Size: 0x540 (Inherited: 0x540)
struct APHX_Able_Preview_Actor_Simple : AAble_Character {
};

// Class Phoenix.PHX_Able_Preview_AnimInstance
// Size: 0x5e0 (Inherited: 0x5e0)
struct UPHX_Able_Preview_AnimInstance : UAmbulatory_AnimInstance {
};

// Class Phoenix.PHX_Biped_Preview_Actor
// Size: 0x1a80 (Inherited: 0x1a70)
struct APHX_Biped_Preview_Actor : ABiped_Character {
	struct UCustomizableCharacterComponent* Customization; // 0x1a70(0x08)
	char pad_1A78[0x8]; // 0x1a78(0x08)
};

// Class Phoenix.PHX_Biped_Preview_AnimInstance
// Size: 0x980 (Inherited: 0x980)
struct UPHX_Biped_Preview_AnimInstance : UBiped_AnimInstance {
};

// Class Phoenix.PhxAnimationSharingManager
// Size: 0xc8 (Inherited: 0xc0)
struct UPhxAnimationSharingManager : UAnimationSharingManager {
	char pad_C0[0x8]; // 0xc0(0x08)

	struct UPhxAnimationSharingManager* GetPhxAnimationSharingManager(struct UWorld* InWorld, struct UPhxAnimationSharingSetup* InClass); // Function Phoenix.PhxAnimationSharingManager.GetPhxAnimationSharingManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33f6e60
};

// Class Phoenix.PhxAnimationSharingSetup
// Size: 0x50 (Inherited: 0x48)
struct UPhxAnimationSharingSetup : UAnimationSharingSetup {
	enum class EFacialAnimType FacialAnimationOverride; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.PhxAnimSharingStateInstance
// Size: 0x3b0 (Inherited: 0x2e0)
struct UPhxAnimSharingStateInstance : UAnimSharingStateInstance {
	bool bIsFemale; // 0x2d8(0x01)
	bool bUseEyeAnims; // 0x2d9(0x01)
	bool bUseMouthAnims; // 0x2da(0x01)
	bool bFullBodyAnimHasEyes; // 0x2db(0x01)
	bool bFullBodyAnimHasMouth; // 0x2dc(0x01)
	struct UPoseAsset* FemalePoseAsset; // 0x2e0(0x08)
	struct UPoseAsset* MalePoseAsset; // 0x2e8(0x08)
	struct UPoseAsset* ActivePoseAsset; // 0x2f0(0x08)
	struct UAimEyesData* ActiveEyeAsset; // 0x2f8(0x08)
	struct UAnimSequence* FacialAnimationToPlay; // 0x300(0x08)
	struct TMap<enum class EFacialAnimType, struct UAnimSequence*> MapFacialAnimations; // 0x308(0x50)
	struct TMap<enum class EFacialAnimType, struct UAimEyesData*> MapEyeAnimations; // 0x358(0x50)
	enum class EFacialAnimType UseFacialAnimation; // 0x3a8(0x01)
	char pad_3AE[0x2]; // 0x3ae(0x02)
};

// Class Phoenix.PhxAnimSharingStateWithNotifyInstance
// Size: 0x3b0 (Inherited: 0x3b0)
struct UPhxAnimSharingStateWithNotifyInstance : UPhxAnimSharingStateInstance {
};

// Class Phoenix.PhxComboBox
// Size: 0x328 (Inherited: 0x328)
struct UPhxComboBox : UPhoenixUserWidget {
};

// Class Phoenix.PhxRichTextBlockImageDecorator
// Size: 0x28 (Inherited: 0x28)
struct UPhxRichTextBlockImageDecorator : URichTextBlockDecorator {
};

// Class Phoenix.PhxSceneRigBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPhxSceneRigBlueprintLibrary : UBlueprintFunctionLibrary {

	struct USceneActionState_ClothOptions* FindFirstSceneActionClothingOptionState(struct ASceneRigActor* InSceneRigActor); // Function Phoenix.PhxSceneRigBlueprintLibrary.FindFirstSceneActionClothingOptionState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33f6960
	struct TArray<struct FDialogueLineAndAudioFlags> FindDialogueEventReferences(struct USceneRig* SceneRig); // Function Phoenix.PhxSceneRigBlueprintLibrary.FindDialogueEventReferences // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33f6890
	struct TSet<struct FCharacterNameAndIsLocalPlayer> FindCharacterReferencesInObject(struct UObject* InObject); // Function Phoenix.PhxSceneRigBlueprintLibrary.FindCharacterReferencesInObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33f6750
};

// Class Phoenix.PhysicalResponseConfig
// Size: 0x638 (Inherited: 0x30)
struct UPhysicalResponseConfig : UDataAsset {
	struct FRuntimeFloatCurve RotationCurve; // 0x30(0x88)
	struct FRuntimeCurveVector AdditiveRotationCurve; // 0xb8(0x188)
	bool bLockXRotation; // 0x240(0x01)
	bool bLockYRotation; // 0x241(0x01)
	bool bLockZRotation; // 0x242(0x01)
	bool bLockXRotationPositive; // 0x243(0x01)
	bool bLockXRotationNegative; // 0x244(0x01)
	bool bLockYRotationPositive; // 0x245(0x01)
	bool bLockYRotationNegative; // 0x246(0x01)
	bool bLockZRotationPositive; // 0x247(0x01)
	bool bLockZRotationNegative; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FRuntimeFloatCurve TranslationCurve; // 0x250(0x88)
	struct FRuntimeCurveVector AdditiveTranslationCurve; // 0x2d8(0x188)
	bool bLockXTranslation; // 0x460(0x01)
	bool bLockYTranslation; // 0x461(0x01)
	bool bLockZTranslationUp; // 0x462(0x01)
	bool bLockZTranslationDown; // 0x463(0x01)
	char pad_464[0x4]; // 0x464(0x04)
	struct FRuntimeFloatCurve DistanceFalloff; // 0x468(0x88)
	bool bScaleAdditive; // 0x4f0(0x01)
	char pad_4F1[0x3]; // 0x4f1(0x03)
	struct FRotator RandomRotationRange; // 0x4f4(0x0c)
	struct FVector2D RandomMagnitudeFactor; // 0x500(0x08)
	struct FVector2D RandomTimeFactor; // 0x508(0x08)
	struct FRuntimeFloatCurve MagnitudeFromMass; // 0x510(0x88)
	struct FRuntimeFloatCurve TimeFactorFromMass; // 0x598(0x88)
	struct TArray<struct UAkAudioEvent*> AudioEvents; // 0x620(0x10)
	float AudioMinScaleThreshold; // 0x630(0x04)
	char pad_634[0x4]; // 0x634(0x04)
};

// Class Phoenix.PhysicalResponseComponent
// Size: 0x2d0 (Inherited: 0x220)
struct UPhysicalResponseComponent : USceneComponent {
	struct TArray<struct UPhysicalResponseConfig*> Responses; // 0x218(0x10)
	struct UPhysicalResponseConfig* CurResponse; // 0x228(0x08)
	struct TArray<struct UPhysicalResponseConfig*> ValidResponses; // 0x230(0x10)
	char pad_248[0x88]; // 0x248(0x88)
};

// Class Phoenix.PhysicalResponseObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct UPhysicalResponseObjectInterface : UInterface {

	void ObjectPhysicalResponseImpact(float ImpactIntensity, struct FName SpellName, struct FName ResponseConfigName, struct FVector& ImpactLocation); // Function Phoenix.PhysicalResponseObjectInterface.ObjectPhysicalResponseImpact // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x33fb110
};

// Class Phoenix.PhysicalResponseSettings
// Size: 0x78 (Inherited: 0x28)
struct UPhysicalResponseSettings : UObject {
	struct TMap<struct FGameplayTag, float> MunitionImpactStrengths; // 0x28(0x50)
};

// Class Phoenix.PhysicalResponseReporter
// Size: 0xf8 (Inherited: 0x28)
struct UPhysicalResponseReporter : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct FPhysicalResponseEventData> NewImpactEvents; // 0x30(0x10)
	struct TArray<struct FPhysicalResponseEventData> ImpactEventsPendingDispatch; // 0x40(0x10)
	char pad_50[0xa8]; // 0x50(0xa8)

	void HandlePhysicalSweep_Static(struct FVector& SweepPosition, struct FVector& PreviousPosition, struct FName SourceName, float Radius, float StrengthFactor); // Function Phoenix.PhysicalResponseReporter.HandlePhysicalSweep_Static // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33fae70
};

// Class Phoenix.PhysicsInterface
// Size: 0x28 (Inherited: 0x28)
struct UPhysicsInterface : UInterface {

	bool WingardiumStart(struct ASpellTool* SpellTool, struct AActor* Instigator); // Function Phoenix.PhysicsInterface.WingardiumStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnWingardiumGhostStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct TArray<struct UInteractionArchitectAsset*>& DataAssets); // Function Phoenix.PhysicsInterface.OnWingardiumGhostStart // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnWingardiumFailed(); // Function Phoenix.PhysicsInterface.OnWingardiumFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnWingardiumEnd(struct AActor* Instigator); // Function Phoenix.PhysicsInterface.OnWingardiumEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnLeviosoFailed(bool InitiatedByPlayer); // Function Phoenix.PhysicsInterface.OnLeviosoFailed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnLeviosoEnd(struct AActor* Instigator, bool InitiatedByPlayer); // Function Phoenix.PhysicsInterface.OnLeviosoEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnFlipendoThrow(struct ASpellTool* SpellTool, struct FVector ThrowDirection, struct FVector ThrowVelocity, struct FVector AngularVelocity, struct FVector Target, struct AActor* Instigator, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FGameplayTagContainer Impact); // Function Phoenix.PhysicsInterface.OnFlipendoThrow // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnFlipendoFailed(); // Function Phoenix.PhysicsInterface.OnFlipendoFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnExpulsoThrow(struct FVector ThrowVelocity, struct FVector Target, struct AActor* Instigator, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FGameplayTagContainer Impact); // Function Phoenix.PhysicsInterface.OnExpulsoThrow // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnDepulsoThrow(struct ASpellTool* SpellTool, struct FVector ThrowVelocity, struct FVector Target, struct AActor* Instigator, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FGameplayTagContainer Impact); // Function Phoenix.PhysicsInterface.OnDepulsoThrow // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnDepulsoFailed(); // Function Phoenix.PhysicsInterface.OnDepulsoFailed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnAccioThrow(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector ThrowVelocity, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FGameplayTagContainer Impact); // Function Phoenix.PhysicsInterface.OnAccioThrow // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnAccioFailed(); // Function Phoenix.PhysicsInterface.OnAccioFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAccioEnd(struct AActor* Instigator, bool TransitioningToWingardium); // Function Phoenix.PhysicsInterface.OnAccioEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool LeviosoStart(struct AActor* Instigator, struct FVector Location, struct FGameplayTagContainer Impact, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, bool InitiatedByPlayer, bool& OverrideEffects); // Function Phoenix.PhysicsInterface.LeviosoStart // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool LeviosoChargedStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector Location, struct FVector Velocity, bool InitiatedByPlayer, struct FGameplayTagContainer Impact, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FVector& ImpactDirection); // Function Phoenix.PhysicsInterface.LeviosoChargedStart // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool FlipendoStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector Location); // Function Phoenix.PhysicsInterface.FlipendoStart // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool ExpulsoStart(struct AActor* Instigator, struct FVector Location); // Function Phoenix.PhysicsInterface.ExpulsoStart // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool DisallowWingardium(); // Function Phoenix.PhysicsInterface.DisallowWingardium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisallowLevioso(); // Function Phoenix.PhysicsInterface.DisallowLevioso // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisallowFlipendo(); // Function Phoenix.PhysicsInterface.DisallowFlipendo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisallowDescendo(); // Function Phoenix.PhysicsInterface.DisallowDescendo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisallowDepulso(); // Function Phoenix.PhysicsInterface.DisallowDepulso // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DisallowAccio(); // Function Phoenix.PhysicsInterface.DisallowAccio // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool DescendoStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector Velocity); // Function Phoenix.PhysicsInterface.DescendoStart // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool DepulsoStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector Location); // Function Phoenix.PhysicsInterface.DepulsoStart // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool AccioStart(struct ASpellTool* SpellTool, struct AActor* Instigator, struct FVector Velocity, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct FVector& ImpactDirection); // Function Phoenix.PhysicsInterface.AccioStart // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PhysicsSimViewBPHelper
// Size: 0x28 (Inherited: 0x28)
struct UPhysicsSimViewBPHelper : UBlueprintFunctionLibrary {

	void SetActorId(struct AActor* Actor, struct FString ActorId); // Function Phoenix.PhysicsSimViewBPHelper.SetActorId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33fb420
	void DisableAutoSaveGame(); // Function Phoenix.PhysicsSimViewBPHelper.DisableAutoSaveGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33fab10
};

// Class Phoenix.PickupTool
// Size: 0x308 (Inherited: 0x2f0)
struct APickupTool : AItemTool {
	char pad_2F0[0x8]; // 0x2f0(0x08)
	struct FName UnequipAction; // 0x2f8(0x08)
	bool AccioCatchable; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)

	void OnUseReleased(); // Function Phoenix.PickupTool.OnUseReleased // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUsePressed(); // Function Phoenix.PickupTool.OnUsePressed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDeactivateReleased(); // Function Phoenix.PickupTool.OnDeactivateReleased // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDeactivatePressed(); // Function Phoenix.PickupTool.OnDeactivatePressed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DeactivateTool(); // Function Phoenix.PickupTool.DeactivateTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33faae0
};

// Class Phoenix.PickupTool_Interface
// Size: 0x28 (Inherited: 0x28)
struct UPickupTool_Interface : UInterface {

	void DeactivateTool(); // Function Phoenix.PickupTool_Interface.DeactivateTool // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32ca2f0
};

// Class Phoenix.PieceBase
// Size: 0x328 (Inherited: 0x328)
struct UPieceBase : UPhoenixUserWidget {
};

// Class Phoenix.PillarPlaque_Character
// Size: 0x1680 (Inherited: 0x1680)
struct APillarPlaque_Character : ADB_Character {
};

// Class Phoenix.PipelineFileCacheManager
// Size: 0x30 (Inherited: 0x28)
struct UPipelineFileCacheManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)

	void ResumeBatching(); // Function Phoenix.PipelineFileCacheManager.ResumeBatching // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb400
	void PauseBatching(); // Function Phoenix.PipelineFileCacheManager.PauseBatching // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb3e0
	bool IsPrecachingEnabled(); // Function Phoenix.PipelineFileCacheManager.IsPrecachingEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb0c0
	bool IsPipelioneFileCacheManagerEnabled(); // Function Phoenix.PipelineFileCacheManager.IsPipelioneFileCacheManagerEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb090
	bool IsBatchingPaused(); // Function Phoenix.PipelineFileCacheManager.IsBatchingPaused // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb060
	struct UPipelineFileCacheManager* Get(); // Function Phoenix.PipelineFileCacheManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33faba0
};

// Class Phoenix.Player_AttackIndicator
// Size: 0x2a8 (Inherited: 0x248)
struct APlayer_AttackIndicator : AActor {
	struct TArray<struct UMultiFX2_Base*> ParryableBeamFX2; // 0x248(0x10)
	struct TArray<struct UMultiFX2_Base*> UnblockableBeamFX2; // 0x258(0x10)
	struct TArray<struct UMultiFX2_Base*> PerfectParryBeamFX2; // 0x268(0x10)
	bool bBeamGoesAttackerToTarget; // 0x278(0x01)
	char pad_279[0x2f]; // 0x279(0x2f)

	void ReceivePerfectParry(struct FMultiFX2Handle InParraybleFX2Handle, struct FMultiFX2Handle InPerfectParryFX2Handle); // Function Phoenix.Player_AttackIndicator.ReceivePerfectParry // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ReceiveIndicatorStop(bool bIsParryIndicator, bool bIsUnblockableIndicator, struct FMultiFX2Handle InFX2Handle); // Function Phoenix.Player_AttackIndicator.ReceiveIndicatorStop // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ReceiveIndicatorStart(bool bIsParryIndicator, bool bIsUnblockableIndicator, struct FMultiFX2Handle InFX2Handle, float InEstimatedTime); // Function Phoenix.Player_AttackIndicator.ReceiveIndicatorStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Player_QuickActionComponent
// Size: 0xc8 (Inherited: 0xc8)
struct UPlayer_QuickActionComponent : UActorComponent {
};

// Class Phoenix.PlayerCart
// Size: 0x310 (Inherited: 0x2a8)
struct APlayerCart : APawn {
	char pad_2A8[0x8]; // 0x2a8(0x08)
	struct FTransform DismountLocation; // 0x2b0(0x30)
	struct FTransform CompanionDismountLocation; // 0x2e0(0x30)

	void UpdateCartPositionAndRotation(struct FVector& InNewLocation, struct FRotator& InNewRotation, struct FVector& InVelocity); // Function Phoenix.PlayerCart.UpdateCartPositionAndRotation // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33fb8f0
};

// Class Phoenix.PlayerCartPlatform
// Size: 0x248 (Inherited: 0x248)
struct APlayerCartPlatform : AActor {

	void SetDismountLocation(struct AActor* Target, struct FTransform DismountLocation, struct FTransform CompanionDismountLocation); // Function Phoenix.PlayerCartPlatform.SetDismountLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x33fb4f0
};

// Class Phoenix.PlayerCentricObjectVolume
// Size: 0x8e0 (Inherited: 0x248)
struct APlayerCentricObjectVolume : ATargetPoint {
	struct FObjectVisualizationInfo VolumeVisualization; // 0x248(0x0c)
	bool bShowActivationDistances; // 0x254(0x01)
	bool bEnableAutoActivation; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	float TriggerDistance; // 0x258(0x04)
	float CullDistance; // 0x25c(0x04)
	bool bEnableSpawning; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float ExtentsPercentageForDefaultSpawnLocation; // 0x264(0x04)
	float RespawnDistance; // 0x268(0x04)
	float PlayerOffsetForDefaultSpawnLocation; // 0x26c(0x04)
	enum class ESpawnVolumeType SpawnVolumeType; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)
	struct TArray<struct FSpawnSelectInfo> ItemsToSpawn; // 0x278(0x10)
	struct TMap<struct FName, struct FDynamicObjectGroupInfo> SpawnGroups; // 0x288(0x50)
	struct UPrimitiveComponent* VolumeComponent; // 0x2d8(0x08)
	struct UManualNavigationInvokerComponent* NavInvokerComponent; // 0x2e0(0x08)
	struct FMulticastInlineDelegate OnAllEnemiesDeadEvent; // 0x2e8(0x10)
	char pad_2F8[0x8]; // 0x2f8(0x08)
	struct FMulticastInlineDelegate OnAllEnemiesSpawned; // 0x300(0x10)
	char pad_310[0x8]; // 0x310(0x08)
	struct FMulticastInlineDelegate OnSpawnVolumeActivated; // 0x318(0x10)
	struct FMulticastInlineDelegate OnSpawnVolumeDeactivated; // 0x328(0x10)
	struct FMulticastInlineDelegate OnActorSpawnedEvent; // 0x338(0x10)
	struct FMulticastInlineDelegate OnFinishedSpawningEvent; // 0x348(0x10)
	char pad_358[0x588]; // 0x358(0x588)

	void SetSpawnBoundsFromVectors(struct FVector& Min, struct FVector& Max); // Function Phoenix.PlayerCentricObjectVolume.SetSpawnBoundsFromVectors // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33fb810
	void SetSpawnBounds(struct FBox& SpawnBounds); // Function Phoenix.PlayerCentricObjectVolume.SetSpawnBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33fb780
	void SetEnableSpawning(bool bSpawningEnabled, bool bCullActive); // Function Phoenix.PlayerCentricObjectVolume.SetEnableSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb6b0
	void SetAllowAutoActivation(bool bAllowAutoActivate); // Function Phoenix.PlayerCentricObjectVolume.SetAllowAutoActivation // (Final|Native|Public|BlueprintCallable) // @ game+0x328ee40
	void OnFinishedSpawning(struct FName& GroupName); // Function Phoenix.PlayerCentricObjectVolume.OnFinishedSpawning // (Final|Native|Public|HasOutParms) // @ game+0x33fb350
	void OnActorSpawned(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.PlayerCentricObjectVolume.OnActorSpawned // (Final|Native|Public|HasOutParms) // @ game+0x33fb270
	void ObjectLoaded(); // Function Phoenix.PlayerCentricObjectVolume.ObjectLoaded // (Final|Native|Public) // @ game+0x33fb0f0
	bool HasSpawned(); // Function Phoenix.PlayerCentricObjectVolume.HasSpawned // (Final|Native|Public|BlueprintCallable) // @ game+0x33fb030
	struct FVector GetVolumeExtents(); // Function Phoenix.PlayerCentricObjectVolume.GetVolumeExtents // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33fae30
	struct FBox GetVolumeBounds(); // Function Phoenix.PlayerCentricObjectVolume.GetVolumeBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33fade0
	struct FBox GetSpawnBounds(); // Function Phoenix.PlayerCentricObjectVolume.GetSpawnBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x33fad90
	int32_t GetSpawnActorCount(); // Function Phoenix.PlayerCentricObjectVolume.GetSpawnActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x33fad60
	int32_t GetAliveActorCount(); // Function Phoenix.PlayerCentricObjectVolume.GetAliveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x33fad30
	int32_t GetActiveActorCount(); // Function Phoenix.PlayerCentricObjectVolume.GetActiveActorCount // (Final|Native|Public|BlueprintCallable) // @ game+0x33fad00
	void ForceDeactivate(); // Function Phoenix.PlayerCentricObjectVolume.ForceDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x33fab80
	void ForceActivate(); // Function Phoenix.PlayerCentricObjectVolume.ForceActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x33fab60
	bool DoneSpawning(); // Function Phoenix.PlayerCentricObjectVolume.DoneSpawning // (Final|Native|Public|BlueprintCallable) // @ game+0x33fab30
};

// Class Phoenix.PlayerMountOverlaySettings
// Size: 0x50 (Inherited: 0x28)
struct UPlayerMountOverlaySettings : UObject {
	float TeleportTimer; // 0x28(0x04)
	float FadeOutTimer; // 0x2c(0x04)
	float FadeInTeleportTimer; // 0x30(0x04)
	float FadeInExitTimer; // 0x34(0x04)
	float FadeHoldTimer; // 0x38(0x04)
	bool bDisableSpeedupInside; // 0x3c(0x01)
	bool bDisableSpeedupUnlessFacing; // 0x3d(0x01)
	bool bPauseTimerWhenFacing; // 0x3e(0x01)
	char pad_3F[0x1]; // 0x3f(0x01)
	float FacingAngle; // 0x40(0x04)
	float FadeAlpha; // 0x44(0x04)
	float ResetTimer; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.PlayerMountOverlapManager
// Size: 0x288 (Inherited: 0x28)
struct UPlayerMountOverlapManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TMap<enum class ENoMountZoneError, struct FName> NoMountZoneErrors; // 0x30(0x50)
	struct TMap<enum class EMountErrorMessages, struct FName> MountErrors; // 0x80(0x50)
	float SpeedUpUnavailableMessageTimeout; // 0xd0(0x04)
	float LandingUnavailableMessageTimeout; // 0xd4(0x04)
	char pad_D8[0x1b0]; // 0xd8(0x1b0)

	bool IsInsideFacingEntry(bool bDraw); // Function Phoenix.PlayerMountOverlapManager.IsInsideFacingEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33ff880
	bool GetTimeInNoMountZone(float& Time); // Function Phoenix.PlayerMountOverlapManager.GetTimeInNoMountZone // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x33ff4a0
	bool GetInNoMountZone(); // Function Phoenix.PlayerMountOverlapManager.GetInNoMountZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33ff2c0
	struct UPlayerMountOverlapManager* Get(); // Function Phoenix.PlayerMountOverlapManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ff030
	bool CanSpeedUp(); // Function Phoenix.PlayerMountOverlapManager.CanSpeedUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33fea90
};

// Class Phoenix.PlayerTemplate
// Size: 0x38 (Inherited: 0x28)
struct UPlayerTemplate : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	void RemovePlayerTemplate(); // Function Phoenix.PlayerTemplate.RemovePlayerTemplate // (Final|Exec|Native|Public) // @ game+0x1074730
	void ReloadPlayerTemplate(struct FName PlayerTemplateName); // Function Phoenix.PlayerTemplate.ReloadPlayerTemplate // (Final|Exec|Native|Public) // @ game+0x32a3030
	void PlayerTemplateLogObjInfo(); // Function Phoenix.PlayerTemplate.PlayerTemplateLogObjInfo // (Final|Exec|Native|Public) // @ game+0x1074730
	void PlayerTemplateBuildCSVInfo(); // Function Phoenix.PlayerTemplate.PlayerTemplateBuildCSVInfo // (Final|Exec|Native|Public) // @ game+0x1074730
	struct UPlayerTemplate* Get(); // Function Phoenix.PlayerTemplate.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ff080
};

// Class Phoenix.PlayerTemplateDataAsset
// Size: 0x138 (Inherited: 0x30)
struct UPlayerTemplateDataAsset : UDataAsset {
	int32_t PlayerLevel; // 0x30(0x04)
	bool OverrideGearStatWithExpected; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	struct FGearHeadSlotName HeadGear; // 0x38(0x10)
	struct FName HeadGearTrait; // 0x48(0x08)
	int32_t HeadUpgrades; // 0x50(0x04)
	int32_t HeadStatOverride; // 0x54(0x04)
	struct FGearBackSlotName BackGear; // 0x58(0x10)
	struct FName BackGearTrait; // 0x68(0x08)
	int32_t BackUpgrades; // 0x70(0x04)
	int32_t BackStatOverride; // 0x74(0x04)
	struct FGearOutfitSlotName OutfitGear; // 0x78(0x10)
	struct FName OutfitGearTrait; // 0x88(0x08)
	int32_t OutfitUpgrades; // 0x90(0x04)
	int32_t OutfitStatOverride; // 0x94(0x04)
	struct FGearNeckSlotName NeckGear; // 0x98(0x10)
	struct FName NeckGearTrait; // 0xa8(0x08)
	int32_t NeckUpgrades; // 0xb0(0x04)
	int32_t NeckStatOverride; // 0xb4(0x04)
	struct FGearHandSlotName HandGear; // 0xb8(0x10)
	struct FName HandGearTrait; // 0xc8(0x08)
	int32_t HandUpgrades; // 0xd0(0x04)
	int32_t HandStatOverride; // 0xd4(0x04)
	struct FGearFaceSlotName FaceGear; // 0xd8(0x10)
	struct FName FaceGearTrait; // 0xe8(0x08)
	int32_t FaceUpgrades; // 0xf0(0x04)
	int32_t FaceStatOverride; // 0xf4(0x04)
	struct TArray<struct FItemInput> ItemsToAdd; // 0xf8(0x10)
	struct TArray<struct FName> Talents; // 0x108(0x10)
	struct TArray<struct FSpellDiamondInput> SpellsToSlot; // 0x118(0x10)
	struct TArray<struct FLockChange> LocksToChange; // 0x128(0x10)
};

// Class Phoenix.PlaySceneRigCinematic
// Size: 0x1f8 (Inherited: 0x28)
struct UPlaySceneRigCinematic : UObject {
	char pad_28[0x48]; // 0x28(0x48)
	struct UCinematicBatch* CurrentCinematicBatch; // 0x70(0x08)
	struct UCinematicBatchHUD* CurrentCinematicBatchHUD; // 0x78(0x08)
	char pad_80[0x168]; // 0x80(0x168)
	struct TArray<struct UCinematicBatch*> CinematicBatches; // 0x1e8(0x10)

	void PlayAllCinematicBatchJobs(struct TArray<struct FString> InCinematicBatchPaths); // Function Phoenix.PlaySceneRigCinematic.PlayAllCinematicBatchJobs // (Final|Native|Public|BlueprintCallable) // @ game+0x3400330
};

// Class Phoenix.POI_MobilityChoice
// Size: 0x30 (Inherited: 0x28)
struct UPOI_MobilityChoice : UNPC_MobilityChoice {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Phoenix.OrientToComponent
// Size: 0x220 (Inherited: 0x220)
struct UOrientToComponent : USceneComponent {
	bool bValidTarget; // 0x218(0x01)

	void ForceUpdate(bool& bSuccess); // Function Phoenix.OrientToComponent.ForceUpdate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x33fef80
};

// Class Phoenix.OrientToAbsoluteComponent
// Size: 0x240 (Inherited: 0x220)
struct UOrientToAbsoluteComponent : UOrientToComponent {
	struct FRotator WorldRotation; // 0x220(0x0c)
	struct FOrientToSlerp Smoothing; // 0x22c(0x0c)
	char pad_238[0x8]; // 0x238(0x08)
};

// Class Phoenix.PointAtComponent
// Size: 0x220 (Inherited: 0x220)
struct UPointAtComponent : UOrientToComponent {
};

// Class Phoenix.PointAtActorBaseComponent
// Size: 0x250 (Inherited: 0x220)
struct UPointAtActorBaseComponent : UPointAtComponent {
	struct FName Socket; // 0x220(0x08)
	struct FVector LocalOffset; // 0x228(0x0c)
	bool bIncludeScale; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
	struct FOrientToSlerp Smoothing; // 0x238(0x0c)
	struct TWeakObjectPtr<struct USceneComponent> SocketComponentPtr; // 0x244(0x08)
	char pad_24C[0x4]; // 0x24c(0x04)
};

// Class Phoenix.PointAtActorTargetComponent
// Size: 0x260 (Inherited: 0x250)
struct UPointAtActorTargetComponent : UPointAtActorBaseComponent {
	struct TWeakObjectPtr<struct AActor> Target; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)

	void PointAtActorSetTarget(struct AActor* TargetActor); // Function Phoenix.PointAtActorTargetComponent.PointAtActorSetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x3400530
	void PointAtActorClearTarget(struct AActor* TargetActor); // Function Phoenix.PointAtActorTargetComponent.PointAtActorClearTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x34004a0
};

// Class Phoenix.PointAtPlayerComponent
// Size: 0x260 (Inherited: 0x250)
struct UPointAtPlayerComponent : UPointAtActorBaseComponent {
	int32_t PlayerIndex; // 0x250(0x04)
	char pad_254[0xc]; // 0x254(0x0c)
};

// Class Phoenix.PointAtCameraComponent
// Size: 0x240 (Inherited: 0x220)
struct UPointAtCameraComponent : UPointAtComponent {
	struct FVector LocalOffset; // 0x220(0x0c)
	struct FOrientToSlerp Smoothing; // 0x22c(0x0c)
	char pad_238[0x8]; // 0x238(0x08)
};

// Class Phoenix.PointOfInterestMarkup
// Size: 0x2d8 (Inherited: 0x248)
struct APointOfInterestMarkup : AActor {
	struct FDbSingleColumnInfo PointOfInterestId; // 0x248(0x88)
	float DiscoverDistance; // 0x2d0(0x04)
	enum class EPointOfInterestState State; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)
};

// Class Phoenix.PooledVerticalBox
// Size: 0x188 (Inherited: 0x130)
struct UPooledVerticalBox : UVerticalBox {
	enum class ESlateVisibility DesiredChildVisibility; // 0x130(0x01)
	char pad_131[0x57]; // 0x131(0x57)

	void SetChildWidgetPool(struct TArray<struct UWidget*> ChildWidgets, struct FMargin Padding); // Function Phoenix.PooledVerticalBox.SetChildWidgetPool // (Final|Native|Public|BlueprintCallable) // @ game+0x3401090
	void SetChildActive(struct UWidget* ChildWidget, bool IsActive); // Function Phoenix.PooledVerticalBox.SetChildActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3400fc0
	bool IsChildAvailable(struct UWidget* ChildWidget); // Function Phoenix.PooledVerticalBox.IsChildAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ff7e0
	bool IsChildActive(struct UWidget* ChildWidget); // Function Phoenix.PooledVerticalBox.IsChildActive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ff740
	struct UWidget* GetNextAvailableChild(); // Function Phoenix.PooledVerticalBox.GetNextAvailableChild // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ff2f0
};

// Class Phoenix.PopoutWidget
// Size: 0x270 (Inherited: 0x268)
struct UPopoutWidget : UUserWidget {
	struct UPhoenixTextBlock* PopoutWidgetTEST; // 0x268(0x08)

	void OnSynchronizeProperties(); // Function Phoenix.PopoutWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PopulationConfigData
// Size: 0x90 (Inherited: 0x30)
struct UPopulationConfigData : UDataAsset {
	struct TMap<struct FName, struct UAblAbility*> ApparateMap; // 0x30(0x50)
	struct TArray<struct UMultiFX2_Base*> Effects; // 0x80(0x10)
};

// Class Phoenix.PopulationManager
// Size: 0x940 (Inherited: 0xa8)
struct UPopulationManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x880]; // 0xa8(0x880)
	struct UObject* PreloadedSocialReasoningClass; // 0x928(0x08)
	struct UPopulationConfigData* ApparateAbilityMapping; // 0x930(0x08)
	char pad_938[0x8]; // 0x938(0x08)

	bool UpdateLocationSchedule(struct FName inScheduleKey, struct FName inActivityTypeID, bool inActivate, bool inHideImmediatelyOnDeactivate); // Function Phoenix.PopulationManager.UpdateLocationSchedule // (Final|Native|Public|BlueprintCallable) // @ game+0x3401710
	void TriggerUpdate(struct UScheduledEntity* InScheduledEntity); // Function Phoenix.PopulationManager.TriggerUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x3401680
	bool StartSettingCollisionResponseOnSE(struct AActor* InActor, enum class ECollisionResponse InCollisionResponse, enum class ECollisionResponsePriority InPriority, struct UObject* InProvider, struct FName InProviderName); // Function Phoenix.PopulationManager.StartSettingCollisionResponseOnSE // (Final|Native|Public|BlueprintCallable) // @ game+0x34014e0
	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent, enum class ESpawnActorCollisionHandlingMethod inCollisioinMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.PopulationManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x34011d0
	bool ServiceStationWithNPC(struct FString InEntityName, struct UStationComponent* InStationComponent); // Function Phoenix.PopulationManager.ServiceStationWithNPC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3400ee0
	void RequestT4Actor(enum class ETier4Type InT4Type, struct FTransform& InSpawnTransform, struct FDelegate OnCompleted, enum class HouseIds InHouse, bool InAllowFemale, bool InAllowMale); // Function Phoenix.PopulationManager.RequestT4Actor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3400c90
	struct UScheduledEntity* RequestCustomHobo(struct FString HoboName, struct FVector& InLocation, bool InIsMale); // Function Phoenix.PopulationManager.RequestCustomHobo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3400b50
	void RequestCachedCharacter(struct FName InCharacterID, struct FName InWorldID); // Function Phoenix.PopulationManager.RequestCachedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x3400a80
	void RemoveCachedCharacter(struct FName InCharacterID, struct FName InWorldID); // Function Phoenix.PopulationManager.RemoveCachedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x34009b0
	void ReleaseT4Actor(struct ATier4_Actor* InT4Actor); // Function Phoenix.PopulationManager.ReleaseT4Actor // (Final|Native|Public|BlueprintCallable) // @ game+0x3400920
	void ReleaseHoboAndEndPrecaching(struct UScheduledEntity* InScheduledEntity, bool InDestroyImmediate, bool bInIgnoreVisibilityChecks, bool bInIgnoreWanderOnRelease, enum class ESEPrecacheFleshPriority InPriority, struct UObject* InCaller); // Function Phoenix.PopulationManager.ReleaseHoboAndEndPrecaching // (Final|Native|Public|BlueprintCallable) // @ game+0x3400730
	void ReleaseHobo(struct UScheduledEntity* InScheduledEntity, bool InDestroyImmediate, bool InIgnoreVisibilityChecks, bool bInIgnoreWanderOnRelease); // Function Phoenix.PopulationManager.ReleaseHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x34005c0
	bool PlaceScheduledEntityBP(struct FString EntityName, struct FTransform& InTransform); // Function Phoenix.PopulationManager.PlaceScheduledEntityBP // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3400200
	bool PerformTask_WaitForPlayerActor(struct AActor* InActor, float InLocation); // Function Phoenix.PopulationManager.PerformTask_WaitForPlayerActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3400130
	bool PerformTask_WaitForPlayer(struct FString InName, float InDistance); // Function Phoenix.PopulationManager.PerformTask_WaitForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x3400030
	bool PerformTask_TeleportToLocation(struct FString InName); // Function Phoenix.PopulationManager.PerformTask_TeleportToLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x33fff80
	bool PerformTask_MoveToLocationActor(struct AActor* InActor, struct FVector& InLocation, float InForcedSpeed); // Function Phoenix.PopulationManager.PerformTask_MoveToLocationActor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33ffe50
	bool PerformTask_MoveToLocation(struct FString InName, struct FVector& InLocation, float InForcedSpeed); // Function Phoenix.PopulationManager.PerformTask_MoveToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33ffd10
	void OnStartOfFirstDay(); // Function Phoenix.PopulationManager.OnStartOfFirstDay // (Final|Native|Private) // @ game+0x33ffcf0
	void OnFleshDestroyed(struct AActor* InActor, struct UScheduledEntity* InScheduledEntity); // Function Phoenix.PopulationManager.OnFleshDestroyed // (Final|Native|Private) // @ game+0x33ffc20
	void OnFleshCreated(struct AActor* InActor, struct UScheduledEntity* InScheduledEntity); // Function Phoenix.PopulationManager.OnFleshCreated // (Final|Native|Private) // @ game+0x33ffb50
	bool JoinStation(struct UObject* InJoiningObject, struct FStationQueryData& StationData, float InDuration, bool OverwritePreviousGoal); // Function Phoenix.PopulationManager.JoinStation // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ff9b0
	bool IsScheduledEntityBP(struct AActor* InActor); // Function Phoenix.PopulationManager.IsScheduledEntityBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ff920
	bool IsAttendingActivityName(struct FString InName, struct FString InActivityName); // Function Phoenix.PopulationManager.IsAttendingActivityName // (Final|Native|Public|BlueprintCallable) // @ game+0x33ff640
	bool IsAttendingActivityActor(struct FString InActivityName, struct AActor* InActor); // Function Phoenix.PopulationManager.IsAttendingActivityActor // (Final|Native|Public|BlueprintCallable) // @ game+0x33ff550
	struct UScheduledEntity* GetScheduledEntityFromName(struct FString EntityName); // Function Phoenix.PopulationManager.GetScheduledEntityFromName // (Final|Native|Public|BlueprintCallable) // @ game+0x33ff3f0
	struct UScheduledEntity* GetScheduledEntityFromActor(struct AActor* InActor, bool bAssertIfNotFound); // Function Phoenix.PopulationManager.GetScheduledEntityFromActor // (Final|Native|Public|BlueprintCallable) // @ game+0x33ff320
	struct FString GetCharacterFromDatabase(struct FDatabaseName DatabaseName); // Function Phoenix.PopulationManager.GetCharacterFromDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x33ff200
	struct AActor* GetActorFromEntityNameBP(struct FString& EntityName, bool bInCanLookInCache); // Function Phoenix.PopulationManager.GetActorFromEntityNameBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x33ff100
	struct UPopulationManager* Get(); // Function Phoenix.PopulationManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33ff0d0
	void FinishSettingCollisionResponseOnSE(struct AActor* InActor, enum class ECollisionResponsePriority InPriority, struct UObject* InProvider, struct FName InProviderName); // Function Phoenix.PopulationManager.FinishSettingCollisionResponseOnSE // (Final|Native|Public|BlueprintCallable) // @ game+0x33fee20
	void EnableSeatFillers(bool inActivate); // Function Phoenix.PopulationManager.EnableSeatFillers // (Final|Native|Public|BlueprintCallable) // @ game+0x33fed90
	bool EnableScheduling(struct FString InEntityName, bool InEnable); // Function Phoenix.PopulationManager.EnableScheduling // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33fecb0
	bool EnableDistanceBasedLOD(struct FString InEntityName, bool InEnable); // Function Phoenix.PopulationManager.EnableDistanceBasedLOD // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33febd0
	bool CreateScheduleAtLocationWithKey(struct FVector& InLocation, struct FString InKey); // Function Phoenix.PopulationManager.CreateScheduleAtLocationWithKey // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x33feac0
	bool CreateItemAsScheduledEntity(struct FString InItemID); // Function Phoenix.PopulationManager.CreateItemAsScheduledEntity // (Native|Public) // @ game+0x33a59c0
	bool BroadCastScheduleKey(struct FString InKey, bool InTemporary); // Function Phoenix.PopulationManager.BroadCastScheduleKey // (Final|Native|Public|BlueprintCallable) // @ game+0x33fe9a0
};

// Class Phoenix.PopupScreen
// Size: 0x3c0 (Inherited: 0x370)
struct UPopupScreen : UScreen {
	struct FMulticastInlineDelegate PopupButtonPressCompletedEvent; // 0x370(0x10)
	struct FMulticastInlineDelegate PopupRemovedEvent; // 0x380(0x10)
	struct FMulticastInlineDelegate PopupClosedEvent; // 0x390(0x10)
	int32_t PopupID; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct TArray<struct FInputActionHoldInfo> CachedCompletionActions; // 0x3a8(0x10)
	bool bCachedUsesWaitIndicator; // 0x3b8(0x01)
	bool bPausedTheGame; // 0x3b9(0x01)
	bool bAutoCloseOnButtonPress; // 0x3ba(0x01)
	bool bPopupClosedEventSent; // 0x3bb(0x01)
	char pad_3BC[0x4]; // 0x3bc(0x04)

	void SetPopupUsesWaitIndicator(bool bUsesWaitIndicator); // Function Phoenix.PopupScreen.SetPopupUsesWaitIndicator // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetPopupTitle(struct FString TitleString); // Function Phoenix.PopupScreen.SetPopupTitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetPopupLegendItems(struct TArray<struct FLegendItemData>& LegendItems); // Function Phoenix.PopupScreen.SetPopupLegendItems // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetPopupDescription(struct FString DescriptionString, bool isTranslated); // Function Phoenix.PopupScreen.SetPopupDescription // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetPopupContentWidget(struct UUserWidget* ContentWidget); // Function Phoenix.PopupScreen.SetPopupContentWidget // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetPopupCompletionActions(struct TArray<struct FInputActionHoldInfo>& CompletionActions); // Function Phoenix.PopupScreen.SetPopupCompletionActions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetCachedUsesWaitIndicator(bool bUsesWaitIndicator); // Function Phoenix.PopupScreen.SetCachedUsesWaitIndicator // (Final|Native|Public) // @ game+0x3404ad0
	void SetCachedCompletionActions(struct TArray<struct FInputActionHoldInfo>& CompletionActions); // Function Phoenix.PopupScreen.SetCachedCompletionActions // (Final|Native|Public|HasOutParms) // @ game+0x3404a20
	void SetAutoCloseOnButtonPress(bool bInAutoCloseOnButtonPress); // Function Phoenix.PopupScreen.SetAutoCloseOnButtonPress // (Final|Native|Public) // @ game+0x3404990
	void PopupRemovedEvent__DelegateSignature(); // DelegateFunction Phoenix.PopupScreen.PopupRemovedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PopupButtonPressCompleted(int32_t CompletionActionIndex); // Function Phoenix.PopupScreen.PopupButtonPressCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x34048e0
	void PopupButtonEvent__DelegateSignature(struct UPopupScreen* PopupScreen, int32_t CompletionActionIndex); // DelegateFunction Phoenix.PopupScreen.PopupButtonEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OpenPopup(bool bPauseTheGame); // Function Phoenix.PopupScreen.OpenPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x3404830
	void OnPopupOutroEnded(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.PopupScreen.OnPopupOutroEnded // (Final|Native|Public) // @ game+0x3404760
	int32_t GetPopupID(); // Function Phoenix.PopupScreen.GetPopupID // (Final|Native|Public|BlueprintCallable) // @ game+0x34040c0
	void ClosePopup(int32_t CompletionActionIndex); // Function Phoenix.PopupScreen.ClosePopup // (Final|Native|Public|BlueprintCallable) // @ game+0x3403df0
};

// Class Phoenix.Portkey
// Size: 0x3f0 (Inherited: 0x248)
struct APortkey : AActor {
	char pad_248[0x10]; // 0x248(0x10)
	struct UParticleSystemComponent* ParticleSystemComponent; // 0x258(0x08)
	struct AActor* ActorToTeleport; // 0x260(0x08)
	struct UParticleSystem* ExitEmitter; // 0x268(0x08)
	struct UParticleSystem* EntryEmitter; // 0x270(0x08)
	struct UParticleSystem* BeaconEmitter; // 0x278(0x08)
	bool UseBeaconEmitter; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct ATargetPoint* TargetA; // 0x288(0x08)
	struct ATargetPoint* TargetB; // 0x290(0x08)
	struct FDbSingleColumnInfo FastTravelDestinationA; // 0x298(0x88)
	struct FDbSingleColumnInfo FastTravelDestinationB; // 0x320(0x88)
	bool AtA; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float EjectForce; // 0x3ac(0x04)
	float EntryCamDelay; // 0x3b0(0x04)
	float ExitCamDelay; // 0x3b4(0x04)
	struct FRotator EnterCameraRotation; // 0x3b8(0x0c)
	struct FRotator ExitCameraRotation; // 0x3c4(0x0c)
	bool UseAdvancedExit; // 0x3d0(0x01)
	bool OnGround; // 0x3d1(0x01)
	char pad_3D2[0x2]; // 0x3d2(0x02)
	float OptimalDistance; // 0x3d4(0x04)
	char pad_3D8[0x18]; // 0x3d8(0x18)

	void Transport(); // Function Phoenix.Portkey.Transport // (Final|Native|Public|BlueprintCallable) // @ game+0x3404e20
	void Touch(); // Function Phoenix.Portkey.Touch // (Final|Native|Public|BlueprintCallable) // @ game+0x3404e00
	void PlacePlayerOptimally(); // Function Phoenix.Portkey.PlacePlayerOptimally // (Final|Native|Public|BlueprintCallable) // @ game+0x34048c0
	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.Portkey.Interact // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e0b20
	void Handle_TeleportStart(); // Function Phoenix.Portkey.Handle_TeleportStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_TeleportEnd(); // Function Phoenix.Portkey.Handle_TeleportEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_ActivateExitCamera(); // Function Phoenix.Portkey.Handle_ActivateExitCamera // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Handle_ActivateEnterCamera(); // Function Phoenix.Portkey.Handle_ActivateEnterCamera // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct ATargetPoint* GetTarget(); // Function Phoenix.Portkey.GetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x34040f0
	void FindNonBlockingCameraLocation(struct FVector& Target1, struct FVector& Target2, struct FVector& CameraLocation, float CameraDistance, float CameraHeight); // Function Phoenix.Portkey.FindNonBlockingCameraLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3403ee0
	void Drop(); // Function Phoenix.Portkey.Drop // (Final|Native|Public|BlueprintCallable) // @ game+0x3403e80
	void ActivateExitCamera(); // Function Phoenix.Portkey.ActivateExitCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x3403dd0
	void ActivateEnterCamera(); // Function Phoenix.Portkey.ActivateEnterCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x3403db0
};

// Class Phoenix.Portkey_Base
// Size: 0x2c0 (Inherited: 0x248)
struct APortkey_Base : AActor {
	bool bReturnToBase; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FTransform TargetTrans; // 0x250(0x30)
	struct FTransform PlayerTrans; // 0x280(0x30)
	struct APortkey_Object* PortkeyObject; // 0x2b0(0x08)
	bool bStartingAtBase; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	void PortkeyTeleport(); // Function Phoenix.Portkey_Base.PortkeyTeleport // (Final|Native|Public|BlueprintCallable) // @ game+0x3404970
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.Portkey_Base.OnOverlapEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x3404600
};

// Class Phoenix.Portkey_Object
// Size: 0x320 (Inherited: 0x308)
struct APortkey_Object : APickupTool {
	struct AActor* ActorOwner; // 0x308(0x08)
	struct UStaticMesh* Portkey_Mesh; // 0x310(0x08)
	struct APortkey_Base* PortkeyBase; // 0x318(0x08)

	void EndTeleport(); // Function Phoenix.Portkey_Object.EndTeleport // (Final|Native|Public|BlueprintCallable) // @ game+0x3403ec0
};

// Class Phoenix.PortkeyInventoryItemTool
// Size: 0x4b8 (Inherited: 0x430)
struct APortkeyInventoryItemTool : AInventoryItemTool {
	struct FDbSingleColumnInfo TargetFastTravelLocation; // 0x430(0x88)

	void Transport(); // Function Phoenix.PortkeyInventoryItemTool.Transport // (Final|Native|Public|BlueprintCallable) // @ game+0x3404e40
};

// Class Phoenix.PortraitCallOutAttachComponent
// Size: 0x230 (Inherited: 0x220)
struct UPortraitCallOutAttachComponent : USceneComponent {
	char pad_220[0x10]; // 0x220(0x10)
};

// Class Phoenix.PortraitPaintingProp
// Size: 0xa0 (Inherited: 0x28)
struct UPortraitPaintingProp : UObject {
	struct TWeakObjectPtr<struct AActor> Prop; // 0x28(0x08)
	struct TWeakObjectPtr<struct APortraitPaintingActor> InPortrait; // 0x30(0x08)
	struct UMaterialPermuterLoadingBundle* MaterialBundle; // 0x38(0x08)
	struct UMaterialSwap* MaterialSwap; // 0x40(0x08)
	struct FPortraitPaintingComponentStates ComponentStates; // 0x48(0x50)
	bool bIsHidden; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.PortraitPaintingEntityComponent
// Size: 0x190 (Inherited: 0xc8)
struct UPortraitPaintingEntityComponent : UActorComponent {
	struct TArray<struct TWeakObjectPtr<struct APortraitPaintingActor>> PortraitActors; // 0xc8(0x10)
	struct TWeakObjectPtr<struct APortraitPaintingActor> InPortrait; // 0xd8(0x08)
	struct TArray<struct UPortraitPaintingProp*> Props; // 0xe0(0x10)
	struct UMaterialPermuterLoadingBundle* MaterialBundle; // 0xf0(0x08)
	struct UMaterialSwap* MaterialSwap; // 0xf8(0x08)
	struct FTransform OriginalTransform; // 0x100(0x30)
	struct FPortraitPaintingComponentStates ComponentStates; // 0x130(0x50)
	struct TWeakObjectPtr<struct USceneComponent> AttachedTo; // 0x180(0x08)
	char bOverrodeMeshStates : 1; // 0x188(0x01)
	char bOverrodeMovementMode : 1; // 0x188(0x01)
	char bNudgedAudio : 1; // 0x188(0x01)
	char bNudgedCognitionStimuliSourceComponent : 1; // 0x188(0x01)
	char bAddedDoNotInvestigate : 1; // 0x188(0x01)
	char bAddedNoWeatherSwap : 1; // 0x188(0x01)
	char pad_188_6 : 2; // 0x188(0x01)
	char pad_189[0x7]; // 0x189(0x07)

	void OnFleshDestroyed(struct AActor* Actor, struct UScheduledEntity* entity); // Function Phoenix.PortraitPaintingEntityComponent.OnFleshDestroyed // (Final|Native|Protected) // @ game+0x3404240
	void OnCharacterAddOnMeshesChanged(struct AActor* Actor); // Function Phoenix.PortraitPaintingEntityComponent.OnCharacterAddOnMeshesChanged // (Final|Native|Protected) // @ game+0x3404120
};

// Class Phoenix.PortraitPaintingActor
// Size: 0x398 (Inherited: 0x248)
struct APortraitPaintingActor : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct FString EntityName; // 0x250(0x10)
	struct FString SecondaryEntityName; // 0x260(0x10)
	float PortraitActorRange; // 0x270(0x04)
	struct FVector CalloutOffset; // 0x274(0x0c)
	float CameraFarPlane; // 0x280(0x04)
	struct FPortraitPaintingComponentState ComponentState; // 0x284(0x08)
	struct FName EntityCustomMeshStates; // 0x28c(0x08)
	enum class EMaterialPermuterLoadingBundleAndSwapType MainPortraitSwapType; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	struct UStaticMeshComponent* PaintingPlane; // 0x298(0x08)
	struct UStaticMeshComponent* Frame; // 0x2a0(0x08)
	struct USceneComponent* CustomLighting; // 0x2a8(0x08)
	struct UBillboardComponent* Light0; // 0x2b0(0x08)
	struct UBillboardComponent* Light1; // 0x2b8(0x08)
	struct UBillboardComponent* Light2; // 0x2c0(0x08)
	struct UCameraComponent* Camera; // 0x2c8(0x08)
	struct FName BeaconableObjectID; // 0x2d0(0x08)
	struct UTexture* BackgroundTexture; // 0x2d8(0x08)
	struct UTexture* FrameMaskTexture; // 0x2e0(0x08)
	struct UTexture* CanvasNormalTexture; // 0x2e8(0x08)
	struct UTexture* CanvasRoughnessTexture; // 0x2f0(0x08)
	float NormalIntensity; // 0x2f8(0x04)
	float TextureTiling; // 0x2fc(0x04)
	float FlattenPercent; // 0x300(0x04)
	float RotationOffsetInDegrees; // 0x304(0x04)
	float SkinNormalSoftness; // 0x308(0x04)
	float SkinSpecularScale; // 0x30c(0x04)
	float SkinScatterScale; // 0x310(0x04)
	struct FLinearColor SkinSubsurfaceColor; // 0x314(0x10)
	float BottomFadeHeight; // 0x324(0x04)
	float BottomFadeStrength; // 0x328(0x04)
	struct FLinearColor LightingPointColor_1; // 0x32c(0x10)
	float LightingPointIntensity_1; // 0x33c(0x04)
	struct FLinearColor LightingPointColor_2; // 0x340(0x10)
	float LightingPointIntensity_2; // 0x350(0x04)
	struct FLinearColor LightingPointColor_3; // 0x354(0x10)
	float LightingPointIntensity_3; // 0x364(0x04)
	struct UMaterialPermuterLoadingBundleAndSwap* MainSwap; // 0x368(0x08)
	bool bReadyForEntities; // 0x370(0x01)
	char pad_371[0x7]; // 0x371(0x07)
	struct FPortraitPaintingEntities Entities; // 0x378(0x10)
	struct UMaterialInstanceDynamic* PaintingMaterial; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)

	void SetPaintingFrameMask(struct UTexture* PaintingFrameMask); // Function Phoenix.PortraitPaintingActor.SetPaintingFrameMask // (Final|Native|Public|BlueprintCallable) // @ game+0x3404cd0
	void SetPaintingBackground(struct UTexture* PaintingBackground); // Function Phoenix.PortraitPaintingActor.SetPaintingBackground // (Final|Native|Public|BlueprintCallable) // @ game+0x3404c40
	void OnFleshLoaded(struct AActor* Actor, struct UScheduledEntity* ScheduledEntity); // Function Phoenix.PortraitPaintingActor.OnFleshLoaded // (Final|Native|Protected) // @ game+0x3404310
	void OnCharacterLoadComplete(struct AActor* Actor); // Function Phoenix.PortraitPaintingActor.OnCharacterLoadComplete // (Final|Native|Protected) // @ game+0x34041b0
};

// Class Phoenix.ProgressBarWidget
// Size: 0x298 (Inherited: 0x268)
struct UProgressBarWidget : UUserWidget {
	struct FText LabelText; // 0x268(0x18)
	float ProgressPct; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UPhoenixTextBlock* Label; // 0x288(0x08)
	struct UProgressBar* Progress; // 0x290(0x08)

	void SetProgress(float NewProgress); // Function Phoenix.ProgressBarWidget.SetProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x3404d60
	void SetLabel(struct FText NewLabel); // Function Phoenix.ProgressBarWidget.SetLabel // (Final|Native|Public|BlueprintCallable) // @ game+0x3404b60
	void OnSynchronizeProperties(); // Function Phoenix.ProgressBarWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.PropOwl
// Size: 0x398 (Inherited: 0x268)
struct APropOwl : APhoenixBudgetedActor {
	char pad_268[0x8]; // 0x268(0x08)
	struct UCapsuleComponent* CapsuleComponent; // 0x270(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x278(0x08)
	struct UAnimationComponent* AnimationComponent; // 0x280(0x08)
	bool EnableSpellReaction; // 0x288(0x01)
	bool EnableImpactReaction; // 0x289(0x01)
	char pad_28A[0x2]; // 0x28a(0x02)
	float ImpactReactionRange; // 0x28c(0x04)
	bool EnableLookAt; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float MaxLookAtDistance; // 0x294(0x04)
	float MaxLookAtAngle; // 0x298(0x04)
	bool CanSleep; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float SleepingProbability; // 0x2a0(0x04)
	float MinStanceSwitchTime; // 0x2a4(0x04)
	struct TSet<struct FGameplayTag> IgnoredMunitionTags; // 0x2a8(0x50)
	struct TSet<struct FName> IgnoredSpellNames; // 0x2f8(0x50)
	struct FMasterTickThrottlerSettings TickThrottlerSettings; // 0x348(0x28)
	struct UPropOwl_AnimInstance* AnimInstance; // 0x370(0x08)
	char pad_378[0x20]; // 0x378(0x20)

	void StartReaction(); // Function Phoenix.PropOwl.StartReaction // (Final|Native|Protected|BlueprintCallable) // @ game+0x3404de0
	void OnHitBySpell(struct ASpellTool* SpellTool, struct AActor* InInstigator, struct USpellToolRecord* SpellToolRecord, struct FName SpellType, struct FHitResult& Hit, struct FVector& ImpactDirection); // Function Phoenix.PropOwl.OnHitBySpell // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x34043e0
	void EndReaction(); // Function Phoenix.PropOwl.EndReaction // (Final|Native|Private) // @ game+0x3403ea0
};

// Class Phoenix.PropOwl_AnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UPropOwl_AnimInstance : UAnimInstance {
	enum class ECreatureStance DesiredStance; // 0x2b8(0x01)
	enum class ECreatureStance InitStance; // 0x2b9(0x01)
	bool ReactToSpell; // 0x2ba(0x01)
};

// Class Phoenix.DeflectData
// Size: 0x1b0 (Inherited: 0x28)
struct UDeflectData : UObject {
	char pad_28[0x188]; // 0x28(0x188)
};

// Class Phoenix.ProtegoSpellTool
// Size: 0xda8 (Inherited: 0x958)
struct AProtegoSpellTool : AChannelingSpellTool {
	bool bShowDebug; // 0x958(0x01)
	bool bAllowTick; // 0x959(0x01)
	char pad_95A[0x6]; // 0x95a(0x06)
	struct TArray<struct FProtegoLevelData> LevelDataArray; // 0x960(0x10)
	struct AActor* ProtegoActorClass; // 0x970(0x08)
	struct TArray<struct ASpellTool*> IgnoreSpellList; // 0x978(0x10)
	float MinimumObjectVelocity; // 0x988(0x04)
	float DoubleHitIgnoreTime; // 0x98c(0x04)
	struct TArray<struct UMultiFX2_Base*> ProtegoActivateFX2; // 0x990(0x10)
	struct TArray<struct UMultiFX2_Base*> ProtegoMuzzleLoopFX2; // 0x9a0(0x10)
	float ProtegoLoopFxDelay; // 0x9b0(0x04)
	float ProtegoLoopFxDelayAfterHit; // 0x9b4(0x04)
	float MinActiveTimeToPlayDeactivate; // 0x9b8(0x04)
	char pad_9BC[0x4]; // 0x9bc(0x04)
	struct TArray<struct UMultiFX2_Base*> ProtegoLoopFX2; // 0x9c0(0x10)
	struct TArray<struct UMultiFX2_Base*> ProtegoWeakenFX2; // 0x9d0(0x10)
	struct TMap<struct AMunitionType_Base*, struct FMultiFX> ProtegoSustainedLoopFXMap; // 0x9e0(0x50)
	struct TMap<struct AMunitionType_Base*, struct FMultiFX> ProtegoSustainedEndFXMap; // 0xa30(0x50)
	struct TArray<struct UMultiFX2_Base*> ProtegoDeactivateFX2; // 0xa80(0x10)
	struct TArray<struct FProtegoEffectsData> DWShieldEffectData; // 0xa90(0x10)
	struct TArray<struct UMultiFX2_Base*> ShieldHitFX2; // 0xaa0(0x10)
	struct FGameplayTag ProtegoFaceOriginatorTag; // 0xab0(0x08)
	float NoDeactivateTime; // 0xab8(0x04)
	float SustainedBlastEndTime; // 0xabc(0x04)
	int32_t PerfectBounceBackPercent; // 0xac0(0x04)
	int32_t PerfectTargetEnemyPercent; // 0xac4(0x04)
	int32_t PerfectTargetObjectPercent; // 0xac8(0x04)
	int32_t PerfectRandomPercent; // 0xacc(0x04)
	struct FGameplayTagContainer PerfectMunitionTagContainer; // 0xad0(0x20)
	struct UInteractionArchitectAsset* PerfectMunitionDataAsset; // 0xaf0(0x08)
	struct FGameplayTagContainer PerfectAOEMunitionTagContainer; // 0xaf8(0x20)
	struct UInteractionArchitectAsset* PerfectAOEMunitionDataAsset; // 0xb18(0x08)
	struct TArray<struct UMultiFX2_Base*> PerfectFX2; // 0xb20(0x10)
	struct UAkAudioEvent* PerfectMotionFX; // 0xb30(0x08)
	struct UCurveFloat* PerfectTimeDilationCurve; // 0xb38(0x08)
	float PerfectDeflectDelay; // 0xb40(0x04)
	int32_t NormalBounceBackPercent; // 0xb44(0x04)
	int32_t NormalTargetEnemyPercent; // 0xb48(0x04)
	int32_t NormalTargetObjectPercent; // 0xb4c(0x04)
	int32_t NormalRandomPercent; // 0xb50(0x04)
	char pad_B54[0x4]; // 0xb54(0x04)
	struct FGameplayTagContainer NormalMunitionTagContainer; // 0xb58(0x20)
	struct UInteractionArchitectAsset* NormalMunitionDataAsset; // 0xb78(0x08)
	struct UCurveFloat* NormalTimeDilationCurve; // 0xb80(0x08)
	float NormalDeflectDelay; // 0xb88(0x04)
	char pad_B8C[0x4]; // 0xb8c(0x04)
	struct TArray<struct UMultiFX2_Base*> NormalFX2; // 0xb90(0x10)
	struct UAkAudioEvent* NormalMotionFX; // 0xba0(0x08)
	struct TArray<struct UMultiFX2_Base*> FailedFX2; // 0xba8(0x10)
	float DeflectDistance; // 0xbb8(0x04)
	float DeflectHalfAngleXY; // 0xbbc(0x04)
	float DeflectLaunchAngle; // 0xbc0(0x04)
	float DeflectDelay; // 0xbc4(0x04)
	float ObjectDamageRandomBlock; // 0xbc8(0x04)
	float DestroyedObjectBlockForce; // 0xbcc(0x04)
	float PerkIncreasedDeflectionScale; // 0xbd0(0x04)
	float PerkWeakessTime; // 0xbd4(0x04)
	struct TArray<struct UMultiFX2_Base*> DeflectedMunitionFX2; // 0xbd8(0x10)
	struct UAkAudioEvent* DeflectedMunitionMotionFX; // 0xbe8(0x08)
	struct UAkAudioEvent* DeflectedCharacterMotionFX; // 0xbf0(0x08)
	float DeflectedMaxCharacterDamage; // 0xbf8(0x04)
	float DeflectedMaxObjectDamage; // 0xbfc(0x04)
	float ShieldBreakDamageScale; // 0xc00(0x04)
	struct FGameplayTag ShieldBreakTag; // 0xc04(0x08)
	char pad_C0C[0x4]; // 0xc0c(0x04)
	struct UCameraShakeBase* CameraShake; // 0xc10(0x08)
	float InnerRadius; // 0xc18(0x04)
	float OuterRadius; // 0xc1c(0x04)
	float Falloff; // 0xc20(0x04)
	char bOrientShakeTowardsEpicenter : 1; // 0xc24(0x01)
	char pad_C24_1 : 7; // 0xc24(0x01)
	char pad_C25[0x3]; // 0xc25(0x03)
	float ProtegoMeleeCooldown; // 0xc28(0x04)
	char pad_C2C[0x4]; // 0xc2c(0x04)
	struct AMunitionType_Base* AOEMunition; // 0xc30(0x08)
	float DisabledProtegoTime; // 0xc38(0x04)
	float InstantKillBounceChance; // 0xc3c(0x04)
	float InstantKillBounceAngle; // 0xc40(0x04)
	float InstantKillBounceAngleVariance; // 0xc44(0x04)
	float InstantKillBounceDeflectionSpeedMultiplier; // 0xc48(0x04)
	char pad_C4C[0x4]; // 0xc4c(0x04)
	struct UAkAudioEvent* InstantKillAkEvent; // 0xc50(0x08)
	float OppugnoObjectSpeed; // 0xc58(0x04)
	float OppugnoObjectMaxWobble; // 0xc5c(0x04)
	float OppugnoObjectAwayRotSpeed; // 0xc60(0x04)
	float OppugnoObjectRandLeftRightAngle; // 0xc64(0x04)
	float OppugnoMinAngle; // 0xc68(0x04)
	float OppugnoMaxAngle; // 0xc6c(0x04)
	struct FMultiFX2Handle LoopDWFX2Handle; // 0xc70(0x08)
	struct FMultiFX2Handle IntensityFXHandle2; // 0xc78(0x08)
	struct FMultiFX2Handle ActivateDWFX2Handle; // 0xc80(0x08)
	struct FMultiFX2Handle WandDWFX2Handle; // 0xc88(0x08)
	struct FMultiFX2Handle ShieldHitFX2Handle; // 0xc90(0x08)
	struct FName ShieldSkinEffectName; // 0xc98(0x08)
	struct AActor* ProtegoActor; // 0xca0(0x08)
	struct AMunitionType_Base* IgnoreMunition; // 0xca8(0x08)
	char pad_CB0[0xf8]; // 0xcb0(0xf8)

	bool WasParryAbilityEventSent(); // Function Phoenix.ProtegoSpellTool.WasParryAbilityEventSent // (Final|Native|Public|BlueprintCallable) // @ game+0x3407e90
	void UpdateShieldEffects(); // Function Phoenix.ProtegoSpellTool.UpdateShieldEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void TurnOnProtegoEffects(bool bInShowActivateEffect, bool bInShowLoopEffect, int32_t InEffectIdx); // Function Phoenix.ProtegoSpellTool.TurnOnProtegoEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x3407c50
	void TurnOffProtegoEffects(bool bInShowDeactivateEffect, int32_t InEffectIdx); // Function Phoenix.ProtegoSpellTool.TurnOffProtegoEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x3407b80
	void StateChanged(bool bInHideShield); // Function Phoenix.ProtegoSpellTool.StateChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x3407af0
	void StartShieldSkinEffects(); // Function Phoenix.ProtegoSpellTool.StartShieldSkinEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StartShieldEffects(); // Function Phoenix.ProtegoSpellTool.StartShieldEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ShutOffProtegoTimerExpired(); // Function Phoenix.ProtegoSpellTool.ShutOffProtegoTimerExpired // (Final|Native|Private) // @ game+0x3407a40
	bool ShouldShieldBeOn(); // Function Phoenix.ProtegoSpellTool.ShouldShieldBeOn // (Final|Native|Public|BlueprintCallable) // @ game+0x3407a20
	void QueueParryTimerExpired(); // Function Phoenix.ProtegoSpellTool.QueueParryTimerExpired // (Final|Native|Private) // @ game+0x3407770
	void ParryWindowStackChanged(int32_t NewValue); // Function Phoenix.ProtegoSpellTool.ParryWindowStackChanged // (Final|Native|Public) // @ game+0x3407540
	void OnDeflectedAttack(struct FDamageResult& DamageResult); // Function Phoenix.ProtegoSpellTool.OnDeflectedAttack // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool IsDisabled(); // Function Phoenix.ProtegoSpellTool.IsDisabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3406c40
	void Hit(struct FHitResult& HitResult, struct AMunitionType_Base* MunitionInstance, struct AActor* HitObject, struct UPrimitiveComponent* OverlappedComp, bool bUnblockable, bool bOverlap, bool bMunitionImpact); // Function Phoenix.ProtegoSpellTool.Hit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34069c0
	void HideProtego(bool bInHide); // Function Phoenix.ProtegoSpellTool.HideProtego // (Final|Native|Public|BlueprintCallable) // @ game+0x3406930
	float GetProtegoShieldIntensityValue(); // Function Phoenix.ProtegoSpellTool.GetProtegoShieldIntensityValue // (Final|Native|Public|BlueprintCallable) // @ game+0x3406900
	struct AActor* GetLastInstigator(); // Function Phoenix.ProtegoSpellTool.GetLastInstigator // (Final|Native|Public|BlueprintCallable) // @ game+0x3406810
	struct AActor* GetAttackingActor(); // Function Phoenix.ProtegoSpellTool.GetAttackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x34067d0
	void EndShieldSkinEffects(); // Function Phoenix.ProtegoSpellTool.EndShieldSkinEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EndShieldEffects(); // Function Phoenix.ProtegoSpellTool.EndShieldEffects // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool CreateLinkToAttackingActor(); // Function Phoenix.ProtegoSpellTool.CreateLinkToAttackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x34067a0
};

// Class Phoenix.ProxFloorBend
// Size: 0x400 (Inherited: 0x248)
struct AProxFloorBend : AActor {
	struct TArray<struct AActor*> Floor; // 0x248(0x10)
	float Radius; // 0x258(0x04)
	float InnerRadius; // 0x25c(0x04)
	float Offset; // 0x260(0x04)
	float BlendTime; // 0x264(0x04)
	float FloorOffset; // 0x268(0x04)
	float ZOffset; // 0x26c(0x04)
	float ZFloorBase; // 0x270(0x04)
	float TraceDistance; // 0x274(0x04)
	char pad_278[0x8]; // 0x278(0x08)
	struct FTransform ProximityOffset; // 0x280(0x30)
	bool bUseProxOffset; // 0x2b0(0x01)
	bool bSetUpOnPlay; // 0x2b1(0x01)
	bool bShowCollisionPlane; // 0x2b2(0x01)
	bool bHardFloorReset; // 0x2b3(0x01)
	float OffsetDis; // 0x2b4(0x04)
	float OffsetMultiplier; // 0x2b8(0x04)
	float BaseHeight; // 0x2bc(0x04)
	float NewFloorModifierX; // 0x2c0(0x04)
	float NewFloorModifierY; // 0x2c4(0x04)
	struct FVector FloorBaseLocation; // 0x2c8(0x0c)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct TArray<struct UPrimitiveComponent*> OverlappedList; // 0x2d8(0x10)
	struct TArray<struct FVector> LocationsList; // 0x2e8(0x10)
	struct UAkAudioEvent* StartAkEvent; // 0x2f8(0x08)
	struct UAkAudioEvent* StopAkEvent; // 0x300(0x08)
	struct UAkAudioEvent* FloorMoveLoopStartAkEvent; // 0x308(0x08)
	struct UAkAudioEvent* FloorMoveLoopStopAkEvent; // 0x310(0x08)
	struct UCurveFloat* FloorCurve; // 0x318(0x08)
	char pad_320[0x98]; // 0x320(0x98)
	enum class ETimelineDirection TimelineDirection; // 0x3b8(0x01)
	char pad_3B9[0x7]; // 0x3b9(0x07)
	struct USceneComponent* SceneComponent; // 0x3c0(0x08)
	struct UStaticMeshComponent* NewFloorComponent; // 0x3c8(0x08)
	struct UAkComponent* AkProxFloorBend; // 0x3d0(0x08)
	struct UBoxComponent* TriggerBox; // 0x3d8(0x08)
	struct ACharacter* PlayerCharacter; // 0x3e0(0x08)
	struct AActor* ComparisonActor; // 0x3e8(0x08)
	char pad_3F0[0x10]; // 0x3f0(0x10)

	void UpdateRTPCValues(); // Function Phoenix.ProxFloorBend.UpdateRTPCValues // (Final|Native|Private) // @ game+0x3407e70
	void UpdateProxFloorBend(float Blend); // Function Phoenix.ProxFloorBend.UpdateProxFloorBend // (Final|Native|Private) // @ game+0x3407df0
	void UpdateCollisionResponse(float Blend); // Function Phoenix.ProxFloorBend.UpdateCollisionResponse // (Final|Native|Private) // @ game+0x3407d70
	void SetFloorLocation(struct UPrimitiveComponent* Obj, float Blend, struct FVector BaseLOC, struct FVector CompareLocation); // Function Phoenix.ProxFloorBend.SetFloorLocation // (Final|Native|Private|HasDefaults) // @ game+0x3407880
	void ResetFloor(); // Function Phoenix.ProxFloorBend.ResetFloor // (Final|Native|Protected) // @ game+0x3407790
	bool ProxFloorBendSetUp(struct USceneComponent* i_SceneComponent, struct UStaticMeshComponent* i_NewFloor, struct UAkComponent* i_AkComponent, struct UBoxComponent* i_TriggerBox, struct AActor* i_ComparisonActor); // Function Phoenix.ProxFloorBend.ProxFloorBendSetUp // (Final|Native|Protected|BlueprintCallable) // @ game+0x34075d0
	void OnTimelineFinished(); // Function Phoenix.ProxFloorBend.OnTimelineFinished // (Final|Native|Private) // @ game+0x3407520
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.ProxFloorBend.OnOverlapEnd // (Final|Native|Private) // @ game+0x3407260
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.ProxFloorBend.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x3406e20
};

// Class Phoenix.AIPerformTaskDelay
// Size: 0xf0 (Inherited: 0xe0)
struct UAIPerformTaskDelay : UAIPerformTaskBase {
	float Duration; // 0xd8(0x04)
	char pad_E4[0xc]; // 0xe4(0x0c)

	void OnDelayFinished(); // Function Phoenix.AIPerformTaskDelay.OnDelayFinished // (Final|Native|Private) // @ game+0x3406d30
};

// Class Phoenix.AIPerformTaskMoveToLocation_DEBUG
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskMoveToLocation_DEBUG : UAIPerformTaskBase {
	float MovementSpeed; // 0xd8(0x04)
};

// Class Phoenix.AIPerformTaskRotateTo
// Size: 0xe0 (Inherited: 0xe0)
struct UAIPerformTaskRotateTo : UAIPerformTaskBase {
	float Yaw; // 0xd8(0x04)
	bool bRelative; // 0xdc(0x01)

	void RotateToComplete(enum class EEnemyAIAction InAction, enum class EEnemyAIActionDoneReason InReason); // Function Phoenix.AIPerformTaskRotateTo.RotateToComplete // (Final|Native|Private) // @ game+0x34077b0
};

// Class Phoenix.Puddle
// Size: 0x260 (Inherited: 0x248)
struct APuddle : AActor {
	struct UPhoenixPhysicalMaterial* PhysMat; // 0x248(0x08)
	struct UStaticMeshComponent* Mesh; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)

	void OnEndOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.Puddle.OnEndOverlap // (Final|Native|Protected) // @ game+0x3406d50
	void OnBeginOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.Puddle.OnBeginOverlap // (Final|Native|Protected) // @ game+0x3406c60
};

// Class Phoenix.PuzzleTarget
// Size: 0x318 (Inherited: 0x248)
struct APuzzleTarget : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct UBoxComponent* VolumeComponent; // 0x250(0x08)
	struct UBillboardComponent* TargetComponent; // 0x258(0x08)
	bool bCanComplete; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	int32_t NumActorsToComplete; // 0x264(0x04)
	float MoveSpeed; // 0x268(0x04)
	float RotationSpeed; // 0x26c(0x04)
	float MarginOfError; // 0x270(0x04)
	bool bStopMovingWhenFinished; // 0x274(0x01)
	bool bSnapToTarget; // 0x275(0x01)
	bool bRotateToTarget; // 0x276(0x01)
	bool bCancelMomentum; // 0x277(0x01)
	struct TArray<struct AActor*> ActorTypes; // 0x278(0x10)
	struct TArray<struct AActor*> ActorList; // 0x288(0x10)
	struct TArray<struct UStateEffectComponent*> TerminatePreviousEffects; // 0x298(0x10)
	bool bCancelSpellsOnTargetReached; // 0x2a8(0x01)
	bool bOneAtATime; // 0x2a9(0x01)
	char pad_2AA[0x6]; // 0x2aa(0x06)
	struct FMulticastInlineDelegate OnTargetReached; // 0x2b0(0x10)
	struct FMulticastInlineDelegate OnTargetFinished; // 0x2c0(0x10)
	struct TArray<struct AActor*> MovingActors; // 0x2d0(0x10)
	struct TArray<struct AActor*> TargetActors; // 0x2e0(0x10)
	bool bMoving; // 0x2f0(0x01)
	bool bDoOnce; // 0x2f1(0x01)
	char pad_2F2[0x6]; // 0x2f2(0x06)
	struct TArray<bool> MovingDestReached; // 0x2f8(0x10)
	struct TArray<bool> MovingRotReached; // 0x308(0x10)

	void StartMove(struct AActor* OtherActor); // Function Phoenix.PuzzleTarget.StartMove // (Final|Native|Public) // @ game+0x3407a60
	void OnTargetReached__DelegateSignature(struct AActor* newActor); // DelegateFunction Phoenix.PuzzleTarget.OnTargetReached__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnTargetFinished__DelegateSignature(); // DelegateFunction Phoenix.PuzzleTarget.OnTargetFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.PuzzleTarget.OnOverlapEnd // (Final|Native|Public) // @ game+0x34073c0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.PuzzleTarget.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x3407040
	struct FVector GetNewVelocity(struct UPrimitiveComponent* PrimComp); // Function Phoenix.PuzzleTarget.GetNewVelocity // (Final|Native|Private|HasDefaults) // @ game+0x3406850
};

// Class Phoenix.SublevelTest
// Size: 0x80 (Inherited: 0x28)
struct USublevelTest : UObject {
	char pad_28[0x58]; // 0x28(0x58)

	void LevelUnloaded(); // Function Phoenix.SublevelTest.LevelUnloaded // (Final|Native|Public) // @ game+0x340c0a0
	void LevelLoadFailed(); // Function Phoenix.SublevelTest.LevelLoadFailed // (Final|Native|Public) // @ game+0x340c060
	void LevelLoaded(); // Function Phoenix.SublevelTest.LevelLoaded // (Final|Native|Public) // @ game+0x340c080
};

// Class Phoenix.QuickActionManager
// Size: 0x1b0 (Inherited: 0x28)
struct UQuickActionManager : UObject {
	char pad_28[0x188]; // 0x28(0x188)

	bool ValidateDefaultGroupSelections(int32_t GroupIndex); // Function Phoenix.QuickActionManager.ValidateDefaultGroupSelections // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x340d4d0
	void UseQuickWheelItem(); // Function Phoenix.QuickActionManager.UseQuickWheelItem // (Final|Native|Public|BlueprintCallable) // @ game+0x340d4b0
	void UpdateSelectedActionItem(struct FString ItemName, struct FString ItemVariation, enum class EUIQActionBarType ItemType, struct FString ItemHolder, int32_t RequestedGroupIndex, int32_t Amount, int32_t RequestedMacroIndex, int32_t Index); // Function Phoenix.QuickActionManager.UpdateSelectedActionItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340d1f0
	void SlotToolFromCode(struct FString ItemId, int32_t Slot); // Function Phoenix.QuickActionManager.SlotToolFromCode // (Final|Exec|Native|Public) // @ game+0x340d0c0
	void SlotSpellFromCode(struct FString SpellID, int32_t Slot, int32_t Group); // Function Phoenix.QuickActionManager.SlotSpellFromCode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x340cf60
	void SlotInventoryItemFromCode(struct FString ItemId, int32_t Amount, int32_t Slot); // Function Phoenix.QuickActionManager.SlotInventoryItemFromCode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x340ce00
	void SetQuickWheelItem(struct FName ItemName); // Function Phoenix.QuickActionManager.SetQuickWheelItem // (Final|Native|Public|BlueprintCallable) // @ game+0x340cd70
	void SetQuickActionTrigger(); // Function Phoenix.QuickActionManager.SetQuickActionTrigger // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33264e0
	void SetInventoryActionItemIntoCurrentSlot(struct FString ItemName, enum class EUIQActionBarType ItemType, int32_t Count, struct FName ItemVariation); // Function Phoenix.QuickActionManager.SetInventoryActionItemIntoCurrentSlot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340ca60
	void SetCurrentGroupIndex(int32_t NewIndex); // Function Phoenix.QuickActionManager.SetCurrentGroupIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x340c9d0
	void ResetMacro(); // Function Phoenix.QuickActionManager.ResetMacro // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340c9b0
	void ReplaceItemOnDiamond(struct FName HolderID, struct FName NewItem); // Function Phoenix.QuickActionManager.ReplaceItemOnDiamond // (Final|Native|Public|BlueprintCallable) // @ game+0x340c8e0
	void RemoveActionGroupOverride(struct FString OverrideName); // Function Phoenix.QuickActionManager.RemoveActionGroupOverride // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340c850
	void RemoveActionFromDiamond(struct FName ItemName); // Function Phoenix.QuickActionManager.RemoveActionFromDiamond // (Final|Native|Public|BlueprintCallable) // @ game+0x340c7c0
	void OverrideActionGroups(struct FString OverrideName); // Function Phoenix.QuickActionManager.OverrideActionGroups // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340c710
	void OnSaveGameLoaded(); // Function Phoenix.QuickActionManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x340c620
	void OnAboutToSaveGame(); // Function Phoenix.QuickActionManager.OnAboutToSaveGame // (Final|Native|Public) // @ game+0x340c310
	void NewMacroSelectedForMode(int32_t MacroIndex, int32_t RequestedGroupIndex); // Function Phoenix.QuickActionManager.NewMacroSelectedForMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340c250
	void NewMacroSelected(int32_t MacroIndex, int32_t RequestedGroupIndex); // Function Phoenix.QuickActionManager.NewMacroSelected // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340c190
	bool IsMacroIndexValid(int32_t MacroIndex); // Function Phoenix.QuickActionManager.IsMacroIndexValid // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340bee0
	void InitializeLoadouts(); // Function Phoenix.QuickActionManager.InitializeLoadouts // (Final|Native|Public) // @ game+0x340bea0
	void IncMacroIndex(int32_t GroupIndex, bool AllowNone, int32_t CapIndexAt); // Function Phoenix.QuickActionManager.IncMacroIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340bd90
	void IncGroupIndex(); // Function Phoenix.QuickActionManager.IncGroupIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340bd70
	void HandleMapLocationChanged(struct UObject* Caller, struct FString CurrentMapLocationName); // Function Phoenix.QuickActionManager.HandleMapLocationChanged // (Final|Native|Public) // @ game+0x340bc90
	void GotoPrevGroup(); // Function Phoenix.QuickActionManager.GotoPrevGroup // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340bc70
	void GotoNextGroup(); // Function Phoenix.QuickActionManager.GotoNextGroup // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340bc50
	void GetWorldStorageOverride(struct FString ItemName, struct FString& Storage); // Function Phoenix.QuickActionManager.GetWorldStorageOverride // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x340bb60
	bool GetTwitchItem(int32_t GroupIndex, int32_t ItemIndex, struct FName& ItemName); // Function Phoenix.QuickActionManager.GetTwitchItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x340ba50
	struct FName GetQuickWheelItem(); // Function Phoenix.QuickActionManager.GetQuickWheelItem // (Final|Native|Public|BlueprintCallable) // @ game+0x340b780
	int32_t GetPrevGroupIndex(); // Function Phoenix.QuickActionManager.GetPrevGroupIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b750
	int32_t GetNumActionsInGroup(int32_t GroupIndex); // Function Phoenix.QuickActionManager.GetNumActionsInGroup // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b660
	int32_t GetNextGroupIndex(); // Function Phoenix.QuickActionManager.GetNextGroupIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b630
	int32_t GetMacroItemCount(int32_t GroupIndex, int32_t MacroIndex); // Function Phoenix.QuickActionManager.GetMacroItemCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b560
	int32_t GetMacroIndexByName(struct FString ItemName); // Function Phoenix.QuickActionManager.GetMacroIndexByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b4c0
	enum class EUIQActionBarType GetItemType(int32_t GroupIndex, int32_t MacroIndex, int32_t ItemIndex); // Function Phoenix.QuickActionManager.GetItemType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b3c0
	void GetItemNameFromMode(int32_t GroupIndex, int32_t MacroIndex, int32_t ActionIndex, struct FName& ItemName); // Function Phoenix.QuickActionManager.GetItemNameFromMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x340b270
	void GetItemName(int32_t GroupIndex, int32_t MacroIndex, int32_t ActionIndex, struct FName& ItemName); // Function Phoenix.QuickActionManager.GetItemName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x340b270
	int32_t GetItemCount(int32_t GroupIndex, int32_t MacroIndex, int32_t ItemIndex); // Function Phoenix.QuickActionManager.GetItemCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340b170
	int32_t GetActiveMacroIndex(); // Function Phoenix.QuickActionManager.GetActiveMacroIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340aed0
	int32_t GetActiveGroupIndex(); // Function Phoenix.QuickActionManager.GetActiveGroupIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340aea0
	int32_t GetActionGroupCount(); // Function Phoenix.QuickActionManager.GetActionGroupCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340ae70
	struct UQuickActionManager* Get(); // Function Phoenix.QuickActionManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340ae20
	bool DoesSelectedTransfigurationSpellAffectObject(struct FName InDbID); // Function Phoenix.QuickActionManager.DoesSelectedTransfigurationSpellAffectObject // (Final|Native|Static|Public) // @ game+0x340ad90
	void DecMacroIndex(int32_t GroupIndex, bool AllowNone, int32_t CapIndexAt); // Function Phoenix.QuickActionManager.DecMacroIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340ac80
	void DecGroupIndex(); // Function Phoenix.QuickActionManager.DecGroupIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x340ac60
	void ContextChanged(bool bNewResult); // Function Phoenix.QuickActionManager.ContextChanged // (Final|Native|Public) // @ game+0x340abd0
	void ContextAdded(struct FName InContextName); // Function Phoenix.QuickActionManager.ContextAdded // (Final|Native|Public) // @ game+0x340ab40
	void ClearCurWorld(); // Function Phoenix.QuickActionManager.ClearCurWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x340ab20
	void ClearContextCallbacks(); // Function Phoenix.QuickActionManager.ClearContextCallbacks // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x33264e0
	void CheckForWorldOverrides(); // Function Phoenix.QuickActionManager.CheckForWorldOverrides // (Final|Native|Public) // @ game+0x340ab00
	void AddAncientMagicPoints(int32_t NumPoints); // Function Phoenix.QuickActionManager.AddAncientMagicPoints // (Final|Exec|Native|Public) // @ game+0x340aa70
};

// Class Phoenix.QuickActionWidget
// Size: 0x280 (Inherited: 0x268)
struct UQuickActionWidget : UUserWidget {
	int32_t StartIndex; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct TArray<struct FInventoryResult> ActionItems; // 0x270(0x10)

	void SetItemArray(struct TArray<struct FInventoryResult>& Items, int32_t StartingIndex); // Function Phoenix.QuickActionWidget.SetItemArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x340cbc0
	void InitActionMenuEvent(); // Function Phoenix.QuickActionWidget.InitActionMenuEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.QuickHealthActions
// Size: 0x300 (Inherited: 0x2e8)
struct UQuickHealthActions : UHUDElementGroup {
	struct FString CurrentHealthItem; // 0x2e8(0x10)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	void UpdateHealthBar(float NewPct); // Function Phoenix.QuickHealthActions.UpdateHealthBar // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetMaxHealth(int32_t NewMaxHealth); // Function Phoenix.QuickHealthActions.SetMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x340cce0
	void OnSetMaxHealth(float NewHealthSize); // Function Phoenix.QuickHealthActions.OnSetMaxHealth // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIconTextureLoaded(struct UTexture2D* Texture); // Function Phoenix.QuickHealthActions.OnIconTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHealthChanged(struct AActor* Actor, float Delta, bool IndicateHUD); // Function Phoenix.QuickHealthActions.OnHealthChanged // (Final|Native|Public) // @ game+0x340c3e0
	void LoadIconCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.QuickHealthActions.LoadIconCallback // (Final|Native|Public) // @ game+0x340c0c0
	void DisplayItemCount(int32_t Count); // Function Phoenix.QuickHealthActions.DisplayItemCount // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Race
// Size: 0x5d8 (Inherited: 0x248)
struct ARace : AActor {
	struct USplineComponent* SplineComponent; // 0x248(0x08)
	struct USceneComponent* TrackGatesParent; // 0x250(0x08)
	struct USceneComponent* EndGateParent; // 0x258(0x08)
	struct TArray<struct ARaceGate*> SpawnedGates; // 0x260(0x10)
	struct TSoftClassPtr<UObject> RaceRingClass; // 0x270(0x28)
	struct TSoftClassPtr<UObject> EndGateClass; // 0x298(0x28)
	struct TSoftClassPtr<UObject> GhostOrbClass; // 0x2c0(0x28)
	struct TSoftObjectPtr<ARaceGhostOrb> SpawnedGhostOrb; // 0x2e8(0x28)
	struct TWeakObjectPtr<struct AFlyingBroom> PlayerBroom; // 0x310(0x08)
	char pad_318[0x28]; // 0x318(0x28)
	int32_t CountdownTime; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	int32_t TimePenaltySeconds; // 0x348(0x04)
	char pad_34C[0x3c]; // 0x34c(0x3c)
	bool bKeepPlayerCloseToSpline; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	int32_t MaxDistanceFromSpline; // 0x38c(0x04)
	int32_t MaxDistancePastRing; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	int32_t StoryModeRaceAttempts; // 0x398(0x04)
	char pad_39C[0x1c]; // 0x39c(0x1c)
	enum class ERaceType RaceType; // 0x3b8(0x01)
	char pad_3B9[0x47]; // 0x3b9(0x47)
	struct FDbSingleColumnInfo RaceId; // 0x400(0x88)
	struct FDbSingleColumnInfo FastTravelLocation; // 0x488(0x88)
	struct TSoftObjectPtr<UWorld> LevelToLoad; // 0x510(0x28)
	struct TArray<struct FDialogueConversationReference> GateSuccessDialogueEvents; // 0x538(0x10)
	float GateSuccessDialoguePercentageChance; // 0x548(0x04)
	float GateSuccessDialogueCooldown; // 0x54c(0x04)
	char pad_550[0x10]; // 0x550(0x10)
	struct TArray<struct FDialogueConversationReference> GateMissDialogueEvents; // 0x560(0x10)
	float GateMissDialoguePercentageChance; // 0x570(0x04)
	float GateMissDialogueCooldown; // 0x574(0x04)
	char pad_578[0x10]; // 0x578(0x10)
	struct TArray<struct FDialogueConversationReference> TurboBubbleDialogueEvents; // 0x588(0x10)
	float TurboBubbleDialoguePercentageChance; // 0x598(0x04)
	float TurboBubbleDialogueCooldown; // 0x59c(0x04)
	char pad_5A0[0x18]; // 0x5a0(0x18)
	struct TArray<struct FDialogueConversationReference> WinRaceDialogueEvents; // 0x5b8(0x10)
	struct TArray<struct FDialogueConversationReference> LoseRaceDialogueEvents; // 0x5c8(0x10)

	void RaceHudDismissed(); // Function Phoenix.Race.RaceHudDismissed // (Final|Native|Public|BlueprintCallable) // @ game+0x340c7a0
	void OnStoryModeSkipScreenDismissed(struct UPopupScreen* Popup, int32_t ConfirmationResult); // Function Phoenix.Race.OnStoryModeSkipScreenDismissed // (Final|Native|Public) // @ game+0x340c640
	void OnRaceStart(); // Function Phoenix.Race.OnRaceStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnRaceFinish(); // Function Phoenix.Race.OnRaceFinish // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnRaceAbandoned(); // Function Phoenix.Race.OnRaceAbandoned // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnEndOfRaceFTComplete(); // Function Phoenix.Race.OnEndOfRaceFTComplete // (Final|Native|Public) // @ game+0x340c3c0
	void OnCollectTurboBubble(struct UObject* i_caller); // Function Phoenix.Race.OnCollectTurboBubble // (Final|Native|Protected) // @ game+0x340c330
	void ItemToolLoadedCallback(struct UInventoryItemToolRecord* ToolRecord); // Function Phoenix.Race.ItemToolLoadedCallback // (Final|Native|Public) // @ game+0x340bfd0
	bool IsRaceMissionActive(); // Function Phoenix.Race.IsRaceMissionActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x340bfa0
	bool IsNewBestTime(); // Function Phoenix.Race.IsNewBestTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x340bf70
	float GetTotalRaceTime(struct TArray<float>& Times); // Function Phoenix.Race.GetTotalRaceTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x340b9a0
	float GetTotalPenaltyTime(); // Function Phoenix.Race.GetTotalPenaltyTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x340b960
	float GetTimeElapsed(); // Function Phoenix.Race.GetTimeElapsed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x340b920
	bool GetRacerBestTime(struct FName InRacerName, bool bMissionRelevant, float& OutBestTime); // Function Phoenix.Race.GetRacerBestTime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x340b7d0
	struct FString GetRaceID(); // Function Phoenix.Race.GetRaceID // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x340b7a0
	struct AFlyingBroom* GetPlayerBroom(); // Function Phoenix.Race.GetPlayerBroom // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x340b710
	int32_t GetNumberOfGates(); // Function Phoenix.Race.GetNumberOfGates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x340b6f0
	float GetGatePrevBestTime(int32_t GateNumber); // Function Phoenix.Race.GetGatePrevBestTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x340b0d0
	struct FName GetBestRacer_Blueprint(bool bMissionRelevant, float& OutBestTime); // Function Phoenix.Race.GetBestRacer_Blueprint // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x340afe0
	struct TArray<struct FRacerTime> GetAllRacerTimes(bool bMissionRelevant); // Function Phoenix.Race.GetAllRacerTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x340af00
};

// Class Phoenix.RaceGate
// Size: 0x258 (Inherited: 0x248)
struct ARaceGate : AActor {
	struct ARace* OwningRace; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)

	void OnRaceFinished(bool bNewBestTime); // Function Phoenix.RaceGate.OnRaceFinished // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnMissGate(bool& bSuccess); // Function Phoenix.RaceGate.OnMissGate // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x340c590
	void OnHitGate(bool& bSuccess); // Function Phoenix.RaceGate.OnHitGate // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x340c500
	void OnGateDeactivated(); // Function Phoenix.RaceGate.OnGateDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnGateActivated(); // Function Phoenix.RaceGate.OnGateActivated // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	bool IsGateActive(); // Function Phoenix.RaceGate.IsGateActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x340bec0
	struct FVector GetSplineTrackOffset(); // Function Phoenix.RaceGate.GetSplineTrackOffset // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x340b8f0
};

// Class Phoenix.RaceGhostOrb
// Size: 0x278 (Inherited: 0x248)
struct ARaceGhostOrb : AActor {
	char pad_248[0x30]; // 0x248(0x30)

	void OnFinishedCourse(); // Function Phoenix.RaceGhostOrb.OnFinishedCourse // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RaceManager
// Size: 0x40 (Inherited: 0x28)
struct URaceManager : UObject {
	struct TArray<struct TSoftObjectPtr<ARace>> RegisteredRaces; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)

	struct ARace* StartRace(struct FString RaceName, bool bIsMission); // Function Phoenix.RaceManager.StartRace // (Final|Native|Public|BlueprintCallable) // @ game+0x34110a0
	struct ARace* GetRaceFromID(struct FString RaceId); // Function Phoenix.RaceManager.GetRaceFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x3410530
	struct ARace* GetActiveRace(); // Function Phoenix.RaceManager.GetActiveRace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x19955c0
	struct URaceManager* Get(); // Function Phoenix.RaceManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34104b0
};

// Class Phoenix.RacePlatform
// Size: 0x2e0 (Inherited: 0x248)
struct ARacePlatform : AActor {
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x248(0x08)
	struct FDbSingleColumnInfo RaceId; // 0x250(0x88)
	struct UBroomChallengeScreen* RaceWidgetClass; // 0x2d8(0x08)

	void OnPlatformUnlocked(); // Function Phoenix.RacePlatform.OnPlatformUnlocked // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPlatformLocked(); // Function Phoenix.RacePlatform.OnPlatformLocked // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RailTravelStatue
// Size: 0x2c0 (Inherited: 0x258)
struct ARailTravelStatue : AFastTravelPort {
	struct USplineComponent* SplineComponent; // 0x258(0x08)
	struct AActor* SpawnActorClass; // 0x260(0x08)
	float StartSpeed; // 0x268(0x04)
	bool bUseActualSpeedAsStartSpeed; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	float Acceleration; // 0x270(0x04)
	float MinSpeed; // 0x274(0x04)
	float MaxSpeed; // 0x278(0x04)
	float RotationSpeed; // 0x27c(0x04)
	float MaxOffsetRadius; // 0x280(0x04)
	float SplineZOffset; // 0x284(0x04)
	float SuckToSplineSpeed; // 0x288(0x04)
	float YawSpeed; // 0x28c(0x04)
	struct FBTCustomAction SendActionAtEndOfSpline; // 0x290(0x0c)
	bool bDebug; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float TravelDirection; // 0x2a0(0x04)
	char pad_2A4[0x1c]; // 0x2a4(0x1c)

	void InitializeForTravel(struct USplineComponent* InSplineComponent, float InTravelDirection); // Function Phoenix.RailTravelStatue.InitializeForTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x3410740
};

// Class Phoenix.RailTravelStatue_AnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct URailTravelStatue_AnimInstance : UAnimInstance {
	float Turn; // 0x2b8(0x04)
	float Speed; // 0x2bc(0x04)
};

// Class Phoenix.RandomEncounterActor
// Size: 0x2d8 (Inherited: 0x248)
struct ARandomEncounterActor : AActor {
	char pad_248[0x90]; // 0x248(0x90)

	bool IsActive(); // Function Phoenix.RandomEncounterActor.IsActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3410810
	void ForceDeactivate(); // Function Phoenix.RandomEncounterActor.ForceDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3410490
	void ForceActivate(); // Function Phoenix.RandomEncounterActor.ForceActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x3410470
};

// Class Phoenix.RandomEncounterExclusionVolume
// Size: 0x2b8 (Inherited: 0x2b8)
struct ARandomEncounterExclusionVolume : APhoenixTrackingVolume {
};

// Class Phoenix.RandomEncounterVolume
// Size: 0x2d0 (Inherited: 0x2b8)
struct ARandomEncounterVolume : APhoenixTrackingVolume {
	struct FString EncounterDBName; // 0x2b8(0x10)
	float SearchRadius; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)
};

// Class Phoenix.RegisterConversationNode
// Size: 0x60 (Inherited: 0x30)
struct URegisterConversationNode : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ConversationStarted; // 0x30(0x10)
	struct FMulticastInlineDelegate ConversationFinished; // 0x40(0x10)
	struct TWeakObjectPtr<struct AActor> interactionActor; // 0x50(0x08)
	struct FName ConversationID; // 0x58(0x08)

	struct URegisterConversationNode* RegisterConversation(struct AActor* interactionActor, struct FName ConversationID); // Function Phoenix.RegisterConversationNode.RegisterConversation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3410ab0
};

// Class Phoenix.RegisterConversationWithNameNode
// Size: 0x60 (Inherited: 0x30)
struct URegisterConversationWithNameNode : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ConversationStarted; // 0x30(0x10)
	struct FMulticastInlineDelegate ConversationFinished; // 0x40(0x10)
	struct FName CharacterID; // 0x50(0x08)
	struct FName ConversationID; // 0x58(0x08)

	struct URegisterConversationWithNameNode* RegisterConversationWithName(struct FName CharacterID, struct FName ConversationID); // Function Phoenix.RegisterConversationWithNameNode.RegisterConversationWithName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3410b80
};

// Class Phoenix.RenderSkyLight
// Size: 0x248 (Inherited: 0x248)
struct ARenderSkyLight : AActor {
};

// Class Phoenix.RepairComponent
// Size: 0x5c0 (Inherited: 0xc8)
struct URepairComponent : UActorComponent {
	struct FMulticastInlineDelegate OnRepairComplete; // 0xc8(0x10)
	char pad_D8[0x108]; // 0xd8(0x108)
	struct AFieldSystemActor* AnchorActor; // 0x1e0(0x08)
	struct UGeometryCollectionComponent* GeometryCollectionComponent; // 0x1e8(0x08)
	struct TWeakObjectPtr<struct UObjectStateInfo> ObjectStateInfo; // 0x1f0(0x08)
	struct TArray<struct UMultiFX2_Base*> DestroyFX2; // 0x1f8(0x10)
	struct TArray<struct UMultiFX2_Base*> ObjectFX2; // 0x208(0x10)
	char pad_218[0x98]; // 0x218(0x98)
	struct TArray<struct UPrimitiveComponent*> m_chunkParticleArray; // 0x2b0(0x10)
	char pad_2C0[0x70]; // 0x2c0(0x70)
	struct TMap<struct TWeakObjectPtr<struct UMeshComponent>, struct FSavedMeshSettings2> m_meshSettingMap; // 0x330(0x50)
	struct TArray<struct AActor*> m_childActors; // 0x380(0x10)
	char pad_390[0x10]; // 0x390(0x10)
	struct TArray<struct UPrimitiveComponent*> m_childParticleArray; // 0x3a0(0x10)
	char pad_3B0[0x50]; // 0x3b0(0x50)
	struct UStaticMeshComponent* DestroyedBaseMesh; // 0x400(0x08)
	struct UGeometryCollection* GeometryCollection; // 0x408(0x08)
	char pad_410[0x28]; // 0x410(0x28)
	struct URepairInfo* RepairInfo; // 0x438(0x08)
	char pad_440[0x80]; // 0x440(0x80)
	struct FObservedComponent ObservedComponent; // 0x4c0(0xf0)
	char pad_5B0[0x10]; // 0x5b0(0x10)

	void OnRepairComplete__DelegateSignature(struct UActorComponent* RepairDestroyComp); // DelegateFunction Phoenix.RepairComponent.OnRepairComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnHitCallback(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.RepairComponent.OnHitCallback // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x34108d0
	void OnChaosPhysicsCollision(struct FChaosPhysicsCollisionInfo& CollisionInfo); // Function Phoenix.RepairComponent.OnChaosPhysicsCollision // (Final|Native|Public|HasOutParms) // @ game+0x3410830
	void HandleRemovalCompletedEvent(struct FChaosRemovalCompletedEvent& RemovalCompletedEvent); // Function Phoenix.RepairComponent.HandleRemovalCompletedEvent // (Final|Native|Public|HasOutParms) // @ game+0x34106a0
	void HandleBreakEvent(struct FChaosBreakEvent& BreakEvent); // Function Phoenix.RepairComponent.HandleBreakEvent // (Final|Native|Public|HasOutParms) // @ game+0x3410600
	void EntireRepairComplete(); // Function Phoenix.RepairComponent.EntireRepairComplete // (Final|Native|Public) // @ game+0x3410450
	void ApplyDestuctiveForce(struct FVector& HitLocation, struct FVector& HitDirection, float Radius, float ObjectStrain, float ImpulseStrength, float RadialImpulseStrength, float AngularForceMultiplier); // Function Phoenix.RepairComponent.ApplyDestuctiveForce // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3410190
	void AddRadialImpulse(struct FVector Location, float Radius, float Strength, float AngularForceMultiplier, enum class EFieldFalloffType Falloff, bool bVelChange); // Function Phoenix.RepairComponent.AddRadialImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x340ffa0
	void AddImpulse(struct FVector Impulse, struct FVector ImpulseLocation, float Radius, float AngularForceMultiplier, enum class EFieldFalloffType Falloff, bool bVelChange); // Function Phoenix.RepairComponent.AddImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x340fda0
};

// Class Phoenix.ReparoData
// Size: 0x138 (Inherited: 0x30)
struct UReparoData : UDataAsset {
	float RepairTime; // 0x30(0x04)
	float DelayBetweenChunks; // 0x34(0x04)
	bool ScaleDelayBasedOnChunkZ; // 0x38(0x01)
	bool ScaleDelayBasedOnDistanceFromPoint; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	struct FVector ReferencePoint; // 0x3c(0x0c)
	bool DiminishDelay; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float MaxDelayBetweenSpells; // 0x4c(0x04)
	struct UParticleSystem* RepairChunkParticleSystem; // 0x50(0x08)
	struct UNiagaraSystem* RepairChunkNiagaraVfx; // 0x58(0x08)
	struct UParticleSystem* SmallRepairChunkParticleSystem; // 0x60(0x08)
	struct UNiagaraSystem* SmallRepairChunkNiagaraVfx; // 0x68(0x08)
	float SmallChunkSize; // 0x70(0x04)
	float ChunkParticleProbability; // 0x74(0x04)
	struct UAkAudioEvent* RepairSfx; // 0x78(0x08)
	float RepairAlmostCompleteTime; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct UAkAudioEvent* RepairAlmostCompleteSfx; // 0x88(0x08)
	struct UParticleSystem* RepairSwapParticleSystem; // 0x90(0x08)
	struct UNiagaraSystem* RepairSwapNiagaraVfx; // 0x98(0x08)
	struct UAkAudioEvent* RepairCompleteSfx; // 0xa0(0x08)
	struct FMultiVfx RepairCompleteChunkVfx; // 0xa8(0x18)
	float EaseForRepairParticles; // 0xc0(0x04)
	struct FVector OffsetForRepairParticles; // 0xc4(0x0c)
	struct UCurveVector* SpellTranslate; // 0xd0(0x08)
	struct UCurveVector* SpellScale; // 0xd8(0x08)
	struct UCurveVector* SpellRotate; // 0xe0(0x08)
	struct UCurveFloat* ChunkEase; // 0xe8(0x08)
	struct UCurveVector* EaseResultsScale; // 0xf0(0x08)
	bool RepeatCurveOverDistance; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	float RepeatDistance; // 0xfc(0x04)
	bool ScaleDistanceBasedOnChunkSize; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float ReferenceChunkSize; // 0x104(0x04)
	struct UCurveVector* ChunkTranslate; // 0x108(0x08)
	struct UCurveVector* ChunkScale; // 0x110(0x08)
	struct UCurveVector* ChunkRotate; // 0x118(0x08)
	struct FVector RandomMinFactor; // 0x120(0x0c)
	struct FVector RandomMaxFactor; // 0x12c(0x0c)
};

// Class Phoenix.ReparoMaximaSpellTool
// Size: 0x8d8 (Inherited: 0x868)
struct AReparoMaximaSpellTool : AFireOnceSpellTool {
	struct TArray<struct UMultiFX2_Base*> RestoreLocationFX2; // 0x868(0x10)
	float FailSafeTime; // 0x878(0x04)
	char pad_87C[0x5c]; // 0x87c(0x5c)

	void ARepairComplete(struct UActorComponent* Comp); // Function Phoenix.ReparoMaximaSpellTool.ARepairComplete // (Final|Native|Public) // @ game+0x340fc80
};

// Class Phoenix.ReparoSpellTool
// Size: 0x8d0 (Inherited: 0x7e8)
struct AReparoSpellTool : ASpellTool {
	struct TArray<struct UMultiFX2_Base*> FailedFX2; // 0x7e8(0x10)
	struct TArray<struct UMultiFX2_Base*> EndFX2; // 0x7f8(0x10)
	bool bOnlyHitTarget; // 0x808(0x01)
	char pad_809[0x3]; // 0x809(0x03)
	float TargetQueryCapsuleRadius; // 0x80c(0x04)
	float TargetQueryCapsuleOffsetX; // 0x810(0x04)
	char pad_814[0xbc]; // 0x814(0xbc)

	void ReparoExpired(); // Function Phoenix.ReparoSpellTool.ReparoExpired // (Final|Native|Public) // @ game+0x3410ce0
	void ReparoCancel(struct UObject* InInstigator); // Function Phoenix.ReparoSpellTool.ReparoCancel // (Final|Native|Public|BlueprintCallable) // @ game+0x3410c50
	void DisableReparoAOE(bool Disable); // Function Phoenix.ReparoSpellTool.DisableReparoAOE // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34103d0
	void ARepairComplete(struct UActorComponent* Comp); // Function Phoenix.ReparoSpellTool.ARepairComplete // (Final|Native|Public) // @ game+0x340fd10
};

// Class Phoenix.Reticule
// Size: 0x3c8 (Inherited: 0x2e8)
struct UReticule : UHUDElementGroup {
	bool IsSubReticuleVisible; // 0x2e8(0x01)
	bool UseWeakSub; // 0x2e9(0x01)
	char pad_2EA[0x2]; // 0x2ea(0x02)
	float SubReticuleMoveToTargetTime; // 0x2ec(0x04)
	float FinisherMaxSpeed; // 0x2f0(0x04)
	float FinisherAcceleration; // 0x2f4(0x04)
	bool IsFinisherOverlapped; // 0x2f8(0x01)
	bool IsBestFinisherOverlapped; // 0x2f9(0x01)
	bool PreventFinisherWhenNotOverlapped; // 0x2fa(0x01)
	bool UseLinearFinisherReticule; // 0x2fb(0x01)
	float FinisherStartAngle; // 0x2fc(0x04)
	float FinisherLinearStartDistance; // 0x300(0x04)
	float InitialFinisherReticuleDelay; // 0x304(0x04)
	float OverlapHalfAngle; // 0x308(0x04)
	float BestOverlapHalfAngle; // 0x30c(0x04)
	float HoldFinisherTime; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	struct UCanvasPanel* FinisherCircle; // 0x318(0x08)
	struct UCanvasPanel* FinisherRing; // 0x320(0x08)
	struct UImage* FinisherCircleImage; // 0x328(0x08)
	struct UImage* FinisherRingImage; // 0x330(0x08)
	struct UWidget* ReticulePanel; // 0x338(0x08)
	struct UImage* Primary; // 0x340(0x08)
	enum class EReticuleState ReticuleState; // 0x348(0x01)
	bool IsReticuleVisible; // 0x349(0x01)
	bool IsCombatReticuleVisible; // 0x34a(0x01)
	bool IsTargetReticuleVisible; // 0x34b(0x01)
	char pad_34C[0x7c]; // 0x34c(0x7c)

	void UseWeakReticuleBP(bool InUseWeakSub); // Function Phoenix.Reticule.UseWeakReticuleBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowTargetReticule(bool IsVisible); // Function Phoenix.Reticule.ShowTargetReticule // (Final|Native|Public|BlueprintCallable) // @ game+0x3411010
	void ShowCombatReticule(bool IsVisible); // Function Phoenix.Reticule.ShowCombatReticule // (Final|Native|Public|BlueprintCallable) // @ game+0x3410f80
	void Show(bool IsVisible); // Function Phoenix.Reticule.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x3410ef0
	void SetupForLinearFinisher(); // Function Phoenix.Reticule.SetupForLinearFinisher // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetupForCircularFinisher(); // Function Phoenix.Reticule.SetupForCircularFinisher // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetState(enum class EReticuleState State); // Function Phoenix.Reticule.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3410e70
	void SetFinisherNormalizedAngle(float NormalizedAngle); // Function Phoenix.Reticule.SetFinisherNormalizedAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x3410df0
	void SetFinisherActive(bool FinisherActiveIn); // Function Phoenix.Reticule.SetFinisherActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3410d00
	void HandleShowTargetReticule(bool IsVisible); // Function Phoenix.Reticule.HandleShowTargetReticule // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleShowSub(bool IsVisible); // Function Phoenix.Reticule.HandleShowSub // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleShowRing(bool IsVisible); // Function Phoenix.Reticule.HandleShowRing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleShowCombatReticule(bool IsVisible); // Function Phoenix.Reticule.HandleShowCombatReticule // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleShow(bool IsVisible); // Function Phoenix.Reticule.HandleShow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleSetTargetRingPosition(struct FVector2D Position); // Function Phoenix.Reticule.HandleSetTargetRingPosition // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void HandleSetSubPosition(struct FVector2D Position); // Function Phoenix.Reticule.HandleSetSubPosition // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void HandleSetState(enum class EReticuleState State); // Function Phoenix.Reticule.HandleSetState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleSetPrimaryPosition(struct FVector2D Position); // Function Phoenix.Reticule.HandleSetPrimaryPosition // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void HandleOverlapping(bool Overlapping); // Function Phoenix.Reticule.HandleOverlapping // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleFire(); // Function Phoenix.Reticule.HandleFire // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleFinisherActiveChanged(bool FinisherActiveIn); // Function Phoenix.Reticule.HandleFinisherActiveChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleFadeFinisher(); // Function Phoenix.Reticule.HandleFadeFinisher // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void HandleBestOverlapping(bool Overlapping); // Function Phoenix.Reticule.HandleBestOverlapping // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	enum class EReticuleState GetState(); // Function Phoenix.Reticule.GetState // (Final|Native|Public|BlueprintCallable) // @ game+0x34105e0
	bool GetFinisherActive(); // Function Phoenix.Reticule.GetFinisherActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3410500
};

// Class Phoenix.RevealComponent
// Size: 0x228 (Inherited: 0x190)
struct URevealComponent : UStateEffectComponent {
	char pad_190[0x50]; // 0x190(0x50)
	struct FRevealData RevealData; // 0x1e0(0x28)
	char pad_208[0x20]; // 0x208(0x20)
};

// Class Phoenix.RevealInterface
// Size: 0x28 (Inherited: 0x28)
struct URevealInterface : UInterface {

	bool StartReveal(struct AActor* Instigator, bool ShowOccluded); // Function Phoenix.RevealInterface.StartReveal // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnHiddenObjectRevealed(struct AActor* Instigator); // Function Phoenix.RevealInterface.OnHiddenObjectRevealed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnHiddenObjectHinted(struct AActor* Instigator); // Function Phoenix.RevealInterface.OnHiddenObjectHinted // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEndReveal(struct AActor* Instigator); // Function Phoenix.RevealInterface.OnEndReveal // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBeginRevealFade(struct AActor* Instigator); // Function Phoenix.RevealInterface.OnBeginRevealFade // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RevelioPageScreen
// Size: 0x370 (Inherited: 0x370)
struct URevelioPageScreen : UScreen {

	void SetRevelioPageID(struct FName PageID); // Function Phoenix.RevelioPageScreen.SetRevelioPageID // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RevelioSpellTool
// Size: 0x9a8 (Inherited: 0x7e8)
struct ARevelioSpellTool : ASpellTool {
	float FadeTime; // 0x7e8(0x04)
	int32_t MaxRevealsPerFrame; // 0x7ec(0x04)
	bool bRevealHiddenOnCastOnly; // 0x7f0(0x01)
	char pad_7F1[0x3]; // 0x7f1(0x03)
	float StandardRange; // 0x7f4(0x04)
	struct UCurveFloat* StandardRadiusPercentAtTime; // 0x7f8(0x08)
	float HogwartsRange; // 0x800(0x04)
	char pad_804[0x4]; // 0x804(0x04)
	struct UCurveFloat* HogwartsRadiusPercentAtTime; // 0x808(0x08)
	float OverlandRange; // 0x810(0x04)
	char pad_814[0x4]; // 0x814(0x04)
	struct UCurveFloat* OverlandRadiusPercentAtTime; // 0x818(0x08)
	float BroomRange; // 0x820(0x04)
	float BroomFieldGuideHotspotRange; // 0x824(0x04)
	struct UCurveFloat* BroomRadiusPercentAtTime; // 0x828(0x08)
	float HiddenObjectRange; // 0x830(0x04)
	float IntroHiddenObjectRange; // 0x834(0x04)
	float BaseRangeScale; // 0x838(0x04)
	char pad_83C[0x4]; // 0x83c(0x04)
	struct TArray<struct UMultiFX2_Base*> GlobalFX2; // 0x840(0x10)
	struct TArray<struct UMultiFX2_Base*> InteractiveFX2; // 0x850(0x10)
	struct TArray<struct UMultiFX2_Base*> ImportantFX2; // 0x860(0x10)
	struct TArray<struct UMultiFX2_Base*> HiddenFX2; // 0x870(0x10)
	struct TArray<struct UMultiFX2_Base*> HiddenFarAwayFX2; // 0x880(0x10)
	struct TArray<struct UMultiFX2_Base*> EnemyFX2; // 0x890(0x10)
	struct TArray<struct UMultiFX2_Base*> TaggedFX2; // 0x8a0(0x10)
	struct UMaterialParameterCollection* ShowOccludedMaterialParameterCollection; // 0x8b0(0x08)
	struct FName ShowOccludedParameter; // 0x8b8(0x08)
	float CurrentRadius; // 0x8c0(0x04)
	float CurrentInnerRadius; // 0x8c4(0x04)
	struct TArray<struct URevealComponent*> RevelioComponents; // 0x8c8(0x10)
	struct TArray<struct AActor*> IgnoreActorArray; // 0x8d8(0x10)
	struct TSet<struct AActor*> IgnoreActorSet; // 0x8e8(0x50)
	struct TArray<struct TWeakObjectPtr<struct AFieldGuideHotSpot>> HotspotArray; // 0x938(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> HiddenFarAwayArray; // 0x948(0x10)
	char pad_958[0x50]; // 0x958(0x50)

	void RevealHiddenActor(struct AActor* InActor); // Function Phoenix.RevelioSpellTool.RevealHiddenActor // (Final|Native|Public|BlueprintCallable) // @ game+0x34170b0
	float GetHiddenObjectRange(); // Function Phoenix.RevelioSpellTool.GetHiddenObjectRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3416200
	float GetFieldGuideHotspotRange(); // Function Phoenix.RevelioSpellTool.GetFieldGuideHotspotRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34160f0
	float GetCurrentOuterRadius(); // Function Phoenix.RevelioSpellTool.GetCurrentOuterRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34160c0
	float GetCurrentInnerRadius(); // Function Phoenix.RevelioSpellTool.GetCurrentInnerRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3416090
	void BeginRevealFade(); // Function Phoenix.RevelioSpellTool.BeginRevealFade // (Final|Native|Public|BlueprintCallable) // @ game+0x3415fd0
};

// Class Phoenix.RichPaperScreen
// Size: 0x370 (Inherited: 0x370)
struct URichPaperScreen : UScreen {

	void SetRichPaperID(struct FString RichPaperID); // Function Phoenix.RichPaperScreen.SetRichPaperID // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RiverVolume
// Size: 0x558 (Inherited: 0x4b0)
struct ARiverVolume : AWaterVolumeBase {
	struct UStaticMeshComponent* RiverMesh; // 0x4b0(0x08)
	float RiverFlowSpeed; // 0x4b8(0x04)
	bool bDebugFlowView; // 0x4bc(0x01)
	char pad_4BD[0x3]; // 0x4bd(0x03)
	struct USphereComponent* LakeSphereIn; // 0x4c0(0x08)
	struct USphereComponent* LakeSphereOut; // 0x4c8(0x08)
	struct TMap<struct FVector, struct FVector2D> RiverFlowPoints; // 0x4d0(0x50)
	struct FVector RiverAveDir; // 0x520(0x0c)
	char pad_52C[0x4]; // 0x52c(0x04)
	struct TArray<struct AActor*> LakeActors; // 0x530(0x10)
	struct TArray<struct AActor*> RemoveLakeActors; // 0x540(0x10)
	enum class EDrawDebugTrace DebugFlowView; // 0x550(0x01)
	bool bFlowInLake; // 0x551(0x01)
	bool bFlowOutLake; // 0x552(0x01)
	char pad_553[0x5]; // 0x553(0x05)

	void SetupRiver(struct FTransform i_RiverTransform, struct FVector i_RiverAveDir, struct TMap<struct FVector, struct FVector2D> i_RiverFlowPoints, struct FBoxSphereBounds i_WaterBoxInfo, float i_VolumeZRotation, struct UStaticMesh* i_RiverMesh, struct UStaticMesh* i_DeepCollision, struct UStaticMesh* i_ShallowCollision, bool i_bFlowInLake, bool i_bFlowOutLake); // Function Phoenix.RiverVolume.SetupRiver // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3417140
	void OnLakeSphereOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.RiverVolume.OnLakeSphereOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3416c00
	void OnActorOverlapEnd(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Phoenix.RiverVolume.OnActorOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3416300
	struct FVector2D GetForceVector(struct UPrimitiveComponent* PrimComp, bool bUseDist); // Function Phoenix.RiverVolume.GetForceVector // (Final|Native|Private|HasDefaults|BlueprintCallable) // @ game+0x3416120
};

// Class Phoenix.RollingComponent
// Size: 0x120 (Inherited: 0xc8)
struct URollingComponent : UActorComponent {
	struct TArray<struct UMultiFX2_Base*> RollingFX2; // 0xc8(0x10)
	struct FName RTPCName; // 0xd8(0x08)
	float RollingAudioCutoffVelocity; // 0xe0(0x04)
	float AdditionalLineTraceDistance; // 0xe4(0x04)
	float VelocityLerpValue; // 0xe8(0x04)
	float InAirVelocityDecay; // 0xec(0x04)
	char pad_F0[0x8]; // 0xf0(0x08)
	struct UStaticMeshComponent* StaticMeshComp; // 0xf8(0x08)
	struct UAkComponent* AkComponent; // 0x100(0x08)
	char pad_108[0x18]; // 0x108(0x18)

	void OnComponentWake(struct UPrimitiveComponent* OverlappedComponent, struct FName BoneName); // Function Phoenix.RollingComponent.OnComponentWake // (Final|Native|Private) // @ game+0x3416530
	void OnComponentSleep(struct UPrimitiveComponent* OverlappedComponent, struct FName BoneName); // Function Phoenix.RollingComponent.OnComponentSleep // (Final|Native|Private) // @ game+0x3416460
};

// Class Phoenix.RPGAbilityBase
// Size: 0x70 (Inherited: 0x28)
struct URPGAbilityBase : UObject {
	bool bIsStackable; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FDateTime StartInGameTimeStamp; // 0x30(0x08)
	struct FDateTime EndInGameTimeStamp; // 0x38(0x08)
	float RemainingLifeTime; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct AActor* OwnerActor; // 0x48(0x08)
	struct FName OwnerID; // 0x50(0x08)
	bool bShowIcon; // 0x58(0x01)
	char pad_59[0x3]; // 0x59(0x03)
	struct FRPGUIInfo UIIconInfo; // 0x5c(0x10)
	char pad_6C[0x4]; // 0x6c(0x04)

	void OnUnequipped(); // Function Phoenix.RPGAbilityBase.OnUnequipped // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnReequipped(); // Function Phoenix.RPGAbilityBase.OnReequipped // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnEquipped(); // Function Phoenix.RPGAbilityBase.OnEquipped // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RPGAbility
// Size: 0x100 (Inherited: 0x70)
struct URPGAbility : URPGAbilityBase {
	struct TArray<struct UGameplayPropertyMod*> Mods; // 0x70(0x10)
	struct FGameplayTagContainer AbilityTags; // 0x80(0x20)
	struct TArray<struct URPGAbilityEventListener_Base*> EventReactions; // 0xa0(0x10)
	struct TArray<struct URPGTriggerEffect_Base*> TriggerEffects; // 0xb0(0x10)
	struct TArray<struct URPGTriggerEffect_Base*> BeginAbilityTriggerEffects; // 0xc0(0x10)
	struct TArray<struct URPGTriggerEffect_Base*> EndAbilityTriggerEffects; // 0xd0(0x10)
	struct TArray<struct FRPGTimeTriggers> TimeTriggers; // 0xe0(0x10)
	struct TArray<struct URPGCondition*> EndConditions; // 0xf0(0x10)
};

// Class Phoenix.RPGAbility_CompanionBoost
// Size: 0x1a0 (Inherited: 0x100)
struct URPGAbility_CompanionBoost : URPGAbility {
	struct TArray<struct UGameplayPropertyMod*> ModsForCompanions; // 0x100(0x10)
	struct TArray<struct URPGAbilityBase*> AbilitiesForCompanions; // 0x110(0x10)
	struct FGameplayTagContainer AbilityTagsForCompanions; // 0x120(0x20)
	char pad_140[0x60]; // 0x140(0x60)
};

// Class Phoenix.RPGAbilityComponent
// Size: 0x228 (Inherited: 0xc8)
struct URPGAbilityComponent : UActorComponent {
	struct FMulticastInlineDelegate NotifyUIAdd; // 0xc8(0x10)
	struct FMulticastInlineDelegate NotifyUIChange; // 0xd8(0x10)
	struct FMulticastInlineDelegate NotifyUIRemove; // 0xe8(0x10)
	char pad_F8[0x50]; // 0xf8(0x50)
	struct TMap<struct FGuid, struct FActiveAbility> ActiveAbilities; // 0x148(0x50)
	struct TMap<struct FName, float> CooldownGroups; // 0x198(0x50)
	struct TArray<struct FGuid> CurrentlyLoading; // 0x1e8(0x10)
	struct FGameplayTagContainer AbilityTags; // 0x1f8(0x20)
	char pad_218[0xc]; // 0x218(0x0c)
	bool bTickOnScheduler; // 0x224(0x01)
	char pad_225[0x3]; // 0x225(0x03)

	void RemoveAbility(struct FGuid& AbilityID); // Function Phoenix.RPGAbilityComponent.RemoveAbility // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3417010
	void OnSaveGameLoad(); // Function Phoenix.RPGAbilityComponent.OnSaveGameLoad // (Final|Native|Protected) // @ game+0x3416e40
	void OnRemoveAbilityUI__DelegateSignature(struct FString SourceID, int32_t SlotNo); // DelegateFunction Phoenix.RPGAbilityComponent.OnRemoveAbilityUI__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnGameToBeSaved(); // Function Phoenix.RPGAbilityComponent.OnGameToBeSaved // (Final|Native|Protected) // @ game+0x3416a50
	void OnEndOfDay(); // Function Phoenix.RPGAbilityComponent.OnEndOfDay // (Final|Native|Protected) // @ game+0x3416920
	void OnChangeAbilityUI__DelegateSignature(struct FString SourceID, int32_t SlotNo, float CurrentTicks, float MaxTicks); // DelegateFunction Phoenix.RPGAbilityComponent.OnChangeAbilityUI__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnAddAbilityUI__DelegateSignature(struct FString SourceID, int32_t SlotNo, float Ticks); // DelegateFunction Phoenix.RPGAbilityComponent.OnAddAbilityUI__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool HasAbilityTagBP(struct AActor* Owner, struct FGameplayTag Tag); // Function Phoenix.RPGAbilityComponent.HasAbilityTagBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3416230
	bool CanAddAbility(struct FName AbilityName); // Function Phoenix.RPGAbilityComponent.CanAddAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x3415ff0
	struct FGuid AddAbility(struct FName AbilityName, bool bForceSyncLoad); // Function Phoenix.RPGAbilityComponent.AddAbility // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3415ef0
};

// Class Phoenix.RPGAbilityEventListener_Base
// Size: 0x28 (Inherited: 0x28)
struct URPGAbilityEventListener_Base : UObject {
};

// Class Phoenix.RPGAbilityEventListener
// Size: 0x98 (Inherited: 0x28)
struct URPGAbilityEventListener : URPGAbilityEventListener_Base {
	bool bTriggerRandom; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	float RandomTriggerChance; // 0x2c(0x04)
	struct TArray<struct TSoftObjectPtr<URPGAbilityBase>> Abilities; // 0x30(0x10)
	struct TArray<struct UGameplayPropertyMod*> Mods; // 0x40(0x10)
	struct TArray<struct URPGTriggerEffect_Base*> TriggerEffects; // 0x50(0x10)
	struct AActor* OwnerActor; // 0x60(0x08)
	struct TArray<struct FGuid> AbilityHandles; // 0x68(0x10)
	struct UGameplayModComponent* ModComponent; // 0x78(0x08)
	struct URPGAbilityComponent* AbilityComponent; // 0x80(0x08)
	bool bTriggered; // 0x88(0x01)
	char pad_89[0xf]; // 0x89(0x0f)
};

// Class Phoenix.RPGAbilityCustomTargetEventListener
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityCustomTargetEventListener : URPGAbilityEventListener {
	struct AActor* TargetActor; // 0x98(0x08)
};

// Class Phoenix.RPGAbilityEventListener_OnDodgeRollFinished
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnDodgeRollFinished : URPGAbilityEventListener {
	struct ABiped_Player* BipedPlayer; // 0x98(0x08)
};

// Class Phoenix.RPGAbilityEventListener_OnSucessfulBlock
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnSucessfulBlock : URPGAbilityEventListener {
	struct ABiped_Player* BipedPlayer; // 0x98(0x08)
};

// Class Phoenix.RPGAbilityEventListener_OnCriticalHit
// Size: 0x98 (Inherited: 0x98)
struct URPGAbilityEventListener_OnCriticalHit : URPGAbilityEventListener {
};

// Class Phoenix.RPGAbilityEventListener_OnBreed
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnBreed : URPGAbilityEventListener {
	int32_t MinTier; // 0x98(0x04)
	int32_t MaxTier; // 0x9c(0x04)
};

// Class Phoenix.RPGAbilityEventListener_OnHarvest
// Size: 0xa8 (Inherited: 0x98)
struct URPGAbilityEventListener_OnHarvest : URPGAbilityEventListener {
	int32_t MinTier; // 0x98(0x04)
	int32_t MaxTier; // 0x9c(0x04)
	bool bCriticalsOnly; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.RPGAbilityEventListener_OnBrewCollect
// Size: 0x98 (Inherited: 0x98)
struct URPGAbilityEventListener_OnBrewCollect : URPGAbilityEventListener {
};

// Class Phoenix.RPGAbilityEventListener_OnExcursionCompleted
// Size: 0x98 (Inherited: 0x98)
struct URPGAbilityEventListener_OnExcursionCompleted : URPGAbilityEventListener {
};

// Class Phoenix.RPGAbilityEventListener_OnCharacterDied
// Size: 0xa8 (Inherited: 0x98)
struct URPGAbilityEventListener_OnCharacterDied : URPGAbilityEventListener {
	bool bKillInstigatorMustBeAbilityOwner; // 0x98(0x01)
	enum class ELevelComparison LevelComparison; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	int32_t LevelDifference; // 0x9c(0x04)
	float MaximumDistance; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.RPGAbilityEventListener_OnCharacterDiedFromSpell
// Size: 0xc0 (Inherited: 0xa8)
struct URPGAbilityEventListener_OnCharacterDiedFromSpell : URPGAbilityEventListener_OnCharacterDied {
	struct FName SpellGroup; // 0xa8(0x08)
	struct FName SpellName; // 0xb0(0x08)
	bool TargetIsPlayer; // 0xb8(0x01)
	bool TargetIsTeammate; // 0xb9(0x01)
	bool TargetIsEnemy; // 0xba(0x01)
	bool TargetIsNeutral; // 0xbb(0x01)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class Phoenix.RPGAbilityEventListener_OnTargetHitWithSpells
// Size: 0x150 (Inherited: 0x98)
struct URPGAbilityEventListener_OnTargetHitWithSpells : URPGAbilityEventListener {
	enum class HitTrackerTypes TargetChainRule; // 0x98(0x01)
	enum class HitTrackerTypes SpellChainRule; // 0x99(0x01)
	bool bResetOnBeingHit; // 0x9a(0x01)
	bool bResetOnFailedSpell; // 0x9b(0x01)
	float MaxTimeBetweenHits; // 0x9c(0x04)
	bool bChanceBased; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	int32_t NumRequiredHits; // 0xa4(0x04)
	struct FRuntimeFloatCurve TriggerChance; // 0xa8(0x88)
	char pad_130[0x8]; // 0x130(0x08)
	struct TArray<struct FRPGHitTracker> TrackedHits; // 0x138(0x10)
	struct AWandTool* Wand; // 0x148(0x08)

	void OnDamageReceived(struct AActor* Target, struct AActor* Instigator, float Damage, struct FHitResult& Hit); // Function Phoenix.RPGAbilityEventListener_OnTargetHitWithSpells.OnDamageReceived // (Final|Native|Protected|HasOutParms) // @ game+0x3416600
};

// Class Phoenix.RPGAbilityEventListener_OnTargetHitWithMunition
// Size: 0xa8 (Inherited: 0xa0)
struct URPGAbilityEventListener_OnTargetHitWithMunition : URPGAbilityCustomTargetEventListener {
	struct AMunitionType_Base* MunitionTypeFilter; // 0xa0(0x08)

	void OnMunitionHit(struct UObject* Caller, struct FMunitionToInstigatorData& MunitionData); // Function Phoenix.RPGAbilityEventListener_OnTargetHitWithMunition.OnMunitionHit // (Final|Native|Protected|HasOutParms) // @ game+0x3416d60
};

// Class Phoenix.RPGAbilityEventListener_ReduceCooldownOnDamage
// Size: 0xb8 (Inherited: 0x28)
struct URPGAbilityEventListener_ReduceCooldownOnDamage : URPGAbilityEventListener_Base {
	struct FRuntimeFloatCurve TimePerDamage; // 0x28(0x88)
	bool bCheckSpellGroup; // 0xb0(0x01)
	enum class SocialSemanticIDs SpellGroupName; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)

	void OnDamageReceived(struct AActor* Target, struct AActor* Instigator, float Damage, struct FHitResult& Hit); // Function Phoenix.RPGAbilityEventListener_ReduceCooldownOnDamage.OnDamageReceived // (Final|Native|Protected|HasOutParms) // @ game+0x3416790
};

// Class Phoenix.RPGAbilityEventListener_OnItemConsumed
// Size: 0xe0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnItemConsumed : URPGAbilityEventListener {
	bool bUseItemTypeFilter; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct FItemFilter ItemTypeFilter; // 0xa0(0x18)
	bool bUseItemUsageTypeFilter; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct FItemFilter ItemUsageTypeFilter; // 0xc0(0x18)
	char pad_D8[0x8]; // 0xd8(0x08)

	void OnItemConsumed(struct FName CharacterID, struct FName ItemId, struct FName Variation, struct FName ItemType, struct FName ItemUsageType); // Function Phoenix.RPGAbilityEventListener_OnItemConsumed.OnItemConsumed // (Final|Native|Protected) // @ game+0x3416a70
};

// Class Phoenix.RPGAbilityEventListener_OnSpellCast
// Size: 0xb0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnSpellCast : URPGAbilityEventListener {
	bool bCheckSpellGroup; // 0x98(0x01)
	enum class SocialSemanticIDs SpellGroup; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	struct FName SpellName; // 0x9c(0x08)
	bool bListenToPlayer; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	struct AWandTool* Wand; // 0xa8(0x08)

	void OnSpellCast(struct ASpellTool* SpellTool); // Function Phoenix.RPGAbilityEventListener_OnSpellCast.OnSpellCast // (Final|Native|Protected) // @ game+0x3416ef0
};

// Class Phoenix.RPGAbilityEventListener_OnPlayerEpiskeyHealing
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_OnPlayerEpiskeyHealing : URPGAbilityEventListener {
	float HealthThresholdBefore; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)

	void OnEpiskeyHealing(struct AActor* Instigator, float InHealthChange, struct AActor* TargetActor); // Function Phoenix.RPGAbilityEventListener_OnPlayerEpiskeyHealing.OnEpiskeyHealing // (Native|Protected) // @ game+0x3416940
};

// Class Phoenix.RPGAbilityEventListener_OnPlayerCompanionProtection
// Size: 0x98 (Inherited: 0x98)
struct URPGAbilityEventListener_OnPlayerCompanionProtection : URPGAbilityEventListener {

	void OnCastCompanionProtego(struct UObject* Caller); // Function Phoenix.RPGAbilityEventListener_OnPlayerCompanionProtection.OnCastCompanionProtego // (Final|Native|Protected) // @ game+0x34163d0
};

// Class Phoenix.RPGAbilityEventListener_InStealth
// Size: 0xa8 (Inherited: 0x98)
struct URPGAbilityEventListener_InStealth : URPGAbilityEventListener {
	char pad_98[0x10]; // 0x98(0x10)
};

// Class Phoenix.RPGAbilityEventListener_DuringDaytime
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_DuringDaytime : URPGAbilityEventListener {
	char pad_98[0x8]; // 0x98(0x08)
};

// Class Phoenix.RPGAbilityEventListener_DuringNighttime
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_DuringNighttime : URPGAbilityEventListener {
	char pad_98[0x8]; // 0x98(0x08)
};

// Class Phoenix.RPGAbilityEventListener_DuringProtego
// Size: 0xa0 (Inherited: 0x98)
struct URPGAbilityEventListener_DuringProtego : URPGAbilityEventListener {
	struct AWandTool* Wand; // 0x98(0x08)

	void OnSpellStop(struct ASpellTool* SpellTool); // Function Phoenix.RPGAbilityEventListener_DuringProtego.OnSpellStop // (Final|Native|Protected) // @ game+0x3416f80
	void OnSpellCast(struct ASpellTool* SpellTool); // Function Phoenix.RPGAbilityEventListener_DuringProtego.OnSpellCast // (Final|Native|Protected) // @ game+0x3416e60
};

// Class Phoenix.RPGAbilityEventListener_OnMessage
// Size: 0xa8 (Inherited: 0x98)
struct URPGAbilityEventListener_OnMessage : URPGAbilityEventListener {
	struct FString HermesMessage; // 0x98(0x10)
};

// Class Phoenix.RPGAbilitySettings
// Size: 0x78 (Inherited: 0x28)
struct URPGAbilitySettings : UObject {
	struct TMap<struct FName, struct TSoftObjectPtr<URPGAbilityBase>> RPGAbilityMap; // 0x28(0x50)
};

// Class Phoenix.RPGCondition
// Size: 0x30 (Inherited: 0x28)
struct URPGCondition : UObject {
	bool ConditionMetWhenTrue; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.RPGCondition_PlayerInCombat
// Size: 0x30 (Inherited: 0x30)
struct URPGCondition_PlayerInCombat : URPGCondition {
};

// Class Phoenix.RPGCondition_PlayerOrCompanionInCombat
// Size: 0x30 (Inherited: 0x30)
struct URPGCondition_PlayerOrCompanionInCombat : URPGCondition {
};

// Class Phoenix.RPGCondition_HasAbilityTags
// Size: 0x50 (Inherited: 0x30)
struct URPGCondition_HasAbilityTags : URPGCondition {
	struct FGameplayTagContainer AbilityTags; // 0x30(0x20)
};

// Class Phoenix.RPGModExtensionUI
// Size: 0x40 (Inherited: 0x28)
struct URPGModExtensionUI : UModExtension {
	bool bSendUINotifications; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	struct FRPGUIInfo UIInfo; // 0x2c(0x10)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.RPGModExtension_PlayerMultiFX
// Size: 0x1a0 (Inherited: 0x28)
struct URPGModExtension_PlayerMultiFX : UModExtension {
	struct FMultiFXPlus OnAddEffect; // 0x28(0x70)
	struct FMultiFXPlus OnAppliedEffect; // 0x98(0x70)
	bool bOnlyOnFirstApplied; // 0x108(0x01)
	bool bOnlyAllowOneApplied; // 0x109(0x01)
	bool bEndAppliedOnRemoved; // 0x10a(0x01)
	char pad_10B[0x5]; // 0x10b(0x05)
	struct FMultiFXPlus OnRemovedEffect; // 0x110(0x70)
	struct FMultiFXPlusHandles OnAddHandle; // 0x180(0x10)
	struct FMultiFXPlusHandles OnAppliedHandle; // 0x190(0x10)
};

// Class Phoenix.RPGModExtension_PlayerMultiFX2
// Size: 0x60 (Inherited: 0x28)
struct URPGModExtension_PlayerMultiFX2 : UModExtension {
	struct TArray<struct UMultiFX2_Base*> OnAddFX2; // 0x28(0x10)
	struct TArray<struct UMultiFX2_Base*> OnAppliedFX2; // 0x38(0x10)
	bool bOnlyOnFirstApplied; // 0x48(0x01)
	bool bOnlyAllowOneApplied; // 0x49(0x01)
	bool bEndAppliedOnRemoved; // 0x4a(0x01)
	char pad_4B[0x5]; // 0x4b(0x05)
	struct FMultiFX2Handle OnAddHandle; // 0x50(0x08)
	struct FMultiFX2Handle OnAppliedHandle; // 0x58(0x08)
};

// Class Phoenix.RPGModExtensionNotify
// Size: 0x30 (Inherited: 0x28)
struct URPGModExtensionNotify : UModExtension {
	struct FName ModAppliedMessage; // 0x28(0x08)
};

// Class Phoenix.ModFilter_Global_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Global_Base : UModFilter {
};

// Class Phoenix.ModFilter_Global_IsNight
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Global_IsNight : UModFilter_Global_Base {
};

// Class Phoenix.ModFilter_Global_IsDay
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Global_IsDay : UModFilter_Global_Base {
};

// Class Phoenix.ModFilter_Player_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_Base : UModFilter_Global_Base {
};

// Class Phoenix.ModFilter_Player_IsWellRested
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_IsWellRested : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_IsRenown
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_IsRenown : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_IsNotorious
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_IsNotorious : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_IsInfamous
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_IsInfamous : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_IsProtegoActive
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_IsProtegoActive : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_HasEdurusUpgrade
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_HasEdurusUpgrade : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_Player_HasMaximaUpgrade
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Player_HasMaximaUpgrade : UModFilter_Player_Base {
};

// Class Phoenix.ModFilter_ObjectState_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_Base : UModFilter {
};

// Class Phoenix.ModFilter_ObjectState_IsFullHealth
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_IsFullHealth : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_PlantState_IsFullHealth
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_PlantState_IsFullHealth : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_ObjectState_IsCombatCursed
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_IsCombatCursed : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_ObjectState_IsImperiousControlled
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_IsImperiousControlled : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_ObjectState_IsOnPlayerTeam
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_IsOnPlayerTeam : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_ObjectState_IsDisillusioned
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ObjectState_IsDisillusioned : UModFilter_ObjectState_Base {
};

// Class Phoenix.ModFilter_ObjectState_MatchesRegistryID
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_ObjectState_MatchesRegistryID : UModFilter_ObjectState_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString MatchingRegistryID; // 0x38(0x10)
};

// Class Phoenix.ModFilter_ObjectState_MatchesSubTypeID
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_ObjectState_MatchesSubTypeID : UModFilter_ObjectState_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString MatchingSubTypeID; // 0x38(0x10)
};

// Class Phoenix.ModFilter_SpellCooldown_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SpellCooldown_Base : UModFilter {
};

// Class Phoenix.ModFilter_SpellCooldown_IsDada
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SpellCooldown_IsDada : UModFilter_SpellCooldown_Base {
};

// Class Phoenix.ModFilter_SpellCooldown_IsDueling
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SpellCooldown_IsDueling : UModFilter_SpellCooldown_Base {
};

// Class Phoenix.ModFilter_SpellCooldown_IsScholar
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SpellCooldown_IsScholar : UModFilter_SpellCooldown_Base {
};

// Class Phoenix.ModFilter_SpellCooldown_IsInfiltrator
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SpellCooldown_IsInfiltrator : UModFilter_SpellCooldown_Base {
};

// Class Phoenix.ModFilter_SpellCooldown_MatchesSpellIdentity
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_SpellCooldown_MatchesSpellIdentity : UModFilter_SpellCooldown_Base {
	struct FSelectableName SpellIdentity; // 0x30(0x08)
};

// Class Phoenix.ModFilter_OnHit_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_OnHit_Base : UModFilter {
};

// Class Phoenix.ModFilter_OnHit_Spell_IsSpellNameAny
// Size: 0x40 (Inherited: 0x30)
struct UModFilter_OnHit_Spell_IsSpellNameAny : UModFilter_OnHit_Base {
	struct TArray<struct FName> SpellNames; // 0x30(0x10)
};

// Class Phoenix.ModFilter_OnHit_Target_IsUnaware
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_OnHit_Target_IsUnaware : UModFilter_OnHit_Base {
};

// Class Phoenix.ModFilter_OnHit_Target_IsImmobilized
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_OnHit_Target_IsImmobilized : UModFilter_OnHit_Base {
};

// Class Phoenix.ModFilter_DealDamage_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Base : UModFilter {
};

// Class Phoenix.ModFilter_DealDamage_Custom
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Custom : UModFilter_DealDamage_Base {

	bool BlueprintPassesDamageFilter(struct UObject* InTargetObject, struct FDamageInfo& DamageInfo); // Function Phoenix.ModFilter_DealDamage_Custom.BlueprintPassesDamageFilter // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x38a7480
};

// Class Phoenix.ModFilter_DealDamage_Source_MatchesRegistryID
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_DealDamage_Source_MatchesRegistryID : UModFilter_DealDamage_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString MatchingRegistryID; // 0x38(0x10)
};

// Class Phoenix.ModFilter_DealDamage_Target_MatchesRegistryID
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_MatchesRegistryID : UModFilter_DealDamage_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString MatchingRegistryID; // 0x38(0x10)
};

// Class Phoenix.ModFilter_DealDamage_Target_MatchesSubTypeID
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_MatchesSubTypeID : UModFilter_DealDamage_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FString MatchingSubTypeID; // 0x38(0x10)
};

// Class Phoenix.ModFilter_DealDamage_Target_MatchesSubTypeIDs
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_MatchesSubTypeIDs : UModFilter_DealDamage_Base {
	bool bMatchWholeWord; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<struct FString> MatchingSubTypeIDs; // 0x38(0x10)
};

// Class Phoenix.ModFilter_DealDamage_Target_IsImperiousControlled
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsImperiousControlled : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_CompanionLastTarget
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_CompanionLastTarget : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsWizard
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsWizard : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsGoblin
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsGoblin : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsTroll
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsTroll : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsSpider
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsSpider : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsStudent
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsStudent : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_HasTag
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_HasTag : UModFilter_DealDamage_Base {
	struct FGameplayTag Tag; // 0x30(0x08)
};

// Class Phoenix.ModFilter_DealDamage_HasTag
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_DealDamage_HasTag : UModFilter_DealDamage_Base {
	struct FGameplayTag Tag; // 0x30(0x08)
};

// Class Phoenix.ModFilter_DealDamage_Target_IsCharacter
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsCharacter : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsCursed
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsCursed : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsCombatCursed
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsCombatCursed : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsEnemy
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsEnemy : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsEnvironment
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsEnvironment : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsDada
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsDada : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsDueling
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsDueling : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsDark
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsDark : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsHeavy
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsHeavy : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsSpellName
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsSpellName : UModFilter_DealDamage_Base {
	struct FName SpellName; // 0x30(0x08)
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsSpellNameAny
// Size: 0x40 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsSpellNameAny : UModFilter_DealDamage_Base {
	struct TArray<struct FName> SpellNames; // 0x30(0x10)
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsSpell
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsSpell : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsFinisher
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsFinisher : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsExpulso
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsExpulso : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsIncendio
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsIncendio : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsIncendioOrAOE
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsIncendioOrAOE : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsConfringoOrTalent
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsConfringoOrTalent : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Spell_IsDeadlyAttack
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Spell_IsDeadlyAttack : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_IsCritical
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_IsCritical : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_IsMelee
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_IsMelee : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_IsRanged
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_IsRanged : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_IsAOE
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_IsAOE : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsEnemy
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsEnemy : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsDisillusioned
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsDisillusioned : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsImperiusControlled
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsImperiusControlled : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsPlant
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsPlant : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsOnPlayerTeam
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsOnPlayerTeam : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsGoblin
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsGoblin : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsSpider
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsSpider : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsTroll
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsTroll : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsDugbog
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsDugbog : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsDarkWizard
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsDarkWizard : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsInferi
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsInferi : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Instigator_IsWolf
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Instigator_IsWolf : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsUnaware
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsUnaware : UModFilter_DealDamage_Base {
};

// Class Phoenix.ModFilter_DealDamage_Target_IsImmobilized
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_DealDamage_Target_IsImmobilized : UModFilter_DealDamage_Base {
};

// Class Phoenix.MODFilter_SocapAmend_Base
// Size: 0x30 (Inherited: 0x30)
struct UMODFilter_SocapAmend_Base : UModFilter {
};

// Class Phoenix.ModFilter_SocapAmend_Custom
// Size: 0x48 (Inherited: 0x30)
struct UModFilter_SocapAmend_Custom : UMODFilter_SocapAmend_Base {
	bool bUseValueFilter; // 0x30(0x01)
	enum class EValueComparison ComparisonOperator; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	int32_t ComparisonValue; // 0x34(0x04)
	bool bUseSocialReasoningFilter; // 0x38(0x01)
	struct FSocialReasoningComparison SocialReasoningFilter; // 0x39(0x01)
	bool bUseSocialSemanticsFilter; // 0x3a(0x01)
	char pad_3B[0x1]; // 0x3b(0x01)
	struct FSocialSemanticsComparison SocialSemanticsFilter; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)

	bool BlueprintPassesSocapFilter(struct UObject* InTargetObject, struct FSocapAmendInfo& SocapInfo); // Function Phoenix.ModFilter_SocapAmend_Custom.BlueprintPassesSocapFilter // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x38a7480
};

// Class Phoenix.ModFilter_SocapAmend_IsGain
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsGain : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsCost
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsCost : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsInfiltrator
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsInfiltrator : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsEvil
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsEvil : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsHerbologist
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsHerbologist : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsMagizoologist
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsMagizoologist : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsPotioneer
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsPotioneer : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsScholar
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsScholar : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsProfessor
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsProfessor : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsStudent
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsStudent : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_AreInSameHouse
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_AreInSameHouse : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_IsCallout
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsCallout : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_SocapAmend_SocialCapitalStatus
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_SocapAmend_SocialCapitalStatus : UMODFilter_SocapAmend_Base {
	enum class EValueComparison ComparisonOperator; // 0x30(0x01)
	enum class SocialCapitalStatusIDs SocialCapitalStatus; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Phoenix.ModFilter_SocapAmend_IsFavor
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_SocapAmend_IsFavor : UMODFilter_SocapAmend_Base {
};

// Class Phoenix.ModFilter_GainKnowledge_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_GainKnowledge_Base : UModFilter {
};

// Class Phoenix.ModFilter_GainKnowledge_Custom
// Size: 0x60 (Inherited: 0x30)
struct UModFilter_GainKnowledge_Custom : UModFilter_GainKnowledge_Base {
	bool bUseCategoryFilter; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FName CategoryFilter; // 0x34(0x08)
	bool bUseKnowledgeActionFilter; // 0x3c(0x01)
	enum class EKnowledgeAction KnowledgeActionFilter; // 0x3d(0x01)
	bool bUseCarrierSubtypeFilter; // 0x3e(0x01)
	char pad_3F[0x1]; // 0x3f(0x01)
	struct FName CarrierSubtypeFilter; // 0x40(0x08)
	bool bUseSubjectFilter; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	struct FName SubjectFilter; // 0x4c(0x08)
	bool bUseValueFilter; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
	struct FValueComparison ValueFilter; // 0x58(0x08)

	bool BlueprintPassesKnowledgeGainFilter(struct UObject* InTargetObject, struct FKnowledgeGainInfo& KnowledgeGainInfo); // Function Phoenix.ModFilter_GainKnowledge_Custom.BlueprintPassesKnowledgeGainFilter // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x38a7480
};

// Class Phoenix.ModFilter_GainKnowledge_ByInvestigation
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_GainKnowledge_ByInvestigation : UModFilter_GainKnowledge_Base {
};

// Class Phoenix.ModFilter_EnemyAwareness_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_EnemyAwareness_Base : UModFilter {
};

// Class Phoenix.ModFilter_EnemyAwareness_MatchingMultiAwarenessStates
// Size: 0x40 (Inherited: 0x30)
struct UModFilter_EnemyAwareness_MatchingMultiAwarenessStates : UModFilter_EnemyAwareness_Base {
	struct TArray<enum class NPC_TargetAwareStateRateSource> MatchingAwarenessStates; // 0x30(0x10)
};

// Class Phoenix.ModFilter_LootDrop_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_LootDrop_Base : UModFilter {
};

// Class Phoenix.ModFilter_LootDrop_RarityPercentageTarget
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_LootDrop_RarityPercentageTarget : UModFilter_LootDrop_Base {
	enum class EValueComparison ComparisonOperator; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	float TargetPercent; // 0x34(0x04)
};

// Class Phoenix.ModFilter_LootDrop_Enemy
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_LootDrop_Enemy : UModFilter_LootDrop_Base {
};

// Class Phoenix.ModFilter_VendorTransaction_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_VendorTransaction_Base : UModFilter {
};

// Class Phoenix.ModFilter_VendorTransaction_IsBuying
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_VendorTransaction_IsBuying : UModFilter_VendorTransaction_Base {
};

// Class Phoenix.ModFilter_VendorTransaction_IsSelling
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_VendorTransaction_IsSelling : UModFilter_VendorTransaction_Base {
};

// Class Phoenix.ModFilter_VendorTransaction_IsPlantSeed
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_VendorTransaction_IsPlantSeed : UModFilter_VendorTransaction_Base {
};

// Class Phoenix.ModFilter_Focus_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Focus_Base : UModFilter {
};

// Class Phoenix.ModFilter_Focus_IsGain
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Focus_IsGain : UModFilter_Focus_Base {
};

// Class Phoenix.ModFilter_Focus_IsCost
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_Focus_IsCost : UModFilter_Focus_Base {
};

// Class Phoenix.ModFilter_UseItem_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_UseItem_Base : UModFilter {
};

// Class Phoenix.ModFilter_UseItem_IsPotion_Custom
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_UseItem_IsPotion_Custom : UModFilter_UseItem_Base {
	struct AConsumablePotionItemTool* PotionType; // 0x30(0x08)
};

// Class Phoenix.ModFilter_CrimeScene_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_CrimeScene_Base : UModFilter {
};

// Class Phoenix.ModFilter_CrimeScene_CrimeIsType
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_CrimeScene_CrimeIsType : UModFilter_CrimeScene_Base {
};

// Class Phoenix.ModFilter_CrimeScene_SeverityIs
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_CrimeScene_SeverityIs : UModFilter_CrimeScene_Base {
	enum class EValueComparison Comparision; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.ModFilter_ItemProperty_Base
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ItemProperty_Base : UModFilter {
};

// Class Phoenix.ModFilter_ItemProperty_IsPotion
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ItemProperty_IsPotion : UModFilter_ItemProperty_Base {
};

// Class Phoenix.ModFilter_ItemProperty_IsPotionIngredient
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ItemProperty_IsPotionIngredient : UModFilter_ItemProperty_Base {
};

// Class Phoenix.ModFilter_ItemProperty_IsUseablePlant
// Size: 0x30 (Inherited: 0x30)
struct UModFilter_ItemProperty_IsUseablePlant : UModFilter_ItemProperty_Base {
};

// Class Phoenix.ModFilter_ItemProperty_Custom
// Size: 0x38 (Inherited: 0x30)
struct UModFilter_ItemProperty_Custom : UModFilter_ItemProperty_Base {
	struct FSelectableName ItemType; // 0x30(0x08)
};

// Class Phoenix.RPGPermaAbilityManager
// Size: 0x28 (Inherited: 0x28)
struct URPGPermaAbilityManager : UObject {

	void OnGameToBeLoaded(); // Function Phoenix.RPGPermaAbilityManager.OnGameToBeLoaded // (Final|Native|Private) // @ game+0x34292f0
	void AddPermaAbilitiesToPlayer(); // Function Phoenix.RPGPermaAbilityManager.AddPermaAbilitiesToPlayer // (Final|Native|Public) // @ game+0x34291b0
};

// Class Phoenix.RPGSettings
// Size: 0x78 (Inherited: 0x28)
struct URPGSettings : UObject {
	struct TMap<enum class ERPGEffect, struct FMultiFXPlus> Effects; // 0x28(0x50)
};

// Class Phoenix.RPGTriggerEffect_Base
// Size: 0x40 (Inherited: 0x28)
struct URPGTriggerEffect_Base : UObject {
	struct TArray<struct URPGCondition*> Conditions; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.RPGTriggerEffect_Conditional
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_Conditional : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_AdjustInventoryItem
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_AdjustInventoryItem : URPGTriggerEffect_Base {
	struct FName CharacterID; // 0x40(0x08)
	struct FName ItemId; // 0x48(0x08)
	int32_t Count; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.RPGTriggerEffect_ModifyTalentPoints
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_ModifyTalentPoints : URPGTriggerEffect_Base {
	int32_t TalentPointModification; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_DealAOEDamage
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_DealAOEDamage : URPGTriggerEffect_Base {
	int32_t DamageAmount; // 0x40(0x04)
	int32_t DamageRadius; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_AddAbilityTags
// Size: 0x60 (Inherited: 0x40)
struct URPGTriggerEffect_AddAbilityTags : URPGTriggerEffect_Conditional {
	struct FGameplayTagContainer AbilityTags; // 0x40(0x20)
};

// Class Phoenix.RPGTriggerEffect_DropLootBag
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_DropLootBag : URPGTriggerEffect_Conditional {
};

// Class Phoenix.RPGTriggerEffect_GenerateFocus
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_GenerateFocus : URPGTriggerEffect_Base {
	float FocusAmount; // 0x40(0x04)
	bool AmountIsFullFocusBars; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Phoenix.RPGTriggerEffect_RecalculateBipedStatEffects
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_RecalculateBipedStatEffects : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_AddTimeToDOT
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_AddTimeToDOT : URPGTriggerEffect_Base {
	struct TArray<struct FName> SpellNames; // 0x40(0x10)
	float DurationToAdd; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.RPGTriggerEffect_HermesMessage
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_HermesMessage : URPGTriggerEffect_Base {
	struct FString HermesMessage; // 0x40(0x10)
};

// Class Phoenix.RPGTriggerEffect_AddAbilityOnMessage
// Size: 0x90 (Inherited: 0x40)
struct URPGTriggerEffect_AddAbilityOnMessage : URPGTriggerEffect_Base {
	struct FString HermesMessage; // 0x40(0x10)
	struct TSoftObjectPtr<URPGAbilityBase> RPGAbility; // 0x50(0x28)
	float LifeTime; // 0x78(0x04)
	bool bUseIngameSimulationTime; // 0x7c(0x01)
	char pad_7D[0xb]; // 0x7d(0x0b)
	struct AActor* Owner; // 0x88(0x08)
};

// Class Phoenix.RPGTriggerEffect_SetModBlackboardValue
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_SetModBlackboardValue : URPGTriggerEffect_Base {
	enum class ERPGModInputTags Tag; // 0x40(0x04)
	float Value; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_ModifyModBlackboardValue
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_ModifyModBlackboardValue : URPGTriggerEffect_Base {
	enum class ERPGModInputTags Tag; // 0x40(0x04)
	float ModificationValue; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_ModifyPotionEffectCount
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_ModifyPotionEffectCount : URPGTriggerEffect_Base {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Phoenix.RPGTriggerEffect_TalentReset
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_TalentReset : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_AddAbility
// Size: 0x78 (Inherited: 0x40)
struct URPGTriggerEffect_AddAbility : URPGTriggerEffect_Base {
	struct TSoftObjectPtr<URPGAbilityBase> RPGAbility; // 0x40(0x28)
	enum class ETimedAbilityUnit DurationUnit; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float Duration; // 0x6c(0x04)
	bool bUseIngameSimulationTime; // 0x70(0x01)
	bool bResetOnDayEnd; // 0x71(0x01)
	char pad_72[0x6]; // 0x72(0x06)
};

// Class Phoenix.RPGTriggerEffect_BulletTime
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_BulletTime : URPGTriggerEffect_Base {
	float Dilation; // 0x40(0x04)
	float Duration; // 0x44(0x04)
	bool bDoFixedCam; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.RPGTriggerEffect_AdjustHealth
// Size: 0x78 (Inherited: 0x40)
struct URPGTriggerEffect_AdjustHealth : URPGTriggerEffect_Base {
	bool bRelyOnItemEffectiveness; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float HealthAdjustAmount; // 0x44(0x04)
	bool bAdjustAsPercentage; // 0x48(0x01)
	bool bApplyOnce; // 0x49(0x01)
	char pad_4A[0x2]; // 0x4a(0x02)
	float Duration; // 0x4c(0x04)
	struct TArray<struct URPGTriggerEffect_Base*> OnBeginHealingTriggerEffects; // 0x50(0x10)
	struct TArray<struct URPGTriggerEffect_Base*> OnEndHealingTriggerEffects; // 0x60(0x10)
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.RPGTriggerEffect_PropagateHealingToCompanions
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_PropagateHealingToCompanions : URPGTriggerEffect_Base {
	float Multiplier; // 0x40(0x04)
	char pad_44[0xc]; // 0x44(0x0c)
};

// Class Phoenix.RPGTriggerEffect_OnEpiskey
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_OnEpiskey : URPGTriggerEffect_Base {
	float HealthThresholdBefore; // 0x40(0x04)
	float HealthThresholdAfter; // 0x44(0x04)
	struct AActor* Owner; // 0x48(0x08)
	char pad_50[0x8]; // 0x50(0x08)

	void OnHealing(struct UObject* i_caller, float InHealthChange); // Function Phoenix.RPGTriggerEffect_OnEpiskey.OnHealing // (Native|Protected) // @ game+0x3429310
};

// Class Phoenix.RPGTriggerEffect_TriggerAbilityOnEpiskey
// Size: 0x70 (Inherited: 0x58)
struct URPGTriggerEffect_TriggerAbilityOnEpiskey : URPGTriggerEffect_OnEpiskey {
	float AbilityBaseTime; // 0x58(0x04)
	float AbilityTimePerHealth; // 0x5c(0x04)
	float AbilityTimeMax; // 0x60(0x04)
	bool AbilityOnPlayer; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct URPGAbilityBase* Ability; // 0x68(0x08)
};

// Class Phoenix.RPGTriggerEffect_FillFocusMeterOnPlayerEpiskey
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_FillFocusMeterOnPlayerEpiskey : URPGTriggerEffect_Base {
	float HealthThresholdBefore; // 0x40(0x04)
	float HealthToFocusRatio; // 0x44(0x04)
	struct AActor* Owner; // 0x48(0x08)

	void OnEpiskeyHealing(struct AActor* Instigator, float InHealthChange, struct AActor* TargetActor); // Function Phoenix.RPGTriggerEffect_FillFocusMeterOnPlayerEpiskey.OnEpiskeyHealing // (Final|Native|Protected) // @ game+0x34291d0
};

// Class Phoenix.RPGTriggerEffect_AdjustCooldown
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_AdjustCooldown : URPGTriggerEffect_Base {
	bool bRelyOnItemEffectiveness; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float CooldownAdjustAmount; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_AdjustMovementSpeed
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_AdjustMovementSpeed : URPGTriggerEffect_Base {
	float MovementSpeedScale; // 0x40(0x04)
	float Duration; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_PolyJuice
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_PolyJuice : URPGTriggerEffect_Base {
	char pad_40[0x8]; // 0x40(0x08)
	struct AActor* Owner; // 0x48(0x08)

	void OnSpellCast(struct ASpellTool* SpellTool); // Function Phoenix.RPGTriggerEffect_PolyJuice.OnSpellCast // (Final|Native|Protected) // @ game+0x34293f0
};

// Class Phoenix.RPGTriggerEffect_ManipulateDamageInfo
// Size: 0x80 (Inherited: 0x40)
struct URPGTriggerEffect_ManipulateDamageInfo : URPGTriggerEffect_Base {
	float TriggerChance; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct FGameplayTagContainer MunitionsToAdd; // 0x48(0x20)
	char pad_68[0x8]; // 0x68(0x08)
	struct TArray<struct UModFilter_DealDamage_Base*> DamageFilters; // 0x70(0x10)
};

// Class Phoenix.RPGTriggerEffect_BroadcastAIEvent
// Size: 0xb8 (Inherited: 0x40)
struct URPGTriggerEffect_BroadcastAIEvent : URPGTriggerEffect_Base {
	struct AActor* Owner; // 0x40(0x08)
	struct FGameplayTagContainer EventTags; // 0x48(0x20)
	enum class EGameEvent_Intensity EventIntensity; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float Duration; // 0x6c(0x04)
	float Range; // 0x70(0x04)
	float TriggerChance; // 0x74(0x04)
	struct FMultiFX TriggerFX; // 0x78(0x30)
	struct TArray<struct UMultiFX2_Base*> TriggerFX2; // 0xa8(0x10)
};

// Class Phoenix.RPGTriggerEffect_OnSuccessfulSpell_BroadcastAIEvent
// Size: 0xd0 (Inherited: 0xb8)
struct URPGTriggerEffect_OnSuccessfulSpell_BroadcastAIEvent : URPGTriggerEffect_BroadcastAIEvent {
	struct AWandTool* WandTool; // 0xb8(0x08)
	bool bCheckSpellGroup; // 0xc0(0x01)
	enum class SocialSemanticIDs RequiredSpellGroup; // 0xc1(0x01)
	bool bRequiresCharacterTarget; // 0xc2(0x01)
	char pad_C3[0xd]; // 0xc3(0x0d)
};

// Class Phoenix.RPG_TriggerEffect_OnCharacterDeath_BroadcastAIEvent
// Size: 0xc8 (Inherited: 0xb8)
struct URPG_TriggerEffect_OnCharacterDeath_BroadcastAIEvent : URPGTriggerEffect_BroadcastAIEvent {
	float MaximumDistance; // 0xb8(0x04)
	bool bNeedToBeDeathInstigator; // 0xbc(0x01)
	char pad_BD[0xb]; // 0xbd(0x0b)
};

// Class Phoenix.RPGTriggerEffect_CastCompanionProtego
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_CastCompanionProtego : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_Crime
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_Crime : URPGTriggerEffect_Base {
	float SeverityLevel; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_Weakness
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_Weakness : URPGTriggerEffect_Base {
	float Duration; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RPGTriggerEffect_ResetTacticalTokens
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_ResetTacticalTokens : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_CombatCurse
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_CombatCurse : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_DeflectAttacks
// Size: 0x40 (Inherited: 0x40)
struct URPGTriggerEffect_DeflectAttacks : URPGTriggerEffect_Base {
};

// Class Phoenix.RPGTriggerEffect_ActorDamaged
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_ActorDamaged : URPGTriggerEffect_Base {
	bool OnlyOnCharacterDied; // 0x40(0x01)
	bool OnEnemy; // 0x41(0x01)
	char pad_42[0xe]; // 0x42(0x0e)
	struct AActor* Owner; // 0x50(0x08)
};

// Class Phoenix.RPGTriggerEffect_AddAbilityOnActorDamaged
// Size: 0x88 (Inherited: 0x58)
struct URPGTriggerEffect_AddAbilityOnActorDamaged : URPGTriggerEffect_ActorDamaged {
	struct TSoftObjectPtr<URPGAbilityBase> RPGAbility; // 0x58(0x28)
	float LifeTime; // 0x80(0x04)
	bool bUseIngameSimulationTime; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
};

// Class Phoenix.RPGTriggerEffect_TriggerOnActorDamaged
// Size: 0x60 (Inherited: 0x58)
struct URPGTriggerEffect_TriggerOnActorDamaged : URPGTriggerEffect_ActorDamaged {
	struct URPGTriggerEffect_Base* TriggerEffect; // 0x58(0x08)
};

// Class Phoenix.RPGTriggerEffect_ModifyCooldownGroupOnDamage
// Size: 0x68 (Inherited: 0x58)
struct URPGTriggerEffect_ModifyCooldownGroupOnDamage : URPGTriggerEffect_ActorDamaged {
	struct FName CooldownGroup; // 0x58(0x08)
	float CooldownModification; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class Phoenix.RPGTriggerEffect_FocusGainOnCompanionDamage
// Size: 0x60 (Inherited: 0x58)
struct URPGTriggerEffect_FocusGainOnCompanionDamage : URPGTriggerEffect_ActorDamaged {
	float FocusGain; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.RPGTriggerEffect_ReflectDamageOnCursed
// Size: 0x60 (Inherited: 0x58)
struct URPGTriggerEffect_ReflectDamageOnCursed : URPGTriggerEffect_ActorDamaged {
	bool RequiresCursed; // 0x58(0x01)
	bool OnPlayer; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	float DamageScale; // 0x5c(0x04)
};

// Class Phoenix.RPGTriggerEffect_RevivePlayer
// Size: 0xa8 (Inherited: 0x58)
struct URPGTriggerEffect_RevivePlayer : URPGTriggerEffect_ActorDamaged {
	float FadeDelay; // 0x58(0x04)
	float Delay; // 0x5c(0x04)
	float RestoreFadeTime; // 0x60(0x04)
	float Cooldown; // 0x64(0x04)
	float invulnerableTime; // 0x68(0x04)
	float RestorePercentHealth; // 0x6c(0x04)
	struct URPGTriggerEffect_Base* TriggerEffect; // 0x70(0x08)
	struct UUserWidget* UserWidgetSubclass; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
	struct UUserWidget* UserWidget; // 0xa0(0x08)
};

// Class Phoenix.RPGTriggerEffect_ModifyObjectStateOnTimer
// Size: 0x68 (Inherited: 0x40)
struct URPGTriggerEffect_ModifyObjectStateOnTimer : URPGTriggerEffect_Base {
	char pad_40[0x10]; // 0x40(0x10)
	float TickRate; // 0x50(0x04)
	float FirstTickDelay; // 0x54(0x04)
	bool bLoop; // 0x58(0x01)
	bool bModifyHealthByValue; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	float HealthModificationAmount; // 0x5c(0x04)
	bool bModifyHealthByPercentage; // 0x60(0x01)
	char pad_61[0x3]; // 0x61(0x03)
	float HealthModificationPercentage; // 0x64(0x04)

	void OnTimerTick(); // Function Phoenix.RPGTriggerEffect_ModifyObjectStateOnTimer.OnTimerTick // (Final|Native|Protected) // @ game+0x3429480
};

// Class Phoenix.RPGTriggerEffect_OnCombatBegin
// Size: 0x68 (Inherited: 0x40)
struct URPGTriggerEffect_OnCombatBegin : URPGTriggerEffect_Base {
	struct URPGAbilityBase* Ability; // 0x40(0x08)
	float AbilityDuration; // 0x48(0x04)
	char pad_4C[0x1c]; // 0x4c(0x1c)
};

// Class Phoenix.RPGTriggerEffect_RecoverFromDamage
// Size: 0xc8 (Inherited: 0x58)
struct URPGTriggerEffect_RecoverFromDamage : URPGTriggerEffect_ActorDamaged {
	bool RequiresCursed; // 0x58(0x01)
	bool RequiresDeadlySpell; // 0x59(0x01)
	bool RequiresAirborne; // 0x5a(0x01)
	bool RequiresUnaware; // 0x5b(0x01)
	bool RequiresNotInCombatMode; // 0x5c(0x01)
	bool RequiresRadiantAura; // 0x5d(0x01)
	bool PlayerInstigator; // 0x5e(0x01)
	bool OnPlayer; // 0x5f(0x01)
	bool OnTeammate; // 0x60(0x01)
	bool OnNeutral; // 0x61(0x01)
	char pad_62[0x2]; // 0x62(0x02)
	struct FName DamageFromSpellGroup; // 0x64(0x08)
	struct FName DamageFromSpellName; // 0x6c(0x08)
	bool DamageFromFinisher; // 0x74(0x01)
	bool AdjustmentPerPointOfDamage; // 0x75(0x01)
	char pad_76[0x2]; // 0x76(0x02)
	float CooldownSecondsPerPointOfDamage; // 0x78(0x04)
	struct FName RecoverCooldownSpellGroup; // 0x7c(0x08)
	struct FName RecoverCooldownSpellName; // 0x84(0x08)
	float FocusAmount; // 0x8c(0x04)
	float HealthAmount; // 0x90(0x04)
	float HealthPercentage; // 0x94(0x04)
	bool UseHealthRecoveryEffects; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct URPGAbilityBase* Ability; // 0xa0(0x08)
	float AbilityDuration; // 0xa8(0x04)
	bool AbilityOnPlayer; // 0xac(0x01)
	bool AbilityOnInstigator; // 0xad(0x01)
	char pad_AE[0x2]; // 0xae(0x02)
	struct URPGTriggerEffect_Base* TriggerEffect; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Phoenix.RPGTriggerEffect_ForbearingManager
// Size: 0xd0 (Inherited: 0xc8)
struct URPGTriggerEffect_ForbearingManager : URPGTriggerEffect_RecoverFromDamage {
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class Phoenix.RPGTriggerEffect_ManageDeadlyTokens
// Size: 0xd0 (Inherited: 0xc8)
struct URPGTriggerEffect_ManageDeadlyTokens : URPGTriggerEffect_RecoverFromDamage {
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class Phoenix.RPGTriggerEffect_ProtegoReflectAttack
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_ProtegoReflectAttack : URPGTriggerEffect_Base {
	char pad_40[0x8]; // 0x40(0x08)
	struct AActor* Owner; // 0x48(0x08)
};

// Class Phoenix.RPGTriggerEffect_ProtegoTriggerAbility
// Size: 0x80 (Inherited: 0x50)
struct URPGTriggerEffect_ProtegoTriggerAbility : URPGTriggerEffect_ProtegoReflectAttack {
	struct TSoftObjectPtr<URPGAbilityBase> RPGAbility; // 0x50(0x28)
	float LifeTime; // 0x78(0x04)
	bool bUseIngameSimulationTime; // 0x7c(0x01)
	char pad_7D[0x3]; // 0x7d(0x03)
};

// Class Phoenix.RPGTriggerEffect_ProtegoReflectDamageOnCursed
// Size: 0x58 (Inherited: 0x50)
struct URPGTriggerEffect_ProtegoReflectDamageOnCursed : URPGTriggerEffect_ProtegoReflectAttack {
	float DamageScale; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.RPGTriggerEffect_ProtegoReflectRewards
// Size: 0x58 (Inherited: 0x50)
struct URPGTriggerEffect_ProtegoReflectRewards : URPGTriggerEffect_ProtegoReflectAttack {
	float FocusAmount; // 0x50(0x04)
	bool RequirePerfect; // 0x54(0x01)
	char pad_55[0x3]; // 0x55(0x03)
};

// Class Phoenix.RPGTriggerEffect_ManageTacticianTokens
// Size: 0x90 (Inherited: 0x50)
struct URPGTriggerEffect_ManageTacticianTokens : URPGTriggerEffect_ProtegoReflectAttack {
	int32_t MaxTokens; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct URPGAbilityBase* Ability; // 0x58(0x08)
	float AbilityDuration; // 0x60(0x04)
	bool AbilityOnPlayer; // 0x64(0x01)
	char pad_65[0x2b]; // 0x65(0x2b)
};

// Class Phoenix.RPGTriggerEffect_OnHitBySpell
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_OnHitBySpell : URPGTriggerEffect_Base {
	bool bCheckSpellGroup; // 0x40(0x01)
	enum class SocialSemanticIDs SpellGroup; // 0x41(0x01)
	bool bCheckSpellName; // 0x42(0x01)
	enum class SocialActionTypes SpellName; // 0x43(0x01)
	char pad_44[0x4]; // 0x44(0x04)
	struct AActor* Owner; // 0x48(0x08)
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.RPGTriggerEffect_CauseDisturbanceOnSpellImpact
// Size: 0x58 (Inherited: 0x58)
struct URPGTriggerEffect_CauseDisturbanceOnSpellImpact : URPGTriggerEffect_OnHitBySpell {
};

// Class Phoenix.RPGTriggerEffect_AffectedBySpell
// Size: 0x88 (Inherited: 0x40)
struct URPGTriggerEffect_AffectedBySpell : URPGTriggerEffect_Base {
	struct FName SpellGroup; // 0x40(0x08)
	struct FName SpellName; // 0x48(0x08)
	bool TargetIsPlayer; // 0x50(0x01)
	bool TargetIsTeammate; // 0x51(0x01)
	bool TargetIsEnemy; // 0x52(0x01)
	bool TargetIsNeutral; // 0x53(0x01)
	bool InstigatorIsPlayer; // 0x54(0x01)
	bool InstigatorIsCompanion; // 0x55(0x01)
	bool RequiresCursed; // 0x56(0x01)
	bool RequiresAirborne; // 0x57(0x01)
	bool RequiresUnaware; // 0x58(0x01)
	bool RequiresRadiantAura; // 0x59(0x01)
	char pad_5A[0x2]; // 0x5a(0x02)
	float FocusAmount; // 0x5c(0x04)
	struct URPGTriggerEffect_Base* TriggerEffect; // 0x60(0x08)
	bool TriggerEffectOnPlayer; // 0x68(0x01)
	bool TriggerEffectOnInstigator; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct AActor* Owner; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class Phoenix.RPGTriggerEffect_ManageMomentumTokens
// Size: 0xb0 (Inherited: 0x88)
struct URPGTriggerEffect_ManageMomentumTokens : URPGTriggerEffect_AffectedBySpell {
	struct URPGAbilityBase* Ability; // 0x88(0x08)
	float AbilityDuration; // 0x90(0x04)
	bool AbilityOnPlayer; // 0x94(0x01)
	char pad_95[0x1b]; // 0x95(0x1b)
};

// Class Phoenix.RPGTriggerEffect_GainKnowledgeFromCriticalHarvest
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_GainKnowledgeFromCriticalHarvest : URPGTriggerEffect_Base {
	enum class EKnowledgeAction KnowledgeAction; // 0x40(0x01)
	bool bInDisplayTicker; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// Class Phoenix.RPGTriggerEffect_MultiFXPlus
// Size: 0x1b0 (Inherited: 0x40)
struct URPGTriggerEffect_MultiFXPlus : URPGTriggerEffect_Base {
	struct FMultiFXPlus FXData; // 0x40(0x70)
	struct FMultiFXPlus ActivateFx; // 0xb0(0x70)
	struct FMultiFXPlus DeactivateFX; // 0x120(0x70)
	char pad_190[0x20]; // 0x190(0x20)
};

// Class Phoenix.RPGTriggerEffect_MultiFX2
// Size: 0x58 (Inherited: 0x40)
struct URPGTriggerEffect_MultiFX2 : URPGTriggerEffect_Base {
	struct TArray<struct UMultiFX2_Base*> FX2; // 0x40(0x10)
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.RPGTriggerEffect_SetAudioState
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_SetAudioState : URPGTriggerEffect_Base {
	struct FName stateGroup; // 0x40(0x08)
	struct FName State; // 0x48(0x08)
};

// Class Phoenix.RPGTriggerEffect_LoadTutorial
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_LoadTutorial : URPGTriggerEffect_Base {
	struct FName TutorialName; // 0x40(0x08)
};

// Class Phoenix.RPGTriggerEffect_ResetAchievement
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_ResetAchievement : URPGTriggerEffect_Base {
	struct FName AchievementID; // 0x40(0x08)
};

// Class Phoenix.RPGTriggerEffect_Potion
// Size: 0x50 (Inherited: 0x40)
struct URPGTriggerEffect_Potion : URPGTriggerEffect_Base {
	struct URPGAbility* OwnerAbility; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Phoenix.RPGTriggerEffect_OnSpellCast
// Size: 0x80 (Inherited: 0x40)
struct URPGTriggerEffect_OnSpellCast : URPGTriggerEffect_Base {
	struct TArray<struct FName> SpellNames; // 0x40(0x10)
	bool bOnlyDiamondSpells; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
	struct TArray<struct URPGTriggerEffect_Base*> TriggerEffects; // 0x58(0x10)
	struct AActor* Owner; // 0x68(0x08)
	struct URPGAbility* OwnerAbility; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)
};

// Class Phoenix.RPGTriggerEffect_ExtendDuration
// Size: 0x48 (Inherited: 0x40)
struct URPGTriggerEffect_ExtendDuration : URPGTriggerEffect_Base {
	float ExtendedTime; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.RUserVectorArtData
// Size: 0x60 (Inherited: 0x60)
struct URUserVectorArtData : USlateVectorArtData {
};

// Class Phoenix.SceneRigRule_DialogueSequence
// Size: 0x1c8 (Inherited: 0xa0)
struct USceneRigRule_DialogueSequence : USceneRigRule {
	struct UDialogueSequenceReferenceProvider* DialogueSequenceReference; // 0xa0(0x08)
	struct FSceneRigStage_StringReference DialogueEventName; // 0xa8(0x10)
	struct FSceneRigStage_StringReference DialogueSequenceName; // 0xb8(0x10)
	struct FSceneRigStage_IntReference DialogueFlags; // 0xc8(0x10)
	struct FActionParameter_DialogueEvent DialogEvent; // 0xd8(0x70)
	struct FActionParameter_FString DialogueSequence; // 0x148(0x18)
	struct USceneRig* TemplateSceneRig; // 0x160(0x08)
	bool CreateTransformActions; // 0x168(0x01)
	bool CreateChracterOptions; // 0x169(0x01)
	char pad_16A[0x6]; // 0x16a(0x06)
	struct UDialogueSequenceRule* Rule; // 0x170(0x08)
	struct TArray<struct FSceneRigRule_RuleAsset> RuleAssets; // 0x178(0x10)
	struct TArray<struct UDialogueLineRule*> LineRules; // 0x188(0x10)
	struct FTimeRigOutputSymbol DialogueFinish; // 0x198(0x18)
	struct FTimeRigOutputSymbol ForceFinish; // 0x1b0(0x18)
};

// Class Phoenix.SceneRigRuleState_DialogueSequence
// Size: 0x2e0 (Inherited: 0x78)
struct USceneRigRuleState_DialogueSequence : USceneRigRuleState {
	struct FDialogueSequenceRuleInstance RuleInstance; // 0x78(0x268)

	void OnForceFinishChanged(struct FTimeRigCoordinate PreviousCoordinate, struct FTimeRigCoordinate CurrentCoordinate); // Function Phoenix.SceneRigRuleState_DialogueSequence.OnForceFinishChanged // (Final|Native|Protected) // @ game+0x342d0b0
};

// Class Phoenix.RunAt_MobilityChoice
// Size: 0x30 (Inherited: 0x28)
struct URunAt_MobilityChoice : UNPC_MobilityChoice {
	float ChangeDist; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.RuneJunctionSwitch
// Size: 0x250 (Inherited: 0x248)
struct ARuneJunctionSwitch : AActor {
	bool bIsUnderHeat; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)

	void RuneHitBySpell(struct ARuneSwitch* RuneSwitch); // Function Phoenix.RuneJunctionSwitch.RuneHitBySpell // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.RuneSwitch
// Size: 0x248 (Inherited: 0x248)
struct ARuneSwitch : AActor {
};

// Class Phoenix.SanctuaryDesk
// Size: 0x2e0 (Inherited: 0x2a8)
struct ASanctuaryDesk : ATransfigurationObjectBase {
	struct UMaterialInterface* InkWritingMaterial; // 0x2a8(0x08)
	struct UMaterialInterface* InkWritingBackSideMaterial; // 0x2b0(0x08)
	struct UCurveFloat* InkWritingCurve; // 0x2b8(0x08)
	struct UMaterialInstanceDynamic* FrontMaterialInstance; // 0x2c0(0x08)
	struct UMaterialInstanceDynamic* BackMaterialInstance; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void ClearPage(bool bFrontSide); // Function Phoenix.SanctuaryDesk.ClearPage // (Final|Native|Public|BlueprintCallable) // @ game+0x342c120
	void BeginWritingPage(); // Function Phoenix.SanctuaryDesk.BeginWritingPage // (Final|Native|Public|BlueprintCallable) // @ game+0x342c100
	void ApplyMaterialsToPaper(struct UPrimitiveComponent* InPaperComponent); // Function Phoenix.SanctuaryDesk.ApplyMaterialsToPaper // (Final|Native|Public|BlueprintCallable) // @ game+0x342c070
};

// Class Phoenix.SanctuaryExpansionAnimationActor
// Size: 0x2d0 (Inherited: 0x248)
struct ASanctuaryExpansionAnimationActor : AActor {
	struct FDbSingleColumnInfo ExpansionID; // 0x248(0x88)
};

// Class Phoenix.SanctuaryExpansionManager
// Size: 0xc8 (Inherited: 0x28)
struct USanctuaryExpansionManager : UObject {
	char pad_28[0xa0]; // 0x28(0xa0)

	void TriggerExpansion(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.TriggerExpansion // (Final|Native|Public|BlueprintCallable) // @ game+0x342d860
	bool ShouldSkipUnlockCinematics(); // Function Phoenix.SanctuaryExpansionManager.ShouldSkipUnlockCinematics // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x19e8aa0
	void ReleaseExpansion(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.ReleaseExpansion // (Final|Native|Public|BlueprintCallable) // @ game+0x342d440
	void LoadExpansion(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.LoadExpansion // (Final|Native|Public|BlueprintCallable) // @ game+0x342cf50
	bool IsValidExpansion(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.IsValidExpansion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342ceb0
	bool IsExpansionOpen(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.IsExpansionOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342ce10
	bool IsExpansionLoaded(struct FName InExpansionLockID); // Function Phoenix.SanctuaryExpansionManager.IsExpansionLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342cd70
};

// Class Phoenix.StreamingPlaceholderBase
// Size: 0x260 (Inherited: 0x248)
struct AStreamingPlaceholderBase : AActor {
	char pad_248[0x18]; // 0x248(0x18)

	void WaitUntilLoadIsComplete(); // Function Phoenix.StreamingPlaceholderBase.WaitUntilLoadIsComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x348f530
	void TriggerLoad(bool bInSpawnWhenReady, bool bForceBlockingLoad); // Function Phoenix.StreamingPlaceholderBase.TriggerLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x348f460
	void SpawnObject(bool bBlockingLoadIfNotLoaded); // Function Phoenix.StreamingPlaceholderBase.SpawnObject // (Final|Native|Public|BlueprintCallable) // @ game+0x348f3d0
	void ReleaseObject(); // Function Phoenix.StreamingPlaceholderBase.ReleaseObject // (Final|Native|Public|BlueprintCallable) // @ game+0x348f390
};

// Class Phoenix.StreamingPlaceholderChildActorBase
// Size: 0x270 (Inherited: 0x260)
struct AStreamingPlaceholderChildActorBase : AStreamingPlaceholderBase {
	enum class EStreamingPlaceholderPriority StreamingPriority; // 0x260(0x01)
	bool bAutoLoad; // 0x261(0x01)
	bool bAutoSpawn; // 0x262(0x01)
	char pad_263[0x5]; // 0x263(0x05)
	struct UStreamingPreviewChildActorComponent* ChildActorComponent; // 0x268(0x08)
};

// Class Phoenix.StreamingPlaceholderActor
// Size: 0x298 (Inherited: 0x270)
struct AStreamingPlaceholderActor : AStreamingPlaceholderChildActorBase {
	struct TSoftClassPtr<UObject> ActorToSpawn; // 0x270(0x28)
};

// Class Phoenix.SanctuaryHousekeepingPlaceholder
// Size: 0x560 (Inherited: 0x298)
struct ASanctuaryHousekeepingPlaceholder : AStreamingPlaceholderActor {
	struct FDbSingleColumnInfo HousekeepingType; // 0x298(0x88)
	struct FDbSingleColumnInfo ZoneID; // 0x320(0x88)
	struct FDbSingleColumnInfo LockId; // 0x3a8(0x88)
	struct FDbSingleColumnInfo LockID2; // 0x430(0x88)
	uint32_t UID; // 0x4b8(0x04)
	char pad_4BC[0x4]; // 0x4bc(0x04)
	struct UStaticMesh* StaticMeshOverride; // 0x4c0(0x08)
	struct FDbSingleColumnInfo LootID; // 0x4c8(0x88)
	bool bIsAliveOnFirstLoad; // 0x550(0x01)
	bool bIsSpawnedInAsOwnActor; // 0x551(0x01)
	char pad_552[0xe]; // 0x552(0x0e)

	void OnForagableCollected(struct AForagable* Actor); // Function Phoenix.SanctuaryHousekeepingPlaceholder.OnForagableCollected // (Final|Native|Public) // @ game+0x342cce0
	void OnChildActorEndPlay(struct AActor* Actor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.SanctuaryHousekeepingPlaceholder.OnChildActorEndPlay // (Final|Native|Private) // @ game+0x342cfe0
	void HandleBreakableDestroyed(struct UObject* i_caller); // Function Phoenix.SanctuaryHousekeepingPlaceholder.HandleBreakableDestroyed // (Final|Native|Public) // @ game+0x342cce0
};

// Class Phoenix.SanctuaryItemGenerator
// Size: 0x2b8 (Inherited: 0x2a8)
struct ASanctuaryItemGenerator : ATransfigurationObjectBase {
	char pad_2A8[0x10]; // 0x2a8(0x10)

	void ShowCallout(); // Function Phoenix.SanctuaryItemGenerator.ShowCallout // (Final|Native|Public|BlueprintCallable) // @ game+0x342d840
	void BP_NotifyItemHeldUpdated(struct FName NewItemHeld, bool bIsInitialState); // Function Phoenix.SanctuaryItemGenerator.BP_NotifyItemHeldUpdated // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SanctuaryLightingIdentityMasterComponent
// Size: 0x4d0 (Inherited: 0xc8)
struct USanctuaryLightingIdentityMasterComponent : UActorComponent {
	struct FMulticastInlineDelegate OnLightingIdentityChanged; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnLightingIdentityBlendUpdate; // 0xd8(0x10)
	struct TMap<enum class ESanctuaryIdentity, struct USanctuaryIdentitySettingsAsset*> IdentitySettings; // 0xe8(0x50)
	enum class ESanctuaryIdentity CurrentIdentity; // 0x138(0x01)
	enum class ESanctuaryIdentity PreviousIdentity; // 0x139(0x01)
	char pad_13A[0xe]; // 0x13a(0x0e)
	struct FTimeController TimeController; // 0x148(0xb0)
	struct FEphemerisComputer EphemerisComputer; // 0x1f8(0x148)
	char pad_340[0x190]; // 0x340(0x190)

	void SetIdentity(enum class ESanctuaryIdentity InNewIdentity, float InBlendDuration); // Function Phoenix.SanctuaryLightingIdentityMasterComponent.SetIdentity // (Final|Native|Public|BlueprintCallable) // @ game+0x342d690
	enum class ESanctuaryIdentity GetPreviousIdentity(); // Function Phoenix.SanctuaryLightingIdentityMasterComponent.GetPreviousIdentity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c900
	struct USanctuaryLightingIdentityMasterComponent* GetLightingIdentityMaster(struct UObject* WorldContextObject); // Function Phoenix.SanctuaryLightingIdentityMasterComponent.GetLightingIdentityMaster // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x342c4e0
	float GetIdentityBlendWeight(); // Function Phoenix.SanctuaryLightingIdentityMasterComponent.GetIdentityBlendWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c490
	enum class ESanctuaryIdentity GetCurrentIdentity(); // Function Phoenix.SanctuaryLightingIdentityMasterComponent.GetCurrentIdentity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c390
};

// Class Phoenix.SanctuaryLightingIdentityMaster
// Size: 0x250 (Inherited: 0x248)
struct ASanctuaryLightingIdentityMaster : AActor {
	struct USanctuaryLightingIdentityMasterComponent* MasterComponent; // 0x248(0x08)
};

// Class Phoenix.SanctuaryIdentitySettingsAsset
// Size: 0x6b0 (Inherited: 0x30)
struct USanctuaryIdentitySettingsAsset : UDataAsset {
	struct FSanctuaryIdentitySettings IdentitySettings; // 0x30(0x680)
};

// Class Phoenix.SanctuaryLightingIdentityVolume
// Size: 0x2f8 (Inherited: 0x280)
struct ASanctuaryLightingIdentityVolume : AVolume {
	float Priority; // 0x280(0x04)
	float BlendRadius; // 0x284(0x04)
	float BlendWeight; // 0x288(0x04)
	bool bUnbounded; // 0x28c(0x01)
	bool bEnableTransitionExposureSpeedUp; // 0x28d(0x01)
	char pad_28E[0x2]; // 0x28e(0x02)
	float TransitionExposureSpeed; // 0x290(0x04)
	bool bEnableTransitionFogHistoryRemoval; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	float TransitionFogHistoryWeight; // 0x298(0x04)
	bool bEnableDayNight; // 0x29c(0x01)
	bool bEnableGlobalLighting; // 0x29d(0x01)
	bool bEnableRenderSettings; // 0x29e(0x01)
	bool bEnablePostProcess; // 0x29f(0x01)
	struct UBoxComponent* BoxComponent; // 0x2a0(0x08)
	struct UBlendableGlobalLightingComponent* GlobalLightingComponent; // 0x2a8(0x08)
	struct URenderSettingsComponent* RenderSettingsComponent; // 0x2b0(0x08)
	struct UPostProcessComponent* PostProcessComponent; // 0x2b8(0x08)
	struct UBlendableGlobalLightingComponent* PrevGlobalLightingComponent; // 0x2c0(0x08)
	struct URenderSettingsComponent* PrevRenderSettingsComponent; // 0x2c8(0x08)
	struct UPostProcessComponent* PrevPostProcessComponent; // 0x2d0(0x08)
	struct UBlendableGlobalLightingComponent* TransitionGlobalLightingComponent; // 0x2d8(0x08)
	struct UPostProcessComponent* TransitionPostProcessComponent; // 0x2e0(0x08)
	char pad_2E8[0x10]; // 0x2e8(0x10)
};

// Class Phoenix.SanctuaryLoom
// Size: 0x2a8 (Inherited: 0x2a8)
struct ASanctuaryLoom : ATransfigurationObjectBase {

	void ShowLoomUI(); // Function Phoenix.SanctuaryLoom.ShowLoomUI // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SanctuaryManager
// Size: 0x260 (Inherited: 0x28)
struct USanctuaryManager : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct USanctuaryExpansionManager* ExpansionManager; // 0x48(0x08)
	char pad_50[0x168]; // 0x50(0x168)
	struct FGameplayProperty_Float GeneratorTimeMultiplier; // 0x1b8(0x90)
	char pad_248[0x18]; // 0x248(0x18)

	void SetInitialSanctuaryCustomizationChoice(struct UObject* WorldContextObject, struct FString InChoice); // Function Phoenix.SanctuaryManager.SetInitialSanctuaryCustomizationChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x342d760
	void SetCustomNameForChest(int32_t ObjectUID, struct FString NewName); // Function Phoenix.SanctuaryManager.SetCustomNameForChest // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x342d560
	void RemoveCreatureToyFromBiome(struct AActor* ToyActor); // Function Phoenix.SanctuaryManager.RemoveCreatureToyFromBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x342d4d0
	void OnToyChestEndPlay(struct AActor* ToyChestActor); // Function Phoenix.SanctuaryManager.OnToyChestEndPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x342d3b0
	void OnToyChestBeginPlay(struct AActor* ToyChestActor); // Function Phoenix.SanctuaryManager.OnToyChestBeginPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x342d320
	void OnStartNewInterval(struct FTimeEvent& InTimeEvent); // Function Phoenix.SanctuaryManager.OnStartNewInterval // (Final|Native|Private|HasOutParms) // @ game+0x342d270
	void OnSaveGameLoaded(); // Function Phoenix.SanctuaryManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x342d1a0
	void OnSanctuaryItemGeneratorFinished(struct FTimeEvent& InTimeEvent); // Function Phoenix.SanctuaryManager.OnSanctuaryItemGeneratorFinished // (Final|Native|Public|HasOutParms) // @ game+0x342d1c0
	void OnNewGame(); // Function Phoenix.SanctuaryManager.OnNewGame // (Final|Native|Public) // @ game+0x342d1a0
	struct FTimespan GetSanctuaryItemGeneratorTimeRemaining(struct ASanctuaryItemGenerator* ItemGenerator); // Function Phoenix.SanctuaryManager.GetSanctuaryItemGeneratorTimeRemaining // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x342cc50
	float GetSanctuaryItemGeneratorProgress(struct ASanctuaryItemGenerator* ItemGenerator); // Function Phoenix.SanctuaryManager.GetSanctuaryItemGeneratorProgress // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x342cbb0
	void GetSanctuaryItemGeneratorItemHeld(struct ASanctuaryItemGenerator* ItemGenerator, struct FName& OutItemHeld, int32_t& OutQuantity); // Function Phoenix.SanctuaryManager.GetSanctuaryItemGeneratorItemHeld // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x342ca90
	struct FName GetSanctuaryItemGeneratorGuaranteedOutputItem(struct ASanctuaryItemGenerator* ItemGenerator); // Function Phoenix.SanctuaryManager.GetSanctuaryItemGeneratorGuaranteedOutputItem // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x342ca00
	struct TArray<struct FSanctuaryExpansionDefinition> GetSanctuaryExpansions(struct FName AreaID); // Function Phoenix.SanctuaryManager.GetSanctuaryExpansions // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x342c920
	struct FName GetNurturingSpaceIDFromBiomeLevel(struct FString LevelPath); // Function Phoenix.SanctuaryManager.GetNurturingSpaceIDFromBiomeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c840
	struct FName GetNurturingSpaceIDFromBiomeID(struct FName BiomeID); // Function Phoenix.SanctuaryManager.GetNurturingSpaceIDFromBiomeID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c7b0
	void GetNurtureSpacesContainingCreatures(bool bIncludeInventory, bool bIncludeSanctuaryBiomes, bool bIncludeOther, struct TSet<struct FName>& OutNurtureSpaceIDs); // Function Phoenix.SanctuaryManager.GetNurtureSpacesContainingCreatures // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c570
	enum class ESanctuaryIdentity GetInitialSanctuaryLightingIdentity(); // Function Phoenix.SanctuaryManager.GetInitialSanctuaryLightingIdentity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c4c0
	struct USanctuaryExpansionManager* GetExpansionManager(); // Function Phoenix.SanctuaryManager.GetExpansionManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x326c230
	struct FString GetCustomNameForChest(int32_t ObjectUID); // Function Phoenix.SanctuaryManager.GetCustomNameForChest // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x342c3b0
	struct FName GetBiomeIDFromNurturingSpaceID(struct FName NurturingSpaceID); // Function Phoenix.SanctuaryManager.GetBiomeIDFromNurturingSpaceID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c300
	struct FName GetBiomeIDFromLevel(struct FString LevelPath); // Function Phoenix.SanctuaryManager.GetBiomeIDFromLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x342c240
	struct USanctuaryManager* Get(bool bCreateIfNull); // Function Phoenix.SanctuaryManager.Get // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x342c1b0
	void AddCreatureToyToBiome(struct AActor* ToyActor); // Function Phoenix.SanctuaryManager.AddCreatureToyToBiome // (Final|Native|Public|BlueprintCallable) // @ game+0x342bfe0
};

// Class Phoenix.SanctuaryPortalCaptureExit
// Size: 0x270 (Inherited: 0x248)
struct ASanctuaryPortalCaptureExit : AActor {
	struct USceneCaptureComponentCubeIncremental* SceneCaptureComponent; // 0x248(0x08)
	struct TArray<struct AActor*> HiddenActorClasses; // 0x250(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> HiddenActorInstances; // 0x260(0x10)
};

// Class Phoenix.SanctuaryPortalCaptureEntrance
// Size: 0x270 (Inherited: 0x248)
struct ASanctuaryPortalCaptureEntrance : AActor {
	struct FName EntranceZone; // 0x248(0x08)
	struct UTextureRenderTargetCube* RenderTarget; // 0x250(0x08)
	struct UTextureCube* PreRenderedTexture; // 0x258(0x08)
	struct ASanctuaryPortalCaptureExit* Exit; // 0x260(0x08)
	bool bReCaptureAtRuntime; // 0x268(0x01)
	bool bHasRuntimeCapture; // 0x269(0x01)
	char pad_26A[0x6]; // 0x26a(0x06)

	void RuntimeReCapture(); // Function Phoenix.SanctuaryPortalCaptureEntrance.RuntimeReCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x34328c0
	void Capture(); // Function Phoenix.SanctuaryPortalCaptureEntrance.Capture // (Final|Native|Public|BlueprintCallable) // @ game+0x3430ff0
	void ApplyMaterialParameters(struct UMaterialInstanceDynamic* InMaterialInstanceDynamic); // Function Phoenix.SanctuaryPortalCaptureEntrance.ApplyMaterialParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x3430ad0
};

// Class Phoenix.SanctuaryPortalMaterialComponent
// Size: 0x320 (Inherited: 0x220)
struct USanctuaryPortalMaterialComponent : USceneComponent {
	struct FName EntranceZone; // 0x218(0x08)
	struct FSanctuaryPortalMaterialSettings MaterialSettings; // 0x220(0x1c)
	struct TMap<enum class ESanctuaryIdentity, struct FSanctuaryPortalIdentityMaterialOverrideSettings> IdentityOverrides; // 0x240(0x50)
	bool bSeparateSettingsForPreRenderedCubemap; // 0x290(0x01)
	struct FSanctuaryPortalMaterialSettings PreRenderedCubemapMaterialSettings; // 0x294(0x1c)
	struct TMap<enum class ESanctuaryIdentity, struct FSanctuaryPortalIdentityMaterialOverrideSettings> PreRenderedCubemapIdentityOverrides; // 0x2b0(0x50)
	struct TArray<struct UMaterialInstanceDynamic*> MaterialInstances; // 0x300(0x10)
	char pad_311[0xf]; // 0x311(0x0f)

	void OnUpdateIdentity(enum class ESanctuaryIdentity PreviousIdentity, enum class ESanctuaryIdentity CurrentIdentity, float BlendWeight); // Function Phoenix.SanctuaryPortalMaterialComponent.OnUpdateIdentity // (Final|Native|Private) // @ game+0x34322f0
	void OnUpdateEntranceMaterials(struct UObject* InCaller); // Function Phoenix.SanctuaryPortalMaterialComponent.OnUpdateEntranceMaterials // (Final|Native|Private) // @ game+0x3432260
};

// Class Phoenix.SanctuarySettings
// Size: 0x30 (Inherited: 0x28)
struct USanctuarySettings : UObject {
	int32_t HousekeepingSimulationStepIntervalSec; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.SanctuaryStreamingController
// Size: 0x3c0 (Inherited: 0x248)
struct ASanctuaryStreamingController : AActor {
	struct TArray<struct TSoftObjectPtr<UWorld>> GlobalLevels; // 0x248(0x10)
	struct TArray<struct FSanctuaryStreamingIslandDefinition> Islands; // 0x258(0x10)
	bool bTreatLightingLevelsAsMinimalLoad; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FName ActiveIsland; // 0x26c(0x08)
	bool bTeleportLockActive; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	struct FMulticastInlineDelegate OnActiveIslandSet; // 0x278(0x10)
	char pad_288[0x18]; // 0x288(0x18)
	struct FMulticastInlineDelegate OnMinimumLoadComplete; // 0x2a0(0x10)
	struct FMulticastInlineDelegate OnZoneIsVisible; // 0x2b0(0x10)
	char pad_2C0[0x100]; // 0x2c0(0x100)

	void UnlockLockForZone(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.UnlockLockForZone // (Final|Native|Public|BlueprintCallable) // @ game+0x3432e70
	void UnloadZoneExplicitly(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.UnloadZoneExplicitly // (Final|Native|Public|BlueprintCallable) // @ game+0x3432de0
	void SetActiveIslandFromZone(struct FName InZoneName); // Function Phoenix.SanctuaryStreamingController.SetActiveIslandFromZone // (Final|Native|Public|BlueprintCallable) // @ game+0x3432aa0
	void SetActiveIsland(struct FName InActiveIsland); // Function Phoenix.SanctuaryStreamingController.SetActiveIsland // (Final|Native|Public|BlueprintCallable) // @ game+0x3432a10
	void RequestZoneReadyToEnter(struct UObject* WorldContextObject, struct FName ZoneName, struct FDelegate OnZoneIsReady, bool bIgnoreLock); // Function Phoenix.SanctuaryStreamingController.RequestZoneReadyToEnter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432700
	void RequestZoneLoad(struct FName ZoneName, bool bMakeVisible, bool bIgnoreLock); // Function Phoenix.SanctuaryStreamingController.RequestZoneLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x34325f0
	void OnUpdateStreamingState(); // Function Phoenix.SanctuaryStreamingController.OnUpdateStreamingState // (Final|Native|Private) // @ game+0x3432400
	void MakeZoneVisible(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.MakeZoneVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x3431c20
	bool IsZoneUnlocked(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.IsZoneUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3431b80
	bool IsZoneReadyToEnter(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.IsZoneReadyToEnter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3431ae0
	bool IsZoneMinimumLoadVisible(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.IsZoneMinimumLoadVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3431a40
	bool IsZoneMinimumLoadComplete(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.IsZoneMinimumLoadComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34319a0
	bool IsZoneCompletelyVisible(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.IsZoneCompletelyVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3431900
	void HideParallelLevelsInInactiveIslands(); // Function Phoenix.SanctuaryStreamingController.HideParallelLevelsInInactiveIslands // (Final|Native|Public|BlueprintCallable) // @ game+0x3431830
	struct FName GetIslandForZone(struct FName InZoneName); // Function Phoenix.SanctuaryStreamingController.GetIslandForZone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3431650
	struct ASanctuaryStreamingController* Get(struct UObject* WorldContextObject); // Function Phoenix.SanctuaryStreamingController.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431270
	bool DoesZoneExist(struct FName ZoneName); // Function Phoenix.SanctuaryStreamingController.DoesZoneExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34310d0
	void BlockingMinimalZoneLoad(struct FName ZoneName, bool bMakeVisible); // Function Phoenix.SanctuaryStreamingController.BlockingMinimalZoneLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x3430f20
};

// Class Phoenix.SanctuaryZoneStreamingVolume
// Size: 0x288 (Inherited: 0x280)
struct ASanctuaryZoneStreamingVolume : AVolume {
	struct FName ZoneName; // 0x280(0x08)
};

// Class Phoenix.SanctuaryStreamingVFXTriggerVolume
// Size: 0x458 (Inherited: 0x260)
struct ASanctuaryStreamingVFXTriggerVolume : AStreamingPlaceholderBase {
	bool bAutoSwapWhenIdentityChanges; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)
	struct FIdentityParticleSystemsData IdentityParticleSystems; // 0x268(0x50)
	struct FParticleSystemsData DefaultSystem; // 0x2b8(0x20)
	struct FMulticastInlineDelegate OnPlayerOverlapStart; // 0x2d8(0x10)
	struct FMulticastInlineDelegate OnPlayerOverlapEnd; // 0x2e8(0x10)
	struct FMulticastInlineDelegate OnCameraOverlapStart; // 0x2f8(0x10)
	struct FMulticastInlineDelegate OnCameraOverlapEnd; // 0x308(0x10)
	struct FMulticastInlineDelegate OnMoveEmitters; // 0x318(0x10)
	struct UBoxComponent* BoxComponent; // 0x328(0x08)
	bool PlayerTriggers; // 0x330(0x01)
	bool CameraTriggers; // 0x331(0x01)
	char pad_332[0x2]; // 0x332(0x02)
	float OffsetAmount; // 0x334(0x04)
	bool PlayerRelativeMovement; // 0x338(0x01)
	char pad_339[0x7]; // 0x339(0x07)
	struct TArray<struct UParticleSystemComponent*> ParticleEffectsList; // 0x340(0x10)
	struct TArray<struct UNiagaraComponent*> NiagaraEffectsList; // 0x350(0x10)
	bool IsActivated; // 0x360(0x01)
	char pad_361[0xf7]; // 0x361(0xf7)

	void OnParticleSystemFinished(struct UParticleSystemComponent* PSystem); // Function Phoenix.SanctuaryStreamingVFXTriggerVolume.OnParticleSystemFinished // (Final|Native|Protected) // @ game+0x34321b0
	void OnOverlapStart(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SanctuaryStreamingVFXTriggerVolume.OnOverlapStart // (Final|Native|Public|HasOutParms) // @ game+0x3431f90
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SanctuaryStreamingVFXTriggerVolume.OnOverlapEnd // (Final|Native|Public) // @ game+0x3431e30
	void OnNiagaraFinished(struct UNiagaraComponent* PSystem); // Function Phoenix.SanctuaryStreamingVFXTriggerVolume.OnNiagaraFinished // (Final|Native|Protected) // @ game+0x3431da0
	void OnIdentityChanged(enum class ESanctuaryIdentity OldIdentity, enum class ESanctuaryIdentity NewIdentity); // Function Phoenix.SanctuaryStreamingVFXTriggerVolume.OnIdentityChanged // (Native|Protected) // @ game+0x3431cd0
};

// Class Phoenix.SavedGameButton
// Size: 0x328 (Inherited: 0x328)
struct USavedGameButton : UPhoenixUserWidget {

	void MoveCursorToButton(); // Function Phoenix.SavedGameButton.MoveCursorToButton // (Exec|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SaveGameWidget
// Size: 0x338 (Inherited: 0x328)
struct USaveGameWidget : UPhoenixUserWidget {
	char pad_328[0x10]; // 0x328(0x10)

	bool SaveGameInSlot(int32_t SaveSlot); // Function Phoenix.SaveGameWidget.SaveGameInSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x3432970
	void RefreshListAfterSaveFailed(); // Function Phoenix.SaveGameWidget.RefreshListAfterSaveFailed // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void RefreshListAfterSave(struct TArray<struct FSaveGameInfo>& SaveData); // Function Phoenix.SaveGameWidget.RefreshListAfterSave // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	int32_t ParseSlotNumFromName(struct FString SlotName); // Function Phoenix.SaveGameWidget.ParseSlotNumFromName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3432420
	void OnSaveGameFailed(); // Function Phoenix.SaveGameWidget.OnSaveGameFailed // (Final|Native|Protected) // @ game+0x3432240
	void OnAsyncSaveCompleted(); // Function Phoenix.SaveGameWidget.OnAsyncSaveCompleted // (Final|Native|Protected) // @ game+0x3431cb0
	void GetUserSavesBySlot(struct TArray<struct FSaveGameInfo>& SaveData); // Function Phoenix.SaveGameWidget.GetUserSavesBySlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3431720
	bool DeleteGameFromSlot(int32_t SaveSlot); // Function Phoenix.SaveGameWidget.DeleteGameFromSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x3431030
};

// Class Phoenix.SaveLoadSettingsWidget
// Size: 0x410 (Inherited: 0x3f0)
struct USaveLoadSettingsWidget : USettingsTabWidget {
	struct FMulticastInlineDelegate OnLoadButtonClicked; // 0x3f0(0x10)
	struct FMulticastInlineDelegate OnSaveButtonClicked; // 0x400(0x10)

	bool RestartFromLastSave(); // Function Phoenix.SaveLoadSettingsWidget.RestartFromLastSave // (Final|Native|Protected|BlueprintCallable) // @ game+0x3432890
	void QuitGame(); // Function Phoenix.SaveLoadSettingsWidget.QuitGame // (Final|Native|Protected|BlueprintCallable) // @ game+0x3432510
	void ExitToMain(); // Function Phoenix.SaveLoadSettingsWidget.ExitToMain // (Final|Native|Protected|BlueprintCallable) // @ game+0x3431250
	void ActivateHoverdrone(); // Function Phoenix.SaveLoadSettingsWidget.ActivateHoverdrone // (Final|Native|Protected|BlueprintCallable) // @ game+0x3430a40
};

// Class Phoenix.SaveManager
// Size: 0x128 (Inherited: 0x28)
struct USaveManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnPreGameSave; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPostGameSave; // 0x40(0x10)
	struct FMulticastInlineDelegate OnPreGameLoad; // 0x50(0x10)
	struct FMulticastInlineDelegate OnPostGameLoad; // 0x60(0x10)
	struct FMulticastInlineDelegate OnGameDifficultyChanged; // 0x70(0x10)
	char pad_80[0xa8]; // 0x80(0xa8)

	bool UserSaveGameData(); // Function Phoenix.SaveManager.UserSaveGameData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3433130
	bool UpdateActiveCharacterProfilePresets(struct TArray<struct FName> CharacterPresets); // Function Phoenix.SaveManager.UpdateActiveCharacterProfilePresets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3433040
	bool UpdateActiveCharacterProfileClothes(struct TArray<struct FName> CharacterClothes, struct FString AllGearTags); // Function Phoenix.SaveManager.UpdateActiveCharacterProfileClothes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432f00
	void UnblockSaveGames(); // Function Phoenix.SaveManager.UnblockSaveGames // (Final|Exec|Native|Public) // @ game+0x3432dc0
	void SetPrimaryUserIndex(int32_t Index); // Function Phoenix.SaveManager.SetPrimaryUserIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432d30
	bool SetCurrentVoicePitch(int32_t VoicePitch); // Function Phoenix.SaveManager.SetCurrentVoicePitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432ca0
	bool SetCurrentRigGender(struct FString RigGender); // Function Phoenix.SaveManager.SetCurrentRigGender // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432bb0
	bool SetCurrentGameDifficulty(enum class EDifficulty Difficulty); // Function Phoenix.SaveManager.SetCurrentGameDifficulty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432b30
	bool SaveCurrentVoicePitch(int32_t VoicePitch); // Function Phoenix.SaveManager.SaveCurrentVoicePitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34328e0
	bool ResetCurrentGameDifficulty(); // Function Phoenix.SaveManager.ResetCurrentGameDifficulty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432860
	void RemoveBlockRequest(enum class ESaveBlockReason Reason, bool bRemoveAll); // Function Phoenix.SaveManager.RemoveBlockRequest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3432530
	bool IsSaveGameBlocked(); // Function Phoenix.SaveManager.IsSaveGameBlocked // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34318d0
	bool IsAutoSaveGameBlocked(enum class EAutoSaveReason Reason); // Function Phoenix.SaveManager.IsAutoSaveGameBlocked // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431850
	int32_t GetPrimaryUserIndex(); // Function Phoenix.SaveManager.GetPrimaryUserIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34316e0
	int32_t GetCurrentVoicePitch(); // Function Phoenix.SaveManager.GetCurrentVoicePitch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431620
	bool GetCurrentGameDifficulty(enum class EDifficulty& Difficulty); // Function Phoenix.SaveManager.GetCurrentGameDifficulty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x3431590
	struct TArray<struct FSaveGameInfo> GetAllUserEntries(); // Function Phoenix.SaveManager.GetAllUserEntries // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431540
	struct TArray<struct FSaveGameInfo> GetAllSavesOfType_Unsorted_IncludeEmptyUserSaves(enum class ESaveType SaveType, int32_t PlayerId); // Function Phoenix.SaveManager.GetAllSavesOfType_Unsorted_IncludeEmptyUserSaves // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431460
	struct TArray<struct FSaveGameInfo> GetAllSavesOfType(enum class ESaveType SaveType, int32_t PlayerId); // Function Phoenix.SaveManager.GetAllSavesOfType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431380
	struct TArray<struct FSaveGameInfo> GetAllAutoEntries(); // Function Phoenix.SaveManager.GetAllAutoEntries // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431330
	struct USaveManager* Get(); // Function Phoenix.SaveManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3431300
	void ExecutePreGameSave(); // Function Phoenix.SaveManager.ExecutePreGameSave // (Final|Native|Public) // @ game+0x3431230
	void ExecutePreGameLoad(); // Function Phoenix.SaveManager.ExecutePreGameLoad // (Final|Native|Public) // @ game+0x3431210
	void ExecutePostGameSave(); // Function Phoenix.SaveManager.ExecutePostGameSave // (Final|Native|Public) // @ game+0x34311f0
	void ExecutePostGameLoad(); // Function Phoenix.SaveManager.ExecutePostGameLoad // (Final|Native|Public) // @ game+0x34311d0
	void ExecuteCombatEnds(); // Function Phoenix.SaveManager.ExecuteCombatEnds // (Final|Native|Public) // @ game+0x34311b0
	void ExecuteCombatBegins(); // Function Phoenix.SaveManager.ExecuteCombatBegins // (Final|Native|Public) // @ game+0x3431190
	void DumpSaveGameBlocks(); // Function Phoenix.SaveManager.DumpSaveGameBlocks // (Final|Exec|Native|Public) // @ game+0x3431170
	void ClearSaveGameBlocks(); // Function Phoenix.SaveManager.ClearSaveGameBlocks // (Final|Exec|Native|Public) // @ game+0x3431010
	bool BP_DoesCharacterExistYet(); // Function Phoenix.SaveManager.BP_DoesCharacterExistYet // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430ed0
	bool BP_CreateCharacter(struct FString CharacterName, struct FString CharacterHouse); // Function Phoenix.SaveManager.BP_CreateCharacter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430d60
	void BP_ContinuePrevSessionClock(); // Function Phoenix.SaveManager.BP_ContinuePrevSessionClock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430d40
	bool BP_AutoSaveGame(enum class EAutoSaveReason Reason); // Function Phoenix.SaveManager.BP_AutoSaveGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430cc0
	void BlockSaveGames(); // Function Phoenix.SaveManager.BlockSaveGames // (Final|Exec|Native|Public) // @ game+0x3430f00
	bool AutoSaveGameData(enum class EAutoSaveReason Type, bool bCollectSaveData); // Function Phoenix.SaveManager.AutoSaveGameData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430bf0
	bool AutoSaveFlush(bool bAsynchronous); // Function Phoenix.SaveManager.AutoSaveFlush // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430b60
	void AddBlockRequest(enum class ESaveBlockReason Reason); // Function Phoenix.SaveManager.AddBlockRequest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3430a60
};

// Class Phoenix.SceneAction_AbandonStations
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_AbandonStations : USceneRigObjectActionBase {
	bool bAbortPerformTasks; // 0xa0(0x01)
	bool bStopAndWait; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneActionState_AbandonStations
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_AbandonStations : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)

	void OnExited(); // Function Phoenix.SceneActionState_AbandonStations.OnExited // (Final|Native|Public) // @ game+0x3437e40
};

// Class Phoenix.SceneAction_ActivateHideTrigger
// Size: 0xa0 (Inherited: 0xa0)
struct USceneAction_ActivateHideTrigger : USceneRigObjectActionBase {
};

// Class Phoenix.SceneActionState_ActivateHideTrigger
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_ActivateHideTrigger : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_ActorMeshStates
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_ActorMeshStates : USceneRigObjectActionBase {
	bool bIncludeChildActors; // 0xa0(0x01)
	bool bUpdateEveryFrame; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneAction_ActorMeshSetup
// Size: 0xb0 (Inherited: 0xa8)
struct USceneAction_ActorMeshSetup : USceneAction_ActorMeshStates {
	struct FActorMeshSetupName Setup; // 0xa8(0x08)
};

// Class Phoenix.SceneAction_ActorMeshFullSetup
// Size: 0xc0 (Inherited: 0xa8)
struct USceneAction_ActorMeshFullSetup : USceneAction_ActorMeshStates {
	struct FActorMeshSetupDefinition Setup; // 0xa8(0x18)
};

// Class Phoenix.SceneActionState_ActorMeshStates
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_ActorMeshStates : USceneRigObjectActionState {
	bool bNeedsRestore; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.SceneActionState_Adaptation
// Size: 0xe8 (Inherited: 0x50)
struct USceneActionState_Adaptation : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
	struct FEmissiveAdaptationFinalState InitialState; // 0x58(0x88)
	float CurrentTime; // 0xe0(0x04)
	bool bInitialStateValid; // 0xe4(0x01)
	bool bInserted; // 0xe5(0x01)
	char pad_E6[0x2]; // 0xe6(0x02)
};

// Class Phoenix.SceneAction_Adaptation
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_Adaptation : USceneRigActionBase {
	float FeatherInTime; // 0x88(0x04)
	float FeatherOutTime; // 0x8c(0x04)
	float Priority; // 0x90(0x04)
	bool bHighestPossiblePriority; // 0x94(0x01)
	bool bEnabled; // 0x95(0x01)
	char pad_96[0x2]; // 0x96(0x02)
};

// Class Phoenix.SceneAction_AdaptationFixed
// Size: 0xa8 (Inherited: 0x98)
struct USceneAction_AdaptationFixed : USceneAction_Adaptation {
	float AdaptationEV100; // 0x98(0x04)
	int32_t Affects; // 0x9c(0x04)
	bool bIncludeBias; // 0xa0(0x01)
	bool bAllowOutdoorsDayTimeBoostFactor; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneAction_AdaptationCurve
// Size: 0xa8 (Inherited: 0x98)
struct USceneAction_AdaptationCurve : USceneAction_Adaptation {
	struct UCurveFloat* AdaptationEV100; // 0x98(0x08)
	int32_t Affects; // 0xa0(0x04)
	bool bIncludeBias; // 0xa4(0x01)
	bool bAllowOutdoorsDayTimeBoostFactor; // 0xa5(0x01)
	char pad_A6[0x2]; // 0xa6(0x02)
};

// Class Phoenix.SceneAction_AdaptationExpression
// Size: 0xa8 (Inherited: 0x98)
struct USceneAction_AdaptationExpression : USceneAction_Adaptation {
	int32_t Affects; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UExposureExpressionsExposureValue* Expression; // 0xa0(0x08)
};

// Class Phoenix.SceneAction_AdaptationSoftDisable
// Size: 0xa0 (Inherited: 0x98)
struct USceneAction_AdaptationSoftDisable : USceneAction_Adaptation {
	int32_t Affects; // 0x98(0x04)
	enum class ESceneActionAdaptationSoftDisableMethod Method; // 0x9c(0x01)
	bool bIncludeBias; // 0x9d(0x01)
	char pad_9E[0x2]; // 0x9e(0x02)
};

// Class Phoenix.SceneAction_AdaptationHold
// Size: 0xa0 (Inherited: 0x98)
struct USceneAction_AdaptationHold : USceneAction_Adaptation {
	int32_t Affects; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.SceneAction_AdaptationLock
// Size: 0x98 (Inherited: 0x98)
struct USceneAction_AdaptationLock : USceneAction_Adaptation {
};

// Class Phoenix.EmissiveAdaptationOverrideComponent
// Size: 0xf0 (Inherited: 0xc8)
struct UEmissiveAdaptationOverrideComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	float BlendInTime; // 0xd0(0x04)
	float SustainTime; // 0xd4(0x04)
	float BlendOutTime; // 0xd8(0x04)
	float Priority; // 0xdc(0x04)
	bool bInfiniteSustain; // 0xe0(0x01)
	bool bAutoStart; // 0xe1(0x01)
	bool bUsePriority; // 0xe2(0x01)
	char pad_E3[0x1]; // 0xe3(0x01)
	float StateStartTime; // 0xe4(0x04)
	enum class EEmissiveAdaptationOverrideState State; // 0xe8(0x01)
	bool bRegisteredAdaptationInterface; // 0xe9(0x01)
	char pad_EA[0x6]; // 0xea(0x06)

	void SetState(enum class EEmissiveAdaptationOverrideState NewState); // Function Phoenix.EmissiveAdaptationOverrideComponent.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x3437e80
	void Reset(); // Function Phoenix.EmissiveAdaptationOverrideComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x3437e60
	void GetState(enum class EEmissiveAdaptationOverrideState& CurrentState); // Function Phoenix.EmissiveAdaptationOverrideComponent.GetState // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x3437db0
};

// Class Phoenix.EmissiveAdaptationFixedOverrideComponent
// Size: 0x710 (Inherited: 0xf0)
struct UEmissiveAdaptationFixedOverrideComponent : UEmissiveAdaptationOverrideComponent {
	char pad_F0[0x8]; // 0xf0(0x08)
	float AdaptationEV100; // 0xf8(0x04)
	int32_t Affects; // 0xfc(0x04)
	bool bIncludeBias; // 0x100(0x01)
	bool bAllowOutdoorsDayTimeBoostFactor; // 0x101(0x01)
	char pad_102[0xe]; // 0x102(0x0e)
	struct FPostProcessSettings PostProcessSettings; // 0x110(0x5f0)
	float PostProcessingPriority; // 0x700(0x04)
	bool bBlendPostProcessSettings; // 0x704(0x01)
	bool bUsePostProcessSettings; // 0x705(0x01)
	char pad_706[0xa]; // 0x706(0x0a)
};

// Class Phoenix.SceneAction_AkAudioEvent
// Size: 0x100 (Inherited: 0xa0)
struct USceneAction_AkAudioEvent : USceneRigObjectActionBase {
	struct FActionParameter_AkAudioEvent Event; // 0xa0(0x28)
	struct FActionParameter_AkAudioEvent StopEvent; // 0xc8(0x28)
	bool DisableAudioOcclusion; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	struct FName AttachPointName; // 0xf4(0x08)
	char pad_FC[0x4]; // 0xfc(0x04)
};

// Class Phoenix.SceneActionState_AkAudioEvent
// Size: 0xb0 (Inherited: 0x70)
struct USceneActionState_AkAudioEvent : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	struct FSceneRigAkAudioEventTrackSectionData AkAudioEventData; // 0x78(0x20)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Phoenix.SceneAction_AkAudioRTPC
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_AkAudioRTPC : USceneRigObjectActionBase {
	struct FActionParameter_AkAudioRTPC RTPCInfo; // 0xa0(0x20)
};

// Class Phoenix.SceneActionState_AkAudioRTPC
// Size: 0x90 (Inherited: 0x70)
struct USceneActionState_AkAudioRTPC : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	struct FSceneRigAkAudioRTPCTrackSectionData AkAudioRTPCData; // 0x78(0x18)
};

// Class Phoenix.SceneAction_AkAudioState
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_AkAudioState : USceneRigActionBase {
	struct FActionParameter_AkAudioState StateInfo; // 0x88(0x18)
};

// Class Phoenix.SceneActionState_AkAudioState
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_AkAudioState : USceneRigActionState {
	struct FSceneRigAkAudioStateTrackSectionData AkAudioStateData; // 0x50(0x10)
};

// Class Phoenix.SceneActionState_AnimatedLightControllerComponent
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_AnimatedLightControllerComponent : USceneRigObjectActionState {
	struct TWeakObjectPtr<struct UAnimatedLightClusterComponent> AnimatedLightComponent; // 0x70(0x08)
};

// Class Phoenix.SceneAction_AnimatedLightControllerComponent
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_AnimatedLightControllerComponent : USceneAction_SpawnActorAllowAsChild {
	struct UAnimatedLightsClusterSettings* CullingSettings; // 0xa0(0x08)
};

// Class Phoenix.SceneAction_FlickeringLightControllerComponent
// Size: 0xc0 (Inherited: 0xa8)
struct USceneAction_FlickeringLightControllerComponent : USceneAction_AnimatedLightControllerComponent {
	struct UAnimatedLightSettingsAsset* Settings; // 0xa8(0x08)
	float StartOffset; // 0xb0(0x04)
	float DurationScale; // 0xb4(0x04)
	char bRandomizeStartOffset : 1; // 0xb8(0x01)
	char pad_B8_1 : 7; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Phoenix.SceneAction_AdaptiveLightControllerComponent
// Size: 0x108 (Inherited: 0xa8)
struct USceneAction_AdaptiveLightControllerComponent : USceneAction_AnimatedLightControllerComponent {
	struct FDynamicLightAdaptationSettings Settings; // 0xa8(0x60)
};

// Class Phoenix.SceneActionDayNightLightControllerSettings
// Size: 0x38 (Inherited: 0x30)
struct USceneActionDayNightLightControllerSettings : UDataAsset {
	float UpdateThresholdDegrees; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.SceneAction_DayNightLightControllerComponent
// Size: 0xb0 (Inherited: 0xa8)
struct USceneAction_DayNightLightControllerComponent : USceneAction_AnimatedLightControllerComponent {
	struct USceneActionDayNightLightControllerSettings* Settings; // 0xa8(0x08)
};

// Class Phoenix.SceneRigDayNightBasicLightControllerSettings
// Size: 0x90 (Inherited: 0x38)
struct USceneRigDayNightBasicLightControllerSettings : USceneActionDayNightLightControllerSettings {
	struct FLinearColor DayColorMod; // 0x38(0x10)
	struct FLinearColor NightColorMod; // 0x48(0x10)
	struct UCurveLinearColor* Night0Day1ColorMod; // 0x58(0x08)
	float SunLightDesaturation; // 0x60(0x04)
	float DayIntensityMod; // 0x64(0x04)
	float NightIntensityMod; // 0x68(0x04)
	struct FVector2D SunLightMinMaxInensityFactor; // 0x6c(0x08)
	struct FDayNightLightControllerDirectionalBoost SunDirectionalBoost; // 0x74(0x0c)
	float StartNightSunAngle; // 0x80(0x04)
	float FullNightSunAngle; // 0x84(0x04)
	char bModulateColor : 1; // 0x88(0x01)
	char bModulateIntensity : 1; // 0x88(0x01)
	char bUseSunDirectionalBoost : 1; // 0x88(0x01)
	char bUseSunLightColor : 1; // 0x88(0x01)
	char bAttenuateDayIntensityWithSunIntensity : 1; // 0x88(0x01)
	char bUseModColorCurve : 1; // 0x88(0x01)
	char pad_88_6 : 2; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.SceneRigDayNightCurveLightControllerSettings
// Size: 0x60 (Inherited: 0x38)
struct USceneRigDayNightCurveLightControllerSettings : USceneActionDayNightLightControllerSettings {
	struct UCurveLinearColor* Color; // 0x38(0x08)
	float Desaturation; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UCurveFloat* Intensity; // 0x48(0x08)
	struct FDayNightLightControllerDirectionalBoost DirectionalBoost; // 0x50(0x0c)
	bool bUseDirectionalBoost; // 0x5c(0x01)
	enum class EDayNightLightControllerOp ColorOp; // 0x5d(0x01)
	enum class EDayNightLightControllerOp IntensityOp; // 0x5e(0x01)
	char pad_5F[0x1]; // 0x5f(0x01)
};

// Class Phoenix.SceneRigDayNightAtmosphereLightControllerSettings
// Size: 0xd0 (Inherited: 0x38)
struct USceneRigDayNightAtmosphereLightControllerSettings : USceneActionDayNightLightControllerSettings {
	struct FDayNightLightSkyAtmosphereComputeParams SkyParams; // 0x38(0x78)
	struct UCurveFloat* Intensity; // 0xb0(0x08)
	float BaseIntensityFactor; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct UCurveFloat* Desaturation; // 0xc0(0x08)
	enum class EDayNightLightControllerOp ColorOp; // 0xc8(0x01)
	enum class EDayNightLightControllerOp IntensityOp; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// Class Phoenix.SceneActionState_AnimateLightColorIntensity
// Size: 0xc0 (Inherited: 0x70)
struct USceneActionState_AnimateLightColorIntensity : USceneRigObjectActionState {
	char pad_70[0x50]; // 0x70(0x50)
};

// Class Phoenix.SceneAction_AnimateLightColorIntensity
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_AnimateLightColorIntensity : USceneAction_SpawnActorAllowAsChild {
	bool bRestoreLights; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Phoenix.SceneAction_AnimateLightIntensity
// Size: 0x138 (Inherited: 0xa8)
struct USceneAction_AnimateLightIntensity : USceneAction_AnimateLightColorIntensity {
	struct FRuntimeFloatCurve Intensity; // 0xa8(0x88)
	float Default; // 0x130(0x04)
	enum class EAnimateLightColorIntensityBlend Blend; // 0x134(0x01)
	char pad_135[0x3]; // 0x135(0x03)
};

// Class Phoenix.SceneAction_AnimateLightColor
// Size: 0x2c8 (Inherited: 0xa8)
struct USceneAction_AnimateLightColor : USceneAction_AnimateLightColorIntensity {
	struct FRuntimeCurveLinearColor Color; // 0xa8(0x208)
	struct FLinearColor Default; // 0x2b0(0x10)
	enum class EAnimateLightColorIntensityBlend Blend; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
};

// Class Phoenix.SceneAction_AnimateLightColorAndIntensity
// Size: 0x340 (Inherited: 0xa8)
struct USceneAction_AnimateLightColorAndIntensity : USceneAction_AnimateLightColorIntensity {
	struct FRuntimeCurveLinearColor Color; // 0xa8(0x208)
	struct FRuntimeFloatCurve Intensity; // 0x2b0(0x88)
	enum class EAnimateLightColorIntensityBlend ColorBlend; // 0x338(0x01)
	enum class EAnimateLightColorIntensityBlend IntensityBlend; // 0x339(0x01)
	char pad_33A[0x6]; // 0x33a(0x06)
};

// Class Phoenix.SceneAction_AvaAudioMusic
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_AvaAudioMusic : USceneRigObjectActionBase {
	struct FActionParameter_AvaAudioMusic MusicInfo; // 0xa0(0x20)
};

// Class Phoenix.SceneActionState_AvaAudioMusic
// Size: 0x88 (Inherited: 0x70)
struct USceneActionState_AvaAudioMusic : USceneRigObjectActionState {
	struct FSceneRigAvaAudioMusicTrackSectionData AvaAudioMusicData; // 0x70(0x18)
};

// Class Phoenix.SceneAction_AvaAudioState
// Size: 0xa8 (Inherited: 0x88)
struct USceneAction_AvaAudioState : USceneRigActionBase {
	struct FActionParameter_AvaAudioState StateInfo; // 0x88(0x20)
};

// Class Phoenix.SceneActionState_AvaAudioState
// Size: 0x68 (Inherited: 0x50)
struct USceneActionState_AvaAudioState : USceneRigActionState {
	struct FSceneRigAvaAudioStateTrackSectionData AvaAudioStateData; // 0x50(0x14)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class Phoenix.LightCollectionActor
// Size: 0x258 (Inherited: 0x248)
struct ALightCollectionActor : AActor {
	struct TArray<struct TWeakObjectPtr<struct ULocalLightComponent>> Lights; // 0x248(0x10)
};

// Class Phoenix.SceneActionState_BasicLight
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_BasicLight : USceneRigActionState {
	struct ULocalLightComponent* Light; // 0x50(0x08)
	bool bSetTransform; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
};

// Class Phoenix.SceneAction_BasicLight
// Size: 0x560 (Inherited: 0x88)
struct USceneAction_BasicLight : USceneRigActionBase {
	struct FMultiLightDescription Light; // 0x88(0x98)
	struct UTransformProvider* Source; // 0x120(0x08)
	struct UTransformProvider* Target; // 0x128(0x08)
	struct FRuntimeFloatCurve OnOffCurve; // 0x130(0x88)
	struct FRuntimeFloatCurve IntensityCurve; // 0x1b8(0x88)
	struct FRuntimeFloatCurve AttenuationCurve; // 0x240(0x88)
	struct FRuntimeCurveLinearColor ColorCurve; // 0x2c8(0x208)
	struct FRuntimeFloatCurve OuterConeAngleCurve; // 0x4d0(0x88)
	char bStationary : 1; // 0x558(0x01)
	char bPreviewOnly : 1; // 0x558(0x01)
	char bUseOnOffCurve : 1; // 0x558(0x01)
	char bUseIntensityCurve : 1; // 0x558(0x01)
	char bUseAttenuationCurve : 1; // 0x558(0x01)
	char bUseColorCurve : 1; // 0x558(0x01)
	char bUseOuterConeAngleCurve : 1; // 0x558(0x01)
	char bNormalizeCurvesToInterval : 1; // 0x558(0x01)
	char pad_559[0x7]; // 0x559(0x07)
};

// Class Phoenix.SceneActionBlueprintVarProvider
// Size: 0x38 (Inherited: 0x28)
struct USceneActionBlueprintVarProvider : UObject {
	struct FName Name; // 0x28(0x08)
	bool bOnce; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.SceneActionBlueprintVarProviderFloat
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderFloat : USceneActionBlueprintVarProvider {
	struct UFloatProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionBlueprintVarProviderInt
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderInt : USceneActionBlueprintVarProvider {
	struct UIntProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionBlueprintVarProviderBool
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderBool : USceneActionBlueprintVarProvider {
	struct UBoolProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionBlueprintVarProviderVector
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderVector : USceneActionBlueprintVarProvider {
	struct UVectorProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionBlueprintVarProviderColor
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderColor : USceneActionBlueprintVarProvider {
	struct UColorProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionBlueprintVarProviderTransform
// Size: 0x40 (Inherited: 0x38)
struct USceneActionBlueprintVarProviderTransform : USceneActionBlueprintVarProvider {
	struct UTransformProvider* Value; // 0x38(0x08)
};

// Class Phoenix.SceneActionState_BlueprintVar
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_BlueprintVar : USceneRigObjectActionState {
	bool bFirstTime; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.SceneAction_BlueprintVar
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_BlueprintVar : USceneRigObjectActionBase {
	struct TArray<struct USceneActionBlueprintVarProvider*> BlueprintVariables; // 0xa0(0x10)
};

// Class Phoenix.SceneAction_CharacterCaptureFocus
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_CharacterCaptureFocus : USceneRigObjectActionBase {
	bool bCaptureFocusOnActionStart; // 0xa0(0x01)
	bool bReleaseFocusOnActionEnd; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneActionState_CharacterCaptureFocus
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_CharacterCaptureFocus : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_CharacterOptions
// Size: 0x160 (Inherited: 0xa0)
struct USceneAction_CharacterOptions : USceneRigObjectActionBase {
	char pad_A0[0x8]; // 0xa0(0x08)
	struct USceneRigCharacterOptionsAsset* OPTIONS; // 0xa8(0x08)
	bool bDisableURO; // 0xb0(0x01)
	enum class EControlBehaviors ControlBehaviors; // 0xb1(0x01)
	bool bCancelAbilities; // 0xb2(0x01)
	bool bDisableProceduralEyes; // 0xb3(0x01)
	int32_t LODOverride; // 0xb4(0x04)
	bool AlwaysTickPoseAndRefreshBones; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float BoundsScale; // 0xbc(0x04)
	bool bEnableReactions; // 0xc0(0x01)
	bool bForceDismount; // 0xc1(0x01)
	enum class EManagedMovementModePriority MovementModePriority; // 0xc2(0x01)
	bool bUseCustomMovementMode; // 0xc3(0x01)
	bool bSanityCheckTransforms; // 0xc4(0x01)
	enum class ECharacterOptionsCollisionResponse CollisionResponse; // 0xc5(0x01)
	enum class EStandardManagedPriority SocializationPriority; // 0xc6(0x01)
	bool bDisableSocialization; // 0xc7(0x01)
	enum class EStandardManagedPriority IKPriority; // 0xc8(0x01)
	bool bEnableIK; // 0xc9(0x01)
	bool bEnableFloorContact; // 0xca(0x01)
	char pad_CB[0x5]; // 0xcb(0x05)
	struct UBoolProvider* EnableFloorContactProvider; // 0xd0(0x08)
	bool bEnableLookat; // 0xd8(0x01)
	bool bEnablePoseFixup; // 0xd9(0x01)
	char pad_DA[0x2]; // 0xda(0x02)
	float IKBlendDurationOnEnter; // 0xdc(0x04)
	float IKBlendDurationOnExit; // 0xe0(0x04)
	enum class EAnimationDirectionSource LowestAllowedLookAtPriority; // 0xe4(0x01)
	bool bDisablePostProcessBlueprint; // 0xe5(0x01)
	enum class EStandardManagedPriority ScalePriority; // 0xe6(0x01)
	bool ScaleRootMotion; // 0xe7(0x01)
	bool UnityScale; // 0xe8(0x01)
	bool OverrideRootMotionTranslationScale; // 0xe9(0x01)
	char pad_EA[0x2]; // 0xea(0x02)
	float RootMotionTranslationScale; // 0xec(0x04)
	struct TSet<struct FString> TickingBlackList; // 0xf0(0x50)
	bool DisableAudioOcclusion; // 0x140(0x01)
	bool bRemoveSpellEffects; // 0x141(0x01)
	bool bOverrideDisableSpells; // 0x142(0x01)
	bool bDisableSpells; // 0x143(0x01)
	bool bRemoveGuideSpline; // 0x144(0x01)
	enum class EStandardManagedPriority DisableSpellsPriority; // 0x145(0x01)
	bool bSetRightArmState; // 0x146(0x01)
	enum class ERightArmState RightArmState; // 0x147(0x01)
	bool bSetLeftArmState; // 0x148(0x01)
	enum class ELeftArmState LeftArmState; // 0x149(0x01)
	enum class EOverrideNPCStateOnFinish OverrideNPCStateOnFinish; // 0x14a(0x01)
	bool bOverrideIsTargetableByAi; // 0x14b(0x01)
	bool bIsTargetableByAi; // 0x14c(0x01)
	enum class EStandardManagedPriority TargetableByAiPriority; // 0x14d(0x01)
	bool bOverrideIsAiSuspended; // 0x14e(0x01)
	bool bSuspendAi; // 0x14f(0x01)
	struct UIntProvider* SynchronizationMethodProvider; // 0x150(0x08)
	bool ReleaseFleshLockOnFinish; // 0x158(0x01)
	enum class ESynchronizeMethod SynchronizationMethod; // 0x159(0x01)
	bool bSynchronizeLocation; // 0x15a(0x01)
	char pad_15B[0x5]; // 0x15b(0x05)
};

// Class Phoenix.SceneActionState_CharacterOptions
// Size: 0x140 (Inherited: 0x70)
struct USceneActionState_CharacterOptions : USceneRigObjectActionState {
	char pad_70[0xd0]; // 0x70(0xd0)
};

// Class Phoenix.SceneAction_CharacterTeleport
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_CharacterTeleport : USceneRigObjectActionBase {
	struct UTransformProvider* WorldSpaceTransform; // 0xa0(0x08)
	float MinDistanceToTeleport; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Phoenix.SceneActionState_CharacterTeleport
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_CharacterTeleport : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_CharacterTurnToFace
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_CharacterTurnToFace : USceneRigObjectActionBase {
	struct UTransformProvider* WorldSpaceTransform; // 0xa0(0x08)
};

// Class Phoenix.SceneActionState_CharacterWalkBase
// Size: 0x88 (Inherited: 0x70)
struct USceneActionState_CharacterWalkBase : USceneRigObjectActionState {
	char pad_70[0x18]; // 0x70(0x18)

	void Arrived(); // Function Phoenix.SceneActionState_CharacterWalkBase.Arrived // (Final|Native|Public) // @ game+0x343c450
};

// Class Phoenix.SceneActionState_CharacterTurnToFace
// Size: 0x88 (Inherited: 0x88)
struct USceneActionState_CharacterTurnToFace : USceneActionState_CharacterWalkBase {
};

// Class Phoenix.SceneAction_CharacterWalkAlongSpline
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_CharacterWalkAlongSpline : USceneRigObjectActionBase {
	struct UActorProvider* SplinePathActor; // 0xa0(0x08)
	float WalkSpeed; // 0xa8(0x04)
	int32_t SplineFollowDirection; // 0xac(0x04)
	float SplineHorizontalOffset; // 0xb0(0x04)
	float SplineLookAheadDistance; // 0xb4(0x04)
};

// Class Phoenix.SceneActionState_CharacterWalkAlongSpline
// Size: 0x88 (Inherited: 0x88)
struct USceneActionState_CharacterWalkAlongSpline : USceneActionState_CharacterWalkBase {
};

// Class Phoenix.SceneAction_CharacterWalkFollow
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_CharacterWalkFollow : USceneRigObjectActionBase {
	struct UObjectProvider* GoalActor; // 0xa0(0x08)
	float WalkSpeed; // 0xa8(0x04)
	float DistanceToMaintain; // 0xac(0x04)
};

// Class Phoenix.SceneActionState_CharacterWalkFollow
// Size: 0x88 (Inherited: 0x88)
struct USceneActionState_CharacterWalkFollow : USceneActionState_CharacterWalkBase {
};

// Class Phoenix.SceneAction_CharacterWalkToPoint
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_CharacterWalkToPoint : USceneRigObjectActionBase {
	struct UTransformProvider* WorldSpaceTransform; // 0xa0(0x08)
	float WalkSpeed; // 0xa8(0x04)
	float ArrivalRadius; // 0xac(0x04)
};

// Class Phoenix.SceneActionState_CharacterWalkToPoint
// Size: 0x88 (Inherited: 0x88)
struct USceneActionState_CharacterWalkToPoint : USceneActionState_CharacterWalkBase {
};

// Class Phoenix.SceneAction_ClothCollision
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_ClothCollision : USceneRigObjectActionBase {
	struct UActorProvider* CollisionActor; // 0xa0(0x08)
	struct UPhysicsAsset* PhysicsAsset; // 0xa8(0x08)
};

// Class Phoenix.SceneActionState_ClothCollision
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_ClothCollision : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_ClothOptions
// Size: 0x1c0 (Inherited: 0xa0)
struct USceneAction_ClothOptions : USceneRigObjectActionBase {
	bool bPiecesListIsInclusive; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct TArray<struct FCharacterPieceType> PiecesList; // 0xa8(0x10)
	struct TSet<struct FClothingAssetName> ClothingAssetList; // 0xb8(0x50)
	struct UIntProvider* IterationCount; // 0x108(0x08)
	struct UIntProvider* MaxIterationCount; // 0x110(0x08)
	struct UIntProvider* SubdivisionCount; // 0x118(0x08)
	struct UFloatProvider* TeleportDistanceThreshold; // 0x120(0x08)
	struct UFloatProvider* TeleportRotationThreshold; // 0x128(0x08)
	struct UFloatProvider* ClothBlendWeight; // 0x130(0x08)
	struct UFloatProvider* ClothMaxDistanceScale; // 0x138(0x08)
	struct UFloatProvider* EdgeStiffness; // 0x140(0x08)
	struct UFloatProvider* BendingStiffness; // 0x148(0x08)
	struct UFloatProvider* AreaStiffness; // 0x150(0x08)
	struct UVector2DProvider* TetherStiffness; // 0x158(0x08)
	struct UFloatProvider* DampingCoefficient; // 0x160(0x08)
	struct UFloatProvider* DragCoefficient; // 0x168(0x08)
	struct UFloatProvider* LiftCoefficient; // 0x170(0x08)
	struct UVectorProvider* AdditionalWindVelocity; // 0x178(0x08)
	struct UFloatProvider* GravityScale; // 0x180(0x08)
	struct UVectorProvider* GravityOverride; // 0x188(0x08)
	struct UVector2DProvider* AnimDriveStiffness; // 0x190(0x08)
	struct UVector2DProvider* AnimDriveDamping; // 0x198(0x08)
	struct UFloatProvider* WindVelocityScale; // 0x1a0(0x08)
	struct UFloatProvider* LinearVelocityScale; // 0x1a8(0x08)
	struct UFloatProvider* AngularVelocityScale; // 0x1b0(0x08)
	struct UFloatProvider* FictitiousAngularScale; // 0x1b8(0x08)
};

// Class Phoenix.SceneActionState_ClothOptions
// Size: 0x110 (Inherited: 0x70)
struct USceneActionState_ClothOptions : USceneRigObjectActionState {
	char pad_70[0xa0]; // 0x70(0xa0)

	struct FVector2D GetPreviousAnimDriveStiffness(); // Function Phoenix.SceneActionState_ClothOptions.GetPreviousAnimDriveStiffness // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x343c470
};

// Class Phoenix.SceneAction_ResetClothSim
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_ResetClothSim : USceneRigObjectActionBase {
	bool bPiecesListIsInclusive; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct TArray<struct FCharacterPieceType> PiecesList; // 0xa8(0x10)
	enum class USceneAction_ResetClothSim_ClothingTeleportMode ClothTeleportMode; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Phoenix.SceneActionState_ResetClothSim
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_ResetClothSim : USceneRigObjectActionState {
	struct USceneAction_ResetClothSim* ResetClothSim; // 0x70(0x08)
};

// Class Phoenix.SceneAction_ClothRobeMount
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_ClothRobeMount : USceneRigObjectActionBase {
	struct FClothMountTargets ClothMountTargets; // 0xa0(0x18)
	bool BlendIn; // 0xb8(0x01)
	bool TargetsOnly; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)
};

// Class Phoenix.SceneActionState_ClothRobeMount
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_ClothRobeMount : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.SceneAction_CompleteMissionTask
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_CompleteMissionTask : USceneRigActionBase {
	struct FMissionName Mission; // 0x88(0x08)
	struct FString missionStepNickname; // 0x90(0x10)
};

// Class Phoenix.SceneActionState_CompleteMissionTask
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_CompleteMissionTask : USceneRigActionState {
};

// Class Phoenix.SceneAction_ConsoleBase
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_ConsoleBase : USceneRigActionBase {
};

// Class Phoenix.SceneActionState_ConsoleCommand
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_ConsoleCommand : USceneRigActionState {
	bool bSetValues; // 0x50(0x01)
	bool bRestoredValues; // 0x51(0x01)
	char pad_52[0x6]; // 0x52(0x06)
};

// Class Phoenix.SceneAction_ConsoleCommandBase
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_ConsoleCommandBase : USceneAction_ConsoleBase {
	struct TArray<struct FSceneActionConsoleCommand> Commands; // 0x88(0x10)
};

// Class Phoenix.SceneAction_ConsoleCommand
// Size: 0x98 (Inherited: 0x98)
struct USceneAction_ConsoleCommand : USceneAction_ConsoleCommandBase {
};

// Class Phoenix.SceneAction_ConsoleCommandInShippingToo
// Size: 0xa0 (Inherited: 0x98)
struct USceneAction_ConsoleCommandInShippingToo : USceneAction_ConsoleCommandBase {
	bool bInShippingToo; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.SceneActionState_ConsoleVariables
// Size: 0xa8 (Inherited: 0x50)
struct USceneActionState_ConsoleVariables : USceneRigActionState {
	bool bSetValues; // 0x50(0x01)
	bool bRestoredValues; // 0x51(0x01)
	char pad_52[0x56]; // 0x52(0x56)
};

// Class Phoenix.SceneAction_ConsoleVariables
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_ConsoleVariables : USceneAction_ConsoleBase {
	struct TArray<struct FSceneActionConsoleVariable> Variables; // 0x88(0x10)
	bool bInShippingToo; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.SceneAction_ConsoleVariableScalarCurve
// Size: 0x120 (Inherited: 0x88)
struct USceneAction_ConsoleVariableScalarCurve : USceneAction_ConsoleBase {
	struct FName Variable; // 0x88(0x08)
	struct FRuntimeFloatCurve Curve; // 0x90(0x88)
	bool bStretchToDuration; // 0x118(0x01)
	bool bInShippingToo; // 0x119(0x01)
	char pad_11A[0x6]; // 0x11a(0x06)
};

// Class Phoenix.SceneActionState_ConsoleVariableScalarCurve
// Size: 0x80 (Inherited: 0x50)
struct USceneActionState_ConsoleVariableScalarCurve : USceneRigActionState {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Phoenix.SceneAction_ConversationLightRigOptions
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_ConversationLightRigOptions : USceneRigObjectActionBase {
	bool GetFromConversation; // 0xa0(0x01)
	bool bKeepStateOnCompletion; // 0xa1(0x01)
	bool bUsesSkyColors; // 0xa2(0x01)
	char pad_A3[0x1]; // 0xa3(0x01)
	float KeyLightColorTemperature; // 0xa4(0x04)
	float RimLightColorTemperature; // 0xa8(0x04)
	float FillLightColorTemperature; // 0xac(0x04)
	float KeyLightIntensity; // 0xb0(0x04)
	float RimLightIntensity; // 0xb4(0x04)
	float FillLightIntensity; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
};

// Class Phoenix.SceneActionState_ConversationLightRigOptions
// Size: 0x90 (Inherited: 0x70)
struct USceneActionState_ConversationLightRigOptions : USceneRigObjectActionState {
	char pad_70[0x20]; // 0x70(0x20)
};

// Class Phoenix.SceneAction_CreatureAI
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_CreatureAI : USceneRigObjectActionBase {
	bool bSet_IdleOverrideState; // 0xa0(0x01)
	enum class ECreatureIdleOverrideState IdleOverrideState; // 0xa1(0x01)
	bool bSet_StationaryForNurtureInteract; // 0xa2(0x01)
	bool bStationaryForNurtureInteract; // 0xa3(0x01)
	bool bSet_FlyingOption; // 0xa4(0x01)
	enum class ESceneAction_CreatureFlyingOption FlyingOption; // 0xa5(0x01)
	bool bSet_EnablePerception; // 0xa6(0x01)
	bool bEnablePerception; // 0xa7(0x01)
	bool bSet_DesiredStance; // 0xa8(0x01)
	enum class ECreatureStance DesiredStance; // 0xa9(0x01)
	char pad_AA[0x6]; // 0xaa(0x06)
};

// Class Phoenix.SceneActionState_CreatureAI
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_CreatureAI : USceneRigObjectActionState {
};

// Class Phoenix.SceneActionState_CustomBlendDomainOverride
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_CustomBlendDomainOverride : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.SceneAction_CustomBlendDomainOverrideBase
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_CustomBlendDomainOverrideBase : USceneRigActionBase {
};

// Class Phoenix.SceneAction_CustomBlendDomainOverride
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_CustomBlendDomainOverride : USceneAction_CustomBlendDomainOverrideBase {
	struct FRenderSettingsCustomBlendDomainName Name; // 0x88(0x08)
	float Value; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.SceneAction_BlendDomainOverride
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_BlendDomainOverride : USceneAction_CustomBlendDomainOverrideBase {
	struct FRenderSettingsPreComputedBlendDomainName Name; // 0x88(0x10)
	float Value; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Phoenix.SceneAction_Dialogue
// Size: 0x178 (Inherited: 0xa0)
struct USceneAction_Dialogue : USceneRigObjectActionBase {
	struct UDialogueLineProvider* Line; // 0xa0(0x08)
	struct TMap<struct FString, struct FString> AdditionalParameters; // 0xa8(0x50)
	bool StopWhenAttachedToDestroyed; // 0xf8(0x01)
	struct FAudioDialogueFlags AudioDialogueFlags; // 0xf9(0x07)
	bool CutoffDialogueAtFinish; // 0x100(0x01)
	char pad_101[0x7]; // 0x101(0x07)
	struct FActionParameter_DialogueEvent Event; // 0x108(0x70)
};

// Class Phoenix.SceneActionState_Dialogue
// Size: 0xa0 (Inherited: 0x70)
struct USceneActionState_Dialogue : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)
	struct FDialogueLineReference LineReference; // 0x80(0x10)
	int32_t AudioHandle; // 0x90(0x04)
	char pad_94[0xc]; // 0x94(0x0c)
};

// Class Phoenix.SceneAction_DialogueBucket
// Size: 0x100 (Inherited: 0xa0)
struct USceneAction_DialogueBucket : USceneRigObjectActionBase {
	struct TArray<struct UDialogueEventProvider*> EventBucket; // 0xa0(0x10)
	struct UFloatProvider* RepeatDelay; // 0xb0(0x08)
	struct FTimeRigOutputSymbol DialogueStart; // 0xb8(0x18)
	struct FTimeRigOutputSymbol DialogueFinish; // 0xd0(0x18)
	bool CutoffDialogueAtFinish; // 0xe8(0x01)
	struct FAudioDialogueFlags AudioDialogueFlags; // 0xe9(0x07)
	struct UTransformProvider* AtLocation; // 0xf0(0x08)
	bool RestrictDialogueByProximity; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	float ProximityRadius; // 0xfc(0x04)
};

// Class Phoenix.SceneActionState_DialogueBucket
// Size: 0x98 (Inherited: 0x70)
struct USceneActionState_DialogueBucket : USceneRigObjectActionState {
	struct TArray<struct FDialogueConversationReference> EventBucket; // 0x70(0x10)
	int32_t AudioHandle; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	bool bHasValidEnter; // 0x88(0x01)
	char pad_89[0xf]; // 0x89(0x0f)
};

// Class Phoenix.SceneAction_DialogueEvent
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_DialogueEvent : USceneRigObjectActionBase {
	struct UDialogueEventProvider* Event; // 0xa0(0x08)
	bool CutoffDialogueAtFinish; // 0xa8(0x01)
	struct FAudioDialogueFlags AudioDialogueFlags; // 0xa9(0x07)
	struct UTransformProvider* AtLocation; // 0xb0(0x08)
};

// Class Phoenix.SceneActionState_DialogueEvent
// Size: 0x90 (Inherited: 0x70)
struct USceneActionState_DialogueEvent : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	struct FDialogueConversationReference Event; // 0x78(0x10)
	int32_t AudioHandle; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.SceneAction_DialogueLine
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_DialogueLine : USceneRigObjectActionBase {
	struct UDialogueLineProvider* Line; // 0xa0(0x08)
	bool CutoffDialogueAtFinish; // 0xa8(0x01)
	struct FAudioDialogueFlags AudioDialogueFlags; // 0xa9(0x07)
	struct UTransformProvider* AtLocation; // 0xb0(0x08)
};

// Class Phoenix.SceneActionState_DialogueLine
// Size: 0x90 (Inherited: 0x70)
struct USceneActionState_DialogueLine : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	struct FDialogueLineReference Line; // 0x78(0x10)
	int32_t AudioHandle; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.SceneAction_DisableFadeSystem
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_DisableFadeSystem : USceneRigActionBase {
};

// Class Phoenix.SceneActionState_DisableFadeSystem
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_DisableFadeSystem : USceneRigActionState {
};

// Class Phoenix.SceneAction_DisableIK
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_DisableIK : USceneRigObjectActionBase {
	bool bDisableIK; // 0xa0(0x01)
	bool bDisableFloorContact; // 0xa1(0x01)
	bool bDisableLookAt; // 0xa2(0x01)
	bool bDisablePoseFixup; // 0xa3(0x01)
	enum class EStandardManagedPriority IKPriority; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	struct UFloatProvider* BlendOutDuration; // 0xa8(0x08)
	struct UFloatProvider* BlendInDuration; // 0xb0(0x08)
	enum class EAnimationDirectionSource LowestAllowedLookAtPriority; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Phoenix.SceneActionState_DisableIK
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_DisableIK : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_DisableReactions
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_DisableReactions : USceneRigObjectActionBase {
	enum class EStandardManagedPriority Priority; // 0xa0(0x01)
	enum class ECharacterShutdownPriority PriorityNew; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneActionState_DisableReactions
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_DisableReactions : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_DisableSchedule
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_DisableSchedule : USceneRigObjectActionBase {
	enum class EScheduleEnableDisable ActionOnEnter; // 0xa0(0x01)
	enum class EScheduleEnableDisable ActionOnExit; // 0xa1(0x01)
	char pad_A2[0x6]; // 0xa2(0x06)
};

// Class Phoenix.SceneActionState_DisableSchedule
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_DisableSchedule : USceneRigObjectActionState {
};

// Class Phoenix.SceneActionState_EmissiveAdaptationBase
// Size: 0x68 (Inherited: 0x50)
struct USceneActionState_EmissiveAdaptationBase : USceneRigActionState {
	char pad_50[0x10]; // 0x50(0x10)
	float InsertedPriortiy; // 0x60(0x04)
	float CurrentBlend; // 0x64(0x04)
};

// Class Phoenix.SceneActionState_EmissiveAdaptationExtras
// Size: 0x68 (Inherited: 0x68)
struct USceneActionState_EmissiveAdaptationExtras : USceneActionState_EmissiveAdaptationBase {
};

// Class Phoenix.SceneActionState_EmissiveAdaptationExtrasSingle
// Size: 0xa8 (Inherited: 0x68)
struct USceneActionState_EmissiveAdaptationExtrasSingle : USceneActionState_EmissiveAdaptationBase {
	struct FExposureExpressionsExtras Extras; // 0x68(0x40)
};

// Class Phoenix.SceneActionState_EmissiveAdaptation
// Size: 0x68 (Inherited: 0x68)
struct USceneActionState_EmissiveAdaptation : USceneActionState_EmissiveAdaptationBase {
};

// Class Phoenix.SceneAction_EmissiveAdaptationBase
// Size: 0xd8 (Inherited: 0x88)
struct USceneAction_EmissiveAdaptationBase : USceneRigActionBase {
	char pad_88[0x8]; // 0x88(0x08)
	float FeatherInTime; // 0x90(0x04)
	float FeatherOutTime; // 0x94(0x04)
	struct FBlendDomain BlendDomain; // 0x98(0x38)
	float Priority; // 0xd0(0x04)
	bool bEnabled; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
};

// Class Phoenix.SceneAction_EmissiveAdaptationExtras
// Size: 0x118 (Inherited: 0xd8)
struct USceneAction_EmissiveAdaptationExtras : USceneAction_EmissiveAdaptationBase {
	struct FExposureExpressionsExtras EmissiveAdaptationExtras; // 0xd8(0x40)
};

// Class Phoenix.SceneAction_EmissiveAdaptation
// Size: 0x168 (Inherited: 0xd8)
struct USceneAction_EmissiveAdaptation : USceneAction_EmissiveAdaptationBase {
	struct FRenderSettingsEmissiveAdaptation EmissiveAdaptation; // 0xd8(0x90)
};

// Class Phoenix.SceneAction_EmissiveAdaptationExtrasSingleBase
// Size: 0xd8 (Inherited: 0xd8)
struct USceneAction_EmissiveAdaptationExtrasSingleBase : USceneAction_EmissiveAdaptationBase {
};

// Class Phoenix.SceneAction_EmissiveAdaptationExtrasExposure
// Size: 0xf8 (Inherited: 0xd8)
struct USceneAction_EmissiveAdaptationExtrasExposure : USceneAction_EmissiveAdaptationExtrasSingleBase {
	struct FExposureExpressionsExtraExposureName ExposureName; // 0xd8(0x10)
	struct UCurveFloat* ExposureCurve; // 0xe8(0x08)
	float ExposureValue; // 0xf0(0x04)
	bool bUseCurve; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
};

// Class Phoenix.SceneAction_EmissiveAdaptationExtrasScalar
// Size: 0xf8 (Inherited: 0xd8)
struct USceneAction_EmissiveAdaptationExtrasScalar : USceneAction_EmissiveAdaptationExtrasSingleBase {
	struct FExposureExpressionsExtraScalarName ScalarName; // 0xd8(0x10)
	struct UCurveFloat* ScalarCurve; // 0xe8(0x08)
	float ScalarValue; // 0xf0(0x04)
	bool bUseCurve; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
};

// Class Phoenix.SceneAction_EnableDialogueSkipping
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_EnableDialogueSkipping : USceneRigActionBase {
};

// Class Phoenix.SceneActionState_EnableDialogueSkipping
// Size: 0xe8 (Inherited: 0x50)
struct USceneActionState_EnableDialogueSkipping : USceneRigActionState {
	char pad_50[0x98]; // 0x50(0x98)
};

// Class Phoenix.SkippableDialogueActionStateInterface
// Size: 0x28 (Inherited: 0x28)
struct USkippableDialogueActionStateInterface : UInterface {
};

// Class Phoenix.SceneAction_ExecuteAblAbility
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_ExecuteAblAbility : USceneRigObjectActionBase {
	struct UAblAbility* AblAbilityClass; // 0xa0(0x08)
	bool PartialBodyAbility; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct UActorProvider* OtherActor; // 0xb0(0x08)
};

// Class Phoenix.SceneActionState_ExecuteAblAbility
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_ExecuteAblAbility : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.SceneActionState_ExternalRenderingCut
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_ExternalRenderingCut : USceneRigActionState {
};

// Class Phoenix.SceneAction_ExternalRenderingCutBase
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_ExternalRenderingCutBase : USceneRigActionBase {
};

// Class Phoenix.SceneAction_ExternalCameraCut
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_ExternalCameraCut : USceneAction_ExternalRenderingCutBase {
};

// Class Phoenix.SceneAction_ExternalRenderingCut
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_ExternalRenderingCut : USceneAction_ExternalRenderingCutBase {
	int32_t RenderingCuts; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.RenderingCutsBluprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct URenderingCutsBluprintLibrary : UBlueprintFunctionLibrary {

	void TriggerRenderingCut(struct UObject* WorldContextObject, struct FRenderingCutBits RenderingCuts); // Function Phoenix.RenderingCutsBluprintLibrary.TriggerRenderingCut // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3441df0
	void TriggerCameraCut(struct UObject* WorldContextObject); // Function Phoenix.RenderingCutsBluprintLibrary.TriggerCameraCut // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3441d70
};

// Class Phoenix.RenderingCutVolume
// Size: 0x8d0 (Inherited: 0x280)
struct ARenderingCutVolume : AVolume {
	char pad_280[0x8]; // 0x280(0x08)
	struct FRenderingCutBits RenderingCut; // 0x288(0x08)
	float PreExposureResetValue; // 0x290(0x04)
	float Priority; // 0x294(0x04)
	struct FBlendDomain BlendDomain; // 0x298(0x38)
	bool bEnabled; // 0x2d0(0x01)
	bool bOnlyAlongPositiveXAxis; // 0x2d1(0x01)
	char pad_2D2[0xe]; // 0x2d2(0x0e)
	struct FPostProcessSettings PostProcessing; // 0x2e0(0x5f0)

	void SetPriority(float NewPriority); // Function Phoenix.RenderingCutVolume.SetPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x3441cf0
	void ProcessBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Phoenix.RenderingCutVolume.ProcessBeginOverlap // (Final|Native|Private) // @ game+0x3441c20
};

// Class Phoenix.SceneAction_FacialEmotions
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_FacialEmotions : USceneRigObjectActionBase {
	enum class EFacialEmotion Emotion; // 0xa0(0x01)
	enum class EManagedFacialEmotionPriority Priority; // 0xa1(0x01)
	char pad_A2[0x2]; // 0xa2(0x02)
	float BlendInTime; // 0xa4(0x04)
};

// Class Phoenix.SceneActionState_FacialEmotions
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_FacialEmotions : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.SceneAction_FastTravel
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_FastTravel : USceneRigObjectActionBase {
	struct UTransformProvider* Location; // 0xa0(0x08)
};

// Class Phoenix.SceneActionState_FastTravel
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_FastTravel : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)

	void OnArrived(); // Function Phoenix.SceneActionState_FastTravel.OnArrived // (Final|Native|Public) // @ game+0x3441c00
};

// Class Phoenix.SceneAction_FreezeTime
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_FreezeTime : USceneRigActionBase {
	bool bUnFreezeAtEnd; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
};

// Class Phoenix.SceneActionState_FreezeTime
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_FreezeTime : USceneRigActionState {
};

// Class Phoenix.SceneAction_GameAiOptions
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_GameAiOptions : USceneRigActionBase {
	bool bOverrideAreCharactersInSceneTargetableByAi; // 0x88(0x01)
	bool bAreCharactersInSceneTargetableByAi; // 0x89(0x01)
	enum class EStandardManagedPriority TargetableByAiPriority; // 0x8a(0x01)
	bool bOverrideAreNpcsSuspended; // 0x8b(0x01)
	bool bSuspendNpcs; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
};

// Class Phoenix.SceneActionState_GameAiOptions
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_GameAiOptions : USceneRigActionState {
};

// Class Phoenix.SceneAction_GameOptions
// Size: 0xe8 (Inherited: 0x88)
struct USceneAction_GameOptions : USceneRigActionBase {
	char pad_88[0x8]; // 0x88(0x08)
	struct USceneRigGameOptionsAsset* Settings; // 0x90(0x08)
	enum class ESceneRigCategory ExperienceCategory; // 0x98(0x01)
	bool bDisableAllIK; // 0x99(0x01)
	bool bDisableCameraTransparency; // 0x9a(0x01)
	bool bDisablePlayerControl; // 0x9b(0x01)
	bool bPauseStreaming; // 0x9c(0x01)
	bool bDisableInteriorExterior; // 0x9d(0x01)
	bool bDisableCognitionHilighting; // 0x9e(0x01)
	bool bDisableCharactersInSceneTargetableByAi; // 0x9f(0x01)
	enum class EStandardManagedPriority CharactersInSceneTargetableByAiPriority; // 0xa0(0x01)
	enum class EStandardManagedPriority MuteMissionGossipPriority; // 0xa1(0x01)
	bool bMuteMissionGossip; // 0xa2(0x01)
	bool bUntetherSeatFillerFillRate; // 0xa3(0x01)
	bool bDisablePauseMenu; // 0xa4(0x01)
	bool bDisableCameraShake; // 0xa5(0x01)
	bool bHideNonCinematicElements; // 0xa6(0x01)
	bool bPauseComboTimeout; // 0xa7(0x01)
	bool bDisablePhotoMode; // 0xa8(0x01)
	bool bPauseNotifications; // 0xa9(0x01)
	char pad_AA[0x2]; // 0xaa(0x02)
	int32_t AudioPriorityCutoffOverride; // 0xac(0x04)
	int32_t AudioPrioritySuppressOverride; // 0xb0(0x04)
	int32_t PauseStreamingPlatforms; // 0xb4(0x04)
	int32_t PausePopulationManager; // 0xb8(0x04)
	int32_t PauseKnowledgeSavings; // 0xbc(0x04)
	int32_t PauseInteractionSystem; // 0xc0(0x04)
	int32_t PauseWorldEvents; // 0xc4(0x04)
	int32_t PauseBeaconSystem; // 0xc8(0x04)
	int32_t PauseFootPlantEffects; // 0xcc(0x04)
	int32_t PauseEnemyAIComponent; // 0xd0(0x04)
	struct FWeatherSurfaceCharacterFXStateReset PrecipitationState; // 0xd4(0x02)
	char pad_D6[0x2]; // 0xd6(0x02)
	float PrecipitationPercentage; // 0xd8(0x04)
	float PrecipitationFadeTime; // 0xdc(0x04)
	float MaxWindSpeed; // 0xe0(0x04)
	bool bSetPrecipitationState; // 0xe4(0x01)
	bool bSetMaxWindSpeed; // 0xe5(0x01)
	char pad_E6[0x2]; // 0xe6(0x02)
};

// Class Phoenix.SceneActionState_GameOptions
// Size: 0x70 (Inherited: 0x50)
struct USceneActionState_GameOptions : USceneRigActionState {
	char pad_50[0xc]; // 0x50(0x0c)
	float CachedTime; // 0x5c(0x04)
	float CachedDuration; // 0x60(0x04)
	bool bCachedEnabled; // 0x64(0x01)
	bool bCachedInsideInterval; // 0x65(0x01)
	char pad_66[0xa]; // 0x66(0x0a)
};

// Class Phoenix.SceneActionState_GlobalLightRigBlendable
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_GlobalLightRigBlendable : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
	float CurrentBlend; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.SceneAction_GlobalLightRigBlendable
// Size: 0xf0 (Inherited: 0x88)
struct USceneAction_GlobalLightRigBlendable : USceneRigActionBase {
	struct UGlobalLightingBlendable* GlobalLightingBlendable; // 0x88(0x08)
	enum class EGlobalLightingSimpleFogZMode FogZMode; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UTransformProvider* FogZBase; // 0x98(0x08)
	float Priority; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
	struct FBlendDomain BlendDomain; // 0xa8(0x38)
	float FeatherInTime; // 0xe0(0x04)
	float FeatherOutTime; // 0xe4(0x04)
	bool bPreviewOnly; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Phoenix.SceneAction_HermesMessage
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_HermesMessage : USceneRigObjectActionBase {
	struct FName Message; // 0xa0(0x08)
};

// Class Phoenix.SceneActionState_HermesMessage
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_HermesMessage : USceneRigObjectActionState {
};

// Class Phoenix.SceneActionState_HermesMessageAdvanced
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_HermesMessageAdvanced : USceneRigActionState {
};

// Class Phoenix.SceneAction_HermesMessageAdvanced
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_HermesMessageAdvanced : USceneRigActionBase {
};

// Class Phoenix.SceneAction_HermesMessageAdvancedStartEnd
// Size: 0xc8 (Inherited: 0x88)
struct USceneAction_HermesMessageAdvancedStartEnd : USceneAction_HermesMessageAdvanced {
	struct FName StartMessage; // 0x88(0x08)
	struct FHermesMessageAdvancedDynamicPayload StartData; // 0x90(0x18)
	struct FName EndMessage; // 0xa8(0x08)
	struct FHermesMessageAdvancedDynamicPayload EndData; // 0xb0(0x18)
};

// Class Phoenix.SceneAction_HermesMessageAdvancedStartEndToActor
// Size: 0xd0 (Inherited: 0xc8)
struct USceneAction_HermesMessageAdvancedStartEndToActor : USceneAction_HermesMessageAdvancedStartEnd {
	struct UActorProvider* ToActor; // 0xc8(0x08)
};

// Class Phoenix.SceneActionState_HideTransfigurationObjects
// Size: 0x70 (Inherited: 0x50)
struct USceneActionState_HideTransfigurationObjects : USceneRigActionState {
	char pad_50[0x20]; // 0x50(0x20)
};

// Class Phoenix.SceneAction_HideTransfigurationObjects
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_HideTransfigurationObjects : USceneRigActionBase {
	struct TArray<struct UActorProvider*> AffectedBoundingVolumes; // 0x88(0x10)
	bool bTransitionToHide; // 0x98(0x01)
	bool bTransitionToShow; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
};

// Class Phoenix.SceneAction_IKPoseFixup
// Size: 0x160 (Inherited: 0xa0)
struct USceneAction_IKPoseFixup : USceneRigObjectActionBase {
	struct FIKPoseFixupDefinition Definition; // 0xa0(0xc0)
};

// Class Phoenix.SceneActionState_IKPoseFixup
// Size: 0x88 (Inherited: 0x70)
struct USceneActionState_IKPoseFixup : USceneRigObjectActionState {
	struct USceneAction_IKPoseFixup* IKPoseFixupDefinition; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class Phoenix.SceneAction_InteractCognition
// Size: 0xe0 (Inherited: 0xa0)
struct USceneAction_InteractCognition : USceneRigObjectActionBase {
	enum class ECalloutType CalloutType; // 0xa0(0x01)
	enum class ECalloutBlipType CalloutBlipType; // 0xa1(0x01)
	enum class ECalloutActions CalloutAction; // 0xa2(0x01)
	char pad_A3[0x5]; // 0xa3(0x05)
	struct FText TargetName; // 0xa8(0x18)
	float CalloutChargeTime; // 0xc0(0x04)
	float FootprintRadius; // 0xc4(0x04)
	float TopOffset; // 0xc8(0x04)
	float BottomOffset; // 0xcc(0x04)
	struct FVector CalloutOffset; // 0xd0(0x0c)
	char pad_DC[0x4]; // 0xdc(0x04)
};

// Class Phoenix.SceneActionState_InteractCognition
// Size: 0xa0 (Inherited: 0x70)
struct USceneActionState_InteractCognition : USceneRigObjectActionState {
	struct UCognitionStimuliSourceComponent* OwnedCognitionComponent; // 0x70(0x08)
	char pad_78[0x28]; // 0x78(0x28)
};

// Class Phoenix.SceneAction_KillBystanders
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_KillBystanders : USceneRigObjectActionBase {
	float KillPct; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Phoenix.SceneActionState_KillBystanders
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_KillBystanders : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_LightComponentStates
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_LightComponentStates : USceneRigObjectActionBase {
	struct TArray<struct ULightComponentState*> States; // 0xa0(0x10)
	bool bIncludeChildActors; // 0xb0(0x01)
	bool bUpdateEveryFrame; // 0xb1(0x01)
	char pad_B2[0x6]; // 0xb2(0x06)
};

// Class Phoenix.SceneActionState_LightComponentStates
// Size: 0x88 (Inherited: 0x70)
struct USceneActionState_LightComponentStates : USceneRigObjectActionState {
	struct FLightComponentStatesSaveData SaveData; // 0x70(0x10)
	int32_t SavedData; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Phoenix.SceneActionState_LightCullingSettings
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_LightCullingSettings : USceneRigActionState {
};

// Class Phoenix.SceneAction_LightCullingSettings
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_LightCullingSettings : USceneRigActionBase {
	struct ULightCullingSettings* Settings; // 0x88(0x08)
};

// Class Phoenix.SceneActionState_LightCullingDisable
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_LightCullingDisable : USceneRigActionState {
};

// Class Phoenix.SceneAction_LightCullingDisable
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_LightCullingDisable : USceneRigActionBase {
};

// Class Phoenix.SceneAction_Lumos
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_Lumos : USceneRigObjectActionBase {
	int32_t SpellLevel; // 0xa0(0x04)
	bool KeepStateOnCompletion; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
};

// Class Phoenix.SceneActionState_Lumos
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_Lumos : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.SceneActionState_MaterialSwap
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_MaterialSwap : USceneRigObjectActionState {
	struct TWeakObjectPtr<struct UMaterialPermuterLoadingBundle> MaterialBundle; // 0x70(0x08)
	struct UMaterialSwap* MaterialSwap; // 0x78(0x08)
};

// Class Phoenix.SceneAction_MaterialSwap
// Size: 0xd8 (Inherited: 0xa0)
struct USceneAction_MaterialSwap : USceneRigObjectActionBase {
	struct TArray<struct FSceneActionMaterialSwapParameterScalar> Scalars; // 0xa0(0x10)
	struct TArray<struct FSceneActionMaterialSwapParameterVector> Vectors; // 0xb0(0x10)
	struct TArray<struct FSceneActionMaterialSwapParameterColor> Colors; // 0xc0(0x10)
	bool bLeaveSwappedMaterials; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
};

// Class Phoenix.SceneAction_MaterialSwapKey
// Size: 0x240 (Inherited: 0xd8)
struct USceneAction_MaterialSwapKey : USceneAction_MaterialSwap {
	struct FMaterialSwapKeyUI Swap; // 0xd8(0x110)
	struct FMaterialSwapKeyBundlePreload PreloadMaterials; // 0x1e8(0x03)
	char pad_1EB[0x5]; // 0x1eb(0x05)
	struct FMaterialSwapParameters InitialParameters; // 0x1f0(0x50)
};

// Class Phoenix.SceneAction_MaterialSwapMIDs
// Size: 0x228 (Inherited: 0xd8)
struct USceneAction_MaterialSwapMIDs : USceneAction_MaterialSwap {
	struct FMaterialSwapInfoInPlaceMIDs Swap; // 0xd8(0x100)
	struct FMaterialSwapParameters InitialParameters; // 0x1d8(0x50)
};

// Class Phoenix.SceneAction_MaterialSwapOverrideMaterial
// Size: 0x238 (Inherited: 0xd8)
struct USceneAction_MaterialSwapOverrideMaterial : USceneAction_MaterialSwap {
	struct FMaterialSwapInfoOverrideMaterial Swap; // 0xd8(0x110)
	struct FMaterialSwapParameters InitialParameters; // 0x1e8(0x50)
};

// Class Phoenix.SceneAction_MaterialSwapOverrideMaterials
// Size: 0x240 (Inherited: 0xd8)
struct USceneAction_MaterialSwapOverrideMaterials : USceneAction_MaterialSwap {
	struct FMaterialSwapInfoOverrideMaterials Swap; // 0xd8(0x118)
	struct FMaterialSwapParameters InitialParameters; // 0x1f0(0x50)
};

// Class Phoenix.SceneAction_MaterialSwapFlex
// Size: 0x138 (Inherited: 0xd8)
struct USceneAction_MaterialSwapFlex : USceneAction_MaterialSwap {
	struct UMaterialSwapInfoObject* Swap; // 0xd8(0x08)
	struct FMaterialSwapKeyBundlePreload PreloadMaterials; // 0xe0(0x03)
	char pad_E3[0x5]; // 0xe3(0x05)
	struct FMaterialSwapParameters InitialParameters; // 0xe8(0x50)
};

// Class Phoenix.SceneAction_MountCreature
// Size: 0xc0 (Inherited: 0xa0)
struct USceneAction_MountCreature : USceneRigObjectActionBase {
	struct UActorProvider* Creature; // 0xa0(0x08)
	struct ACreatureMountHandler* MountHandlerClass; // 0xa8(0x08)
	bool bForceMountOnEnter; // 0xb0(0x01)
	bool bForceDismountOnExit; // 0xb1(0x01)
	bool bUseDismountTransition; // 0xb2(0x01)
	bool bStartFlying; // 0xb3(0x01)
	bool bStopFlying; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct UActorProvider* PathNode; // 0xb8(0x08)
};

// Class Phoenix.SceneActionState_MountCreature
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_MountCreature : USceneRigObjectActionState {
};

// Class Phoenix.SceneActionState_NearClip
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_NearClip : USceneRigActionState {
};

// Class Phoenix.SceneAction_NearClip
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_NearClip : USceneRigActionBase {
	float NearClip; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.NiagaraBasketActor
// Size: 0x258 (Inherited: 0x248)
struct ANiagaraBasketActor : AActor {
	struct TArray<struct TWeakObjectPtr<struct UNiagaraComponent>> Components; // 0x248(0x10)
};

// Class Phoenix.SceneActionState_NiagaraSystem
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_NiagaraSystem : USceneRigActionState {
	struct UNiagaraComponent* NiagaraComponent; // 0x50(0x08)
};

// Class Phoenix.SceneAction_NiagaraSystem
// Size: 0xa8 (Inherited: 0x88)
struct USceneAction_NiagaraSystem : USceneRigActionBase {
	struct UNiagaraSystem* System; // 0x88(0x08)
	struct UTransformProvider* AttachTo; // 0x90(0x08)
	struct FRotator FixedRotation; // 0x98(0x0c)
	bool bLocationOnly; // 0xa4(0x01)
	bool bStationary; // 0xa5(0x01)
	char pad_A6[0x2]; // 0xa6(0x02)
};

// Class Phoenix.SceneActionState_NiagaraEmitter
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_NiagaraEmitter : USceneRigObjectActionState {
	struct UNiagaraComponent* NiagaraComponent; // 0x70(0x08)
};

// Class Phoenix.SceneAction_NiagaraEmitter
// Size: 0x100 (Inherited: 0xa0)
struct USceneAction_NiagaraEmitter : USceneRigObjectActionBase {
	struct UNiagaraSystem* System; // 0xa0(0x08)
	struct FName AttachTo; // 0xa8(0x08)
	struct UTransformProvider* EndPoint; // 0xb0(0x08)
	char pad_B8[0x8]; // 0xb8(0x08)
	struct FTransform LocalTransform; // 0xc0(0x30)
	bool bUseLocalTransform; // 0xf0(0x01)
	char pad_F1[0xf]; // 0xf1(0x0f)
};

// Class Phoenix.SceneActionState_ObjectFade
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_ObjectFade : USceneRigObjectActionState {
	bool bStartedFade; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Phoenix.SceneAction_ObjectFade
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_ObjectFade : USceneRigObjectActionBase {
	struct FEasingFunction FadeCurve; // 0xa0(0x0c)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Phoenix.SceneAction_ObjectFadeIn
// Size: 0xb0 (Inherited: 0xb0)
struct USceneAction_ObjectFadeIn : USceneAction_ObjectFade {
};

// Class Phoenix.SceneAction_ObjectFadeOut
// Size: 0xb0 (Inherited: 0xb0)
struct USceneAction_ObjectFadeOut : USceneAction_ObjectFade {
};

// Class Phoenix.SceneActionState_PauseForVanishment
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_PauseForVanishment : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.SceneAction_PauseForVanishment
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_PauseForVanishment : USceneRigActionBase {
};

// Class Phoenix.SceneAction_PerformTask
// Size: 0xa0 (Inherited: 0xa0)
struct USceneAction_PerformTask : USceneRigObjectActionBase {
};

// Class Phoenix.SceneActionState_PerformTask
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_PerformTask : USceneRigObjectActionState {
};

// Class Phoenix.SceneAction_PerformTaskExecute
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_PerformTaskExecute : USceneRigObjectActionBase {
	struct UActorProvider* PerformTaskActor; // 0xa0(0x08)
};

// Class Phoenix.SceneActionState_PerformTaskExecute
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_PerformTaskExecute : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)

	void OnPTComplete(struct APerformTasksForAI* InPTPtr); // Function Phoenix.SceneActionState_PerformTaskExecute.OnPTComplete // (Final|Native|Public) // @ game+0x3447f20
};

// Class Phoenix.SceneAction_PerformTaskFinishCurrentTask
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_PerformTaskFinishCurrentTask : USceneRigActionBase {
	struct UActorProvider* PerformTaskActor; // 0x88(0x08)
};

// Class Phoenix.SceneActionState_PerformTaskFinishCurrentTask
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_PerformTaskFinishCurrentTask : USceneRigActionState {
};

// Class Phoenix.SceneAction_PerformTaskFollowSpline
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_PerformTaskFollowSpline : USceneRigObjectActionBase {
	struct UActorProvider* SplineFollowerActor; // 0xa0(0x08)
	enum class EPerformTaskFinishAction FinishAction; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.SceneActionState_PerformTaskFollowSpline
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_PerformTaskFollowSpline : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)

	void OnSplineCompleted(struct UScheduledEntity* InScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.SceneActionState_PerformTaskFollowSpline.OnSplineCompleted // (Final|Native|Public) // @ game+0x3447fb0
};

// Class Phoenix.SceneAction_PeriodicSRTrigger
// Size: 0xe8 (Inherited: 0x88)
struct USceneAction_PeriodicSRTrigger : USceneRigActionBase {
	float MinTriggerTime; // 0x88(0x04)
	float MaxTriggerTime; // 0x8c(0x04)
	struct TMap<struct USceneRig*, float> WeightedPeriodicSceneRigs; // 0x90(0x50)
	bool bTriggerImmediately; // 0xe0(0x01)
	bool bStopScenerigsAtEnd; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
};

// Class Phoenix.SceneActionState_PeriodicSRTrigger
// Size: 0xb0 (Inherited: 0x50)
struct USceneActionState_PeriodicSRTrigger : USceneRigActionState {
	char pad_50[0x60]; // 0x50(0x60)
};

// Class Phoenix.SceneAction_PIM
// Size: 0x188 (Inherited: 0xa0)
struct USceneAction_PIM : USceneRigObjectActionBase {
	struct FSceneRigStage_FloatReference Reference; // 0xa0(0x10)
	enum class EPIMTypes PIMType; // 0xb0(0x01)
	bool bHasFailureTimeout; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	float FailureTimeout; // 0xb4(0x04)
	float JoystickSuccessTime; // 0xb8(0x04)
	float AnimationRotationRate; // 0xbc(0x04)
	float SuccessDecayRate; // 0xc0(0x04)
	bool bPlayVOHint; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct FDialogueConversationReference VOHintID; // 0xc8(0x10)
	float HintDelay; // 0xd8(0x04)
	float DelayAfterCompletion; // 0xdc(0x04)
	bool bMapPIMProgressToParameter; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	struct FDampedSpringScalar ProgressSmoothingSpring; // 0xe4(0x10)
	struct FName GameActionWildcard; // 0xf4(0x08)
	struct FName WildcardGamepadModifier; // 0xfc(0x08)
	char pad_104[0x4]; // 0x104(0x04)
	struct FString ButtonLegend; // 0x108(0x10)
	struct FString ModifierButtonLegend; // 0x118(0x10)
	bool DisplayModifierFirst; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
	struct FString TextKey; // 0x130(0x10)
	struct FString BackgroundImage; // 0x140(0x10)
	enum class EFeedbackAnim FeedBackAnimType; // 0x150(0x01)
	enum class EHorizontalAlignment HorizontalAlignment; // 0x151(0x01)
	enum class EVerticalAlignment VerticalAlignment; // 0x152(0x01)
	char pad_153[0x1]; // 0x153(0x01)
	struct FMargin Padding; // 0x154(0x10)
	float TelescopeInFocusDistance; // 0x164(0x04)
	float TelescopeBlurryDistance; // 0x168(0x04)
	float TelescopeInFocusWindow; // 0x16c(0x04)
	float TelescopeFullTravelTime; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
	struct UAkAudioEvent* PIMFX; // 0x178(0x08)
	struct UAkAudioEvent* EndPIMFX; // 0x180(0x08)
};

// Class Phoenix.GlobalLightingCustomBlendableFocusValue
// Size: 0x38 (Inherited: 0x28)
struct UGlobalLightingCustomBlendableFocusValue : UGlobalLightingBlendableBase {
	float Focus; // 0x28(0x04)
	char pad_2C[0xc]; // 0x2c(0x0c)
};

// Class Phoenix.SceneActionState_PIM
// Size: 0x248 (Inherited: 0x70)
struct USceneActionState_PIM : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	struct UGlobalLightingCustomBlendableFocusValue* CustomFocusBlendable; // 0x78(0x08)
	char pad_80[0x1c8]; // 0x80(0x1c8)

	void WidgetLoaded(struct TSoftClassPtr<UObject> WidgetClassPtr); // Function Phoenix.SceneActionState_PIM.WidgetLoaded // (Final|Native|Protected) // @ game+0x344d800
	void TelescopeWidgetLoaded(struct TSoftClassPtr<UObject> WidgetClassPtr); // Function Phoenix.SceneActionState_PIM.TelescopeWidgetLoaded // (Final|Native|Protected) // @ game+0x344d6f0
	void HandleWildcardAxisChanged(float AxisVal); // Function Phoenix.SceneActionState_PIM.HandleWildcardAxisChanged // (Final|Native|Protected) // @ game+0x344d650
	void HandleWildcardActionReleased(); // Function Phoenix.SceneActionState_PIM.HandleWildcardActionReleased // (Final|Native|Protected) // @ game+0x344d630
	void HandleWildcardActionPressed(); // Function Phoenix.SceneActionState_PIM.HandleWildcardActionPressed // (Final|Native|Protected) // @ game+0x344d610
	void HandleSpellButtonPressed(enum class ESpellButton SpellButton); // Function Phoenix.SceneActionState_PIM.HandleSpellButtonPressed // (Final|Native|Protected) // @ game+0x344d590
	void HandleModifierReleased(); // Function Phoenix.SceneActionState_PIM.HandleModifierReleased // (Final|Native|Protected) // @ game+0x344d570
	void HandleModifierPressed(); // Function Phoenix.SceneActionState_PIM.HandleModifierPressed // (Final|Native|Protected) // @ game+0x344d550
	void HandleModifierAxisChanged(float AxisVal); // Function Phoenix.SceneActionState_PIM.HandleModifierAxisChanged // (Final|Native|Protected) // @ game+0x344d4d0
	void HandleAnalogStick(struct FKey Key, float AnalogValue); // Function Phoenix.SceneActionState_PIM.HandleAnalogStick // (Final|Native|Protected) // @ game+0x344d3a0
	void HandleAcceptActionReleased(); // Function Phoenix.SceneActionState_PIM.HandleAcceptActionReleased // (Final|Native|Protected) // @ game+0x344d380
	void HandleAcceptActionPressed(); // Function Phoenix.SceneActionState_PIM.HandleAcceptActionPressed // (Final|Native|Protected) // @ game+0x344d360
	void FinishNow(bool bSuccess); // Function Phoenix.SceneActionState_PIM.FinishNow // (Final|Native|Protected|BlueprintCallable) // @ game+0x344d2d0
};

// Class Phoenix.SceneAction_PlayerPerception
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_PlayerPerception : USceneRigActionBase {
	enum class EPlayerPerceptionEnableDisable InteractTargeting; // 0x88(0x01)
	enum class EPlayerPerceptionEnableDisable AutoTargeting; // 0x89(0x01)
	enum class EPlayerPerceptionEnableDisable OppugnoTargeting; // 0x8a(0x01)
	char pad_8B[0x5]; // 0x8b(0x05)
	struct UActorProvider* SpecialAutoTarget; // 0x90(0x08)
};

// Class Phoenix.SceneActionState_PlayerPerception
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_PlayerPerception : USceneRigActionState {
};

// Class Phoenix.SceneAction_PlayerReset
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_PlayerReset : USceneRigActionBase {
	struct UTransformProvider* TeleportTransform; // 0x88(0x08)
	enum class ECameraStackResetType CameraResetType; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UTransformProvider* CameraResetLookAtLocation; // 0x98(0x08)
};

// Class Phoenix.SceneActionState_PlayerReset
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_PlayerReset : USceneRigActionState {
};

// Class Phoenix.SceneAction_PlayForcedConversation
// Size: 0xe8 (Inherited: 0xa0)
struct USceneAction_PlayForcedConversation : USceneRigObjectActionBase {
	struct FName CharacterID; // 0xa0(0x08)
	struct UStoryGraph_Conversation* ConversationGraph; // 0xa8(0x08)
	struct FTimeRigOutputSymbol ConversationStart; // 0xb0(0x18)
	struct FTimeRigOutputSymbol ConversationEnd; // 0xc8(0x18)
	enum class EPlayForcedConversation_ConversationInitializationTime ConversationInitializationTime; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Phoenix.SceneActionState_PlayForcedConversation
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_PlayForcedConversation : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)
};

// Class Phoenix.SceneAction_PlayTalkToConversation
// Size: 0xe0 (Inherited: 0xa0)
struct USceneAction_PlayTalkToConversation : USceneRigObjectActionBase {
	struct FName CharacterID; // 0xa0(0x08)
	struct UStoryGraph_Conversation* ConversationGraph; // 0xa8(0x08)
	struct FTimeRigOutputSymbol ConversationStart; // 0xb0(0x18)
	struct FTimeRigOutputSymbol ConversationEnd; // 0xc8(0x18)
};

// Class Phoenix.SceneActionState_PlayTalkToConversation
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_PlayTalkToConversation : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)
};

// Class Phoenix.SceneActionState_PostProcessing
// Size: 0x660 (Inherited: 0x50)
struct USceneActionState_PostProcessing : USceneRigActionState {
	char pad_50[0x10]; // 0x50(0x10)
	struct FPostProcessSettings PostProcessSettings; // 0x60(0x5f0)
	float CurrentBlend; // 0x650(0x04)
	float InsertedPriority; // 0x654(0x04)
	bool bInserted; // 0x658(0x01)
	char pad_659[0x7]; // 0x659(0x07)
};

// Class Phoenix.SceneAction_PostProcessingBase
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_PostProcessingBase : USceneRigActionBase {
	float Priority; // 0x88(0x04)
	bool bHighestPossiblePriority; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
};

// Class Phoenix.SceneAction_PostProcessingBaseFeatherInOut
// Size: 0x98 (Inherited: 0x90)
struct USceneAction_PostProcessingBaseFeatherInOut : USceneAction_PostProcessingBase {
	float FeatherInTime; // 0x90(0x04)
	float FeatherOutTime; // 0x94(0x04)
};

// Class Phoenix.SceneAction_PostProcessing
// Size: 0x6d0 (Inherited: 0x98)
struct USceneAction_PostProcessing : USceneAction_PostProcessingBaseFeatherInOut {
	char pad_98[0x8]; // 0x98(0x08)
	struct FPostProcessSettings PostProcessSettings; // 0xa0(0x5f0)
	struct FBlendDomain BlendDomain; // 0x690(0x38)
	bool bEnabled; // 0x6c8(0x01)
	char pad_6C9[0x7]; // 0x6c9(0x07)
};

// Class Phoenix.SceneAction_PostProcessingVars
// Size: 0xe8 (Inherited: 0x98)
struct USceneAction_PostProcessingVars : USceneAction_PostProcessingBaseFeatherInOut {
	struct TArray<struct UPostProcessingVar*> PostProcessingVars; // 0x98(0x10)
	struct FBlendDomain BlendDomain; // 0xa8(0x38)
	bool bStretchCurvesToTime; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Phoenix.SceneActionState_ConsoleRenderingVar
// Size: 0x80 (Inherited: 0x50)
struct USceneActionState_ConsoleRenderingVar : USceneRigActionState {
	struct FString Variable; // 0x50(0x10)
	struct FConsoleVariableFlexValue Value; // 0x60(0x20)
};

// Class Phoenix.SceneAction_ConsoleRenderingVar
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_ConsoleRenderingVar : USceneRigActionBase {
};

// Class Phoenix.SceneAction_ConsoleRenderingVarSimple
// Size: 0xc0 (Inherited: 0x88)
struct USceneAction_ConsoleRenderingVarSimple : USceneAction_ConsoleRenderingVar {
	struct FConsoleVariableLienEntry Console; // 0x88(0x38)
};

// Class Phoenix.SceneAction_DynamicShadowQualityScale
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_DynamicShadowQualityScale : USceneAction_ConsoleRenderingVar {
	int32_t QualityScale; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.SceneAction_MaxFPS
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_MaxFPS : USceneAction_ConsoleRenderingVar {
	int32_t MaxFPS; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
};

// Class Phoenix.SceneAction_RenderThreadLightCullingDisable
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_RenderThreadLightCullingDisable : USceneAction_ConsoleRenderingVar {
};

// Class Phoenix.SceneAction_TestCameraCut
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_TestCameraCut : USceneAction_ConsoleRenderingVar {
};

// Class Phoenix.SceneAction_VSyncEditor
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_VSyncEditor : USceneAction_ConsoleRenderingVar {
};

// Class Phoenix.SceneAction_ShowFlagWireframe
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_ShowFlagWireframe : USceneAction_ConsoleRenderingVar {
};

// Class Phoenix.SceneActionState_RenderDocCaptureFrames
// Size: 0x80 (Inherited: 0x80)
struct USceneActionState_RenderDocCaptureFrames : USceneActionState_ConsoleRenderingVar {
};

// Class Phoenix.SceneAction_RenderDocCaptureFrames
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_RenderDocCaptureFrames : USceneAction_ConsoleRenderingVar {
	int32_t Frames; // 0x88(0x04)
	bool bCaptureInSceneRigEditor; // 0x8c(0x01)
	char pad_8D[0x3]; // 0x8d(0x03)
};

// Class Phoenix.SceneActionState_RenderSettings
// Size: 0x660 (Inherited: 0x50)
struct USceneActionState_RenderSettings : USceneRigActionState {
	char pad_50[0x10]; // 0x50(0x10)
	struct FPostProcessSettings EnginePostProcessSettings; // 0x60(0x5f0)
	float InsertedPriortiy; // 0x650(0x04)
	float CurrentBlend; // 0x654(0x04)
	char pad_658[0x8]; // 0x658(0x08)
};

// Class Phoenix.SceneAction_RenderSettings
// Size: 0x130 (Inherited: 0x88)
struct USceneAction_RenderSettings : USceneRigActionBase {
	struct FRenderSettingsPostProcessing PostProcessing; // 0x88(0x5c)
	float ExposureTweak; // 0xe4(0x04)
	float FeatherInTime; // 0xe8(0x04)
	float FeatherOutTime; // 0xec(0x04)
	struct FBlendDomain BlendDomain; // 0xf0(0x38)
	float Priority; // 0x128(0x04)
	bool bEnabled; // 0x12c(0x01)
	bool bUseExposureTweak; // 0x12d(0x01)
	char pad_12E[0x2]; // 0x12e(0x02)
};

// Class Phoenix.SceneActionState_RenderSettingsViewpoint
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_RenderSettingsViewpoint : USceneRigActionState {
};

// Class Phoenix.SceneAction_RenderSettingsViewpoint
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_RenderSettingsViewpoint : USceneRigActionBase {
	float PostProcessingViewpoint; // 0x88(0x04)
	float SmoothChangeTimePercent; // 0x8c(0x04)
};

// Class Phoenix.SceneAction_SanctuaryLoadZone
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_SanctuaryLoadZone : USceneRigActionBase {
	struct FName ZoneNameToLoad; // 0x88(0x08)
	bool bIgnoreZoneLocks; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.SceneActionState_SanctuaryLoadZone
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_SanctuaryLoadZone : USceneRigActionState {

	void OnZoneLoadedAndVisible(); // Function Phoenix.SceneActionState_SanctuaryLoadZone.OnZoneLoadedAndVisible // (Final|Native|Public) // @ game+0x344d6d0
};

// Class Phoenix.SceneAction_SetCurrentTime
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_SetCurrentTime : USceneRigActionBase {
	struct USchedulerTimeProvider* SchedulerTime; // 0x88(0x08)
	int32_t Hours; // 0x90(0x04)
	int32_t Minutes; // 0x94(0x04)
};

// Class Phoenix.SceneActionState_SetCurrentTime
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_SetCurrentTime : USceneRigActionState {
};

// Class Phoenix.SceneAction_SimpleDialogueSequence
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_SimpleDialogueSequence : USceneRigActionBase {
	struct FActionParameter_FString EventNameParameter; // 0x88(0x18)
};

// Class Phoenix.SceneActionState_SimpleDialogueSequence
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_SimpleDialogueSequence : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.SceneActionState_SkinFX
// Size: 0x98 (Inherited: 0x70)
struct USceneActionState_SkinFX : USceneRigObjectActionState {
	struct TWeakObjectPtr<struct UMaterialPermuterLoadingBundle> MaterialBundle; // 0x70(0x08)
	struct TWeakObjectPtr<struct USkinFXComponent> SkinFX; // 0x78(0x08)
	struct FName FXName; // 0x80(0x08)
	bool bHaveSetSkinFXBlueprintVariables; // 0x88(0x01)
	bool bNeedsNiagaraOverride; // 0x89(0x01)
	char pad_8A[0x6]; // 0x8a(0x06)
	struct UNiagaraSystem* NiagaraOverrideLoaded; // 0x90(0x08)
};

// Class Phoenix.SceneAction_SkinFX
// Size: 0x2e0 (Inherited: 0xa0)
struct USceneAction_SkinFX : USceneRigObjectActionBase {
	struct ASkinFXDefinition* SkinFX; // 0xa0(0x08)
	enum class EMaterialPermuterLoadingPriority MaterialLoadPriority; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct FMaterialSwapParameters InitialParameters; // 0xb0(0x50)
	struct FSceneActionSkinFXProviderParameters SceneRigParameters; // 0x100(0x30)
	struct FMaterialSwapRules swapRules; // 0x130(0xe0)
	struct FNiagaraMaterialDriverSetup NiagaraOverride; // 0x210(0x78)
	struct FSkinFXASREnvelope EnvelopeOverride; // 0x288(0x2c)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct TArray<struct UMaterialSwapMeshState*> OverrideMeshStates; // 0x2b8(0x10)
	struct TArray<struct USceneActionBlueprintVarProvider*> SkinFXBlueprintVariables; // 0x2c8(0x10)
	bool bUseInitialParameters; // 0x2d8(0x01)
	bool bUseSceneRigParameters; // 0x2d9(0x01)
	bool bUseSwapRules; // 0x2da(0x01)
	bool bUseNiagaraOverride; // 0x2db(0x01)
	bool bUseEnvelopeOverride; // 0x2dc(0x01)
	bool bUseMeshStatesOverride; // 0x2dd(0x01)
	char pad_2DE[0x2]; // 0x2de(0x02)
};

// Class Phoenix.SceneAction_SkipControl
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_SkipControl : USceneRigActionBase {
};

// Class Phoenix.SceneActionState_SkipControl
// Size: 0xe0 (Inherited: 0x50)
struct USceneActionState_SkipControl : USceneRigActionState {
	char pad_50[0x90]; // 0x50(0x90)
};

// Class Phoenix.SceneActionState_SkyState
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_SkyState : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
	float LerpAlpha; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.SceneAction_SkyState
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_SkyState : USceneRigActionBase {
	struct USkyStateOverride* SkyStateOverride; // 0x88(0x08)
	struct FSkyStateSmoothInOut SmoothInOut; // 0x90(0x08)
	bool bPreviewOnly; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class Phoenix.SkyStateOverrideCelestialPointOfInterestAlignToTransform
// Size: 0x58 (Inherited: 0x50)
struct USkyStateOverrideCelestialPointOfInterestAlignToTransform : USkyStateOverrideCelestialPointOfInterestAlignTo {
	struct UTransformProvider* OrientTo; // 0x50(0x08)
};

// Class Phoenix.SceneAction_SpawnFromDOV
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_SpawnFromDOV : USceneRigActionBase {
	struct UActorProvider* DOVActor; // 0x88(0x08)
};

// Class Phoenix.SceneActionState_SpawnFromDOV
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_SpawnFromDOV : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)

	void SpawnCallback(struct AActor* SpawnedActor, struct FName& GroupName); // Function Phoenix.SceneActionState_SpawnFromDOV.SpawnCallback // (Final|Native|Public|HasOutParms) // @ game+0x3452b90
};

// Class Phoenix.SceneAction_StencilFXBase
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_StencilFXBase : USceneRigActionBase {
};

// Class Phoenix.SceneActionState_StencilFX
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_StencilFX : USceneRigObjectActionState {
	struct FName StartedFX; // 0x70(0x08)
};

// Class Phoenix.SceneAction_StencilFX
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_StencilFX : USceneAction_StencilFXBase {
	struct FStencilManagerEffectName StencilFX; // 0x88(0x08)
};

// Class Phoenix.SceneActionState_StencilFXEnableInterface
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_StencilFXEnableInterface : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
	bool bInsideInterval; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Phoenix.SceneAction_StencilFXEnableInterface
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_StencilFXEnableInterface : USceneAction_StencilFXBase {
};

// Class Phoenix.SceneAction_StencilFXDisableAll
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_StencilFXDisableAll : USceneAction_StencilFXEnableInterface {
	struct TArray<struct FStencilManagerGroupName> ExceptGroups; // 0x88(0x10)
};

// Class Phoenix.SceneAction_StencilFXEnableAll
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_StencilFXEnableAll : USceneAction_StencilFXEnableInterface {
};

// Class Phoenix.SceneAction_StencilFXGroups
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_StencilFXGroups : USceneAction_StencilFXEnableInterface {
	struct TArray<struct FStencilManagerGroupName> Groups; // 0x88(0x10)
	bool bExclusive; // 0x98(0x01)
	bool bEnableStencilManager; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
};

// Class Phoenix.SceneAction_StencilFXDisableGroups
// Size: 0xa0 (Inherited: 0xa0)
struct USceneAction_StencilFXDisableGroups : USceneAction_StencilFXGroups {
};

// Class Phoenix.SceneAction_StencilFXEnableGroups
// Size: 0xa0 (Inherited: 0xa0)
struct USceneAction_StencilFXEnableGroups : USceneAction_StencilFXGroups {
};

// Class Phoenix.SceneAction_StitchingEnter
// Size: 0x1b0 (Inherited: 0xa0)
struct USceneAction_StitchingEnter : USceneRigObjectActionBase {
	struct UAnimationProvider* Animation; // 0xa0(0x08)
	struct FAnimationRequestLayerReference Layer; // 0xa8(0x08)
	struct USceneAction_Animation* PreviousAnimationAction; // 0xb0(0x08)
	struct USceneAction_Animation* NextAnimationAction; // 0xb8(0x08)
	struct UTransformProvider* StartPlacement; // 0xc0(0x08)
	struct UTransformProvider* EndPlacement; // 0xc8(0x08)
	float EndSpeed; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct UTransformProvider* PreviewPlacement; // 0xd8(0x08)
	float PreviewStartSpeed; // 0xe0(0x04)
	int32_t StepsToIterateStartPhases; // 0xe4(0x04)
	struct TArray<struct UTransformProvider*> AdditionalSplinePoints; // 0xe8(0x10)
	bool StartPhaseRequiresNoMatch; // 0xf8(0x01)
	bool EndPhaseRequiresNoMatch; // 0xf9(0x01)
	char pad_FA[0x2]; // 0xfa(0x02)
	float InBlendTime; // 0xfc(0x04)
	bool InBlendIsInertial; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	float MidBlendTime; // 0x104(0x04)
	bool MidBlendIsInertial; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float OutBlendTime; // 0x10c(0x04)
	bool OutBlendIsInertial; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float PostAnimationInertialBlendTime; // 0x114(0x04)
	bool ScaleRootMotion; // 0x118(0x01)
	bool WarpStride; // 0x119(0x01)
	char pad_11A[0x2]; // 0x11a(0x02)
	float StrideWarpFactor; // 0x11c(0x04)
	bool HoldFootPositionWhenPlanted; // 0x120(0x01)
	char pad_121[0x3]; // 0x121(0x03)
	float StrideBias; // 0x124(0x04)
	bool ModifySpeedAndDuration; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	float MinCadenceFactor; // 0x12c(0x04)
	float MaxCadenceFactor; // 0x130(0x04)
	float MinStrideFactor; // 0x134(0x04)
	float MaxStrideFactor; // 0x138(0x04)
	float StartPhaseOffset; // 0x13c(0x04)
	float EndPhaseOffset; // 0x140(0x04)
	bool TrapezoidalVelocity; // 0x144(0x01)
	char pad_145[0x3]; // 0x145(0x03)
	float Acceleration; // 0x148(0x04)
	float Deceleration; // 0x14c(0x04)
	enum class ECruiseSpeed CruiseSpeedChoice; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	float SpecifiedCruisingSpeed; // 0x154(0x04)
	bool CastRayToDetectFloor; // 0x158(0x01)
	char pad_159[0x3]; // 0x159(0x03)
	float VerticalCapsuleOffset; // 0x15c(0x04)
	struct FTimeRigOutputSymbol BlendIn; // 0x160(0x18)
	struct FTimeRigOutputSymbol StitchEnds; // 0x178(0x18)
	struct FTimeRigOutputSymbol BlendOut; // 0x190(0x18)
	bool bExitStitch; // 0x1a8(0x01)
	char pad_1A9[0x3]; // 0x1a9(0x03)
	float ExitTurningRate; // 0x1ac(0x04)
};

// Class Phoenix.SceneActionState_StitchingEnter
// Size: 0x780 (Inherited: 0x70)
struct USceneActionState_StitchingEnter : USceneRigObjectActionState {
	char pad_70[0x20]; // 0x70(0x20)
	struct FAnimationTrack AnimationTrack; // 0x90(0x1d0)
	struct TWeakObjectPtr<struct USkeletalMeshComponent> SkeletalMeshComponent; // 0x260(0x08)
	struct USplineComponent* Path; // 0x268(0x08)
	char pad_270[0x488]; // 0x270(0x488)
	struct UAnimationComponent* AnimationComponent; // 0x6f8(0x08)
	struct TArray<struct UAnimSequence*> AnimSequences; // 0x700(0x10)
	struct AActor* Actor; // 0x710(0x08)
	struct UAnimSequence* EntryAnimSequence; // 0x718(0x08)
	struct UAnimSequence* CurrAnimSequence; // 0x720(0x08)
	struct UAnimSequence* PrevAnimSequence; // 0x728(0x08)
	struct UAble_AnimInstance* AnimInstance; // 0x730(0x08)
	struct UCustomizableCharacterComponent* CCC; // 0x738(0x08)
	bool ShouldBeRegistered; // 0x740(0x01)
	char pad_741[0x3f]; // 0x741(0x3f)
};

// Class Phoenix.SceneAction_SuspendEnemies
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_SuspendEnemies : USceneRigActionBase {
	struct FActionParameter_FString EventNameParameter; // 0x88(0x18)
};

// Class Phoenix.SceneActionState_SuspendEnemies
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_SuspendEnemies : USceneRigActionState {
};

// Class Phoenix.SceneAction_TeleportToStation
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_TeleportToStation : USceneRigObjectActionBase {
	struct UActorProvider* StationActor; // 0xa0(0x08)
};

// Class Phoenix.SceneActionState_TeleportToStation
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_TeleportToStation : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)
};

// Class Phoenix.SceneAction_TickSequencerDynamicBucketsBase
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_TickSequencerDynamicBucketsBase : USceneRigActionBase {
};

// Class Phoenix.SceneAction_TickSequencerDynamicBuckets
// Size: 0x88 (Inherited: 0x88)
struct USceneAction_TickSequencerDynamicBuckets : USceneAction_TickSequencerDynamicBucketsBase {
};

// Class Phoenix.SceneActionState_TickSequencerDynamicBuckets
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_TickSequencerDynamicBuckets : USceneRigActionState {
};

// Class Phoenix.SceneActionState_TimeDate
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_TimeDate : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
	float LerpAlpha; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Phoenix.SceneAction_TimeDate
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_TimeDate : USceneRigActionBase {
	struct UTimeOverrideBase* TimeOverride; // 0x88(0x08)
	bool bPreviewOnly; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
};

// Class Phoenix.TimeOverrideTimeInputRangeSceneRig
// Size: 0x58 (Inherited: 0x30)
struct UTimeOverrideTimeInputRangeSceneRig : UTimeOverrideTimeOnly {
	struct FTimeInput StartTime; // 0x30(0x0c)
	struct FTimeInput EndTime; // 0x3c(0x0c)
	enum class ETimeOverrideType Type; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float Priority; // 0x4c(0x04)
	bool bUseEndTime; // 0x50(0x01)
	char pad_51[0x7]; // 0x51(0x07)
};

// Class Phoenix.TimeOverrideDateTimeInputRangeSceneRig
// Size: 0x68 (Inherited: 0x30)
struct UTimeOverrideDateTimeInputRangeSceneRig : UTimeOverrideDateTime {
	struct FDateTimeInput StartDateTime; // 0x30(0x18)
	struct FDateTimeInput EndDateTime; // 0x48(0x18)
	float Priority; // 0x60(0x04)
	bool bUseEndDateTime; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
};

// Class Phoenix.SceneAction_TimeDilation
// Size: 0x90 (Inherited: 0x88)
struct USceneAction_TimeDilation : USceneRigActionBase {
	struct UFloatProvider* DilationValueProvider; // 0x88(0x08)
};

// Class Phoenix.SceneActionState_TimeDilation
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_TimeDilation : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.SceneActionState_VanishSurfaceObjects
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_VanishSurfaceObjects : USceneRigActionState {
};

// Class Phoenix.SceneAction_VanishSurfaceObjects
// Size: 0xa8 (Inherited: 0x88)
struct USceneAction_VanishSurfaceObjects : USceneRigActionBase {
	struct FVanishmentEvent VanishmentEvent; // 0x88(0x20)
};

// Class Phoenix.SceneAction_WaitForDeath
// Size: 0xa0 (Inherited: 0xa0)
struct USceneAction_WaitForDeath : USceneRigObjectActionBase {
};

// Class Phoenix.SceneActionState_WaitForDeath
// Size: 0x70 (Inherited: 0x70)
struct USceneActionState_WaitForDeath : USceneRigObjectActionState {

	void OnActorEndPlay(struct AActor* Actor); // Function Phoenix.SceneActionState_WaitForDeath.OnActorEndPlay // (Final|Native|Public) // @ game+0x3452a50
};

// Class Phoenix.SceneAction_WaitForPlayer
// Size: 0xa8 (Inherited: 0xa0)
struct USceneAction_WaitForPlayer : USceneRigObjectActionBase {
	float DistanceThreshold; // 0xa0(0x04)
	bool bOrientTowardsPlayer; // 0xa4(0x01)
	enum class EPerformTaskFinishAction FinishAction; // 0xa5(0x01)
	char pad_A6[0x2]; // 0xa6(0x02)
};

// Class Phoenix.SceneActionState_WaitForPlayer
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_WaitForPlayer : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)

	void OnPerformTaskComplete(struct UScheduledEntity* InScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.SceneActionState_WaitForPlayer.OnPerformTaskComplete // (Final|Native|Public) // @ game+0x3447fb0
};

// Class Phoenix.SceneAction_WalkToPoint
// Size: 0xb8 (Inherited: 0xa0)
struct USceneAction_WalkToPoint : USceneRigObjectActionBase {
	struct UTransformProvider* WorldSpaceTransform; // 0xa0(0x08)
	bool bForceTravelSpeed; // 0xa8(0x01)
	enum class EPerformTaskSpeedMode TravelSpeed; // 0xa9(0x01)
	char pad_AA[0x2]; // 0xaa(0x02)
	float ArrivalRadius; // 0xac(0x04)
	enum class EPerformTaskFinishAction FinishAction; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// Class Phoenix.SceneActionState_WalkToPoint
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_WalkToPoint : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)

	void OnArrived(); // Function Phoenix.SceneActionState_WalkToPoint.OnArrived // (Final|Native|Public) // @ game+0x3452ae0
};

// Class Phoenix.SceneAction_WalkToStation
// Size: 0xb0 (Inherited: 0xa0)
struct USceneAction_WalkToStation : USceneRigObjectActionBase {
	struct UActorProvider* StationActor; // 0xa0(0x08)
	bool bForceTravelSpeed; // 0xa8(0x01)
	enum class EPerformTaskSpeedMode TravelSpeed; // 0xa9(0x01)
	enum class EPerformTaskFinishAction FinishAction; // 0xaa(0x01)
	char pad_AB[0x5]; // 0xab(0x05)
};

// Class Phoenix.SceneActionState_WalkToStation
// Size: 0x80 (Inherited: 0x70)
struct USceneActionState_WalkToStation : USceneRigObjectActionState {
	char pad_70[0x10]; // 0x70(0x10)

	void OnArrived(struct UObject* InCaller); // Function Phoenix.SceneActionState_WalkToStation.OnArrived // (Final|Native|Public) // @ game+0x3452b00
};

// Class Phoenix.SceneAction_WaterRipple
// Size: 0x188 (Inherited: 0xa0)
struct USceneAction_WaterRipple : USceneRigObjectActionBase {
	struct TMap<struct FName, struct FName> BonesToTrack; // 0xa0(0x50)
	float Radius; // 0xf0(0x04)
	float IntensityMultiplier; // 0xf4(0x04)
	struct FName SocketName; // 0xf8(0x08)
	struct FRuntimeFloatCurve Intensity; // 0x100(0x88)
};

// Class Phoenix.SceneActionState_WaterRipple
// Size: 0x78 (Inherited: 0x70)
struct USceneActionState_WaterRipple : USceneRigObjectActionState {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Phoenix.SceneActionState_WeatherPreset
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_WeatherPreset : USceneRigActionState {
};

// Class Phoenix.SceneAction_WeatherPreset
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_WeatherPreset : USceneRigActionBase {
	struct FWeatherDefinitionName Preset; // 0x88(0x10)
	float PlaybackScale; // 0x98(0x04)
	bool bInstantSwitch; // 0x9c(0x01)
	bool bRestorePriorWeather; // 0x9d(0x01)
	bool bRestorePriorWeatherInstant; // 0x9e(0x01)
	bool bPreviewOnly; // 0x9f(0x01)
};

// Class Phoenix.SceneActionState_WeatherCloudsTime
// Size: 0x50 (Inherited: 0x50)
struct USceneActionState_WeatherCloudsTime : USceneRigActionState {
};

// Class Phoenix.SceneAction_WeatherCloudsTime
// Size: 0x98 (Inherited: 0x88)
struct USceneAction_WeatherCloudsTime : USceneRigActionBase {
	float OffsetTime; // 0x88(0x04)
	struct FVector2D OffsetWeather; // 0x8c(0x08)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.SceneActionState_WeatherLocalWind
// Size: 0x60 (Inherited: 0x50)
struct USceneActionState_WeatherLocalWind : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
	float CurrentBlend; // 0x58(0x04)
	float Now; // 0x5c(0x04)
};

// Class Phoenix.SceneAction_WeatherLocalWind
// Size: 0xd0 (Inherited: 0x88)
struct USceneAction_WeatherLocalWind : USceneRigActionBase {
	float BlendInTime; // 0x88(0x04)
	float BlendOutTime; // 0x8c(0x04)
	struct FBlendDomain BlendDomain; // 0x90(0x38)
	float Priority; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Phoenix.SceneAction_WeatherLocalWindPreset
// Size: 0xe0 (Inherited: 0xd0)
struct USceneAction_WeatherLocalWindPreset : USceneAction_WeatherLocalWind {
	struct FWindDefinitionName Preset; // 0xd0(0x10)
};

// Class Phoenix.SceneAction_WeatherLocalWindParameters
// Size: 0x1f8 (Inherited: 0xd0)
struct USceneAction_WeatherLocalWindParameters : USceneAction_WeatherLocalWind {
	struct FWindParameters WindParameters; // 0xd0(0x128)
};

// Class Phoenix.SceneAction_WeatherLocalWindConstant
// Size: 0xe0 (Inherited: 0xd0)
struct USceneAction_WeatherLocalWindConstant : USceneAction_WeatherLocalWind {
	struct FWindParametersInstant WindParameters; // 0xd0(0x10)
};

// Class Phoenix.SceneAction_WeatherLocalWindProviders
// Size: 0xe0 (Inherited: 0xd0)
struct USceneAction_WeatherLocalWindProviders : USceneAction_WeatherLocalWind {
	struct UVectorProvider* Direction; // 0xd0(0x08)
	struct UFloatProvider* Speed; // 0xd8(0x08)
};

// Class Phoenix.SceneActionState_WorldBaseHeight
// Size: 0x58 (Inherited: 0x50)
struct USceneActionState_WorldBaseHeight : USceneRigActionState {
	char pad_50[0x8]; // 0x50(0x08)
};

// Class Phoenix.SceneAction_WorldBaseHeight
// Size: 0xa0 (Inherited: 0x88)
struct USceneAction_WorldBaseHeight : USceneRigActionBase {
	float WorldBaseHeightMeters; // 0x88(0x04)
	int32_t Affects; // 0x8c(0x04)
	struct UTransformProvider* RelativeTo; // 0x90(0x08)
	float Priority; // 0x98(0x04)
	bool bPreviewOnly; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
};

// Class Phoenix.SceneGroup_SanctuaryIdentity
// Size: 0xb0 (Inherited: 0xa8)
struct USceneGroup_SanctuaryIdentity : UTimeRigGroup {
	enum class ESanctuaryIdentity Identity; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)

	void OnIdentityChanged(enum class ESanctuaryIdentity OldIdentity, enum class ESanctuaryIdentity NewIdentity); // Function Phoenix.SceneGroup_SanctuaryIdentity.OnIdentityChanged // (Final|Native|Public) // @ game+0x334f6b0
};

// Class Phoenix.SceneGroupState_SanctuaryIdentity
// Size: 0x68 (Inherited: 0x68)
struct USceneGroupState_SanctuaryIdentity : UTimeRigGroupState {
};

// Class Phoenix.SceneRigParameter_AkAudioEvent
// Size: 0x58 (Inherited: 0x38)
struct USceneRigParameter_AkAudioEvent : USceneRigParameter {
	struct FSceneRigAkAudioEventTrackSectionData Value; // 0x38(0x20)
};

// Class Phoenix.SceneRigParameterDefinition_AkAudioEvent
// Size: 0x58 (Inherited: 0x38)
struct USceneRigParameterDefinition_AkAudioEvent : USceneRigParameterDefinition {
	struct FSceneRigAkAudioEventTrackSectionData DefaultEvent; // 0x38(0x20)
};

// Class Phoenix.SceneRigParameter_AkAudioRTPC
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameter_AkAudioRTPC : USceneRigParameter {
	struct FSceneRigAkAudioRTPCTrackSectionData Value; // 0x38(0x18)
};

// Class Phoenix.SceneRigParameterDefinition_AkAudioRTPC
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameterDefinition_AkAudioRTPC : USceneRigParameterDefinition {
	struct FSceneRigAkAudioRTPCTrackSectionData DefaultEvent; // 0x38(0x18)
};

// Class Phoenix.SceneRigParameter_AkAudioState
// Size: 0x48 (Inherited: 0x38)
struct USceneRigParameter_AkAudioState : USceneRigParameter {
	struct FSceneRigAkAudioStateTrackSectionData Value; // 0x38(0x10)
};

// Class Phoenix.SceneRigParameterDefinition_AkAudioState
// Size: 0x48 (Inherited: 0x38)
struct USceneRigParameterDefinition_AkAudioState : USceneRigParameterDefinition {
	struct FSceneRigAkAudioStateTrackSectionData DefaultEvent; // 0x38(0x10)
};

// Class Phoenix.SceneRigParameter_AvaAudioMusic
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameter_AvaAudioMusic : USceneRigParameter {
	struct FSceneRigAvaAudioMusicTrackSectionData Value; // 0x38(0x18)
};

// Class Phoenix.SceneRigParameterDefinition_AvaAudioMusic
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameterDefinition_AvaAudioMusic : USceneRigParameterDefinition {
	struct FSceneRigAvaAudioMusicTrackSectionData DefaultEvent; // 0x38(0x18)
};

// Class Phoenix.SceneRigParameter_AvaAudioState
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameter_AvaAudioState : USceneRigParameter {
	struct FSceneRigAvaAudioStateTrackSectionData Value; // 0x38(0x14)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.SceneRigParameterDefinition_AvaAudioState
// Size: 0x50 (Inherited: 0x38)
struct USceneRigParameterDefinition_AvaAudioState : USceneRigParameterDefinition {
	struct FSceneRigAvaAudioStateTrackSectionData DefaultEvent; // 0x38(0x14)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Phoenix.SceneRig_Bink
// Size: 0x238 (Inherited: 0x238)
struct USceneRig_Bink : USceneRig {

	struct USceneRig_Bink* PlayBink(struct UMediaSource* FileMediaSource, struct UDataTable* Subtitles); // Function Phoenix.SceneRig_Bink.PlayBink // (Final|Native|Public|BlueprintCallable) // @ game+0x3457be0
};

// Class Phoenix.SceneRig_ByPlayerGender
// Size: 0x38 (Inherited: 0x28)
struct USceneRig_ByPlayerGender : USceneRigProvider {
	struct USceneRigProvider* Male; // 0x28(0x08)
	struct USceneRigProvider* Female; // 0x30(0x08)
};

// Class Phoenix.SceneRig_ByPlayerHouse
// Size: 0x48 (Inherited: 0x28)
struct USceneRig_ByPlayerHouse : USceneRigProvider {
	struct USceneRigProvider* Gryffindor; // 0x28(0x08)
	struct USceneRigProvider* Hufflepuff; // 0x30(0x08)
	struct USceneRigProvider* Ravenclaw; // 0x38(0x08)
	struct USceneRigProvider* Slytherin; // 0x40(0x08)
};

// Class Phoenix.SceneRig_BySocket
// Size: 0x38 (Inherited: 0x28)
struct USceneRig_BySocket : USceneRigProvider {
	struct TArray<struct FSceneRigSocketEntry> SocketEntries; // 0x28(0x10)
};

// Class Phoenix.SceneRig_ByStat
// Size: 0x80 (Inherited: 0x28)
struct USceneRig_ByStat : USceneRigProvider {
	struct FName StatName; // 0x28(0x08)
	struct TMap<int32_t, struct USceneRigProvider*> SceneRigs; // 0x30(0x50)
};

// Class Phoenix.SceneRig_ConversationAmbient
// Size: 0x70 (Inherited: 0x28)
struct USceneRig_ConversationAmbient : USceneRigProvider {
	char pad_28[0x18]; // 0x28(0x18)
	struct FGameplayTagContainer Tags; // 0x40(0x20)
	struct TArray<struct UAnimationArchitectTagProvider*> TagProviders; // 0x60(0x10)
};

// Class Phoenix.SceneRig_FluidStation
// Size: 0x60 (Inherited: 0x60)
struct USceneRig_FluidStation : USceneRig_TagLookup {
};

// Class Phoenix.SceneRig_Interaction
// Size: 0x268 (Inherited: 0x238)
struct USceneRig_Interaction : USceneRig {
	struct FSceneRigStage_Actor interactionActor; // 0x238(0x18)
	struct FSceneRigStage_Actor LocalPlayer; // 0x250(0x18)

	void SetSceneRoot(struct USceneRigStageParameterBlock* StageParameterBlock, struct FTransform& Transform); // Function Phoenix.SceneRig_Interaction.SetSceneRoot // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3457d90
	void SetInteractionActor(struct USceneRigStageParameterBlock* StageParameterBlock, struct AActor* Actor); // Function Phoenix.SceneRig_Interaction.SetInteractionActor // (Final|Native|Public|BlueprintCallable) // @ game+0x3457cb0
};

// Class Phoenix.SceneRig_Intrusion
// Size: 0x268 (Inherited: 0x238)
struct USceneRig_Intrusion : USceneRig {
	struct FSceneRigStage_Actor Enforcer; // 0x238(0x18)
	struct FSceneRigStage_Transform RootLocation; // 0x250(0x18)
};

// Class Phoenix.SceneRig_SimpleConversation
// Size: 0x498 (Inherited: 0x238)
struct USceneRig_SimpleConversation : USceneRig {
	struct FSceneRigStage_Actor interactionActor; // 0x238(0x18)
	struct FSceneRigStage_Actor LocalPlayer; // 0x250(0x18)
	struct FSceneRigStage_Actor Camera; // 0x268(0x18)
	struct FSceneRigStage_String DialogueSequenceID; // 0x280(0x18)
	struct FSceneRigStage_String DialogueEventName; // 0x298(0x18)
	struct FSceneRigStage_Int DialogueFlags; // 0x2b0(0x18)
	struct FSceneRigStage_Transform AvatarHead; // 0x2c8(0x18)
	struct FSceneRigStage_Transform AvatarRoot; // 0x2e0(0x18)
	struct FSceneRigStage_Transform AvatarRootFinal; // 0x2f8(0x18)
	struct FSceneRigStage_Transform A1Head; // 0x310(0x18)
	struct FSceneRigStage_Transform A1Root; // 0x328(0x18)
	struct FSceneRigStage_Transform A1RootFinal; // 0x340(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeIn; // 0x358(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeOut; // 0x370(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeIn; // 0x388(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeOut; // 0x3a0(0x18)
	struct FSceneRigStage_Int SynchronizationMethod; // 0x3b8(0x18)
	struct FSceneRigStage_Bool EnableLightRig; // 0x3d0(0x18)
	struct FSceneRigStage_Bool UsesSkyColors; // 0x3e8(0x18)
	struct FSceneRigStage_Float KeyLightColorTemperature; // 0x400(0x18)
	struct FSceneRigStage_Float RimLightColorTemperature; // 0x418(0x18)
	struct FSceneRigStage_Float FillLightColorTemperature; // 0x430(0x18)
	struct FSceneRigStage_Float KeyLightIntensity; // 0x448(0x18)
	struct FSceneRigStage_Float RimLightIntensity; // 0x460(0x18)
	struct FSceneRigStage_Float FillLightIntensity; // 0x478(0x18)
	struct USceneRigProvider* ActiveSceneRig; // 0x490(0x08)
};

// Class Phoenix.SceneRig_SpellMinigame
// Size: 0x250 (Inherited: 0x238)
struct USceneRig_SpellMinigame : USceneRig {
	struct FSceneRigStage_Name AssignedSpell; // 0x238(0x18)
};

// Class Phoenix.SceneRigAIController
// Size: 0x540 (Inherited: 0x508)
struct ASceneRigAIController : ASocialNavigatorController {
	char pad_508[0x38]; // 0x508(0x38)
};

// Class Phoenix.SceneRigInputScreen
// Size: 0x268 (Inherited: 0x268)
struct USceneRigInputScreen : UUserWidget {

	void TriggerVoLine(struct FDialogueConversationReference SoundEvent); // Function Phoenix.SceneRigInputScreen.TriggerVoLine // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void TriggerSoundEvent(struct FString SoundEvent); // Function Phoenix.SceneRigInputScreen.TriggerSoundEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTextKey(struct FString TextKey); // Function Phoenix.SceneRigInputScreen.SetTextKey // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPromptImage(struct FString PromptImageName, struct FLinearColor PromptImageColor); // Function Phoenix.SceneRigInputScreen.SetPromptImage // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPressAndHold(bool IsPressAndHold, float HoldDuration); // Function Phoenix.SceneRigInputScreen.SetPressAndHold // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetPositionAndPadding(enum class EHorizontalAlignment HAlign, enum class EVerticalAlignment VAlign, struct FMargin InPadding); // Function Phoenix.SceneRigInputScreen.SetPositionAndPadding // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetModifierButtonCallout(struct FString ModButtonLegend, bool DisplayModifierFirst); // Function Phoenix.SceneRigInputScreen.SetModifierButtonCallout // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFeedbackAnimation(enum class EFeedbackAnim FeedbackAnim); // Function Phoenix.SceneRigInputScreen.SetFeedbackAnimation // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetButtonCallout(struct FString ButtonLegend); // Function Phoenix.SceneRigInputScreen.SetButtonCallout // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnPrimaryInputStateChanged(bool IsDown); // Function Phoenix.SceneRigInputScreen.OnPrimaryInputStateChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnPressAndHoldStateChanged(bool IsDown); // Function Phoenix.SceneRigInputScreen.OnPressAndHoldStateChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnModifierStateChanged(bool IsDown); // Function Phoenix.SceneRigInputScreen.OnModifierStateChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEndInteraction(bool Success); // Function Phoenix.SceneRigInputScreen.OnEndInteraction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnCorrectInput(); // Function Phoenix.SceneRigInputScreen.OnCorrectInput // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void InitInputScreen(struct FMargin Margins, struct FString PromptImageName, struct FString ButtonLegend, struct FString ModifierButtonLegend, bool DisplayModifierFirst, struct FString TextKey, enum class EFeedbackAnim FeedbackAnim, enum class EHorizontalAlignment HAlign, enum class EVerticalAlignment VAlign, struct FLinearColor PromptImageColor); // Function Phoenix.SceneRigInputScreen.InitInputScreen // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3457790
};

// Class Phoenix.SceneRigPooledT3ProxyActor
// Size: 0x80 (Inherited: 0x80)
struct USceneRigPooledT3ProxyActor : USceneRigProxyActor {
};

// Class Phoenix.SceneRigPooledT3ProxyActorState
// Size: 0xa8 (Inherited: 0xa0)
struct USceneRigPooledT3ProxyActorState : USceneRigProxyActorState {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class Phoenix.SceneRigPreviewActor
// Size: 0x4b0 (Inherited: 0x4b0)
struct ASceneRigPreviewActor : ASceneRigActor {
};

// Class Phoenix.SceneRigStage_Activity
// Size: 0x450 (Inherited: 0x180)
struct USceneRigStage_Activity : USceneRigStage {
	struct FSceneRigStage_Actor Student1; // 0x178(0x18)
	struct FSceneRigStage_Actor Student2; // 0x190(0x18)
	struct FSceneRigStage_Actor Student3; // 0x1a8(0x18)
	struct FSceneRigStage_Actor Student4; // 0x1c0(0x18)
	struct FSceneRigStage_Actor Student5; // 0x1d8(0x18)
	struct FSceneRigStage_Actor Student6; // 0x1f0(0x18)
	struct FSceneRigStage_Actor Student7; // 0x208(0x18)
	struct FSceneRigStage_Actor Student8; // 0x220(0x18)
	struct FSceneRigStage_Actor Student9; // 0x238(0x18)
	struct FSceneRigStage_Actor Student10; // 0x250(0x18)
	struct FSceneRigStage_Actor Student11; // 0x268(0x18)
	struct FSceneRigStage_Actor Student12; // 0x280(0x18)
	struct FSceneRigStage_Actor Student13; // 0x298(0x18)
	struct FSceneRigStage_Actor Student14; // 0x2b0(0x18)
	struct FSceneRigStage_Actor Student15; // 0x2c8(0x18)
	struct FSceneRigStage_Transform Student1Teleport; // 0x2e0(0x18)
	struct FSceneRigStage_Transform Student2Teleport; // 0x2f8(0x18)
	struct FSceneRigStage_Transform Student3Teleport; // 0x310(0x18)
	struct FSceneRigStage_Transform Student4Teleport; // 0x328(0x18)
	struct FSceneRigStage_Transform Student5Teleport; // 0x340(0x18)
	struct FSceneRigStage_Transform Student6Teleport; // 0x358(0x18)
	struct FSceneRigStage_Transform Student7Teleport; // 0x370(0x18)
	struct FSceneRigStage_Transform Student8Teleport; // 0x388(0x18)
	struct FSceneRigStage_Transform Student9Teleport; // 0x3a0(0x18)
	struct FSceneRigStage_Transform Student10Teleport; // 0x3b8(0x18)
	struct FSceneRigStage_Transform Student11Teleport; // 0x3d0(0x18)
	struct FSceneRigStage_Transform Student12Teleport; // 0x3e8(0x18)
	struct FSceneRigStage_Transform Student13Teleport; // 0x400(0x18)
	struct FSceneRigStage_Transform Student14Teleport; // 0x418(0x18)
	struct FSceneRigStage_Transform Student15Teleport; // 0x430(0x18)
};

// Class Phoenix.SceneRigStage_Excursion
// Size: 0x190 (Inherited: 0x180)
struct USceneRigStage_Excursion : USceneRigStage {
	struct FSceneRigStage_Actor InvitedGuest; // 0x178(0x18)
};

// Class Phoenix.SceneRigStage_SimpleConversation
// Size: 0x3b0 (Inherited: 0x180)
struct USceneRigStage_SimpleConversation : USceneRigStage {
	struct FSceneRigStage_Actor interactionActor; // 0x178(0x18)
	struct FSceneRigStage_Actor LocalPlayer; // 0x190(0x18)
	struct FSceneRigStage_Actor Camera; // 0x1a8(0x18)
	struct FSceneRigStage_String DialogueSequenceID; // 0x1c0(0x18)
	struct FSceneRigStage_String DialogueEventName; // 0x1d8(0x18)
	struct FSceneRigStage_Int DialogueFlags; // 0x1f0(0x18)
	struct FSceneRigStage_Transform AvatarHead; // 0x208(0x18)
	struct FSceneRigStage_Transform AvatarRoot; // 0x220(0x18)
	struct FSceneRigStage_Transform A1Head; // 0x238(0x18)
	struct FSceneRigStage_Transform A1Root; // 0x250(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeIn; // 0x268(0x18)
	struct FSceneRigStage_Bool EnableInitialFadeOut; // 0x280(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeIn; // 0x298(0x18)
	struct FSceneRigStage_Bool EnableFinalFadeOut; // 0x2b0(0x18)
	struct FSceneRigStage_Int SynchronizationMethod; // 0x2c8(0x18)
	struct FSceneRigStage_Bool EnableLightRig; // 0x2e0(0x18)
	struct FSceneRigStage_Bool UsesSkyColors; // 0x2f8(0x18)
	struct FSceneRigStage_Float KeyLightColorTemperature; // 0x310(0x18)
	struct FSceneRigStage_Float RimLightColorTemperature; // 0x328(0x18)
	struct FSceneRigStage_Float FillLightColorTemperature; // 0x340(0x18)
	struct FSceneRigStage_Float KeyLightIntensity; // 0x358(0x18)
	struct FSceneRigStage_Float RimLightIntensity; // 0x370(0x18)
	struct FSceneRigStage_Float FillLightIntensity; // 0x388(0x18)
	struct USceneRigProvider* ActiveSceneRig; // 0x3a0(0x08)
};

// Class Phoenix.SceneRigStage_WinnerLoser
// Size: 0x1b0 (Inherited: 0x180)
struct USceneRigStage_WinnerLoser : USceneRigStage {
	struct FSceneRigStage_Actor Winner; // 0x178(0x18)
	struct FSceneRigStage_Actor Loser; // 0x190(0x18)
};

// Class Phoenix.SceneRigTag_ConversationAmbient
// Size: 0x40 (Inherited: 0x28)
struct USceneRigTag_ConversationAmbient : UAnimationArchitectTagProvider {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.SceneRigTag_StationStory
// Size: 0x28 (Inherited: 0x28)
struct USceneRigTag_StationStory : UAnimationArchitectTagProvider {
};

// Class Phoenix.SceneRigTag_StoryTeller
// Size: 0x28 (Inherited: 0x28)
struct USceneRigTag_StoryTeller : UAnimationArchitectTagProvider {
};

// Class Phoenix.ScheduledEntity
// Size: 0x10c0 (Inherited: 0x28)
struct UScheduledEntity : UObject {
	char pad_28[0x228]; // 0x28(0x228)
	struct FMulticastInlineDelegate OnFleshLoadComplete; // 0x250(0x10)
	char pad_260[0x80]; // 0x260(0x80)
	struct FMulticastInlineDelegate OnPerformCustomAction_NoLocation; // 0x2e0(0x10)
	struct FMulticastInlineDelegate OnPerformTaskComplete; // 0x2f0(0x10)
	struct FMulticastInlineDelegate OnMoveToLocationComplete; // 0x300(0x10)
	struct FMulticastInlineDelegate OnWaitForPlayerComplete; // 0x310(0x10)
	struct FMulticastInlineDelegate OnMoveToStationComplete; // 0x320(0x10)
	struct FMulticastInlineDelegate OnPerformTaskStationUseStart; // 0x330(0x10)
	struct FMulticastInlineDelegate OnPerformTaskStationUseFinish; // 0x340(0x10)
	struct FMulticastInlineDelegate OnPerformTaskStationFinishUseAfterGivenTime; // 0x350(0x10)
	struct FMulticastInlineDelegate OnInteractionWithStationComplete; // 0x360(0x10)
	struct FMulticastInlineDelegate OnStationInteractionExitComplete; // 0x370(0x10)
	char pad_380[0x248]; // 0x380(0x248)
	struct AActor* FollowCamActor; // 0x5c8(0x08)
	char pad_5D0[0x10]; // 0x5d0(0x10)
	struct ASocialNavigatorController* NavPathController; // 0x5e0(0x08)
	struct ASocialSplineController* SplinePathController; // 0x5e8(0x08)
	struct AAntiSocialAAIController* DefaultController; // 0x5f0(0x08)
	char pad_5F8[0x10]; // 0x5f8(0x10)
	struct ASocialReasoning* ScheduledEntitySocialReasoning; // 0x608(0x08)
	char pad_610[0x9d0]; // 0x610(0x9d0)
	struct UPathComponent* PathComponent_PT; // 0xfe0(0x08)
	struct UStationComponent* StationComponent_MTS; // 0xfe8(0x08)
	char pad_FF0[0xd0]; // 0xff0(0xd0)

	void WaitForPlayerComplete__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.WaitForPlayerComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void StationInteractionExitComplete__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.StationInteractionExitComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool StartSchedulingOverride(bool InValue, enum class ESchedulingPriority InPriority, struct UObject* InProvider, bool bInProdcessValue, bool bInForceExit, bool bInProcessSchedule); // Function Phoenix.ScheduledEntity.StartSchedulingOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x345ce60
	void StartPrecachingFlesh(enum class ESEPrecacheFleshPriority InPriority, struct UObject* InCaller, float InPrecacheDistance, bool bInAutoFleshLock); // Function Phoenix.ScheduledEntity.StartPrecachingFlesh // (Final|Native|Public|BlueprintCallable) // @ game+0x345cd00
	bool SetFlesh(struct ABase_Character* InFlesh); // Function Phoenix.ScheduledEntity.SetFlesh // (Final|Native|Public|BlueprintCallable) // @ game+0x345cc60
	void SetCurrentActorToAggro(struct FName InRequiredTeam, bool bEnableCombat); // Function Phoenix.ScheduledEntity.SetCurrentActorToAggro // (Final|Native|Public|BlueprintCallable) // @ game+0x345cb90
	void SetCompanionHighLOD(bool bHighLOD); // Function Phoenix.ScheduledEntity.SetCompanionHighLOD // (Final|Native|Public|BlueprintCallable) // @ game+0x345cb00
	void RequestHighLOD(); // Function Phoenix.ScheduledEntity.RequestHighLOD // (Final|Native|Private|BlueprintCallable) // @ game+0x345cae0
	void PerformTaskStationUseStart__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.PerformTaskStationUseStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PerformTaskStationUseFinish__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.PerformTaskStationUseFinish__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PerformTaskStationFinishUseAfterGiventTime__DelegateSignature(float InFinishTime); // DelegateFunction Phoenix.ScheduledEntity.PerformTaskStationFinishUseAfterGiventTime__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PerformTaskComplete__DelegateSignature(struct UScheduledEntity* ScheduledEntity, int32_t ActivityTypeBits); // DelegateFunction Phoenix.ScheduledEntity.PerformTaskComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PerformTask_WaitForTime(float InTime, struct FString InLocation); // Function Phoenix.ScheduledEntity.PerformTask_WaitForTime // (Final|Native|Public|BlueprintCallable) // @ game+0x345c9f0
	bool PerformTask_WaitForPlayerIsComplete(); // Function Phoenix.ScheduledEntity.PerformTask_WaitForPlayerIsComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x345c9c0
	void PerformTask_WaitForPlayer(float InDistance, bool InbOrientTowardsPlayer); // Function Phoenix.ScheduledEntity.PerformTask_WaitForPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x345c8e0
	bool PerformTask_TeleportToTransform(struct FTransform& InTransform); // Function Phoenix.ScheduledEntity.PerformTask_TeleportToTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x345c800
	bool PerformTask_TeleportToStation(struct AStation* InStation, bool bInInteract, struct FString InSocialAction, int32_t InConnectionIndex, float InStationDurationOverride, bool InSkipValidation); // Function Phoenix.ScheduledEntity.PerformTask_TeleportToStation // (Final|Native|Public|BlueprintCallable) // @ game+0x345c600
	bool PerformTask_TeleportToLocation(struct FVector& InLocation); // Function Phoenix.ScheduledEntity.PerformTask_TeleportToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x345c560
	void PerformTask_StopLumosOnNPC(bool bSuccess, bool bTimeout); // Function Phoenix.ScheduledEntity.PerformTask_StopLumosOnNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x345c490
	void PerformTask_StartLumosOnNPC(float Timeout, int32_t InSpellLevel); // Function Phoenix.ScheduledEntity.PerformTask_StartLumosOnNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x345c3c0
	void PerformTask_StartCustomTask_NoLocation(); // Function Phoenix.ScheduledEntity.PerformTask_StartCustomTask_NoLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x345c3a0
	void PerformTask_ReparoFinished(char InAction); // Function Phoenix.ScheduledEntity.PerformTask_ReparoFinished // (Final|Native|Public) // @ game+0x345c320
	void PerformTask_RemoveActivePerformTask(); // Function Phoenix.ScheduledEntity.PerformTask_RemoveActivePerformTask // (Final|Native|Public|BlueprintCallable) // @ game+0x345c300
	bool PerformTask_PlaceAtTransform(struct FTransform& InTransform); // Function Phoenix.ScheduledEntity.PerformTask_PlaceAtTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x345c220
	bool PerformTask_PlaceAtLocation(struct FVector& InLocation); // Function Phoenix.ScheduledEntity.PerformTask_PlaceAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x345c180
	bool PerformTask_MoveToStation(struct AStation* InStation, struct FName InActionName, bool bInInteract, float InForceSpeed, int32_t InConnectionIndex, float InStationDurationOverride); // Function Phoenix.ScheduledEntity.PerformTask_MoveToStation // (Final|Native|Public|BlueprintCallable) // @ game+0x345bf90
	void PerformTask_MoveToLocation(struct FVector& InLocation, float InForceSpeed, bool InBTriggerNextActivity, float InRadius, struct UPathComponent* InPath); // Function Phoenix.ScheduledEntity.PerformTask_MoveToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x345bdc0
	struct AFlyingBroom* PerformTask_MountBroomWithFlightData(struct AFlyingBroom* FlyingBroomClass, struct UFlyingBroomPhysics* StudentFlightData); // Function Phoenix.ScheduledEntity.PerformTask_MountBroomWithFlightData // (Final|Native|Public|BlueprintCallable) // @ game+0x345bcf0
	struct AFlyingBroom* PerformTask_MountBroom(struct AFlyingBroom* FlyingBroomClass); // Function Phoenix.ScheduledEntity.PerformTask_MountBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x345bc50
	void PerformTask_FollowActor(struct AActor* InFollowActor, float InForceSpeed); // Function Phoenix.ScheduledEntity.PerformTask_FollowActor // (Final|Native|Public|BlueprintCallable) // @ game+0x345bb80
	void PerformTask_FinishCustomTask_NoLocation(); // Function Phoenix.ScheduledEntity.PerformTask_FinishCustomTask_NoLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x345bb60
	void PerformTask_DismountBroom(); // Function Phoenix.ScheduledEntity.PerformTask_DismountBroom // (Final|Native|Public|BlueprintCallable) // @ game+0x345bb40
	void PerformTask_CustomSpellFinished(char InAction); // Function Phoenix.ScheduledEntity.PerformTask_CustomSpellFinished // (Final|Native|Public) // @ game+0x345bac0
	void PerformTask_CastReparo(struct AActor* TargetPtr, float Timeout); // Function Phoenix.ScheduledEntity.PerformTask_CastReparo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b9f0
	void PerformTask_CastCustomSpell(struct AActor* TargetPtr, float Timeout); // Function Phoenix.ScheduledEntity.PerformTask_CastCustomSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x345b920
	bool PerformTask_ApparateOutActivity(); // Function Phoenix.ScheduledEntity.PerformTask_ApparateOutActivity // (Final|Native|Public) // @ game+0x345b8f0
	bool PerformTask_ApparateOut(struct UAblAbility* InAblAbility); // Function Phoenix.ScheduledEntity.PerformTask_ApparateOut // (Final|Native|Public|BlueprintCallable) // @ game+0x345b850
	bool PerformTask_ApparateIn(struct UAblAbility* InAblAbility); // Function Phoenix.ScheduledEntity.PerformTask_ApparateIn // (Final|Native|Public|BlueprintCallable) // @ game+0x345b7b0
	void PerformTask_ApparateFinishedActivity(); // Function Phoenix.ScheduledEntity.PerformTask_ApparateFinishedActivity // (Final|Native|Public) // @ game+0x345b790
	void PerformTask_ApparateFinished(); // Function Phoenix.ScheduledEntity.PerformTask_ApparateFinished // (Final|Native|Public) // @ game+0x345b770
	void PerformCustomAction_NoLocation__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.PerformCustomAction_NoLocation__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void PawnOverlapBegin(struct AActor* InSelf, struct AActor* InOther); // Function Phoenix.ScheduledEntity.PawnOverlapBegin // (Final|Native|Private) // @ game+0x345b6a0
	void Pause(bool bInPause); // Function Phoenix.ScheduledEntity.Pause // (Final|Native|Public|BlueprintCallable) // @ game+0x345b610
	void MoveToStationComplete__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.MoveToStationComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void MoveToLocationComplete__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.MoveToLocationComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	bool IsWorldEventReleasedHobo(); // Function Phoenix.ScheduledEntity.IsWorldEventReleasedHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b5e0
	bool IsWorldEventHobo(); // Function Phoenix.ScheduledEntity.IsWorldEventHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b5b0
	bool IsWaitingForStation(); // Function Phoenix.ScheduledEntity.IsWaitingForStation // (Final|Native|Public|BlueprintCallable) // @ game+0x345b580
	bool IsStudent(); // Function Phoenix.ScheduledEntity.IsStudent // (Final|Native|Public|BlueprintCallable) // @ game+0x345b550
	bool IsSplineHobo(); // Function Phoenix.ScheduledEntity.IsSplineHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b520
	bool IsSeatFillerHobo(); // Function Phoenix.ScheduledEntity.IsSeatFillerHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b4f0
	bool IsSceneRigHobo(); // Function Phoenix.ScheduledEntity.IsSceneRigHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b4c0
	bool IsInTransit(); // Function Phoenix.ScheduledEntity.IsInTransit // (Final|Native|Public|BlueprintCallable) // @ game+0x345b490
	bool IsInPlayerInteraction(); // Function Phoenix.ScheduledEntity.IsInPlayerInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x345b460
	bool IsHobo(); // Function Phoenix.ScheduledEntity.IsHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b430
	bool IsGhost(); // Function Phoenix.ScheduledEntity.IsGhost // (Final|Native|Public|BlueprintCallable) // @ game+0x345b400
	bool IsGeneralHobo(); // Function Phoenix.ScheduledEntity.IsGeneralHobo // (Final|Native|Public|BlueprintCallable) // @ game+0x345b3d0
	bool IsEnabled(); // Function Phoenix.ScheduledEntity.IsEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x345b3a0
	void InteractWithStationComplete__DelegateSignature(); // DelegateFunction Phoenix.ScheduledEntity.InteractWithStationComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void GetUpcomingActivity(bool& ActivityIsValid, struct FScheduleEntry& UpcomingActivity); // Function Phoenix.ScheduledEntity.GetUpcomingActivity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x345b1e0
	struct ASocialReasoning* GetSocialReasoning(); // Function Phoenix.ScheduledEntity.GetSocialReasoning // (Final|Native|Public|BlueprintCallable) // @ game+0x335d7c0
	void GetMinutesToUpcomingActivity(bool& ActivityIsValid, int32_t& MinutesToUpcomingActivity); // Function Phoenix.ScheduledEntity.GetMinutesToUpcomingActivity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x345b100
	struct FVector GetLocation(); // Function Phoenix.ScheduledEntity.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x345b0d0
	void GetGoalStatus(enum class E_Goal GoalType, struct FGoalStatus& GoalStatus); // Function Phoenix.ScheduledEntity.GetGoalStatus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x345aff0
	void GetGoalActivity(enum class E_Goal GoalType, bool& ActivityIsValid, struct FScheduleEntry& RequestedActivity); // Function Phoenix.ScheduledEntity.GetGoalActivity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x345ade0
	struct APawn* GetFlesh(); // Function Phoenix.ScheduledEntity.GetFlesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x345ad60
	float GetExcessTravelTime(float InDeltaTime); // Function Phoenix.ScheduledEntity.GetExcessTravelTime // (Final|Native|Public|BlueprintCallable) // @ game+0x345acc0
	struct ABase_Character* GetBaseCharacter(); // Function Phoenix.ScheduledEntity.GetBaseCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x345ac70
	bool FinishSchedulingOverride(enum class ESchedulingPriority InPriority, struct UObject* InProvider, bool bInProcessValue, bool bInForceExit, bool bInProcessSchedule); // Function Phoenix.ScheduledEntity.FinishSchedulingOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x345aaa0
	void EndPrecachingFlesh(enum class ESEPrecacheFleshPriority InPriority, struct UObject* InCaller, bool bInAutoFleshLock); // Function Phoenix.ScheduledEntity.EndPrecachingFlesh // (Final|Native|Public|BlueprintCallable) // @ game+0x345a980
	void EnableSocialControl(bool InEnable); // Function Phoenix.ScheduledEntity.EnableSocialControl // (Final|Native|Public|BlueprintCallable) // @ game+0x345a8f0
	bool EnableScheduling(bool InEnable, bool bInForceExit, bool bInProcessSchedule); // Function Phoenix.ScheduledEntity.EnableScheduling // (Final|Native|Public|BlueprintCallable) // @ game+0x345a7c0
	void DontAllowBTShutdown(enum class ESEAllowBTShutdownPriority InPriority, struct UObject* InCaller); // Function Phoenix.ScheduledEntity.DontAllowBTShutdown // (Final|Native|Public|BlueprintCallable) // @ game+0x345a6f0
	void DialogCompleteCallback(); // Function Phoenix.ScheduledEntity.DialogCompleteCallback // (Final|Native|Private) // @ game+0x345a6d0
	bool CurrentlyInFlesh(); // Function Phoenix.ScheduledEntity.CurrentlyInFlesh // (Final|Native|Public|BlueprintCallable) // @ game+0x345a680
	void CollisionResponseEnded(struct ASocialReasoning* SocialReasoning, struct FName SocialAction); // Function Phoenix.ScheduledEntity.CollisionResponseEnded // (Final|Native|Private) // @ game+0x345a5b0
	void CanAllowBTShutdown(enum class ESEAllowBTShutdownPriority InPriority, struct UObject* InCaller); // Function Phoenix.ScheduledEntity.CanAllowBTShutdown // (Final|Native|Public|BlueprintCallable) // @ game+0x345a4e0
	void AddThinkNowEvent(struct FString InText, float InDelayLow, float InDelayHigh, bool bInAllowBTShutdown); // Function Phoenix.ScheduledEntity.AddThinkNowEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x345a330
	bool AbandonStations(enum class EStationExitCallBack InExitCallback); // Function Phoenix.ScheduledEntity.AbandonStations // (Final|Native|Public|BlueprintCallable) // @ game+0x345a2a0
};

// Class Phoenix.ScheduledObject_Interface
// Size: 0x28 (Inherited: 0x28)
struct UScheduledObject_Interface : UInterface {

	struct FName GetMySubtype(); // Function Phoenix.ScheduledObject_Interface.GetMySubtype // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34600a0
	struct FString GetMyName(); // Function Phoenix.ScheduledObject_Interface.GetMyName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3460020
	int32_t GetMyID(); // Function Phoenix.ScheduledObject_Interface.GetMyID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x345fff0
	void GetCurrentActivity(bool& ActivityIsValid, struct FScheduleEntry& CurrentActivity); // Function Phoenix.ScheduledObject_Interface.GetCurrentActivity // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x345fdf0
	struct UStationComponent* GetActiveStation(); // Function Phoenix.ScheduledObject_Interface.GetActiveStation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x345fd80
	bool GetActiveGoal(struct FRequestedGoal& OutActiveGoal); // Function Phoenix.ScheduledObject_Interface.GetActiveGoal // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x345fc80
	bool GetActiveActivity(struct FScheduleEntry& OutActiveActivity); // Function Phoenix.ScheduledObject_Interface.GetActiveActivity // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x345faf0
};

// Class Phoenix.ScheduleItemWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UScheduleItemWidget : UUserWidget {
	struct FMulticastInlineDelegate OnScheduleItemHovered; // 0x268(0x10)
	struct FMulticastInlineDelegate OnScheduleItemUnhovered; // 0x278(0x10)
	float BackgroundScale; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct FString IconName; // 0x290(0x10)
	float StartTime; // 0x2a0(0x04)
	float EndTime; // 0x2a4(0x04)
	struct FString ActivityID; // 0x2a8(0x10)
	struct FString ActivityTypeID; // 0x2b8(0x10)
	bool ShowActivityText; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	bool SetInformation(struct FActivityStruct Activity, bool ShowText); // Function Phoenix.ScheduleItemWidget.SetInformation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ScheduleItemUnhovered(); // Function Phoenix.ScheduleItemWidget.ScheduleItemUnhovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3460560
	void ScheduleItemHovered(); // Function Phoenix.ScheduleItemWidget.ScheduleItemHovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3460540
	void OnSynchronizeProperties(); // Function Phoenix.ScheduleItemWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SchedulerTimeProvider
// Size: 0x28 (Inherited: 0x28)
struct USchedulerTimeProvider : UBaseProvider {
};

// Class Phoenix.SchedulerTime_Direct
// Size: 0x38 (Inherited: 0x28)
struct USchedulerTime_Direct : USchedulerTimeProvider {
	int32_t Hours; // 0x28(0x04)
	int32_t Minutes; // 0x2c(0x04)
	int32_t Seconds; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.ScreenFadeWidget
// Size: 0x2d0 (Inherited: 0x268)
struct UScreenFadeWidget : UUserWidget {
	bool FadeInStarted; // 0x268(0x01)
	bool FadeOutStarted; // 0x269(0x01)
	bool DoneFading; // 0x26a(0x01)
	char pad_26B[0x1]; // 0x26b(0x01)
	float FadeSpeed; // 0x26c(0x04)
	float DefaultFadeSpeed; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct FMulticastInlineDelegate OnFadeInComplete; // 0x278(0x10)
	struct FMulticastInlineDelegate OnFadeOutComplete; // 0x288(0x10)
	char pad_298[0x38]; // 0x298(0x38)

	void UI_SetManualFade(float Opacity); // Function Phoenix.ScreenFadeWidget.UI_SetManualFade // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool UI_IsFading(); // Function Phoenix.ScreenFadeWidget.UI_IsFading // (Final|Native|Public|BlueprintCallable) // @ game+0x3460e80
	float UI_GetCurrentFade(); // Function Phoenix.ScreenFadeWidget.UI_GetCurrentFade // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void UI_FadeOutDone(); // Function Phoenix.ScreenFadeWidget.UI_FadeOutDone // (Final|Native|Public|BlueprintCallable) // @ game+0x3460e60
	void UI_FadeOut(); // Function Phoenix.ScreenFadeWidget.UI_FadeOut // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void UI_FadeInDone(); // Function Phoenix.ScreenFadeWidget.UI_FadeInDone // (Final|Native|Public|BlueprintCallable) // @ game+0x3460e40
	void UI_FadeIn(); // Function Phoenix.ScreenFadeWidget.UI_FadeIn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetFadeColor(struct FLinearColor TargetColor); // Function Phoenix.ScreenFadeWidget.SetFadeColor // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnCurtainLowered(); // Function Phoenix.ScreenFadeWidget.OnCurtainLowered // (Final|Native|Private) // @ game+0x3460410
};

// Class Phoenix.ScrollingTextWidget
// Size: 0x400 (Inherited: 0x268)
struct UScrollingTextWidget : UUserWidget {
	float ScrollSpeed; // 0x268(0x04)
	bool ShouldShowEllipsis; // 0x26c(0x01)
	enum class EScrollingWidgetTypes ScrollType; // 0x26d(0x01)
	bool ShouldLoop; // 0x26e(0x01)
	bool TickerScroll; // 0x26f(0x01)
	struct FString EllipsisText; // 0x270(0x10)
	float TruncationPosition; // 0x280(0x04)
	float DefaultScrollLimitPad; // 0x284(0x04)
	float TickerWrapPosition; // 0x288(0x04)
	enum class EScrollingWidgetMode ScrollMode; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
	struct UPhoenixTextBlock* TextBlock; // 0x290(0x08)
	struct FDataTableRowHandle ColorTag; // 0x298(0x10)
	struct FString LocalizationKey; // 0x2a8(0x10)
	bool Translatable; // 0x2b8(0x01)
	bool ScaleFontSize; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)
	struct FSlateFontInfo Font; // 0x2c0(0x58)
	struct FSlateBrush StrikeBrush; // 0x318(0x88)
	struct FVector2D ShadowOffset; // 0x3a0(0x08)
	struct FLinearColor ShadowColorAndOpacity; // 0x3a8(0x10)
	float MinDesiredWidth; // 0x3b8(0x04)
	bool bWrapWithInvalidationPanel; // 0x3bc(0x01)
	enum class ETextTransformPolicy TextTransformPolicy; // 0x3bd(0x01)
	char pad_3BE[0x2]; // 0x3be(0x02)
	struct UHorizontalBox* HorizontalBox; // 0x3c0(0x08)
	bool ShouldScroll; // 0x3c8(0x01)
	bool ScrollOnHover; // 0x3c9(0x01)
	char pad_3CA[0x2]; // 0x3ca(0x02)
	float ScrollDirection; // 0x3cc(0x04)
	struct FText OriginalText; // 0x3d0(0x18)
	char pad_3E8[0x18]; // 0x3e8(0x18)

	void SetTruncationPosition(float Position); // Function Phoenix.ScrollingTextWidget.SetTruncationPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x3460da0
	void SetTextKey(struct FString Key); // Function Phoenix.ScrollingTextWidget.SetTextKey // (Final|Native|Public|BlueprintCallable) // @ game+0x3460cb0
	void SetText(struct FText InText); // Function Phoenix.ScrollingTextWidget.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x3460bd0
	void SetShouldShowEllipsis(bool pShouldShowEllipsis); // Function Phoenix.ScrollingTextWidget.SetShouldShowEllipsis // (Final|Native|Public|BlueprintCallable) // @ game+0x3460b40
	void SetScrollSpeed(float pScrollSpeed); // Function Phoenix.ScrollingTextWidget.SetScrollSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x13747d0
	void SetPhoenixTextOpacity(float InOpacity); // Function Phoenix.ScrollingTextWidget.SetPhoenixTextOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x3460ac0
	void SetPhoenixTextColorAndOpacity(struct FSlateColor InColorAndOpacity); // Function Phoenix.ScrollingTextWidget.SetPhoenixTextColorAndOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x34609d0
	void SetHorizontalBoxSize(struct FMargin Size); // Function Phoenix.ScrollingTextWidget.SetHorizontalBoxSize // (Final|Native|Public|BlueprintCallable) // @ game+0x34607e0
	void SetColorTag(struct FDataTableRowHandle NewColorTag); // Function Phoenix.ScrollingTextWidget.SetColorTag // (Final|Native|Public|BlueprintCallable) // @ game+0x34606c0
	void OnUnhovered(); // Function Phoenix.ScrollingTextWidget.OnUnhovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3460520
	void OnHovered(); // Function Phoenix.ScrollingTextWidget.OnHovered // (Final|Native|Public|BlueprintCallable) // @ game+0x3460430
	float GetTruncationPosition(); // Function Phoenix.ScrollingTextWidget.GetTruncationPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x3344f40
	bool GetShouldShowEllipsis(); // Function Phoenix.ScrollingTextWidget.GetShouldShowEllipsis // (Final|Native|Public|BlueprintCallable) // @ game+0x3460180
	float GetScrollSpeed(); // Function Phoenix.ScrollingTextWidget.GetScrollSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x340b6f0
	struct FText GetPhoenixText(); // Function Phoenix.ScrollingTextWidget.GetPhoenixText // (Final|Native|Public|BlueprintCallable) // @ game+0x34600e0
	struct FMargin GetHorizontalBoxSize(); // Function Phoenix.ScrollingTextWidget.GetHorizontalBoxSize // (Final|Native|Public|BlueprintCallable) // @ game+0x345ffb0
	struct FDataTableRowHandle GetColorTag(); // Function Phoenix.ScrollingTextWidget.GetColorTag // (Final|Native|Public|BlueprintCallable) // @ game+0x345fdb0
};

// Class Phoenix.SeasonChanger
// Size: 0x28 (Inherited: 0x28)
struct USeasonChanger : UObject {

	void SetCurrentSeason(enum class ESeasonEnum NewSeason); // Function Phoenix.SeasonChanger.SetCurrentSeason // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3460760
};

// Class Phoenix.SeasonChangerDelegate
// Size: 0x250 (Inherited: 0x248)
struct ASeasonChangerDelegate : AActor {
	bool DisableSeasonChanges; // 0x248(0x01)
	enum class ESeasonOverride SeasonOverride; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)
};

// Class Phoenix.SeasonSelectorComponent
// Size: 0x2b0 (Inherited: 0x220)
struct USeasonSelectorComponent : USceneComponent {
	struct TMap<enum class ESeasonEnum, struct TSoftObjectPtr<UStaticMesh>> SeasonMeshes; // 0x218(0x50)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> SpringMaterials; // 0x268(0x10)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> SummerMaterials; // 0x278(0x10)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> FallMaterials; // 0x288(0x10)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> WinterMaterials; // 0x298(0x10)
};

// Class Phoenix.SelectionRingItemBase
// Size: 0x4b0 (Inherited: 0x4a8)
struct USelectionRingItemBase : UIconButtonWidget {
	char pad_4A8[0x8]; // 0x4a8(0x08)

	void ShowUpdateVFX(); // Function Phoenix.SelectionRingItemBase.ShowUpdateVFX // (Final|Native|Public|BlueprintCallable) // @ game+0x3460e20
	void SetItemData(int32_t GroupIndex, int32_t MacroIndex, int32_t ItemIndex, bool ShowNone); // Function Phoenix.SelectionRingItemBase.SetItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x3460870
	void OnShowUpdateVFX(); // Function Phoenix.SelectionRingItemBase.OnShowUpdateVFX // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnIconTextureLoaded(struct UTexture2D* Texture, bool IsBlacklisted); // Function Phoenix.SelectionRingItemBase.OnIconTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBackgroundTextureLoaded(struct UTexture2D* Texture, bool IsBlacklisted); // Function Phoenix.SelectionRingItemBase.OnBackgroundTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LoadIconCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.SelectionRingItemBase.LoadIconCallback // (Final|Native|Private) // @ game+0x3460340
	void LoadBackgroundCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.SelectionRingItemBase.LoadBackgroundCallback // (Final|Native|Private) // @ game+0x3460270
	enum class ESpellCategory GetSpellCategory(); // Function Phoenix.SelectionRingItemBase.GetSpellCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x34601a0
};

// Class Phoenix.SelfArrangingBooks
// Size: 0x2c0 (Inherited: 0x248)
struct ASelfArrangingBooks : AActor {
	struct TArray<struct USplineComponent*> SplineArray; // 0x248(0x10)
	struct TArray<struct UStaticMeshComponent*> RandomSMCs; // 0x258(0x10)
	int32_t RandomSelection; // 0x268(0x04)
	bool bCanPlay; // 0x26c(0x01)
	bool bPlayReverse; // 0x26d(0x01)
	char pad_26E[0x2]; // 0x26e(0x02)
	int32_t NumberOfBooks; // 0x270(0x04)
	int32_t NumberOfPaths; // 0x274(0x04)
	float ScaleOfProps; // 0x278(0x04)
	float spacing; // 0x27c(0x04)
	float DistanceInbetweenProps; // 0x280(0x04)
	struct FRotator RotationOfProps; // 0x284(0x0c)
	struct UTimelineComponent* TM_Spline; // 0x290(0x08)
	struct UCurveFloat* PathCurve; // 0x298(0x08)
	struct UCurveFloat* Rot1Curve; // 0x2a0(0x08)
	struct UCurveFloat* Rot2Curve; // 0x2a8(0x08)
	struct UCurveFloat* Rot3Curve; // 0x2b0(0x08)
	struct UCurveFloat* Rot4Curve; // 0x2b8(0x08)

	void UpdateBookTransform(int32_t idx, float Path, float Rot); // Function Phoenix.SelfArrangingBooks.UpdateBookTransform // (Final|Native|Protected) // @ game+0x34647b0
	void OnTimelineUpdate(float Value); // Function Phoenix.SelfArrangingBooks.OnTimelineUpdate // (Final|Native|Protected) // @ game+0x34641d0
	void OnTimelineFinished(); // Function Phoenix.SelfArrangingBooks.OnTimelineFinished // (Final|Native|Protected) // @ game+0x34641b0
};

// Class Phoenix.SendTarget
// Size: 0x280 (Inherited: 0x248)
struct ASendTarget : ATargetPoint {
	struct USphereComponent* SphereComp; // 0x248(0x08)
	char Priority; // 0x250(0x01)
	bool bEnabled; // 0x251(0x01)
	bool bDetectsCollision; // 0x252(0x01)
	char pad_253[0x1]; // 0x253(0x01)
	float Radius; // 0x254(0x04)
	bool bDisableWhenHit; // 0x258(0x01)
	bool bOnlyHitByTargetingActor; // 0x259(0x01)
	char pad_25A[0x6]; // 0x25a(0x06)
	struct FMulticastInlineDelegate OnSendTargetHit; // 0x260(0x10)
	struct TArray<struct AActor*> TargetingActors; // 0x270(0x10)

	void SetSendTargetPriority(char InPriority); // Function Phoenix.SendTarget.SetSendTargetPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x3464560
	void SetEnabled(bool bInEnabled); // Function Phoenix.SendTarget.SetEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3464290
	bool IsEnabled(); // Function Phoenix.SendTarget.IsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3463ed0
	char GetSendTargetPriority(); // Function Phoenix.SendTarget.GetSendTargetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3463e70
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SendTarget.BeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x34639e0
};

// Class Phoenix.SendTargetComponent
// Size: 0x4d0 (Inherited: 0x4a0)
struct USendTargetComponent : USphereComponent {
	char Priority; // 0x4a0(0x01)
	bool bEnabled; // 0x4a1(0x01)
	bool bDetectsCollision; // 0x4a2(0x01)
	char pad_4A3[0x1]; // 0x4a3(0x01)
	float Radius; // 0x4a4(0x04)
	float Damage; // 0x4a8(0x04)
	bool bDisableWhenHit; // 0x4ac(0x01)
	bool bOnlyHitByTargetingActor; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct FMulticastInlineDelegate OnSendTargetHit; // 0x4b0(0x10)
	struct TArray<struct AActor*> TargetingActors; // 0x4c0(0x10)

	void SetSendTargetPriority(char InPriority); // Function Phoenix.SendTargetComponent.SetSendTargetPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x34645e0
	void SetEnabled(bool bInEnabled); // Function Phoenix.SendTargetComponent.SetEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x3464320
	bool IsEnabled(); // Function Phoenix.SendTargetComponent.IsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x334d420
	char GetSendTargetPriority(); // Function Phoenix.SendTargetComponent.GetSendTargetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3463ea0
	void BeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SendTargetComponent.BeginOverlap // (Final|Native|Public|HasOutParms) // @ game+0x3463c00
};

// Class Phoenix.ThrowData
// Size: 0x160 (Inherited: 0x28)
struct UThrowData : UObject {
	struct UWorld* World; // 0x28(0x08)
	struct AActor* Owner; // 0x30(0x08)
	struct AActor* Instigator; // 0x38(0x08)
	struct AActor* ThrownActor; // 0x40(0x08)
	struct UPrimitiveComponent* Component; // 0x48(0x08)
	struct ASpellTool* SpellTool; // 0x50(0x08)
	char pad_58[0x78]; // 0x58(0x78)
	struct UObjectStateInfo* ObjectStateInfo; // 0xd0(0x08)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct TArray<struct AActor*> IgnoreObjectArray; // 0xe0(0x10)
	char pad_F0[0x40]; // 0xf0(0x40)
	struct TArray<struct UInteractionArchitectAsset*> MunitionDataAssets; // 0x130(0x10)
	char pad_140[0x18]; // 0x140(0x18)
	struct AActor* TargetActor; // 0x158(0x08)
};

// Class Phoenix.SendTargetData
// Size: 0x58 (Inherited: 0x30)
struct USendTargetData : UDataAsset {
	bool bShowDebug; // 0x30(0x01)
	bool bDebugShowPossibleTargets; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	float SendTargetIgnoreNearDistance; // 0x34(0x04)
	float SendAngleScale; // 0x38(0x04)
	float SendDistanceScale; // 0x3c(0x04)
	float SendPriorityScale; // 0x40(0x04)
	float CharacterOffsetZ; // 0x44(0x04)
	float CollisionTargetMinVel; // 0x48(0x04)
	int32_t CollisionTargetHalfAngle; // 0x4c(0x04)
	int32_t CollisionTargetChance; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Phoenix.TargetHitData
// Size: 0x48 (Inherited: 0x28)
struct UTargetHitData : UObject {
	char pad_28[0x20]; // 0x28(0x20)

	void Remove(); // Function Phoenix.TargetHitData.Remove // (Final|Native|Public) // @ game+0x3464270
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.TargetHitData.OnActorHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x3463f80
};

// Class Phoenix.SendTargetUtil
// Size: 0x28 (Inherited: 0x28)
struct USendTargetUtil : UObject {
};

// Class Phoenix.SetScale_ExecuteTask
// Size: 0x38 (Inherited: 0x28)
struct USetScale_ExecuteTask : UExecuteTask {
	struct FVector mNewScale; // 0x28(0x0c)
	bool bIsRelative; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.SettingsSliderButtonBase
// Size: 0x328 (Inherited: 0x328)
struct USettingsSliderButtonBase : UAvaUserWidget {

	void SetMouseUsesStep_Internal(struct USlider* Slider, bool MouseUsesStep); // Function Phoenix.SettingsSliderButtonBase.SetMouseUsesStep_Internal // (Final|Native|Protected|BlueprintCallable) // @ game+0x34643b0
};

// Class Phoenix.ShadowBoxComponent
// Size: 0x530 (Inherited: 0x510)
struct UShadowBoxComponent : UStaticMeshComponent {
	bool UseForBothSidesOfTheDoor; // 0x510(0x01)
	char pad_511[0x7]; // 0x511(0x07)
	struct ADoor* Door; // 0x518(0x08)
	char pad_520[0x10]; // 0x520(0x10)
};

// Class Phoenix.ShadowProjection
// Size: 0x48 (Inherited: 0x30)
struct UShadowProjection : UDataAsset {
	struct USkeletalMesh* SkeletalMesh; // 0x30(0x08)
	struct UAnimSequence* Animation; // 0x38(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x40(0x08)
};

// Class Phoenix.ShadowSprint
// Size: 0x260 (Inherited: 0x248)
struct AShadowSprint : AActor {
	float ActiveScale; // 0x248(0x04)
	bool bScaleIn; // 0x24c(0x01)
	char pad_24D[0x3]; // 0x24d(0x03)
	struct UCapsuleComponent* CapsuleComponent; // 0x250(0x08)
	struct UShadowSprintMovementComponent* MovementComponent; // 0x258(0x08)

	void SetScaleInfo(bool bInScaleIn, float InActiveScale); // Function Phoenix.ShadowSprint.SetScaleInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x3464480
	struct UCapsuleComponent* GetCapsuleComponent(); // Function Phoenix.ShadowSprint.GetCapsuleComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x3233200
};

// Class Phoenix.ShadowSprintData
// Size: 0xd8 (Inherited: 0x30)
struct UShadowSprintData : UDataAsset {
	struct FShadowSprintImpulseData MinForwardImpulse; // 0x30(0x14)
	struct FShadowSprintImpulseData MaxForwardImpulse; // 0x44(0x14)
	struct FShadowSprintImpulseData VerticalImpulse; // 0x58(0x14)
	float ConformToGroundHeight; // 0x6c(0x04)
	float DangerZone; // 0x70(0x04)
	float GroundBuffer; // 0x74(0x04)
	float CeilingBuffer; // 0x78(0x04)
	float ConformToGroundTime; // 0x7c(0x04)
	struct FShadowSprintImpulseData DangerZoneImpulse; // 0x80(0x14)
	struct FShadowSprintImpulseData GroundBufferImpulse; // 0x94(0x14)
	struct FShadowSprintImpulseData CeilingBufferImpulse; // 0xa8(0x14)
	bool bDangerZoneIfNoGroundFound; // 0xbc(0x01)
	char pad_BD[0x3]; // 0xbd(0x03)
	float YawMinInterpSpeed; // 0xc0(0x04)
	float YawMaxInterpSpeed; // 0xc4(0x04)
	float PitchInterpSpeed; // 0xc8(0x04)
	float PitchBackToZeroInterpSpeed; // 0xcc(0x04)
	bool bDebugDraw; // 0xd0(0x01)
	bool bDisablePhysics; // 0xd1(0x01)
	char pad_D2[0x6]; // 0xd2(0x06)
};

// Class Phoenix.ShadowSprintMovementComponent
// Size: 0x2d0 (Inherited: 0x108)
struct UShadowSprintMovementComponent : UMovementComponent {
	int32_t MaxSimulationIterations; // 0x108(0x04)
	float MaxSimulationTimeStep; // 0x10c(0x04)
	struct UShadowSprintData* ShadowSprintData; // 0x110(0x08)
	struct UParticleSystem* BroomTrailEmitter; // 0x118(0x08)
	struct UParticleSystemComponent* BroomTrailEmitterSystemComponent; // 0x120(0x08)
	bool bClearAccumulatedForces; // 0x128(0x01)
	bool bOnGround; // 0x129(0x01)
	char pad_12A[0x2]; // 0x12a(0x02)
	float CurrentPitch; // 0x12c(0x04)
	char pad_130[0x1a0]; // 0x130(0x1a0)

	void SetVerticalImpulse(float Val); // Function Phoenix.ShadowSprintMovementComponent.SetVerticalImpulse // (Final|Native|Public) // @ game+0x3464660
};

// Class Phoenix.SimpleBreakable
// Size: 0x250 (Inherited: 0x248)
struct ASimpleBreakable : AActor {
	struct UObjectStateComponent* ObjectState; // 0x248(0x08)
};

// Class Phoenix.SimpleInteractObject
// Size: 0x2d8 (Inherited: 0x268)
struct ASimpleInteractObject : APhoenixBudgetedActor {
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x268(0x08)
	struct UObject* AbilityClass; // 0x270(0x08)
	bool bPartialBody; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
	struct AActor* AbilitySpawnActorClass; // 0x280(0x08)
	struct FVector AbilitySpawnOffset; // 0x288(0x0c)
	struct FRotator AbilitySpawnRotationOffset; // 0x294(0x0c)
	struct URootMotionModProperties_Interact* InteractProperties; // 0x2a0(0x08)
	float PlayDialogueAfterInteractTime; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FDialogueConversationReference DialogueEventName; // 0x2b0(0x10)
	char pad_2C0[0x18]; // 0x2c0(0x18)

	void PlayDialogue(); // Function Phoenix.SimpleInteractObject.PlayDialogue // (Final|Native|Public) // @ game+0x3464250
	void InteractionInitiated(); // Function Phoenix.SimpleInteractObject.InteractionInitiated // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct UObject* GetAbilityClass(); // Function Phoenix.SimpleInteractObject.GetAbilityClass // (Native|Event|Public|BlueprintEvent) // @ game+0x3463e40
};

// Class Phoenix.SimpleSplineFollowerForAI
// Size: 0x348 (Inherited: 0x248)
struct ASimpleSplineFollowerForAI : AActor {
	struct UPathComponent* PathComponent; // 0x248(0x08)
	bool bDebugSpline; // 0x250(0x01)
	enum class EPerformTaskSplineTypes SplineType; // 0x251(0x01)
	bool bSprintSplineType; // 0x252(0x01)
	bool bStartAtSplineStart; // 0x253(0x01)
	char pad_254[0x4]; // 0x254(0x04)
	struct FDbSingleColumnInfo MissionID; // 0x258(0x88)
	int32_t MissionUID; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct TArray<struct FSplinePoint> SplinePointsFromOtherSpline; // 0x2e8(0x10)
	struct ASimpleSplineFollowerForAI* OtherSplinePath; // 0x2f8(0x08)
	struct FMulticastInlineDelegate OnSplineCompleted; // 0x300(0x10)
	char pad_310[0x38]; // 0x310(0x38)

	void StartAIMovementOnSpline(struct UScheduledEntity* InScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.SimpleSplineFollowerForAI.StartAIMovementOnSpline // (Final|Native|Private) // @ game+0x34646e0
	void OnFleshLoadComplete(struct AActor* FleshActor); // Function Phoenix.SimpleSplineFollowerForAI.OnFleshLoadComplete // (Final|Native|Private) // @ game+0x3464120
	void MoveOnSplineFleshLoad(struct AActor* FleshActor); // Function Phoenix.SimpleSplineFollowerForAI.MoveOnSplineFleshLoad // (Final|Native|Private) // @ game+0x3463ef0
	void CreateSplineFromGivenPoints(); // Function Phoenix.SimpleSplineFollowerForAI.CreateSplineFromGivenPoints // (Final|Native|Public) // @ game+0x3463e20
};

// Class Phoenix.SimpleTopologyTestActor
// Size: 0x308 (Inherited: 0x248)
struct ASimpleTopologyTestActor : AActor {
	struct FSimpleTopologyParams Topology; // 0x248(0x18)
	struct FSimpleTopologyVoxelArray VoxelArray; // 0x260(0xa8)

	void Precompute(); // Function Phoenix.SimpleTopologyTestActor.Precompute // (Final|Native|Public) // @ game+0x1074730
	void AbortPrecompute(); // Function Phoenix.SimpleTopologyTestActor.AbortPrecompute // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.SkinFXAutoTriggerDriverDisease
// Size: 0x78 (Inherited: 0x30)
struct USkinFXAutoTriggerDriverDisease : USkinFXAutoTriggerDriver {
	struct FSkinFXAutoTriggerEffectInfo EffectInfo; // 0x30(0x40)
	float Priority; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Phoenix.SkinFXAutoTriggerDriverSocialSemantic
// Size: 0x98 (Inherited: 0x30)
struct USkinFXAutoTriggerDriverSocialSemantic : USkinFXAutoTriggerDriver {
	enum class SocialSemanticIDs SemanticID; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	struct FVector2D SemanticInputStrength; // 0x34(0x08)
	struct FVector2D OutputStrength; // 0x3c(0x08)
	struct FName SkinFXStrengthParameter; // 0x44(0x08)
	bool bZeroNonZero; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FSkinFXAutoTriggerEffectInfo EffectInfo; // 0x50(0x40)
	float Priority; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Phoenix.SkinFXEventTriggerFilteredWithDistance
// Size: 0x38 (Inherited: 0x30)
struct USkinFXEventTriggerFilteredWithDistance : USkinFXEventTriggerFiltered {
	float MaxDistanceFromCameraMeters; // 0x30(0x04)
	bool bUseMaxDistanceFromCamera; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Phoenix.SkinFXEventTriggerFilteredMultiFX2
// Size: 0x48 (Inherited: 0x38)
struct USkinFXEventTriggerFilteredMultiFX2 : USkinFXEventTriggerFilteredWithDistance {
	struct UMultiFX2_Base* FX; // 0x38(0x08)
	struct FName AttachPointName; // 0x40(0x08)
};

// Class Phoenix.SkinFXEventTriggerFilteredHermesSimple
// Size: 0x48 (Inherited: 0x38)
struct USkinFXEventTriggerFilteredHermesSimple : USkinFXEventTriggerFilteredWithDistance {
	struct FName HermesMessage; // 0x38(0x08)
	struct FName MessageData; // 0x40(0x08)
};

// Class Phoenix.SkinFXEventTriggerFilteredHermes
// Size: 0x40 (Inherited: 0x38)
struct USkinFXEventTriggerFilteredHermes : USkinFXEventTriggerFilteredWithDistance {
	struct FName HermesMessage; // 0x38(0x08)
};

// Class Phoenix.SkinFXEventTriggerFilteredActorRTPC
// Size: 0x48 (Inherited: 0x38)
struct USkinFXEventTriggerFilteredActorRTPC : USkinFXEventTriggerFilteredWithDistance {
	struct FName RTPC; // 0x38(0x08)
	float Value; // 0x40(0x04)
	int32_t InterpolationTime; // 0x44(0x04)
};

// Class Phoenix.SkinFXEventTriggerFilteredDebugLog
// Size: 0x38 (Inherited: 0x38)
struct USkinFXEventTriggerFilteredDebugLog : USkinFXEventTriggerFilteredWithDistance {
};

// Class Phoenix.SlaveToSplineComponent
// Size: 0x230 (Inherited: 0x220)
struct USlaveToSplineComponent : USceneComponent {
	enum class ESlaveToSplineUpdateMode Mode; // 0x218(0x01)
	float DurationFactor; // 0x21c(0x04)
	float SplineT; // 0x220(0x04)
	float SplineTReset; // 0x224(0x04)
	bool bUseConstantVelocity; // 0x228(0x01)
	bool bPositionOnly; // 0x229(0x01)
	bool bIncludeScale; // 0x22a(0x01)
	bool bReverseDirection; // 0x22b(0x01)
	bool bFollowEnabled; // 0x22c(0x01)

	void SetSplineT(float newT, bool& Done); // Function Phoenix.SlaveToSplineComponent.SetSplineT // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3469200
	void Reset(); // Function Phoenix.SlaveToSplineComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x3469020
	struct USplineComponent* GetFollowSpline(); // Function Phoenix.SlaveToSplineComponent.GetFollowSpline // (Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3468700
};

// Class Phoenix.SlaveToSplineActor
// Size: 0x260 (Inherited: 0x248)
struct ASlaveToSplineActor : AActor {
	struct USplineComponent* FollowSpline; // 0x248(0x08)
	struct TArray<struct FSlaveToSplineSlave> Slaves; // 0x250(0x10)

	void ResetAll(); // Function Phoenix.SlaveToSplineActor.ResetAll // (Final|Native|Public|BlueprintCallable) // @ game+0x3469040
};

// Class Phoenix.SlideNavLinkComponent
// Size: 0x2d0 (Inherited: 0x280)
struct USlideNavLinkComponent : UOdcNavLinkComponent {
	bool bIsBottomLinkPosValid; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FVector SlideBottomLinkEnd; // 0x284(0x0c)
	bool bIsTopLinkPosValid; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	struct FVector SlideTopLinkEnd; // 0x294(0x0c)
	struct FSelectableSubobjectName StartLinkComponentName; // 0x2a0(0x08)
	struct FSelectableSubobjectName EndLinkComponentName; // 0x2a8(0x08)
	struct FNavSlideInfo SlideInfo; // 0x2b0(0x18)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UpdateNavLink(struct FNavSlideInfo& Info); // Function Phoenix.SlideNavLinkComponent.UpdateNavLink // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3469910
	void RegisterNavLink(); // Function Phoenix.SlideNavLinkComponent.RegisterNavLink // (Final|Native|Protected|BlueprintCallable) // @ game+0x3469000
	bool HasValidLinks(); // Function Phoenix.SlideNavLinkComponent.HasValidLinks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x331ccc0
};

// Class Phoenix.SocialCallOutWidget
// Size: 0x268 (Inherited: 0x268)
struct USocialCallOutWidget : UUserWidget {

	void UpdateCallout(struct FSocialCallout SocialCallout); // Function Phoenix.SocialCallOutWidget.UpdateCallout // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ShowCallout(); // Function Phoenix.SocialCallOutWidget.ShowCallout // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void RemoveCallout(); // Function Phoenix.SocialCallOutWidget.RemoveCallout // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSynchronizeProperties(); // Function Phoenix.SocialCallOutWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SocialJournalEntryWidget
// Size: 0x288 (Inherited: 0x268)
struct USocialJournalEntryWidget : UUserWidget {
	struct UPhoenixTextBlock* Count; // 0x268(0x08)
	struct UImage* IconObserver; // 0x270(0x08)
	struct UImage* IconObserverType; // 0x278(0x08)
	struct UImage* IconSource; // 0x280(0x08)

	void OnSynchronizeProperties(); // Function Phoenix.SocialJournalEntryWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitDetails(struct FString inIconObserverName, struct FString inIconObserverTypeName, struct FString inIconSourceName, int32_t InCount); // Function Phoenix.SocialJournalEntryWidget.InitDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x34689f0
};

// Class Phoenix.SocialJournalHeadlineWidget
// Size: 0x280 (Inherited: 0x268)
struct USocialJournalHeadlineWidget : UUserWidget {
	struct UPhoenixTextBlock* Count; // 0x268(0x08)
	struct UImage* Icon; // 0x270(0x08)
	struct UPhoenixTextBlock* Name; // 0x278(0x08)

	void OnSynchronizeProperties(); // Function Phoenix.SocialJournalHeadlineWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitDetails(struct FText Name, struct FString IconName, int32_t Count); // Function Phoenix.SocialJournalHeadlineWidget.InitDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x3468c30
};

// Class Phoenix.SocialReasoning
// Size: 0x530 (Inherited: 0x248)
struct ASocialReasoning : AActor {
	char pad_248[0x8]; // 0x248(0x08)
	struct FAmendSocapDetails SocialCapitalDetails; // 0x250(0x28)
	char pad_278[0x10]; // 0x278(0x10)
	struct FMulticastInlineDelegate PlayerHasGreetedMeDelegate; // 0x288(0x10)
	struct UBTCustomComponent* Mind; // 0x298(0x08)
	struct UBlackboardComponent* Memory; // 0x2a0(0x08)
	struct FMulticastInlineDelegate ThinkDelegate; // 0x2a8(0x10)
	struct FMulticastInlineDelegate ChatDelegate; // 0x2b8(0x10)
	struct FMulticastInlineDelegate CombatDelegate; // 0x2c8(0x10)
	struct FMulticastInlineDelegate CompanionshipDelegate; // 0x2d8(0x10)
	struct FMulticastInlineDelegate PerformTask_WaitForPlayerDelegate; // 0x2e8(0x10)
	struct FMulticastInlineDelegate PerformTask_MoveToLocationDelegate; // 0x2f8(0x10)
	struct FMulticastInlineDelegate PerformTask_MoveToStationDelegate; // 0x308(0x10)
	struct FMulticastInlineDelegate PlayerSightedDelegate; // 0x318(0x10)
	struct FMulticastInlineDelegate RunEQS_FindStationsDelegate; // 0x328(0x10)
	struct FMulticastInlineDelegate RunEQS_FindSocialReasoningsDelegate; // 0x338(0x10)
	struct FMulticastInlineDelegate InteractionCallbackDelegate; // 0x348(0x10)
	struct FMulticastInlineDelegate GhostStoryEndedDelegate; // 0x358(0x10)
	struct UStoryTeller* StoryTeller; // 0x368(0x08)
	char pad_370[0x20]; // 0x370(0x20)
	float PatrolWaitTime; // 0x390(0x04)
	struct TWeakObjectPtr<struct AFocusTrigger> LookAtMe; // 0x394(0x08)
	char pad_39C[0x194]; // 0x39c(0x194)

	struct FGreetingQueryData WhomShallIGreet(struct TArray<struct AActor*>& PotentialGreetees, float& Score); // Function Phoenix.SocialReasoning.WhomShallIGreet // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3469ae0
	struct FGreetingQueryData WhomShallIAccompany(struct TArray<struct AActor*>& PotentialAccompaniers, float& Score); // Function Phoenix.SocialReasoning.WhomShallIAccompany // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34699c0
	bool TriggerSoloActionOnActor(struct AActor* InTargetActor, enum class SocialActionTypes Story, enum class SocialSemanticIDs Emotion, struct AActor* FocusActor); // Function Phoenix.SocialReasoning.TriggerSoloActionOnActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34697c0
	bool TriggerSoloAction(enum class SocialActionTypes Story, enum class SocialSemanticIDs Emotion, struct AActor* FocusActor); // Function Phoenix.SocialReasoning.TriggerSoloAction // (Final|Native|Public|BlueprintCallable) // @ game+0x34696b0
	void SuppressGreetingGhostStoriesOnActor(struct AActor* InTargetActor, bool InShouldSuppress, struct UObject* InCaller); // Function Phoenix.SocialReasoning.SuppressGreetingGhostStoriesOnActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34695a0
	void SuppressGreetingGhostStories(bool InShouldSuppress); // Function Phoenix.SocialReasoning.SuppressGreetingGhostStories // (Final|Native|Public|BlueprintCallable) // @ game+0x3469510
	void StartSettingGhostStoryInterestFactor(float InInterestLevel, enum class EStandardManagedPriority InPriority, struct UObject* InCaller); // Function Phoenix.SocialReasoning.StartSettingGhostStoryInterestFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x34693f0
	void StartActivateLookAtTrigger(bool inActivate, enum class EStandardManagedPriority InPriority, struct FName InReason); // Function Phoenix.SocialReasoning.StartActivateLookAtTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x34692e0
	void SetGhostStoryInterestFactor(float inInterestFactor); // Function Phoenix.SocialReasoning.SetGhostStoryInterestFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x3469180
	bool SelectGhostStoryPartners(struct TArray<struct AActor*>& PotentialPartners, struct TArray<struct AActor*>& AvailablePartners); // Function Phoenix.SocialReasoning.SelectGhostStoryPartners // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3469060
	void NoStationsFound(); // Function Phoenix.SocialReasoning.NoStationsFound // (Final|Native|Public|BlueprintCallable) // @ game+0x3468fe0
	bool MonitorTheAccompaniment(float LeashLength); // Function Phoenix.SocialReasoning.MonitorTheAccompaniment // (Final|Native|Public|BlueprintCallable) // @ game+0x3468f50
	bool JoinStation(struct FStationQueryData& StationData, float Duration, bool OverwritePreviousGoal); // Function Phoenix.SocialReasoning.JoinStation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3468df0
	void Greet(struct FGreetingQueryData& TheGreeting); // Function Phoenix.SocialReasoning.Greet // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3468920
	bool GetUseOptimizedEQS(); // Function Phoenix.SocialReasoning.GetUseOptimizedEQS // (Final|Native|Public|BlueprintCallable) // @ game+0x34688f0
	struct APawn* GetReasonerPawn(); // Function Phoenix.SocialReasoning.GetReasonerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34688b0
	struct FName GetReasonerName(); // Function Phoenix.SocialReasoning.GetReasonerName // (Final|Native|Public|BlueprintCallable) // @ game+0x3468890
	struct FName GetReasonerDisplayName(); // Function Phoenix.SocialReasoning.GetReasonerDisplayName // (Final|Native|Public|BlueprintCallable) // @ game+0x3468850
	struct UObject* GetReasoner(); // Function Phoenix.SocialReasoning.GetReasoner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3468810
	void GetFreeTimeMinMaxStationChangeTime(float& outMinTime, float& outMaxTime); // Function Phoenix.SocialReasoning.GetFreeTimeMinMaxStationChangeTime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3468730
	struct FGameplayTag GetDesiredBehavior(); // Function Phoenix.SocialReasoning.GetDesiredBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x34686c0
	struct FGameplayTag GetCurrentBehavior(); // Function Phoenix.SocialReasoning.GetCurrentBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x3468680
	void FinishSettingGhostStoryInterestFactor(enum class EStandardManagedPriority InPriority, struct UObject* InCaller); // Function Phoenix.SocialReasoning.FinishSettingGhostStoryInterestFactor // (Final|Native|Public|BlueprintCallable) // @ game+0x34685b0
	void FinishActivateLookAtTrigger(enum class EStandardManagedPriority InPriority, struct FName InReason); // Function Phoenix.SocialReasoning.FinishActivateLookAtTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x34684e0
	void EndTheGhostStory(); // Function Phoenix.SocialReasoning.EndTheGhostStory // (Final|Native|Public|BlueprintCallable) // @ game+0x34684c0
	bool CreateSocialInteractionForChat(struct FStationQueryData& ProvidedStationData, enum class ESpawnedStationTypes SpawnedStationType, float TimeAvailable, bool IsDynamic); // Function Phoenix.SocialReasoning.CreateSocialInteractionForChat // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3468300
	bool CreateSocialInteraction(int32_t MinimumInteractors, struct FStationQueryData& ProvidedStationData, enum class ESpawnedStationTypes SpawnedStationType, float TimeAvailable, bool IsDynamic); // Function Phoenix.SocialReasoning.CreateSocialInteraction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3468120
	bool AvailableToTellAGhostStory(); // Function Phoenix.SocialReasoning.AvailableToTellAGhostStory // (Final|Native|Public|BlueprintCallable) // @ game+0x34680f0
	void AbandonTheGhostStory(); // Function Phoenix.SocialReasoning.AbandonTheGhostStory // (Final|Native|Public|BlueprintCallable) // @ game+0x34680d0
};

// Class Phoenix.SocialReasoning_Interface
// Size: 0x28 (Inherited: 0x28)
struct USocialReasoning_Interface : UInterface {

	void RunEQS_FindStations(enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.SocialReasoning_Interface.RunEQS_FindStations // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RunEQS_FindSocialReasonings(enum class EEnvQueryRunMode RunMode, struct FQueryFinishedData& QueryFinishedDelegate); // Function Phoenix.SocialReasoning_Interface.RunEQS_FindSocialReasonings // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void PlayerSighted(); // Function Phoenix.SocialReasoning_Interface.PlayerSighted // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool Nevermind(); // Function Phoenix.SocialReasoning_Interface.Nevermind // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool Goodbye(); // Function Phoenix.SocialReasoning_Interface.Goodbye // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ExcuseMe(); // Function Phoenix.SocialReasoning_Interface.ExcuseMe // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ConverseWithProxy(struct FSocialResponse& SocialResponse); // Function Phoenix.SocialReasoning_Interface.ConverseWithProxy // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Converse(struct FSocialResponse& SocialResponse); // Function Phoenix.SocialReasoning_Interface.Converse // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Spawn_ByDBInfo
// Size: 0x158 (Inherited: 0x48)
struct USpawn_ByDBInfo : UActorSpawner {
	struct FSpawnSelectInfo DBInfo; // 0x48(0x80)
	struct FDbSingleColumnInfo CharacterLookIdInfo; // 0xc8(0x88)
	struct AActor* OverrideActorClass; // 0x150(0x08)
};

// Class Phoenix.Spawn_ByRandomAndTime
// Size: 0x58 (Inherited: 0x48)
struct USpawn_ByRandomAndTime : UActorSpawner {
	struct UStaticMeshPoolBaseData* StaticMeshPoolDA; // 0x48(0x08)
	struct UStaticMesh* RandomStaticMesh; // 0x50(0x08)
};

// Class Phoenix.Spawn_BySkeletalMesh_WithCreatureAudio
// Size: 0x70 (Inherited: 0x68)
struct USpawn_BySkeletalMesh_WithCreatureAudio : USpawn_BySkeletalMesh {
	struct UObjectArchitectAsset* CreatureAudioAsset; // 0x68(0x08)
};

// Class Phoenix.Spawn_ByStationStoryContent
// Size: 0x60 (Inherited: 0x48)
struct USpawn_ByStationStoryContent : UActorSpawner {
	int32_t CharacterIndex; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct FString StoryContentParameter; // 0x50(0x10)
};

// Class Phoenix.Spawn_CameraActor
// Size: 0x60 (Inherited: 0x48)
struct USpawn_CameraActor : UActorSpawner {
	enum class ESpawnCameraActorType CameraType; // 0x48(0x01)
	bool bFixedAspectRatio; // 0x49(0x01)
	char pad_4A[0x6]; // 0x4a(0x06)
	struct AActor* StackCameraClass; // 0x50(0x08)
	struct AActor* DefaultCameraClass; // 0x58(0x08)
};

// Class Phoenix.SpawnCustomizableActor
// Size: 0x48 (Inherited: 0x30)
struct USpawnCustomizableActor : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate Loaded; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	struct USpawnCustomizableActor* SpawnCustomizableActor(struct UObject* WorldContextObject, struct ACustomizableActor* Class, struct FName RegistryId, struct FTransform& Transform, struct AActor* Owner, struct APawn* Instigator, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride); // Function Phoenix.SpawnCustomizableActor.SpawnCustomizableActor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3471dd0
	void OnFinishLoading(struct AActor* InOwner); // Function Phoenix.SpawnCustomizableActor.OnFinishLoading // (Final|Native|Private) // @ game+0x34712b0
};

// Class Phoenix.SpellActionItemWidget
// Size: 0x268 (Inherited: 0x268)
struct USpellActionItemWidget : UActionItemWidget {
};

// Class Phoenix.SpellBarSlotWidget
// Size: 0x280 (Inherited: 0x268)
struct USpellBarSlotWidget : UUserWidget {
	struct FString IconName; // 0x268(0x10)
	struct UImage* slotIcon; // 0x278(0x08)

	void UpdateRechargeMaterial(struct UTexture2D* newSpellIcon); // Function Phoenix.SpellBarSlotWidget.UpdateRechargeMaterial // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSlotState(bool IsActive); // Function Phoenix.SpellBarSlotWidget.SetSlotState // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetImage(struct FString ImageName); // Function Phoenix.SpellBarSlotWidget.SetImage // (Final|Native|Public|BlueprintCallable) // @ game+0x34717e0
	void OnSynchronizeProperties(); // Function Phoenix.SpellBarSlotWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpellCasterTool
// Size: 0x358 (Inherited: 0x2f0)
struct ASpellCasterTool : AItemTool {
	struct FVector AttachOffset; // 0x2f0(0x0c)
	char pad_2FC[0x4]; // 0x2fc(0x04)
	struct UToolSetComponent* ToolSetComponent; // 0x300(0x08)
	struct TMap<struct USpellToolRecord*, struct ASpellTool*> SpellToolMap; // 0x308(0x50)

	void StopSpell(struct AMunitionType_Base* InMunition); // Function Phoenix.SpellCasterTool.StopSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34721b0
	void CastSpell(struct USpellToolRecord* SpellToolRecord, struct AActor* Target, struct FVector InSourceLocation, struct FRotator& Orientation, float AccuracyOffset, float InObjDamage, float InCharDamage, bool bAffectTarget, float SpellTime, int32_t SpellLevel, bool bAlwaysHitTargetActor, bool bVelocityIncludeTarget, bool bUnblockableAgainstPlayer, enum class EEnemyShieldBreaker UnblockableLByNPCLevel); // Function Phoenix.SpellCasterTool.CastSpell // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x346d3c0
};

// Class Phoenix.SpellCastingLayoutWidget
// Size: 0x2c0 (Inherited: 0x268)
struct USpellCastingLayoutWidget : UUserWidget {
	struct FText DisplayName; // 0x268(0x18)
	bool ActiveLayout; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UUserWidget* ParentWidget; // 0x288(0x08)
	struct FMulticastInlineDelegate OnNewSpellSelected; // 0x290(0x10)
	struct FMulticastInlineDelegate OnEnterSpellMode; // 0x2a0(0x10)
	struct FMulticastInlineDelegate OnExitSpellMode; // 0x2b0(0x10)

	void SpellSelected(); // Function Phoenix.SpellCastingLayoutWidget.SpellSelected // (Final|Native|Public|BlueprintCallable) // @ game+0x3472040
	void OnDeactivateLayout(); // Function Phoenix.SpellCastingLayoutWidget.OnDeactivateLayout // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnActivateLayout(); // Function Phoenix.SpellCastingLayoutWidget.OnActivateLayout // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void InitSpells(); // Function Phoenix.SpellCastingLayoutWidget.InitSpells // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EnterSpellMode(bool InSpellMode); // Function Phoenix.SpellCastingLayoutWidget.EnterSpellMode // (Final|Native|Public|BlueprintCallable) // @ game+0x34704d0
};

// Class Phoenix.RadialForceData
// Size: 0x78 (Inherited: 0x28)
struct URadialForceData : UObject {
	struct AActor* Actor; // 0x28(0x08)
	struct UPrimitiveComponent* Component; // 0x30(0x08)
	char pad_38[0x30]; // 0x38(0x30)
	struct TArray<struct AActor*> IgnoreActors; // 0x68(0x10)
};

// Class Phoenix.SpellHelper
// Size: 0x280 (Inherited: 0x248)
struct ASpellHelper : AActor {
	struct UToolSetComponent* ToolSetComponent; // 0x248(0x08)
	struct USceneComponent* DummyRoot; // 0x250(0x08)
	struct TArray<struct URadialForceData*> RadialForceDataArray; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)
	struct TArray<struct FCastSpellData> SpellCastArray; // 0x270(0x10)

	void UpdateSpellCast(); // Function Phoenix.SpellHelper.UpdateSpellCast // (Final|Native|Private) // @ game+0x3472620
	void TriggerReaction(struct AActor* TargetActor, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, struct FVector SourceLocation, struct AActor* InInstigator); // Function Phoenix.SpellHelper.TriggerReaction // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34723f0
	void TriggerNpcSpellResponse(struct AActor* InTarget, struct AActor* InInstigator, struct FVector& Location, float Radius, bool bAlwaysUseRadius); // Function Phoenix.SpellHelper.TriggerNpcSpellResponse // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3472240
	bool SpellWillKillTarget(struct AActor* InTarget, struct AActor* InInstigator, struct USpellToolRecord* InSpellToolRecord, float& OutDamage); // Function Phoenix.SpellHelper.SpellWillKillTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3472060
	void SetVelocityTrackerMinDamage(struct AActor* InTarget, float MinDamageDealt, float MinDamageDealtCharacter, float MixDamageTaken, float MixDamageTakenCharacter); // Function Phoenix.SpellHelper.SetVelocityTrackerMinDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471c40
	void SetVelocityTrackerMaxDamage(struct AActor* InTarget, float MaxDamageDealt, float MaxDamageDealtCharacter, float MaxDamageTaken, float MaxDamageTakenCharacter); // Function Phoenix.SpellHelper.SetVelocityTrackerMaxDamage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471ab0
	bool SetOnFire(struct AActor* Target, struct AActor* InInstigator, float Amount, struct FVector Location, float CharacterDuration, float OverrideDamagePerSecond); // Function Phoenix.SpellHelper.SetOnFire // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34718d0
	bool SetFrozen(struct AActor* Target, struct AActor* InInstigator, struct FVector Location); // Function Phoenix.SpellHelper.SetFrozen // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34716c0
	void Repair(struct AActor* Target, struct AActor* InInstigator); // Function Phoenix.SpellHelper.Repair // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471600
	void RemoveSpellEffect(struct AActor* Target, struct UStateEffectComponent* InRemoveEffect); // Function Phoenix.SpellHelper.RemoveSpellEffect // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471540
	void RemoveLeviosoCountTracking(struct AActor* InOwner); // Function Phoenix.SpellHelper.RemoveLeviosoCountTracking // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34714c0
	void RemoveFiniteCountTracking(struct AActor* InOwner); // Function Phoenix.SpellHelper.RemoveFiniteCountTracking // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471440
	void RemoveDeflectionComponent(struct AActor* InTarget); // Function Phoenix.SpellHelper.RemoveDeflectionComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34713c0
	void PreloadSpell(struct USpellToolRecord* SpellToolRecord); // Function Phoenix.SpellHelper.PreloadSpell // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3471340
	void ObjectCanDamagePlayer(struct AActor* InTarget, struct AActor* InInstigator); // Function Phoenix.SpellHelper.ObjectCanDamagePlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34711f0
	bool KillTarget(struct AActor* InTarget, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, float InForce, float InDestructionForce, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bSkipTakeAKnee, bool InNoReaction, bool bAlwaysKill); // Function Phoenix.SpellHelper.KillTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3470dc0
	bool Kill(struct AActor* Target, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, struct FHitResult& HitResult, float InDestructionForce, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bSkipTakeAKnee, bool InNoReaction); // Function Phoenix.SpellHelper.Kill // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3470960
	void Heal(struct AActor* Target, float Health); // Function Phoenix.SpellHelper.Heal // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34708a0
	struct ASpellTool* GetSpellTool(struct USpellToolRecord* InSpellToolRecord); // Function Phoenix.SpellHelper.GetSpellTool // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3470810
	struct AMunitionType_Base* FireMunition(struct USpellToolRecord* SpellToolRecord, struct FVector SourceLocation, struct FVector TargetLocation, struct AActor* InMunitionOwner, struct AActor* InInstigator); // Function Phoenix.SpellHelper.FireMunition // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x3470670
	bool FinisherWillKillTarget(struct AActor* InTarget, struct AActor* InInstigator, float Damage); // Function Phoenix.SpellHelper.FinisherWillKillTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3470560
	bool DoDamageTarget(struct AActor* InTarget, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, struct FDamageInfo& OutDamageInfo, float InDamage, float InForce, bool bSendImpact, bool bIgnoreDamageThreshold, float InDestructionForce, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, struct UAkAudioEvent* SFX, float InDuration, enum class EImpactTypes InImpactType, bool bNoReaction, bool bForceNoReaction, struct ASpellTool* InSpellTool); // Function Phoenix.SpellHelper.DoDamageTarget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x346fda0
	bool DoDamageOverTime(struct AActor* InTarget, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, struct FName InDOTType, struct UMultiFX2Asset* MultiFX2, float InDamagePerSecond, float DurationInSeconds, float UpdateRate, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker); // Function Phoenix.SpellHelper.DoDamageOverTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346f9c0
	bool DoDamageLocationDirection(struct AActor* InTarget, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, struct FDamageInfo& OutDamageInfo, float InDamage, struct FVector InLocation, struct FVector InDirection, float InForce, bool bSendImpact, bool bIgnoreDamageThreshold, float InDestructionForce, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, struct UAkAudioEvent* SFX, float InDuration, bool InNoReaction, enum class EImpactTypes InImpactType, bool bForceNoReaction, struct ASpellTool* InSpellTool); // Function Phoenix.SpellHelper.DoDamageLocationDirection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x346f1d0
	void DoDamageFinisher(struct AActor* InTarget, struct AActor* InInstigator, float Damage); // Function Phoenix.SpellHelper.DoDamageFinisher // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346f0c0
	void DoDamageAOE(struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, float InDamage, struct FVector InLocation, float InRadius, float InForce, bool bSendImpact, bool bIgnoreDamageThreshold, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, bool bOnlyHitCharacters, bool bIgnoreSameTeam, bool bIgnoreCompanions, bool bRespectInstigatorCanHit, struct UAkAudioEvent* SFX, float InDuration, enum class EImpactTypes InImpactType, struct ASpellTool* InSpellTool); // Function Phoenix.SpellHelper.DoDamageAOE // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346e9a0
	bool DoDamage(struct AActor* Target, struct AActor* InInstigator, struct FGameplayTagContainer InMunitionTagContainer, struct TArray<struct UInteractionArchitectAsset*> InMunitionDataAssets, float Amount, struct FHitResult& HitResult, bool bSendImpact, bool bIgnoreDamageThreshold, float InDestructionForce, float InRadialDestructionForce, struct UParticleSystem* InDestroyPieceVFX, float InDestroyPieceVFXRadius, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, struct UAkAudioEvent* SFX, float InDuration, bool InNoReaction, enum class EImpactTypes InImpactType, struct ASpellTool* InSpellTool); // Function Phoenix.SpellHelper.DoDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x346e310
	struct ASpellTool* CastSpellImmediate(struct AActor* Target, struct FVector SourceLocation, struct USpellToolRecord* SpellToolRecord, struct FVector TargetLocation, struct AActor* InInstigator, bool bCharged, float Duration, bool bPlayMuzzleFX, bool bPlayImpactFX, bool bHideProjectile, bool bInDebug, int32_t SpellLevel, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, bool bTriggerCastAnim, bool bOnlyHitTarget, bool bHoming, bool bRespectLock, float damageOverride); // Function Phoenix.SpellHelper.CastSpellImmediate // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346dd60
	bool CastSpell(struct AActor* Target, struct FVector SourceLocation, struct USpellToolRecord* SpellToolRecord, struct FVector TargetLocation, struct AActor* InInstigator, bool bCharged, float Duration, bool bPlayMuzzleFX, bool bPlayImpactFX, bool bHideProjectile, bool bInDebug, int32_t SpellLevel, bool bPlayerShieldBreaker, enum class EEnemyShieldBreaker EnemyShieldBreaker, bool bTriggerCastAnim, bool bOnlyHitTarget, bool bHoming, bool bRespectLock); // Function Phoenix.SpellHelper.CastSpell // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346d7f0
	float CalculateTimeToReachDestination(struct USpellToolRecord* SpellToolRecord, struct FVector SourceLocation, struct FVector TargetLocation); // Function Phoenix.SpellHelper.CalculateTimeToReachDestination // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346d290
	bool ApplyWetness(struct AActor* Target, struct AActor* InInstigator, float Amount, struct FVector Location); // Function Phoenix.SpellHelper.ApplyWetness // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346d130
	void ApplySpellEffectFromPlayer(struct AActor* Target, struct USpellToolRecord* SpellToolRecord, float Duration); // Function Phoenix.SpellHelper.ApplySpellEffectFromPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346d020
	void ApplyRadialForceWithIgnore(struct FVector Location, float Impulse, struct TArray<struct AActor*>& ActorsToIgnore, float MassScaledImpulse, float Radius, enum class ERadialImpulseFalloff Falloff, bool bVelChange, float Delay); // Function Phoenix.SpellHelper.ApplyRadialForceWithIgnore // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x346cd80
	void ApplyRadialForceToComponent(struct UPrimitiveComponent* InComp, struct FVector Location, float Impulse, float MassScaledImpulse, float Radius, enum class ERadialImpulseFalloff Falloff, bool bVelChange, float Delay); // Function Phoenix.SpellHelper.ApplyRadialForceToComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346cb10
	void ApplyRadialForceToActor(struct AActor* InActor, struct FVector Location, float Impulse, float MassScaledImpulse, float Radius, enum class ERadialImpulseFalloff Falloff, bool bVelChange, float Delay); // Function Phoenix.SpellHelper.ApplyRadialForceToActor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346c8a0
	void ApplyRadialForce(struct FVector Location, float Impulse, float MassScaledImpulse, float Radius, enum class ERadialImpulseFalloff Falloff, bool bVelChange, float Delay); // Function Phoenix.SpellHelper.ApplyRadialForce // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x346c670
	void AddVelocityTrackerTag(struct AActor* InTarget, struct FName Tag); // Function Phoenix.SpellHelper.AddVelocityTrackerTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346c5b0
	struct UVelocityTrackerComponent* AddVelocityTracker(struct AActor* Target, struct AActor* InInstigator, float InLifetime, bool InRemoveWhenStopped, bool InFalling); // Function Phoenix.SpellHelper.AddVelocityTracker // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346c400
	void AddDeflectionComponent(struct AActor* InTarget); // Function Phoenix.SpellHelper.AddDeflectionComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346c380
	void AddCombatCursed(struct AActor* InTarget, struct AActor* InInstigator); // Function Phoenix.SpellHelper.AddCombatCursed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x346c2c0
};

// Class Phoenix.SpellHelperData
// Size: 0x80 (Inherited: 0x30)
struct USpellHelperData : UDataAsset {
	struct TArray<struct UMultiFX2_Base*> GlaciusFX2; // 0x30(0x10)
	struct FGameplayTagContainer GlaciusMunitionTagContainer; // 0x40(0x20)
	struct UInteractionArchitectAsset* GlaciusMunitionDataAsset; // 0x60(0x08)
	struct TArray<struct UMultiFX2_Base*> DeflectedFX2; // 0x68(0x10)
	float DeflectedMaxCharacterDamage; // 0x78(0x04)
	float DeflectedMaxObjectDamage; // 0x7c(0x04)
};

// Class Phoenix.SpellImpactComponent
// Size: 0xc8 (Inherited: 0xc8)
struct USpellImpactComponent : UActorComponent {

	void OnSpellImpact(struct AActor* Target, struct FMunitionImpactData& MunitionImpactData); // Function Phoenix.SpellImpactComponent.OnSpellImpact // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpellInfoData
// Size: 0x70 (Inherited: 0x30)
struct USpellInfoData : UDataAsset {
	struct TArray<struct UMultiFX2_Base*> IneffectiveFX2; // 0x30(0x10)
	float ChargedActivationDelay; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UPhoenixPhysicalMaterial* WaterPPM; // 0x48(0x08)
	struct UInteractionArchitectAsset* ImmuneToDataAsset; // 0x50(0x08)
	struct UInteractionArchitectAsset* ChargedSpellTagDataAsset; // 0x58(0x08)
	struct TArray<struct UMultiFX2_Base*> SpellCastFX; // 0x60(0x10)
};

// Class Phoenix.SpellInstantCastPanelWidget
// Size: 0x2c8 (Inherited: 0x268)
struct USpellInstantCastPanelWidget : UUserWidget {
	struct AWandTool* Wand; // 0x268(0x08)
	struct ABiped_Character* BipedCharacter; // 0x270(0x08)
	struct TArray<struct USpellBarSlotWidget*> SpellBarDataArray; // 0x278(0x10)
	bool NextLoadout; // 0x288(0x01)
	char pad_289[0x3]; // 0x289(0x03)
	int32_t SpellGroupIndex; // 0x28c(0x04)
	struct TArray<struct FSlateBrush> SpellGroupIcons; // 0x290(0x10)
	struct USpellBarSlotWidget* Spell_1; // 0x2a0(0x08)
	struct USpellBarSlotWidget* Spell_2; // 0x2a8(0x08)
	struct UTextBlock* SpellNameText_1; // 0x2b0(0x08)
	struct UTextBlock* SpellNameText_2; // 0x2b8(0x08)
	struct UImage* SpellGroupIcon; // 0x2c0(0x08)

	void UpdateSpellGroup(bool OutAnimDone); // Function Phoenix.SpellInstantCastPanelWidget.UpdateSpellGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x3477320
	void UpdateSlotState(bool IsActive); // Function Phoenix.SpellInstantCastPanelWidget.UpdateSlotState // (Final|Native|Public|BlueprintCallable) // @ game+0x3477290
	void UpdateAvailableSpellList(bool Next); // Function Phoenix.SpellInstantCastPanelWidget.UpdateAvailableSpellList // (Final|Native|Public|BlueprintCallable) // @ game+0x3477200
	void ShowSpellPanel(bool Show); // Function Phoenix.SpellInstantCastPanelWidget.ShowSpellPanel // (Final|Native|Public|BlueprintCallable) // @ game+0x34770a0
	void SetSpellName(struct FText NewName, int32_t SpellIndex); // Function Phoenix.SpellInstantCastPanelWidget.SetSpellName // (Final|Native|Public|BlueprintCallable) // @ game+0x3476e50
	void OnUpdateSpellGroup(); // Function Phoenix.SpellInstantCastPanelWidget.OnUpdateSpellGroup // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUpdateAvailableSpellList(); // Function Phoenix.SpellInstantCastPanelWidget.OnUpdateAvailableSpellList // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSynchronizeProperties(); // Function Phoenix.SpellInstantCastPanelWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDeactivateWand(); // Function Phoenix.SpellInstantCastPanelWidget.OnDeactivateWand // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnActivateWand(); // Function Phoenix.SpellInstantCastPanelWidget.OnActivateWand // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void InitSpells(); // Function Phoenix.SpellInstantCastPanelWidget.InitSpells // (Final|Native|Public|BlueprintCallable) // @ game+0x3476880
	void GetSpellData(); // Function Phoenix.SpellInstantCastPanelWidget.GetSpellData // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.SpellInterface
// Size: 0x28 (Inherited: 0x28)
struct USpellInterface : UInterface {

	void OnSpellTooWeak(struct AActor* Instigator); // Function Phoenix.SpellInterface.OnSpellTooWeak // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellIneffective(struct AActor* Instigator); // Function Phoenix.SpellInterface.OnSpellIneffective // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellEffective(struct AActor* Instigator); // Function Phoenix.SpellInterface.OnSpellEffective // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnOverlappedBySpell(struct ASpellTool* SpellTool, struct AActor* Instigator, struct USpellToolRecord* SpellToolRecord, struct FName SpellType, struct FGameplayTagContainer Impact, struct FVector& MunitionLocation); // Function Phoenix.SpellInterface.OnOverlappedBySpell // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnHitBySpell(struct ASpellTool* SpellTool, struct AActor* Instigator, struct USpellToolRecord* SpellToolRecord, struct FName SpellType, struct FHitResult& Hit, struct FVector& ImpactDirection); // Function Phoenix.SpellInterface.OnHitBySpell // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnAffectedBySpellEnd(struct ASpellTool* SpellTool, struct AActor* Instigator, struct USpellToolRecord* SpellToolRecord, struct FName SpellType, struct FGameplayTagContainer Impact); // Function Phoenix.SpellInterface.OnAffectedBySpellEnd // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAffectedBySpell(struct ASpellTool* SpellTool, struct AActor* Instigator, struct TArray<struct UInteractionArchitectAsset*>& DataAssets, struct USpellToolRecord* SpellToolRecord, struct FName SpellType, struct FGameplayTagContainer Impact, struct FHitResult& Hit, struct FVector& ImpactDirection); // Function Phoenix.SpellInterface.OnAffectedBySpell // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpellManager
// Size: 0x1d8 (Inherited: 0xa8)
struct USpellManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x130]; // 0xa8(0x130)

	void OnSaveGameLoaded(); // Function Phoenix.SpellManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3476950
};

// Class Phoenix.SpellManagerBPInterface
// Size: 0x30 (Inherited: 0x28)
struct USpellManagerBPInterface : UObject {
	int32_t NumLoadouts; // 0x28(0x04)
	int32_t SpellsPerLoadout; // 0x2c(0x04)

	void SetTargetingSpell(int32_t SpellLoadoutIndex, int32_t SpellIndex, struct FName SpellName); // Function Phoenix.SpellManagerBPInterface.SetTargetingSpell // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476f80
	void SetSpellFinisher(struct FName SpellName); // Function Phoenix.SpellManagerBPInterface.SetSpellFinisher // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476dc0
	void SetSpell(int32_t LoadoutIndex, int32_t SpellIndex, struct FName SpellName); // Function Phoenix.SpellManagerBPInterface.SetSpell // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476ca0
	void SetOverrideSpellLevel(int32_t SpellLevel); // Function Phoenix.SpellManagerBPInterface.SetOverrideSpellLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476c10
	void SetFinisherSpell(struct FName SpellName); // Function Phoenix.SpellManagerBPInterface.SetFinisherSpell // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476b80
	void SetCurrentSpellLoadoutIndex(int32_t LayoutIndex); // Function Phoenix.SpellManagerBPInterface.SetCurrentSpellLoadoutIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476af0
	bool IsUnlocked(struct FName SpellLockName); // Function Phoenix.SpellManagerBPInterface.IsUnlocked // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34768a0
	void GetTargetingSpells(struct TArray<struct FName>& SpellNames); // Function Phoenix.SpellManagerBPInterface.GetTargetingSpells // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34767d0
	struct TMap<struct FName, struct FSpellUpgradeState> GetSpellUpgradeMap(); // Function Phoenix.SpellManagerBPInterface.GetSpellUpgradeMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476270
	struct TArray<struct FName> GetSpellsInCategory(enum class ESpellCategory Category, bool IncludeLocked); // Function Phoenix.SpellManagerBPInterface.GetSpellsInCategory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476660
	bool GetSpellsFinisher(struct TArray<struct FName>& SpellNames); // Function Phoenix.SpellManagerBPInterface.GetSpellsFinisher // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3476590
	bool GetSpellsByGroup(int32_t LoadoutIndex, struct TArray<struct FName>& SpellNames); // Function Phoenix.SpellManagerBPInterface.GetSpellsByGroup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3476480
	struct TArray<struct FString> GetSpellGroupNames(); // Function Phoenix.SpellManagerBPInterface.GetSpellGroupNames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3476120
	struct FName GetSpellFinisher(); // Function Phoenix.SpellManagerBPInterface.GetSpellFinisher // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34760c0
	struct FName GetSpellCategory(struct FString SpellName); // Function Phoenix.SpellManagerBPInterface.GetSpellCategory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3475ff0
	void GetSpell(int32_t SpellLoadOut, int32_t SpellIndex, struct FName& SpellName); // Function Phoenix.SpellManagerBPInterface.GetSpell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3475ec0
	void GetFinishingSpells(struct TArray<struct FName>& SpellNames); // Function Phoenix.SpellManagerBPInterface.GetFinishingSpells // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3475c60
	int32_t GetCurrentSpellLoadoutIndex(); // Function Phoenix.SpellManagerBPInterface.GetCurrentSpellLoadoutIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3475c20
	bool GetCurrentSpellLoadout(struct TArray<struct FName>& SpellNames); // Function Phoenix.SpellManagerBPInterface.GetCurrentSpellLoadout // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x3475b50
	int32_t GetCurrentSpellIndex(); // Function Phoenix.SpellManagerBPInterface.GetCurrentSpellIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3475b00
	int32_t GetAvailableSpellCount(bool IncludeLocked); // Function Phoenix.SpellManagerBPInterface.GetAvailableSpellCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3475a00
};

// Class Phoenix.SpellMiniGameBase
// Size: 0x528 (Inherited: 0x370)
struct USpellMiniGameBase : UScreen {
	float PreDrawTime; // 0x370(0x04)
	char pad_374[0x4]; // 0x374(0x04)
	struct USpellMiniGameSpark* PlayerSpark; // 0x378(0x08)
	struct USpellMiniGameSpark* BadSpark; // 0x380(0x08)
	struct FVector2D FailProgress; // 0x388(0x08)
	struct AActor* PlayerProxy; // 0x390(0x08)
	float ThreatChaserDelay; // 0x398(0x04)
	float PreDrawProgress; // 0x39c(0x04)
	struct FVector2D PlayerSparkInput; // 0x3a0(0x08)
	struct FVector2D LastTouchpadInput; // 0x3a8(0x08)
	struct FVector2D SpellPathScale; // 0x3b0(0x08)
	struct UTexture2D* SpellPathMask; // 0x3b8(0x08)
	struct TArray<enum class EUMGInputAction> PossiblePrompts; // 0x3c0(0x10)
	struct TSoftObjectPtr<UDataTable> SpellMiniGameDataTable; // 0x3d0(0x28)
	char pad_3F8[0x130]; // 0x3f8(0x130)

	void UpdateButtonGlow(int32_t Checkpoint, float GlowOpacity); // Function Phoenix.SpellMiniGameBase.UpdateButtonGlow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void StartMiniGameReset(struct UObject* sender, int32_t RemoveWaitRequest); // Function Phoenix.SpellMiniGameBase.StartMiniGameReset // (Final|Native|Protected) // @ game+0x3477130
	void SetUseDefaultCamera(bool UseDefault); // Function Phoenix.SpellMiniGameBase.SetUseDefaultCamera // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetSpellIconImages(struct TSoftObjectPtr<UTexture2D>& Icon, struct TSoftObjectPtr<UTexture2D>& IconGlow, struct FVector2D Position); // Function Phoenix.SpellMiniGameBase.SetSpellIconImages // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void ResetSparks(); // Function Phoenix.SpellMiniGameBase.ResetSparks // (Final|Native|Protected|BlueprintCallable) // @ game+0x3476ad0
	void ResetMiniGame(); // Function Phoenix.SpellMiniGameBase.ResetMiniGame // (Final|Native|Public|BlueprintCallable) // @ game+0x3476ab0
	void PostMiniGameDataSet(struct FSpellUnlockMiniGameData Data); // Function Phoenix.SpellMiniGameBase.PostMiniGameDataSet // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void PauseMiniGame(); // Function Phoenix.SpellMiniGameBase.PauseMiniGame // (Final|Native|Public|BlueprintCallable) // @ game+0x3476a90
	void PathTextureCallback(struct UTexture2D* MI); // Function Phoenix.SpellMiniGameBase.PathTextureCallback // (Final|Native|Public) // @ game+0x3476a00
	void PathMaskCallback(struct UTexture2D* T2D); // Function Phoenix.SpellMiniGameBase.PathMaskCallback // (Final|Native|Public) // @ game+0x3476970
	void OnUpdatePreDrawProgress(float NewProgress); // Function Phoenix.SpellMiniGameBase.OnUpdatePreDrawProgress // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUpdatePlayerProgress(struct FVector2D NewProgress); // Function Phoenix.SpellMiniGameBase.OnUpdatePlayerProgress // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnUpdateFailProgress(struct FVector2D NewProgress); // Function Phoenix.SpellMiniGameBase.OnUpdateFailProgress // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnStartPressed(); // Function Phoenix.SpellMiniGameBase.OnStartPressed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStartMiniGameReset(); // Function Phoenix.SpellMiniGameBase.OnStartMiniGameReset // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnSpellTextureLoaded(struct UTexture2D* PathTexture); // Function Phoenix.SpellMiniGameBase.OnSpellTextureLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSpellMaskLoaded(struct UTexture2D* PathMask); // Function Phoenix.SpellMiniGameBase.OnSpellMaskLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPreDrawComplete(); // Function Phoenix.SpellMiniGameBase.OnPreDrawComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPathSplineSet(struct FSpellUnlockMiniGamePath& Spline); // Function Phoenix.SpellMiniGameBase.OnPathSplineSet // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void OnMinigameSuccess(); // Function Phoenix.SpellMiniGameBase.OnMinigameSuccess // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnMinigameFullyLoaded(); // Function Phoenix.SpellMiniGameBase.OnMinigameFullyLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnMinigameFailure(struct UObject* sender); // Function Phoenix.SpellMiniGameBase.OnMinigameFailure // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnInputSuccess(int32_t InputButtonIndex); // Function Phoenix.SpellMiniGameBase.OnInputSuccess // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnInputFailure(int32_t InputIndex); // Function Phoenix.SpellMiniGameBase.OnInputFailure // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnInputDeviceChanged(enum class EInputDeviceUsed UsedInputDevice); // Function Phoenix.SpellMiniGameBase.OnInputDeviceChanged // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnExitPressed(); // Function Phoenix.SpellMiniGameBase.OnExitPressed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnEnterInputWindow(int32_t Checkpoint); // Function Phoenix.SpellMiniGameBase.OnEnterInputWindow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDestroySparks(); // Function Phoenix.SpellMiniGameBase.OnDestroySparks // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnButtonPreDraw(int32_t ButtonIndex); // Function Phoenix.SpellMiniGameBase.OnButtonPreDraw // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBadSparkHitCheckpoint(int32_t Checkpoint); // Function Phoenix.SpellMiniGameBase.OnBadSparkHitCheckpoint // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBadSparkEnterInputWindow(int32_t Checkpoint); // Function Phoenix.SpellMiniGameBase.OnBadSparkEnterInputWindow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void LogSpellMinigameData(struct FString LogData); // Function Phoenix.SpellMiniGameBase.LogSpellMinigameData // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9fc0
	struct FVector2D GetProgressOnMask(struct USpellMiniGameSpark* Spark); // Function Phoenix.SpellMiniGameBase.GetProgressOnMask // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x3475e30
	struct FName GetMiniGameName(); // Function Phoenix.SpellMiniGameBase.GetMiniGameName // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3384690
	bool GetIsWaitingForStart(); // Function Phoenix.SpellMiniGameBase.GetIsWaitingForStart // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3475e10
	bool GetIsMiniGameActive(); // Function Phoenix.SpellMiniGameBase.GetIsMiniGameActive // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3475df0
	bool GetIsInInputWindow(); // Function Phoenix.SpellMiniGameBase.GetIsInInputWindow // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3475dd0
	struct TArray<struct FInputCheckpoint> GetInputCheckpoints(); // Function Phoenix.SpellMiniGameBase.GetInputCheckpoints // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3475d10
	struct FInputCheckpoint GetCurrentCheckpointData(); // Function Phoenix.SpellMiniGameBase.GetCurrentCheckpointData // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x3475ac0
	void AsyncUITextureLoadCallback__DelegateSignature(struct UTexture2D* LoadedTex); // DelegateFunction Phoenix.SpellMiniGameBase.AsyncUITextureLoadCallback__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void AsyncUIMaterialLoadCallback__DelegateSignature(struct UMaterialInstance* LoadedMat); // DelegateFunction Phoenix.SpellMiniGameBase.AsyncUIMaterialLoadCallback__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void AddResetWaitRequest(struct UObject* sender); // Function Phoenix.SpellMiniGameBase.AddResetWaitRequest // (Final|Native|Protected) // @ game+0x3475970
	void AddInputButton(struct FString ButtonKey, struct FVector2D Position); // Function Phoenix.SpellMiniGameBase.AddInputButton // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpellMiniGameSpark
// Size: 0x3c0 (Inherited: 0x328)
struct USpellMiniGameSpark : UPhoenixUserWidget {
	bool IsRunning; // 0x328(0x01)
	char pad_329[0x3]; // 0x329(0x03)
	struct FVector2D LinearInput; // 0x32c(0x08)
	float MaxSpeed; // 0x334(0x04)
	float MaxAcceleration; // 0x338(0x04)
	float BoostMultiplier; // 0x33c(0x04)
	float BoostTime; // 0x340(0x04)
	float BoostRampUpSpeed; // 0x344(0x04)
	float BoostRampDownSpeed; // 0x348(0x04)
	float OrientationSmoothSpeed; // 0x34c(0x04)
	float MaxOrientationSmoothAngle; // 0x350(0x04)
	float NormalizedPerformanceSpeed; // 0x354(0x04)
	char pad_358[0x68]; // 0x358(0x68)

	void Stop(); // Function Phoenix.SpellMiniGameSpark.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x347b980
	void Start(); // Function Phoenix.SpellMiniGameSpark.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x347b960
	void Reset(); // Function Phoenix.SpellMiniGameSpark.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x347b460
	void OnRun(); // Function Phoenix.SpellMiniGameSpark.OnRun // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnReset(); // Function Phoenix.SpellMiniGameSpark.OnReset // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnInputFailure(); // Function Phoenix.SpellMiniGameSpark.OnInputFailure // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFail(struct UObject* sender); // Function Phoenix.SpellMiniGameSpark.OnFail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnEnterInputWindow(); // Function Phoenix.SpellMiniGameSpark.OnEnterInputWindow // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnBoostStart(); // Function Phoenix.SpellMiniGameSpark.OnBoostStart // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnBoostEnd(); // Function Phoenix.SpellMiniGameSpark.OnBoostEnd // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void LogSpellMinigameData(struct FString LogData); // Function Phoenix.SpellMiniGameSpark.LogSpellMinigameData // (Final|Native|Public|BlueprintCallable) // @ game+0x32c9fc0
	struct FVector2D GetVelocity(); // Function Phoenix.SpellMiniGameSpark.GetVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a920
	float GetTotalDistanceAsPercent(); // Function Phoenix.SpellMiniGameSpark.GetTotalDistanceAsPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a900
	struct FVector2D GetPosition(); // Function Phoenix.SpellMiniGameSpark.GetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a800
	float GetOrientation(); // Function Phoenix.SpellMiniGameSpark.GetOrientation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x335d770
	float GetNextAngleTowardsDirection(float CurrentAngle, struct FVector2D& TargetDirection, float& SmoothSpeed, float& MaxSmoothAngle); // Function Phoenix.SpellMiniGameSpark.GetNextAngleTowardsDirection // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a660
	bool GetIsBoosting(); // Function Phoenix.SpellMiniGameSpark.GetIsBoosting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a580
	float GetDistanceAlongPathSegment(struct FSpellUnlockMiniGamePathSegment PathSegment); // Function Phoenix.SpellMiniGameSpark.GetDistanceAlongPathSegment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a350
	struct FVector2D GetDirection(); // Function Phoenix.SpellMiniGameSpark.GetDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a270
	struct FVector2D GetCurrentPositionOnPath(); // Function Phoenix.SpellMiniGameSpark.GetCurrentPositionOnPath // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x335d660
	int32_t GetCurrentPathSegmentIndex(); // Function Phoenix.SpellMiniGameSpark.GetCurrentPathSegmentIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a250
	struct FSpellUnlockMiniGamePathSegment GetCurrentPathSegment(); // Function Phoenix.SpellMiniGameSpark.GetCurrentPathSegment // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a210
	float GetCurrentDistanceAlongPath(); // Function Phoenix.SpellMiniGameSpark.GetCurrentDistanceAlongPath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a1f0
	float GetActiveSpeedScale(); // Function Phoenix.SpellMiniGameSpark.GetActiveSpeedScale // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x347a130
	void ApplyBoost(); // Function Phoenix.SpellMiniGameSpark.ApplyBoost // (Final|Native|Public|BlueprintCallable) // @ game+0x34799d0
};

// Class Phoenix.SpellSelectionDiamondBase
// Size: 0x280 (Inherited: 0x268)
struct USpellSelectionDiamondBase : UUserWidget {
	int32_t SelectedIndex; // 0x268(0x04)
	char pad_26C[0x14]; // 0x26c(0x14)

	void SlotNewItem(struct FString NewItem, struct FString Variation, struct FName ItemHolder, int32_t Count, enum class EUIQActionBarType Type); // Function Phoenix.SpellSelectionDiamondBase.SlotNewItem // (Final|Native|Public|BlueprintCallable) // @ game+0x347b720
	void SetSelectedIndex(int32_t Index); // Function Phoenix.SpellSelectionDiamondBase.SetSelectedIndex // (Final|Native|Public) // @ game+0x347b690
	void CollectItemData(int32_t GroupIndex); // Function Phoenix.SpellSelectionDiamondBase.CollectItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x3479bd0
	void AddItemToWidgetArray(struct USelectionRingItemBase* Widget); // Function Phoenix.SpellSelectionDiamondBase.AddItemToWidgetArray // (Final|Native|Public|BlueprintCallable) // @ game+0x3244230
};

// Class Phoenix.SpellSlotAssignScreen
// Size: 0x370 (Inherited: 0x370)
struct USpellSlotAssignScreen : UScreen {
};

// Class Phoenix.SpellToolRecord
// Size: 0x98 (Inherited: 0x50)
struct USpellToolRecord : UToolRecord {
	struct TSoftClassPtr<UObject> SpellTool; // 0x50(0x28)
	struct FName AudioSwitchName; // 0x78(0x08)
	char pad_80[0x18]; // 0x80(0x18)

	void LoadComplete(); // Function Phoenix.SpellToolRecord.LoadComplete // (Final|Native|Public) // @ game+0x347e540
};

// Class Phoenix.SpellUpgradeScreen
// Size: 0x3e8 (Inherited: 0x3c8)
struct USpellUpgradeScreen : UTabPageWidget {
	struct TArray<struct UIconButtonWidget*> Spells; // 0x3c8(0x10)
	struct UUniformGridPanel* SpellPanel; // 0x3d8(0x08)
	char pad_3E0[0x8]; // 0x3e0(0x08)

	void OnSynchronizeProperties(); // Function Phoenix.SpellUpgradeScreen.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAttachWand(); // Function Phoenix.SpellUpgradeScreen.OnAttachWand // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SphinxPuzzle
// Size: 0x2e8 (Inherited: 0x2b0)
struct ASphinxPuzzle : AWorldObject {
	struct UInteractiveObjectComponent* InteractiveObjectComponent; // 0x2b0(0x08)
	struct FString GuidString; // 0x2b8(0x10)
	struct FString PuzzleTypeName; // 0x2c8(0x10)
	char pad_2D8[0x10]; // 0x2d8(0x10)

	void NotifyBeginPuzzle(enum class EInteractiveState State); // Function Phoenix.SphinxPuzzle.NotifyBeginPuzzle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CleanUpObject(struct AActor* actorToDestroy); // Function Phoenix.SphinxPuzzle.CleanUpObject // (Final|Native|Public) // @ game+0x1480ed0
};

// Class Phoenix.SphinxPuzzleManager
// Size: 0xa8 (Inherited: 0xa8)
struct USphinxPuzzleManager : UPhxDbRegistryTypeManager {

	struct FVector FlipendoPuzzle_GetRotationFromHitLocation(struct USceneComponent* BlockComponent, struct FVector& HitLocation); // Function Phoenix.SphinxPuzzleManager.FlipendoPuzzle_GetRotationFromHitLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x347e1e0
};

// Class Phoenix.Spider_AttackChoice_RockThrowBackup
// Size: 0x28 (Inherited: 0x28)
struct USpider_AttackChoice_RockThrowBackup : UEnemy_AttackChoice {
};

// Class Phoenix.SpiderSniper_SpitWebs_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct USpiderSniper_SpitWebs_AttackChoice : UEnemy_AttackChoice {
};

// Class Phoenix.abl_SpiderAttack_SubScratchPad
// Size: 0x30 (Inherited: 0x28)
struct Uabl_SpiderAttack_SubScratchPad : UablExecuteTaskSubScratchPad {
	struct UEnemy_SpawnSpiders* SpawnSpidersPtr; // 0x28(0x08)
};

// Class Phoenix.Spider_SpawnAttack_ExecuteTask
// Size: 0x58 (Inherited: 0x28)
struct USpider_SpawnAttack_ExecuteTask : UExecuteTask {
	bool bDeathSpawn; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t bDeathSpawnCount; // 0x2c(0x04)
	int32_t bDeathSpawnDeviation; // 0x30(0x04)
	float SpawnInterval; // 0x34(0x04)
	float SpawnAngleFromRange; // 0x38(0x04)
	float SpawnAngleDeviation; // 0x3c(0x04)
	float SpawnDist; // 0x40(0x04)
	float SpawnLandDist; // 0x44(0x04)
	float SpawnLandDistVariance; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct UEnemy_SpawnSpiders* SpawnSpidersPtr; // 0x50(0x08)
};

// Class Phoenix.SpiderEggs
// Size: 0x5c0 (Inherited: 0x248)
struct ASpiderEggs : AActor {
	struct UStaticMeshComponent* SM_SpiderEggs_A_Broken; // 0x248(0x08)
	struct USkeletalMeshComponent* SK_SpiderEggs_01; // 0x250(0x08)
	struct USphereComponent* ActivationRadiusSphere; // 0x258(0x08)
	struct USphereComponent* ProximitySphere; // 0x260(0x08)
	struct USphereComponent* StealthActivationSphere; // 0x268(0x08)
	struct UParticleSystemComponent* LitFlames; // 0x270(0x08)
	struct UParticleSystemComponent* VFX_P_Spider_Pro_Impact_Ground_3; // 0x278(0x08)
	struct UAkComponent* Ak_BP_SpiderEggs; // 0x280(0x08)
	struct UStaticMeshComponent* Base; // 0x288(0x08)
	struct UArrowComponent* SpawnAngle; // 0x290(0x08)
	struct UParticleSystemComponent* SacFire; // 0x298(0x08)
	struct UNiagaraComponent* IncendioFire; // 0x2a0(0x08)
	struct ULootDropComponent* LootDrop; // 0x2a8(0x08)
	struct UEnemyStateComponent* EnemyState; // 0x2b0(0x08)
	struct UCognitionStimuliSourceComponent* CognitionStimuliSource; // 0x2b8(0x08)
	bool bIsActive; // 0x2c0(0x01)
	bool bIsBreathing; // 0x2c1(0x01)
	bool bIsPulsing; // 0x2c2(0x01)
	bool bIsOnfire; // 0x2c3(0x01)
	bool bWasKilledByFire; // 0x2c4(0x01)
	bool bIsFrozen; // 0x2c5(0x01)
	bool bIsArrested; // 0x2c6(0x01)
	bool bWasKilled; // 0x2c7(0x01)
	bool bHeavyBlow; // 0x2c8(0x01)
	bool bFireJustStarted; // 0x2c9(0x01)
	bool bAlertProcessed; // 0x2ca(0x01)
	char pad_2CB[0x1]; // 0x2cb(0x01)
	float mBreathStartTime; // 0x2cc(0x04)
	struct TArray<struct AActor*> mActorsInRadius; // 0x2d0(0x10)
	float mActivationRadius; // 0x2e0(0x04)
	float mStealthActivationRadius; // 0x2e4(0x04)
	float mBurstTime; // 0x2e8(0x04)
	float mBurstDelay; // 0x2ec(0x04)
	char pad_2F0[0x38]; // 0x2f0(0x38)
	struct TArray<struct ASpiderEggs*> mNearbyEggsForAlert; // 0x328(0x10)
	float mNearEggAlertRadius; // 0x338(0x04)
	float mNearEggAlertTime; // 0x33c(0x04)
	float mNearEggAlertDelay; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct TArray<struct ASpiderEggs*> mProximityEggs; // 0x348(0x10)
	float mProximityRadius; // 0x358(0x04)
	float mForceBurstTime; // 0x35c(0x04)
	float mForceBurstDelay; // 0x360(0x04)
	char pad_364[0x4]; // 0x364(0x04)
	struct FTimerHandle mForceBurstHandle; // 0x368(0x08)
	struct FVector2D mSpiderSpawnRange; // 0x370(0x08)
	float mExplodeDamage; // 0x378(0x04)
	float mExplodeRadius; // 0x37c(0x04)
	float mDamageDelay; // 0x380(0x04)
	struct FVector mInitialScale; // 0x384(0x0c)
	char pad_390[0x18]; // 0x390(0x18)
	bool bAllowDebug; // 0x3a8(0x01)
	bool bHideBase; // 0x3a9(0x01)
	bool bIsBurst; // 0x3aa(0x01)
	bool bSpawnSpidersOnExplode; // 0x3ab(0x01)
	bool bSpawnWhenHit; // 0x3ac(0x01)
	bool bIgnoreTriggerSphere; // 0x3ad(0x01)
	enum class ESpiderTypeEnum mSpidersToSpawn; // 0x3ae(0x01)
	char pad_3AF[0x1]; // 0x3af(0x01)
	float mSpawnAngleSpread; // 0x3b0(0x04)
	float mSpawnLandDistance; // 0x3b4(0x04)
	bool bSpawnLootOnExplode; // 0x3b8(0x01)
	char pad_3B9[0x3]; // 0x3b9(0x03)
	float mLootChance; // 0x3bc(0x04)
	struct FTransform mSpawnTransform; // 0x3c0(0x30)
	float mDamageAmount; // 0x3f0(0x04)
	float mFireLifetime; // 0x3f4(0x04)
	float mFireDamage; // 0x3f8(0x04)
	float mBreathingAnimSpeed; // 0x3fc(0x04)
	float mPulsingAnimSpeed; // 0x400(0x04)
	float mAsyncLoadRadius; // 0x404(0x04)
	struct TSoftClassPtr<UObject> mST_Woodlouse_Class; // 0x408(0x28)
	struct TSoftClassPtr<UObject> mST_Venomous_Class; // 0x430(0x28)
	struct TSoftClassPtr<UObject> mST_Luminous_Class; // 0x458(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> mAkEvent_ExplodeRef; // 0x480(0x28)
	struct TSoftObjectPtr<UNiagaraSystem> mNiagara_HeavyFireBurstEffectRef; // 0x4a8(0x28)
	struct TSoftObjectPtr<UNiagaraSystem> mNiagara_FirePopEffectRef; // 0x4d0(0x28)
	struct TSoftObjectPtr<UNiagaraSystem> mNiagara_FrozenBurstEffectRef; // 0x4f8(0x28)
	struct TSoftObjectPtr<UNiagaraSystem> mNiagara_DamagedEffectRef; // 0x520(0x28)
	struct TArray<struct UInteractionArchitectAsset*> mFireDamageMunitions; // 0x548(0x10)
	struct UInterface* mExplodeIgnoreInterface; // 0x558(0x08)
	struct AMunitionType_Base* mExplodeMunition; // 0x560(0x08)
	struct TArray<struct APerceptionPointArea*> StayInVolumeList; // 0x568(0x10)
	bool bCanRemoveStayInVolumes; // 0x578(0x01)
	char pad_579[0x3]; // 0x579(0x03)
	float StayInRadius; // 0x57c(0x04)
	float StayInVolumeTeleportTimeout; // 0x580(0x04)
	bool bStayInVolumeOffNavTeleport; // 0x584(0x01)
	char pad_585[0xb]; // 0x585(0x0b)
	struct UAkAudioEvent* mAkEvent_Explode; // 0x590(0x08)
	struct UNiagaraSystem* mNiagara_HeavyFireBurstEffect; // 0x598(0x08)
	struct UNiagaraSystem* mNiagara_FirePopEffect; // 0x5a0(0x08)
	struct UNiagaraSystem* mNiagara_FrozenBurstEffect; // 0x5a8(0x08)
	struct UNiagaraSystem* mNiagara_DamagedEffect; // 0x5b0(0x08)
	char pad_5B8[0x8]; // 0x5b8(0x08)

	void OnStopPulse(); // Function Phoenix.SpiderEggs.OnStopPulse // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnStartPulse(); // Function Phoenix.SpiderEggs.OnStartPulse // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnOverlapEnd_StealthActivationSphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SpiderEggs.OnOverlapEnd_StealthActivationSphere // (Final|Native|Public) // @ game+0x347ef10
	void OnOverlapEnd_ProximitySphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SpiderEggs.OnOverlapEnd_ProximitySphere // (Final|Native|Public|BlueprintCallable) // @ game+0x347edb0
	void OnOverlapEnd_ActivationSphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SpiderEggs.OnOverlapEnd_ActivationSphere // (Final|Native|Public|BlueprintCallable) // @ game+0x347ec50
	void OnOverlapBegin_StealthActivationSphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SpiderEggs.OnOverlapBegin_StealthActivationSphere // (Final|Native|Public|HasOutParms) // @ game+0x347ea30
	void OnOverlapBegin_ProximitySphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SpiderEggs.OnOverlapBegin_ProximitySphere // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x347e810
	void OnOverlapBegin_ActivationSphere(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SpiderEggs.OnOverlapBegin_ActivationSphere // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x347e5f0
	void OnBurst(); // Function Phoenix.SpiderEggs.OnBurst // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _UpdateObjectState(); // Function Phoenix.SpiderEggs._UpdateObjectState // (Final|Native|Public|BlueprintCallable) // @ game+0x347f960
	void _StopPulse(); // Function Phoenix.SpiderEggs._StopPulse // (Final|Native|Public|BlueprintCallable) // @ game+0x347f940
	void _StopMotion(); // Function Phoenix.SpiderEggs._StopMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x347f920
	void _StopForceBurstDelay(); // Function Phoenix.SpiderEggs._StopForceBurstDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x347f900
	void _StopFireLight(); // Function Phoenix.SpiderEggs._StopFireLight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _StopFire(); // Function Phoenix.SpiderEggs._StopFire // (Final|Native|Public|BlueprintCallable) // @ game+0x347f8e0
	void _StopExplodeDelay(); // Function Phoenix.SpiderEggs._StopExplodeDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x347f8c0
	void _StopBreathing(); // Function Phoenix.SpiderEggs._StopBreathing // (Final|Native|Public|BlueprintCallable) // @ game+0x347f8a0
	void _StopAlertDelay(); // Function Phoenix.SpiderEggs._StopAlertDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x347f880
	void _StartTimerDelays(); // Function Phoenix.SpiderEggs._StartTimerDelays // (Final|Native|Public|BlueprintCallable) // @ game+0x347f860
	void _StartPulse(); // Function Phoenix.SpiderEggs._StartPulse // (Final|Native|Public|BlueprintCallable) // @ game+0x347f840
	void _StartMotion(); // Function Phoenix.SpiderEggs._StartMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x347f820
	void _StartForceBurstDelay(); // Function Phoenix.SpiderEggs._StartForceBurstDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x347f800
	void _StartFireLight(); // Function Phoenix.SpiderEggs._StartFireLight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _StartExplode(); // Function Phoenix.SpiderEggs._StartExplode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _StartBurst(); // Function Phoenix.SpiderEggs._StartBurst // (Final|Native|Public|BlueprintCallable) // @ game+0x347f300
	void _StartBreathing(); // Function Phoenix.SpiderEggs._StartBreathing // (Final|Native|Public|BlueprintCallable) // @ game+0x347f7e0
	void _SpawnLoot(); // Function Phoenix.SpiderEggs._SpawnLoot // (Final|Native|Public|BlueprintCallable) // @ game+0x347f7c0
	void _SpawnEnemies(); // Function Phoenix.SpiderEggs._SpawnEnemies // (Final|Native|Public|BlueprintCallable) // @ game+0x347f7a0
	void _SetupParamsForSpawnType(); // Function Phoenix.SpiderEggs._SetupParamsForSpawnType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void _ResumePulse(); // Function Phoenix.SpiderEggs._ResumePulse // (Final|Native|Public|BlueprintCallable) // @ game+0x347f780
	void _ResumeMotion(); // Function Phoenix.SpiderEggs._ResumeMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x347f760
	void _ResumeBreathing(); // Function Phoenix.SpiderEggs._ResumeBreathing // (Final|Native|Public|BlueprintCallable) // @ game+0x347f740
	bool _RemoveActorInRadius(struct AActor* InActor, bool RemoveAll); // Function Phoenix.SpiderEggs._RemoveActorInRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x347f670
	void _PropagateFire(); // Function Phoenix.SpiderEggs._PropagateFire // (Final|Native|Public|BlueprintCallable) // @ game+0x347f650
	void _PrintDebug(struct FString Name, float Value); // Function Phoenix.SpiderEggs._PrintDebug // (Final|Native|Public|BlueprintCallable) // @ game+0x347f520
	void _PlayExplodeEffects(); // Function Phoenix.SpiderEggs._PlayExplodeEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x347f500
	void _PlayDamagedEffects(float InDamage); // Function Phoenix.SpiderEggs._PlayDamagedEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x347f480
	void _PausePulse(); // Function Phoenix.SpiderEggs._PausePulse // (Final|Native|Public|BlueprintCallable) // @ game+0x347f460
	void _PauseMotion(); // Function Phoenix.SpiderEggs._PauseMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x347f440
	void _PauseBreathing(); // Function Phoenix.SpiderEggs._PauseBreathing // (Final|Native|Public|BlueprintCallable) // @ game+0x347f420
	void _LightFire(); // Function Phoenix.SpiderEggs._LightFire // (Final|Native|Public|BlueprintCallable) // @ game+0x347f400
	bool _IsPausedBySpell(); // Function Phoenix.SpiderEggs._IsPausedBySpell // (Final|Native|Public|BlueprintCallable) // @ game+0x347f3d0
	void _HideEggSacMesh(); // Function Phoenix.SpiderEggs._HideEggSacMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x347f3b0
	void _HideBaseMesh(); // Function Phoenix.SpiderEggs._HideBaseMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x347f390
	void _HeavyBlowExplode(); // Function Phoenix.SpiderEggs._HeavyBlowExplode // (Final|Native|Public|BlueprintCallable) // @ game+0x347f370
	bool _HasActorsInRadius(); // Function Phoenix.SpiderEggs._HasActorsInRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x347f340
	void _ForceBurstStart(); // Function Phoenix.SpiderEggs._ForceBurstStart // (Final|Native|Public|BlueprintCallable) // @ game+0x347f320
	void _ForceBurst(); // Function Phoenix.SpiderEggs._ForceBurst // (Final|Native|Public|BlueprintCallable) // @ game+0x347f300
	void _FireTick(); // Function Phoenix.SpiderEggs._FireTick // (Final|Native|Public|BlueprintCallable) // @ game+0x347f2e0
	void _Fire(); // Function Phoenix.SpiderEggs._Fire // (Final|Native|Public|BlueprintCallable) // @ game+0x347f2c0
	struct FTransform _FindValidEnemySpawn(); // Function Phoenix.SpiderEggs._FindValidEnemySpawn // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x347f260
	void _Explode(); // Function Phoenix.SpiderEggs._Explode // (Final|Native|Public|BlueprintCallable) // @ game+0x347f240
	void _DoDamageOnExplode(); // Function Phoenix.SpiderEggs._DoDamageOnExplode // (Final|Native|Public|BlueprintCallable) // @ game+0x347f220
	void _DoDamageFire(); // Function Phoenix.SpiderEggs._DoDamageFire // (Final|Native|Public|BlueprintCallable) // @ game+0x347f200
	void _CancelExplode(); // Function Phoenix.SpiderEggs._CancelExplode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _CallDispatcher(); // Function Phoenix.SpiderEggs._CallDispatcher // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void _AlertNearby(); // Function Phoenix.SpiderEggs._AlertNearby // (Final|Native|Public|BlueprintCallable) // @ game+0x347f1e0
	bool _AddActorInRadius(struct AActor* InActor); // Function Phoenix.SpiderEggs._AddActorInRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x347f140
	void _ActivateObject(); // Function Phoenix.SpiderEggs._ActivateObject // (Final|Native|Public|BlueprintCallable) // @ game+0x347f120
};

// Class Phoenix.SpiderRunAt_MobilityChoice
// Size: 0x30 (Inherited: 0x28)
struct USpiderRunAt_MobilityChoice : UNPC_MobilityChoice {
	float ChangeDist; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.SpiderSpawn_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct USpiderSpawn_AttackChoice : UEnemy_AttackChoice {
};

// Class Phoenix.ActivateDOV_AttackChoice
// Size: 0x28 (Inherited: 0x28)
struct UActivateDOV_AttackChoice : UEnemy_AttackChoice {
};

// Class Phoenix.SpiderWeb_EggSack
// Size: 0x380 (Inherited: 0x258)
struct ASpiderWeb_EggSack : AStaticMeshActor {
	bool bBroken; // 0x258(0x01)
	bool bFrozen; // 0x259(0x01)
	bool bOnFire; // 0x25a(0x01)
	bool bSpawnObject; // 0x25b(0x01)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct FString ObjectDBID; // 0x260(0x10)
	float LootChance; // 0x270(0x04)
	float SpiderChance; // 0x274(0x04)
	enum class ESpiderTypeEnum SpiderType; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	int32_t BaseSpiderNum; // 0x27c(0x04)
	int32_t SpiderNumVariance; // 0x280(0x04)
	float ExplodeDelay; // 0x284(0x04)
	float ExplosionDamage; // 0x288(0x04)
	float ExplosionRadius; // 0x28c(0x04)
	float OnFireExplosionDamage; // 0x290(0x04)
	float OnFireExplosionRadius; // 0x294(0x04)
	float AccioTime; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct TArray<enum class EObjectTypeQuery> OverlapActorTypes; // 0x2a0(0x10)
	struct TArray<struct AActor*> IgnoreActors; // 0x2b0(0x10)
	struct TArray<struct UInteractionArchitectAsset*> ExplodeMunition; // 0x2c0(0x10)
	struct FHitResult BlankHit; // 0x2d0(0x88)
	struct FBTCustomAction StumbleAction; // 0x358(0x0c)
	struct FVariantMapHandle ActionMapHandle; // 0x364(0x04)
	struct UEnemy_SpawnSpiders* EnemySpiders; // 0x368(0x08)
	char pad_370[0x10]; // 0x370(0x10)

	void StartAccioTimer(bool i_Start); // Function Phoenix.SpiderWeb_EggSack.StartAccioTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x347f090
	void SpawnSpiders(); // Function Phoenix.SpiderWeb_EggSack.SpawnSpiders // (Final|Native|Protected|BlueprintCallable) // @ game+0x347f070
	void SpawnLoot(); // Function Phoenix.SpiderWeb_EggSack.SpawnLoot // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SpawnEnemySpiders(); // Function Phoenix.SpiderWeb_EggSack.SpawnEnemySpiders // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SpawnDBObject(); // Function Phoenix.SpiderWeb_EggSack.SpawnDBObject // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnBreak(bool i_Explode); // Function Phoenix.SpiderWeb_EggSack.OnBreak // (Final|Native|Public|BlueprintCallable) // @ game+0x347e560
	void InitializeSack(float i_LootChance, float i_SpiderChance, enum class ESpiderTypeEnum i_SpiderType, int32_t i_SpiderBaseNum, int32_t i_SpiderNumVariation, bool i_bObjectNotSpiders, struct FString i_ObjectDBID); // Function Phoenix.SpiderWeb_EggSack.InitializeSack // (Final|Native|Public|BlueprintCallable) // @ game+0x347e2c0
	void ExplodeSack(); // Function Phoenix.SpiderWeb_EggSack.ExplodeSack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x347e1c0
	void AccioBreak(); // Function Phoenix.SpiderWeb_EggSack.AccioBreak // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpiderWeb_HangingBase
// Size: 0x348 (Inherited: 0x2b0)
struct ASpiderWeb_HangingBase : AWorldObject {
	float CableLength; // 0x2b0(0x04)
	float LootChance; // 0x2b4(0x04)
	bool bSpawnObject; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct FString ObjectDBID; // 0x2c0(0x10)
	bool bSpawnSpiders; // 0x2d0(0x01)
	enum class ESpiderTypeEnum SpiderType; // 0x2d1(0x01)
	char pad_2D2[0x2]; // 0x2d2(0x02)
	float SpiderChance; // 0x2d4(0x04)
	int32_t BaseSpiderNum; // 0x2d8(0x04)
	int32_t SpiderNumVariance; // 0x2dc(0x04)
	struct UParticleSystem* SnapParticle; // 0x2e0(0x08)
	float ExtraCableLength; // 0x2e8(0x04)
	float CableLengthTick; // 0x2ec(0x04)
	int32_t DescendoCount; // 0x2f0(0x04)
	bool bBroken; // 0x2f4(0x01)
	char pad_2F5[0x3]; // 0x2f5(0x03)
	struct UStaticMeshComponent* AnchorComp; // 0x2f8(0x08)
	struct UPoseableMeshComponent* PosableMeshComp; // 0x300(0x08)
	struct UPhysicsConstraintComponent* PhysicsConstraintComp; // 0x308(0x08)
	struct ASpiderWeb_EggSack* SpawnedSack; // 0x310(0x08)
	struct UStaticMeshComponent* SackMeshComp; // 0x318(0x08)
	struct USceneComponent* TargetComp; // 0x320(0x08)
	struct FVector WebEndLoc; // 0x328(0x0c)
	char pad_334[0x14]; // 0x334(0x14)

	void WingardiumStart(bool i_Start); // Function Phoenix.SpiderWeb_HangingBase.WingardiumStart // (Final|Native|Private|BlueprintCallable) // @ game+0x3483570
	void WebRetract(); // Function Phoenix.SpiderWeb_HangingBase.WebRetract // (Final|Native|Private) // @ game+0x34834e0
	void WakeTick(bool i_Wake); // Function Phoenix.SpiderWeb_HangingBase.WakeTick // (Final|Native|Private|BlueprintCallable) // @ game+0x34832e0
	void StartWebRetract(); // Function Phoenix.SpiderWeb_HangingBase.StartWebRetract // (Final|Native|Private) // @ game+0x3483090
	void ScaleStart(bool i_Start, bool i_ScaleUp); // Function Phoenix.SpiderWeb_HangingBase.ScaleStart // (Final|Native|Private|BlueprintCallable) // @ game+0x34828b0
	void EndWebRetract(); // Function Phoenix.SpiderWeb_HangingBase.EndWebRetract // (Final|Native|Private) // @ game+0x34814f0
	void DescendoHit(); // Function Phoenix.SpiderWeb_HangingBase.DescendoHit // (Final|Native|Private|BlueprintCallable) // @ game+0x34814b0
	void BreakConnection(bool i_Explode); // Function Phoenix.SpiderWeb_HangingBase.BreakConnection // (Final|Native|Private|BlueprintCallable) // @ game+0x3481400
	void AccioStart(bool i_Start, float i_Time); // Function Phoenix.SpiderWeb_HangingBase.AccioStart // (Final|Native|Private|BlueprintCallable) // @ game+0x3481330
	void AccioPull(); // Function Phoenix.SpiderWeb_HangingBase.AccioPull // (Final|Native|Private) // @ game+0x3481310
};

// Class Phoenix.SpiderWeb_Interactive
// Size: 0x470 (Inherited: 0x2b0)
struct ASpiderWeb_Interactive : AWorldObject {
	enum class ETargetSpeedMode CharSpeedMode; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	float WebLinearDamping; // 0x2b4(0x04)
	float WebAngularDamping; // 0x2b8(0x04)
	bool bReactiveMaterials; // 0x2bc(0x01)
	bool bDebugBurnSphere; // 0x2bd(0x01)
	char pad_2BE[0x2]; // 0x2be(0x02)
	float PercentageDisableCollision; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct TArray<struct UPrimitiveComponent*> WebbedComponents; // 0x2c8(0x10)
	struct TArray<struct AAble_Character*> WebbedRagdolls; // 0x2d8(0x10)
	struct TMap<struct UPrimitiveComponent*, enum class ECollisionChannel> ObjectTypeMap; // 0x2e8(0x50)
	struct TMap<struct UPrimitiveComponent*, struct FName> CollisionPresetMap; // 0x338(0x50)
	struct TArray<struct ACharacter*> NearbyCharacters; // 0x388(0x10)
	struct TArray<struct UAmbulatory_MovementComponent*> CharMovementComps; // 0x398(0x10)
	char pad_3A8[0x10]; // 0x3a8(0x10)
	struct TArray<struct ACharacter*> CharsToRemove; // 0x3b8(0x10)
	struct TArray<struct AActor*> BurnActors; // 0x3c8(0x10)
	bool bFrozen; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)
	struct UMaterialInstanceDynamic* InMatDynamic; // 0x3e0(0x08)
	struct UMaterialInstanceDynamic* OutMatDynamic; // 0x3e8(0x08)
	struct UPrimitiveComponent* PhysicsTarget; // 0x3f0(0x08)
	struct USkeletalMeshComponent* SkeletalTarget; // 0x3f8(0x08)
	struct FName SkeletalTargetBone; // 0x400(0x08)
	float BurnRate; // 0x408(0x04)
	char pad_40C[0x4]; // 0x40c(0x04)
	struct UPrimitiveComponent* RootComp; // 0x410(0x08)
	struct UObjectStateInfo* WebObjectState; // 0x418(0x08)
	struct USphereComponent* BurnSphere; // 0x420(0x08)
	float BurnDist; // 0x428(0x04)
	float BurnDistNeeded; // 0x42c(0x04)
	struct FVector BurnOrigin; // 0x430(0x0c)
	char pad_43C[0x4]; // 0x43c(0x04)
	struct TArray<struct AActor*> IgnoreBurnActors; // 0x440(0x10)
	char pad_450[0x20]; // 0x450(0x20)

	void WebThaw(); // Function Phoenix.SpiderWeb_Interactive.WebThaw // (Final|Native|Private|BlueprintCallable) // @ game+0x3483500
	void WebFreeze(); // Function Phoenix.SpiderWeb_Interactive.WebFreeze // (Final|Native|Private|BlueprintCallable) // @ game+0x3483440
	void WebBurn(struct FVector burnLoc); // Function Phoenix.SpiderWeb_Interactive.WebBurn // (Final|Native|Private|HasDefaults|BlueprintCallable) // @ game+0x3483370
	void WakeCompBody(struct UPrimitiveComponent* PrimComp); // Function Phoenix.SpiderWeb_Interactive.WakeCompBody // (Final|Native|Private) // @ game+0x3483250
	void UnDamp(struct UPrimitiveComponent* PrimComp); // Function Phoenix.SpiderWeb_Interactive.UnDamp // (Final|Native|Private) // @ game+0x34830b0
	void StartSkeletalMat(struct ABiped_Character* SkelActor); // Function Phoenix.SpiderWeb_Interactive.StartSkeletalMat // (Final|Native|Private) // @ game+0x3482f70
	void StartPhysicsMat(struct UPrimitiveComponent* HitComp); // Function Phoenix.SpiderWeb_Interactive.StartPhysicsMat // (Final|Native|Private) // @ game+0x3482e50
	void SkeletalMat(); // Function Phoenix.SpiderWeb_Interactive.SkeletalMat // (Final|Native|Private) // @ game+0x3482d20
	void PhysicsMat(); // Function Phoenix.SpiderWeb_Interactive.PhysicsMat // (Final|Native|Private) // @ game+0x3482850
	void PhysicsHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.SpiderWeb_Interactive.PhysicsHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x3482490
	void OnWebOverlapEnd(struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp); // Function Phoenix.SpiderWeb_Interactive.OnWebOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x34823c0
	void OnWebOverlapBegin(struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp); // Function Phoenix.SpiderWeb_Interactive.OnWebOverlapBegin // (Final|Native|Private|BlueprintCallable) // @ game+0x34822f0
	void OnFullyCharred(bool bCharred); // Function Phoenix.SpiderWeb_Interactive.OnFullyCharred // (Final|Native|Private|BlueprintCallable) // @ game+0x3481bf0
	void OnFireOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SpiderWeb_Interactive.OnFireOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3481a00
	void OnFireOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SpiderWeb_Interactive.OnFireOverlapBegin // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x34817e0
	void InitFireOverlap(); // Function Phoenix.SpiderWeb_Interactive.InitFireOverlap // (Final|Native|Private) // @ game+0x3481670
	struct FTransform GetRelativeTransform(struct UPrimitiveComponent* PrimComp, struct FVector FireLocation); // Function Phoenix.SpiderWeb_Interactive.GetRelativeTransform // (Final|Native|Private|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3481550
	struct FVector GetCollisionScale(); // Function Phoenix.SpiderWeb_Interactive.GetCollisionScale // (Final|Native|Private|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3481510
	void DestroyWeb(); // Function Phoenix.SpiderWeb_Interactive.DestroyWeb // (Final|Native|Private) // @ game+0x34814d0
	void CreatePhysicsConstraint(struct UPrimitiveComponent* PrimComp); // Function Phoenix.SpiderWeb_Interactive.CreatePhysicsConstraint // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void CreateBonePhysicsConstraint(struct USkeletalMeshComponent* skelComp, struct FName BoneName); // Function Phoenix.SpiderWeb_Interactive.CreateBonePhysicsConstraint // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SpiderWeb_Spawner
// Size: 0x290 (Inherited: 0x248)
struct ASpiderWeb_Spawner : AActor {
	struct ADynamicObjectVolume* SpawnerVolume; // 0x248(0x08)
	float SpawnTime; // 0x250(0x04)
	bool bDestroyOnSpawn; // 0x254(0x01)
	bool bIgnoreType; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	struct FString IgnoreTypeName; // 0x258(0x10)
	bool bBurning; // 0x268(0x01)
	bool bFrozen; // 0x269(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	struct FName SpawnGroupName; // 0x26c(0x08)
	int32_t SpawnNum; // 0x274(0x04)
	char pad_278[0x18]; // 0x278(0x18)

	bool WebThaw(); // Function Phoenix.SpiderWeb_Spawner.WebThaw // (Final|Native|Private|BlueprintCallable) // @ game+0x3483520
	void WebHit(); // Function Phoenix.SpiderWeb_Spawner.WebHit // (Final|Native|Private|BlueprintCallable) // @ game+0x34834a0
	void WebFreeze(); // Function Phoenix.SpiderWeb_Spawner.WebFreeze // (Final|Native|Private|BlueprintCallable) // @ game+0x3483460
	void WebBurn(); // Function Phoenix.SpiderWeb_Spawner.WebBurn // (Final|Native|Private|BlueprintCallable) // @ game+0x3483400
	void SpawnSpiders(); // Function Phoenix.SpiderWeb_Spawner.SpawnSpiders // (Final|Native|Private|BlueprintCallable) // @ game+0x3482d60
	void SetSpawner(struct ADynamicObjectVolume* newSpawner); // Function Phoenix.SpiderWeb_Spawner.SetSpawner // (Final|Native|Public|BlueprintCallable) // @ game+0x3482b30
	bool OnSpawnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.SpiderWeb_Spawner.OnSpawnOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3481fd0
	bool OnSpawnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.SpiderWeb_Spawner.OnSpawnOverlapBegin // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x3481da0
	bool IsSpider(struct AActor* checkActor); // Function Phoenix.SpiderWeb_Spawner.IsSpider // (Final|Native|Private|BlueprintCallable|BlueprintPure) // @ game+0x34816b0
	struct FTransform GetRelativeTransform(struct UStaticMeshComponent* StaticMesh, struct FVector FireLocation); // Function Phoenix.SpiderWeb_Spawner.GetRelativeTransform // (Final|Native|Private|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x3481550
};

// Class Phoenix.SpiderWeb_Spitter
// Size: 0x448 (Inherited: 0x248)
struct ASpiderWeb_Spitter : AActor {
	bool bRegen; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	float RegenTime; // 0x24c(0x04)
	float MaxWebLength; // 0x250(0x04)
	bool bAffectPawns; // 0x254(0x01)
	enum class ETargetSpeedMode CharSpeedMode; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	float WebLinearDamping; // 0x258(0x04)
	float WebAngularDamping; // 0x25c(0x04)
	bool bWebPushback; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float PushbackMaxForce; // 0x264(0x04)
	float PushbackDistance; // 0x268(0x04)
	bool bReactiveMaterials; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	struct UCapsuleComponent* StickyTrig; // 0x270(0x08)
	struct UBoxComponent* PushTrig; // 0x278(0x08)
	struct UPoseableMeshComponent* WebMesh; // 0x280(0x08)
	struct UPoseableMeshComponent* WebMesh2; // 0x288(0x08)
	struct UObjectStateInfo* WebObjectState; // 0x290(0x08)
	struct FVector WebEndLoc; // 0x298(0x0c)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TMap<struct UPrimitiveComponent*, struct UActorComponent*> WebbedCompMap; // 0x2a8(0x50)
	struct TArray<struct AAble_Character*> WebbedRagdolls; // 0x2f8(0x10)
	struct TMap<struct UPrimitiveComponent*, enum class ECollisionChannel> ObjectTypeMap; // 0x308(0x50)
	struct TMap<struct UPrimitiveComponent*, struct FName> CollisionPresetMap; // 0x358(0x50)
	struct TArray<struct ACharacter*> NearbyCharacters; // 0x3a8(0x10)
	struct TArray<struct UAmbulatory_MovementComponent*> CharMovementComps; // 0x3b8(0x10)
	char pad_3C8[0x10]; // 0x3c8(0x10)
	struct TArray<struct ACharacter*> CharsToRemove; // 0x3d8(0x10)
	bool bFrozen; // 0x3e8(0x01)
	bool bBroken; // 0x3e9(0x01)
	char pad_3EA[0x6]; // 0x3ea(0x06)
	struct UMaterialInstanceDynamic* InMatDynamic; // 0x3f0(0x08)
	struct UMaterialInstanceDynamic* OutMatDynamic; // 0x3f8(0x08)
	struct UPrimitiveComponent* PhysicsTarget; // 0x400(0x08)
	struct USkeletalMeshComponent* SkeletalTarget; // 0x408(0x08)
	struct FName SkeletalTargetBone; // 0x410(0x08)
	float StickyTrigHalfHeight; // 0x418(0x04)
	float PushbackExponent; // 0x41c(0x04)
	char pad_420[0x28]; // 0x420(0x28)

	void WebThaw(); // Function Phoenix.SpiderWeb_Spitter.WebThaw // (Final|Native|Private|BlueprintCallable) // @ game+0x3483550
	void WebRegened(); // Function Phoenix.SpiderWeb_Spitter.WebRegened // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x34834c0
	void WebFreeze(); // Function Phoenix.SpiderWeb_Spitter.WebFreeze // (Final|Native|Private|BlueprintCallable) // @ game+0x3483480
	void WebDestroyed(); // Function Phoenix.SpiderWeb_Spitter.WebDestroyed // (Final|Native|Private|BlueprintCallable) // @ game+0x3483420
	void UnDamp(struct UPrimitiveComponent* PrimComp); // Function Phoenix.SpiderWeb_Spitter.UnDamp // (Final|Native|Private) // @ game+0x3483140
	void StartSkeletalMat(struct ABiped_Character* SkelActor); // Function Phoenix.SpiderWeb_Spitter.StartSkeletalMat // (Final|Native|Private) // @ game+0x3483000
	void StartPhysicsMat(struct UPrimitiveComponent* HitComp); // Function Phoenix.SpiderWeb_Spitter.StartPhysicsMat // (Final|Native|Private) // @ game+0x3482ee0
	void SkeletalMat(); // Function Phoenix.SpiderWeb_Spitter.SkeletalMat // (Final|Native|Private) // @ game+0x3482d40
	struct FVector SetWebEnd(bool i_Retract, bool i_Lerp, float i_Alpha); // Function Phoenix.SpiderWeb_Spitter.SetWebEnd // (Final|Native|Private|HasDefaults|BlueprintCallable) // @ game+0x3482bc0
	void SetMeshTick(bool i_Tick); // Function Phoenix.SpiderWeb_Spitter.SetMeshTick // (Final|Native|Private|BlueprintCallable) // @ game+0x3482aa0
	void SetAIBlocker(bool i_block); // Function Phoenix.SpiderWeb_Spitter.SetAIBlocker // (Final|Native|Private|BlueprintCallable) // @ game+0x3482980
	void PushBack(); // Function Phoenix.SpiderWeb_Spitter.PushBack // (Final|Native|Private) // @ game+0x3482890
	void PhysicsMat(); // Function Phoenix.SpiderWeb_Spitter.PhysicsMat // (Final|Native|Private) // @ game+0x3482870
	void PhysicsHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.SpiderWeb_Spitter.PhysicsHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x3482670
	void OnStickyOverlapEnd(struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp); // Function Phoenix.SpiderWeb_Spitter.OnStickyOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3482200
	void OnStickyOverlapBegin(struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp); // Function Phoenix.SpiderWeb_Spitter.OnStickyOverlapBegin // (Final|Native|Private|BlueprintCallable) // @ game+0x3482130
	void OnPushOverlapEnd(struct AActor* OtherActor); // Function Phoenix.SpiderWeb_Spitter.OnPushOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x3481d10
	void OnPushOverlapBegin(struct AActor* OtherActor); // Function Phoenix.SpiderWeb_Spitter.OnPushOverlapBegin // (Final|Native|Private|BlueprintCallable) // @ game+0x3481c80
	void InitOverlap(); // Function Phoenix.SpiderWeb_Spitter.InitOverlap // (Final|Native|Private|BlueprintCallable) // @ game+0x3481690
	void CreatePhysicsConstraint(struct UPrimitiveComponent* PrimComp); // Function Phoenix.SpiderWeb_Spitter.CreatePhysicsConstraint // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void CreateBonePhysicsConstraint(struct USkeletalMeshComponent* skelComp, struct FName BoneName); // Function Phoenix.SpiderWeb_Spitter.CreateBonePhysicsConstraint // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SplineFollowerForAI
// Size: 0x470 (Inherited: 0x248)
struct ASplineFollowerForAI : AActor {
	struct UPathComponent* PathComponent; // 0x248(0x08)
	bool bDebugSpline; // 0x250(0x01)
	enum class EPerformTaskSplineTypes SplineType; // 0x251(0x01)
	bool bCanPlayerUseSpeedModifier; // 0x252(0x01)
	bool bStartAtSplineStart; // 0x253(0x01)
	bool bOrientTowardsPlayer; // 0x254(0x01)
	bool bInfluenceCamera; // 0x255(0x01)
	char pad_256[0x2]; // 0x256(0x02)
	char bLumosOn : 1; // 0x258(0x01)
	char pad_258_1 : 7; // 0x258(0x01)
	char pad_259[0x3]; // 0x259(0x03)
	bool bUseDetailPanelRadiusValues; // 0x25c(0x01)
	bool CasualMode; // 0x25d(0x01)
	bool JumpDisabled; // 0x25e(0x01)
	bool DodgeDisabled; // 0x25f(0x01)
	bool AimModeDisabled; // 0x260(0x01)
	bool SpellsDisabled; // 0x261(0x01)
	char pad_262[0x6]; // 0x262(0x06)
	struct TArray<struct FSplineSceneRig> SplineSceneRigs; // 0x268(0x10)
	struct ASceneRigActor* CommonInterruptParallelSceneRigActor; // 0x278(0x08)
	struct ASceneRigActor* CommonResumeParallelSceneRigActor; // 0x280(0x08)
	struct ASceneRigActor* CommonBarkParallelSceneRigActor; // 0x288(0x08)
	bool bClearParallelSceneRig; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct FDbSingleColumnInfo MissionID; // 0x298(0x88)
	int32_t MissionUID; // 0x320(0x04)
	float StartMatchingPlayerSpeedRadius; // 0x324(0x04)
	float BungeeRadius; // 0x328(0x04)
	float TickDelays; // 0x32c(0x04)
	float EntryPointDistance; // 0x330(0x04)
	int32_t HeadTrackingCounter; // 0x334(0x04)
	bool bPlayerDistanceFromSpline; // 0x338(0x01)
	bool bCanWait; // 0x339(0x01)
	char pad_33A[0x2]; // 0x33a(0x02)
	float StartWaitingProximityRadius; // 0x33c(0x04)
	float StopWaitingProximityRadius; // 0x340(0x04)
	float PlayerDistanceFromSplineForWait; // 0x344(0x04)
	float StartSlowWalkingProximityRadius; // 0x348(0x04)
	float StartWalkingProximityRadius; // 0x34c(0x04)
	char pad_350[0x4]; // 0x350(0x04)
	float StartJoggingProximityRadius; // 0x354(0x04)
	bool bRevertToOriginalSpeedMode; // 0x358(0x01)
	char pad_359[0x3]; // 0x359(0x03)
	float RevertToOrginalProximityRadius; // 0x35c(0x04)
	bool bCanInterruptVO; // 0x360(0x01)
	char pad_361[0x3]; // 0x361(0x03)
	float InterruptVOProximityRadius; // 0x364(0x04)
	float ResumeVOProximityRadius; // 0x368(0x04)
	float BarkVOProximityRadius; // 0x36c(0x04)
	struct TArray<struct FSplinePoint> SplinePointsFromOtherSpline; // 0x370(0x10)
	struct ASplineFollowerForAI* OtherSplinePath; // 0x380(0x08)
	struct FMulticastInlineDelegate OnSplineCompleted; // 0x388(0x10)
	char pad_398[0x48]; // 0x398(0x48)
	struct UCameraStackVolumePreset* CameraInfluencePreset; // 0x3e0(0x08)
	struct UCameraStackInfluenceHandle* CameraInfluenceHandle; // 0x3e8(0x08)
	char pad_3F0[0x80]; // 0x3f0(0x80)

	void UpdateSplineType(enum class EPerformTaskSplineTypes NewSplineType); // Function Phoenix.SplineFollowerForAI.UpdateSplineType // (Final|Native|Public|BlueprintCallable) // @ game+0x34831d0
	void StartAIMovementOnSpline(struct UScheduledEntity* InScheduledEntity, int32_t ActivityTypeBits); // Function Phoenix.SplineFollowerForAI.StartAIMovementOnSpline // (Final|Native|Private) // @ game+0x3482d80
	void SetLumos(bool InbLumosOn); // Function Phoenix.SplineFollowerForAI.SetLumos // (Final|Native|Public|BlueprintCallable) // @ game+0x3482a10
	void OnWaitForPlayerComplete(); // Function Phoenix.SplineFollowerForAI.OnWaitForPlayerComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x34822d0
	void OnFleshLoadComplete(struct AActor* FleshActor); // Function Phoenix.SplineFollowerForAI.OnFleshLoadComplete // (Final|Native|Private) // @ game+0x3481b60
	void MoveOnSplineFleshLoad(struct AActor* FleshActor); // Function Phoenix.SplineFollowerForAI.MoveOnSplineFleshLoad // (Final|Native|Private) // @ game+0x3481750
	void CreateSplineFromGivenPoints(); // Function Phoenix.SplineFollowerForAI.CreateSplineFromGivenPoints // (Final|Native|Public) // @ game+0x3481490
};

// Class Phoenix.SplineMover
// Size: 0x2b0 (Inherited: 0x280)
struct ASplineMover : AWorldEventActor {
	bool bIsVisibleBeforeActive; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	float Offset; // 0x284(0x04)
	float MaxVelocity; // 0x288(0x04)
	float InterpSpeed; // 0x28c(0x04)
	float Distance; // 0x290(0x04)
	float Velocity; // 0x294(0x04)
	struct USplineComponent* SplineComponent; // 0x298(0x08)
	int32_t CurrentSplinePointIndex; // 0x2a0(0x04)
	bool HasPositionUpdated; // 0x2a4(0x01)
	char pad_2A5[0xb]; // 0x2a5(0x0b)

	void DeactivateSplineMover(); // Function Phoenix.SplineMover.DeactivateSplineMover // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void ActivateSplineMover(); // Function Phoenix.SplineMover.ActivateSplineMover // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03d0
};

// Class Phoenix.SplineNavLinkComponent
// Size: 0x2b0 (Inherited: 0x280)
struct USplineNavLinkComponent : UOdcNavLinkComponent {
	struct USplineComponent* SplineComponent; // 0x280(0x08)
	struct FVector SplineLinkStart; // 0x288(0x0c)
	struct FVector SplineLinkEnd; // 0x294(0x0c)
	char pad_2A0[0x10]; // 0x2a0(0x10)

	void RegisterNavLink(); // Function Phoenix.SplineNavLinkComponent.RegisterNavLink // (Final|Native|Protected|BlueprintCallable) // @ game+0x34865c0
};

// Class Phoenix.SplineToolGenerator
// Size: 0xc8 (Inherited: 0xc8)
struct USplineToolGenerator : UActorComponent {
};

// Class Phoenix.SpringFollowComponent
// Size: 0x260 (Inherited: 0x220)
struct USpringFollowComponent : USceneComponent {
	struct FSpringFollowComponentSettings Settings; // 0x218(0x24)
	bool bAlignToVelocity; // 0x23c(0x01)
	struct FAlignToVelocity AlignToVelocity; // 0x240(0x10)
	bool bSpringActive; // 0x250(0x01)
	char pad_256[0xa]; // 0x256(0x0a)

	void ResetPhysics(); // Function Phoenix.SpringFollowComponent.ResetPhysics // (Final|Native|Public) // @ game+0x3486670
	void RemoveChildOffset(); // Function Phoenix.SpringFollowComponent.RemoveChildOffset // (Final|Native|Public) // @ game+0x34865e0
};

// Class Phoenix.SpringFollowActor
// Size: 0x260 (Inherited: 0x248)
struct ASpringFollowActor : AActor {
	bool bSpringsActive; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	float Damping; // 0x24c(0x04)
	float RadialDamping; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct USpringFollowComponent* SpringFollow; // 0x258(0x08)

	void ResetPhysics(); // Function Phoenix.SpringFollowActor.ResetPhysics // (Final|Native|Public) // @ game+0x3486650
};

// Class Phoenix.SpringFollowSwarmActor
// Size: 0x300 (Inherited: 0x248)
struct ASpringFollowSwarmActor : AActor {
	struct FSpringFollowComponentSettings SwarmerSettings; // 0x248(0x24)
	float RandomizeK; // 0x26c(0x04)
	struct FVector2D SwarmRandomizeStart; // 0x270(0x08)
	struct FVector2D SwarmRandomizeSpeed; // 0x278(0x08)
	float SwarmRepulse; // 0x280(0x04)
	float SwarmDistancePower; // 0x284(0x04)
	struct FSpringFollowComponentSettings LeaderSettings; // 0x288(0x24)
	struct FVector2D LeaderRandomizeStart; // 0x2ac(0x08)
	struct FVector2D LeaderRandomizeSpeed; // 0x2b4(0x08)
	float LeaderRepulse; // 0x2bc(0x04)
	float LeaderDistancePower; // 0x2c0(0x04)
	bool bSwarmAlignToVelocity; // 0x2c4(0x01)
	bool bLeaderAlignToVelocity; // 0x2c5(0x01)
	char pad_2C6[0x2]; // 0x2c6(0x02)
	struct FSwarmer Leader; // 0x2c8(0x28)
	struct TArray<struct FSwarmer> Swarmers; // 0x2f0(0x10)

	void Reset(); // Function Phoenix.SpringFollowSwarmActor.Reset // (Final|Native|Public) // @ game+0x31e1760
	void Generate(); // Function Phoenix.SpringFollowSwarmActor.Generate // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.StaminaMeter
// Size: 0x268 (Inherited: 0x268)
struct UStaminaMeter : UUserWidget {
};

// Class Phoenix.StartConversationNode
// Size: 0x60 (Inherited: 0x30)
struct UStartConversationNode : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ConversationStarted; // 0x30(0x10)
	struct FMulticastInlineDelegate ConversationFinished; // 0x40(0x10)
	struct TWeakObjectPtr<struct AActor> interactionActor; // 0x50(0x08)
	struct FName ConversationID; // 0x58(0x08)

	struct UStartConversationNode* StartConversation(struct AActor* interactionActor, struct FName ConversationID); // Function Phoenix.StartConversationNode.StartConversation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34867a0
};

// Class Phoenix.StartConversationWithNameNode
// Size: 0x60 (Inherited: 0x30)
struct UStartConversationWithNameNode : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ConversationStarted; // 0x30(0x10)
	struct FMulticastInlineDelegate ConversationFinished; // 0x40(0x10)
	struct FName CharacterID; // 0x50(0x08)
	struct FName ConversationID; // 0x58(0x08)

	struct UStartConversationWithNameNode* StartConversationWithName(struct FName CharacterID, struct FName ConversationID); // Function Phoenix.StartConversationWithNameNode.StartConversationWithName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3486870
};

// Class Phoenix.StartPageWidget
// Size: 0x380 (Inherited: 0x370)
struct UStartPageWidget : UScreen {
	bool CanProceed; // 0x370(0x01)
	char pad_371[0xf]; // 0x371(0x0f)

	void ShowLoginButton(bool bShow); // Function Phoenix.StartPageWidget.ShowLoginButton // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetProfileString(struct FString ProfileName); // Function Phoenix.StartPageWidget.SetProfileString // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetLoginButtonString(struct FString LoginButtonString); // Function Phoenix.StartPageWidget.SetLoginButtonString // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetIsLoggedIn(bool bIsLoggedIn); // Function Phoenix.StartPageWidget.SetIsLoggedIn // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetHydraString(struct FString ProfileName); // Function Phoenix.StartPageWidget.SetHydraString // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnUserProfileChange(struct UObject* i_caller, struct FString UserName); // Function Phoenix.StartPageWidget.OnUserProfileChange // (Final|Native|Private) // @ game+0x34864e0
	void OnStartPageOutroStarted(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.StartPageWidget.OnStartPageOutroStarted // (Final|Native|Public) // @ game+0x3486410
	void OnStartPageOutroEnded(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.StartPageWidget.OnStartPageOutroEnded // (Final|Native|Public) // @ game+0x3486340
	void OnStartPageIntroStarted(struct UPhoenixUserWidget* PhoenixWidget, int32_t IntroType); // Function Phoenix.StartPageWidget.OnStartPageIntroStarted // (Final|Native|Public) // @ game+0x3486270
};

// Class Phoenix.Station
// Size: 0x368 (Inherited: 0x2b0)
struct AStation : AWorldObject {
	char pad_2B0[0x18]; // 0x2b0(0x18)
	struct UStationComponent* StationComponent; // 0x2c8(0x08)
	struct FDbSingleColumnInfo MissionID; // 0x2d0(0x88)
	int32_t MissionUID; // 0x358(0x04)
	char pad_35C[0xc]; // 0x35c(0x0c)

	void TriggerSoloActionOnParticipants(struct AStation* InTargetStation, enum class SocialActionTypes Story, enum class SocialSemanticIDs Emotion, struct AActor* FocusActor); // Function Phoenix.Station.TriggerSoloActionOnParticipants // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3486940
	void Interact(struct UBTService_AvaAITree* AvaService); // Function Phoenix.Station.Interact // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31f9a20
	struct UStationComponent* GetStationComponent(); // Function Phoenix.Station.GetStationComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3485e20
	struct USkeletalMeshComponent* CreateAndAttachSkeletalMeshComponent(struct UAnimSequence* AnimPose, struct USceneComponent* ParentProp, struct FName SocketName); // Function Phoenix.Station.CreateAndAttachSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x34858f0
};

// Class Phoenix.StationComponent
// Size: 0x728 (Inherited: 0xc8)
struct UStationComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	bool IsDeprecated; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	int32_t m_Version; // 0xd4(0x04)
	bool m_IsActive; // 0xd8(0x01)
	enum class EStationDataType Type; // 0xd9(0x01)
	enum class ESpawnedStationTypes SpawnedStationType; // 0xda(0x01)
	char pad_DB[0x5]; // 0xdb(0x05)
	struct FDbSingleColumnInfo m_DbLocationID; // 0xe0(0x88)
	struct FDbSingleColumnInfo m_DbStudentID; // 0x168(0x88)
	struct FDbDoubleColumnInfo StationInfo; // 0x1f0(0xd8)
	struct FDbSingleColumnInfo StationPropInfo; // 0x2c8(0x88)
	struct UStaticMesh* PropStaticMesh; // 0x350(0x08)
	struct USkeletalMesh* PropSkeletalMesh; // 0x358(0x08)
	struct FDbSingleColumnInfo CollisionType; // 0x360(0x88)
	bool bDisallowSpellReactions; // 0x3e8(0x01)
	char pad_3E9[0x7]; // 0x3e9(0x07)
	struct FDbSingleColumnInfo m_DbParentLocationID; // 0x3f0(0x88)
	bool bGeneratePathing; // 0x478(0x01)
	char pad_479[0x3]; // 0x479(0x03)
	float AnimationPickingRange; // 0x47c(0x04)
	float StitchingActivateRadius; // 0x480(0x04)
	char pad_484[0x4]; // 0x484(0x04)
	struct UStoryTeller* StoryTeller; // 0x488(0x08)
	char SetupFlags; // 0x490(0x01)
	bool EavesdropStation; // 0x491(0x01)
	bool AllowT4s; // 0x492(0x01)
	char pad_493[0x5]; // 0x493(0x05)
	struct UPhxAnimationSharingSetup* T4AnimSharingSetupMaleFemale[0x2]; // 0x498(0x10)
	bool AllowStitching; // 0x4a8(0x01)
	bool bEnableIKFloorContact; // 0x4a9(0x01)
	enum class EStationPlayerInteractionPermissions PIP; // 0x4aa(0x01)
	char SetupHouseAndGender; // 0x4ab(0x01)
	char pad_4AC[0x4]; // 0x4ac(0x04)
	struct TArray<struct FDbSingleColumnInfo> ProhibitedSubTypes; // 0x4b0(0x10)
	struct TArray<struct FDbSingleColumnInfo> ExclusiveSubTypes; // 0x4c0(0x10)
	enum class EEnterExitAnimVariants EnterExitAnimations[0x9]; // 0x4d0(0x09)
	enum class EStationSnapConnectionsToGround SnapConnectionsToTerrain; // 0x4d9(0x01)
	bool CreateDynamicObstacle; // 0x4da(0x01)
	char pad_4DB[0x5]; // 0x4db(0x05)
	struct FDbSingleColumnInfo m_DbReferenceNPCID; // 0x4e0(0x88)
	enum class ECalloutActions InteractionText; // 0x568(0x01)
	bool IsVisible; // 0x569(0x01)
	enum class EVolumeType VolumeType; // 0x56a(0x01)
	char pad_56B[0x5]; // 0x56b(0x05)
	struct UPrimitiveComponent* Volume; // 0x570(0x08)
	uint32_t PatrolStationPriority; // 0x578(0x04)
	float PatrolStationTime; // 0x57c(0x04)
	bool LimitPatrolToSingleUsePerCycle; // 0x580(0x01)
	bool bProhibitAutoLocationSetting; // 0x581(0x01)
	char pad_582[0x2]; // 0x582(0x02)
	struct FVector PlayerInVicinityVolumeExtents; // 0x584(0x0c)
	char pad_590[0x28]; // 0x590(0x28)
	struct UBoxComponent* PlayerInVicinityVolume; // 0x5b8(0x08)
	char pad_5C0[0x10]; // 0x5c0(0x10)
	struct FString PropMeshFullPath; // 0x5d0(0x10)
	struct UMeshComponent* MeshComponent; // 0x5e0(0x08)
	float EnterDelay; // 0x5e8(0x04)
	float EnterBlendIn; // 0x5ec(0x04)
	float ExitDelay; // 0x5f0(0x04)
	float ExitBlendOut; // 0x5f4(0x04)
	float MaxAnimDriveStiffness; // 0x5f8(0x04)
	bool ForceParticipateInSit; // 0x5fc(0x01)
	char pad_5FD[0x12b]; // 0x5fd(0x12b)

	bool WillParticipateInSit(); // Function Phoenix.StationComponent.WillParticipateInSit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3486b70
	void ValidateStation(struct TArray<struct FStationValidationError>& OutErrors); // Function Phoenix.StationComponent.ValidateStation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3486a90
	void SetStationActive(bool Inactive); // Function Phoenix.StationComponent.SetStationActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3486710
	void SetPropSelection(struct FString DesiredProp); // Function Phoenix.StationComponent.SetPropSelection // (Final|Native|Public|BlueprintCallable) // @ game+0x31cc3a0
	bool RequestAssetPreload(); // Function Phoenix.StationComponent.RequestAssetPreload // (Final|Native|Public|BlueprintCallable) // @ game+0x3486600
	bool IsStationBreakable(); // Function Phoenix.StationComponent.IsStationBreakable // (Final|Native|Public|BlueprintCallable) // @ game+0x3486240
	bool IsStationActive(); // Function Phoenix.StationComponent.IsStationActive // (Final|Native|Public|BlueprintCallable) // @ game+0x3486210
	bool IsAChair(); // Function Phoenix.StationComponent.IsAChair // (Final|Native|Public|BlueprintCallable) // @ game+0x34861e0
	bool IsABookShelf(); // Function Phoenix.StationComponent.IsABookShelf // (Final|Native|Public|BlueprintCallable) // @ game+0x34861b0
	bool IsABed(); // Function Phoenix.StationComponent.IsABed // (Final|Native|Public|BlueprintCallable) // @ game+0x3486180
	int32_t InitializeStationInteraction(struct UObject* InObject, enum class EStationInteraction InDesiredInteraction, struct FStationQueryData& InStationData, bool InDeferred, bool InWantCallback, float InTimeRequest, bool InJustGettingOptions); // Function Phoenix.StationComponent.InitializeStationInteraction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3485f00
	bool GetStationUsers(struct TArray<struct UObject*>& outStationUsers); // Function Phoenix.StationComponent.GetStationUsers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3485e40
	struct FTransform GetSocketTransform(struct FName InSocketName); // Function Phoenix.StationComponent.GetSocketTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3485d60
	enum class PropTypeIDs GetPropType(); // Function Phoenix.StationComponent.GetPropType // (Final|Native|Public|BlueprintCallable) // @ game+0x3485d00
	int32_t GetNumConnections(); // Function Phoenix.StationComponent.GetNumConnections // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3485ce0
	struct FString GetMeshName(); // Function Phoenix.StationComponent.GetMeshName // (Final|Native|Public|BlueprintCallable) // @ game+0x3485c20
	struct UMeshComponent* GetMeshComponent(); // Function Phoenix.StationComponent.GetMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x3380e40
	enum class ECalloutActions GetInteractionText(); // Function Phoenix.StationComponent.GetInteractionText // (Final|Native|Public|BlueprintCallable) // @ game+0x3485c00
	enum class EStationInteraction GetCurrentInteraction(int32_t InInteractionID); // Function Phoenix.StationComponent.GetCurrentInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x3485b60
	struct FTransform GetConnectionStartTransform(int32_t InIndex); // Function Phoenix.StationComponent.GetConnectionStartTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x3485aa0
	int32_t GetClosestConnection(struct APawn* PlayerPawn); // Function Phoenix.StationComponent.GetClosestConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x3485a00
};

// Class Phoenix.StationInteractor_Interface
// Size: 0x28 (Inherited: 0x28)
struct UStationInteractor_Interface : UInterface {

	void ThinkNow(struct FString InReason); // Function Phoenix.StationInteractor_Interface.ThinkNow // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348b190
	void StationStoryEndedWithoutConsent(struct UStationComponent* InStationComponent); // Function Phoenix.StationInteractor_Interface.StationStoryEndedWithoutConsent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33bdca0
	bool RequestStationInteraction(struct FStationQueryData& InStationData, float InDuration, bool bUsedInDynamicInteraction, bool OverwritePreviousGoal); // Function Phoenix.StationInteractor_Interface.RequestStationInteraction // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x348aa10
	void RequestStationExit(struct UStationComponent* InStationComponent); // Function Phoenix.StationInteractor_Interface.RequestStationExit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x33bd980
	bool IsTier4Actor(); // Function Phoenix.StationInteractor_Interface.IsTier4Actor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a520
	bool IsTier3SeatFiller(); // Function Phoenix.StationInteractor_Interface.IsTier3SeatFiller // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32854c0
	bool IsTier3Character(); // Function Phoenix.StationInteractor_Interface.IsTier3Character // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32854f0
	bool IsPlayer(); // Function Phoenix.StationInteractor_Interface.IsPlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3285490
	bool IsHidden(); // Function Phoenix.StationInteractor_Interface.IsHidden // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a460
	void InteractionTerminated(struct UStationComponent* InStationComponent, enum class EEndPlayReason InTerminationReason); // Function Phoenix.StationInteractor_Interface.InteractionTerminated // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a390
	bool InDynamicInteraction(); // Function Phoenix.StationInteractor_Interface.InDynamicInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a360
	struct FString GetUniqueName(); // Function Phoenix.StationInteractor_Interface.GetUniqueName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a2e0
	int32_t GetUniqueID(); // Function Phoenix.StationInteractor_Interface.GetUniqueID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a2b0
	float GetSquaredDistanceToPlayer(); // Function Phoenix.StationInteractor_Interface.GetSquaredDistanceToPlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a260
	enum class ESexType GetSexType(); // Function Phoenix.StationInteractor_Interface.GetSexType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a230
	struct ASocialReasoning* GetReasoning(); // Function Phoenix.StationInteractor_Interface.GetReasoning // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a200
	struct FVector GetPosition(); // Function Phoenix.StationInteractor_Interface.GetPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x348a1c0
	struct APawn* GetPawn(); // Function Phoenix.StationInteractor_Interface.GetPawn // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a190
	struct FTransform GetInteractorTransform(); // Function Phoenix.StationInteractor_Interface.GetInteractorTransform // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x348a120
	bool GetFleshPrecacheRequested(); // Function Phoenix.StationInteractor_Interface.GetFleshPrecacheRequested // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a0f0
	struct FVector GetFeetPosition(); // Function Phoenix.StationInteractor_Interface.GetFeetPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x348a0b0
	struct FName GetDbSubtypeID(); // Function Phoenix.StationInteractor_Interface.GetDbSubtypeID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a070
	struct FName GetDbHouseID(); // Function Phoenix.StationInteractor_Interface.GetDbHouseID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a030
	struct UStationComponent* GetCurrentStation(); // Function Phoenix.StationInteractor_Interface.GetCurrentStation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a000
	float GetCollisionRadius(); // Function Phoenix.StationInteractor_Interface.GetCollisionRadius // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3489fc0
	struct ACharacter* GetCharacter(); // Function Phoenix.StationInteractor_Interface.GetCharacter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3489f60
	struct AActor* GetActor(); // Function Phoenix.StationInteractor_Interface.GetActor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3489f30
	void ExitComplete(); // Function Phoenix.StationInteractor_Interface.ExitComplete // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32ca2f0
	bool CanJoinDynamicInteraction(); // Function Phoenix.StationInteractor_Interface.CanJoinDynamicInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3489960
	bool CanBeLastOne(); // Function Phoenix.StationInteractor_Interface.CanBeLastOne // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3489930
	void AbortInteraction(struct UStationComponent* InStationComponent); // Function Phoenix.StationInteractor_Interface.AbortInteraction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1bf0f30
};

// Class Phoenix.StationLocationCreator
// Size: 0x2a0 (Inherited: 0x248)
struct AStationLocationCreator : AActor {
	int32_t StationLocationCount; // 0x248(0x04)
	int32_t EncounterCount; // 0x24c(0x04)
	struct TArray<struct AEncounterCreator*> EncounterCreators; // 0x250(0x10)
	struct TArray<struct AStation*> StationLocations; // 0x260(0x10)
	char pad_270[0x30]; // 0x270(0x30)
};

// Class Phoenix.StationManager
// Size: 0x480 (Inherited: 0x28)
struct UStationManager : UObject {
	char pad_28[0x458]; // 0x28(0x458)

	bool IsPlayerInWorld(struct FName& InWorldName); // Function Phoenix.StationManager.IsPlayerInWorld // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x348a490
	struct UStationManager* GetStationManager(); // Function Phoenix.StationManager.GetStationManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348a290
	struct UStationComponent* GetClosestPlayerBed(); // Function Phoenix.StationManager.GetClosestPlayerBed // (Final|Native|Public|BlueprintCallable) // @ game+0x3489f90
	bool FindSiteLocation(struct FString InSiteName, struct FVector& Location); // Function Phoenix.StationManager.FindSiteLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3489be0
	bool FindBedSiteLocation(struct FString InSiteName, struct FVector& Location); // Function Phoenix.StationManager.FindBedSiteLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x3489ae0
};

// Class Phoenix.NavMeshCache
// Size: 0x80 (Inherited: 0x30)
struct UNavMeshCache : UDataAsset {
	struct TMap<struct FName, struct FCachedStation> PathMatrix; // 0x30(0x50)
};

// Class Phoenix.StationStory
// Size: 0x158 (Inherited: 0x138)
struct UStationStory : USceneRigStory {
	char pad_138[0x18]; // 0x138(0x18)
	struct UAnimationSet_TagLookup* AnimationSetProvider; // 0x150(0x08)
};

// Class Phoenix.StationStoryPropAttachment
// Size: 0x28 (Inherited: 0x28)
struct UStationStoryPropAttachment : UObject {
};

// Class Phoenix.StationStoryProp_AttachToStation
// Size: 0x30 (Inherited: 0x28)
struct UStationStoryProp_AttachToStation : UStationStoryPropAttachment {
	struct FName StationSocket; // 0x28(0x08)
};

// Class Phoenix.StationStoryProp_AttachToCastMember
// Size: 0x40 (Inherited: 0x28)
struct UStationStoryProp_AttachToCastMember : UStationStoryPropAttachment {
	struct FSceneRigStageRole AttachParent; // 0x28(0x08)
	struct FString AttachSocket; // 0x30(0x10)
};

// Class Phoenix.StationStoryProp
// Size: 0x38 (Inherited: 0x28)
struct UStationStoryProp : UObject {
	struct FSceneRigStageRole PropCastMember; // 0x28(0x08)
	struct UStationStoryPropAttachment* Attachment; // 0x30(0x08)
};

// Class Phoenix.StationStoryStaticMeshProp
// Size: 0x40 (Inherited: 0x38)
struct UStationStoryStaticMeshProp : UStationStoryProp {
	struct UStaticMesh* StaticMesh; // 0x38(0x08)
};

// Class Phoenix.StationStorySkeletalMeshProp
// Size: 0x40 (Inherited: 0x38)
struct UStationStorySkeletalMeshProp : UStationStoryProp {
	struct USkeletalMesh* SkeletalMesh; // 0x38(0x08)
};

// Class Phoenix.StationStoryContent
// Size: 0xc0 (Inherited: 0x30)
struct UStationStoryContent : UDataAsset {
	struct FSceneRigStageCast StoryCast; // 0x30(0x10)
	struct TArray<struct UStationStoryProp*> Props; // 0x40(0x10)
	struct TArray<struct FStationStoryAnimationContent> Enters; // 0x50(0x10)
	struct TArray<struct FStationStoryAnimationContent> TransitionsIn; // 0x60(0x10)
	struct TArray<struct FStationStoryAnimationContent> Idles; // 0x70(0x10)
	struct TArray<struct FStationStoryAnimationContent> TransitionsOut; // 0x80(0x10)
	struct TArray<struct FStationStoryAnimationContent> Exits; // 0x90(0x10)
	struct TArray<struct UStaticMesh*> StaticMeshProps; // 0xa0(0x10)
	struct TArray<struct USkeletalMesh*> SkeletalMeshProps; // 0xb0(0x10)
};

// Class Phoenix.StationTag_Character
// Size: 0x28 (Inherited: 0x28)
struct UStationTag_Character : UAnimationArchitectTagProvider {
};

// Class Phoenix.StatsManager
// Size: 0xe0 (Inherited: 0x28)
struct UStatsManager : UObject {
	struct FMulticastInlineDelegate StatChangedEvent; // 0x28(0x10)
	char pad_38[0xa8]; // 0x38(0xa8)

	void UpdateStat(struct FName Key, int32_t Delta); // Function Phoenix.StatsManager.UpdateStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348b230
	bool StatExists(struct FName Key); // Function Phoenix.StatsManager.StatExists // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348b070
	void StatChangedEvent__DelegateSignature(struct FName Key, int32_t Value, int32_t Delta); // DelegateFunction Phoenix.StatsManager.StatChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void SetStatBit(struct FName Key, int32_t bit); // Function Phoenix.StatsManager.SetStatBit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348acb0
	void SetStat(struct FName Key, int32_t Value); // Function Phoenix.StatsManager.SetStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348abf0
	int32_t ReadStat(struct FName Key); // Function Phoenix.StatsManager.ReadStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348a980
	int32_t ReadSetBitCount(struct FName Key); // Function Phoenix.StatsManager.ReadSetBitCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348a8f0
	bool ReadBitSet(struct FName Key, int32_t bit); // Function Phoenix.StatsManager.ReadBitSet // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x348a820
	void OnGameToBeSaved(); // Function Phoenix.StatsManager.OnGameToBeSaved // (Final|Native|Public|BlueprintCallable) // @ game+0x348a5e0
	struct FName GetStatName(struct FStatList StatList); // Function Phoenix.StatsManager.GetStatName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x332a290
	struct UStatsManager* Get(); // Function Phoenix.StatsManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3489f00
	void GameStatSet(struct FString StatKey, int32_t StatValue); // Function Phoenix.StatsManager.GameStatSet // (Final|Exec|Native|Public) // @ game+0x3489dd0
	void GameStatGet(struct FString StatKey); // Function Phoenix.StatsManager.GameStatGet // (Final|Exec|Native|Public) // @ game+0x3489ce0
	bool DeleteStat(struct FName Key); // Function Phoenix.StatsManager.DeleteStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3489a50
	void ClearStatBit(struct FName Key, int32_t bit); // Function Phoenix.StatsManager.ClearStatBit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3489990
	bool AddNewStat(struct FName StatID, int32_t Value); // Function Phoenix.StatsManager.AddNewStat // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3489860
};

// Class Phoenix.StoryDirector_Interface
// Size: 0x28 (Inherited: 0x28)
struct UStoryDirector_Interface : UInterface {

	void StoryEnded(struct UObject* inSceneRigStory); // Function Phoenix.StoryDirector_Interface.StoryEnded // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348b100
	void SetupStorySceneRigProp(struct FSceneRigParameters& outParameters); // Function Phoenix.StoryDirector_Interface.SetupStorySceneRigProp // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x348af30
	void SetupStorySceneRigConnection(struct FSceneRigParameters& outParameters, int32_t InConnectionIndex, int32_t InChannel); // Function Phoenix.StoryDirector_Interface.SetupStorySceneRigConnection // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x348ad70
	void ParticipantFinishedExit(struct UObject* inParticipant, int32_t InConnectionIndex, struct FName inSocialSemantic, bool inTestForMovementMode); // Function Phoenix.StoryDirector_Interface.ParticipantFinishedExit // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a6d0
	void ParticipantFinishedEnter(struct UObject* inParticipant, int32_t InConnectionIndex); // Function Phoenix.StoryDirector_Interface.ParticipantFinishedEnter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a600
	void NotifyAllStoriesOfEvent(struct FName InEventName); // Function Phoenix.StoryDirector_Interface.NotifyAllStoriesOfEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x348a550
};

// Class Phoenix.StoryGraph_Conversation
// Size: 0x130 (Inherited: 0x80)
struct UStoryGraph_Conversation : UTimeRig_StoryGraph {
	char pad_80[0x20]; // 0x80(0x20)
	enum class EConversationImport ArticyImport; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	struct FDialogueConversationReference ArticyConversation; // 0xa8(0x10)
	struct USceneRigProvider* AmbientSceneRig; // 0xb8(0x08)
	struct USceneRigProvider* DefaultConversationSR; // 0xc0(0x08)
	struct TArray<struct UBaseArchitectAsset*> LookupAssets; // 0xc8(0x10)
	bool bEnableInitialFadeOut; // 0xd8(0x01)
	bool bEnableInitialFadeIn; // 0xd9(0x01)
	bool bEnableFinalFadeOut; // 0xda(0x01)
	bool bEnableFinalFadeIn; // 0xdb(0x01)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UNameProvider* ConversationPreset; // 0xe0(0x08)
	struct UTransformProvider* NpcStart; // 0xe8(0x08)
	struct UTransformProvider* PlayerFinish; // 0xf0(0x08)
	struct TArray<struct FStoryGraph_Conversation_CameraFilter> CameraFilters; // 0xf8(0x10)
	bool bEnableImpliedFacialEmotions; // 0x108(0x01)
	enum class ESynchronizeMethod SynchronizationMethod; // 0x109(0x01)
	bool bEnableLightRig; // 0x10a(0x01)
	bool bUsesSkyColors; // 0x10b(0x01)
	float KeyLightColorTemperature; // 0x10c(0x04)
	float RimLightColorTemperature; // 0x110(0x04)
	float FillLightColorTemperature; // 0x114(0x04)
	float KeyLightIntensity; // 0x118(0x04)
	float RimLightIntensity; // 0x11c(0x04)
	float FillLightIntensity; // 0x120(0x04)
	uint32_t LastBuiltEventHash; // 0x124(0x04)
	bool RebuildEdStoryGraph; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// Class Phoenix.StoryGraphCondition_ByGender
// Size: 0x30 (Inherited: 0x28)
struct UStoryGraphCondition_ByGender : UStoryGraphConditionProvider {
	enum class ESexType PlayerGender; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.StoryGraphCondition_ByHouse
// Size: 0x30 (Inherited: 0x28)
struct UStoryGraphCondition_ByHouse : UStoryGraphConditionProvider {
	enum class EStoryGraphCondition_PlayerHouse PlayerHouse; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.StoryGraphCondition_ByStat
// Size: 0x38 (Inherited: 0x28)
struct UStoryGraphCondition_ByStat : UStoryGraphConditionProvider {
	struct FName StatName; // 0x28(0x08)
	int32_t StatValue; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.StoryGraphCondition_ConversationResult
// Size: 0x38 (Inherited: 0x28)
struct UStoryGraphCondition_ConversationResult : UStoryGraphConditionProvider {
	struct FString ConversationResult; // 0x28(0x10)
};

// Class Phoenix.StoryNode_DialogueSequence
// Size: 0xf0 (Inherited: 0xd0)
struct UStoryNode_DialogueSequence : UStoryNode_SceneRig {
	struct FDialogueSequenceReference DialogueSequence; // 0xd0(0x20)
};

// Class Phoenix.StoryNode_HermesMessage
// Size: 0xb0 (Inherited: 0x98)
struct UStoryNode_HermesMessage : UStoryNode_Custom {
	struct FString MessageName; // 0x98(0x10)
	bool bEventCanTriggerMultipleTimes; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.StoryNodeState_HermesMessage
// Size: 0x40 (Inherited: 0x38)
struct UStoryNodeState_HermesMessage : UStoryNodeState_Custom {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Phoenix.StoryTeller
// Size: 0x70 (Inherited: 0x28)
struct UStoryTeller : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct USceneRigProvider* SceneRigProvider; // 0x30(0x08)
	struct UBaseArchitectAsset* LookupAsset; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)
	struct TArray<struct USceneRigStory*> Stories; // 0x58(0x10)
	char pad_68[0x8]; // 0x68(0x08)
};

// Class Phoenix.StreamingPreviewChildActorComponent
// Size: 0x250 (Inherited: 0x250)
struct UStreamingPreviewChildActorComponent : UChildActorComponent {
};

// Class Phoenix.StreamingPlaceholderDbId
// Size: 0x2f0 (Inherited: 0x270)
struct AStreamingPlaceholderDbId : AStreamingPlaceholderChildActorBase {
	struct FSpawnSelectInfo DbIdInfo; // 0x270(0x80)
};

// Class Phoenix.StreamingPlaceholderUnlocked
// Size: 0x300 (Inherited: 0x270)
struct AStreamingPlaceholderUnlocked : AStreamingPlaceholderChildActorBase {
	struct TArray<struct FStreamingPlaceholderLockState> States; // 0x270(0x10)
	struct TSoftClassPtr<UObject> DefaultActor; // 0x280(0x28)
	bool bAutoSwapWhenLockChanges; // 0x2a8(0x01)
	char pad_2A9[0x57]; // 0x2a9(0x57)
};

// Class Phoenix.StreamingPlaceholderFixedUID
// Size: 0x2f0 (Inherited: 0x260)
struct AStreamingPlaceholderFixedUID : AStreamingPlaceholderBase {
	struct FSpawnSelectInfo DbIdInfo; // 0x260(0x80)
	uint32_t UID; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct AActor* SpawnedActor; // 0x2e8(0x08)

	struct AActor* GetSpawnedActor(); // Function Phoenix.StreamingPlaceholderFixedUID.GetSpawnedActor // (Final|Native|Public|BlueprintCallable) // @ game+0x348f100
};

// Class Phoenix.StreamingPlaceholderFrontend
// Size: 0x2d0 (Inherited: 0x270)
struct AStreamingPlaceholderFrontend : AStreamingPlaceholderChildActorBase {
	struct FString FrontendStateKey; // 0x270(0x10)
	struct FString FrontendStateValue; // 0x280(0x10)
	struct TSoftClassPtr<UObject> ActorToSpawn; // 0x290(0x28)
	bool bShowInEditor; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)
	struct FString OnlySpawnIfKeyNotPresent; // 0x2c0(0x10)
};

// Class Phoenix.StreamingPlaceholderSanctuaryIdentity
// Size: 0x2f0 (Inherited: 0x270)
struct AStreamingPlaceholderSanctuaryIdentity : AStreamingPlaceholderChildActorBase {
	struct TMap<enum class ESanctuaryIdentity, struct TSoftClassPtr<UObject>> IdentityOverrides; // 0x270(0x50)
	struct TSoftClassPtr<UObject> DefaultActor; // 0x2c0(0x28)
	bool bAutoSwapWhenIdentityChanges; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)

	void OnIdentityChanged(enum class ESanctuaryIdentity OldIdentity, enum class ESanctuaryIdentity NewIdentity); // Function Phoenix.StreamingPlaceholderSanctuaryIdentity.OnIdentityChanged // (Final|Native|Protected) // @ game+0x348f2c0
};

// Class Phoenix.SanctuaryIdentityParticleSystem
// Size: 0x2f0 (Inherited: 0x260)
struct ASanctuaryIdentityParticleSystem : AStreamingPlaceholderBase {
	struct TMap<enum class ESanctuaryIdentity, struct TSoftObjectPtr<UParticleSystem>> IdentityOverrides; // 0x260(0x50)
	struct TSoftObjectPtr<UParticleSystem> DefaultParticleSystem; // 0x2b0(0x28)
	bool bAutoSwapWhenIdentityChanges; // 0x2d8(0x01)
	char pad_2D9[0x7]; // 0x2d9(0x07)
	struct UParticleSystemComponent* ParticleSystemComponent; // 0x2e0(0x08)
	struct UParticleSystem* LoadedAsset; // 0x2e8(0x08)

	void OnIdentityChanged(enum class ESanctuaryIdentity OldIdentity, enum class ESanctuaryIdentity NewIdentity); // Function Phoenix.SanctuaryIdentityParticleSystem.OnIdentityChanged // (Final|Native|Protected) // @ game+0x348f1f0
};

// Class Phoenix.String_DialogueArticyID
// Size: 0x38 (Inherited: 0x28)
struct UString_DialogueArticyID : UStringProvider {
	struct FDialogueLineReference DialogueLine; // 0x28(0x10)
};

// Class Phoenix.Student_Manager
// Size: 0xe0 (Inherited: 0xe0)
struct UStudent_Manager : UNPC_Manager {
};

// Class Phoenix.StudentCallOutAttachComponent
// Size: 0x230 (Inherited: 0x220)
struct UStudentCallOutAttachComponent : USceneComponent {
	char pad_220[0x10]; // 0x220(0x10)
};

// Class Phoenix.StupefySpellTool
// Size: 0x8b0 (Inherited: 0x888)
struct AStupefySpellTool : AFireOnceThrowSpellTool {
	struct AMunitionType_Base* AOEMunition; // 0x888(0x08)
	float CharacterDurationScaleTalent; // 0x890(0x04)
	float CharacterDamageTalent; // 0x894(0x04)
	bool KillAuthorityFigure; // 0x898(0x01)
	char pad_899[0x7]; // 0x899(0x07)
	struct AMunitionType_Base* UpgradedMunitionActor; // 0x8a0(0x08)
	char pad_8A8[0x8]; // 0x8a8(0x08)
};

// Class Phoenix.StupidShaderGroupBuildingInfo
// Size: 0x30 (Inherited: 0x30)
struct UStupidShaderGroupBuildingInfo : UDataAsset {
};

// Class Phoenix.StupidShaderSpecialTypeBuildingInfo
// Size: 0x30 (Inherited: 0x30)
struct UStupidShaderSpecialTypeBuildingInfo : UDataAsset {
};

// Class Phoenix.StupidShaderParser
// Size: 0x30 (Inherited: 0x30)
struct UStupidShaderParser : UDataAsset {

	void WriteCSV(); // Function Phoenix.StupidShaderParser.WriteCSV // (Final|Native|Public) // @ game+0x1074730
	void Import(); // Function Phoenix.StupidShaderParser.Import // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.SubSonic_VenomousTentacula_Bulb
// Size: 0x528 (Inherited: 0x528)
struct ASubSonic_VenomousTentacula_Bulb : AMunitionType_SubsonicSpell {

	void SetupProjectile(); // Function Phoenix.SubSonic_VenomousTentacula_Bulb.SetupProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x348f3b0
};

// Class Phoenix.SubsonicSpellMovementComponent
// Size: 0x210 (Inherited: 0x1f0)
struct USubsonicSpellMovementComponent : UMunitionMovementComponent {
	float MinHomingDistance; // 0x1f0(0x04)
	float MaxHomingDistance; // 0x1f4(0x04)
	float MinHomingRotationSpeed; // 0x1f8(0x04)
	float MaxHomingRotationSpeed; // 0x1fc(0x04)
	char pad_200[0x10]; // 0x200(0x10)
};

// Class Phoenix.Subtitle_HUD
// Size: 0x268 (Inherited: 0x268)
struct USubtitle_HUD : UUserWidget {
};

// Class Phoenix.SubtitleElement
// Size: 0x2c8 (Inherited: 0x268)
struct USubtitleElement : UUserWidget {
	char AudioPriority; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct FAudioDialogueLineData ElementAudioDialogueLineData; // 0x270(0x50)
	bool bAudioEndedRecieved; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)

	void InitAudioDialogueLineData(struct FAudioDialogueLineData& AudioDialogueLineData); // Function Phoenix.SubtitleElement.InitAudioDialogueLineData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x348f120
};

// Class Phoenix.SubtitleSettings
// Size: 0x290 (Inherited: 0x28)
struct USubtitleSettings : UObject {
	int32_t AudioPriorityCutoff; // 0x28(0x04)
	int32_t AudioPrioritySuppress; // 0x2c(0x04)
	float AudioLowPrioritySuppressDistance; // 0x30(0x04)
	char pad_34[0x25c]; // 0x34(0x25c)

	void StartSettingAudioPrioritySuppress(int32_t NewValue, enum class EStandardManagedPriority Priority, struct UObject* Requestor); // Function Phoenix.SubtitleSettings.StartSettingAudioPrioritySuppress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3494a60
	void StartSettingAudioPriorityCutoff(int32_t NewValue, enum class EStandardManagedPriority Priority, struct UObject* Requestor); // Function Phoenix.SubtitleSettings.StartSettingAudioPriorityCutoff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3494960
	void StartSettingAudioLowPriorityDistanceSuppress(float NewValue); // Function Phoenix.SubtitleSettings.StartSettingAudioLowPriorityDistanceSuppress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34948e0
	void StartOverrideSubtitlePosition(struct UObject* Requestor, struct FVector2D OverridePos); // Function Phoenix.SubtitleSettings.StartOverrideSubtitlePosition // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x3494820
	bool GetOverrideSubtitlePositionState(); // Function Phoenix.SubtitleSettings.GetOverrideSubtitlePositionState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3493f50
	int32_t GetAudioPrioritySuppress(); // Function Phoenix.SubtitleSettings.GetAudioPrioritySuppress // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3493e80
	int32_t GetAudioPriorityCutoff(); // Function Phoenix.SubtitleSettings.GetAudioPriorityCutoff // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3493e50
	float GetAudioLowPrioritySuppressDistance(); // Function Phoenix.SubtitleSettings.GetAudioLowPrioritySuppressDistance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x3493e20
	void FinishSettingAudioPrioritySuppress(enum class EStandardManagedPriority Priority, struct UObject* Requestor); // Function Phoenix.SubtitleSettings.FinishSettingAudioPrioritySuppress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493d60
	void FinishSettingAudioPriorityCutoff(enum class EStandardManagedPriority Priority, struct UObject* Requestor); // Function Phoenix.SubtitleSettings.FinishSettingAudioPriorityCutoff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493ca0
	void FinishSettingAudioLowPriorityDistanceSuppress(); // Function Phoenix.SubtitleSettings.FinishSettingAudioLowPriorityDistanceSuppress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493c80
	void FinishOverrideSubtitlePosition(struct UObject* Requestor); // Function Phoenix.SubtitleSettings.FinishOverrideSubtitlePosition // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493c00
	void AudioPriorityChangedHandler__DelegateSignature(int32_t NewValue); // DelegateFunction Phoenix.SubtitleSettings.AudioPriorityChangedHandler__DelegateSignature // (Public|Delegate) // @ game+0x38a7480
	void AddAudioPrioritySuppressChangedHandler(struct FDelegate AudioPrioritySuppressHandler); // Function Phoenix.SubtitleSettings.AddAudioPrioritySuppressChangedHandler // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493200
	void AddAudioPriorityCutoffChangedHandler(struct FDelegate AudioPriorityCuttoffHandler); // Function Phoenix.SubtitleSettings.AddAudioPriorityCutoffChangedHandler // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493170
};

// Class Phoenix.Subtitles
// Size: 0x320 (Inherited: 0x268)
struct USubtitles : UUserWidget {
	struct UVerticalBox* BP_Subtitle_Box; // 0x268(0x08)
	struct UVerticalBox* Subtitle_Box; // 0x270(0x08)
	struct UVerticalBox* Subtitle_Box_LowPriority; // 0x278(0x08)
	char pad_280[0xa0]; // 0x280(0xa0)

	void Setup(); // Function Phoenix.Subtitles.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x34946a0
	void EvaluateSubtitleVerticalBox(struct UVerticalBox* Subtitle_VerticalBox); // Function Phoenix.Subtitles.EvaluateSubtitleVerticalBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1480ed0
	void BPUpdateStandaloneSubtitle(struct FString ResolvedSubtitle); // Function Phoenix.Subtitles.BPUpdateStandaloneSubtitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BPRemoveSubtitleEvent(struct FAudioDialogueLineData SubtitleData); // Function Phoenix.Subtitles.BPRemoveSubtitleEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BPRemoveStandaloneSubtitle(); // Function Phoenix.Subtitles.BPRemoveStandaloneSubtitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BPAddSubtitleEvent(struct FAudioDialogueLineData SubtitleData, struct FString ResolvedSubtitle); // Function Phoenix.Subtitles.BPAddSubtitleEvent // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BPAddStandaloneSubtitle(struct FString ResolvedSubtitle); // Function Phoenix.Subtitles.BPAddStandaloneSubtitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.SuperSlamTarget
// Size: 0x250 (Inherited: 0x248)
struct ASuperSlamTarget : AActor {
	struct UBoxComponent* SceneComponent; // 0x248(0x08)
};

// Class Phoenix.SuperSlamFinisherComponent
// Size: 0x190 (Inherited: 0xc8)
struct USuperSlamFinisherComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct TArray<struct UMultiFX2_Base*> HitFx; // 0xd0(0x10)
	struct USkeletalMeshComponent* SkeletalMeshComp; // 0xe0(0x08)
	struct ASuperSlamTarget* SuperSlamTarget; // 0xe8(0x08)
	struct APhysicsConstraintActor* PhysicsConstraintActor; // 0xf0(0x08)
	struct AActor* Instigator; // 0xf8(0x08)
	struct UCurveVector* Curve; // 0x100(0x08)
	char pad_108[0x88]; // 0x108(0x88)

	void HandleSkeletalMeshComponentHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.SuperSlamFinisherComponent.HandleSkeletalMeshComponentHit // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x34941a0
};

// Class Phoenix.SurfaceNormalParticleModule
// Size: 0x80 (Inherited: 0x68)
struct USurfaceNormalParticleModule : UParticleModuleLocationStaticMesh {
	struct FVector LimitToDirection; // 0x68(0x0c)
	char pad_74[0x4]; // 0x74(0x04)
	struct UCurveFloat* FalloffCurve; // 0x78(0x08)
};

// Class Phoenix.SwapStickWatcher
// Size: 0x140 (Inherited: 0x130)
struct USwapStickWatcher : UStickWatcher {
	char pad_130[0x10]; // 0x130(0x10)
};

// Class Phoenix.SwapStickWatcherRecord
// Size: 0x68 (Inherited: 0x60)
struct USwapStickWatcherRecord : UStickWatcherRecord {
	struct FName SwapStickBaseName; // 0x60(0x08)
};

// Class Phoenix.SystemMenuWidget
// Size: 0x3d0 (Inherited: 0x3c8)
struct USystemMenuWidget : UTabPageWidget {
	bool HasShownExitConfirmation; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)

	void ShowLoadSaveResultPopup(struct FString ResultMessage, float Duration); // Function Phoenix.SystemMenuWidget.ShowLoadSaveResultPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ShowGraphicsConfirmDialog(float Duration); // Function Phoenix.SystemMenuWidget.ShowGraphicsConfirmDialog // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool SettingsNeedExitConfirmed(struct FString& OutConfirmTitle, struct FString& OutConfirmDesc); // Function Phoenix.SystemMenuWidget.SettingsNeedExitConfirmed // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x38a7480
	void OnExitPopupGone(); // Function Phoenix.SystemMenuWidget.OnExitPopupGone // (Final|Native|Protected) // @ game+0x3494450
	void OnExitPopupDismissed(struct UPopupScreen* Popup, int32_t ConfirmationResult); // Function Phoenix.SystemMenuWidget.OnExitPopupDismissed // (Final|Native|Protected) // @ game+0x3494380
	void HandleConfirmExitDialog(enum class EUMGInputAction ExitAction, enum class EInputEvent ExitEvent, struct FString TitleText, struct FString DescText); // Function Phoenix.SystemMenuWidget.HandleConfirmExitDialog // (Final|Native|Public|BlueprintCallable) // @ game+0x3493fb0
	bool ExecuteSave(int32_t CharacterID); // Function Phoenix.SystemMenuWidget.ExecuteSave // (Final|Native|Public|BlueprintCallable) // @ game+0x3493b60
	bool ExecuteLoad(struct FString Filename, int32_t CharacterID); // Function Phoenix.SystemMenuWidget.ExecuteLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x32e55b0
};

// Class Phoenix.TabIconButtonWidget
// Size: 0x4a8 (Inherited: 0x4a8)
struct UTabIconButtonWidget : UIconButtonWidget {
};

// Class Phoenix.TargetCallOutWidget
// Size: 0x28 (Inherited: 0x28)
struct UTargetCallOutWidget : UInterface {

	void UpdateCallOutUI(struct FName CharacterID, float BarPercent); // Function Phoenix.TargetCallOutWidget.UpdateCallOutUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3494b60
	void ShowWidget(bool Revealio); // Function Phoenix.TargetCallOutWidget.ShowWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3494790
	void SetupWidget(struct AActor* Parent, struct UCallOutComponent* CallOutComponent); // Function Phoenix.TargetCallOutWidget.SetupWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34946c0
	void SetIsOffscreenCallout(bool IsOffscreen); // Function Phoenix.TargetCallOutWidget.SetIsOffscreenCallout // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3494500
	void SetHasOffscreenProxyActive(bool HasOffscreenProxy); // Function Phoenix.TargetCallOutWidget.SetHasOffscreenProxyActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3494470
	float GetOutroDuration(int32_t OutroType); // Function Phoenix.TargetCallOutWidget.GetOutroDuration // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3493eb0
	struct UWidget* GetOffscreenIndicator(); // Function Phoenix.TargetCallOutWidget.GetOffscreenIndicator // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32b5050
	void AwareStateInfoChanged(bool bFromUpdate); // Function Phoenix.TargetCallOutWidget.AwareStateInfoChanged // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32858b0
	void AttackThreatDataChange(bool Revealio); // Function Phoenix.TargetCallOutWidget.AttackThreatDataChange // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x3381070
};

// Class Phoenix.TargetComponent
// Size: 0x220 (Inherited: 0x220)
struct UTargetComponent : USceneComponent {
	char Priority; // 0x218(0x01)
	bool bEnabled; // 0x219(0x01)

	void SetSendTargetPriority(char InPriority); // Function Phoenix.TargetComponent.SetSendTargetPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x3494590
	void SetEnabled(bool bInEnabled); // Function Phoenix.TargetComponent.SetEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x1374260
	bool IsEnabled(); // Function Phoenix.TargetComponent.IsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1373d30
	char GetSendTargetPriority(); // Function Phoenix.TargetComponent.GetSendTargetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3493f80
};

// Class Phoenix.TargettedReactionComponent
// Size: 0x118 (Inherited: 0xc8)
struct UTargettedReactionComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)
	struct FMulticastInlineDelegate Targetted; // 0xd0(0x10)
	bool EnableDodge; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct FGameplayTagContainer SpellsList; // 0xe8(0x20)
	float DodgeDistance; // 0x108(0x04)
	char pad_10C[0xc]; // 0x10c(0x0c)
};

// Class Phoenix.TargetTypeCamRayCastDestination
// Size: 0x38 (Inherited: 0x38)
struct UTargetTypeCamRayCastDestination : UTargetTypeBase {

	struct UTargetTypeBase* AddTarget_CamRayCastDestination(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID); // Function Phoenix.TargetTypeCamRayCastDestination.AddTarget_CamRayCastDestination // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493560
};

// Class Phoenix.TargetTypeMoveAndIdle
// Size: 0x38 (Inherited: 0x38)
struct UTargetTypeMoveAndIdle : UTargetTypeBase {

	struct UTargetTypeBase* AddTarget_MoveAndIdle(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID); // Function Phoenix.TargetTypeMoveAndIdle.AddTarget_MoveAndIdle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493a90
};

// Class Phoenix.TargetTypeAccio
// Size: 0x60 (Inherited: 0x60)
struct UTargetTypeAccio : UTargetTypeActor {

	struct UTargetTypeBase* AddTarget_Accio(struct UTargetTracker* TargetTracker, struct AActor* InTargetActor, enum class ETargetID InTargetID); // Function Phoenix.TargetTypeAccio.AddTarget_Accio // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493290
};

// Class Phoenix.TargetTypeCognitionTarget
// Size: 0x60 (Inherited: 0x48)
struct UTargetTypeCognitionTarget : UTargetTypeLocation {
	struct UObject* Sense; // 0x48(0x08)
	struct TWeakObjectPtr<struct AActor> TargetActor; // 0x50(0x08)
	bool bLookAt; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)

	struct UTargetTypeBase* AddTarget_CognitionTarget(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID, struct AActor* InTargetActor, struct UObject* InSense, bool bLookAt); // Function Phoenix.TargetTypeCognitionTarget.AddTarget_CognitionTarget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493730
};

// Class Phoenix.TargetTypeAutoTargetOrDesiredDirection
// Size: 0x60 (Inherited: 0x60)
struct UTargetTypeAutoTargetOrDesiredDirection : UTargetTypeActor {

	struct UTargetTypeBase* AddTarget_AutoTargetOrDesiredDirection(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID); // Function Phoenix.TargetTypeAutoTargetOrDesiredDirection.AddTarget_AutoTargetOrDesiredDirection // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493390
};

// Class Phoenix.TargetTypeClosestPointOnCollision
// Size: 0x60 (Inherited: 0x48)
struct UTargetTypeClosestPointOnCollision : UTargetTypeLocation {
	struct TWeakObjectPtr<struct AActor> TargetActor; // 0x48(0x08)
	char pad_50[0x10]; // 0x50(0x10)

	struct UTargetTypeBase* AddTarget_ClosestPointOnCollision(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID, struct AActor* InTargetActor); // Function Phoenix.TargetTypeClosestPointOnCollision.AddTarget_ClosestPointOnCollision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493630
};

// Class Phoenix.TargetTypeBroomSpline
// Size: 0x60 (Inherited: 0x60)
struct UTargetTypeBroomSpline : UTargetTypeActor {

	struct UTargetTypeBase* AddTarget_BroomSpline(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID, struct AActor* InTargetActor); // Function Phoenix.TargetTypeBroomSpline.AddTarget_BroomSpline // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3493460
};

// Class Phoenix.TargetTypeDodgeDuck
// Size: 0x70 (Inherited: 0x60)
struct UTargetTypeDodgeDuck : UTargetTypeActor {
	struct FVector OriginalDirection; // 0x60(0x0c)
	float AngleOffset; // 0x6c(0x04)

	struct UTargetTypeBase* AddTarget_DodgeDuck(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID, bool bUseCameraDirectionAlways); // Function Phoenix.TargetTypeDodgeDuck.AddTarget_DodgeDuck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34938c0
};

// Class Phoenix.TargetTypeFwdMoveLoop
// Size: 0x38 (Inherited: 0x38)
struct UTargetTypeFwdMoveLoop : UTargetTypeBase {

	struct UTargetTypeBase* AddTarget_FwdMoveLoop(struct UTargetTracker* TargetTracker, enum class ETargetID InTargetID); // Function Phoenix.TargetTypeFwdMoveLoop.AddTarget_FwdMoveLoop // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34939c0
};

// Class Phoenix.Tent
// Size: 0x250 (Inherited: 0x248)
struct ATent : AActor {
	int32_t PropIndex; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)

	void SetTentMesh(); // Function Phoenix.Tent.SetTentMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TesselatedPlaneComponent
// Size: 0x510 (Inherited: 0x510)
struct UTesselatedPlaneComponent : UProceduralMeshComponent {

	void Construct(); // Function Phoenix.TesselatedPlaneComponent.Construct // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.TesselatedPlane
// Size: 0x268 (Inherited: 0x248)
struct ATesselatedPlane : AActor {
	struct UTesselatedPlaneComponent* PlaneMesh; // 0x248(0x08)
	struct UMaterialInterface* PlaneMaterial; // 0x250(0x08)
	bool bUseDynamicMaterial; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
	struct UMaterialInstanceDynamic* PlaneDynamicMaterial; // 0x260(0x08)

	void Construct(); // Function Phoenix.TesselatedPlane.Construct // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.TextButtonWidget
// Size: 0x3e8 (Inherited: 0x328)
struct UTextButtonWidget : UPhoenixUserWidget {
	struct FText Key; // 0x328(0x18)
	struct FString Namespace; // 0x340(0x10)
	struct FLinearColor HoveredTextColor; // 0x350(0x10)
	struct FLinearColor UnhoveredTextColor; // 0x360(0x10)
	bool IsButtonPressed; // 0x370(0x01)
	char pad_371[0x7]; // 0x371(0x07)
	struct UObject* UserData; // 0x378(0x08)
	struct FSlateFontInfo TextFont; // 0x380(0x58)
	struct UButton* TheButton; // 0x3d8(0x08)
	struct UPhoenixTextBlock* TheText; // 0x3e0(0x08)

	void SetText(struct FText NewKey); // Function Phoenix.TextButtonWidget.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x34996c0
	void OnSynchronizeProperties(); // Function Phoenix.TextButtonWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct FText GetText(); // Function Phoenix.TextButtonWidget.GetText // (Final|Native|Public|BlueprintCallable) // @ game+0x3498b00
	void ChangeTextColorOnButtonUnHover(); // Function Phoenix.TextButtonWidget.ChangeTextColorOnButtonUnHover // (Final|Native|Public|BlueprintCallable) // @ game+0x3498610
	void ChangeTextColorOnButtonHover(); // Function Phoenix.TextButtonWidget.ChangeTextColorOnButtonHover // (Final|Native|Public|BlueprintCallable) // @ game+0x34985f0
};

// Class Phoenix.TextInputScreen
// Size: 0x390 (Inherited: 0x370)
struct UTextInputScreen : UScreen {
	struct FMulticastInlineDelegate OnTextConfirmed; // 0x370(0x10)
	struct FMulticastInlineDelegate OnDialogCancelled; // 0x380(0x10)

	void SetPopupTitle(struct FString PopupTitle); // Function Phoenix.TextInputScreen.SetPopupTitle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetCreatureState(struct UCreatureState* CreatureState); // Function Phoenix.TextInputScreen.SetCreatureState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TextureUtil
// Size: 0xf8 (Inherited: 0x28)
struct UTextureUtil : UObject {
	struct UTexture2D* TargetTexture; // 0x28(0x08)
	char pad_30[0xc8]; // 0x30(0xc8)
};

// Class Phoenix.SocialReactor
// Size: 0x528 (Inherited: 0x28)
struct USocialReactor : UObject {
	char pad_28[0x40]; // 0x28(0x40)
	struct FMulticastInlineDelegate DetermineLeaderChange_Banner; // 0x68(0x10)
	char pad_78[0x4b0]; // 0x78(0x4b0)

	bool ValidateInteractionType(struct FName InTargetName, struct AActor* InTargetActor, enum class SocialInteractionTypeIDs InInteractionType); // Function Phoenix.SocialReactor.ValidateInteractionType // (Final|Native|Public|BlueprintCallable) // @ game+0x3499ca0
	void ToggleAmbientChatterTopic(enum class AmbientChatterTopicIDs InTopic, bool bInTurnOn); // Function Phoenix.SocialReactor.ToggleAmbientChatterTopic // (Final|Native|Public|BlueprintCallable) // @ game+0x3499a10
	void StartSettingMissionGossipCalloutsMuted(bool InMuted, enum class EStandardManagedPriority InPriority, struct UObject* InCaller); // Function Phoenix.SocialReactor.StartSettingMissionGossipCalloutsMuted // (Final|Native|Public|BlueprintCallable) // @ game+0x3499830
	void StartEmoAbility(struct APawn* InActorPawn); // Function Phoenix.SocialReactor.StartEmoAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x34997a0
	void SetEmotionalState(struct FName InActorName, enum class SocialSemanticIDs InSocialEmotion, int32_t InMagnitude); // Function Phoenix.SocialReactor.SetEmotionalState // (Final|Native|Public|BlueprintCallable) // @ game+0x3499310
	void ReportSocialAction(enum class SocialActionTypes inActionID, struct FString inActionData, struct FString inLocationName, struct FString InTargetName); // Function Phoenix.SocialReactor.ReportSocialAction // (Final|Native|Public|BlueprintCallable) // @ game+0x3498fc0
	void PerformNewDay(); // Function Phoenix.SocialReactor.PerformNewDay // (Final|Native|Private) // @ game+0x3498fa0
	void PerformEndOfDayCleanup(); // Function Phoenix.SocialReactor.PerformEndOfDayCleanup // (Final|Native|Private) // @ game+0x3498f80
	void OnSaveGameLoaded(); // Function Phoenix.SocialReactor.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x3498f60
	void OnAbilityStart(int32_t ChannelIndex, struct UAblAbilityContext* AbilityContext); // Function Phoenix.SocialReactor.OnAbilityStart // (Final|Native|Public) // @ game+0x3498d30
	bool MissionGossipCalloutsMuted(); // Function Phoenix.SocialReactor.MissionGossipCalloutsMuted // (Final|Native|Public|BlueprintCallable) // @ game+0x3498d00
	bool HasIdentity(struct FName& InTargetName, enum class SocialSemanticIDs Identity); // Function Phoenix.SocialReactor.HasIdentity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3498bf0
	struct USocialReactor* GetTheSocialReactor(); // Function Phoenix.SocialReactor.GetTheSocialReactor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3498ba0
	struct TArray<struct FName> GetIdentityNames(struct FName& InTargetName); // Function Phoenix.SocialReactor.GetIdentityNames // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34989f0
	struct TArray<struct FName> GetIdentityList(); // Function Phoenix.SocialReactor.GetIdentityList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3498920
	void GetConversationOptions(struct FName InTargetName, struct AActor* InTargetActor, struct TArray<struct FSocialConversationData>& outConversationOptions); // Function Phoenix.SocialReactor.GetConversationOptions // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34987f0
	void FinishSettingMissionGossipCalloutsMuted(enum class EStandardManagedPriority InPriority, struct UObject* InCaller); // Function Phoenix.SocialReactor.FinishSettingMissionGossipCalloutsMuted // (Final|Native|Public|BlueprintCallable) // @ game+0x34986e0
	void EndDialogInteraction(struct FName InTargetName); // Function Phoenix.SocialReactor.EndDialogInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x3498650
	void BeginDialogInteraction(struct FName InTargetName); // Function Phoenix.SocialReactor.BeginDialogInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x3498560
	bool AllowConversation(struct FString InTargetName, struct FString inMyName); // Function Phoenix.SocialReactor.AllowConversation // (Final|Native|Public|BlueprintCallable) // @ game+0x3498460
	bool AddNewIdentity(struct FName& InCharacterName, struct FName& InIdentityName); // Function Phoenix.SocialReactor.AddNewIdentity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3498370
};

// Class Phoenix.ThrowableInventoryItemTool
// Size: 0x438 (Inherited: 0x430)
struct AThrowableInventoryItemTool : AInventoryItemTool {
	float MaxDistance; // 0x430(0x04)
	char pad_434[0x4]; // 0x434(0x04)

	float GetMaxDistance(); // Function Phoenix.ThrowableInventoryItemTool.GetMaxDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x3498ad0
};

// Class Phoenix.Tier4_Actor
// Size: 0x598 (Inherited: 0x360)
struct ATier4_Actor : ACustomizableActor {
	char pad_360[0x28]; // 0x360(0x28)
	struct UPhxAnimationSharingSetup* AnimSharingSetup; // 0x388(0x08)
	char pad_390[0x158]; // 0x390(0x158)
	struct UCapsuleComponent* Collision; // 0x4e8(0x08)
	char pad_4F0[0x90]; // 0x4f0(0x90)
	struct AVisibilityMeshActor* VisibilityMesh; // 0x580(0x08)
	char pad_588[0x10]; // 0x588(0x10)

	bool TeleportToStation(struct AStation* InStation, int32_t InConnectionIndex); // Function Phoenix.Tier4_Actor.TeleportToStation // (Final|Native|Public|BlueprintCallable) // @ game+0x3499940
	void SetManagedStackVisibilityMesh(struct UStaticMeshComponent* InVisibilityMesh); // Function Phoenix.Tier4_Actor.SetManagedStackVisibilityMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x34995b0
	void OnCharacterLoadComplete(struct AActor* inTheActor); // Function Phoenix.Tier4_Actor.OnCharacterLoadComplete // (Final|Native|Protected) // @ game+0x3498ed0
	void OnBeginActorOverlap(struct AActor* SelfActor, struct AActor* OtherActor); // Function Phoenix.Tier4_Actor.OnBeginActorOverlap // (Final|Native|Public) // @ game+0x3498e00
};

// Class Phoenix.T4_AnimationSharingStateProcessor
// Size: 0x60 (Inherited: 0x50)
struct UT4_AnimationSharingStateProcessor : UAnimationSharingStateProcessor {
	char pad_50[0x10]; // 0x50(0x10)

	void UpdateT4State(int32_t& OutState, struct AActor* InActor, char CurrentState, char OnDemandState, bool& bShouldProcess); // Function Phoenix.T4_AnimationSharingStateProcessor.UpdateT4State // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x3499ae0
	void ProcessActorState_Implementation(int32_t& OutState, struct AActor* InActor, char CurrentState, char OnDemandState, bool& bShouldProcess); // Function Phoenix.T4_AnimationSharingStateProcessor.ProcessActorState_Implementation // (Native|Public|HasOutParms) // @ game+0x252a840
	void GetUsesEyeMouthAnims(char InCurrentState, bool& bOutUsesEyeAnims, bool& bOutUsesMouthAnims); // Function Phoenix.T4_AnimationSharingStateProcessor.GetUsesEyeMouthAnims // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	enum class EFacialAnimType GetFacialAnimType(char InCurrentState); // Function Phoenix.T4_AnimationSharingStateProcessor.GetFacialAnimType // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Tier4ActorCache
// Size: 0x1e0 (Inherited: 0x28)
struct UTier4ActorCache : UObject {
	char pad_28[0x1b8]; // 0x28(0x1b8)

	void SetTempMaxAllowedT4(float InTempMax); // Function Phoenix.Tier4ActorCache.SetTempMaxAllowedT4 // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3499640
	struct UTier4ActorCache* Get(); // Function Phoenix.Tier4ActorCache.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34987b0
	void ClearTempMaxAllowedT4(); // Function Phoenix.Tier4ActorCache.ClearTempMaxAllowedT4 // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x3498630
};

// Class Phoenix.TileableFrameActor
// Size: 0x278 (Inherited: 0x248)
struct ATileableFrameActor : AActor {
	struct USceneComponent* SceneRoot; // 0x248(0x08)
	struct UInstancedStaticMeshComponent* InstRectTileMid; // 0x250(0x08)
	struct UInstancedStaticMeshComponent* InstRectTileCorner; // 0x258(0x08)
	struct UStaticMesh* RectangularFrameTile; // 0x260(0x08)
	struct UStaticMesh* RectangularFrameCorner; // 0x268(0x08)
	int32_t HorizontalTileCount; // 0x270(0x04)
	int32_t VerticalTileCount; // 0x274(0x04)

	void MakeFrame(); // Function Phoenix.TileableFrameActor.MakeFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x3498ce0
};

// Class Phoenix.TileSpawnPointCollector
// Size: 0x528 (Inherited: 0x248)
struct ATileSpawnPointCollector : AActor {
	struct FCustomButtonWidget UpdateSpawnLocationsDBButton; // 0x248(0x30)
	char pad_278[0x2b0]; // 0x278(0x2b0)
};

// Class Phoenix.TombProtectorStatue
// Size: 0x248 (Inherited: 0x248)
struct ATombProtectorStatue : AActor {
};

// Class Phoenix.TombProtectorSwordCharacter
// Size: 0xcd0 (Inherited: 0xcc0)
struct ATombProtectorSwordCharacter : AAmbulatory_Character {
	struct AActor* TombProtector; // 0xcc0(0x08)
	struct AActor* Player; // 0xcc8(0x08)
};

// Class Phoenix.ToolTipPopoutWidget
// Size: 0x2d8 (Inherited: 0x268)
struct UToolTipPopoutWidget : UUserWidget {
	struct FText PopoutTitle; // 0x268(0x18)
	struct FText PopoutSubtitle; // 0x280(0x18)
	struct FText PopoutDescription; // 0x298(0x18)
	struct FText PopoutLegend; // 0x2b0(0x18)
	struct UHeaderWidget* Header; // 0x2c8(0x08)
	struct UPhoenixTextBlock* Description; // 0x2d0(0x08)

	void SetHeaderData(struct FText NewTitle, struct FText NewSubtitle); // Function Phoenix.ToolTipPopoutWidget.SetHeaderData // (Final|Native|Public|BlueprintCallable) // @ game+0x3499420
	void SetDescription(struct FText NewDescription); // Function Phoenix.ToolTipPopoutWidget.SetDescription // (Final|Native|Public|BlueprintCallable) // @ game+0x3499230
	void SetButtonLegend(struct FText Legend); // Function Phoenix.ToolTipPopoutWidget.SetButtonLegend // (Final|Native|Public|BlueprintCallable) // @ game+0x3499150
	void OnSynchronizeProperties(); // Function Phoenix.ToolTipPopoutWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TooltipWidget
// Size: 0x268 (Inherited: 0x268)
struct UTooltipWidget : UUserWidget {

	void OnSynchronizeProperties(); // Function Phoenix.TooltipWidget.OnSynchronizeProperties // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Torch
// Size: 0x510 (Inherited: 0x258)
struct ATorch : AStaticMeshActor {
	bool bStartLit; // 0x258(0x01)
	bool bUseMesh; // 0x259(0x01)
	bool bSimulatePhysics; // 0x25a(0x01)
	bool bStartAsleep; // 0x25b(0x01)
	bool bTargetable; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FLinearColor LightColor; // 0x260(0x10)
	bool bLightTemperature; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	float LightTemperature; // 0x274(0x04)
	bool bPropagate; // 0x278(0x01)
	bool bCustomPropagateRadius; // 0x279(0x01)
	char pad_27A[0x2]; // 0x27a(0x02)
	float CustomPropagateRadius; // 0x27c(0x04)
	bool bReceiveSequentialLighting; // 0x280(0x01)
	bool bSendSequentialLighting; // 0x281(0x01)
	char pad_282[0x2]; // 0x282(0x02)
	float SequentialLightSpreadRadius; // 0x284(0x04)
	bool bLightProxPlayer; // 0x288(0x01)
	char pad_289[0x3]; // 0x289(0x03)
	float ProxToPlayer; // 0x28c(0x04)
	bool bAncientMagic; // 0x290(0x01)
	bool bExternalBoiler; // 0x291(0x01)
	bool bCastShadow; // 0x292(0x01)
	bool bCastVolumetricShadow; // 0x293(0x01)
	bool bCastShadowOnlyFromStaticObjects; // 0x294(0x01)
	enum class ELightUnits PointLightUnit; // 0x295(0x01)
	char pad_296[0x2]; // 0x296(0x02)
	float PointLightIntensity; // 0x298(0x04)
	float PointLightOffIntensity; // 0x29c(0x04)
	float CustomLightRadius; // 0x2a0(0x04)
	float SourceRadius_PL; // 0x2a4(0x04)
	float ShadowResolution_PL; // 0x2a8(0x04)
	float ContactShadowLength_PL; // 0x2ac(0x04)
	float MSRShadowCaster_PL; // 0x2b0(0x04)
	float VolumetricScattering_PL; // 0x2b4(0x04)
	float IndirectLighting_PL; // 0x2b8(0x04)
	float MinDistance_PL; // 0x2bc(0x04)
	float MaxDrawDistance_PL; // 0x2c0(0x04)
	bool bCustomLightPosition; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	struct FVector CustomLightPosition; // 0x2c8(0x0c)
	bool bCustomLightRotation; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)
	struct FRotator CustomLightRotation; // 0x2d8(0x0c)
	bool bUseLightTexture; // 0x2e4(0x01)
	char pad_2E5[0x3]; // 0x2e5(0x03)
	struct UTexture* LightTexture; // 0x2e8(0x08)
	struct TArray<struct FWCullingPlane> CullingPlanes; // 0x2f0(0x10)
	bool bSpotlight; // 0x300(0x01)
	bool bSpotlightShadow; // 0x301(0x01)
	bool bSpotlightVolumetricShadow; // 0x302(0x01)
	bool bSpotlightCastShadowOnlyFromStaticObjects; // 0x303(0x01)
	enum class ELightUnits SpotlightUnit; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	float SpotlightIntensity; // 0x308(0x04)
	float AttenuationRadius_SL; // 0x30c(0x04)
	float SourceRadius_SL; // 0x310(0x04)
	float ShadowResolution_SL; // 0x314(0x04)
	float ShadowBias_SL; // 0x318(0x04)
	float ShadowSlopeBias_SL; // 0x31c(0x04)
	float InnerConeAngle; // 0x320(0x04)
	float OuterConeAngle; // 0x324(0x04)
	float ContactShadowLength_SL; // 0x328(0x04)
	float MSRShadowCaster_SL; // 0x32c(0x04)
	float VolumetricScattering_SL; // 0x330(0x04)
	float IndirectLighting_SL; // 0x334(0x04)
	float MaxDrawDistance_SL; // 0x338(0x04)
	struct FVector SpotlightLocation; // 0x33c(0x0c)
	struct FRotator SpotlightRotation; // 0x348(0x0c)
	bool bUseLightTexture_SL; // 0x354(0x01)
	char pad_355[0x3]; // 0x355(0x03)
	struct UTexture* SpotlightTexture; // 0x358(0x08)
	struct TArray<struct FWCullingPlane> SpotlightCullingPlanes; // 0x360(0x10)
	bool bIndirectLight; // 0x370(0x01)
	enum class ELightUnits IndirectLightUnit; // 0x371(0x01)
	char pad_372[0x2]; // 0x372(0x02)
	float IndirectIntensity; // 0x374(0x04)
	float CustomLightRadius_IL; // 0x378(0x04)
	float MaxDrawDistance_IL; // 0x37c(0x04)
	bool bCustomFireParticle; // 0x380(0x01)
	char pad_381[0x7]; // 0x381(0x07)
	struct UNiagaraSystem* CustomFireParticle; // 0x388(0x08)
	struct FTransform CustomParticleTransform; // 0x390(0x30)
	float WaveSpeed1; // 0x3c0(0x04)
	float WaveSpeed2; // 0x3c4(0x04)
	float MinIntensity; // 0x3c8(0x04)
	float IntensityNoiseSpeed; // 0x3cc(0x04)
	float IntensityNoiseFactor; // 0x3d0(0x04)
	bool bDayNightModulate; // 0x3d4(0x01)
	char pad_3D5[0x3]; // 0x3d5(0x03)
	float DayIntensityMod; // 0x3d8(0x04)
	struct FLinearColor DayColorMod; // 0x3dc(0x10)
	float NightIntensityMod; // 0x3ec(0x04)
	struct FLinearColor NightColorMod; // 0x3f0(0x10)
	struct UStaticMeshComponent* TorchMeshComp; // 0x400(0x08)
	struct UPointLightComponent* PointLightComp; // 0x408(0x08)
	struct USpotLightComponent* SpotLightComp; // 0x410(0x08)
	struct UPointLightComponent* IndirectLightComp; // 0x418(0x08)
	struct UAnimatedLightComponent* AnimatedLightComp; // 0x420(0x08)
	struct UDayNightLocalLightControllerComponent* LightControllerComp; // 0x428(0x08)
	struct UAkComponent* AkComp; // 0x430(0x08)
	struct UNiagaraComponent* ParticleComp; // 0x438(0x08)
	struct USphereComponent* PropagateSphere; // 0x440(0x08)
	struct USphereComponent* ProximitySphere; // 0x448(0x08)
	struct UTimelineComponent* LightLerp_Timeline; // 0x450(0x08)
	struct UAkAudioEvent* Ak_Light; // 0x458(0x08)
	struct UAkAudioEvent* Ak_Extinguish; // 0x460(0x08)
	bool bIsLit; // 0x468(0x01)
	bool bLightTick; // 0x469(0x01)
	bool bMovable; // 0x46a(0x01)
	bool bCanSound; // 0x46b(0x01)
	struct FVector FlameLocation; // 0x46c(0x0c)
	char pad_478[0x8]; // 0x478(0x08)
	struct FTransform DPC_InitialTransform; // 0x480(0x30)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x4b0(0x10)
	struct TArray<struct AActor*> PropagateObjects; // 0x4c0(0x10)
	struct UObjectStateInfo* TorchObjectState; // 0x4d0(0x08)
	enum class ELightUnits PreviousPLUnit; // 0x4d8(0x01)
	enum class ELightUnits PreviousSLUnit; // 0x4d9(0x01)
	enum class ELightUnits PreviousILUnit; // 0x4da(0x01)
	char pad_4DB[0x5]; // 0x4db(0x05)
	struct TArray<struct TSoftObjectPtr<UNiagaraSystem>> FireSystems; // 0x4e0(0x10)
	struct TArray<struct TSoftObjectPtr<UNiagaraSystem>> PhysicsFireSystems; // 0x4f0(0x10)
	char pad_500[0x10]; // 0x500(0x10)

	bool TorchSetup(struct UObjectStateComponent* i_ObjectStateComp, struct UTimelineComponent* i_Timeline, struct UNiagaraComponent* i_FireParticle, struct USphereComponent* i_PropagateTrigger, struct UAkComponent* i_AkComp, struct UAnimatedLightComponent* i_AnimatedLight, struct UPointLightComponent* i_PL, struct USpotLightComponent* i_SL, struct UPointLightComponent* i_IL); // Function Phoenix.Torch.TorchSetup // (Final|Native|Protected|BlueprintCallable) // @ game+0x349cc90
	void TorchGetNormalizedTime(float& NormalizedTime); // Function Phoenix.Torch.TorchGetNormalizedTime // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x349cbf0
	void StopLerp(); // Function Phoenix.Torch.StopLerp // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StartLight(bool bLerp); // Function Phoenix.Torch.StartLight // (Final|Native|Public|BlueprintCallable) // @ game+0x349cb40
	bool ShouldStartLit(); // Function Phoenix.Torch.ShouldStartLit // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x349cb10
	void SetUpLights(struct UPointLightComponent* curPL, struct USpotLightComponent* curSL, struct UPointLightComponent* curIL); // Function Phoenix.Torch.SetUpLights // (Final|Native|Protected|BlueprintCallable) // @ game+0x349c9e0
	void SetOnFire(bool bOnFire); // Function Phoenix.Torch.SetOnFire // (Final|Native|Protected|BlueprintCallable) // @ game+0x349c730
	void SequentialLightTimelineUpdate(struct FVector LightLoc, float Percent); // Function Phoenix.Torch.SequentialLightTimelineUpdate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x349c650
	void SequentialLightTimelineFinish(); // Function Phoenix.Torch.SequentialLightTimelineFinish // (Final|Native|Public|BlueprintCallable) // @ game+0x349c630
	void SequentialLight(struct FVector LightLoc); // Function Phoenix.Torch.SequentialLight // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x349c5a0
	void ResetLightColor(); // Function Phoenix.Torch.ResetLightColor // (Final|Native|Public|BlueprintCallable) // @ game+0x349c580
	float PropagationSetup(); // Function Phoenix.Torch.PropagationSetup // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Propagate(); // Function Phoenix.Torch.Propagate // (Final|Native|Private|BlueprintCallable) // @ game+0x349c540
	bool ParticleSetup(); // Function Phoenix.Torch.ParticleSetup // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void OnProxOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.Torch.OnProxOverlapBegin // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x349c290
	void OnPropagateOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.Torch.OnPropagateOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x349c0a0
	void OnPropagateOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.Torch.OnPropagateOverlapBegin // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x349bdb0
	char ModFunctionSetup(); // Function Phoenix.Torch.ModFunctionSetup // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x349bd60
	void MidLight(); // Function Phoenix.Torch.MidLight // (Final|Native|Protected|BlueprintCallable) // @ game+0x349bd20
	void LoadSyncronousNiagaraSystem(struct TSoftObjectPtr<UNiagaraSystem> UnloadedSystem, struct UNiagaraSystem*& LoadedSystem); // Function Phoenix.Torch.LoadSyncronousNiagaraSystem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x349bbc0
	void LightswitchTimelineUpdate(float Percent); // Function Phoenix.Torch.LightswitchTimelineUpdate // (Final|Native|Protected|BlueprintCallable) // @ game+0x349bb40
	void Lightswitch_Lerp(bool bOn); // Function Phoenix.Torch.Lightswitch_Lerp // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Lightswitch(bool bOn, bool bLerp); // Function Phoenix.Torch.Lightswitch // (Final|Native|Protected|BlueprintCallable) // @ game+0x349ba70
	struct FTransform GetDPCInitialTransform(); // Function Phoenix.Torch.GetDPCInitialTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x349ba10
	void ExtinguishLight(bool bSlow); // Function Phoenix.Torch.ExtinguishLight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x349b910
	void EndLight(bool bLerp); // Function Phoenix.Torch.EndLight // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x349b880
	void CrossLightTickRange(bool bin); // Function Phoenix.Torch.CrossLightTickRange // (Final|Native|Protected|BlueprintCallable) // @ game+0x349b7f0
	bool ConstructTorch(); // Function Phoenix.Torch.ConstructTorch // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ChangeLightColor(struct FLinearColor i_Color, float i_temperature); // Function Phoenix.Torch.ChangeLightColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x349b700
};

// Class Phoenix.TorchComponent
// Size: 0x178 (Inherited: 0xc8)
struct UTorchComponent : UActorComponent {
	bool bStartLit; // 0xc8(0x01)
	bool bPropagate; // 0xc9(0x01)
	bool bCastShadow; // 0xca(0x01)
	char pad_CB[0x1]; // 0xcb(0x01)
	struct FLinearColor LightColor; // 0xcc(0x10)
	float LightIntensity; // 0xdc(0x04)
	bool bCustomLightRadius; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float CustomLightRadius; // 0xe4(0x04)
	bool bReceiveSequentialLighting; // 0xe8(0x01)
	bool bSendSequentialLighting; // 0xe9(0x01)
	char pad_EA[0x2]; // 0xea(0x02)
	float SequentialLightSpreadRadius; // 0xec(0x04)
	bool bOverrideLightDelay; // 0xf0(0x01)
	char pad_F1[0x3]; // 0xf1(0x03)
	float OverrideLightDelay; // 0xf4(0x04)
	bool bIsLit; // 0xf8(0x01)
	bool bLightTick; // 0xf9(0x01)
	char pad_FA[0x2]; // 0xfa(0x02)
	float CurrentLightIntensity; // 0xfc(0x04)
	float LightDelay; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct USphereComponent* PropagateSphere; // 0x108(0x08)
	struct TArray<struct UNiagaraComponent*> FireParticles; // 0x110(0x10)
	struct TArray<struct UMaterialBillboardComponent*> FireBillboards; // 0x120(0x10)
	struct UAkComponent* Ak_Fire_Burning_Loop; // 0x130(0x08)
	struct UPointLightComponent* FirePointLight; // 0x138(0x08)
	struct UAnimatedLightComponent* AnimatedLight; // 0x140(0x08)
	struct TArray<enum class EObjectTypeQuery> ObjectTypes; // 0x148(0x10)
	struct TArray<struct AActor*> PropagateObjects; // 0x158(0x10)
	struct UObjectStateInfo* TorchObjectState; // 0x168(0x08)
	char pad_170[0x8]; // 0x170(0x08)

	void StartLight(); // Function Phoenix.TorchComponent.StartLight // (Final|Native|Public|BlueprintCallable) // @ game+0x349cbd0
	void SetOnFire(bool bOnFire); // Function Phoenix.TorchComponent.SetOnFire // (Final|Native|Protected|BlueprintCallable) // @ game+0x349c7c0
	void SequentialLight(); // Function Phoenix.TorchComponent.SequentialLight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void Propagate(); // Function Phoenix.TorchComponent.Propagate // (Final|Native|Private|BlueprintCallable) // @ game+0x349c560
	void OnProxOverlapBegin(struct AActor* OtherActor); // Function Phoenix.TorchComponent.OnProxOverlapBegin // (Final|Native|Private|BlueprintCallable) // @ game+0x349c4b0
	void OnPropagateOverlapEnd(struct AActor* OtherActor); // Function Phoenix.TorchComponent.OnPropagateOverlapEnd // (Final|Native|Private|BlueprintCallable) // @ game+0x349c200
	void OnPropagateOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor); // Function Phoenix.TorchComponent.OnPropagateOverlapBegin // (Final|Native|Private|BlueprintCallable) // @ game+0x349bfd0
	void MidLight(); // Function Phoenix.TorchComponent.MidLight // (Final|Native|Protected|BlueprintCallable) // @ game+0x349bd40
	void ExtinguishLight(); // Function Phoenix.TorchComponent.ExtinguishLight // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x349b9a0
	void EndLight(); // Function Phoenix.TorchComponent.EndLight // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Totem
// Size: 0x248 (Inherited: 0x248)
struct ATotem : AActor {
};

// Class Phoenix.TrackingInfoWidget
// Size: 0x278 (Inherited: 0x268)
struct UTrackingInfoWidget : UUserWidget {
	float DisplayDuration; // 0x268(0x04)
	char pad_26C[0xc]; // 0x26c(0x0c)

	void OnDisplayInputReleased(); // Function Phoenix.TrackingInfoWidget.OnDisplayInputReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x349bd90
	bool GetIsExtended(); // Function Phoenix.TrackingInfoWidget.GetIsExtended // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x349ba50
	bool GetIsDisplayed(); // Function Phoenix.TrackingInfoWidget.GetIsDisplayed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x3460180
	void DisplayTrackerInfo(struct FString TrackerTitle, struct TArray<struct FTaskData>& TaskData, struct FString ExtendedDesc, struct FString IconName); // Function Phoenix.TrackingInfoWidget.DisplayTrackerInfo // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void DisplayExtendedInfo(); // Function Phoenix.TrackingInfoWidget.DisplayExtendedInfo // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void CollapseTrackerInfo(); // Function Phoenix.TrackingInfoWidget.CollapseTrackerInfo // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.Train
// Size: 0x390 (Inherited: 0x280)
struct ATrain : AWorldEventActor {
	char pad_280[0x14]; // 0x280(0x14)
	enum class ETrainType TrainType; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)
	struct ATrain* DockedFront; // 0x298(0x08)
	float DesiredSpeed; // 0x2a0(0x04)
	float DistanceAlongTrack; // 0x2a4(0x04)
	struct USkeletalMeshComponent* Train; // 0x2a8(0x08)
	struct USkeletalMeshComponent* BogieFront; // 0x2b0(0x08)
	struct USkeletalMeshComponent* BogieBack; // 0x2b8(0x08)
	struct USceneComponent* FrontAttatchment; // 0x2c0(0x08)
	struct USceneComponent* BackAttatchment; // 0x2c8(0x08)
	struct TSoftObjectPtr<USkeletalMesh> TrainMesh; // 0x2d0(0x28)
	struct TSoftObjectPtr<USkeletalMesh> FrontBogieMesh; // 0x2f8(0x28)
	struct TSoftObjectPtr<USkeletalMesh> BackBogieMesh; // 0x320(0x28)
	struct UTrainNavigationSplineComponent* TrackSpline; // 0x348(0x08)
	float AccelerationExp; // 0x350(0x04)
	struct FVector TrainPositionOffset; // 0x354(0x0c)
	struct FVector BogiePositionOffset; // 0x360(0x0c)
	struct FRotator FrontBogieRotationOffset; // 0x36c(0x0c)
	struct FRotator BackBogieRotationOffset; // 0x378(0x0c)
	float RailZOffset; // 0x384(0x04)
	float CurrentSpeed; // 0x388(0x04)
	float SpeedToAnimationRatio; // 0x38c(0x04)
};

// Class Phoenix.TrainManager
// Size: 0xd0 (Inherited: 0x28)
struct UTrainManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTrainSettings* TrainSettings; // 0x38(0x08)
	struct ATrain* TrainEngine; // 0x40(0x08)
	struct ATrain* CoalCar; // 0x48(0x08)
	struct TArray<struct ATrain*> PassengerCars; // 0x50(0x10)
	struct UTrainNavigationSplineComponent* NavigationSpline; // 0x60(0x08)
	char pad_68[0x68]; // 0x68(0x68)

	void SetupTrain(); // Function Phoenix.TrainManager.SetupTrain // (Final|Native|Public|BlueprintCallable) // @ game+0x349caf0
	void SetTrainSpeed(float Speed); // Function Phoenix.TrainManager.SetTrainSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x349c960
	void SetTrainPositionAlongTrack(struct FVector Position); // Function Phoenix.TrainManager.SetTrainPositionAlongTrack // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x349c8d0
	void SetTrainDistanceAlongTrack(float Distance); // Function Phoenix.TrainManager.SetTrainDistanceAlongTrack // (Final|Native|Public|BlueprintCallable) // @ game+0x349c850
	struct UTrainManager* Get(); // Function Phoenix.TrainManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349b9c0
	void CleanupTrain(); // Function Phoenix.TrainManager.CleanupTrain // (Final|Native|Public|BlueprintCallable) // @ game+0x349b7d0
};

// Class Phoenix.TrainNavigationSplineComponent
// Size: 0x590 (Inherited: 0x580)
struct UTrainNavigationSplineComponent : USplineComponent {
	struct TArray<struct FTrainNavRenderSplines> GeometryTrackSplines; // 0x578(0x10)
};

// Class Phoenix.TrainSettings
// Size: 0xb0 (Inherited: 0x28)
struct UTrainSettings : UObject {
	struct TSoftClassPtr<UObject> Engine; // 0x28(0x28)
	struct TSoftClassPtr<UObject> CoalCar; // 0x50(0x28)
	struct TSoftClassPtr<UObject> PassengerCar; // 0x78(0x28)
	bool bIncludeCoalCar; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	int32_t NumOfPassengerCars; // 0xa4(0x04)
	float MinScreenSize; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Phoenix.TransfigurableObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct UTransfigurableObjectInterface : UInterface {

	void ReactivateObject(); // Function Phoenix.TransfigurableObjectInterface.ReactivateObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34a0bf0
	void ObjectVanished(); // Function Phoenix.TransfigurableObjectInterface.ObjectVanished // (Native|Event|Public|BlueprintEvent) // @ game+0x318b7c0
	void ObjectTransformationStarted(); // Function Phoenix.TransfigurableObjectInterface.ObjectTransformationStarted // (Native|Event|Public|BlueprintEvent) // @ game+0x3284ed0
	void ObjectTransformationConfirmed(); // Function Phoenix.TransfigurableObjectInterface.ObjectTransformationConfirmed // (Native|Event|Public|BlueprintEvent) // @ game+0x34a0ae0
	void ObjectTransformationCancelled(); // Function Phoenix.TransfigurableObjectInterface.ObjectTransformationCancelled // (Native|Event|Public|BlueprintEvent) // @ game+0x3325e40
	void ObjectStreamedSpawnInConfirmed(); // Function Phoenix.TransfigurableObjectInterface.ObjectStreamedSpawnInConfirmed // (Native|Event|Public|BlueprintEvent) // @ game+0x32872b0
	void ObjectPhysicalResponseImpact(float ImpactIntensity, struct FName SpellName, struct FName ResponseConfigName, struct FVector& ImpactLocation); // Function Phoenix.TransfigurableObjectInterface.ObjectPhysicalResponseImpact // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x33fb110
	void ObjectConjured(); // Function Phoenix.TransfigurableObjectInterface.ObjectConjured // (Native|Event|Public|BlueprintEvent) // @ game+0x3285380
	bool IsObjectContextValidForVanishment(); // Function Phoenix.TransfigurableObjectInterface.IsObjectContextValidForVanishment // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32854c0
	bool IsObjectContextValidForTransformation(); // Function Phoenix.TransfigurableObjectInterface.IsObjectContextValidForTransformation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x32854f0
	struct TArray<struct FTransfigurationResource> GetAdditionalItemsReturned(); // Function Phoenix.TransfigurableObjectInterface.GetAdditionalItemsReturned // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x349f6f0
	void FinalizeInitialAnimationState(); // Function Phoenix.TransfigurableObjectInterface.FinalizeInitialAnimationState // (Native|Event|Public|BlueprintEvent) // @ game+0x32ca310
	void DeactivateObject(); // Function Phoenix.TransfigurableObjectInterface.DeactivateObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x349f640
};

// Class Phoenix.TransfigurationColorConfiguration
// Size: 0xb0 (Inherited: 0x30)
struct UTransfigurationColorConfiguration : UDataAsset {
	struct TMap<struct FName, struct UTexture*> ColorSwatchMap; // 0x30(0x50)
	struct UMaterialInterface* TintMaster; // 0x80(0x08)
	struct UMaterialInterface* TransitionMaster; // 0x88(0x08)
	struct UMaterialInterface* TintMasterAlpha; // 0x90(0x08)
	struct UMaterialInterface* TransitionMasterAlpha; // 0x98(0x08)
	struct UMaterialInterface* TintMasterEmissive; // 0xa0(0x08)
	struct UMaterialInterface* TransitionMasterEmissive; // 0xa8(0x08)
};

// Class Phoenix.TransfigurationMaterials
// Size: 0x38 (Inherited: 0x30)
struct UTransfigurationMaterials : UDataAsset {
	struct UMaterialInterface* VFXFlipbookMaster; // 0x30(0x08)
};

// Class Phoenix.TransfigurationManager
// Size: 0xa38 (Inherited: 0xa8)
struct UTransfigurationManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x7b8]; // 0xa8(0x7b8)
	struct TMap<struct FName, struct FCachedColovariaMaterialArray> CachedColovariaMaterials; // 0x860(0x50)
	struct TArray<struct FCachedColovariaComponentInfo> ColovariaCacheRequiredComponentQueue; // 0x8b0(0x10)
	struct TArray<struct FCachedColovariaComponentInfo> ColovariaCacheAdditionalComponentQueue; // 0x8c0(0x10)
	struct UVanishmentQueue* VanishmentQueue; // 0x8d0(0x08)
	struct UPhysicalResponseReporter* PhysicalResponseReporter; // 0x8d8(0x08)
	struct UTransformAllLoadController* TransformAllController; // 0x8e0(0x08)
	struct UFoliageRemoverContainer* FoliageRemoverContainer; // 0x8e8(0x08)
	char pad_8F0[0x148]; // 0x8f0(0x148)

	void VanishObject(struct AActor* InActor, bool bShowEffect, bool bReturnResources, bool bReturnAllRequiredResources, struct UObject* InPreviewActorClass, bool bDeferNotification); // Function Phoenix.TransfigurationManager.VanishObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a1360
	void UnlockTransfigurationItemsForCurriculum(struct TMap<enum class EDisciplineType, int32_t> CurriculumYearsCompleted, bool bIncludePurchasableLocks, bool bIncludeMissionRewardLocks); // Function Phoenix.TransfigurationManager.UnlockTransfigurationItemsForCurriculum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a1160
	void SpawnAllColorChangeItemsBlueprint(); // Function Phoenix.TransfigurationManager.SpawnAllColorChangeItemsBlueprint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a1130
	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InSpawnTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool bInIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.TransfigurationManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x34a0e20
	void SetPowerpointSnappingEnabledBlueprint(bool bIsEnabled); // Function Phoenix.TransfigurationManager.SetPowerpointSnappingEnabledBlueprint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0d90
	void SetMoveablePlaceholderObjectsEnabled(bool bEnabled); // Function Phoenix.TransfigurationManager.SetMoveablePlaceholderObjectsEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0d10
	void SetConjurationContextBlueprint(enum class EConjurationContext InContext); // Function Phoenix.TransfigurationManager.SetConjurationContextBlueprint // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0c90
	void ResetTransfigurationObjectTransform(struct AActor* InActor); // Function Phoenix.TransfigurationManager.ResetTransfigurationObjectTransform // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0c10
	void OnSaveGameLoaded(); // Function Phoenix.TransfigurationManager.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x34a0bd0
	void OnNewGame(); // Function Phoenix.TransfigurationManager.OnNewGame // (Final|Native|Public) // @ game+0x34a0bb0
	void OnGameToBeSaved(); // Function Phoenix.TransfigurationManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x34a0b90
	void OnDeferredChildActorSpawned(struct UDeferredChildActorComponent* InChildActorComponent); // Function Phoenix.TransfigurationManager.OnDeferredChildActorSpawned // (Final|Native|Private) // @ game+0x34a0b00
	bool IsVanishmentQueueEmpty(); // Function Phoenix.TransfigurationManager.IsVanishmentQueueEmpty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0ab0
	bool IsTransformAllQueueEmpty(); // Function Phoenix.TransfigurationManager.IsTransformAllQueueEmpty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0a80
	bool IsSpawnQueueEmpty(); // Function Phoenix.TransfigurationManager.IsSpawnQueueEmpty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0a50
	bool HasTransfigSlotAvailableToConjureFromObjectCategory(struct FName CategoryName, enum class EConjurationContext Context); // Function Phoenix.TransfigurationManager.HasTransfigSlotAvailableToConjureFromObjectCategory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34a0980
	bool HasEnoughConjurationBudgetToConjure(struct AActor* InActor); // Function Phoenix.TransfigurationManager.HasEnoughConjurationBudgetToConjure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34a08f0
	struct FTransfigurationUnlockSource GetUnlockSourceForLockID_static(struct FName LockId); // Function Phoenix.TransfigurationManager.GetUnlockSourceForLockID_static // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0780
	struct TArray<struct FName> GetTransformationObjectList(struct FName& CategoryName); // Function Phoenix.TransfigurationManager.GetTransformationObjectList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a06b0
	struct TArray<struct FName> GetTransformationGroups(struct FName& ObjectName); // Function Phoenix.TransfigurationManager.GetTransformationGroups // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a05e0
	struct FName GetTransformationGroupForObject(struct FName ObjectName); // Function Phoenix.TransfigurationManager.GetTransformationGroupForObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34a0550
	struct FName GetTransformationCategory(struct FName& ObjectName); // Function Phoenix.TransfigurationManager.GetTransformationCategory // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a04b0
	void GetTransfigurationItemsFromLockID(struct FName LockId, struct TArray<struct FName>& ItemNames, struct TArray<struct FName>& ItemCategories); // Function Phoenix.TransfigurationManager.GetTransfigurationItemsFromLockID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a0360
	void GetTransfigurationItemFromLockID(struct FName LockId, bool& bUniqueItemFound, struct FName& ItemName, struct FName& ItemCategory); // Function Phoenix.TransfigurationManager.GetTransfigurationItemFromLockID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a01f0
	struct FTransfigSlotPool GetTransfigSlotPoolFromObjectCategory(struct FName CategoryName, bool& bOutPoolExists); // Function Phoenix.TransfigurationManager.GetTransfigSlotPoolFromObjectCategory // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34a00c0
	struct FTransfigSlotPool GetTransfigSlotPoolFromClassName(struct FName ObjectClass, bool& bOutPoolExists); // Function Phoenix.TransfigurationManager.GetTransfigSlotPoolFromClassName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x349ff90
	struct FName GetObjectTransfigSlotIDFromActor(struct AActor* InActor); // Function Phoenix.TransfigurationManager.GetObjectTransfigSlotIDFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349ff00
	int32_t GetObjectCostConjurationBudgetFromActor(struct AActor* InActor); // Function Phoenix.TransfigurationManager.GetObjectCostConjurationBudgetFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349fe70
	int32_t GetObjectCostConjurationBudget(struct FName CategoryName); // Function Phoenix.TransfigurationManager.GetObjectCostConjurationBudget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349fde0
	void GetNumExpansions(enum class EConjurationContext InContext, int32_t& OutNumAvailableExpansions, int32_t& OutNumTotalExpansions); // Function Phoenix.TransfigurationManager.GetNumExpansions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x349fcc0
	struct FName GetLockIDForObject(struct FName inObjectName); // Function Phoenix.TransfigurationManager.GetLockIDForObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349fc30
	int32_t GetLevelConjurationBudget(enum class EConjurationContext Context); // Function Phoenix.TransfigurationManager.GetLevelConjurationBudget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349fbb0
	enum class EConjurationContext GetConjurationContext(); // Function Phoenix.TransfigurationManager.GetConjurationContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349fb80
	struct TArray<struct FName> GetConjurationCategoriesFromStatsCategory(struct FName InStatsCategory, bool bIgnoreEmptyCategories); // Function Phoenix.TransfigurationManager.GetConjurationCategoriesFromStatsCategory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349fa70
	void GetConjurationBudgetPerExpansion(enum class EConjurationContext InContext, float& OutMainExpansionBudget, float& OutBudgetPerUnlockableExpansion); // Function Phoenix.TransfigurationManager.GetConjurationBudgetPerExpansion // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x349f940
	int32_t GetConjurationBudgetCurrentlyUsed(enum class EConjurationContext Context); // Function Phoenix.TransfigurationManager.GetConjurationBudgetCurrentlyUsed // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349f8c0
	struct TArray<struct FName> GetAllTransfigurationLocks(bool bIncludeAlreadyUnlocked); // Function Phoenix.TransfigurationManager.GetAllTransfigurationLocks // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f7f0
	struct TArray<struct FName> GetAllTransfigurationCategories(); // Function Phoenix.TransfigurationManager.GetAllTransfigurationCategories // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f770
	bool DoesTransfigurationObjectExist(int32_t ObjectUID); // Function Phoenix.TransfigurationManager.DoesTransfigurationObjectExist // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x349f660
	void ColorObject(struct AActor* InActor, struct FName InColorID, bool bShowEffect); // Function Phoenix.TransfigurationManager.ColorObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f540
	bool BP_IsColovariaCacheRequiredQueueEmpty(); // Function Phoenix.TransfigurationManager.BP_IsColovariaCacheRequiredQueueEmpty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f510
	struct TArray<struct FTransfigurationResource> BP_GetResourcesRequiredForCategory(struct FName CategoryName); // Function Phoenix.TransfigurationManager.BP_GetResourcesRequiredForCategory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f440
	struct TArray<struct FTransfigurationResource> BP_GetResourcesRequired(struct FName TypeID); // Function Phoenix.TransfigurationManager.BP_GetResourcesRequired // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x349f370
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.TransfigurationManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.TransfigurationMovementStyleBase
// Size: 0x5e0 (Inherited: 0x248)
struct ATransfigurationMovementStyleBase : AActor {
	struct ATransfigurationPreviewActor* PreviewActor; // 0x248(0x08)
	struct FTransform TargetTransform; // 0x250(0x30)
	struct FTransform PreviewTransformOffset; // 0x280(0x30)
	char pad_2B0[0xe0]; // 0x2b0(0xe0)
	struct FVector FootprintExtent; // 0x390(0x0c)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct TArray<struct FBox> FootprintRegions; // 0x3a0(0x10)
	struct TArray<bool> RegionPlacementBlocked; // 0x3b0(0x10)
	float LinearInterpolationSpeed; // 0x3c0(0x04)
	bool bUseSpringDynamics; // 0x3c4(0x01)
	char pad_3C5[0x3]; // 0x3c5(0x03)
	struct FDampedSpringVector LinearSpring; // 0x3c8(0x24)
	char pad_3EC[0x4]; // 0x3ec(0x04)
	struct FDampedSpringQuat AngularSpring; // 0x3f0(0x30)
	struct FDampedSpringScalar ScaleSpring; // 0x420(0x10)
	struct FRuntimeFloatCurve SpringSpeedToTiltAngleCurve; // 0x430(0x88)
	struct FRuntimeFloatCurve ObjectBoundsToTiltMultiplierCurve; // 0x4b8(0x88)
	struct FRuntimeFloatCurve ObjectBoundsToLinearFrequencyMultiplierCurve; // 0x540(0x88)
	bool bDisperseNPCs; // 0x5c8(0x01)
	char pad_5C9[0x17]; // 0x5c9(0x17)

	void UpdateFootprintRegionSizes(struct FVector& PlacementFootprintSize); // Function Phoenix.TransfigurationMovementStyleBase.UpdateFootprintRegionSizes // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34a5850
	void StartTransition(float InDuration); // Function Phoenix.TransfigurationMovementStyleBase.StartTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x34a5700
	void ShowDecal(bool bShow); // Function Phoenix.TransfigurationMovementStyleBase.ShowDecal // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34a55a0
	void ShowBeamAtLocalLocation(struct FVector& InLocationLocal); // Function Phoenix.TransfigurationMovementStyleBase.ShowBeamAtLocalLocation // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x34a5510
	void SetWallTransformFromBounds(struct FVector& LocalExtent, struct FVector& LocalLocation); // Function Phoenix.TransfigurationMovementStyleBase.SetWallTransformFromBounds // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x34a5420
	void SetTransformFromBounds(struct FVector& LocalExtent, struct FVector& LocalLocation); // Function Phoenix.TransfigurationMovementStyleBase.SetTransformFromBounds // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x34a5330
	void SetPlacementRegionTransform(); // Function Phoenix.TransfigurationMovementStyleBase.SetPlacementRegionTransform // (Final|Native|Protected|BlueprintCallable) // @ game+0x34a50a0
	void Place(); // Function Phoenix.TransfigurationMovementStyleBase.Place // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31f7fd0
	void OnPreviewActorDestroyed(struct AActor* InActor); // Function Phoenix.TransfigurationMovementStyleBase.OnPreviewActorDestroyed // (Final|Native|Protected) // @ game+0x34a4d50
	void Lift(); // Function Phoenix.TransfigurationMovementStyleBase.Lift // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e06f0
	void ClearLitBeams(); // Function Phoenix.TransfigurationMovementStyleBase.ClearLitBeams // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03b0
	void CanPlace(bool bCanPlace); // Function Phoenix.TransfigurationMovementStyleBase.CanPlace // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1545fb0
};

// Class Phoenix.BaseObjectCopyComponent
// Size: 0x250 (Inherited: 0x220)
struct UBaseObjectCopyComponent : USceneComponent {
	struct FName ComponentName; // 0x218(0x08)
	struct TArray<struct FName> ExcludedComponentNames; // 0x220(0x10)
	bool bHideObjectWhileAlive; // 0x230(0x01)
	struct TArray<struct USceneComponent*> CopiedComponents; // 0x238(0x10)
	char pad_249[0x7]; // 0x249(0x07)

	void SetExistingTemplateActorHidden(bool bIsHidden); // Function Phoenix.BaseObjectCopyComponent.SetExistingTemplateActorHidden // (Final|Native|Public|BlueprintCallable) // @ game+0x34a5010
};

// Class Phoenix.TransfigurationObjectCopyComponent
// Size: 0x250 (Inherited: 0x250)
struct UTransfigurationObjectCopyComponent : UBaseObjectCopyComponent {
	uint32_t UID; // 0x248(0x04)
};

// Class Phoenix.NamedActor
// Size: 0x250 (Inherited: 0x248)
struct ANamedActor : AActor {
	struct FName ActorName; // 0x248(0x08)
};

// Class Phoenix.NamedActorObjectCopyComponent
// Size: 0x250 (Inherited: 0x250)
struct UNamedActorObjectCopyComponent : UBaseObjectCopyComponent {
	struct FName ActorName; // 0x248(0x08)
};

// Class Phoenix.ObjectCopyCache
// Size: 0x78 (Inherited: 0x28)
struct UObjectCopyCache : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Phoenix.TransfigurationObjectStationBase
// Size: 0x378 (Inherited: 0x368)
struct ATransfigurationObjectStationBase : AStation {
	struct UCognitionStimuliSourceComponent* CogSourceComponent; // 0x368(0x08)
	char pad_370[0x8]; // 0x370(0x08)
};

// Class Phoenix.TransfigurationPlaceholder
// Size: 0x4c0 (Inherited: 0x260)
struct ATransfigurationPlaceholder : AStreamingPlaceholderBase {
	struct FDbSingleColumnInfo ObjectCategory; // 0x260(0x88)
	struct FDbSingleColumnInfo ObjectID; // 0x2e8(0x88)
	struct FDbSingleColumnInfo ExpansionID; // 0x370(0x88)
	struct FDbSingleColumnInfo ExpandedObjectCategory; // 0x3f8(0x88)
	enum class ETransfigurationInitialColor InitialColor; // 0x480(0x01)
	char pad_481[0x7]; // 0x481(0x07)
	struct FString IdentifyingName; // 0x488(0x10)
	bool bOverride_StreamingPriority; // 0x498(0x01)
	enum class EStreamingPlaceholderPriority StreamingPriority; // 0x499(0x01)
	char pad_49A[0x2]; // 0x49a(0x02)
	uint32_t UID; // 0x49c(0x04)
	int32_t SignedUID; // 0x4a0(0x04)
	char pad_4A4[0x4]; // 0x4a4(0x04)
	struct AActor* SpawnedActor; // 0x4a8(0x08)
	char pad_4B0[0x10]; // 0x4b0(0x10)
};

// Class Phoenix.Actor_TransfigurationObject
// Size: 0x40 (Inherited: 0x38)
struct UActor_TransfigurationObject : UActorProvider {
	uint32_t TransfigurationUID; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.TransfigurationPlaceholderFrontend
// Size: 0x2c8 (Inherited: 0x270)
struct ATransfigurationPlaceholderFrontend : AStreamingPlaceholderChildActorBase {
	struct FString IdentifyingName; // 0x270(0x10)
	struct TSoftClassPtr<UObject> DefaultActorToSpawn; // 0x280(0x28)
	struct FString OnlySpawnIfKeyPresent; // 0x2a8(0x10)
	struct FString OnlySpawnIfKeyNotPresent; // 0x2b8(0x10)
};

// Class Phoenix.TransfigurationPlacementAnimator
// Size: 0x258 (Inherited: 0x248)
struct ATransfigurationPlacementAnimator : AActor {
	struct TWeakObjectPtr<struct ATransfigurationPreviewActor> PreviewActor; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)

	void SelectAnimationIndex(); // Function Phoenix.TransfigurationPlacementAnimator.SelectAnimationIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x34a4e70
	int32_t GetSelectedAnimIndex(); // Function Phoenix.TransfigurationPlacementAnimator.GetSelectedAnimIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x34a4820
	void DetachPreviewObject(); // Function Phoenix.TransfigurationPlacementAnimator.DetachPreviewObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void AttachPreviewObject(struct ATransfigurationPreviewActor* InPreviewActor); // Function Phoenix.TransfigurationPlacementAnimator.AttachPreviewObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34a4510
};

// Class Phoenix.TransfigurationPlacementComponent
// Size: 0x100 (Inherited: 0xc8)
struct UTransfigurationPlacementComponent : UActorComponent {
	float PhysicsHandleLinearStiffness; // 0xc8(0x04)
	float PhysicsHandleLinearDamping; // 0xcc(0x04)
	bool bConstrainAngular; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float PhysicsHandleAngularStiffness; // 0xd4(0x04)
	float PhysicsHandleAngularDamping; // 0xd8(0x04)
	float PhysicsHandleInterpolationSpeed; // 0xdc(0x04)
	float TransitionDuration; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UPhysicsHandleComponent* PhysicsHandleComponent; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)

	void SetTargetTransform(struct FTransform InTransform); // Function Phoenix.TransfigurationPlacementComponent.SetTargetTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34a5240
	void GrabComponent(struct UPrimitiveComponent* InComponent, struct FName InBoneName, struct FVector InGrabLocation); // Function Phoenix.TransfigurationPlacementComponent.GrabComponent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34a49e0
	struct FTransform GetTargetTransform(); // Function Phoenix.TransfigurationPlacementComponent.GetTargetTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a48a0
};

// Class Phoenix.TransfigurationPreviewActor
// Size: 0x430 (Inherited: 0x248)
struct ATransfigurationPreviewActor : AActor {
	struct ATransfigurationMovementStyleBase* MovementStyle; // 0x248(0x08)
	float TwirlDirection; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TMap<struct FName, struct USceneComponent*> CopiedPlantComponentMap; // 0x258(0x50)
	struct FMulticastInlineDelegate PreviewMeshLoadedDelegate; // 0x2a8(0x10)
	char pad_2B8[0xd0]; // 0x2b8(0xd0)
	struct FVector SurfaceNormal; // 0x388(0x0c)
	enum class ETransfigurationSnapping Snapping; // 0x394(0x01)
	char pad_395[0x18]; // 0x395(0x18)
	bool bSurfaceFound; // 0x3ad(0x01)
	char pad_3AE[0x8]; // 0x3ae(0x08)
	bool bCopyDecalComponents; // 0x3b6(0x01)
	bool bMaintainCollision; // 0x3b7(0x01)
	struct TArray<struct TSoftClassPtr<UObject>> AnimBPsExcludedFromBlendOut; // 0x3b8(0x10)
	struct USceneComponent* PreviewMeshRoot; // 0x3c8(0x08)
	char pad_3D0[0x8]; // 0x3d0(0x08)
	bool bTestFixedLoadDuration; // 0x3d8(0x01)
	char pad_3D9[0x3]; // 0x3d9(0x03)
	float FixedLoadDuration; // 0x3dc(0x04)
	struct TArray<struct TWeakObjectPtr<struct UActorComponent>> CopiedComponents; // 0x3e0(0x10)
	struct TArray<struct TWeakObjectPtr<struct AActor>> AssociatedObjects; // 0x3f0(0x10)
	struct TWeakObjectPtr<struct ATransfigurationPreviewActor> DependentPreview; // 0x400(0x08)
	char pad_408[0x28]; // 0x408(0x28)

	bool UsesSurfacePlacement(); // Function Phoenix.TransfigurationPreviewActor.UsesSurfacePlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x23ec5a0
	void UpdateMeshOpacity(float Opacity); // Function Phoenix.TransfigurationPreviewActor.UpdateMeshOpacity // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void UpdateHoldConjuring(float TimeRatio, struct TArray<struct FTransfigurationResource>& Resources, struct FVector WandPos); // Function Phoenix.TransfigurationPreviewActor.UpdateHoldConjuring // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void UnpauseAssociatedSkeletalMeshComponents(); // Function Phoenix.TransfigurationPreviewActor.UnpauseAssociatedSkeletalMeshComponents // (Final|Native|Protected|BlueprintCallable) // @ game+0x34a5830
	void TransformedFromOtherPreview(struct ATransfigurationPreviewActor* InPreviousPreview); // Function Phoenix.TransfigurationPreviewActor.TransformedFromOtherPreview // (Native|Event|Public|BlueprintEvent) // @ game+0x34a57a0
	void TransfigurationPreviewMeshLoaded__DelegateSignature(); // DelegateFunction Phoenix.TransfigurationPreviewActor.TransfigurationPreviewMeshLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void SwitchToNewMesh(); // Function Phoenix.TransfigurationPreviewActor.SwitchToNewMesh // (Final|Native|Protected|BlueprintCallable) // @ game+0x34a5780
	void StartHoldVanishing(); // Function Phoenix.TransfigurationPreviewActor.StartHoldVanishing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void StartHoldTransforming(); // Function Phoenix.TransfigurationPreviewActor.StartHoldTransforming // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void StartHoldConjuring(float TotalConjurationDuration, struct TArray<struct FTransfigurationResource>& Resources, struct FVector WandPos); // Function Phoenix.TransfigurationPreviewActor.StartHoldConjuring // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	struct AVanishmentStyleBase* SpawnVanishmentStyle(); // Function Phoenix.TransfigurationPreviewActor.SpawnVanishmentStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x34a56d0
	struct ATransformationStyleBase* SpawnTransformationStyle(struct ATransfigurationPreviewActor* InNewActor); // Function Phoenix.TransfigurationPreviewActor.SpawnTransformationStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x34a5630
	void SetSurfaceNormal(bool bInSurfaceFound, struct FVector& InSurfaceNormal); // Function Phoenix.TransfigurationPreviewActor.SetSurfaceNormal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34a5150
	void SetSpawningIn(bool bIsSpawning); // Function Phoenix.TransfigurationPreviewActor.SetSpawningIn // (Final|Native|Public|BlueprintCallable) // @ game+0x34a50c0
	void SetCanPlace(bool bInCanPlace); // Function Phoenix.TransfigurationPreviewActor.SetCanPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x34a4f80
	void SetAssociatedObjectActors(struct TArray<struct AActor*> InActorList); // Function Phoenix.TransfigurationPreviewActor.SetAssociatedObjectActors // (Final|Native|Public|BlueprintCallable) // @ game+0x34a4e90
	void ResetToOriginalScale(); // Function Phoenix.TransfigurationPreviewActor.ResetToOriginalScale // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
	void OnVanishStart(); // Function Phoenix.TransfigurationPreviewActor.OnVanishStart // (Native|Event|Public|BlueprintEvent) // @ game+0x31e1670
	void OnTransformWithoutStyle(); // Function Phoenix.TransfigurationPreviewActor.OnTransformWithoutStyle // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnTransformStart(struct ATransfigurationPreviewActor* InNewPreview); // Function Phoenix.TransfigurationPreviewActor.OnTransformStart // (Native|Event|Public|BlueprintEvent) // @ game+0x34a4de0
	void OnSizeChange(float StartScale, float EndScale); // Function Phoenix.TransfigurationPreviewActor.OnSizeChange // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnPreviewMeshLoaded(); // Function Phoenix.TransfigurationPreviewActor.OnPreviewMeshLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFakeLoadDurationTimerElapsed(); // Function Phoenix.TransfigurationPreviewActor.OnFakeLoadDurationTimerElapsed // (Final|Native|Protected) // @ game+0x34a4d30
	void ObjectSelected(); // Function Phoenix.TransfigurationPreviewActor.ObjectSelected // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ObjectDeselected(struct AActor* InNewActor); // Function Phoenix.TransfigurationPreviewActor.ObjectDeselected // (Native|Event|Public|BlueprintEvent) // @ game+0x31f9a20
	void ObjectConfirmed(struct TArray<struct AActor*>& InNewActors); // Function Phoenix.TransfigurationPreviewActor.ObjectConfirmed // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x34a4c80
	bool IsStationary(); // Function Phoenix.TransfigurationPreviewActor.IsStationary // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4c50
	bool IsSpawningIn(); // Function Phoenix.TransfigurationPreviewActor.IsSpawningIn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4c30
	bool IsReadyForPlacement(); // Function Phoenix.TransfigurationPreviewActor.IsReadyForPlacement // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x328de00
	bool IsPreviewInTransition(); // Function Phoenix.TransfigurationPreviewActor.IsPreviewInTransition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1545d00
	bool IsPrefab(); // Function Phoenix.TransfigurationPreviewActor.IsPrefab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4c10
	bool IsLocked(); // Function Phoenix.TransfigurationPreviewActor.IsLocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4bf0
	bool IsBeingRemoved(); // Function Phoenix.TransfigurationPreviewActor.IsBeingRemoved // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4bd0
	void HideActorAndChildren(struct AActor* InActor, bool bHide); // Function Phoenix.TransfigurationPreviewActor.HideActorAndChildren // (Final|Native|Public|BlueprintCallable) // @ game+0x34a4b00
	void GetTransfigurationFxInfos(struct FVector& OutObjectCenter, struct FVector& OutObjectExtent); // Function Phoenix.TransfigurationPreviewActor.GetTransfigurationFxInfos // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4900
	struct FName GetTransfigurationClass(); // Function Phoenix.TransfigurationPreviewActor.GetTransfigurationClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x170ca30
	struct FTransform GetTargetTransform(); // Function Phoenix.TransfigurationPreviewActor.GetTargetTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4840
	void GetPreviewBounds(struct FVector& OutCenter, struct FVector& OutExtent); // Function Phoenix.TransfigurationPreviewActor.GetPreviewBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4740
	struct FName GetObjectType(); // Function Phoenix.TransfigurationPreviewActor.GetObjectType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x3270950
	struct FName GetObjectCategory(); // Function Phoenix.TransfigurationPreviewActor.GetObjectCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4720
	bool GetIsPreviewMeshLoaded(); // Function Phoenix.TransfigurationPreviewActor.GetIsPreviewMeshLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4700
	struct FName GetColor(); // Function Phoenix.TransfigurationPreviewActor.GetColor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x31fd100
	struct FTransform GetAttachmentTransform(); // Function Phoenix.TransfigurationPreviewActor.GetAttachmentTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a46c0
	struct FBox GetActorLocalPreviewBounds(); // Function Phoenix.TransfigurationPreviewActor.GetActorLocalPreviewBounds // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a4670
	void FinishHoldVanishing(); // Function Phoenix.TransfigurationPreviewActor.FinishHoldVanishing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void FinishHoldTransforming(); // Function Phoenix.TransfigurationPreviewActor.FinishHoldTransforming // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void FinishHoldConjuring(struct TArray<struct FTransfigurationResource>& Resources, struct FVector WandPos); // Function Phoenix.TransfigurationPreviewActor.FinishHoldConjuring // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	struct TArray<struct UMeshComponent*> DuplicateMeshComponents(); // Function Phoenix.TransfigurationPreviewActor.DuplicateMeshComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x34a45f0
	void ConjuredFromThinAir(); // Function Phoenix.TransfigurationPreviewActor.ConjuredFromThinAir // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void ColorAboutToChange(); // Function Phoenix.TransfigurationPreviewActor.ColorAboutToChange // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool CanPlace(); // Function Phoenix.TransfigurationPreviewActor.CanPlace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a45d0
	void CannotHoldConjuring(); // Function Phoenix.TransfigurationPreviewActor.CannotHoldConjuring // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool CanChangeColor(); // Function Phoenix.TransfigurationPreviewActor.CanChangeColor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a45a0
	void CancelledIntoThinAir(); // Function Phoenix.TransfigurationPreviewActor.CancelledIntoThinAir // (Native|Event|Public|BlueprintEvent) // @ game+0x31f7fd0
	void CancelHoldVanishing(); // Function Phoenix.TransfigurationPreviewActor.CancelHoldVanishing // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CancelHoldTransforming(); // Function Phoenix.TransfigurationPreviewActor.CancelHoldTransforming // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void CancelHoldConjuring(float TimeRatio, struct TArray<struct FTransfigurationResource>& Resources, struct FVector WandPos); // Function Phoenix.TransfigurationPreviewActor.CancelHoldConjuring // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void BP_OnTransformationLoaded(); // Function Phoenix.TransfigurationPreviewActor.BP_OnTransformationLoaded // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BlueprintInitialize(); // Function Phoenix.TransfigurationPreviewActor.BlueprintInitialize // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool AreResourceRequirementsMet(); // Function Phoenix.TransfigurationPreviewActor.AreResourceRequirementsMet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34a44f0
};

// Class Phoenix.TransfigurationPreviewEffect
// Size: 0x288 (Inherited: 0x248)
struct ATransfigurationPreviewEffect : AActor {
	bool CanPlaceObject; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct AActor* TargetActor; // 0x250(0x08)
	struct AActor* TargetActorCopy; // 0x258(0x08)
	struct FVector ObjectExtent; // 0x260(0x0c)
	struct FVector ObjectCenter; // 0x26c(0x0c)
	char pad_278[0x10]; // 0x278(0x10)

	void TickVFX(float DeltaSeconds); // Function Phoenix.TransfigurationPreviewEffect.TickVFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void OnTargetActorDestroyed(struct AActor* InDestroyedActor); // Function Phoenix.TransfigurationPreviewEffect.OnTargetActorDestroyed // (Final|Native|Protected) // @ game+0x34a4d50
	void BeginVFX(); // Function Phoenix.TransfigurationPreviewEffect.BeginVFX // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TransfigurationSettings
// Size: 0x60 (Inherited: 0x28)
struct UTransfigurationSettings : UObject {
	struct TSoftClassPtr<UObject> PreviewActorClass; // 0x28(0x28)
	float MinSecondsBetweenVanishments; // 0x50(0x04)
	float FoliageHidingZOffset; // 0x54(0x04)
	float BoundsMinZ; // 0x58(0x04)
	float BoundsMaxZ; // 0x5c(0x04)
};

// Class Phoenix.TransfigurationSnappingLine
// Size: 0x248 (Inherited: 0x248)
struct ATransfigurationSnappingLine : AActor {

	void SetLineLength(float Length); // Function Phoenix.TransfigurationSnappingLine.SetLineLength // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34a97a0
	void FadeOutAndDestroy(); // Function Phoenix.TransfigurationSnappingLine.FadeOutAndDestroy // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
};

// Class Phoenix.TransfigurationSnappingTarget
// Size: 0x250 (Inherited: 0x248)
struct ATransfigurationSnappingTarget : AActor {
	struct UConjurationSnappingComponentBase* TargetObject; // 0x248(0x08)

	void ShowBeamAtLocalLocation(struct FVector& InLocationLocal); // Function Phoenix.TransfigurationSnappingTarget.ShowBeamAtLocalLocation // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x34a9950
	void SetTargetObject(struct UConjurationSnappingComponentBase* SnappingTarget); // Function Phoenix.TransfigurationSnappingTarget.SetTargetObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x34a9830
	void FadeOutAndDestroy(); // Function Phoenix.TransfigurationSnappingTarget.FadeOutAndDestroy // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e03b0
	void ClearLitBeams(); // Function Phoenix.TransfigurationSnappingTarget.ClearLitBeams // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
};

// Class Phoenix.TransfigurationSpawnController
// Size: 0x2a8 (Inherited: 0x40)
struct UTransfigurationSpawnController : UTickableWorldSubsystem {
	char pad_40[0x258]; // 0x40(0x258)
	struct ATransfigurationPreviewActor* PreviewActorClass; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)
};

// Class Phoenix.TransfigurationStructureBase
// Size: 0x2a8 (Inherited: 0x2a8)
struct ATransfigurationStructureBase : ATransfigurationObjectBase {
};

// Class Phoenix.Transform_CameraAttachment
// Size: 0x30 (Inherited: 0x28)
struct UTransform_CameraAttachment : UTransformProvider {
	struct UActorProvider* TargetActor; // 0x28(0x08)
};

// Class Phoenix.Transform_CharacterVerticalOffset
// Size: 0x38 (Inherited: 0x28)
struct UTransform_CharacterVerticalOffset : UTransformProvider {
	struct UActorProvider* OffsetForCharacter; // 0x28(0x08)
	struct FName SocketName; // 0x30(0x08)
};

// Class Phoenix.Transform_Conversation
// Size: 0x30 (Inherited: 0x28)
struct UTransform_Conversation : UTransformProvider {
	enum class EConversationTransformType TransformType; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.Transform_DBLocation
// Size: 0x48 (Inherited: 0x28)
struct UTransform_DBLocation : UTransformProvider {
	bool bUseBoundParameter; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct UStringProvider* LocationNameProvider; // 0x30(0x08)
	struct FDBLocationReference Location; // 0x38(0x10)
};

// Class Phoenix.Transform_FromBlackboardActor
// Size: 0x40 (Inherited: 0x28)
struct UTransform_FromBlackboardActor : UTransformProvider {
	struct UActorProvider* Actor; // 0x28(0x08)
	struct FName BlackboardKeyName; // 0x30(0x08)
	struct FName SocketName; // 0x38(0x08)
};

// Class Phoenix.Transform_StoryParticipantAnchor
// Size: 0x30 (Inherited: 0x28)
struct UTransform_StoryParticipantAnchor : UTransformProvider {
	int32_t ParticipantChannel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.Transform_StoryParticipantExit
// Size: 0x30 (Inherited: 0x28)
struct UTransform_StoryParticipantExit : UTransformProvider {
	int32_t ParticipantChannel; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.TransformAllLoadController
// Size: 0x68 (Inherited: 0x28)
struct UTransformAllLoadController : UObject {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Phoenix.TransformationComponent
// Size: 0x198 (Inherited: 0x190)
struct UTransformationComponent : UStateEffectComponent {
	char pad_190[0x8]; // 0x190(0x08)
};

// Class Phoenix.TransformationStyleBase
// Size: 0x258 (Inherited: 0x248)
struct ATransformationStyleBase : AActor {
	struct ATransfigurationPreviewActor* OldPreviewActor; // 0x248(0x08)
	struct ATransfigurationPreviewActor* NewPreviewActor; // 0x250(0x08)

	void StartTransformation(); // Function Phoenix.TransformationStyleBase.StartTransformation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
};

// Class Phoenix.TransformationFxInfoComponent
// Size: 0x220 (Inherited: 0x220)
struct UTransformationFxInfoComponent : USceneComponent {
	struct UBoxComponent* ObjectBounds; // 0x218(0x08)
};

// Class Phoenix.TransformationInterface
// Size: 0x28 (Inherited: 0x28)
struct UTransformationInterface : UInterface {

	void OnTransformStart(struct AActor* Instigator); // Function Phoenix.TransformationInterface.OnTransformStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransformSpawnSpawned(struct AActor* Instigator, struct AActor* OriginalActor); // Function Phoenix.TransformationInterface.OnTransformSpawnSpawned // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransformSpawn(struct AActor* Instigator, struct AActor* TransformedActor); // Function Phoenix.TransformationInterface.OnTransformSpawn // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransformCompleteSpawned(struct AActor* Instigator, struct AActor* OriginalActor); // Function Phoenix.TransformationInterface.OnTransformCompleteSpawned // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnTransformComplete(struct AActor* Instigator, struct AActor* TransformedActor); // Function Phoenix.TransformationInterface.OnTransformComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnRestoreStartSpawned(struct AActor* Instigator, struct AActor* OriginalActor); // Function Phoenix.TransformationInterface.OnRestoreStartSpawned // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnRestoreStart(struct AActor* Instigator); // Function Phoenix.TransformationInterface.OnRestoreStart // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnRestoreComplete(struct AActor* Instigator); // Function Phoenix.TransformationInterface.OnRestoreComplete // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TransformationOverlandComponent
// Size: 0x2e8 (Inherited: 0x190)
struct UTransformationOverlandComponent : UStateEffectComponent {
	struct AActor* newActor; // 0x190(0x08)
	struct FTransformationOverlandData Data; // 0x198(0x108)
	char pad_2A0[0x48]; // 0x2a0(0x48)

	void OnActorEndPlay(struct AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.TransformationOverlandComponent.OnActorEndPlay // (Final|Native|Private) // @ game+0x34a9580
	void HealthZero(struct AActor* InActor); // Function Phoenix.TransformationOverlandComponent.HealthZero // (Final|Native|Private) // @ game+0x31e6480
};

// Class Phoenix.TransformedOverlandComponent
// Size: 0x1b0 (Inherited: 0x190)
struct UTransformedOverlandComponent : UStateEffectComponent {
	struct AActor* OriginalActor; // 0x190(0x08)
	struct UTransformationOverlandComponent* OriginalComponent; // 0x198(0x08)
	char pad_1A0[0x10]; // 0x1a0(0x10)
};

// Class Phoenix.TransformationOverlandSpellTool
// Size: 0xa28 (Inherited: 0x868)
struct ATransformationOverlandSpellTool : AFireOnceSpellTool {
	float SpawnDelay; // 0x868(0x04)
	int32_t SpawnUpdateCount; // 0x86c(0x04)
	float StartEffectDelay; // 0x870(0x04)
	float HideDelay; // 0x874(0x04)
	float RestoreDelay; // 0x878(0x04)
	float SpawnHeightAdj; // 0x87c(0x04)
	struct FVector SpawnAngularVelocity; // 0x880(0x0c)
	struct FVector CharacterSpawnAngularVelocity; // 0x88c(0x0c)
	struct FVector PlayerSpawnAngularVelocity; // 0x898(0x0c)
	struct FVector SpawnLinearVelocity; // 0x8a4(0x0c)
	struct FVector CharacterSpawnLinearVelocity; // 0x8b0(0x0c)
	struct FVector RestoreAngularVelocity; // 0x8bc(0x0c)
	struct FVector CharacterRestoreAngularVelocity; // 0x8c8(0x0c)
	struct FVector PlayerRestoreAngularVelocity; // 0x8d4(0x0c)
	struct FVector RestoreLinearVelocity; // 0x8e0(0x0c)
	struct FVector CharacterRestoreLinearVelocity; // 0x8ec(0x0c)
	bool SpawnFacingCaster; // 0x8f8(0x01)
	char pad_8F9[0x7]; // 0x8f9(0x07)
	struct TArray<struct UMultiFX2_Base*> HideFX2; // 0x900(0x10)
	struct TArray<struct UMultiFX2_Base*> SpawnFX2; // 0x910(0x10)
	struct TArray<struct UMultiFX2_Base*> UnspawnFX2; // 0x920(0x10)
	struct TArray<struct UMultiFX2_Base*> RestoreFX2; // 0x930(0x10)
	struct FGameplayTagContainer RestoreMunitionTagContainer; // 0x940(0x20)
	struct UInteractionArchitectAsset* RestoreMunitionDataAsset; // 0x960(0x08)
	char pad_968[0xc0]; // 0x968(0xc0)
};

// Class Phoenix.TransformationSpellTool
// Size: 0xb50 (Inherited: 0xaa8)
struct ATransformationSpellTool : ATransfigurationSpellToolBase {
	struct FName TargetObjectName; // 0xaa8(0x08)
	char pad_AB0[0x78]; // 0xab0(0x78)
	struct ATransfigurationPreviewActor* LeftBehindPreviewActor; // 0xb28(0x08)
	char pad_B30[0x4]; // 0xb30(0x04)
	float TransformationDuration; // 0xb34(0x04)
	struct TArray<struct ATransformationStyleBase*> TransformationStyles; // 0xb38(0x10)
	char pad_B48[0x8]; // 0xb48(0x08)

	void TransformPlaceholder(struct ATransfigurationPlaceholder* Placeholder, struct AActor* ExistingActor, struct FVector FxInfoCenter, struct FVector FxInfoExtent); // Function Phoenix.TransformationSpellTool.TransformPlaceholder // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x34ad080
	void StartHoldTransforming(); // Function Phoenix.TransformationSpellTool.StartHoldTransforming // (Final|Native|Public|BlueprintCallable) // @ game+0x34ad060
	void SpawnPlaceholderNow(struct ATransfigurationPlaceholder* Placeholder); // Function Phoenix.TransformationSpellTool.SpawnPlaceholderNow // (Final|Native|Public|BlueprintCallable) // @ game+0x34acfd0
	void OnPreviewDestroyed(struct AActor* DestroyedActor); // Function Phoenix.TransformationSpellTool.OnPreviewDestroyed // (Final|Native|Protected) // @ game+0x34acec0
	void FinishHoldTransforming(); // Function Phoenix.TransformationSpellTool.FinishHoldTransforming // (Final|Native|Public|BlueprintCallable) // @ game+0x34aca60
	void ExitTransformAll(); // Function Phoenix.TransformationSpellTool.ExitTransformAll // (Final|Native|Protected|BlueprintCallable) // @ game+0x34aca40
	void EnterTransformAll(); // Function Phoenix.TransformationSpellTool.EnterTransformAll // (Final|Native|Protected|BlueprintCallable) // @ game+0x34aca20
	void CancelHoldTransforming(); // Function Phoenix.TransformationSpellTool.CancelHoldTransforming // (Final|Native|Public|BlueprintCallable) // @ game+0x34aca00
};

// Class Phoenix.TransformationSpellToolComponent
// Size: 0x250 (Inherited: 0xc8)
struct UTransformationSpellToolComponent : UActorComponent {
	struct ATransfigurationPreviewActor* PreviewActorClass; // 0xc8(0x08)
	struct ATransfigurationPreviewActor* LeftBehindPreviewActorClass; // 0xd0(0x08)
	struct ATransfigurationSnappingLine* SnappingLineVisualizationClass; // 0xd8(0x08)
	struct ATransfigurationSnappingTarget* SnappingTargetObjectVisualizationClass; // 0xe0(0x08)
	float DefaultDistance; // 0xe8(0x04)
	float MinDistance; // 0xec(0x04)
	float MaxDistance; // 0xf0(0x04)
	float DistanceSpeed; // 0xf4(0x04)
	float ObjectLevitationHeight; // 0xf8(0x04)
	float MinFootprintDistance; // 0xfc(0x04)
	float TransformRotationAngle; // 0x100(0x04)
	float PowerpointFindRange; // 0x104(0x04)
	float PowerpointSnapRange; // 0x108(0x04)
	float PowerpointWallSnapRange; // 0x10c(0x04)
	float IncreasedSnapRangeThreshold; // 0x110(0x04)
	float PowerpointMaxSpeed; // 0x114(0x04)
	int32_t PowerpointMaxNearbySnappingPoints; // 0x118(0x04)
	float PowerpointValidLocationStickingRange; // 0x11c(0x04)
	float NoSnappingValidLocationStickingRange; // 0x120(0x04)
	float WallSnappingValidLocationStickingRange; // 0x124(0x04)
	float WallNoSnappingValidLocationStickingRange; // 0x128(0x04)
	float WallAlignmentFindRange; // 0x12c(0x04)
	float WallAlignmentSnapRange; // 0x130(0x04)
	float LeftBehindPreviewFadeInStartDistance; // 0x134(0x04)
	float LeftBehindPreviewFadeInEndDistance; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UCurveFloat* TargetPointScreenPositionOverPitchSmall; // 0x140(0x08)
	struct UCurveFloat* TargetPointScreenPositionOverPitchLarge; // 0x148(0x08)
	float ObjectRadiusSmall; // 0x150(0x04)
	float ObjectRadiusLarge; // 0x154(0x04)
	float TwirlDirection; // 0x158(0x04)
	float DefaultSmallScale; // 0x15c(0x04)
	float DefaultLargeScale; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct ATransfigurationPreviewActor* CurrentPreviewActor; // 0x168(0x08)
	char pad_170[0xe0]; // 0x170(0xe0)

	void InitialCameraBlendIsComplete(); // Function Phoenix.TransformationSpellToolComponent.InitialCameraBlendIsComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x34acb20
	float GetTargetPointScreenPosition(); // Function Phoenix.TransformationSpellToolComponent.GetTargetPointScreenPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34acaf0
	float GetNormalizedObjectSizeRatio(); // Function Phoenix.TransformationSpellToolComponent.GetNormalizedObjectSizeRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34acac0
	struct FName GetCurrentColor(); // Function Phoenix.TransformationSpellToolComponent.GetCurrentColor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34aca80
	void AdjustDistance(float InAdjust); // Function Phoenix.TransformationSpellToolComponent.AdjustDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x34ac980
};

// Class Phoenix.TransformTweenDummy
// Size: 0x28 (Inherited: 0x28)
struct UTransformTweenDummy : UObject {
};

// Class Phoenix.TriggerBox_Floor
// Size: 0x250 (Inherited: 0x250)
struct ATriggerBox_Floor : ATriggerBox {

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.TriggerBox_Floor.OnOverlapEnd // (Final|Native|Public) // @ game+0x34acd60
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.TriggerBox_Floor.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x34acb40
};

// Class Phoenix.TriggerEffectComponent
// Size: 0x2a0 (Inherited: 0x220)
struct UTriggerEffectComponent : USceneComponent {
	enum class EInteractiveAction TriggerForEffect; // 0x218(0x01)
	struct USpellToolRecord* SpellToBeUsed; // 0x220(0x08)
	float TimeBeforeTriggerStarts; // 0x228(0x04)
	bool bUseSpellImpactFX; // 0x22c(0x01)
	bool bUseSpellMuzzleFX; // 0x22d(0x01)
	char pad_22F[0x1]; // 0x22f(0x01)
	struct UParticleSystem* TriggerEffectVfx; // 0x230(0x08)
	struct UAkAudioEvent* TriggerEffectSfx; // 0x238(0x08)
	bool bAffectsSpecificActors; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct TArray<struct AActor*> ActorsToAffect; // 0x248(0x10)
	bool bUseRadiusForEffect; // 0x258(0x01)
	char pad_259[0x3]; // 0x259(0x03)
	float Radius; // 0x25c(0x04)
	char bIgnoreOwningActor : 1; // 0x260(0x01)
	char pad_260_1 : 7; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)
	struct TArray<enum class EObjectTypeQuery> ObjectTypesToAffect; // 0x268(0x10)
	char pad_278[0x8]; // 0x278(0x08)
	struct UParticleSystemComponent* ParticleSystemComponent; // 0x280(0x08)
	char pad_288[0x18]; // 0x288(0x18)

	void RemoveObjectTypeToAffect(enum class EObjectTypeQuery ObjectType); // Function Phoenix.TriggerEffectComponent.RemoveObjectTypeToAffect // (Native|Public|BlueprintCallable) // @ game+0x34acf50
	void AddObjectTypeToAffect(enum class EObjectTypeQuery ObjectType); // Function Phoenix.TriggerEffectComponent.AddObjectTypeToAffect // (Native|Public|BlueprintCallable) // @ game+0x34ac900
};

// Class Phoenix.Troll_AttackChoice_RockThrowBackup
// Size: 0x28 (Inherited: 0x28)
struct UTroll_AttackChoice_RockThrowBackup : UEnemy_AttackChoice {
};

// Class Phoenix.TutorialScreen
// Size: 0x3d8 (Inherited: 0x370)
struct UTutorialScreen : UScreen {
	struct FName TutorialName; // 0x370(0x08)
	struct FName TutorialAlias; // 0x378(0x08)
	int32_t TutorialStep; // 0x380(0x04)
	enum class ETutorialTransparency TransparencyType; // 0x384(0x01)
	char pad_385[0x3]; // 0x385(0x03)
	struct TMap<enum class EUMGInputAction, bool> CompletionButtons; // 0x388(0x50)

	void SetTutorialVideoReady(struct UMediaSource* MediaSource); // Function Phoenix.TutorialScreen.SetTutorialVideoReady // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialVideoIsLoading(bool IsLoading); // Function Phoenix.TutorialScreen.SetTutorialVideoIsLoading // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialTitle(struct FString TitleString, bool IsTranslatable); // Function Phoenix.TutorialScreen.SetTutorialTitle // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialLegendItems(struct TArray<struct FLegendItemData>& LegendItems); // Function Phoenix.TutorialScreen.SetTutorialLegendItems // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialImageName(struct FString ImageString); // Function Phoenix.TutorialScreen.SetTutorialImageName // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialExpiryTimerProgress(float Progress); // Function Phoenix.TutorialScreen.SetTutorialExpiryTimerProgress // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialCompletionAction(enum class EUMGInputAction InputAction, bool bMustHold); // Function Phoenix.TutorialScreen.SetTutorialCompletionAction // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetTutorialBody(struct FString BodyString, bool IsTranslatable); // Function Phoenix.TutorialScreen.SetTutorialBody // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnSetTutorialPosition(struct FVector2D Position, struct FVector2D Alignment); // Function Phoenix.TutorialScreen.OnSetTutorialPosition // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.TutorialSystem
// Size: 0x2f0 (Inherited: 0x28)
struct UTutorialSystem : UObject {
	char pad_28[0xa0]; // 0x28(0xa0)
	struct UDataTable* TutorialDataTable; // 0xc8(0x08)
	struct FNewTutorialInfo CurrentTutorialStepData; // 0xd0(0x110)
	struct FNewTutorialSequence CurrentTutorialData; // 0x1e0(0x78)
	struct UTutorialScreen* CurrentTutorialScreen; // 0x258(0x08)
	char pad_260[0x90]; // 0x260(0x90)

	void ZoomLowerHogsfield(struct UObject* sender); // Function Phoenix.TutorialSystem.ZoomLowerHogsfield // (Final|Native|Private) // @ game+0x34b2e10
	void UnpauseTutorialQueue(struct FString Context); // Function Phoenix.TutorialSystem.UnpauseTutorialQueue // (Final|Native|Public|BlueprintCallable) // @ game+0x34b2d20
	bool TutorialsAvailable(); // Function Phoenix.TutorialSystem.TutorialsAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1ab0
	void StopCallAttentionToAnnex(struct UObject* sender); // Function Phoenix.TutorialSystem.StopCallAttentionToAnnex // (Final|Native|Private) // @ game+0x34b1a20
	bool StartTutorialStepExpiryTimerByAlias(struct FName TutorialName, struct FName TutorialStepAlias); // Function Phoenix.TutorialSystem.StartTutorialStepExpiryTimerByAlias // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1950
	bool StartTutorialStepExpiryTimer(struct FName TutorialName, int32_t TutorialStep); // Function Phoenix.TutorialSystem.StartTutorialStepExpiryTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1880
	bool StartTutorial(struct FName TutorialName, bool AfterNotifications); // Function Phoenix.TutorialSystem.StartTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x34b17b0
	void StartNextTutorial(); // Function Phoenix.TutorialSystem.StartNextTutorial // (Final|Native|Private) // @ game+0x34b1790
	void SetZZDActivate(struct UObject* sender); // Function Phoenix.TutorialSystem.SetZZDActivate // (Final|Native|Private) // @ game+0x34b1550
	void SetupMapTutorials(struct UObject* sender); // Function Phoenix.TutorialSystem.SetupMapTutorials // (Final|Native|Private) // @ game+0x34b1700
	void SetupMapIconsForOverlandTutorial(struct UObject* sender); // Function Phoenix.TutorialSystem.SetupMapIconsForOverlandTutorial // (Final|Native|Private) // @ game+0x34b1670
	void SetupMapFastTravelTutorial(struct UObject* sender); // Function Phoenix.TutorialSystem.SetupMapFastTravelTutorial // (Final|Native|Private) // @ game+0x34b15e0
	void ResetMapFastTravelTutorial(struct UObject* sender); // Function Phoenix.TutorialSystem.ResetMapFastTravelTutorial // (Final|Native|Private) // @ game+0x34b14c0
	void ResetMap(struct UObject* sender); // Function Phoenix.TutorialSystem.ResetMap // (Final|Native|Private) // @ game+0x34b1430
	void PauseTutorialQueue(struct FString Context); // Function Phoenix.TutorialSystem.PauseTutorialQueue // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1310
	void OverlandZoomOut(struct UObject* sender); // Function Phoenix.TutorialSystem.OverlandZoomOut // (Final|Native|Private) // @ game+0x34b1280
	void OverlandZoomIn(struct UObject* sender); // Function Phoenix.TutorialSystem.OverlandZoomIn // (Final|Native|Private) // @ game+0x34b11f0
	void OnSaveGameLoaded(); // Function Phoenix.TutorialSystem.OnSaveGameLoaded // (Final|Native|Public) // @ game+0x34b11d0
	void OnMissionFailedScreenLoaded(struct UObject* sender); // Function Phoenix.TutorialSystem.OnMissionFailedScreenLoaded // (Final|Native|Private) // @ game+0x34b0fe0
	void OnIntroEnded(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.TutorialSystem.OnIntroEnded // (Final|Native|Private) // @ game+0x34b0f10
	void OnGameToBeSaved(); // Function Phoenix.TutorialSystem.OnGameToBeSaved // (Final|Native|Public) // @ game+0x34b0ef0
	void OnCurrentScreenOutroEnded(struct UPhoenixUserWidget* PhoenixWidget, int32_t OutroType); // Function Phoenix.TutorialSystem.OnCurrentScreenOutroEnded // (Final|Native|Private) // @ game+0x34b0e20
	bool IsTutorialStepActiveOrAboutToBeByAlias(struct FName TutorialName, struct FName TutorialStepAlias); // Function Phoenix.TutorialSystem.IsTutorialStepActiveOrAboutToBeByAlias // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0c70
	bool IsTutorialStepActiveOrAboutToBe(struct FName TutorialName, int32_t TutorialStep); // Function Phoenix.TutorialSystem.IsTutorialStepActiveOrAboutToBe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0ba0
	bool IsTutorialStepActiveByAlias(struct FName TutorialName, struct FName TutorialStepAlias); // Function Phoenix.TutorialSystem.IsTutorialStepActiveByAlias // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0ad0
	bool IsTutorialStepActive(struct FName TutorialName, int32_t TutorialStep); // Function Phoenix.TutorialSystem.IsTutorialStepActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0a00
	bool IsTutorialQueuePaused(); // Function Phoenix.TutorialSystem.IsTutorialQueuePaused // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0930
	bool IsTutorialQueued(struct FName TutorialName); // Function Phoenix.TutorialSystem.IsTutorialQueued // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0960
	bool IsTutorialActiveOrAboutToBe(struct FName TutorialName); // Function Phoenix.TutorialSystem.IsTutorialActiveOrAboutToBe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0890
	bool IsTutorialActive(struct FName TutorialName); // Function Phoenix.TutorialSystem.IsTutorialActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b07f0
	bool IsModalTutorialQueued(); // Function Phoenix.TutorialSystem.IsModalTutorialQueued // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0790
	bool IsCurrentTutorialActive(); // Function Phoenix.TutorialSystem.IsCurrentTutorialActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0760
	bool IsAnyTutorialQueued(); // Function Phoenix.TutorialSystem.IsAnyTutorialQueued // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34b0730
	void HighlightCharmsClass(struct UObject* sender); // Function Phoenix.TutorialSystem.HighlightCharmsClass // (Final|Native|Private) // @ game+0x34b06a0
	void HideLivingQuarters(struct UObject* sender); // Function Phoenix.TutorialSystem.HideLivingQuarters // (Final|Native|Private) // @ game+0x34b0610
	void HermesStartNextTutorial(); // Function Phoenix.TutorialSystem.HermesStartNextTutorial // (Final|Native|Private) // @ game+0x34b05f0
	bool GetInitialTutorialStepInProgress(); // Function Phoenix.TutorialSystem.GetInitialTutorialStepInProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x34b05d0
	struct UTutorialSystem* Get(); // Function Phoenix.TutorialSystem.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b0580
	bool ForceCompleteTutorial(struct FName TutorialName, bool DontFireCompletionMessages); // Function Phoenix.TutorialSystem.ForceCompleteTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x34b04b0
	void CompleteTutorialStepInternal(); // Function Phoenix.TutorialSystem.CompleteTutorialStepInternal // (Final|Native|Private) // @ game+0x34b0460
	bool CompleteTutorialStepByAlias(struct FName TutorialName, struct FName TutorialStepAlias); // Function Phoenix.TutorialSystem.CompleteTutorialStepByAlias // (Final|Native|Public|BlueprintCallable) // @ game+0x34b0390
	bool CompleteTutorialStep(struct FName TutorialName, int32_t TutorialStep); // Function Phoenix.TutorialSystem.CompleteTutorialStep // (Final|Native|Public|BlueprintCallable) // @ game+0x34b02c0
	bool CompleteTutorialCurrentStep(struct FName TutorialName); // Function Phoenix.TutorialSystem.CompleteTutorialCurrentStep // (Final|Native|Public|BlueprintCallable) // @ game+0x34b0220
	void ClosePauseMenu(struct UObject* sender); // Function Phoenix.TutorialSystem.ClosePauseMenu // (Final|Native|Private) // @ game+0x34b0190
	void CallAttentionToAnnex(struct UObject* sender); // Function Phoenix.TutorialSystem.CallAttentionToAnnex // (Final|Native|Private) // @ game+0x34b0070
	void BackOutOfRegion(struct UObject* sender); // Function Phoenix.TutorialSystem.BackOutOfRegion // (Final|Native|Private) // @ game+0x34affc0
	void AllowTravelToAnnex(struct UObject* sender); // Function Phoenix.TutorialSystem.AllowTravelToAnnex // (Final|Native|Private) // @ game+0x34aff30
	bool AbortTutorial(struct FName TutorialName, bool bInstant); // Function Phoenix.TutorialSystem.AbortTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x34afe60
	void AbortQueuedTutorials(struct UObject* sender); // Function Phoenix.TutorialSystem.AbortQueuedTutorials // (Final|Native|Public|BlueprintCallable) // @ game+0x34afdd0
};

// Class Phoenix.Tween
// Size: 0x58 (Inherited: 0x28)
struct UTween : UObject {
	struct UCurveFloat* EasingCurve; // 0x28(0x08)
	struct FMulticastInlineDelegate OnTweenFinished; // 0x30(0x10)
	char pad_40[0x18]; // 0x40(0x18)

	struct UTween* TweenVector2DPropertyToEnd(struct UObject* ObjectIn, struct FName PropertyNameIn, struct FVector2D EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenVector2DPropertyToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b2b80
	struct UTween* TweenVector2DPropertyFromStartToEnd(struct UObject* ObjectIn, struct FName PropertyNameIn, struct FVector2D StartIn, struct FVector2D EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenVector2DPropertyFromStartToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b2970
	struct UTween* TweenTransformPropertyToEnd(struct UObject* ObjectIn, enum class ETransformProperty TransformProperty, struct FVector2D EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenTransformPropertyToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b27d0
	struct UTween* TweenTransformPropertyFromStartToEnd(struct UObject* ObjectIn, enum class ETransformProperty TransformProperty, struct FVector2D StartIn, struct FVector2D EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenTransformPropertyFromStartToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b25c0
	struct UTween* TweenIntPropertyToEnd(struct UObject* ObjectIn, struct FName ProertyNameIn, int32_t EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenIntPropertyToEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34b2410
	struct UTween* TweenIntPropertyFromStartToEnd(struct UObject* ObjectIn, struct FName ProertyNameIn, int32_t StartIn, int32_t EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenIntPropertyFromStartToEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34b2230
	struct UTween* TweenFloatPropertyToEnd(struct UObject* ObjectIn, struct FName ProertyNameIn, float EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenFloatPropertyToEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34b2090
	struct UTween* TweenFloatPropertyFromStartToEnd(struct UObject* ObjectIn, struct FName ProertyNameIn, float StartIn, float EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenFloatPropertyFromStartToEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1eb0
	struct UTween* TweenColorPropertyToEnd(struct UObject* ObjectIn, struct FName PropertyNameIn, struct FLinearColor EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenColorPropertyToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b1cd0
	struct UTween* TweenColorPropertyFromStartToEnd(struct UObject* ObjectIn, struct FName PropertyNameIn, struct FLinearColor StartIn, struct FLinearColor EndIn, float Duration, enum class EEasingFunction EasingFunctionIn); // Function Phoenix.Tween.TweenColorPropertyFromStartToEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34b1ae0
	struct UTween* Play(); // Function Phoenix.Tween.Play // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1400
	bool IsPlaying(); // Function Phoenix.Tween.IsPlaying // (Final|Native|Public|BlueprintCallable) // @ game+0x34b07c0
	struct UTween* ConstructTween(); // Function Phoenix.Tween.ConstructTween // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b0480
};

// Class Phoenix.TwisterMixtureEffect
// Size: 0x530 (Inherited: 0x4c8)
struct ATwisterMixtureEffect : AMunitionType_AOESpell {
	float m_PullRadius; // 0x4c8(0x04)
	float m_StopRadius; // 0x4cc(0x04)
	float m_PullTime; // 0x4d0(0x04)
	float m_PullDelay; // 0x4d4(0x04)
	struct FVector m_Offset; // 0x4d8(0x0c)
	float m_TwisterImpulseMultiplier; // 0x4e4(0x04)
	float m_UpgradeRadiusMultiplier; // 0x4e8(0x04)
	struct FGameplayTag m_TwisterUpgradeAbilityTag; // 0x4ec(0x08)
	char pad_4F4[0x4]; // 0x4f4(0x04)
	struct USphereComponent* m_TwisterEffectSphere; // 0x4f8(0x08)
	struct USphereComponent* m_TwisterStoppingSphere; // 0x500(0x08)
	char pad_508[0x28]; // 0x508(0x28)

	void Tick(float DeltaSeconds); // Function Phoenix.TwisterMixtureEffect.Tick // (Native|Public|BlueprintCallable) // @ game+0x327fbd0
	void OnOverlapEndStoppingSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.TwisterMixtureEffect.OnOverlapEndStoppingSphere // (Final|Native|Public|BlueprintCallable) // @ game+0x34b1070
	void OnCharacterLand(struct FHitResult& Hit); // Function Phoenix.TwisterMixtureEffect.OnCharacterLand // (Final|Native|Protected|HasOutParms) // @ game+0x34b0d40
	void Cleanup(struct AMunitionType_Base* MunitionInstance); // Function Phoenix.TwisterMixtureEffect.Cleanup // (Final|Native|Public) // @ game+0x34b0100
	void BeginPull(); // Function Phoenix.TwisterMixtureEffect.BeginPull // (Final|Native|Public|BlueprintCallable) // @ game+0x34b0050
	void BeginPlay(); // Function Phoenix.TwisterMixtureEffect.BeginPlay // (Native|Public|BlueprintCallable) // @ game+0x327eb40
};

// Class Phoenix.UAbleCreatureAttackHitboxTask
// Size: 0x130 (Inherited: 0xd8)
struct UUAbleCreatureAttackHitboxTask : UablAttackHitboxTask {
	struct TSet<struct FName> CreatureTypes; // 0xd8(0x50)
	bool bAddForMountsOnly; // 0x128(0x01)
	char pad_129[0x7]; // 0x129(0x07)
};

// Class Phoenix.UDSActivityManager
// Size: 0x478 (Inherited: 0x28)
struct UUDSActivityManager : UObject {
	char pad_28[0xb0]; // 0x28(0xb0)
	struct UUDSManager* UDSManager; // 0xd8(0x08)
	char pad_E0[0x398]; // 0xe0(0x398)
};

// Class Phoenix.UDSEventQueuer
// Size: 0x1b8 (Inherited: 0x28)
struct UUDSEventQueuer : UObject {
	char pad_28[0x190]; // 0x28(0x190)
};

// Class Phoenix.UDSFieldGuideManager
// Size: 0x38 (Inherited: 0x28)
struct UUDSFieldGuideManager : UObject {
	struct UUDSManager* UDSManager; // 0x28(0x08)
	struct UUDSActivityManager* UDSActivityManager; // 0x30(0x08)
};

// Class Phoenix.UDSIntentManager
// Size: 0xc0 (Inherited: 0x28)
struct UUDSIntentManager : UObject {
	struct UUDSActivityManager* UDSActivityManager; // 0x28(0x08)
	char pad_30[0x90]; // 0x30(0x90)

	void HandleUDSFastTravelFinished(); // Function Phoenix.UDSIntentManager.HandleUDSFastTravelFinished // (Final|Native|Private) // @ game+0x34ba170
	void HandleOnCurtainsRaised(); // Function Phoenix.UDSIntentManager.HandleOnCurtainsRaised // (Final|Native|Private) // @ game+0x34ba150
	void HandleNavigationPathUpdated(struct TArray<struct FVector> NewPath); // Function Phoenix.UDSIntentManager.HandleNavigationPathUpdated // (Final|Native|Private) // @ game+0x34ba060
	void HandleMissionOnCurtainsRaised(); // Function Phoenix.UDSIntentManager.HandleMissionOnCurtainsRaised // (Final|Native|Private) // @ game+0x34ba040
};

// Class Phoenix.UDSLocationManager
// Size: 0xc0 (Inherited: 0x28)
struct UUDSLocationManager : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct UUDSManager* UDSManager; // 0x48(0x08)
	char pad_50[0x70]; // 0x50(0x70)
};

// Class Phoenix.UDSManager
// Size: 0x2f0 (Inherited: 0x28)
struct UUDSManager : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	struct UUDSStatManager* UDSStatManager; // 0x78(0x08)
	struct UUDSIntentManager* UDSIntentManager; // 0x80(0x08)
	struct UUDSMechanicManager* UDSMechanicManager; // 0x88(0x08)
	struct UUDSActivityManager* UDSActivityManager; // 0x90(0x08)
	struct UUDSFieldGuideManager* UDSFieldGuideManager; // 0x98(0x08)
	struct UUDSLocationManager* UDSLocationManager; // 0xa0(0x08)
	struct UUDSEventQueuer* UDSEventQueuer; // 0xa8(0x08)
	char pad_B0[0x240]; // 0xb0(0x240)

	void SyncUDSWithGameData(); // Function Phoenix.UDSManager.SyncUDSWithGameData // (Final|Native|Private) // @ game+0x34bb530
	void ResetPlayerStateIfCurrentSaveDeleted(int32_t DeletedCharacterId); // Function Phoenix.UDSManager.ResetPlayerStateIfCurrentSaveDeleted // (Final|Native|Private) // @ game+0x34bad30
	void LoadPlayerStateFromSaveFile(); // Function Phoenix.UDSManager.LoadPlayerStateFromSaveFile // (Final|Native|Private) // @ game+0x34ba6a0
	void InjectPlayerStateIntoSaveFile(); // Function Phoenix.UDSManager.InjectPlayerStateIntoSaveFile // (Final|Native|Private) // @ game+0x34ba300
};

// Class Phoenix.UDSMechanicManager
// Size: 0x308 (Inherited: 0x28)
struct UUDSMechanicManager : UObject {
	char pad_28[0x90]; // 0x28(0x90)
	struct UUDSManager* UDSManager; // 0xb8(0x08)
	char pad_C0[0x248]; // 0xc0(0x248)
};

// Class Phoenix.UDSStatManager
// Size: 0x98 (Inherited: 0x28)
struct UUDSStatManager : UObject {
	struct UUDSEventQueuer* UDSEventQueuer; // 0x28(0x08)
	char pad_30[0x68]; // 0x30(0x68)

	void HandleRealtimeMinutePassed(); // Function Phoenix.UDSStatManager.HandleRealtimeMinutePassed // (Final|Native|Private) // @ game+0x1074730
	void HandleInGameDayPassed(); // Function Phoenix.UDSStatManager.HandleInGameDayPassed // (Final|Native|Private) // @ game+0x34ba020
};

// Class Phoenix.UI_InGameIndicatorComponent
// Size: 0x520 (Inherited: 0x510)
struct UUI_InGameIndicatorComponent : UStaticMeshComponent {
	int32_t PointerIndex; // 0x510(0x04)
	bool ShowPointer; // 0x514(0x01)
	char pad_515[0xb]; // 0x515(0x0b)

	void SetShowPointer(bool Show); // Function Phoenix.UI_InGameIndicatorComponent.SetShowPointer // (Final|Native|Public|BlueprintCallable) // @ game+0x34bb1a0
	bool GetShowPointer(); // Function Phoenix.UI_InGameIndicatorComponent.GetShowPointer // (Final|Native|Public|BlueprintCallable) // @ game+0x34b9910
};

// Class Phoenix.UI_ConversationIndicator
// Size: 0x520 (Inherited: 0x520)
struct UUI_ConversationIndicator : UUI_InGameIndicatorComponent {
};

// Class Phoenix.UI_DB_Library
// Size: 0x28 (Inherited: 0x28)
struct UUI_DB_Library : UBlueprintFunctionLibrary {

	bool UnlockStationBP(struct UStationComponent* StationComponent); // Function Phoenix.UI_DB_Library.UnlockStationBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bbb20
	bool TargetHasConversationEntries(struct FName TargetActor, struct AActor* InTargetActor, bool& MissionInteraction); // Function Phoenix.UI_DB_Library.TargetHasConversationEntries // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34bb550
	void SetSystemSubtitles(bool SubtitlesEnabled); // Function Phoenix.UI_DB_Library.SetSystemSubtitles // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb230
	bool LockStation(struct UStationComponent* StationComponent, struct UObject* PlayerActor); // Function Phoenix.UI_DB_Library.LockStation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba6c0
	struct TArray<struct FString> GetUsabilityMissionList(); // Function Phoenix.UI_DB_Library.GetUsabilityMissionList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9d70
	bool GetSystemSubtitles(); // Function Phoenix.UI_DB_Library.GetSystemSubtitles // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9bd0
	struct FName GetSubtypeFromSubjectName(struct FName Subject); // Function Phoenix.UI_DB_Library.GetSubtypeFromSubjectName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9b40
	struct FString GetSubjectCategoryFromSubject(struct FName Subject); // Function Phoenix.UI_DB_Library.GetSubjectCategoryFromSubject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9a70
	bool GetSocialActionChoicesBP(struct TArray<struct FStationQueryData>& StationQueryData, struct UStationComponent* StationComponent, struct UObject* RequestingObject); // Function Phoenix.UI_DB_Library.GetSocialActionChoicesBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b9940
	bool GetRichPaperData(struct FString RichPaperID, struct FString sender, struct FString& o_richPaperType, struct FString& o_imageName, struct FString& o_headerTextKey, struct FString& o_bodyTextKey, struct FString& o_footerTextKey); // Function Phoenix.UI_DB_Library.GetRichPaperData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b95f0
	int32_t GetMaxHealthForLevel(int32_t Level); // Function Phoenix.UI_DB_Library.GetMaxHealthForLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9370
	void GetLevelRequiermentsForItem(struct FString Item, int32_t& outLevel, bool& outUsable); // Function Phoenix.UI_DB_Library.GetLevelRequiermentsForItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b9100
	bool GetIsCustomizable(struct FString SubtypeID); // Function Phoenix.UI_DB_Library.GetIsCustomizable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b9010
	struct FName GetHouseIDFromSubjectName(struct FName Subject); // Function Phoenix.UI_DB_Library.GetHouseIDFromSubjectName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b8ee0
	float GetHealthCooldown(); // Function Phoenix.UI_DB_Library.GetHealthCooldown // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8eb0
	struct TArray<struct FName> GetFrontendLevelList(); // Function Phoenix.UI_DB_Library.GetFrontendLevelList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8e00
	struct TArray<struct FName> GetDeveloperLevelList(); // Function Phoenix.UI_DB_Library.GetDeveloperLevelList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8b30
	void GetDefaultInventoryHolderID(struct FString Item, struct FString& HolderID); // Function Phoenix.UI_DB_Library.GetDefaultInventoryHolderID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b89e0
	void GetCompendiumSubjectFacts(struct FName Category, struct FName Subject, struct FFactSheetResult& FactSheet); // Function Phoenix.UI_DB_Library.GetCompendiumSubjectFacts // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b87b0
	void GetCompendiumPeopleSubjects(struct TArray<struct FPeopleInformation>& People, struct TArray<struct FName>& PeopleNames, int32_t& TotalPeople); // Function Phoenix.UI_DB_Library.GetCompendiumPeopleSubjects // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b8650
	void GetCompendiumCategorySubjects(struct FName Category, struct TArray<struct FName>& KnownSubjects, struct TArray<struct FName>& UnknownSubjects); // Function Phoenix.UI_DB_Library.GetCompendiumCategorySubjects // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b8500
	void GetCompendiumCategories(struct TArray<struct FName>& Categories); // Function Phoenix.UI_DB_Library.GetCompendiumCategories // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b8460
	void GetActorsKnownSubjects(struct FName Actor, struct TArray<struct FFactInformation>& Subjects, struct TArray<struct FFactInformation>& SubjectsAlreadyKnown); // Function Phoenix.UI_DB_Library.GetActorsKnownSubjects // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b8100
	bool ChooseStationQueryDataBP(struct AActor* InActor, struct UObject* ObjectComponent, enum class EStationInteraction InStationInteractionType, struct FName InActionName, int32_t InConnectionIndex); // Function Phoenix.UI_DB_Library.ChooseStationQueryDataBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7870
};

// Class Phoenix.UIAccessibilityManager
// Size: 0x110 (Inherited: 0x28)
struct UUIAccessibilityManager : UObject {
	char pad_28[0x68]; // 0x28(0x68)
	struct UDataTable* AudioCueDataTable; // 0x90(0x08)
	struct UObject* IconRenderWidgetClass; // 0x98(0x08)
	struct UMaterialInterface* IconRenderWidgetSimpleMaterial; // 0xa0(0x08)
	char pad_A8[0x68]; // 0xa8(0x68)

	void TriggerAccessibilityEventLeave(enum class EAccessibilityAudioCueEventType EventType, struct AActor* EventActor); // Function Phoenix.UIAccessibilityManager.TriggerAccessibilityEventLeave // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb930
	void TriggerAccessibilityEventEnter(enum class EAccessibilityAudioCueEventType EventType, struct AActor* EventActor); // Function Phoenix.UIAccessibilityManager.TriggerAccessibilityEventEnter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb870
	void TriggerAccessibilityEventDamage(struct AActor* EventActor, struct FVector Location, float Angle, float Damage); // Function Phoenix.UIAccessibilityManager.TriggerAccessibilityEventDamage // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34bb720
	void TriggerAccessibilityEvent(enum class EAccessibilityAudioCueEventType EventType, struct AActor* EventActor); // Function Phoenix.UIAccessibilityManager.TriggerAccessibilityEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb660
	void DeactivateAudioCues(); // Function Phoenix.UIAccessibilityManager.DeactivateAudioCues // (Final|Native|Public|BlueprintCallable) // @ game+0x34b7af0
	void ActivateAudioCues(struct UCanvasPanel* pPanel, struct UUIAccessibilityAudioCueWidget* pWidget); // Function Phoenix.UIAccessibilityManager.ActivateAudioCues // (Final|Native|Public|BlueprintCallable) // @ game+0x34b6d70
};

// Class Phoenix.UIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	bool WorldToViewport(struct FVector WorldPos, struct FVector2D& o_Point, bool LockToViewableSpace); // Function Phoenix.UIBlueprintFunctionLibrary.WorldToViewport // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34bbbb0
	struct FString UnicodeFilter(struct FString InputStr); // Function Phoenix.UIBlueprintFunctionLibrary.UnicodeFilter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb9f0
	void SwitchToGamePadControlScheme(struct FName ControlSchemeName); // Function Phoenix.UIBlueprintFunctionLibrary.SwitchToGamePadControlScheme // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb4b0
	void ShowOutlines(struct APlayerController* PC); // Function Phoenix.UIBlueprintFunctionLibrary.ShowOutlines // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb430
	void ShowInspectableWithCallback(struct FString InspectableID, struct FDelegate& Callback); // Function Phoenix.UIBlueprintFunctionLibrary.ShowInspectableWithCallback // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34bb340
	void ShowInspectable(struct FString InspectableID); // Function Phoenix.UIBlueprintFunctionLibrary.ShowInspectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bb2b0
	bool SetInventoryIconOverride(struct FString ItemId, struct FName Variation, struct FString& OutDisplayName, struct FString& OutIconName, bool& OutIsNameTranslatable); // Function Phoenix.UIBlueprintFunctionLibrary.SetInventoryIconOverride // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34baf70
	bool RunningWithEpicGamesStore(); // Function Phoenix.UIBlueprintFunctionLibrary.RunningWithEpicGamesStore // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1039f30
	void RotateMenuActors(float AxisValue, float rotateSpeedMultiplier, struct TArray<struct AActor*> Actors); // Function Phoenix.UIBlueprintFunctionLibrary.RotateMenuActors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bae00
	void RevertToDefaultInputMappings(); // Function Phoenix.UIBlueprintFunctionLibrary.RevertToDefaultInputMappings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bade0
	void RestartApplication(); // Function Phoenix.UIBlueprintFunctionLibrary.RestartApplication // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34badc0
	int32_t PlayOwlMailDialog(struct UObject* WorldContextObj, struct FString MailID); // Function Phoenix.UIBlueprintFunctionLibrary.PlayOwlMailDialog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34bac00
	bool NotEqual_MenuReaderVoiceMenuReaderVoice(struct FMenuReaderVoice& arg1, struct FMenuReaderVoice& arg2); // Function Phoenix.UIBlueprintFunctionLibrary.NotEqual_MenuReaderVoiceMenuReaderVoice // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34baa80
	struct FVector2D MeasureStringLength(struct FString TextString, struct FSlateFontInfo FontInfo); // Function Phoenix.UIBlueprintFunctionLibrary.MeasureStringLength // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34ba8b0
	void LogIntroMessage(struct UObject* WorldContextObject, struct FText Message); // Function Phoenix.UIBlueprintFunctionLibrary.LogIntroMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba790
	struct FString KeyToString(struct FKey Key); // Function Phoenix.UIBlueprintFunctionLibrary.KeyToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34ba570
	bool IsSteamRunningOnSteamDeck(); // Function Phoenix.UIBlueprintFunctionLibrary.IsSteamRunningOnSteamDeck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba540
	bool IsSteamInBigPictureMode(); // Function Phoenix.UIBlueprintFunctionLibrary.IsSteamInBigPictureMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba510
	bool IsSpellOrToolBlacklisted(struct FString ItemName); // Function Phoenix.UIBlueprintFunctionLibrary.IsSpellOrToolBlacklisted // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba470
	bool IsPCPlatform(bool bIsSteamDeckAlsoPC); // Function Phoenix.UIBlueprintFunctionLibrary.IsPCPlatform // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34ba3e0
	bool IsGameInForeground(); // Function Phoenix.UIBlueprintFunctionLibrary.IsGameInForeground // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba3b0
	bool IsBeastMeshReady(struct AActor* Actor); // Function Phoenix.UIBlueprintFunctionLibrary.IsBeastMeshReady // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34ba320
	bool IconExistsInTable(struct FString IconTextureName); // Function Phoenix.UIBlueprintFunctionLibrary.IconExistsInTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34ba210
	void HideOutlines(struct APlayerController* PC); // Function Phoenix.UIBlueprintFunctionLibrary.HideOutlines // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ba190
	void GotoScreenFromCode(struct UObject* WorldContextObject, struct UUserWidget* OldScreenReference, struct UUserWidget* NewScreenClass); // Function Phoenix.UIBlueprintFunctionLibrary.GotoScreenFromCode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9f20
	struct UUserWidget* GetWidgetParentOfClass(struct UWidget* ChildWidget, struct UUserWidget* WidgetClass); // Function Phoenix.UIBlueprintFunctionLibrary.GetWidgetParentOfClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b9e50
	struct FText GetTimespanTextWithMilliseconds(struct FTimespan Timespan); // Function Phoenix.UIBlueprintFunctionLibrary.GetTimespanTextWithMilliseconds // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34b9c90
	bool GetTimeSinceLastSave(struct FTimespan& OutTimespan); // Function Phoenix.UIBlueprintFunctionLibrary.GetTimeSinceLastSave // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34b9c00
	int32_t GetSalonChangeCost(); // Function Phoenix.UIBlueprintFunctionLibrary.GetSalonChangeCost // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b98e0
	float GetPotionDuration(struct FName& PotionName); // Function Phoenix.UIBlueprintFunctionLibrary.GetPotionDuration // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b9560
	struct FTransform GetPlayerSpawnLocation(struct AController* PlayerController); // Function Phoenix.UIBlueprintFunctionLibrary.GetPlayerSpawnLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34b94a0
	struct FVector GetNPCCharacterDamageNumberOffset(struct ANPC_Character* NPCCharacter); // Function Phoenix.UIBlueprintFunctionLibrary.GetNPCCharacterDamageNumberOffset // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34b9400
	struct FText GetLocalizedDateTimeText(struct FDateTime& InDateTime); // Function Phoenix.UIBlueprintFunctionLibrary.GetLocalizedDateTimeText // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34b9280
	int32_t GetHousePoints(struct FString HouseName); // Function Phoenix.UIBlueprintFunctionLibrary.GetHousePoints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8f70
	float GetGamma(); // Function Phoenix.UIBlueprintFunctionLibrary.GetGamma // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8e80
	bool GetDisplayedPlayTime(struct FString TotalPlayTimeString, struct FText& OutText); // Function Phoenix.UIBlueprintFunctionLibrary.GetDisplayedPlayTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34b8c80
	struct FString GetDisplayedMissionIcon(struct FName MissionID); // Function Phoenix.UIBlueprintFunctionLibrary.GetDisplayedMissionIcon // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b8bb0
	struct FString GetCurrentLanguage(); // Function Phoenix.UIBlueprintFunctionLibrary.GetCurrentLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b8960
	struct FName GetCurrentGamePadControlScheme(); // Function Phoenix.UIBlueprintFunctionLibrary.GetCurrentGamePadControlScheme // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b8920
	struct TArray<struct FIntPoint> GetAvailableResolutions(); // Function Phoenix.UIBlueprintFunctionLibrary.GetAvailableResolutions // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b83e0
	void GetAllPanelChildrenOfWidgetClass(struct UPanelWidget* PanelWidgetParent, struct UWidget* WidgetClass, struct TArray<struct UWidget*>& FoundWidgets); // Function Phoenix.UIBlueprintFunctionLibrary.GetAllPanelChildrenOfWidgetClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b82c0
	struct FVector GetActorCalloutComponentOffset(struct AActor* Actor); // Function Phoenix.UIBlueprintFunctionLibrary.GetActorCalloutComponentOffset // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34b8060
	float GetAbilityDurationRemaining(struct AActor* AbilityOwner, struct FName& AbilityName); // Function Phoenix.UIBlueprintFunctionLibrary.GetAbilityDurationRemaining // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b7f80
	bool GetAbilityActive(struct AActor* AbilityOwner, struct FName& AbilityName); // Function Phoenix.UIBlueprintFunctionLibrary.GetAbilityActive // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b7ea0
	struct FText FloatToFractionalText(float Value, int32_t Precision); // Function Phoenix.UIBlueprintFunctionLibrary.FloatToFractionalText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b7d70
	struct UTexture2D* FindIconTexture2D(struct FString IconTextureName); // Function Phoenix.UIBlueprintFunctionLibrary.FindIconTexture2D // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34b7c80
	bool EqualEqual_MenuReaderVoiceMenuReaderVoice(struct FMenuReaderVoice& arg1, struct FMenuReaderVoice& arg2); // Function Phoenix.UIBlueprintFunctionLibrary.EqualEqual_MenuReaderVoiceMenuReaderVoice // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34b7b10
	bool CopyToClipboard(struct FString StringToCopy); // Function Phoenix.UIBlueprintFunctionLibrary.CopyToClipboard // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7a00
	bool CanUseHippogriff(); // Function Phoenix.UIBlueprintFunctionLibrary.CanUseHippogriff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7840
	bool CanUseGraphorn(); // Function Phoenix.UIBlueprintFunctionLibrary.CanUseGraphorn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7810
	bool CanUseBroom(bool bIncludeAvatarState); // Function Phoenix.UIBlueprintFunctionLibrary.CanUseBroom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7780
	bool AsyncLoadUITexture(struct TSoftObjectPtr<UTexture2D> TextureRef, struct FDelegate& Callback, struct UObject* CallbackParam, enum class EUIAsyncLoadPriority Priority); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncLoadUITexture // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b7590
	bool AsyncLoadFont(struct FSoftObjectPath FontPath, struct FDelegate& AsyncLoadCallback); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncLoadFont // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34b7430
	void AsyncLoadActionSelectionUI(); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncLoadActionSelectionUI // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7410
	bool AsyncFindIconTexWithCallback(struct FString IconTextureName, struct FDelegate& AsyncLoadCallback, struct UObject* CallbackParam); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncFindIconTexWithCallback // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b70d0
	bool AsyncFindIconTexture2D(struct FString IconTextureName, struct UImage* InImage, bool MatchSize, enum class EUIAsyncLoadPriority Priority, bool bIsLoadingScreen); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncFindIconTexture2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b7220
	bool AsyncCreateSpellMiniGame(struct FName GameName, bool UseDefaultCamera, struct FDelegate& AsyncLoadCallback); // Function Phoenix.UIBlueprintFunctionLibrary.AsyncCreateSpellMiniGame // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34b6f90
	void AddPlayerHousePoints(int32_t Points); // Function Phoenix.UIBlueprintFunctionLibrary.AddPlayerHousePoints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b6f10
	void AddHousePoints(struct FString HouseName, int32_t Points); // Function Phoenix.UIBlueprintFunctionLibrary.AddHousePoints // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34b6e40
};

// Class Phoenix.UIColorTable
// Size: 0x28 (Inherited: 0x28)
struct UUIColorTable : UObject {

	struct FLinearColor GetColorByTag(struct FName pColorTag); // Function Phoenix.UIColorTable.GetColorByTag // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34c2ae0
	struct FLinearColor GetColorByRowHandleBP(struct FDataTableRowHandle pRowHandle); // Function Phoenix.UIColorTable.GetColorByRowHandleBP // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34c2a40
	struct FLinearColor GetColorByRowHandle(struct FDataTableRowHandle& pRowHandle); // Function Phoenix.UIColorTable.GetColorByRowHandle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34c29a0
	struct FLinearColor CreateColorBlindColor(enum class EColorVisionDeficiency pColorType, struct FLinearColor pColor, int32_t bCorrectDeficiency, int32_t bSimulateCorrectionWithDeficiency, int32_t Severity); // Function Phoenix.UIColorTable.CreateColorBlindColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34c1350
};

// Class Phoenix.UIDManager
// Size: 0x78 (Inherited: 0x28)
struct UUIDManager : UObject {
	char pad_28[0x50]; // 0x28(0x50)

	void OnActorDestroyed(struct AActor* DestroyedActor); // Function Phoenix.UIDManager.OnActorDestroyed // (Final|Native|Protected) // @ game+0x34c5c10
};

// Class Phoenix.UIDummyActor
// Size: 0x540 (Inherited: 0x4f0)
struct AUIDummyActor : AAnimationArchitect_Character {
	char pad_4F0[0x8]; // 0x4f0(0x08)
	struct UObjectStateComponent* ObjectStateComponent; // 0x4f8(0x08)
	struct FMulticastInlineDelegate OnDummyMeshLoadComplete; // 0x500(0x10)
	struct FMulticastInlineDelegate OnDummyGearLoadComplete; // 0x510(0x10)
	bool DesiredVisibility; // 0x520(0x01)
	char pad_521[0x1f]; // 0x521(0x1f)

	void ShowDummy(); // Function Phoenix.UIDummyActor.ShowDummy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void HideDummy(); // Function Phoenix.UIDummyActor.HideDummy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.UIAccessibilityAudioCueWidget
// Size: 0x268 (Inherited: 0x268)
struct UUIAccessibilityAudioCueWidget : UUserWidget {
};

// Class Phoenix.UIInputManager
// Size: 0xe0 (Inherited: 0x28)
struct UUIInputManager : UObject {
	char pad_28[0xb8]; // 0x28(0xb8)
};

// Class Phoenix.UIInteractiveActor
// Size: 0x2a0 (Inherited: 0x298)
struct AUIInteractiveActor : AInteractiveObjectActor {
	struct UCognitionStimuliSourceComponent* CognitionStimuliSourceComponent; // 0x298(0x08)

	void InteractionInitiated(); // Function Phoenix.UIInteractiveActor.InteractionInitiated // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.UIManager
// Size: 0x6d0 (Inherited: 0x28)
struct UUIManager : UObject {
	char pad_28[0x60]; // 0x28(0x60)
	struct UDataTable* IconDataTable; // 0x88(0x08)
	struct UDataTable* TargetUITable; // 0x90(0x08)
	struct UPhoenixNotificationManager* NotificationManager; // 0x98(0x08)
	struct UTutorialSystem* TutorialSystem; // 0xa0(0x08)
	struct UTexture2D* ErrorTexture; // 0xa8(0x08)
	struct UTexture2D* LoadingTexture; // 0xb0(0x08)
	char pad_B8[0x48]; // 0xb8(0x48)
	enum class EUIDisplayMode UIDisplayMode; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	struct FName CompendiumCategory; // 0x104(0x08)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct FString CompendiumItemName; // 0x110(0x10)
	struct FString LastVisitedMenuPage; // 0x120(0x10)
	float GlobalParallaxMultiplier; // 0x130(0x04)
	float NextExpGainDelay; // 0x134(0x04)
	struct FName LastLocationName; // 0x138(0x08)
	enum class EGenderEnum DefaultGenderRig; // 0x140(0x01)
	char pad_141[0x3]; // 0x141(0x03)
	struct FName DefaultMalePreset; // 0x144(0x08)
	struct FName DefaultFemalePreset; // 0x14c(0x08)
	char pad_154[0x4]; // 0x154(0x04)
	struct TMap<enum class EAvatarPresetType, struct TSoftObjectPtr<UAvatarPresetDefinition>> LastChosenPresetData; // 0x158(0x50)
	struct UWorldSupportWorld* PauseWorld; // 0x1a8(0x08)
	struct UWorldSupportWorld* FieldGuideWorld; // 0x1b0(0x08)
	char pad_1B8[0x8]; // 0x1b8(0x08)
	struct UWorldSupportWorld* VendorWorld; // 0x1c0(0x08)
	struct UWorldSupportWorld* CompanionWorld; // 0x1c8(0x08)
	struct UScreen* CompanionSelectScreen; // 0x1d0(0x08)
	struct APlayerController* GamePlayerController; // 0x1d8(0x08)
	struct FMulticastInlineDelegate OnLoadScreenDismissed; // 0x1e0(0x10)
	struct FDelegate OnPauseMenuClosed; // 0x1f0(0x10)
	char pad_200[0x10]; // 0x200(0x10)
	bool CastStupefyWithRightTrigger; // 0x210(0x01)
	char pad_211[0x6f]; // 0x211(0x6f)
	struct UMapOverland* OverlandMap; // 0x280(0x08)
	char pad_288[0x98]; // 0x288(0x98)
	struct UUserWidget* InteractWidget; // 0x320(0x08)
	struct TArray<struct FName> PauseRequesters; // 0x328(0x10)
	struct UObject* mUIScreenFadeClass; // 0x338(0x08)
	char pad_340[0x8]; // 0x340(0x08)
	struct TSet<enum class EPauseMenuPage> HiddenMenuPages; // 0x348(0x50)
	char pad_398[0x28]; // 0x398(0x28)
	struct UMapDungeon* DungeonMap; // 0x3c0(0x08)
	struct UMapHogwarts* HogwartsMap; // 0x3c8(0x08)
	struct UMapHogsmeade* HogsmeadeMap; // 0x3d0(0x08)
	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct UObject* InGameMenuWidgetClass; // 0x3e0(0x08)
	struct UObject* FieldGuideWidgetClass; // 0x3e8(0x08)
	struct UInGameMenuScreen* InGameMenuWidget; // 0x3f0(0x08)
	struct UFieldGuideMenu* FieldGuideWidget; // 0x3f8(0x08)
	char pad_400[0x8]; // 0x400(0x08)
	struct UObject* PopupScreenClass; // 0x408(0x08)
	char pad_410[0x7]; // 0x410(0x07)
	bool bIsRichPaperShowing; // 0x417(0x01)
	struct APhoenixPathActor* PathActor; // 0x418(0x08)
	char pad_420[0x10]; // 0x420(0x10)
	struct FColor PauseMenuLEDColor; // 0x430(0x04)
	char pad_434[0x9c]; // 0x434(0x9c)
	struct UUIInputManager* InputManager; // 0x4d0(0x08)
	char pad_4D8[0x38]; // 0x4d8(0x38)
	struct TArray<struct UTexture2D*> AlwaysLoadedTextures; // 0x510(0x10)
	struct UScreenFadeWidget* m_pScreenFadeWidget; // 0x520(0x08)
	char pad_528[0x10]; // 0x528(0x10)
	struct UMissionFailScreenBase* MissionFailedScreen; // 0x538(0x08)
	char pad_540[0x88]; // 0x540(0x88)
	struct UBeaconInfo* CompanionBeaconInfo; // 0x5c8(0x08)
	char pad_5D0[0x20]; // 0x5d0(0x20)
	struct FMulticastInlineDelegate OnPSOUpdate; // 0x5f0(0x10)
	char pad_600[0xd0]; // 0x600(0xd0)

	void WidgetClassLoaded(struct UUserWidget* Widget); // Function Phoenix.UIManager.WidgetClassLoaded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	struct FMenuReaderVoice ValidateMenuReaderVoice(struct FMenuReaderVoice InVoice); // Function Phoenix.UIManager.ValidateMenuReaderVoice // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34cb2a0
	void UseHoverDrone(); // Function Phoenix.UIManager.UseHoverDrone // (Final|Native|Public|BlueprintCallable) // @ game+0x34cb280
	void UpdateHintGameLogic(struct FName GameLogicVar, bool SetOn); // Function Phoenix.UIManager.UpdateHintGameLogic // (Final|Native|Public|BlueprintCallable) // @ game+0x34cb1b0
	bool UpdateFSKnownItemsDetailMap(struct FString FactItem, struct FString FactAttribute, enum class EFactsheetButtonState FactState); // Function Phoenix.UIManager.UpdateFSKnownItemsDetailMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34cb000
	void UpdateAllFastTravelLocations(); // Function Phoenix.UIManager.UpdateAllFastTravelLocations // (Final|Exec|Native|Public) // @ game+0x34cafc0
	void UnpauseLocationNameUI(); // Function Phoenix.UIManager.UnpauseLocationNameUI // (Final|Native|Public|BlueprintCallable) // @ game+0x34cafa0
	void UnlockAllPauseMenuTabs(); // Function Phoenix.UIManager.UnlockAllPauseMenuTabs // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x34caf80
	void UnloadFieldGuideScreen(); // Function Phoenix.UIManager.UnloadFieldGuideScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34caf60
	bool UnbindMKBAxis(struct FInputAxisKeyMapping& InAxisMapping, bool bForceRebuildKeymaps, bool bTranspose); // Function Phoenix.UIManager.UnbindMKBAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34cad70
	bool UnbindMKBAction(struct FInputActionKeyMapping& InActionMapping, bool bForceRebuildKeymaps, bool bTranspose); // Function Phoenix.UIManager.UnbindMKBAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34cab90
	void UITriggerLevelLoad(); // Function Phoenix.UIManager.UITriggerLevelLoad // (Final|Exec|Native|Public) // @ game+0x34cab70
	void UIManager_ToggleShowCurentLevelName(); // Function Phoenix.UIManager.UIManager_ToggleShowCurentLevelName // (Final|Exec|Native|Public) // @ game+0x34cab50
	void UIBuildNavMeshData(); // Function Phoenix.UIManager.UIBuildNavMeshData // (Final|Exec|Native|Public) // @ game+0x1074730
	void TriggerGamepadTextInput(struct FDelegate InCallback, struct FText InTextDescription, int32_t InMaxCharacters, struct FString InDefaultText); // Function Phoenix.UIManager.TriggerGamepadTextInput // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca930
	void TriggerFadeOut(); // Function Phoenix.UIManager.TriggerFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void TriggerFadeIn(); // Function Phoenix.UIManager.TriggerFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	struct TArray<struct FInputAxisKeyMapping> TransposeAxisToQWERTY(struct TArray<struct FInputAxisKeyMapping>& AxisMappings); // Function Phoenix.UIManager.TransposeAxisToQWERTY // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34ca7e0
	struct TArray<struct FInputAxisKeyMapping> TransposeAxisFromQWERTY(struct TArray<struct FInputAxisKeyMapping>& AxisMappings); // Function Phoenix.UIManager.TransposeAxisFromQWERTY // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34ca690
	struct TArray<struct FInputActionKeyMapping> TransposeActionToQWERTY(struct TArray<struct FInputActionKeyMapping>& ActionMappings); // Function Phoenix.UIManager.TransposeActionToQWERTY // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34ca540
	struct TArray<struct FInputActionKeyMapping> TransposeActionFromQWERTY(struct TArray<struct FInputActionKeyMapping>& ActionMappings); // Function Phoenix.UIManager.TransposeActionFromQWERTY // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34ca3f0
	void TogglePathActive(); // Function Phoenix.UIManager.TogglePathActive // (Final|Exec|Native|Public) // @ game+0x34ca3d0
	void ToggleMenuTab(enum class EPauseMenuPage MenuPage, bool ShouldShow); // Function Phoenix.UIManager.ToggleMenuTab // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca300
	void ToggleHUD(bool Enable, bool AllowSelectiveTicking); // Function Phoenix.UIManager.ToggleHUD // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca230
	bool TargetWidgetSetup(struct AActor* Target); // Function Phoenix.UIManager.TargetWidgetSetup // (Final|Native|Public) // @ game+0x34ca190
	void TargetComponentWidget(struct AActor* Target); // Function Phoenix.UIManager.TargetComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca100
	void StopVendorWorld(); // Function Phoenix.UIManager.StopVendorWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca0e0
	void StopCompanionWorld(); // Function Phoenix.UIManager.StopCompanionWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca0c0
	void StartVendorWorld(); // Function Phoenix.UIManager.StartVendorWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca0a0
	void StartCompanionWorld(); // Function Phoenix.UIManager.StartCompanionWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34ca080
	struct UPopupScreen* ShowYesNoPopup(struct FString TitleString, struct FString DescriptionString, bool IsDescTranslated, bool bPausesTheGame, struct UUserWidget* ContentWidget, enum class EUIPopupPriority PopupPriority, bool bAutoCloseOnButtonPress); // Function Phoenix.UIManager.ShowYesNoPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x34c9e30
	void ShowVirtualCursor(struct APlayerController* Controller, bool Enable, struct FVector2D Position, struct FString Context); // Function Phoenix.UIManager.ShowVirtualCursor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34c9c90
	void ShowRoadsInWorld(); // Function Phoenix.UIManager.ShowRoadsInWorld // (Final|Exec|Native|Public) // @ game+0x34c9c70
	struct UPopupScreen* ShowPleaseWaitPopup(struct FString TitleString, struct FString DescriptionString, bool IsDescTranslated, bool bPausesTheGame, struct UUserWidget* ContentWidget, enum class EUIPopupPriority PopupPriority, bool bAutoCloseOnButtonPress); // Function Phoenix.UIManager.ShowPleaseWaitPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x34c9a20
	void ShowPathSelectionReleased(); // Function Phoenix.UIManager.ShowPathSelectionReleased // (Final|Native|Public|BlueprintCallable) // @ game+0x34c9a00
	void ShowPathSelectionPressed(); // Function Phoenix.UIManager.ShowPathSelectionPressed // (Final|Native|Public|BlueprintCallable) // @ game+0x34c99e0
	void ShowPathSelectionCancelled(); // Function Phoenix.UIManager.ShowPathSelectionCancelled // (Final|Native|Public|BlueprintCallable) // @ game+0x34c99c0
	void ShowPathInWorld(); // Function Phoenix.UIManager.ShowPathInWorld // (Final|Exec|Native|Public) // @ game+0x34c99a0
	struct UPopupScreen* ShowOkPopup(struct FString TitleString, struct FString DescriptionString, bool IsDescTranslated, bool bPausesTheGame, struct UUserWidget* ContentWidget, enum class EUIPopupPriority PopupPriority, bool bAutoCloseOnButtonPress, int32_t ZOrder); // Function Phoenix.UIManager.ShowOkPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x34c96f0
	struct UPopupScreen* ShowOkCancelPopup(struct FString TitleString, struct FString DescriptionString, bool IsDescTranslated, bool bPausesTheGame, struct UUserWidget* ContentWidget, enum class EUIPopupPriority PopupPriority, bool bAutoCloseOnButtonPress); // Function Phoenix.UIManager.ShowOkCancelPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x34c94a0
	struct UPopupScreen* ShowGenericPopup(struct FString TitleString, struct FString DescriptionString, struct TArray<struct FLegendItemData>& LegendItems, struct TArray<struct FInputActionHoldInfo>& CompletionActions, bool bUsesWaitIndicator, bool IsDescTranslated, bool bPausesTheGame, struct UUserWidget* ContentWidget, enum class EUIPopupPriority PopupPriority, bool bAutoCloseOnButtonPress, int32_t ZOrder); // Function Phoenix.UIManager.ShowGenericPopup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c90b0
	void ShowFloatingGamepadTextInput(struct FDelegate InCallback, bool ShowOnTop); // Function Phoenix.UIManager.ShowFloatingGamepadTextInput // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8fc0
	void SetUIDisplayMode(enum class EUIDisplayMode DisplayMode); // Function Phoenix.UIManager.SetUIDisplayMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c8f50
	void SetToMapFromBackButton(bool pToMapFromBackButton); // Function Phoenix.UIManager.SetToMapFromBackButton // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8ec0
	void SetTempPauseLock(bool pTempPauseLock); // Function Phoenix.UIManager.SetTempPauseLock // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8e30
	bool SetStudentLocatorBeacon(struct FString StudentName); // Function Phoenix.UIManager.SetStudentLocatorBeacon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c8d40
	void SetPlayerPawn(struct APawn* Pawn); // Function Phoenix.UIManager.SetPlayerPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8cb0
	void SetPlayerInventorySortPreference(struct FString Preference); // Function Phoenix.UIManager.SetPlayerInventorySortPreference // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8c10
	bool SetPlayerHouseEnum(enum class HouseIds House); // Function Phoenix.UIManager.SetPlayerHouseEnum // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8b80
	bool SetPlayerHouse(struct FString HouseName); // Function Phoenix.UIManager.SetPlayerHouse // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8a80
	bool SetPlayerGender(struct FString Gender); // Function Phoenix.UIManager.SetPlayerGender // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8980
	bool SetPlayerFirstAndLastName(struct FString PlayerFirstName, struct FString PlayerLastName); // Function Phoenix.UIManager.SetPlayerFirstAndLastName // (Final|Native|Public|BlueprintCallable) // @ game+0x34c8800
	bool SetPlayerChosenWandInfo(struct FString WandStyle, struct FString WandWood, struct FString WandCore, struct FString WandLength, struct FString WandFlex); // Function Phoenix.UIManager.SetPlayerChosenWandInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x34c84d0
	bool SetMKBAxis(struct FInputAxisKeyMapping& InAxisMapping, bool bIsPrimary, bool bForceRebuildKeymaps, bool bTranspose); // Function Phoenix.UIManager.SetMKBAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34c7fa0
	bool SetMKBAction(struct FInputActionKeyMapping& InActionMapping, bool bIsPrimary, bool bForceRebuildKeymaps, bool bTranspose); // Function Phoenix.UIManager.SetMKBAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34c7da0
	bool SetMenuReaderVolume(float InVolume); // Function Phoenix.UIManager.SetMenuReaderVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c8450
	bool SetMenuReaderVoice(struct FMenuReaderVoice InVoice); // Function Phoenix.UIManager.SetMenuReaderVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c82c0
	bool SetMenuReaderEnabled(bool bEnabled); // Function Phoenix.UIManager.SetMenuReaderEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c8230
	void SetManualFade(float Opacity); // Function Phoenix.UIManager.SetManualFade // (Final|Native|Public|BlueprintCallable) // @ game+0x34c81b0
	bool SetLocatorBeaconUsingType(struct FString Type, struct FString NameOrLocation); // Function Phoenix.UIManager.SetLocatorBeaconUsingType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c7c30
	bool SetLocatorBeaconUsingDBLocation(struct FString LocationID); // Function Phoenix.UIManager.SetLocatorBeaconUsingDBLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c7b40
	bool SetLocatorBeaconUsingDBDungeonEntrances(struct FString LocationID); // Function Phoenix.UIManager.SetLocatorBeaconUsingDBDungeonEntrances // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c7a50
	bool SetLocatorBeacon(struct FString StudentName, struct FVector Location, struct FString BeaconIconName); // Function Phoenix.UIManager.SetLocatorBeacon // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34c7880
	void SetLocationName(struct FName LocationName, bool ShowNotification); // Function Phoenix.UIManager.SetLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x34c77b0
	void SetLoadingSaveGame(bool pLoadingSaveGame); // Function Phoenix.UIManager.SetLoadingSaveGame // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7720
	void SetIsRichPaperShowing(bool Showing); // Function Phoenix.UIManager.SetIsRichPaperShowing // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7690
	void SetInPreGameplayState(bool InPreGameplayState); // Function Phoenix.UIManager.SetInPreGameplayState // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7600
	void SetInMenuTransitionWithDelay(bool pInMenuTransition, float Delay, struct FString pContext); // Function Phoenix.UIManager.SetInMenuTransitionWithDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7480
	void SetInMenuTransition(bool pInMenuTransition, struct FString pContext); // Function Phoenix.UIManager.SetInMenuTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7350
	void SetInFrontendLevel(bool bInFrontend); // Function Phoenix.UIManager.SetInFrontendLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x34c72c0
	void SetInDarkArtsChallenge(bool InDA); // Function Phoenix.UIManager.SetInDarkArtsChallenge // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7230
	void SetHiddenMenuTabs(struct TArray<enum class EPauseMenuPage> PagesToHide); // Function Phoenix.UIManager.SetHiddenMenuTabs // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7140
	void SetFactsheetMode(enum class EUIFactsheetMode NewFactsheetMode); // Function Phoenix.UIManager.SetFactsheetMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c70d0
	void SetDebugLoadingScreen(bool bDebug); // Function Phoenix.UIManager.SetDebugLoadingScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34c7040
	void SetCursorWidget(struct UMenuCursorWidget* NewCursor); // Function Phoenix.UIManager.SetCursorWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c6fb0
	void SetCompanionSelectionScreen(struct UScreen* InScreen); // Function Phoenix.UIManager.SetCompanionSelectionScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6f20
	void SetCastStupefyWithRightTrigger(bool UseRT); // Function Phoenix.UIManager.SetCastStupefyWithRightTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6e90
	void SetCanBackOutOfAvatarCreator(bool bCanBackOut); // Function Phoenix.UIManager.SetCanBackOutOfAvatarCreator // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6e00
	void SetAsyncScreenLoadInProgress(bool InProgress); // Function Phoenix.UIManager.SetAsyncScreenLoadInProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6d70
	void SetAndShowHintMessage(struct FString HintKey, enum class ETutorialPosition HintPosition, bool bIgnoreShowTutorialElementsFlag, float MaxDuration); // Function Phoenix.UIManager.SetAndShowHintMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6bf0
	void SetActiveMenu(struct FName MenuToLoad, bool LoadToSubPage, bool LockToMenu); // Function Phoenix.UIManager.SetActiveMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6ae0
	void SelectButton(); // Function Phoenix.UIManager.SelectButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	bool SaveInputConfig(); // Function Phoenix.UIManager.SaveInputConfig // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c6ab0
	void RevelioPageScreenLoaded(struct UScreen* Screen); // Function Phoenix.UIManager.RevelioPageScreenLoaded // (Final|Native|Public) // @ game+0x34c6a20
	void ReturnToStartPage(); // Function Phoenix.UIManager.ReturnToStartPage // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6a00
	struct FString ResolveOptionPanelChoice(struct FString DialogueLine); // Function Phoenix.UIManager.ResolveOptionPanelChoice // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c68d0
	void RequestGameAndSystemPause(bool bPause, struct FName RequesterName); // Function Phoenix.UIManager.RequestGameAndSystemPause // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6800
	void RemoveTargetComponentWidget(struct AActor* Target, bool TargetDied); // Function Phoenix.UIManager.RemoveTargetComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6730
	void RemoveStudentLocatorBeacon(); // Function Phoenix.UIManager.RemoveStudentLocatorBeacon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c6710
	void RemoveInteractComponentWidget(struct AActor* Target); // Function Phoenix.UIManager.RemoveInteractComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6680
	void RemoveAlertComponentWidget(struct AActor* Target, enum class EWidgetType WidgetType); // Function Phoenix.UIManager.RemoveAlertComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c65b0
	struct FString PhoenixTranslate(struct FString Key, struct FString DebugLogText); // Function Phoenix.UIManager.PhoenixTranslate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c6430
	bool PhoenixKeyExists(struct FString Key); // Function Phoenix.UIManager.PhoenixKeyExists // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c6390
	void PauseLocationNameUI(); // Function Phoenix.UIManager.PauseLocationNameUI // (Final|Native|Public|BlueprintCallable) // @ game+0x34c6370
	void PathSelectionTimerExpired(); // Function Phoenix.UIManager.PathSelectionTimerExpired // (Final|Native|Public) // @ game+0x34c6350
	void OnVendorLevelUnload(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnVendorLevelUnload // (Final|Native|Public) // @ game+0x1480ed0
	void OnVendorLevelShow(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnVendorLevelShow // (Final|Native|Public) // @ game+0x34c62c0
	void OnVendorLevelLoad(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnVendorLevelLoad // (Final|Native|Public) // @ game+0x34c6230
	void OnStatChanged(struct FName StatID, int32_t Value, int32_t Delta); // Function Phoenix.UIManager.OnStatChanged // (Final|Native|Public) // @ game+0x34c6120
	void OnSaveGameLoad(); // Function Phoenix.UIManager.OnSaveGameLoad // (Final|Native|Public) // @ game+0x34c6100
	void OnInputDeviceChanged(enum class EInputDeviceUsed UsedInputDevice, struct FKey InputPressed); // Function Phoenix.UIManager.OnInputDeviceChanged // (Final|Native|Public) // @ game+0x34c5fd0
	void OnGameToBeSaved(); // Function Phoenix.UIManager.OnGameToBeSaved // (Final|Native|Public) // @ game+0x34c5fb0
	void OnFieldGuideUnload(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnFieldGuideUnload // (Final|Native|Public) // @ game+0x34c5f20
	void OnFieldGuideShow(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnFieldGuideShow // (Final|Native|Public) // @ game+0x34c5e90
	void OnFieldGuideLoad(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnFieldGuideLoad // (Final|Native|Public) // @ game+0x34c5e00
	void OnFadeInComplete(); // Function Phoenix.UIManager.OnFadeInComplete // (Final|Native|Private) // @ game+0x34c5de0
	void OnControlSchemaChanged(); // Function Phoenix.UIManager.OnControlSchemaChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5dc0
	void OnCompanionLevelUnload(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnCompanionLevelUnload // (Final|Native|Public) // @ game+0x1480ed0
	void OnCompanionLevelShow(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnCompanionLevelShow // (Final|Native|Public) // @ game+0x34c5d30
	void OnCompanionLevelLoad(struct UWorldSupportLevel* Level); // Function Phoenix.UIManager.OnCompanionLevelLoad // (Final|Native|Public) // @ game+0x34c5ca0
	void MoviePlaybackFinished(struct UObject* Caller); // Function Phoenix.UIManager.MoviePlaybackFinished // (Final|Native|Public) // @ game+0x34c5b80
	void MissionFailScreenLoaded(struct UScreen* Screen); // Function Phoenix.UIManager.MissionFailScreenLoaded // (Final|Native|Public) // @ game+0x34c5af0
	void LoadFieldGuideScreen(); // Function Phoenix.UIManager.LoadFieldGuideScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5ad0
	void KeepLoadScreenUp(); // Function Phoenix.UIManager.KeepLoadScreenUp // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5ab0
	bool IsVendorInteract(struct FName Target); // Function Phoenix.UIManager.IsVendorInteract // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5a10
	bool IsUsingXboxOneController(); // Function Phoenix.UIManager.IsUsingXboxOneController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c59e0
	bool IsUsingSwitchController(); // Function Phoenix.UIManager.IsUsingSwitchController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c59b0
	bool IsUsingSteamController(); // Function Phoenix.UIManager.IsUsingSteamController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5980
	bool IsUsingPS5Controller(); // Function Phoenix.UIManager.IsUsingPS5Controller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5950
	bool IsUsingPS4Controller(); // Function Phoenix.UIManager.IsUsingPS4Controller // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5920
	bool IsStudentLocatorBeaconActive(struct FString StudentName); // Function Phoenix.UIManager.IsStudentLocatorBeaconActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c5830
	bool IsSteamRunningOnSteamDeck(); // Function Phoenix.UIManager.IsSteamRunningOnSteamDeck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c5800
	bool IsSteamInBigPictureMode(); // Function Phoenix.UIManager.IsSteamInBigPictureMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c57d0
	bool IsPopupReady(); // Function Phoenix.UIManager.IsPopupReady // (Final|Native|Public|BlueprintCallable) // @ game+0x34c57a0
	bool IsPauseRequestedBy(struct FName RequesterName); // Function Phoenix.UIManager.IsPauseRequestedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c5700
	bool IsNabSackAlreadyEquipped(); // Function Phoenix.UIManager.IsNabSackAlreadyEquipped // (Final|Native|Public|BlueprintCallable) // @ game+0x34c56d0
	bool IsMenuTabHidden(enum class EPauseMenuPage MenuTab); // Function Phoenix.UIManager.IsMenuTabHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5640
	bool IsMenuReaderSupported(); // Function Phoenix.UIManager.IsMenuReaderSupported // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5610
	bool IsMenuReaderEnabled(); // Function Phoenix.UIManager.IsMenuReaderEnabled // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c55e0
	bool IsMenuReaderCurrentLanguageSupported(); // Function Phoenix.UIManager.IsMenuReaderCurrentLanguageSupported // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c55b0
	bool IsMenuReaderBusy(); // Function Phoenix.UIManager.IsMenuReaderBusy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c5580
	bool IsItemNew(struct FName CategoryName, struct FName ItemName); // Function Phoenix.UIManager.IsItemNew // (Final|Native|Public|BlueprintCallable) // @ game+0x34c54b0
	bool IsInPreGameplayState(); // Function Phoenix.UIManager.IsInPreGameplayState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c5480
	bool IsInFrontendLevel(); // Function Phoenix.UIManager.IsInFrontendLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c5450
	bool IsGamepadTypeConnected(enum class EGamepadType GamepadType); // Function Phoenix.UIManager.IsGamepadTypeConnected // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c53d0
	bool IsFaded(); // Function Phoenix.UIManager.IsFaded // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c53a0
	bool IsDebugLoadingScreen(); // Function Phoenix.UIManager.IsDebugLoadingScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c5380
	bool IsAxisKeyValid(struct FInputAxisKeyMapping& InAxisMapping); // Function Phoenix.UIManager.IsAxisKeyValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c5230
	bool IsAsyncScreenLoadInProgress(); // Function Phoenix.UIManager.IsAsyncScreenLoadInProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x33e0660
	bool IsActionKeyValid(struct FInputActionKeyMapping& InActionMapping); // Function Phoenix.UIManager.IsActionKeyValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c50f0
	void InteractComponentWidget(struct AActor* Target); // Function Phoenix.UIManager.InteractComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5060
	bool InPauseMode(); // Function Phoenix.UIManager.InPauseMode // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5030
	bool InFieldGuideMenuTransition(); // Function Phoenix.UIManager.InFieldGuideMenuTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x34c5000
	bool InDarkArtsChallenge(); // Function Phoenix.UIManager.InDarkArtsChallenge // (Final|Native|Public) // @ game+0x34c4fe0
	void IconTextureLoadedCallback(struct UTexture2D* Texture, struct UObject* Param); // Function Phoenix.UIManager.IconTextureLoadedCallback // (Final|Native|Private) // @ game+0x34c4f10
	void HandleMapLocationChanged(struct UObject* Caller, struct FString CurrentMapLocationName); // Function Phoenix.UIManager.HandleMapLocationChanged // (Final|Native|Public) // @ game+0x3340f30
	struct AActor* GetVendorWorldPreviewActor(); // Function Phoenix.UIManager.GetVendorWorldPreviewActor // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4ee0
	enum class EUIPlatformInputDevice GetUIPlatformInputDevice(); // Function Phoenix.UIManager.GetUIPlatformInputDevice // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c4eb0
	struct UUIManager* GetUIManagerPure(); // Function Phoenix.UIManager.GetUIManagerPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c2290
	bool GetToMapFromBackButton(); // Function Phoenix.UIManager.GetToMapFromBackButton // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4e90
	bool GetTempPauseLock(); // Function Phoenix.UIManager.GetTempPauseLock // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4e70
	enum class HouseIds GetSortingHatRecommendedHouse(); // Function Phoenix.UIManager.GetSortingHatRecommendedHouse // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c4e40
	bool GetShouldShowButtonGraphics(); // Function Phoenix.UIManager.GetShouldShowButtonGraphics // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0xe899c0
	struct UScreenFadeWidget* GetScreenFadeWidget(); // Function Phoenix.UIManager.GetScreenFadeWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c4e20
	float GetPSOProgress(); // Function Phoenix.UIManager.GetPSOProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4780
	int32_t GetPlayerYear(enum class EDisciplineType Discipline); // Function Phoenix.UIManager.GetPlayerYear // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4d90
	struct APawn* GetPlayerPawn(); // Function Phoenix.UIManager.GetPlayerPawn // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4d50
	struct FString GetPlayerName(); // Function Phoenix.UIManager.GetPlayerName // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4cd0
	struct FString GetPlayerInventorySortPreference(); // Function Phoenix.UIManager.GetPlayerInventorySortPreference // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c4c50
	enum class HouseIds GetPlayerHouseEnum(); // Function Phoenix.UIManager.GetPlayerHouseEnum // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c4c20
	struct FString GetPlayerHouse(); // Function Phoenix.UIManager.GetPlayerHouse // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4ba0
	struct FString GetPlayerGender(); // Function Phoenix.UIManager.GetPlayerGender // (Final|Native|Public|BlueprintCallable) // @ game+0x34c4b20
	void GetPlayerFirstAndLastName(struct FString& PlayerFirstName, struct FString& PlayerLastName); // Function Phoenix.UIManager.GetPlayerFirstAndLastName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c4a00
	bool GetPlayerChosenWandInfo(struct FString& WandStyle, struct FString& WandWood, struct FString& WandCore, struct FString& WandLength, struct FString& WandFlex); // Function Phoenix.UIManager.GetPlayerChosenWandInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c47b0
	struct TArray<struct FInputGroupHeader> GetPCInputGroupHeaders(bool bAction, bool bAxis); // Function Phoenix.UIManager.GetPCInputGroupHeaders // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c4610
	struct UMapOverland* GetOverlandMap(); // Function Phoenix.UIManager.GetOverlandMap // (Final|Native|Public|BlueprintCallable) // @ game+0x33386f0
	void GetNewIndicatorCategory(struct FName CategoryName, struct TArray<struct FName>& NewIndicatorItems); // Function Phoenix.UIManager.GetNewIndicatorCategory // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c4520
	int32_t GetNewFactCount(); // Function Phoenix.UIManager.GetNewFactCount // (Final|Native|Public|BlueprintCallable) // @ game+0x34c44f0
	bool GetMutatedMKBAxisMappingsByName(struct FName& AxisName, struct TArray<struct FKey>& ForbiddenKeys, struct FInputAxisKeyMapping& OutPosMain, struct FInputAxisKeyMapping& OutFakePosMain, struct FInputAxisKeyMapping& OutPosAlt, struct FInputAxisKeyMapping& OutNegMain, struct FInputAxisKeyMapping& OutFakeNegMain, struct FInputAxisKeyMapping& OutNegAlt, bool bTranspose); // Function Phoenix.UIManager.GetMutatedMKBAxisMappingsByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34c3d40
	bool GetMKBAxisPairsByName(struct FName& AxisName, struct FInputAxisKeyMapping& OutPositivePrimary, struct FInputAxisKeyMapping& OutPositiveAlternative, struct FInputAxisKeyMapping& OutNegativePrimary, struct FInputAxisKeyMapping& OutNegativeAlternative, bool bTranspose); // Function Phoenix.UIManager.GetMKBAxisPairsByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c35c0
	bool GetMKBActionPairByName(struct FName ActionName, struct FInputActionKeyMapping& OutPrimary, struct FInputActionKeyMapping& OutAlternative, bool bTranspose); // Function Phoenix.UIManager.GetMKBActionPairByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c3310
	bool GetMastermindTutorialInfo(struct FMastermindTutorialInfo& outMastermindTutorialInfo); // Function Phoenix.UIManager.GetMastermindTutorialInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c3c60
	bool GetMastermindScreenInfo(struct FMastermindScreenInfo& outMastermindScreenInfo); // Function Phoenix.UIManager.GetMastermindScreenInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c3b70
	bool GetMastermindPopupInfo(struct FMastermindPopupInfo& outMastermindPopupInfo); // Function Phoenix.UIManager.GetMastermindPopupInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c3ab0
	struct UMapSubSystem* GetMapSubSystem(); // Function Phoenix.UIManager.GetMapSubSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x34c3a90
	enum class EInputDeviceUsed GetLastUsedInputDevice(); // Function Phoenix.UIManager.GetLastUsedInputDevice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34c32f0
	void GetKeyIdsFromActionId(struct FString ActionId, struct TArray<struct FString>& OutKeyIds, bool Transpose, bool ForceGamepadKeys, bool ForceMouseKeyboardKeys); // Function Phoenix.UIManager.GetKeyIdsFromActionId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c30b0
	bool GetIsVirtualCursorShowing(); // Function Phoenix.UIManager.GetIsVirtualCursorShowing // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c3090
	bool GetIsUIShown(); // Function Phoenix.UIManager.GetIsUIShown // (Final|Native|Public|BlueprintCallable) // @ game+0x34c3060
	bool GetIsRichPaperShowing(); // Function Phoenix.UIManager.GetIsRichPaperShowing // (Final|Native|Public|BlueprintCallable) // @ game+0x34c3040
	bool GetIsInitialized(); // Function Phoenix.UIManager.GetIsInitialized // (Final|Native|Public|BlueprintCallable) // @ game+0x34c3010
	bool GetInMenuTransition(); // Function Phoenix.UIManager.GetInMenuTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2fe0
	struct UInGameMenuScreen* GetInGameMenuWidget(); // Function Phoenix.UIManager.GetInGameMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2fc0
	struct UMapHogwarts* GetHogwartsMap(); // Function Phoenix.UIManager.GetHogwartsMap // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2fa0
	struct UMapHogsmeade* GetHogsmeadeMap(); // Function Phoenix.UIManager.GetHogsmeadeMap // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2f80
	struct TArray<enum class EPauseMenuPage> GetHiddenMenuTabs(); // Function Phoenix.UIManager.GetHiddenMenuTabs // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2f00
	struct TArray<struct FName> GetGroupMappingNames(struct FName GroupName, bool bAction, bool bAxis, bool bSort); // Function Phoenix.UIManager.GetGroupMappingNames // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c2d30
	struct UFieldGuideMenu* GetFieldGuideWidget(); // Function Phoenix.UIManager.GetFieldGuideWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x3468890
	enum class EUIFactsheetMode GetFactsheetMode(); // Function Phoenix.UIManager.GetFactsheetMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c2cd0
	struct UMapDungeon* GetDungeonMap(); // Function Phoenix.UIManager.GetDungeonMap // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2cb0
	struct FString GetDisplayedUserTag(); // Function Phoenix.UIManager.GetDisplayedUserTag // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2c30
	struct UMenuCursorWidget* GetCursorWidget(); // Function Phoenix.UIManager.GetCursorWidget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c2bd0
	struct UWorld* GetCurrentWorld(); // Function Phoenix.UIManager.GetCurrentWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2b90
	struct UScreen* GetCompanionSelectionScreen(); // Function Phoenix.UIManager.GetCompanionSelectionScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c2b70
	struct AActor* GetCallOutComponentTarget(struct AActor* Target); // Function Phoenix.UIManager.GetCallOutComponentTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2900
	struct FString GetBuildNumber(); // Function Phoenix.UIManager.GetBuildNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2880
	void GetAxisMappingByName(struct FName AxisName, struct TArray<struct FInputAxisKeyMapping>& OutMappings, bool bTranspose, bool bMouseAndKeyboardOnly, bool bIncludeUnbound); // Function Phoenix.UIManager.GetAxisMappingByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c2680
	struct TArray<struct FMenuReaderVoice> GetAvailableVoices(); // Function Phoenix.UIManager.GetAvailableVoices // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c2560
	struct TArray<struct FRPGUIInfo> GetActiveBuffData(); // Function Phoenix.UIManager.GetActiveBuffData // (Final|Native|Public|BlueprintCallable) // @ game+0x34c24e0
	void GetActionMappingByName(struct FName ActionName, struct TArray<struct FInputActionKeyMapping>& OutMappings, bool bTranspose, bool bMouseAndKeyboardOnly, bool bIncludeUnbound); // Function Phoenix.UIManager.GetActionMappingByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c22e0
	struct UUIManager* Get(); // Function Phoenix.UIManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c2290
	void GameOverScreenLoaded(struct UScreen* Screen); // Function Phoenix.UIManager.GameOverScreenLoaded // (Final|Native|Public) // @ game+0x34c2200
	void ForceRebuildKeyMapsFromQWERTY(); // Function Phoenix.UIManager.ForceRebuildKeyMapsFromQWERTY // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c21e0
	void FieldGuideMenuStart(); // Function Phoenix.UIManager.FieldGuideMenuStart // (Final|Native|Public|BlueprintCallable) // @ game+0x34c21c0
	void FadeOutToColor(float Duration, struct FLinearColor TargetColor); // Function Phoenix.UIManager.FadeOutToColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34c20f0
	void FadeOut(float Duration); // Function Phoenix.UIManager.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x34c2070
	void FadeIn(float Duration); // Function Phoenix.UIManager.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1ff0
	void ExitFieldGuideWithReason(enum class EFieldGuideExitReasons ExitReason, bool SkipFadeScreen, int32_t CharacterID, struct FString Filename, struct FString FastTravelName); // Function Phoenix.UIManager.ExitFieldGuideWithReason // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1db0
	void DropLoadScreen(); // Function Phoenix.UIManager.DropLoadScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1d90
	bool DoesRightTriggerCastStupefy(); // Function Phoenix.UIManager.DoesRightTriggerCastStupefy // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c1d60
	void DestroyVendorWorld(); // Function Phoenix.UIManager.DestroyVendorWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1d40
	void DestroyCompanionrWorld(); // Function Phoenix.UIManager.DestroyCompanionrWorld // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1d20
	void DebugTriggerCollectionObtainedNotification(struct FName CollectionID, struct FName CollectionCategory); // Function Phoenix.UIManager.DebugTriggerCollectionObtainedNotification // (Final|Exec|Native|Public) // @ game+0x34c1c50
	void DebugTriggerCollectionKnownNotification(struct FName CollectionID, struct FName CollectionCategory); // Function Phoenix.UIManager.DebugTriggerCollectionKnownNotification // (Final|Exec|Native|Public) // @ game+0x34c1b80
	void DebugTriggerChallengeUpdatedNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t CompletedAmt, int32_t TotalRequired); // Function Phoenix.UIManager.DebugTriggerChallengeUpdatedNotification // (Final|Exec|Native|Public) // @ game+0x34c1a20
	void DebugTriggerChallengeUnlockedNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t TotalRequired); // Function Phoenix.UIManager.DebugTriggerChallengeUnlockedNotification // (Final|Exec|Native|Public) // @ game+0x34c1910
	void DebugTriggerChallengeCompleteNotification(struct FName ChallengeID, struct FName ChallengeCategory, int32_t CompletedLevel, int32_t TotalLevels, int32_t TotalInstancesForLevel); // Function Phoenix.UIManager.DebugTriggerChallengeCompleteNotification // (Final|Exec|Native|Public) // @ game+0x34c1770
	void CycleControlModeInputCheck1(); // Function Phoenix.UIManager.CycleControlModeInputCheck1 // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1750
	void CreateHUDLog(bool pShow, struct FString Group, struct FString pContext); // Function Phoenix.UIManager.CreateHUDLog // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1590
	void CreateGameOverScreen(enum class EUIGameOverReason Reason); // Function Phoenix.UIManager.CreateGameOverScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x34c1510
	bool CreateAsyncWidget(struct TSoftClassPtr<UObject> ObjectPtr, struct FDelegate& AsyncLoadCallback, bool AddToViewport); // Function Phoenix.UIManager.CreateAsyncWidget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34c1190
	void CorrectInputAxisKeyIfNeeded(struct FInputAxisKeyMapping& InInputAxisMapping, struct FInputAxisKeyMapping& OutInputAxisMapping); // Function Phoenix.UIManager.CorrectInputAxisKeyIfNeeded // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34c0f60
	void ClearPauseMenuPageBP(); // Function Phoenix.UIManager.ClearPauseMenuPageBP // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0f40
	void ClearPath(); // Function Phoenix.UIManager.ClearPath // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0f20
	void ClearNewIndicatorItem(struct FName CategoryName, struct FName ItemName); // Function Phoenix.UIManager.ClearNewIndicatorItem // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0e50
	void ClearNewIndicatorCategory(struct FName CategoryName); // Function Phoenix.UIManager.ClearNewIndicatorCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0dc0
	void ClearHintMessage(); // Function Phoenix.UIManager.ClearHintMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0da0
	void ClearCurrentLocationName(); // Function Phoenix.UIManager.ClearCurrentLocationName // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0d70
	void ChangeMenuPage(); // Function Phoenix.UIManager.ChangeMenuPage // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0d50
	void ChallengeResultsScreenLoaded(struct UScreen* Screen); // Function Phoenix.UIManager.ChallengeResultsScreenLoaded // (Final|Native|Public) // @ game+0x34c0cc0
	bool CanPlayIntroNormally(); // Function Phoenix.UIManager.CanPlayIntroNormally // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x19e8aa0
	bool CanBackOutOfAvatarCreator(); // Function Phoenix.UIManager.CanBackOutOfAvatarCreator // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34c0ca0
	void BuildNavPointsUsingActors(struct TArray<struct AActor*>& Actors, float Width, float Height); // Function Phoenix.UIManager.BuildNavPointsUsingActors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c0b70
	void AppendNavPointsUsingActors(struct TArray<struct AActor*>& Actors); // Function Phoenix.UIManager.AppendNavPointsUsingActors // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c0ac0
	void AnimateTrackingInfo(); // Function Phoenix.UIManager.AnimateTrackingInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x34c0aa0
	void AlertComponentWidget(struct AActor* Target, enum class EWidgetType WidgetType); // Function Phoenix.UIManager.AlertComponentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34c09d0
	void AdvanceTime(struct FTimespan DeltaTimeAdvance); // Function Phoenix.UIManager.AdvanceTime // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34c0950
	void AddTextTickerNotification(struct FString NotificationText); // Function Phoenix.UIManager.AddTextTickerNotification // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34c0870
	void AddPathStartEnd(struct FVector Start, struct FVector End, float Width, float Height); // Function Phoenix.UIManager.AddPathStartEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34c06d0
	void AddPathPoints(struct TArray<struct FVector>& PathPoints, float Width, float Height); // Function Phoenix.UIManager.AddPathPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c05a0
	void AddPathEnd(struct FVector End, float Width, float Height); // Function Phoenix.UIManager.AddPathEnd // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34c0480
	void AddNewIndicatorItem(struct FName CategoryName, struct FName ItemName); // Function Phoenix.UIManager.AddNewIndicatorItem // (Final|Native|Public|BlueprintCallable) // @ game+0x34c03b0
	void AddNavPathPoints(struct TArray<struct FVector>& PathPoints, float Width, float Height); // Function Phoenix.UIManager.AddNavPathPoints // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34c0280
};

// Class Phoenix.ExternalNetworkSettings
// Size: 0x58 (Inherited: 0x28)
struct UExternalNetworkSettings : UObject {
	struct FString WBPNAPIKey; // 0x28(0x10)
	struct FString WBPNURI; // 0x38(0x10)
	struct FString WBPNUnlink; // 0x48(0x10)
};

// Class Phoenix.UIOnlineManager
// Size: 0x2e8 (Inherited: 0x28)
struct UUIOnlineManager : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct FMulticastInlineDelegate OnFullGameNotInstalledPopupClosed; // 0x40(0x10)
	char pad_50[0x8]; // 0x50(0x08)
	struct UPopupScreen* ControllerDisconnectPopup; // 0x58(0x08)
	char pad_60[0x20]; // 0x60(0x20)
	struct UPopupScreen* FullGameNotInstalledPopup; // 0x80(0x08)
	char pad_88[0xa8]; // 0x88(0xa8)
	struct UPopupScreen* LoginStatusChangedPopup; // 0x130(0x08)
	char pad_138[0x1b0]; // 0x138(0x1b0)

	void WBPNStartSilentLogin(); // Function Phoenix.UIOnlineManager.WBPNStartSilentLogin // (Final|Native|Public|BlueprintCallable) // @ game+0x34d01e0
	void WBPNStartLogin(bool deviceFlow, struct FString UserName, struct FString password); // Function Phoenix.UIOnlineManager.WBPNStartLogin // (Final|Native|Public|BlueprintCallable) // @ game+0x34d0090
	void WBPNRequestAccountInfo(); // Function Phoenix.UIOnlineManager.WBPNRequestAccountInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x34d0070
	void WBPNPollForWWLink(); // Function Phoenix.UIOnlineManager.WBPNPollForWWLink // (Final|Native|Public|BlueprintCallable) // @ game+0x34d0050
	void WBPNGenerateDeviceToken(bool bPollLogin); // Function Phoenix.UIOnlineManager.WBPNGenerateDeviceToken // (Final|Native|Public|BlueprintCallable) // @ game+0x34cffc0
	void WBPNExitDeviceFlow(bool bContinuePolling); // Function Phoenix.UIOnlineManager.WBPNExitDeviceFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x34cff30
	void WBPNCheckLinkStatus(); // Function Phoenix.UIOnlineManager.WBPNCheckLinkStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x34cff10
	void UpdateNetworkNotification(); // Function Phoenix.UIOnlineManager.UpdateNetworkNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfef0
	void UpdateFullGameNotInstalledMessage(); // Function Phoenix.UIOnlineManager.UpdateFullGameNotInstalledMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfed0
	void ShowPlatformLogo(); // Function Phoenix.UIOnlineManager.ShowPlatformLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfeb0
	void ShowFullGameNotInstalledMessage(); // Function Phoenix.UIOnlineManager.ShowFullGameNotInstalledMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfe90
	void SendWizardingWorldData(struct FString AttributeKey, struct FString AttributeValue, bool Update); // Function Phoenix.UIOnlineManager.SendWizardingWorldData // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfc00
	void RetryConnection(); // Function Phoenix.UIOnlineManager.RetryConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfbe0
	void RetrieveWizardingWorldData(bool bUpdateOnFailure); // Function Phoenix.UIOnlineManager.RetrieveWizardingWorldData // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfb50
	void ResetWBPNLogin(); // Function Phoenix.UIOnlineManager.ResetWBPNLogin // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfb30
	void RequestWizardWords(); // Function Phoenix.UIOnlineManager.RequestWizardWords // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfb10
	void RequestMOTD(); // Function Phoenix.UIOnlineManager.RequestMOTD // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfaf0
	void RequestEULA(); // Function Phoenix.UIOnlineManager.RequestEULA // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfad0
	void RefreshRichPresenceString(); // Function Phoenix.UIOnlineManager.RefreshRichPresenceString // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfab0
	void QueryStoreReceipts(); // Function Phoenix.UIOnlineManager.QueryStoreReceipts // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfa90
	void QueryStoreOffers(); // Function Phoenix.UIOnlineManager.QueryStoreOffers // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfa70
	void PurchaseDLC(struct FString OfferId); // Function Phoenix.UIOnlineManager.PurchaseDLC // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf980
	void OnFullGameNotInstalledMessageClosed(struct UPopupScreen* PopupScreen, int32_t CompletionActionIndex); // Function Phoenix.UIOnlineManager.OnFullGameNotInstalledMessageClosed // (Final|Native|Public) // @ game+0x34cf850
	void OnControllerDisconnectedPopupClosed(struct UPopupScreen* PopupScreen, int32_t CompletionActionIndex); // Function Phoenix.UIOnlineManager.OnControllerDisconnectedPopupClosed // (Final|Native|Public) // @ game+0x34cf780
	bool IsNetworkConnected(); // Function Phoenix.UIOnlineManager.IsNetworkConnected // (Final|Native|Public|BlueprintCallable) // @ game+0x342c390
	bool IsLoggedIn(); // Function Phoenix.UIOnlineManager.IsLoggedIn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34cf750
	bool IsHydraLoggedIn(); // Function Phoenix.UIOnlineManager.IsHydraLoggedIn // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf720
	bool IsFullGameInstalled(); // Function Phoenix.UIOnlineManager.IsFullGameInstalled // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf6f0
	bool IsDay0PatchInstalled(); // Function Phoenix.UIOnlineManager.IsDay0PatchInstalled // (Final|Native|Public|BlueprintCallable) // @ game+0xe899c0
	bool IsConnectedToOnlineServices(); // Function Phoenix.UIOnlineManager.IsConnectedToOnlineServices // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x342c900
	void HidePlatformLogo(); // Function Phoenix.UIOnlineManager.HidePlatformLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf6d0
	struct FString GetWWIDUsername(); // Function Phoenix.UIOnlineManager.GetWWIDUsername // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf590
	struct TArray<struct FString> GetWizardWords(); // Function Phoenix.UIOnlineManager.GetWizardWords // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf650
	struct FString GetWBPNUsername(); // Function Phoenix.UIOnlineManager.GetWBPNUsername // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf4d0
	struct FString GetWBPNUrl(); // Function Phoenix.UIOnlineManager.GetWBPNUrl // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf410
	struct FString GetWBPNUnlink(); // Function Phoenix.UIOnlineManager.GetWBPNUnlink // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf330
	struct FString GetWBPNShortcode(); // Function Phoenix.UIOnlineManager.GetWBPNShortcode // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf270
	struct UTexture2DDynamic* GetWBPNQRCode(int32_t texWidth, int32_t texHeight, bool bUnlink); // Function Phoenix.UIOnlineManager.GetWBPNQRCode // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf160
	enum class EAccountLinkStatus GetWBPNLinkStatus(); // Function Phoenix.UIOnlineManager.GetWBPNLinkStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x34cf140
	struct UUIOnlineManager* GetUIOnlineManagerPure(); // Function Phoenix.UIOnlineManager.GetUIOnlineManagerPure // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34ce830
	void GetStoreState(struct FString& StoreState); // Function Phoenix.UIOnlineManager.GetStoreState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34cf090
	void GetStoreOffers(struct TArray<struct FOnlineOfferStruct>& Offers); // Function Phoenix.UIOnlineManager.GetStoreOffers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34cee70
	void GetProfileName(struct FString& ProfileName); // Function Phoenix.UIOnlineManager.GetProfileName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34cedc0
	struct TArray<struct FString> GetPendingRewardNotifications(); // Function Phoenix.UIOnlineManager.GetPendingRewardNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x34cec40
	struct TArray<struct FMOTD> GetMOTD(); // Function Phoenix.UIOnlineManager.GetMOTD // (Final|Native|Public|BlueprintCallable) // @ game+0x34ceb40
	struct FString GetHydraID(); // Function Phoenix.UIOnlineManager.GetHydraID // (Final|Native|Public|BlueprintCallable) // @ game+0x34ceac0
	float GetFullGameInstallCompletionPercent(); // Function Phoenix.UIOnlineManager.GetFullGameInstallCompletionPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x34cea90
	struct FString GetExternalConfig(struct FString LinkType); // Function Phoenix.UIOnlineManager.GetExternalConfig // (Final|Native|Public|BlueprintCallable) // @ game+0x34ce950
	struct FText GetEULA(); // Function Phoenix.UIOnlineManager.GetEULA // (Final|Native|Public|BlueprintCallable) // @ game+0x34ce8b0
	struct UUIOnlineManager* Get(); // Function Phoenix.UIOnlineManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ce830
	void ForceRichPresenceString(struct FString RichPresenceString); // Function Phoenix.UIOnlineManager.ForceRichPresenceString // (Final|Native|Public|BlueprintCallable) // @ game+0x34ce790
	void DismissRewardNotification(struct FString RewardID); // Function Phoenix.UIOnlineManager.DismissRewardNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x34ce6a0
};

// Class Phoenix.WorldSupportLevel
// Size: 0x90 (Inherited: 0x28)
struct UWorldSupportLevel : UObject {
	char pad_28[0x68]; // 0x28(0x68)

	void OnUnload(); // Function Phoenix.WorldSupportLevel.OnUnload // (Final|Native|Public) // @ game+0x34cf960
	void OnShow(); // Function Phoenix.WorldSupportLevel.OnShow // (Final|Native|Public) // @ game+0x34cf940
	void OnLoad(); // Function Phoenix.WorldSupportLevel.OnLoad // (Final|Native|Public) // @ game+0x34cf920
	void OnHidden(); // Function Phoenix.WorldSupportLevel.OnHidden // (Final|Native|Public) // @ game+0x1074730
};

// Class Phoenix.WorldSupportWorld
// Size: 0x108 (Inherited: 0x28)
struct UWorldSupportWorld : UObject {
	struct UWorld* World; // 0x28(0x08)
	char pad_30[0xb0]; // 0x30(0xb0)
	struct TArray<struct UWorldSupportLevel*> Levels; // 0xe0(0x10)
	char pad_F0[0x8]; // 0xf0(0x08)
	struct ULocalPlayer* LocalPlayer; // 0xf8(0x08)
	char pad_100[0x8]; // 0x100(0x08)
};

// Class Phoenix.UworldSupport
// Size: 0x68 (Inherited: 0x28)
struct UUworldSupport : UObject {
	char pad_28[0x40]; // 0x28(0x40)

	struct UUworldSupport* Get(); // Function Phoenix.UworldSupport.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34ce880
};

// Class Phoenix.VanishmentStyleBase
// Size: 0x250 (Inherited: 0x248)
struct AVanishmentStyleBase : AActor {
	struct ATransfigurationPreviewActor* PreviewActor; // 0x248(0x08)

	void StartVanishment(); // Function Phoenix.VanishmentStyleBase.StartVanishment // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x31e1780
};

// Class Phoenix.VanishmentQueue
// Size: 0x48 (Inherited: 0x28)
struct UVanishmentQueue : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Phoenix.VanishmentSpellTool
// Size: 0xae0 (Inherited: 0xaa8)
struct AVanishmentSpellTool : ATransfigurationSpellToolBase {
	char pad_AA8[0x28]; // 0xaa8(0x28)
	struct TArray<struct AVanishmentStyleBase*> VanishmentStyles; // 0xad0(0x10)
};

// Class Phoenix.VaultNavLinkStripActor
// Size: 0x2f0 (Inherited: 0x2f0)
struct AVaultNavLinkStripActor : ALinkStripActor {
};

// Class Phoenix.Vector2DTweenDummy
// Size: 0x28 (Inherited: 0x28)
struct UVector2DTweenDummy : UObject {
};

// Class Phoenix.VegetationInteractionCameraFadeSetup
// Size: 0xb0 (Inherited: 0x30)
struct UVegetationInteractionCameraFadeSetup : UDataAsset {
	struct FVegetationInteractionCameraFade Normal; // 0x30(0x38)
	struct FVegetationInteractionCameraFade Aiming; // 0x68(0x38)
	struct URenderSettingsCustomBlendDomain* StrengthBlendDomain; // 0xa0(0x08)
	bool bAimBlend; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class Phoenix.CameraFadeVegetationDisable
// Size: 0x28 (Inherited: 0x28)
struct UCameraFadeVegetationDisable : URenderSettingsNamedCustomBlendDomain {
};

// Class Phoenix.VegetationInteractionComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UVegetationInteractionComponent : UActorComponent {
	bool bSuspend; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Phoenix.VegetationInteractionComponentBiped
// Size: 0x140 (Inherited: 0xd0)
struct UVegetationInteractionComponentBiped : UVegetationInteractionComponent {
	float Priority; // 0xd0(0x04)
	float InnerRadiusFactor; // 0xd4(0x04)
	float OuterRadiusFactor; // 0xd8(0x04)
	float ForceScalingMultiplierMin; // 0xdc(0x04)
	float ForceScalingMultiplierMax; // 0xe0(0x04)
	float MaxAngleMultiplierMin; // 0xe4(0x04)
	float MaxAngleMultiplierMax; // 0xe8(0x04)
	float MaxVelocityMS; // 0xec(0x04)
	float RotationalVelocityDegreesSec; // 0xf0(0x04)
	float FirstOrderDamping; // 0xf4(0x04)
	float SecondOrderDamping; // 0xf8(0x04)
	float SecondOrderNaturalFrequency; // 0xfc(0x04)
	bool bSecondOrder; // 0x100(0x01)
	char pad_101[0x3]; // 0x101(0x03)
	struct FVegetationInteractionVelocityTracker VelocityTracker; // 0x104(0x30)
	float SpringMass; // 0x134(0x04)
	float SpringMassVelocity; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
};

// Class Phoenix.VegetationInteractionComponentCreature
// Size: 0x140 (Inherited: 0x140)
struct UVegetationInteractionComponentCreature : UVegetationInteractionComponentBiped {
};

// Class Phoenix.VegetationInteractionComponentPlayer
// Size: 0x150 (Inherited: 0x140)
struct UVegetationInteractionComponentPlayer : UVegetationInteractionComponentBiped {
	struct UVegetationInteractionCameraFadeSetup* CameraFadeSetup; // 0x140(0x08)
	struct URenderSettingsCustomBlendDomain* CameraFadeStrengthBlendDomain; // 0x148(0x08)
};

// Class Phoenix.VegetationInteractionComponentSimple
// Size: 0xf0 (Inherited: 0xd0)
struct UVegetationInteractionComponentSimple : UVegetationInteractionComponent {
	float Priority; // 0xd0(0x04)
	struct FVector Offset; // 0xd4(0x0c)
	float InnerRadius; // 0xe0(0x04)
	float OuterRadius; // 0xe4(0x04)
	float ForceScalingMultiplier; // 0xe8(0x04)
	float MaxAngleMultiplier; // 0xec(0x04)
};

// Class Phoenix.VegetationInteractionComponentDualMode
// Size: 0x190 (Inherited: 0xd0)
struct UVegetationInteractionComponentDualMode : UVegetationInteractionComponent {
	float Priority; // 0xd0(0x04)
	struct FVegetationInteractionSettings SettingsMode0; // 0xd4(0x24)
	struct FVegetationInteractionSettings SettingsMode1; // 0xf8(0x24)
	struct FVegetationInteractionSpringMassSettings SpringMassMode0; // 0x11c(0x18)
	struct FVegetationInteractionSpringMassSettings SpringMassMode1; // 0x134(0x18)
	float Mode; // 0x14c(0x04)
	float ModeTarget; // 0x150(0x04)
	float ModeRate; // 0x154(0x04)
	struct FVegetationInteractionVelocityTracker VelocityTracker; // 0x158(0x30)
	struct FVegetationInteractionSpringMassTracker SpringMassTracker; // 0x188(0x08)

	void SetVegetationInteractionModeSmooth(float TargetZeroOrOne, float RatePerSecond); // Function Phoenix.VegetationInteractionComponentDualMode.SetVegetationInteractionModeSmooth // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfdc0
	void SetVegetationInteractionModeImmediate(float TargetZeroOrOne); // Function Phoenix.VegetationInteractionComponentDualMode.SetVegetationInteractionModeImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x34cfd40
};

// Class Phoenix.VegetationInteractionArbitror
// Size: 0x2a8 (Inherited: 0x248)
struct AVegetationInteractionArbitror : AActor {
	struct UMaterialParameterCollection* MaterialParameterCollection; // 0x248(0x08)
	float DisplacementCameraDistanceCutoff; // 0x250(0x04)
	bool bSuspend; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct TSet<struct TWeakObjectPtr<struct UVegetationInteractionComponent>> VICs; // 0x258(0x50)
};

// Class Phoenix.VelocityTrackerComponent
// Size: 0x1b0 (Inherited: 0xc8)
struct UVelocityTrackerComponent : UActorComponent {
	char pad_C8[0x10]; // 0xc8(0x10)
	float ComponentLifetime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct AActor* Instigator; // 0xe0(0x08)
	struct AActor* SendTargetActor; // 0xe8(0x08)
	struct UObjectStateInfo* ObjectStateInfo; // 0xf0(0x08)
	struct UAmbulatory_MovementComponent* MovementComponent; // 0xf8(0x08)
	char pad_100[0xb0]; // 0x100(0xb0)

	void VelocityTrackerRemoved__DelegateSignature(struct AActor* Actor); // DelegateFunction Phoenix.VelocityTrackerComponent.VelocityTrackerRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void SetMaintainVelocity(struct FVector Velocity, float Time); // Function Phoenix.VelocityTrackerComponent.SetMaintainVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34d3cf0
	void SetLastVelocity(struct FVector Vel); // Function Phoenix.VelocityTrackerComponent.SetLastVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34d3c60
	void SetInstigator(struct AActor* InInstigator); // Function Phoenix.VelocityTrackerComponent.SetInstigator // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3bd0
	void SetComponentLifetime(float Seconds); // Function Phoenix.VelocityTrackerComponent.SetComponentLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3950
	void ResetComponentLifetime(); // Function Phoenix.VelocityTrackerComponent.ResetComponentLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x34d37e0
	void RemoveWhenStopped(bool Value); // Function Phoenix.VelocityTrackerComponent.RemoveWhenStopped // (Final|Native|Public|BlueprintCallable) // @ game+0x33e4f90
	void OnFleshDestroyed(struct AActor* InActor, struct UScheduledEntity* InScheduledEntity); // Function Phoenix.VelocityTrackerComponent.OnFleshDestroyed // (Final|Native|Protected) // @ game+0x34d3560
	struct AActor* GetInstigator(); // Function Phoenix.VelocityTrackerComponent.GetInstigator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d2f70
};

// Class Phoenix.VendorManager
// Size: 0xe8 (Inherited: 0x28)
struct UVendorManager : UObject {
	struct FMulticastInlineDelegate VendorBroomPreviewClassLoaded; // 0x28(0x10)
	char pad_38[0xa8]; // 0x38(0xa8)
	struct UDataTable* VendorBroomPreviewDataTable; // 0xe0(0x08)

	void ReloadVendorStock(struct FName VendorID); // Function Phoenix.VendorManager.ReloadVendorStock // (Final|Exec|Native|Static|Public) // @ game+0x19961b0
	void RefreshVendorStockIfNeeded(struct FName Vendor); // Function Phoenix.VendorManager.RefreshVendorStockIfNeeded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3760
	void RefreshVendorStock(struct FName Vendor); // Function Phoenix.VendorManager.RefreshVendorStock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d36e0
	void LoadVendorBroomPreviewActorClass(struct FName BroomID); // Function Phoenix.VendorManager.LoadVendorBroomPreviewActorClass // (Final|Native|Public|BlueprintCallable) // @ game+0x34d34d0
	struct TArray<struct FUnavailableIconInfo> GetUnavailableVendorItems(struct FName VendorID); // Function Phoenix.VendorManager.GetUnavailableVendorItems // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3030
	struct UVendorManager* Get(); // Function Phoenix.VendorManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2360
	struct TArray<struct FVendorInfo> BP_GetVendorsSellingItem(struct FName ItemId); // Function Phoenix.VendorManager.BP_GetVendorsSellingItem // (Final|Native|Static|Private|BlueprintCallable) // @ game+0x34d20d0
};

// Class Phoenix.VendorStock
// Size: 0x48 (Inherited: 0x28)
struct UVendorStock : UObject {
	char pad_28[0x20]; // 0x28(0x20)

	void RefreshVendor(struct FName Vendor); // Function Phoenix.VendorStock.RefreshVendor // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3650
	void RefreshAllVendors(); // Function Phoenix.VendorStock.RefreshAllVendors // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3630
};

// Class Phoenix.VideoSettingsBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVideoSettingsBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	struct TArray<struct FIntPoint> SortResolutions(struct TArray<struct FIntPoint>& Resolutions); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.SortResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34d4010
	bool ShouldEnableUpscaleSharpnessSlider(enum class EUpscaleMode UpscaleMode); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.ShouldEnableUpscaleSharpnessSlider // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3f90
	bool ShouldEnableUpscaleModes(enum class EAntiAliasingMode AntiAliasingMode); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.ShouldEnableUpscaleModes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3f10
	bool ShouldEnableRenderingResolutionsDropdown(enum class EUpscaleMode UpscaleMode, enum class EAntiAliasingMode AntiAliasingMode); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.ShouldEnableRenderingResolutionsDropdown // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3e50
	bool ShouldEnableAntiAliasingDropdown(enum class EUpscaleMode UpscaleMode); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.ShouldEnableAntiAliasingDropdown // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3dd0
	void SetCalibrationScreenMode(struct UObject* WorldContextObject, bool bEnabled); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.SetCalibrationScreenMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3890
	bool IsRaytracingEnabledInEngine(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.IsRaytracingEnabledInEngine // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34d3470
	bool IsRayTracingAvailable(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.IsRayTracingAvailable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3410
	bool IsRaytracedShadowsEnabledInGame(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.IsRaytracedShadowsEnabledInGame // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34d3440
	enum class EUpscaleMode IndexToUpscaleMode(int32_t SelectedIdx); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.IndexToUpscaleMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3250
	float GetUpscaleModePercentage(enum class EUpscaleMode UpscaleMode, struct FIntPoint Resolution); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetUpscaleModePercentage // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d3190
	enum class EUpscaleBrand GetUpscaleBrandForMode(enum class EUpscaleMode InMode); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetUpscaleBrandForMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3110
	struct FIntPoint GetMinResolution(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetMinResolution // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2ff0
	struct FIntPoint GetHighestAvailableResolution(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetHighestAvailableResolution // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2f30
	bool GetHDRToneMapParameters(float& MinToneMapLuminance, float& MaxToneMapLuminance, float& MaxFullFrameTonemapLuminance); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetHDRToneMapParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34d2e00
	bool GetDefaultUpscaleSharpnessIfChanged(enum class EUpscaleMode InOldMode, enum class EUpscaleMode InNewMode, float& OutSharpness); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetDefaultUpscaleSharpnessIfChanged // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34d2cf0
	struct TArray<enum class EUpscaleMode> GetAvailableUpscaleModesForBrand(enum class EUpscaleBrand InBrand); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableUpscaleModesForBrand // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d29e0
	struct TArray<enum class EUpscaleMode> GetAvailableUpscaleModes(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableUpscaleModes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2960
	struct TArray<enum class EUpscaleBrand> GetAvailableUpscaleBrands(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableUpscaleBrands // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d28e0
	struct TArray<struct FIntPoint> GetAvailableResolutions(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableResolutions // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2860
	struct TMap<int32_t, struct FIntPoint> GetAvailableRenderingResolutions(struct FIntPoint MonitorNativeResolution); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableRenderingResolutions // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2750
	struct TArray<float> GetAvailableRatios(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableRatios // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d26d0
	struct TArray<struct FSimpleMonitorInformation> GetAvailableMonitors(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableMonitors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d25f0
	bool GetAvailableGPUs(struct TArray<struct FGraphicsAdapterDesc>& OutGPUs); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableGPUs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x34d2520
	struct TArray<int32_t> GetAvailableFramerateLimits(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableFramerateLimits // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d24a0
	struct TArray<enum class EAntiAliasingMode> GetAvailableAntiAliasingModes(); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.GetAvailableAntiAliasingModes // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2420
	enum class EUpscaleMode ConvertModeToEquivBrandMode(enum class EUpscaleMode InMode, enum class EUpscaleBrand InBrand); // Function Phoenix.VideoSettingsBlueprintFunctionLibrary.ConvertModeToEquivBrandMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d21a0
};

// Class Phoenix.VirtualContainer
// Size: 0x48 (Inherited: 0x28)
struct UVirtualContainer : UObject {
	char pad_28[0x20]; // 0x28(0x20)

	bool IsFinite(struct FString ContainerID); // Function Phoenix.VirtualContainer.IsFinite // (Final|Native|Public|BlueprintCallable) // @ game+0x34d3310
	struct TArray<struct FVCSlot> GetContents(struct FString ContainerID); // Function Phoenix.VirtualContainer.GetContents // (Final|Native|Public|BlueprintCallable) // @ game+0x34d2ab0
};

// Class Phoenix.VirtualCursorFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UVirtualCursorFunctionLibrary : UBlueprintFunctionLibrary {

	void SetCursorPostion(struct APlayerController* PC, float nx, float ny); // Function Phoenix.VirtualCursorFunctionLibrary.SetCursorPostion // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3ad0
	void SetCursorPositionDirect(struct APlayerController* PC, float nx, float ny); // Function Phoenix.VirtualCursorFunctionLibrary.SetCursorPositionDirect // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d39d0
	void SetAllowMouseClickInput(bool Allow); // Function Phoenix.VirtualCursorFunctionLibrary.SetAllowMouseClickInput // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d3810
	bool IsVirtualCursorEnabled(); // Function Phoenix.VirtualCursorFunctionLibrary.IsVirtualCursorEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d34a0
	bool IsCursorOverInteractableWidget(); // Function Phoenix.VirtualCursorFunctionLibrary.IsCursorOverInteractableWidget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x34d32e0
	bool GetIsUsingVirtualCursor(); // Function Phoenix.VirtualCursorFunctionLibrary.GetIsUsingVirtualCursor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2fc0
	bool GetIsStickTouched(); // Function Phoenix.VirtualCursorFunctionLibrary.GetIsStickTouched // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2f90
	struct FVector2D GetCursorPostion(); // Function Phoenix.VirtualCursorFunctionLibrary.GetCursorPostion // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2cb0
	struct FVector2D GetCursorPositionDirect(); // Function Phoenix.VirtualCursorFunctionLibrary.GetCursorPositionDirect // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2c70
	struct FVector2D GetAnalogTriggerValues(); // Function Phoenix.VirtualCursorFunctionLibrary.GetAnalogTriggerValues // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d23f0
	struct FVector2D GetAnalogRightValues(); // Function Phoenix.VirtualCursorFunctionLibrary.GetAnalogRightValues // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d23c0
	struct FVector2D GetAnalogLeftValues(); // Function Phoenix.VirtualCursorFunctionLibrary.GetAnalogLeftValues // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x34d2390
	void EnableVirtualCursor(struct APlayerController* PC); // Function Phoenix.VirtualCursorFunctionLibrary.EnableVirtualCursor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d22e0
	void DisableVirtualCursor(struct APlayerController* PC); // Function Phoenix.VirtualCursorFunctionLibrary.DisableVirtualCursor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d2260
};

// Class Phoenix.VisibilityMeshActor
// Size: 0x250 (Inherited: 0x248)
struct AVisibilityMeshActor : AActor {
	struct UStaticMeshComponent* VisibilityMesh; // 0x248(0x08)
};

// Class Phoenix.DebugVisualLoggerImGuiWindow
// Size: 0x40 (Inherited: 0x28)
struct UDebugVisualLoggerImGuiWindow : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.WaitForNamedDoorToLoadNode
// Size: 0x78 (Inherited: 0x30)
struct UWaitForNamedDoorToLoadNode : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate FoundDoor; // 0x30(0x10)
	struct FMulticastInlineDelegate TimedOut; // 0x40(0x10)
	struct UWorld* World; // 0x50(0x08)
	char pad_58[0x20]; // 0x58(0x20)

	struct UWaitForNamedDoorToLoadNode* WaitForNamedDoorToLoad(struct UObject* WorldContextObject, struct FString DoorName, float TimeOutSeconds); // Function Phoenix.WaitForNamedDoorToLoadNode.WaitForNamedDoorToLoad // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34da090
	void FindDoorOrQueue(); // Function Phoenix.WaitForNamedDoorToLoadNode.FindDoorOrQueue // (Final|Native|Private) // @ game+0x34d8d90
};

// Class Phoenix.WalkToLocationAutomationAIController
// Size: 0x638 (Inherited: 0x508)
struct AWalkToLocationAutomationAIController : ASocialNavigatorController {
	char pad_508[0x130]; // 0x508(0x130)
};

// Class Phoenix.WandLink_SceneRig
// Size: 0x298 (Inherited: 0x238)
struct UWandLink_SceneRig : USceneRig {
	struct FSceneRigStage_Actor Antagonist; // 0x238(0x18)
	struct FSceneRigStage_Actor TeleportLocation1; // 0x250(0x18)
	struct FSceneRigStage_Actor TeleportLocation2; // 0x268(0x18)
	struct FSceneRigStage_Bool Lethal; // 0x280(0x18)
};

// Class Phoenix.WandLink_StoryGraph
// Size: 0xd8 (Inherited: 0x90)
struct UWandLink_StoryGraph : USceneRig_StoryGraph {
	struct FSceneRigStage_Actor Antagonist; // 0x90(0x18)
	struct FSceneRigStage_Actor TeleportLocation1; // 0xa8(0x18)
	struct FSceneRigStage_Actor TeleportLocation2; // 0xc0(0x18)
};

// Class Phoenix.WandLinkUIMiniGame
// Size: 0x58 (Inherited: 0x28)
struct UWandLinkUIMiniGame : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Phoenix.WandLinkUIMiniGame_ButtonMash
// Size: 0x120 (Inherited: 0x58)
struct UWandLinkUIMiniGame_ButtonMash : UWandLinkUIMiniGame {
	struct FWandLinkUIMiniGame_ButtonMashDifficultyLevels EasyDifficulty; // 0x58(0x18)
	struct FWandLinkUIMiniGame_ButtonMashDifficultyLevels MediumDifficulty; // 0x70(0x18)
	struct FWandLinkUIMiniGame_ButtonMashDifficultyLevels HardDifficulty; // 0x88(0x18)
	struct FWandLinkUIMiniGame_ButtonMashDifficultyLevels StoryModeDifficulty; // 0xa0(0x18)
	enum class ECustomInterpType AntagonistStartingSurgeToPctInterpType; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	float AntagonistStartingSurgeToPctInterpSpeedOrExp; // 0xbc(0x04)
	float AntagonistStartingSurgeToPctInterpTime; // 0xc0(0x04)
	float ButtonMashTimeOut; // 0xc4(0x04)
	enum class EWandLinkInputType WandLinkButtonMashInput; // 0xc8(0x01)
	enum class ECustomInterpType ProtagonistAttackInterpType; // 0xc9(0x01)
	char pad_CA[0x2]; // 0xca(0x02)
	float ProtagonistAttackInterpSpeedOrExp; // 0xcc(0x04)
	float ProtagonistAttackInterpTime; // 0xd0(0x04)
	float FailDelay; // 0xd4(0x04)
	float SuccessDelay; // 0xd8(0x04)
	char pad_DC[0x44]; // 0xdc(0x44)

	void IncorrectButtonMashed(); // Function Phoenix.WandLinkUIMiniGame_ButtonMash.IncorrectButtonMashed // (Final|Native|Public) // @ game+0x34d9170
	void CorrectButtonMashed(); // Function Phoenix.WandLinkUIMiniGame_ButtonMash.CorrectButtonMashed // (Final|Native|Public) // @ game+0x34d84a0
	void CheatButtonSuccessPressed(); // Function Phoenix.WandLinkUIMiniGame_ButtonMash.CheatButtonSuccessPressed // (Final|Native|Public) // @ game+0x34d8390
	void CheatButtonFailPressed(); // Function Phoenix.WandLinkUIMiniGame_ButtonMash.CheatButtonFailPressed // (Final|Native|Public) // @ game+0x34d8370
};

// Class Phoenix.WandLinkUIMiniGame_NewButtonMash
// Size: 0xc8 (Inherited: 0x58)
struct UWandLinkUIMiniGame_NewButtonMash : UWandLinkUIMiniGame {
	float AntagonistAttackSpeed; // 0x58(0x04)
	float ButtonMashMeterInterpInSpeed; // 0x5c(0x04)
	float ButtonMashTimeOut; // 0x60(0x04)
	float ButtonMashDecreaseRate; // 0x64(0x04)
	float ButtonMashNearSuccessCheck; // 0x68(0x04)
	enum class EWandLinkInputType WandLinkButtonMashInput; // 0x6c(0x01)
	enum class EWandLinkInputType WandLinkSuccessInput; // 0x6d(0x01)
	char pad_6E[0x2]; // 0x6e(0x02)
	float ProtagonistSuccessSurge; // 0x70(0x04)
	enum class ECustomInterpType ProtagonistAttackInterpType; // 0x74(0x01)
	char pad_75[0x3]; // 0x75(0x03)
	float ProtagonistAttackInterpSpeedOrExp; // 0x78(0x04)
	float ProtagonistAttackInterpTime; // 0x7c(0x04)
	float ProtagonistFailSurge; // 0x80(0x04)
	float FailDelay; // 0x84(0x04)
	float FailAttackonistSpeedMultiplier; // 0x88(0x04)
	float SuccessDelay; // 0x8c(0x04)
	char pad_90[0x38]; // 0x90(0x38)

	void SuccessTimerExpired(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.SuccessTimerExpired // (Final|Native|Public) // @ game+0x34d8390
	void SuccessComboButtonReleased(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.SuccessComboButtonReleased // (Final|Native|Public) // @ game+0x34d9fe0
	void SuccessComboButtonPressed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.SuccessComboButtonPressed // (Final|Native|Public) // @ game+0x34d9fc0
	void SuccessButtonPressed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.SuccessButtonPressed // (Final|Native|Public) // @ game+0x34d9fa0
	void IncorrectSuccessButtonPressed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.IncorrectSuccessButtonPressed // (Final|Native|Public) // @ game+0x34d9190
	void IncorrectButtonMashed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.IncorrectButtonMashed // (Final|Native|Public) // @ game+0x1074730
	void FailTimerExpired(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.FailTimerExpired // (Final|Native|Public) // @ game+0x34d8370
	void CorrectButtonMashed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.CorrectButtonMashed // (Final|Native|Public) // @ game+0x34d84c0
	void CheatButtonSuccessPressed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.CheatButtonSuccessPressed // (Final|Native|Public) // @ game+0x34d8390
	void CheatButtonFailPressed(); // Function Phoenix.WandLinkUIMiniGame_NewButtonMash.CheatButtonFailPressed // (Final|Native|Public) // @ game+0x34d8370
};

// Class Phoenix.BlendSpaceInput_WandLink
// Size: 0x38 (Inherited: 0x28)
struct UBlendSpaceInput_WandLink : UBlendSpaceInputProvider {
	struct UActorProvider* Provider; // 0x28(0x08)
	bool bPlayer; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.WandLinkKillBystander
// Size: 0x40 (Inherited: 0x28)
struct UWandLinkKillBystander : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Phoenix.WandLinkObject
// Size: 0x568 (Inherited: 0x248)
struct AWandLinkObject : AActor {
	struct UActorProvider* ProtagonistProvider; // 0x248(0x08)
	struct UActorProvider* AntagonistProvider; // 0x250(0x08)
	struct UActorProvider* TeleportLocation1; // 0x258(0x08)
	struct UActorProvider* TeleportLocation2; // 0x260(0x08)
	float UIRenderScale; // 0x268(0x04)
	float DamageToPlayerOnFailPct; // 0x26c(0x04)
	struct UNiagaraSystem* ProtagonistMuzzleFX; // 0x270(0x08)
	struct UNiagaraSystem* ProtagonistProjectileFX; // 0x278(0x08)
	struct TArray<struct UMultiFX2_Base*> ProtagonistBeamFX2; // 0x280(0x10)
	struct UNiagaraSystem* ProtagonistNudgeFX; // 0x290(0x08)
	struct UNiagaraSystem* ProtagonistSuccessFX; // 0x298(0x08)
	struct UNiagaraSystem* AntagonistMuzzleFX; // 0x2a0(0x08)
	struct UNiagaraSystem* AntagonistProjectileFX; // 0x2a8(0x08)
	struct TArray<struct UMultiFX2_Base*> AntagonistBeamFX2; // 0x2b0(0x10)
	struct UNiagaraSystem* AntagonistNudgeFX; // 0x2c0(0x08)
	struct UNiagaraSystem* AntagonistSuccessFX; // 0x2c8(0x08)
	struct TArray<struct UMultiFX2_Base*> BystanderBeamFX2; // 0x2d0(0x10)
	float BystanderBeamTime; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct FGameplayTagContainer ZapBystanderMunitionTags; // 0x2e8(0x20)
	float ZapForce; // 0x308(0x04)
	float ZapMiscTimeMin; // 0x30c(0x04)
	float ZapMiscTimeMax; // 0x310(0x04)
	float ZapTerrainChance; // 0x314(0x04)
	struct FVector2D ZapTerrainRange; // 0x318(0x08)
	float ZapTerrainZ; // 0x320(0x04)
	char pad_324[0x4]; // 0x324(0x04)
	struct UInteractionArchitectAsset* InitialClashMunitionDataAssets; // 0x328(0x08)
	float InitialClashDistance_Close; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct FGameplayTagContainer InitialClashMunitionTags_Close; // 0x338(0x20)
	float InitialClashForce_Close_Inner; // 0x358(0x04)
	float InitialClashForce_Close_Outer; // 0x35c(0x04)
	float InitialClashDamagePct_Close; // 0x360(0x04)
	float InitialClashDistance_Med; // 0x364(0x04)
	struct FGameplayTagContainer InitialClashMunitionTags_Med; // 0x368(0x20)
	float InitialClashForce_Med_Inner; // 0x388(0x04)
	float InitialClashForce_Med_Outer; // 0x38c(0x04)
	float InitialClashDamagePct_Med; // 0x390(0x04)
	float InitialClashDistance_Far; // 0x394(0x04)
	struct FGameplayTagContainer InitialClashMunitionTags_Far; // 0x398(0x20)
	float InitialClashForce_Far; // 0x3b8(0x04)
	float InitialClashDamagePct_Far; // 0x3bc(0x04)
	struct UNiagaraSystem* ClashVFX; // 0x3c0(0x08)
	struct UAkAudioEvent* ClashStartSFXEvent; // 0x3c8(0x08)
	struct UAkAudioEvent* LinkLoopSFXEvent; // 0x3d0(0x08)
	struct UAkAudioEvent* LinkLoopEndSFXEvent; // 0x3d8(0x08)
	struct UAkAudioEvent* LightningBoltSFXEvent; // 0x3e0(0x08)
	struct UAkAudioEvent* ClashExplodeSFXEvent; // 0x3e8(0x08)
	struct UAkAudioEvent* LightningBoltMotionFXEvent; // 0x3f0(0x08)
	struct FName ProtagonistWandTipSocket; // 0x3f8(0x08)
	struct FName AntagonistWandTipSocket; // 0x400(0x08)
	float ProjectileSpeed; // 0x408(0x04)
	char pad_40C[0x4]; // 0x40c(0x04)
	struct UCameraShakeBase* ClashCameraShake; // 0x410(0x08)
	struct AMunitionType_Base* KillBystandersMunition; // 0x418(0x08)
	struct FPerPlatformInt SimpleBlowBystanders; // 0x420(0x04)
	char pad_424[0x4]; // 0x424(0x04)
	struct TArray<struct FWandLinkStage> WandLinkStages; // 0x428(0x10)
	struct TArray<struct AActor*> BlowBystanders; // 0x438(0x10)
	struct TArray<struct UInteractionArchitectAsset*> LastMunitionDataAssets; // 0x448(0x10)
	char pad_458[0x38]; // 0x458(0x38)
	struct TWeakObjectPtr<struct USceneRigPlayer> CurrentSceneRigPlayer; // 0x490(0x08)
	struct AWandLinkProjectile* ProtagonistProjectile; // 0x498(0x08)
	struct AWandLinkProjectile* AntagonistProjectile; // 0x4a0(0x08)
	struct UNiagaraComponent* ProtagonistMuzzle; // 0x4a8(0x08)
	struct UNiagaraComponent* AntagonistMuzzle; // 0x4b0(0x08)
	struct UNiagaraComponent* VFXComponent; // 0x4b8(0x08)
	struct UObject* LastCaller; // 0x4c0(0x08)
	struct TArray<struct UWandLinkKillBystander*> KillBystanderArray; // 0x4c8(0x10)
	char pad_4D8[0x90]; // 0x4d8(0x90)

	void WandLinkStarted(); // Function Phoenix.WandLinkObject.WandLinkStarted // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void WandLinkInputSuccess(); // Function Phoenix.WandLinkObject.WandLinkInputSuccess // (Final|Native|Public) // @ game+0x34da200
	void WandLinkInputFail(); // Function Phoenix.WandLinkObject.WandLinkInputFail // (Final|Native|Public) // @ game+0x34da1e0
	void WandLinkInitialized(); // Function Phoenix.WandLinkObject.WandLinkInitialized // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void WandLinkEnded(); // Function Phoenix.WandLinkObject.WandLinkEnded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	bool GetUIHidden(); // Function Phoenix.WandLinkObject.GetUIHidden // (Final|Native|Public|BlueprintCallable) // @ game+0x19e8aa0
	struct AActor* GetProtagonist(); // Function Phoenix.WandLinkObject.GetProtagonist // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8f40
	enum class EWandLinkResult GetLethal(); // Function Phoenix.WandLinkObject.GetLethal // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8ef0
	int32_t GetCurrentStage(); // Function Phoenix.WandLinkObject.GetCurrentStage // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8e30
	float GetCurrentRatio(); // Function Phoenix.WandLinkObject.GetCurrentRatio // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8e10
	struct AActor* GetAntagonist(); // Function Phoenix.WandLinkObject.GetAntagonist // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8de0
	void Event_WandLinkSuspend(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkSuspend // (Final|Native|Public) // @ game+0x34d8d00
	void Event_WandLinkSuccessFX(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkSuccessFX // (Final|Native|Public) // @ game+0x34d8c70
	void Event_WandLinkStop(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkStop // (Final|Native|Public) // @ game+0x34d8be0
	void Event_WandLinkStart(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkStart // (Final|Native|Public) // @ game+0x34d8b50
	void Event_WandLinkKillBystanders(struct UObject* Caller, float KillPct); // Function Phoenix.WandLinkObject.Event_WandLinkKillBystanders // (Final|Native|Public) // @ game+0x34d8a80
	void Event_WandLinkInitialize(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkInitialize // (Final|Native|Public) // @ game+0x34d89f0
	void Event_WandLinkGameOver(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkGameOver // (Final|Native|Public) // @ game+0x34d8960
	void Event_WandLinkForward(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkForward // (Final|Native|Public) // @ game+0x34d88d0
	void Event_WandLinkFailFX(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkFailFX // (Final|Native|Public) // @ game+0x34d8840
	void Event_WandLinkDefend(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkDefend // (Final|Native|Public) // @ game+0x34d87b0
	void Event_WandLinkBackward(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkBackward // (Final|Native|Public) // @ game+0x34d8720
	void Event_WandLinkAdvanceStage(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_WandLinkAdvanceStage // (Final|Native|Public) // @ game+0x34d8690
	void Event_TeleportLocation2(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_TeleportLocation2 // (Final|Native|Public) // @ game+0x34d8600
	void Event_TeleportLocation1(struct UObject* Caller); // Function Phoenix.WandLinkObject.Event_TeleportLocation1 // (Final|Native|Public) // @ game+0x34d8570
};

// Class Phoenix.WandLinkProjectile
// Size: 0x250 (Inherited: 0x248)
struct AWandLinkProjectile : AActor {
	struct UNiagaraComponent* VFXComponent; // 0x248(0x08)
};

// Class Phoenix.WandLinkWidget
// Size: 0x288 (Inherited: 0x268)
struct UWandLinkWidget : UUserWidget {
	bool bUsingKeyboard; // 0x268(0x01)
	char pad_269[0x1f]; // 0x269(0x1f)

	void SuccessMeterFilled(enum class EWandLinkInputType InputType, enum class EWandLinkInputType SuccessInputType, enum class EWandLinkMiniGameType MiniGameType); // Function Phoenix.WandLinkWidget.SuccessMeterFilled // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SuccessButtonPressed(enum class EWandLinkInputType InputType, enum class EWandLinkInputType SuccessInputType, enum class EWandLinkMiniGameType MiniGameType); // Function Phoenix.WandLinkWidget.SuccessButtonPressed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SuccessButtonFailed(enum class EWandLinkInputType InputType, enum class EWandLinkInputType SuccessInputType, enum class EWandLinkMiniGameType MiniGameType); // Function Phoenix.WandLinkWidget.SuccessButtonFailed // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void Start(); // Function Phoenix.WandLinkWidget.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void SetMiniGameVisibility(enum class EWandLinkMiniGameType MiniGameType, enum class ESlateVisibility InVisibility); // Function Phoenix.WandLinkWidget.SetMiniGameVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void SetButtonVisibility(enum class EWandLinkInputType InputType, enum class ESlateVisibility InVisibility); // Function Phoenix.WandLinkWidget.SetButtonVisibility // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	float GetWandLinkPercentage(); // Function Phoenix.WandLinkWidget.GetWandLinkPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d9140
	float GetSuccessRatio(); // Function Phoenix.WandLinkWidget.GetSuccessRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d9110
	void End(); // Function Phoenix.WandLinkWidget.End // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.WandTool
// Size: 0x5c0 (Inherited: 0x2f0)
struct AWandTool : AItemTool {
	struct FMulticastInlineDelegate OnSpellCast; // 0x2f0(0x10)
	struct FMulticastInlineDelegate OnSpellStop; // 0x300(0x10)
	struct UButtonWatcherRecord* SpellButtonWatcher; // 0x310(0x08)
	struct UObject* EquipExecutionClass; // 0x318(0x08)
	struct UObject* UnequipExecutionClass; // 0x320(0x08)
	struct UObject* HoldExecutionClass; // 0x328(0x08)
	struct UObject* HandOnlyAbleExecutionClass; // 0x330(0x08)
	struct UObject* SpecialAbleExecutionClass; // 0x338(0x08)
	struct UObject* TargetSightedExecutionClass; // 0x340(0x08)
	struct UObject* AlertedExecutionClass; // 0x348(0x08)
	struct UObject* HeavyAnticipationExecutionClass; // 0x350(0x08)
	struct UObject* StartLumosExecutionClass; // 0x358(0x08)
	struct UObject* ChannelingExecutionClass; // 0x360(0x08)
	struct UObject* WandCastFailExecutionClass; // 0x368(0x08)
	struct UObject* WandCastFailMoveExecutionClass; // 0x370(0x08)
	struct TArray<struct FGameplayTagContainer> ComboAnimationTags; // 0x378(0x10)
	struct UAblAbility* NextLightCastAbility; // 0x388(0x08)
	struct UAblAbility* NextHeavyCastAbility; // 0x390(0x08)
	struct UAblAbility* StartingCasualLightCastAbility; // 0x398(0x08)
	struct UAblAbility* StartingCombatLightCastAbility; // 0x3a0(0x08)
	struct FName m_chargeEvent; // 0x3a8(0x08)
	struct FName m_chargeTimeUpgrade; // 0x3b0(0x08)
	float m_chargeTime; // 0x3b8(0x04)
	struct FName m_fireEvent; // 0x3bc(0x08)
	float m_fireRate; // 0x3c4(0x04)
	struct UAkAudioEvent* m_failDueToCooldown; // 0x3c8(0x08)
	struct FDialogueConversationReference m_failDueToCooldownDialogEvent; // 0x3d0(0x10)
	struct UNiagaraSystem* m_failDueToCooldownVFX; // 0x3e0(0x08)
	bool bFinishersActive; // 0x3e8(0x01)
	char pad_3E9[0x3]; // 0x3e9(0x03)
	struct FBTCustomAction ProtegoAction; // 0x3ec(0x0c)
	float MeleeRange; // 0x3f8(0x04)
	float MeleeHalfAngle; // 0x3fc(0x04)
	struct USpellToolRecord* SpellBlock; // 0x400(0x08)
	struct USpellToolRecord* SpellBlockDH; // 0x408(0x08)
	struct USpellToolRecord* SpellPewPew; // 0x410(0x08)
	struct USpellToolRecord* SpellPewPewDH; // 0x418(0x08)
	struct USpellToolRecord* StealthAttack; // 0x420(0x08)
	int32_t AvailableSpellLoadoutIndex; // 0x428(0x04)
	char pad_42C[0x4]; // 0x42c(0x04)
	struct USpellToolRecord* ProtegoRetaliateSpell; // 0x430(0x08)
	struct TSet<struct AFlyingBook*> BooksList; // 0x438(0x50)
	struct UTriggerEffect* RightTriggerDefaultEffect; // 0x488(0x08)
	struct UTriggerEffect* LeftTriggerDefaultEffect; // 0x490(0x08)
	struct TArray<struct USpellToolRecord*> PreloadSpells; // 0x498(0x10)
	struct TArray<struct USpellToolRecord*> DeathlyHallowPreloadSpells; // 0x4a8(0x10)
	struct UTriggerEffect* pRightTriggerDefaultEffect; // 0x4b8(0x08)
	struct UTriggerEffect* pLeftTriggerDefaultEffect; // 0x4c0(0x08)
	struct UToolSetComponent* ToolSetComponent; // 0x4c8(0x08)
	char pad_4D0[0x48]; // 0x4d0(0x48)
	struct TMap<struct USpellToolRecord*, struct ASpellTool*> SpellToolMap; // 0x518(0x50)
	char pad_568[0x58]; // 0x568(0x58)

	void WandCastFailedTimerExpired(); // Function Phoenix.WandTool.WandCastFailedTimerExpired // (Final|Native|Public|BlueprintCallable) // @ game+0x34da1c0
	void TurnOnTriggerEffects(); // Function Phoenix.WandTool.TurnOnTriggerEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void TurnOffTriggerEffects(); // Function Phoenix.WandTool.TurnOffTriggerEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
	void TargetSpellSelected(bool Immediate); // Function Phoenix.WandTool.TargetSpellSelected // (Final|Native|Public|BlueprintCallable) // @ game+0x34da000
	bool StopLastSpell(struct ASpellTool* NewSpellTool, bool& OutAlreadyActivated); // Function Phoenix.WandTool.StopLastSpell // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34d9ec0
	void StartHeavyComboSplitTimer(struct FComboSplitData ComboSplitData); // Function Phoenix.WandTool.StartHeavyComboSplitTimer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StartComboSplitTimer(struct FComboSplitData ComboSplitData); // Function Phoenix.WandTool.StartComboSplitTimer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SpellPreload(); // Function Phoenix.WandTool.SpellPreload // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9ea0
	void SetWandStyle(struct FName WandStyle); // Function Phoenix.WandTool.SetWandStyle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void SetProjectileSpeedMultiplier(float Multiplier); // Function Phoenix.WandTool.SetProjectileSpeedMultiplier // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9e20
	void SetNextWandCastType(enum class EWandCastType WandCastState); // Function Phoenix.WandTool.SetNextWandCastType // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9da0
	void SetNextLightCastAbility(struct UAblAbility* InAbility); // Function Phoenix.WandTool.SetNextLightCastAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9d10
	void SetNextHeavyCastAbility(struct UAblAbility* InAbility); // Function Phoenix.WandTool.SetNextHeavyCastAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9c80
	void SetFinishersActive(bool bActive); // Function Phoenix.WandTool.SetFinishersActive // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9bf0
	void SetContextsOnBarSpell(int32_t Index, bool bFlag); // Function Phoenix.WandTool.SetContextsOnBarSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9b20
	void SetAttackingActor(struct AActor* i_attackingActor); // Function Phoenix.WandTool.SetAttackingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9a90
	void SetAimTransform(struct FVector Target); // Function Phoenix.WandTool.SetAimTransform // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34d9a00
	void ResetLightCombo(); // Function Phoenix.WandTool.ResetLightCombo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ResetHeavyCombo(); // Function Phoenix.WandTool.ResetHeavyCombo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ResetCombos(); // Function Phoenix.WandTool.ResetCombos // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ResetComboOnBranch(); // Function Phoenix.WandTool.ResetComboOnBranch // (Final|Native|Public|BlueprintCallable) // @ game+0x34d99e0
	void RemoveCollectibleBook(struct AFlyingBook* book); // Function Phoenix.WandTool.RemoveCollectibleBook // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9950
	void OnSpellLoaded(struct USpellToolRecord* SpellToolRecord); // Function Phoenix.WandTool.OnSpellLoaded // (Final|Native|Private) // @ game+0x34d97a0
	void OnSpellCasted(); // Function Phoenix.WandTool.OnSpellCasted // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9780
	void OnSpellCast__DelegateSignature(struct ASpellTool* SpellTool); // DelegateFunction Phoenix.WandTool.OnSpellCast__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x38a7480
	void OnSpell_Released(int32_t SpellSlot); // Function Phoenix.WandTool.OnSpell_Released // (Final|Native|Public|BlueprintCallable) // @ game+0x34d98c0
	void OnSpell_Pressed(int32_t SpellSlot); // Function Phoenix.WandTool.OnSpell_Pressed // (Final|Native|Public|BlueprintCallable) // @ game+0x34d9830
	void OnRightArmStateChanged(enum class ERightArmState RightArmState, enum class ERightArmState LastRightArmState); // Function Phoenix.WandTool.OnRightArmStateChanged // (Final|Native|Public) // @ game+0x34d96b0
	void OnCharacterLoadComplete(struct AActor* Actor); // Function Phoenix.WandTool.OnCharacterLoadComplete // (Final|Native|Private) // @ game+0x34d9620
	void OnActiveSpellToolChanged(struct ATool* ActivatedSpell, struct ATool* DeactivatedSpell); // Function Phoenix.WandTool.OnActiveSpellToolChanged // (Final|Native|Private) // @ game+0x34d9550
	bool LoadSpellByName(struct AActor* InActor, struct FString Spell, bool Async, bool HighPriority); // Function Phoenix.WandTool.LoadSpellByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d93a0
	bool LoadAllSlottedSpells(struct AActor* InActor); // Function Phoenix.WandTool.LoadAllSlottedSpells // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d9310
	bool LoadAllAccessibleSpells(struct AActor* InActor); // Function Phoenix.WandTool.LoadAllAccessibleSpells // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d9280
	bool IsSpellToolAvailable(struct USpellToolRecord* SpellToolRecord, bool bImmediate); // Function Phoenix.WandTool.IsSpellToolAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x34d91b0
	struct UMeshComponent* GetWandMesh(); // Function Phoenix.WandTool.GetWandMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	int32_t GetTargetSpellIndex(); // Function Phoenix.WandTool.GetTargetSpellIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x12aa170
	struct ASpellTool* GetSpellTool(struct USpellToolRecord* SpellToolRecord); // Function Phoenix.WandTool.GetSpellTool // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d9070
	struct USpellToolRecord* GetSpellRecordFromSlot(int32_t Index); // Function Phoenix.WandTool.GetSpellRecordFromSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8fd0
	struct UReticule* GetReticleWidget(); // Function Phoenix.WandTool.GetReticleWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8fa0
	struct AProtegoSpellTool* GetProtegoSpellTool(); // Function Phoenix.WandTool.GetProtegoSpellTool // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34d8f70
	float GetProjectileSpeedMultiplier(); // Function Phoenix.WandTool.GetProjectileSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d8f20
	struct ASpellTool* GetFinisherSpellTool(int32_t SpellSlot); // Function Phoenix.WandTool.GetFinisherSpellTool // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34d8e50
	struct ASpellTool* GetActiveSpellTool(); // Function Phoenix.WandTool.GetActiveSpellTool // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d8db0
	void EndSpellCast(struct ASpellTool*& InSpellTool); // Function Phoenix.WandTool.EndSpellCast // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34d84e0
	void ComputeParryAimTransform(); // Function Phoenix.WandTool.ComputeParryAimTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8480
	bool CheckRequiredPerks(struct FGameplayTagContainer& PerkContainer); // Function Phoenix.WandTool.CheckRequiredPerks // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34d83b0
	bool CastStealthTakedown(); // Function Phoenix.WandTool.CastStealthTakedown // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8340
	bool CastSpell(struct ASpellTool* InSpellTool, bool bImmediate); // Function Phoenix.WandTool.CastSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8270
	bool CastPewPewSpell(); // Function Phoenix.WandTool.CastPewPewSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8240
	bool CastActiveSpell(); // Function Phoenix.WandTool.CastActiveSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34d8210
	void CancelHeavyComboSplitTimer(); // Function Phoenix.WandTool.CancelHeavyComboSplitTimer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void CancelCurrentSpell(); // Function Phoenix.WandTool.CancelCurrentSpell // (Final|Native|Public|BlueprintCallable) // @ game+0x34d81f0
	void CancelComboSplitTimer(); // Function Phoenix.WandTool.CancelComboSplitTimer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	bool BlockStart(); // Function Phoenix.WandTool.BlockStart // (Final|Native|Public|BlueprintCallable) // @ game+0x34d81c0
	void BlockEnd(); // Function Phoenix.WandTool.BlockEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34d81a0
	void BarItemSelected(struct AActor* InActor, int32_t Index, bool bFlag); // Function Phoenix.WandTool.BarItemSelected // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d80a0
	bool AreFinishersActive(); // Function Phoenix.WandTool.AreFinishersActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34d8080
	bool AreAllSlottedSpellsLoaded(struct AActor* InActor); // Function Phoenix.WandTool.AreAllSlottedSpellsLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d7ff0
	bool AreAllAccessibleSpellsLoaded(struct AActor* InActor); // Function Phoenix.WandTool.AreAllAccessibleSpellsLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34d7f60
	void ApplyTriggerEffectDefault(bool RightTrigger, bool LeftTrigger); // Function Phoenix.WandTool.ApplyTriggerEffectDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x34d7e90
	void AddCollectibleBook(struct AFlyingBook* book); // Function Phoenix.WandTool.AddCollectibleBook // (Final|Native|Public|BlueprintCallable) // @ game+0x34d7e00
	struct ASpellTool* ActivateSpellTool(struct USpellToolRecord* SpellToolRecord, bool bImmediate); // Function Phoenix.WandTool.ActivateSpellTool // (Final|Native|Public|BlueprintCallable) // @ game+0x34d7d30
	bool ActivateInstantSpellTool(int32_t Index); // Function Phoenix.WandTool.ActivateInstantSpellTool // (Final|Native|Public|BlueprintCallable) // @ game+0x34d7c90
};

// Class Phoenix.WaterBarrel
// Size: 0x378 (Inherited: 0x378)
struct AWaterBarrel : AExplosiveBarrel {
};

// Class Phoenix.Waterfall
// Size: 0x248 (Inherited: 0x248)
struct AWaterfall : AActor {

	void StopWater(); // Function Phoenix.Waterfall.StopWater // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StartWater(); // Function Phoenix.Waterfall.StartWater // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WaterIgnoreVolume
// Size: 0x2b8 (Inherited: 0x248)
struct AWaterIgnoreVolume : AActor {
	struct UBoxComponent* IgnoreOverlap; // 0x248(0x08)
	struct TArray<struct AActor*> WaterIgnoreActors; // 0x250(0x10)
	struct TArray<struct AActor*> OverlapIgnores; // 0x260(0x10)
	struct TArray<struct AWaterIgnoreVolume*> OtherIgnoreVolumes; // 0x270(0x10)
	struct TArray<struct AWaterVolume*> OverlappingWaterVolumes; // 0x280(0x10)
	struct TArray<struct ARiverVolume*> OverlappingRiverVolumes; // 0x290(0x10)
	struct TArray<struct ADungeonWaterVolume*> OverlappingDungeonWaterVolumes; // 0x2a0(0x10)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.WaterIgnoreVolume.OnOverlapEnd // (Final|Native|Private) // @ game+0x34dd3d0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.WaterIgnoreVolume.OnOverlapBegin // (Final|Native|Private|HasOutParms) // @ game+0x34dcf90
};

// Class Phoenix.WaterMill
// Size: 0x248 (Inherited: 0x248)
struct AWaterMill : AActor {

	void DeactivateWaterMill(); // Function Phoenix.WaterMill.DeactivateWaterMill // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void ActivateWaterMill(); // Function Phoenix.WaterMill.ActivateWaterMill // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WaterMill_Gears
// Size: 0x250 (Inherited: 0x248)
struct AWaterMill_Gears : AActor {
	char pad_248[0x8]; // 0x248(0x08)

	void UpdateWaterWheelMaterialValues(); // Function Phoenix.WaterMill_Gears.UpdateWaterWheelMaterialValues // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	float GetSpeedControl(); // Function Phoenix.WaterMill_Gears.GetSpeedControl // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void GetRotationRates(struct TArray<struct FVector>& Array); // Function Phoenix.WaterMill_Gears.GetRotationRates // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
	void GetGearComponents(struct TArray<struct UStaticMeshComponent*>& Array); // Function Phoenix.WaterMill_Gears.GetGearComponents // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WaterVolume
// Size: 0x4c8 (Inherited: 0x4b0)
struct AWaterVolume : AWaterVolumeBase {
	struct USceneComponent* RootComp; // 0x4b0(0x08)
	struct UWaterTileMeshComponent* WaterTileMeshComponent; // 0x4b8(0x08)
	struct ULakeAudioComponent* LakeAudioComponent; // 0x4c0(0x08)

	void SetupWater(struct FBoxSphereBounds i_Bounds, struct UStaticMesh* i_DeepCollision, struct FVector& i_DeepLocation, struct UStaticMesh* i_ShallowCollision, struct FVector& i_ShallowLocation); // Function Phoenix.WaterVolume.SetupWater // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34ddca0
	void RecalculateDepth(); // Function Phoenix.WaterVolume.RecalculateDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x1074730
};

// Class Phoenix.WEFollowButterflies
// Size: 0x3b0 (Inherited: 0x280)
struct AWEFollowButterflies : AWorldEventActor {
	struct USplineComponent* ButterflySpline; // 0x280(0x08)
	struct USphereComponent* OverlapSphere; // 0x288(0x08)
	struct UBillboardComponent* Billboard; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)
	struct TArray<struct USlaveToSplineComponent*> SlaveToSplines; // 0x2a0(0x10)
	struct FGameplayTagContainer FBGameplayTag; // 0x2b0(0x20)
	float ButterflyMoveSpeed; // 0x2d0(0x04)
	char pad_2D4[0x3c]; // 0x2d4(0x3c)
	struct AActor* TreasureChestClass; // 0x310(0x08)
	float TreasureChestYaw; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct AWorldEventActor* FBDressingClass; // 0x320(0x08)
	struct AActor* HiddenChest; // 0x328(0x08)
	struct AWorldEventActor* EventDressing; // 0x330(0x08)
	int32_t ButterfliesHideCount; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct TArray<struct AFlockingActor*> Butterflies; // 0x340(0x10)
	struct AFlockingActor* StartButterflies; // 0x350(0x08)
	char pad_358[0x58]; // 0x358(0x58)

	void StartMovement(); // Function Phoenix.WEFollowButterflies.StartMovement // (Final|Native|Protected) // @ game+0x34de0d0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.WEFollowButterflies.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x34dcd70
	void HideButterflies(struct AFlockingActor* ButterflyFlock); // Function Phoenix.WEFollowButterflies.HideButterflies // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
	void BindToChestOpenedEvent(); // Function Phoenix.WEFollowButterflies.BindToChestOpenedEvent // (Event|Protected|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WetInterface
// Size: 0x28 (Inherited: 0x28)
struct UWetInterface : UInterface {

	bool StartWetness(struct AActor* Instigator, float Amount, struct FVector Location); // Function Phoenix.WetInterface.StartWetness // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	void OnFailedToWet(); // Function Phoenix.WetInterface.OnFailedToWet // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDry(struct AActor* Instigator); // Function Phoenix.WetInterface.OnDry // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnDecreaseWetness(float decreaseAmount); // Function Phoenix.WetInterface.OnDecreaseWetness // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnAttemptToApplyWetness(float Amount, struct FVector Location); // Function Phoenix.WetInterface.OnAttemptToApplyWetness // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
	bool IncreaseWetness(struct AActor* Instigator, float increaseAmount, struct FVector Location); // Function Phoenix.WetInterface.IncreaseWetness // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x38a7480
};

// Class Phoenix.WetnessComponent
// Size: 0x1b8 (Inherited: 0x190)
struct UWetnessComponent : UStateEffectComponent {
	float InitialValue; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UMaterialPropertyData* MaterialPropertyData; // 0x198(0x08)
	char pad_1A0[0x18]; // 0x1a0(0x18)

	void SetInWater(bool inWater); // Function Phoenix.WetnessComponent.SetInWater // (Final|Native|Public|BlueprintCallable) // @ game+0x34dd830
};

// Class Phoenix.WindTunnel
// Size: 0x300 (Inherited: 0x248)
struct AWindTunnel : AActor {
	float WindStrength_Objects; // 0x248(0x04)
	float WindStrength_Pawns; // 0x24c(0x04)
	float WindDist; // 0x250(0x04)
	float DoorOpenAngle; // 0x254(0x04)
	float DoorOpenTime; // 0x258(0x04)
	float DoorCloseTime; // 0x25c(0x04)
	float DoorOpenSpeed; // 0x260(0x04)
	float DoorCloseSpeed; // 0x264(0x04)
	float StartDelay; // 0x268(0x04)
	enum class EDrawDebugTrace TunnelTraceVisibility; // 0x26c(0x01)
	enum class EDrawDebugTrace ObjectTraceVisibility; // 0x26d(0x01)
	bool bDoorPauseTimeOverride; // 0x26e(0x01)
	char pad_26F[0x1]; // 0x26f(0x01)
	float DoorPauseTime; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UStaticMeshComponent* RightDoor; // 0x278(0x08)
	struct UStaticMeshComponent* LeftDoor; // 0x280(0x08)
	struct UArrowComponent* Arrow; // 0x288(0x08)
	float RaytraceRadius; // 0x290(0x04)
	float DoorAngle; // 0x294(0x04)
	struct TMap<struct AActor*, struct UAmbulatory_MovementComponent*> MovementMap; // 0x298(0x50)
	char pad_2E8[0x18]; // 0x2e8(0x18)

	void StopDoor(); // Function Phoenix.WindTunnel.StopDoor // (Final|Native|Private|BlueprintCallable) // @ game+0x1074730
	void OpenDoor(); // Function Phoenix.WindTunnel.OpenDoor // (Final|Native|Private|BlueprintCallable) // @ game+0x34dd710
	void CloseDoor(); // Function Phoenix.WindTunnel.CloseDoor // (Final|Native|Private|BlueprintCallable) // @ game+0x34dc5c0
	void ApplyWind(); // Function Phoenix.WindTunnel.ApplyWind // (Final|Native|Private|BlueprintCallable) // @ game+0x34dc3f0
};

// Class Phoenix.WingardiumBulletTimeSpellTool
// Size: 0xbe0 (Inherited: 0x958)
struct AWingardiumBulletTimeSpellTool : AChannelingSpellTool {
	struct UObject* WingardiumComponent; // 0x958(0x08)
	struct TArray<struct UMultiFX2_Base*> ObjectTrailFX2; // 0x960(0x10)
	struct TArray<struct UMultiFX2_Base*> GroundBeamFX2; // 0x970(0x10)
	struct TArray<struct UMultiFX2_Base*> GroundFX2; // 0x980(0x10)
	float MassLimit; // 0x990(0x04)
	float TapZVelocity; // 0x994(0x04)
	float ImpulseScale; // 0x998(0x04)
	float AngularImpulseScale; // 0x99c(0x04)
	float MaxImpulse; // 0x9a0(0x04)
	float MaxVelocity; // 0x9a4(0x04)
	float WingardiumLinearDamping; // 0x9a8(0x04)
	float WingardiumAngularDamping; // 0x9ac(0x04)
	float CharacterImpulseScale; // 0x9b0(0x04)
	float CharacterAngularImpulseScale; // 0x9b4(0x04)
	float CharacterMaxImpulse; // 0x9b8(0x04)
	float CharacterMaxVelocity; // 0x9bc(0x04)
	float CharacterLinearDamping; // 0x9c0(0x04)
	float CharacterAngularDamping; // 0x9c4(0x04)
	float WingardiumDistanceSpeed; // 0x9c8(0x04)
	float WingardiumRotationSpeed; // 0x9cc(0x04)
	float WingardiumHeightSpeed; // 0x9d0(0x04)
	float WingardiumMinDistance; // 0x9d4(0x04)
	float WingardiumMaxDistance; // 0x9d8(0x04)
	float WingardiumMinHeight; // 0x9dc(0x04)
	float WingardiumMaxHeight; // 0x9e0(0x04)
	float RiseTime; // 0x9e4(0x04)
	float CameraAdjustValue; // 0x9e8(0x04)
	char pad_9EC[0x4]; // 0x9ec(0x04)
	struct FRuntimeFloatCurve FloatHeightOverCameraPitch; // 0x9f0(0x88)
	float RiseHeight; // 0xa78(0x04)
	float RiseRate; // 0xa7c(0x04)
	float VelocityToTorqueScale; // 0xa80(0x04)
	bool bZeroInitialOrientation; // 0xa84(0x01)
	bool bRoundInitialOrientationTo90; // 0xa85(0x01)
	bool bRoundReleaseOrientationTo90; // 0xa86(0x01)
	bool bForcePositionRotation; // 0xa87(0x01)
	float HoldAtEndTime; // 0xa88(0x04)
	float DisableCharacterCollisionTime; // 0xa8c(0x04)
	float DownImpulseScale; // 0xa90(0x04)
	float MinDamageDealt; // 0xa94(0x04)
	float MaxDamageDealt; // 0xa98(0x04)
	float MinDamageDealtCharacter; // 0xa9c(0x04)
	float MaxDamageDealtCharacter; // 0xaa0(0x04)
	float MinDamageTaken; // 0xaa4(0x04)
	float MaxDamageTaken; // 0xaa8(0x04)
	float MinDamageTakenCharacter; // 0xaac(0x04)
	float MaxDamageTakenCharacter; // 0xab0(0x04)
	float DropMinDamageDealt; // 0xab4(0x04)
	float DropMaxDamageDealt; // 0xab8(0x04)
	float DropMinDamageDealtCharacter; // 0xabc(0x04)
	float DropMaxDamageDealtCharacter; // 0xac0(0x04)
	float DropMinDamageTaken; // 0xac4(0x04)
	float DropMaxDamageTaken; // 0xac8(0x04)
	float DropMinDamageTakenCharacter; // 0xacc(0x04)
	float DropMaxDamageTakenCharacter; // 0xad0(0x04)
	char pad_AD4[0x4]; // 0xad4(0x04)
	struct TArray<struct AActor*> IgnoreActors; // 0xad8(0x10)
	struct UPrimitiveComponent* ActivePrimComponent; // 0xae8(0x08)
	char pad_AF0[0xa0]; // 0xaf0(0xa0)
	struct TWeakObjectPtr<struct UObjectStateInfo> ObjectStateInfo; // 0xb90(0x08)
	char pad_B98[0x48]; // 0xb98(0x48)

	void OnComponentOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* Other, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Phoenix.WingardiumBulletTimeSpellTool.OnComponentOverlapEnd // (Final|Native|Protected) // @ game+0x34dcc10
	void OnActorHit(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Phoenix.WingardiumBulletTimeSpellTool.OnActorHit // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x34dca70
	void OnActorEndPlay(struct AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason); // Function Phoenix.WingardiumBulletTimeSpellTool.OnActorEndPlay // (Final|Native|Protected) // @ game+0x34dc9a0
	void BeamFadeOut(struct UParticleSystemComponent* BeamEmitter); // Function Phoenix.WingardiumBulletTimeSpellTool.BeamFadeOut // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void BeamFadeIn(struct UParticleSystemComponent* BeamEmitter); // Function Phoenix.WingardiumBulletTimeSpellTool.BeamFadeIn // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AdjustWingardiumRotation(struct FVector InDirection); // Function Phoenix.WingardiumBulletTimeSpellTool.AdjustWingardiumRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x34dc360
	void AdjustWingardiumHeight(float Adjust); // Function Phoenix.WingardiumBulletTimeSpellTool.AdjustWingardiumHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x34dc2e0
	void AdjustWingardiumDistance(float Adjust); // Function Phoenix.WingardiumBulletTimeSpellTool.AdjustWingardiumDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x34dc260
};

// Class Phoenix.Wolf_AttackChoice_BiteLeft
// Size: 0x28 (Inherited: 0x28)
struct UWolf_AttackChoice_BiteLeft : UEnemy_AttackChoice {
};

// Class Phoenix.Wolf_AttackChoice_BiteRight
// Size: 0x28 (Inherited: 0x28)
struct UWolf_AttackChoice_BiteRight : UEnemy_AttackChoice {
};

// Class Phoenix.Wolf_AttackSpeedChoice
// Size: 0x48 (Inherited: 0x28)
struct UWolf_AttackSpeedChoice : UNPC_MobilitySpeedChoice {
	float CloseSpeed; // 0x28(0x04)
	float SplitDistance; // 0x2c(0x04)
	float FarSpeed; // 0x30(0x04)
	float RetreatDistance; // 0x34(0x04)
	float RetreatSpeed; // 0x38(0x04)
	float RetreatTime; // 0x3c(0x04)
	float ChangeTime; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Phoenix.Wolf_CloseDistanceSpeedChoice
// Size: 0x40 (Inherited: 0x28)
struct UWolf_CloseDistanceSpeedChoice : UNPC_MobilitySpeedChoice {
	float CloseDistance; // 0x28(0x04)
	float MiddleDistance; // 0x2c(0x04)
	float CloseSpeed; // 0x30(0x04)
	float MiddleSpeed; // 0x34(0x04)
	float FarSpeed; // 0x38(0x04)
	float UpdateTime; // 0x3c(0x04)
};

// Class Phoenix.Wolf_DistanceSpeedChoice
// Size: 0x40 (Inherited: 0x28)
struct UWolf_DistanceSpeedChoice : UNPC_MobilitySpeedChoice {
	float DistanceFromTargetTrotThreshold; // 0x28(0x04)
	float DistanceFromPathGoalTrotThreshold; // 0x2c(0x04)
	float DistanceFromPathGoalToTargetTrotThreshold; // 0x30(0x04)
	float UpdateTimeDelta; // 0x34(0x04)
	float UpdateTimeDeltaRandomNudge; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.Wolf_FollowOwnerSpeedChoice
// Size: 0x38 (Inherited: 0x28)
struct UWolf_FollowOwnerSpeedChoice : UNPC_MobilitySpeedChoice {
	float DistanceFromOwnerTrotThreshold; // 0x28(0x04)
	float UpdateTimeDelta; // 0x2c(0x04)
	float UpdateTimeDeltaRandomNudge; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.WorldEventAnimationComponent
// Size: 0xd0 (Inherited: 0xc8)
struct UWorldEventAnimationComponent : UActorComponent {
	char pad_C8[0x8]; // 0xc8(0x08)

	void SetAnimation(struct UAnimationAsset* InAnimation); // Function Phoenix.WorldEventAnimationComponent.SetAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x34e2c70
	void RemoveComponent(); // Function Phoenix.WorldEventAnimationComponent.RemoveComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x34e2590
	struct UAnimationAsset* GetAnimation(); // Function Phoenix.WorldEventAnimationComponent.GetAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x3301070
};

// Class Phoenix.WorldEventCondition
// Size: 0x38 (Inherited: 0x30)
struct UWorldEventCondition : UDataAsset {
	bool bNotValid; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Phoenix.WorldEventCondition_Cooldown
// Size: 0x90 (Inherited: 0x38)
struct UWorldEventCondition_Cooldown : UWorldEventCondition {
	struct FString GroupName; // 0x38(0x10)
	bool bScalableCooldown; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	float DefaultScale; // 0x4c(0x04)
	struct FWorldEventTimeSpan GroupMinCooldownTime; // 0x50(0x10)
	struct FWorldEventTimeSpan GroupMaxCooldownTime; // 0x60(0x10)
	struct FWorldEventTimeSpan GroupCooldownTime; // 0x70(0x10)
	bool bRealTime; // 0x80(0x01)
	char pad_81[0xf]; // 0x81(0x0f)
};

// Class Phoenix.WorldEventCondition_DaysOfTheWeek
// Size: 0x48 (Inherited: 0x38)
struct UWorldEventCondition_DaysOfTheWeek : UWorldEventCondition {
	struct TArray<enum class EDaysOfTheWeek> DaysToCheck; // 0x38(0x10)
};

// Class Phoenix.WorldEventCondition_LocationSchedule
// Size: 0xc0 (Inherited: 0x38)
struct UWorldEventCondition_LocationSchedule : UWorldEventCondition {
	struct FDbSingleColumnInfo LocationID; // 0x38(0x88)
};

// Class Phoenix.WorldEventCondition_Lock
// Size: 0xc0 (Inherited: 0x38)
struct UWorldEventCondition_Lock : UWorldEventCondition {
	struct FDbSingleColumnInfo Lock; // 0x38(0x88)
};

// Class Phoenix.WorldEventCondition_Mission
// Size: 0x50 (Inherited: 0x38)
struct UWorldEventCondition_Mission : UWorldEventCondition {
	struct FName MissionName; // 0x38(0x08)
	enum class MissionStatus MissionStatusToCheck; // 0x40(0x01)
	char pad_41[0xf]; // 0x41(0x0f)
};

// Class Phoenix.WorldEventCondition_MonthsOfTheYear
// Size: 0x48 (Inherited: 0x38)
struct UWorldEventCondition_MonthsOfTheYear : UWorldEventCondition {
	struct TArray<enum class EMonthsOfTheYear> MonthsToCheck; // 0x38(0x10)
};

// Class Phoenix.WorldEventCondition_PhasesOfTheMoon
// Size: 0x48 (Inherited: 0x38)
struct UWorldEventCondition_PhasesOfTheMoon : UWorldEventCondition {
	struct TArray<enum class ESchedulerMoonPhase> MoonPhasesToCheck; // 0x38(0x10)
};

// Class Phoenix.WorldEventCondition_PlayerKnowledge
// Size: 0x50 (Inherited: 0x38)
struct UWorldEventCondition_PlayerKnowledge : UWorldEventCondition {
	struct FName ObjectID; // 0x38(0x08)
	struct FName FactColumnID; // 0x40(0x08)
	enum class EKnowledgeLevel MinimumKnowledgeRequired; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
};

// Class Phoenix.WorldEventCondition_PlayerScore
// Size: 0x40 (Inherited: 0x38)
struct UWorldEventCondition_PlayerScore : UWorldEventCondition {
	int32_t MinPlayerScore; // 0x38(0x04)
	int32_t MaxPlayerScore; // 0x3c(0x04)
};

// Class Phoenix.WorldEventCondition_Season
// Size: 0x48 (Inherited: 0x38)
struct UWorldEventCondition_Season : UWorldEventCondition {
	struct TArray<enum class ESeasonEnum> SeasonsToCheck; // 0x38(0x10)
};

// Class Phoenix.WorldEventCondition_TimeOfTheDay
// Size: 0x60 (Inherited: 0x38)
struct UWorldEventCondition_TimeOfTheDay : UWorldEventCondition {
	int32_t StartHour; // 0x38(0x04)
	int32_t StartMinute; // 0x3c(0x04)
	int32_t StartSeconds; // 0x40(0x04)
	int32_t EndHour; // 0x44(0x04)
	int32_t EndMinute; // 0x48(0x04)
	int32_t EndSeconds; // 0x4c(0x04)
	bool bDespawnOnConditionFail; // 0x50(0x01)
	char pad_51[0xf]; // 0x51(0x0f)
};

// Class Phoenix.WorldEventCondition_Weather
// Size: 0x48 (Inherited: 0x38)
struct UWorldEventCondition_Weather : UWorldEventCondition {
	struct TArray<struct FWeatherDefinitionName> WeatherToCheck; // 0x38(0x10)
};

// Class Phoenix.WorldEventCoreMechanics
// Size: 0x270 (Inherited: 0x248)
struct AWorldEventCoreMechanics : AActor {
	struct AWorldEventLocationActor* GeneralLocationActor; // 0x248(0x08)
	struct AActor* TeleportLocationActor; // 0x250(0x08)
	int32_t ProductionStatusMask; // 0x258(0x04)
	char pad_25C[0x14]; // 0x25c(0x14)

	void ToggleMaskValue(enum class EProductionStatus Status); // Function Phoenix.WorldEventCoreMechanics.ToggleMaskValue // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e3130
	struct TArray<struct FName> SortAlphabetically(struct TArray<struct FName> unsortedArray); // Function Phoenix.WorldEventCoreMechanics.SortAlphabetically // (Final|Native|Private|BlueprintCallable) // @ game+0x34e2fd0
	void SetTag(struct FGameplayTag Tag); // Function Phoenix.WorldEventCoreMechanics.SetTag // (Final|Native|Private|BlueprintCallable) // @ game+0x34e2e70
	bool RowMatchesProductionFilter(struct FWorldEventDataRow& Row); // Function Phoenix.WorldEventCoreMechanics.RowMatchesProductionFilter // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x34e2aa0
	void OnWorldEventLoaded(struct AWorldEventLocationActor* Location, struct FWorldEventDataRow& Row); // Function Phoenix.WorldEventCoreMechanics.OnWorldEventLoaded // (Final|Native|Private|HasOutParms) // @ game+0x34e2050
	void OnPreviewLevelLoaded(); // Function Phoenix.WorldEventCoreMechanics.OnPreviewLevelLoaded // (Final|Native|Private) // @ game+0x34e2030
	void OnPlayerReturned(); // Function Phoenix.WorldEventCoreMechanics.OnPlayerReturned // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e2010
	bool MaskMatchesFilter(enum class EProductionStatus Status); // Function Phoenix.WorldEventCoreMechanics.MaskMatchesFilter // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x34e1f60
	void LoadAndTeleport(struct FName weName); // Function Phoenix.WorldEventCoreMechanics.LoadAndTeleport // (Final|Native|Private|BlueprintCallable) // @ game+0x34e1d90
	void GetPositionAndRotation(int32_t Index, int32_t Count, struct AActor* StartLocation, int32_t rowLength, struct FVector axisAlignment, struct FVector& OutPosition, struct FRotator& OutRotation, int32_t Width); // Function Phoenix.WorldEventCoreMechanics.GetPositionAndRotation // (Final|Native|Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x34e1530
	struct TArray<struct FGameplayTag> GetLocationTags(); // Function Phoenix.WorldEventCoreMechanics.GetLocationTags // (Final|Native|Private|BlueprintCallable) // @ game+0x34e1400
};

// Class Phoenix.WorldEventLocationActor
// Size: 0x340 (Inherited: 0x248)
struct AWorldEventLocationActor : AActor {
	struct FMulticastInlineDelegate OnLevelLoaded; // 0x248(0x10)
	struct TArray<struct UWorldEventCondition*> LoadedConditions; // 0x258(0x10)
	char pad_268[0x10]; // 0x268(0x10)
	struct FGameplayTagContainer locationDescriptors; // 0x278(0x20)
	int32_t PercentChanceOfBeingSelected; // 0x298(0x04)
	float StreamInDistance; // 0x29c(0x04)
	float StreamOutDistance; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct TSoftObjectPtr<UWorldEventCondition>> Conditions; // 0x2a8(0x10)
	bool bOverrideDefaultCooldown; // 0x2b8(0x01)
	bool bInfiniteCooldown; // 0x2b9(0x01)
	char pad_2BA[0x2]; // 0x2ba(0x02)
	struct FWorldEventTimeSpan CooldownOverride; // 0x2bc(0x10)
	bool bSpawnEventWithLevel; // 0x2cc(0x01)
	bool bMissionCritical; // 0x2cd(0x01)
	char pad_2CE[0x2]; // 0x2ce(0x02)
	struct FString GuidString; // 0x2d0(0x10)
	bool bDrawStreamingVolume; // 0x2e0(0x01)
	bool bUseForcedWorldEventName; // 0x2e1(0x01)
	char pad_2E2[0x2]; // 0x2e2(0x02)
	struct FName ForcedWorldEventName; // 0x2e4(0x08)
	bool bUseForcedWorldEventSubset; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	struct FName ForcedWorldEventSubset; // 0x2f0(0x08)
	char pad_2F8[0x20]; // 0x2f8(0x20)
	struct TArray<struct TWeakObjectPtr<struct UWorldEventSocketComponent>> WorldEventSockets; // 0x318(0x10)
	char pad_328[0x18]; // 0x328(0x18)

	bool UseForcedWorldEventSubset(); // Function Phoenix.WorldEventLocationActor.UseForcedWorldEventSubset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e31b0
	bool UseForcedWorldEventName(); // Function Phoenix.WorldEventLocationActor.UseForcedWorldEventName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x33e1de0
	void StreamingHandle(); // Function Phoenix.WorldEventLocationActor.StreamingHandle // (Final|Native|Public) // @ game+0x34e3110
	void SetLocatorName(struct FName& Name); // Function Phoenix.WorldEventLocationActor.SetLocatorName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34e2d00
	struct UWorldEventSocketComponent* RequestSocket(struct FGameplayTagContainer& SocketDescriptors); // Function Phoenix.WorldEventLocationActor.RequestSocket // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x34e29d0
	void ReleaseAllSockets(); // Function Phoenix.WorldEventLocationActor.ReleaseAllSockets // (Final|Native|Public|BlueprintCallable) // @ game+0x34e2400
	void OnEventNaturalEnd(); // Function Phoenix.WorldEventLocationActor.OnEventNaturalEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x34e1ff0
	void MarkEventAsCompleted(); // Function Phoenix.WorldEventLocationActor.MarkEventAsCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x34e1e20
	int32_t GetPercentChanceOfBeingSelected(); // Function Phoenix.WorldEventLocationActor.GetPercentChanceOfBeingSelected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e1510
	int32_t GetNumberOfSockets(); // Function Phoenix.WorldEventLocationActor.GetNumberOfSockets // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e14f0
	struct FName GetLocatorName(); // Function Phoenix.WorldEventLocationActor.GetLocatorName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e1480
	struct FGameplayTagContainer GetLocationDescriptors(); // Function Phoenix.WorldEventLocationActor.GetLocationDescriptors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e13d0
	struct FName GetForcedWorldEventSubset(); // Function Phoenix.WorldEventLocationActor.GetForcedWorldEventSubset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e1380
	struct FName GetForcedWorldEventName(); // Function Phoenix.WorldEventLocationActor.GetForcedWorldEventName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e1360
	struct TArray<struct TSoftObjectPtr<UWorldEventCondition>> GetConditions(); // Function Phoenix.WorldEventLocationActor.GetConditions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e11b0
};

// Class Phoenix.WorldEventManager
// Size: 0x1b0 (Inherited: 0x28)
struct UWorldEventManager : UObject {
	char pad_28[0x150]; // 0x28(0x150)
	struct UDataTable* WorldEventsDataTable; // 0x178(0x08)
	char pad_180[0x30]; // 0x180(0x30)

	void StartSettingEventStreamingPausedValue(bool bValue, enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.WorldEventManager.StartSettingEventStreamingPausedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9990
	void OnWorldEventLoaded(struct AWorldEventLocationActor* locationActor, struct FWorldEventDataRow& dataRow); // Function Phoenix.WorldEventManager.OnWorldEventLoaded // (Final|Native|Private|HasOutParms) // @ game+0x34e96f0
	void OnSaveGameLoaded(); // Function Phoenix.WorldEventManager.OnSaveGameLoaded // (Final|Native|Private) // @ game+0x34e96d0
	void OnNewGame(); // Function Phoenix.WorldEventManager.OnNewGame // (Final|Native|Private) // @ game+0x34e9490
	void OnGameToBeSaved(); // Function Phoenix.WorldEventManager.OnGameToBeSaved // (Final|Native|Private) // @ game+0x34e9470
	struct FGameplayTagContainer GetWorldEventLocationTags(struct ALevelScriptActor* LevelScript); // Function Phoenix.WorldEventManager.GetWorldEventLocationTags // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9390
	struct UWorldEventManager* Get(); // Function Phoenix.WorldEventManager.Get // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x34e92b0
	void FinishSettingEventStreamingPausedValue(enum class EStandardManagedPriority Priority, struct UObject* InInstigator); // Function Phoenix.WorldEventManager.FinishSettingEventStreamingPausedValue // (Final|Native|Public|BlueprintCallable) // @ game+0x34e91e0
};

// Class Phoenix.WorldEventSettings
// Size: 0x78 (Inherited: 0x28)
struct UWorldEventSettings : UObject {
	struct FSoftObjectPath WorldEventDataTable; // 0x28(0x18)
	bool bLimitMaximumNumberOfWorldEvent; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	int32_t MaximumNumberOfWorldEvent; // 0x44(0x04)
	struct FWorldEventTimeSpan LocatorDefaultCooldown; // 0x48(0x10)
	struct FWorldEventTimeSpan LocatorHogwartsCooldown; // 0x58(0x10)
	struct FWorldEventTimeSpan LocatorHogsmeadeCooldown; // 0x68(0x10)
};

// Class Phoenix.WorldEventSocketPreview
// Size: 0x40 (Inherited: 0x30)
struct UWorldEventSocketPreview : UDataAsset {
	struct TArray<struct FSocketPreview> WorldPreviewData; // 0x30(0x10)
};

// Class Phoenix.WorldEventSocketComponent
// Size: 0x260 (Inherited: 0x220)
struct UWorldEventSocketComponent : USceneComponent {
	struct USplineComponent* SplineComponent; // 0x220(0x08)
	struct UShapeComponent* ShapeComponent; // 0x228(0x08)
	char pad_230[0x8]; // 0x230(0x08)
	struct FGameplayTagContainer SocketDescriptors; // 0x238(0x20)
	char pad_258[0x8]; // 0x258(0x08)

	void SetSocketOccupied(bool bInOccupied); // Function Phoenix.WorldEventSocketComponent.SetSocketOccupied // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9900
	bool IsSocketOccupied(); // Function Phoenix.WorldEventSocketComponent.IsSocketOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34e9450
	struct USplineComponent* GetSplineComponent(); // Function Phoenix.WorldEventSocketComponent.GetSplineComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34e9360
	struct FGameplayTagContainer GetSocketDescriptors(); // Function Phoenix.WorldEventSocketComponent.GetSocketDescriptors // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e9330
	struct UShapeComponent* GetShapeComponent(); // Function Phoenix.WorldEventSocketComponent.GetShapeComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x34e9300
	void Construct(struct FTransform& Transform); // Function Phoenix.WorldEventSocketComponent.Construct // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x34e8db0
};

// Class Phoenix.WorldEventSpline
// Size: 0x610 (Inherited: 0x580)
struct UWorldEventSpline : USplineComponent {
	char pad_580[0x50]; // 0x580(0x50)
	struct TArray<struct FSplinePointEvents> SplinePointEvents; // 0x5d0(0x10)
	struct TArray<struct UBoxComponent*> SplineTriggerBoxes; // 0x5e0(0x10)
	struct TArray<struct UTextRenderComponent*> EventTexts; // 0x5f0(0x10)
	struct FVector TextOffset; // 0x600(0x0c)
	char pad_60C[0x4]; // 0x60c(0x04)

	void UnbindAllFromEvent(struct FString TriggerEventName); // Function Phoenix.WorldEventSpline.UnbindAllFromEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9c10
	void UnbindAll(); // Function Phoenix.WorldEventSpline.UnbindAll // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9bf0
	void Unbind(struct FString TriggerEventName, struct FDelegate Event); // Function Phoenix.WorldEventSpline.Unbind // (Final|Native|Public|BlueprintCallable) // @ game+0x34e9aa0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Phoenix.WorldEventSpline.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x34e94b0
	void FindEventsAtSplinePoint(int32_t SplinePointIndex, struct TArray<struct FSplinePointEvents>& InSplinePointEvents, struct TArray<struct FString>& OutFoundEventNames); // Function Phoenix.WorldEventSpline.FindEventsAtSplinePoint // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x34e9000
	void EnableTriggerEvents(bool Enable); // Function Phoenix.WorldEventSpline.EnableTriggerEvents // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e8f70
	void Construct(struct FTransform& Transform); // Function Phoenix.WorldEventSpline.Construct // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x34e8e90
	void Bind(struct FString TriggerEventName, struct FDelegate Event); // Function Phoenix.WorldEventSpline.Bind // (Final|Native|Public|BlueprintCallable) // @ game+0x34e8c60
	struct UTextRenderComponent* AddTextAtSplinePoint(int32_t SplinePointIndex, struct TArray<struct FSplinePointEvents>& InSplinePointEvents, struct FVector Offset, struct USplineComponent* InSplineComponent); // Function Phoenix.WorldEventSpline.AddTextAtSplinePoint // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x34e8a80
	struct UBoxComponent* AddBoxColliderAtSplinePoint(int32_t SplinePointIndex, struct USplineComponent* InSplineComponent); // Function Phoenix.WorldEventSpline.AddBoxColliderAtSplinePoint // (Final|Native|Protected|BlueprintCallable) // @ game+0x34e89b0
};

// Class Phoenix.WorldFXRuleNightDay
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleNightDay : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleIsDay
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleIsDay : UWorldFXRuleNightDay {
};

// Class Phoenix.WorldFXRuleIsNight
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleIsNight : UWorldFXRuleNightDay {
};

// Class Phoenix.WorldFXRuleNightDayThreshold
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleNightDayThreshold : UWorldFXRuleNightDay {
	float minThreshold; // 0x28(0x04)
	float maxThreshold; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleDayThreshold
// Size: 0x30 (Inherited: 0x30)
struct UWorldFXRuleDayThreshold : UWorldFXRuleNightDayThreshold {
};

// Class Phoenix.WorldFXRuleNightThreshold
// Size: 0x30 (Inherited: 0x30)
struct UWorldFXRuleNightThreshold : UWorldFXRuleNightDayThreshold {
};

// Class Phoenix.WorldFXRuleMoonPhase
// Size: 0x38 (Inherited: 0x28)
struct UWorldFXRuleMoonPhase : UWorldFXRuleNightDay {
	int32_t MoonPhases; // 0x28(0x04)
	bool bOnlyAtNight; // 0x2c(0x01)
	char pad_2D[0x3]; // 0x2d(0x03)
	float NightThreshold; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.WorldFXRuleTime
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleTime : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleTimeInRange
// Size: 0x40 (Inherited: 0x28)
struct UWorldFXRuleTimeInRange : UWorldFXRuleTime {
	struct FTimeInput StartTime; // 0x28(0x0c)
	struct FTimeInput EndTime; // 0x34(0x0c)
};

// Class Phoenix.WorldFXRuleNormalizedTimeInRange
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleNormalizedTimeInRange : UWorldFXRuleTimeInRange {
};

// Class Phoenix.WorldFXRuleGameTimeInRange
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleGameTimeInRange : UWorldFXRuleTimeInRange {
};

// Class Phoenix.WorldFXRulePrecipitation
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRulePrecipitation : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleAllowDuringPrecipitation
// Size: 0x38 (Inherited: 0x28)
struct UWorldFXRuleAllowDuringPrecipitation : UWorldFXRulePrecipitation {
	int32_t AllowDuringPrecipitation; // 0x28(0x04)
	int32_t AllowDuringTypes; // 0x2c(0x04)
	float MaxCoverageThreshold; // 0x30(0x04)
	float MaxIntensityThreshold; // 0x34(0x04)
};

// Class Phoenix.WorldFXRuleOnlyDuringPrecipitation
// Size: 0x40 (Inherited: 0x28)
struct UWorldFXRuleOnlyDuringPrecipitation : UWorldFXRulePrecipitation {
	int32_t Precipitation; // 0x28(0x04)
	int32_t Types; // 0x2c(0x04)
	float MinCoverageThreshold; // 0x30(0x04)
	float MaxCoverageThreshold; // 0x34(0x04)
	float MinIntensityThreshold; // 0x38(0x04)
	float MaxIntensityThreshold; // 0x3c(0x04)
};

// Class Phoenix.WorldFXRuleNoPrecipitation
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleNoPrecipitation : UWorldFXRulePrecipitation {
	float MaxCoverageThreshold; // 0x28(0x04)
	float MaxIntensityThreshold; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleOvercast
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleOvercast : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleIsOvercast
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleIsOvercast : UWorldFXRuleOvercast {
	float Threshold; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleNotOvercast
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleNotOvercast : UWorldFXRuleOvercast {
	float Threshold; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleRangedOvercast
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleRangedOvercast : UWorldFXRuleOvercast {
	float minThreshold; // 0x28(0x04)
	float maxThreshold; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeed
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeed : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedLessThan
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedLessThan : UWorldFXRuleWeatherWindSpeed {
	enum class EBeaufortWindScale Threshold; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedGreaterThan
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedGreaterThan : UWorldFXRuleWeatherWindSpeed {
	enum class EBeaufortWindScale Threshold; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedRange
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedRange : UWorldFXRuleWeatherWindSpeed {
	enum class EBeaufortWindScale minThreshold; // 0x28(0x01)
	enum class EBeaufortWindScale maxThreshold; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedLessThanMS
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedLessThanMS : UWorldFXRuleWeatherWindSpeed {
	float Threshold; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedGreaterThanMS
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedGreaterThanMS : UWorldFXRuleWeatherWindSpeed {
	float Threshold; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleWeatherWindSpeedRangeMS
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleWeatherWindSpeedRangeMS : UWorldFXRuleWeatherWindSpeed {
	float minThreshold; // 0x28(0x04)
	float maxThreshold; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleCameraPlayer
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleCameraPlayer : UWorldFXRule {
};

// Class Phoenix.WorldFXRulePlayerWithinDistance
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRulePlayerWithinDistance : UWorldFXRuleCameraPlayer {
	float Distance; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRulePlayerWithinBounds
// Size: 0x38 (Inherited: 0x28)
struct UWorldFXRulePlayerWithinBounds : UWorldFXRuleCameraPlayer {
	struct FVector Bounds; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class Phoenix.WorldFXRuleOutsideOfCameraDistance
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRuleOutsideOfCameraDistance : UWorldFXRuleCameraPlayer {
	float Distance; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
};

// Class Phoenix.WorldFXRuleCameraPlayerAttached
// Size: 0x60 (Inherited: 0x28)
struct UWorldFXRuleCameraPlayerAttached : UWorldFXRuleCameraPlayer {
	struct FName UniqueAttachTag; // 0x28(0x08)
	struct FName AttachName; // 0x30(0x08)
	struct FVector Position; // 0x38(0x0c)
	struct FRotator Rotator; // 0x44(0x0c)
	struct FVector Scale; // 0x50(0x0c)
	bool bUseLocalOffset; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class Phoenix.WorldFXRuleSpawnOnPlayerWithinDistance
// Size: 0x68 (Inherited: 0x60)
struct UWorldFXRuleSpawnOnPlayerWithinDistance : UWorldFXRuleCameraPlayerAttached {
	float Distance; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class Phoenix.WorldFXRuleSpawnOnCameraWithinDistance
// Size: 0x68 (Inherited: 0x60)
struct UWorldFXRuleSpawnOnCameraWithinDistance : UWorldFXRuleCameraPlayerAttached {
	float Distance; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
};

// Class Phoenix.WorldFXRuleSpawnOnPlayerWithinBounds
// Size: 0x70 (Inherited: 0x60)
struct UWorldFXRuleSpawnOnPlayerWithinBounds : UWorldFXRuleCameraPlayerAttached {
	struct FVector Bounds; // 0x60(0x0c)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.WorldFXRuleSpawnOnCameraWithinBounds
// Size: 0x70 (Inherited: 0x60)
struct UWorldFXRuleSpawnOnCameraWithinBounds : UWorldFXRuleCameraPlayerAttached {
	struct FVector Bounds; // 0x60(0x0c)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Phoenix.WorldFXRuleBlendDomainBase
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleBlendDomainBase : UWorldFXRule {
};

// Class Phoenix.WorldFXRuleBlendDomainPreComputed
// Size: 0x38 (Inherited: 0x28)
struct UWorldFXRuleBlendDomainPreComputed : UWorldFXRuleBlendDomainBase {
	struct FRenderSettingsPreComputedBlendDomainName BlendDomain; // 0x28(0x10)
};

// Class Phoenix.WorldFXRuleBlendDomainRange
// Size: 0x40 (Inherited: 0x38)
struct UWorldFXRuleBlendDomainRange : UWorldFXRuleBlendDomainPreComputed {
	float minThreshold; // 0x38(0x04)
	float maxThreshold; // 0x3c(0x04)
};

// Class Phoenix.WorldFXRuleBlendDomainEye
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleBlendDomainEye : UWorldFXRuleBlendDomainRange {
};

// Class Phoenix.WorldFXRuleBlendDomainPlayer
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleBlendDomainPlayer : UWorldFXRuleBlendDomainRange {
};

// Class Phoenix.WorldFXRuleBlendDomainThreshold
// Size: 0x40 (Inherited: 0x38)
struct UWorldFXRuleBlendDomainThreshold : UWorldFXRuleBlendDomainPreComputed {
	float Threshold; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Phoenix.WorldFXRuleBlendDomainEyeThreshold
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleBlendDomainEyeThreshold : UWorldFXRuleBlendDomainThreshold {
};

// Class Phoenix.WorldFXRuleBlendDomainPlayerThreshold
// Size: 0x40 (Inherited: 0x40)
struct UWorldFXRuleBlendDomainPlayerThreshold : UWorldFXRuleBlendDomainThreshold {
};

// Class Phoenix.WorldFXRuleBlendDomainInCinematicCamera
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleBlendDomainInCinematicCamera : UWorldFXRuleBlendDomainBase {
};

// Class Phoenix.WorldFXRuleBlendDomainNotInCinematicCamera
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRuleBlendDomainNotInCinematicCamera : UWorldFXRuleBlendDomainBase {
};

// Class Phoenix.WorldFXRulePlayerGameLogic
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRulePlayerGameLogic : UWorldFXRule {
};

// Class Phoenix.WorldFXRulePlayerVariableBool
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRulePlayerVariableBool : UWorldFXRulePlayerGameLogic {
	struct FName_GameLogicVarBool PlayerVariable; // 0x28(0x08)
};

// Class Phoenix.WorldFXRulePlayerVariableFloat
// Size: 0x38 (Inherited: 0x28)
struct UWorldFXRulePlayerVariableFloat : UWorldFXRulePlayerGameLogic {
	struct FName_GameLogicVarFloat PlayerVariable; // 0x28(0x08)
	float minThreshold; // 0x30(0x04)
	float maxThreshold; // 0x34(0x04)
};

// Class Phoenix.WorldFXRulePlayerResult
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRulePlayerResult : UWorldFXRulePlayerGameLogic {
	struct FName_GameLogicBoolResult PlayerResult; // 0x28(0x08)
};

// Class Phoenix.WorldFXRulePlayerExpression
// Size: 0x30 (Inherited: 0x28)
struct UWorldFXRulePlayerExpression : UWorldFXRulePlayerGameLogic {
	struct FName_GameLogicExpression PlayerExpression; // 0x28(0x08)
};

// Class Phoenix.WorldFXRulePlayerState
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRulePlayerState : UWorldFXRule {
};

// Class Phoenix.WorldFXRulePlayerIsHealthCritical
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRulePlayerIsHealthCritical : UWorldFXRulePlayerState {
};

// Class Phoenix.WorldFXRulePlayerIsHealthZero
// Size: 0x28 (Inherited: 0x28)
struct UWorldFXRulePlayerIsHealthZero : UWorldFXRulePlayerState {
};

// Class Phoenix.WorldMapBoundsVolume
// Size: 0x2b8 (Inherited: 0x280)
struct AWorldMapBoundsVolume : AVolume {
	bool IsWorldMap; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct FString MapName; // 0x288(0x10)
	char pad_298[0x20]; // 0x298(0x20)
};

// Class Phoenix.WorldObjectManager
// Size: 0xf8 (Inherited: 0xa8)
struct UWorldObjectManager : UPhxDbRegistryTypeManager {
	char pad_A8[0x50]; // 0xa8(0x50)

	struct AActor* Spawn(struct UWorld* InWorld, struct FTransform& InTransform, struct FString InRegistryID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent, enum class ESpawnActorCollisionHandlingMethod InCollisionMethod, struct ULevel* InOverrideLevel, struct UObject* InParentContainer); // Function Phoenix.WorldObjectManager.Spawn // (Native|Public|HasOutParms|HasDefaults) // @ game+0x34eac10
	void SaveData(struct FString InItemID, struct AActor* TargetActor, uint32_t inParentUID, uint32_t inOverrideUID); // Function Phoenix.WorldObjectManager.SaveData // (Native|Public) // @ game+0x32658b0
	enum class ESpawnAllowedResponse AllowSpawn(struct FString InItemID, uint32_t inParentUID, uint32_t inOverrideUID, bool inIsPersistent); // Function Phoenix.WorldObjectManager.AllowSpawn // (Native|Public) // @ game+0x3262730
};

// Class Phoenix.XPMeterBase
// Size: 0x310 (Inherited: 0x2e8)
struct UXPMeterBase : UHUDElementGroup {
	bool ActiveNotificationStackable; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct TArray<struct FExperienceChange> NotificationData; // 0x2f0(0x10)
	float MaxFillTime; // 0x300(0x04)
	float CurrentFillTime; // 0x304(0x04)
	bool IsFilling; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	bool TryStackNotification(struct FExperienceChange XPChangeData); // Function Phoenix.XPMeterBase.TryStackNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x34eb020
	void StartAddingXP(float FillDuration, float StartTime); // Function Phoenix.XPMeterBase.StartAddingXP // (Final|Native|Public|BlueprintCallable) // @ game+0x34eaf20
	void RemoveFromNotificationQueue(); // Function Phoenix.XPMeterBase.RemoveFromNotificationQueue // (Final|Native|Public|BlueprintCallable) // @ game+0x34eabf0
	void OnXPFillWrap(); // Function Phoenix.XPMeterBase.OnXPFillWrap // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnXPAdded(float FillPct); // Function Phoenix.XPMeterBase.OnXPAdded // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnStartAddingXP(); // Function Phoenix.XPMeterBase.OnStartAddingXP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void OnFinishAddingXP(); // Function Phoenix.XPMeterBase.OnFinishAddingXP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void AddXP(); // Function Phoenix.XPMeterBase.AddXP // (Final|Native|Private) // @ game+0x34ea9d0
};

// Class Phoenix.ZoneNotification
// Size: 0x300 (Inherited: 0x2e8)
struct UZoneNotification : UHUDElementGroup {
	struct UPhoenixTextBlock* ZoneNotification_Header; // 0x2e8(0x08)
	struct UPhoenixTextBlock* ZoneNotification_Label; // 0x2f0(0x08)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	void Notify(struct FName Header_Name, struct FName Label_Name, struct FName Image_Left, struct FName Image_Right, float duration_seconds, bool PlaySound); // Function Phoenix.ZoneNotification.Notify // (Final|Native|Public|BlueprintCallable) // @ game+0x34ea9f0
	void HideNotificationBP(); // Function Phoenix.ZoneNotification.HideNotificationBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
	void DisplayNotificationBP(bool PlaySound); // Function Phoenix.ZoneNotification.DisplayNotificationBP // (Event|Public|BlueprintEvent) // @ game+0x38a7480
};

