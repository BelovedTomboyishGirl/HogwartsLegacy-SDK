// Class ChromaSDKPlugin.ChromaSDKPluginBPLibrary
// Size: 0x28 (Inherited: 0x28)
struct UChromaSDKPluginBPLibrary : UBlueprintFunctionLibrary {

	void UsePreloadingName(struct FString AnimationName, bool Flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UsePreloadingName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498610
	void UsePreloading(int32_t animationId, bool Flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UsePreloading // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498550
	void UseIdleAnimations(bool Flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UseIdleAnimations // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24984d0
	void UseIdleAnimation(enum class EChromaSDKDeviceEnum device, bool Flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UseIdleAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498410
	void UnloadAnimationName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UnloadAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498380
	void UnloadAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.UnloadAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498300
	void TrimStartFramesName(struct FString AnimationName, int32_t NumberOfFrames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimStartFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498230
	void TrimStartFrames(int32_t animationId, int32_t NumberOfFrames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimStartFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2498170
	void TrimFrameName(struct FString AnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24980a0
	void TrimFrame(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497fe0
	void TrimEndFramesName(struct FString AnimationName, int32_t lastFrameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimEndFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497f10
	void TrimEndFrames(int32_t animationId, int32_t lastFrameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.TrimEndFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497e50
	struct FLinearColor ToLinearColor(int32_t colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ToLinearColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2497dc0
	int32_t ToBGR(struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ToBGR // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2497d30
	bool SupportsStreaming(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SupportsStreaming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497d00
	void SubtractNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497bd0
	void SubtractNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497ad0
	void SubtractNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24979e0
	void SubtractNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497920
	void SubtractNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24977f0
	void SubtractNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24976c0
	void SubtractNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24975c0
	void SubtractNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24974d0
	void SubtractNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497410
	void SubtractNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SubtractNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497310
	void StreamWatchEnd(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamWatchEnd // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24972f0
	void StreamWatch(struct FString streamId, int32_t Timestamp); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamWatch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497220
	bool StreamSetFocus(struct FString streamFocus); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamSetFocus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497180
	bool StreamReleaseShortcode(struct FString shortcode); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamReleaseShortcode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24970e0
	struct FString StreamGetStatusString(enum class EChromaSDKStreamStatusEnum Status); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetStatusString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2497010
	enum class EChromaSDKStreamStatusEnum StreamGetStatus(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetStatus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496fe0
	struct FString StreamGetKey(struct FString shortcode); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetKey // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496f00
	struct FString StreamGetId(struct FString shortcode); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496e20
	struct FString StreamGetFocus(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetFocus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496da0
	struct FString StreamGetAuthShortcode(struct FString Platform, struct FString Title); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamGetAuthShortcode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496c60
	void StreamBroadcastEnd(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamBroadcastEnd // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496c40
	void StreamBroadcast(struct FString streamId, struct FString streamKey); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StreamBroadcast // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496b50
	void StopAnimationType(enum class EChromaSDKDeviceEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimationType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496a20
	void StopAnimations(struct TArray<struct FString>& animationNames); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimations // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2496a90
	void StopAnimationComposite(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimationComposite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496990
	void StopAnimation(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2496900
	void StopAll(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.StopAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24968e0
	void SetStaticColorAll(struct FLinearColor& Color); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetStaticColorAll // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2496860
	void SetStaticColor(enum class EChromaSDKDeviceEnum device, struct FLinearColor& Color); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetStaticColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24967a0
	void SetMouseLedColor(enum class EChromaSDKMouseLed led, struct FLinearColor& colorParam, struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetMouseLedColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2496640
	void SetKeysNonZeroColorName(struct FString AnimationName, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24964b0
	void SetKeysNonZeroColorAllFramesName(struct FString AnimationName, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2496360
	void SetKeysNonZeroColorAllFrames(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2496230
	void SetKeysNonZeroColor(int32_t animationId, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24960c0
	void SetKeysColorRGBName(struct FString AnimationName, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorRGBName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2495ed0
	void SetKeysColorRGB(int32_t animationId, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorRGB // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2495cf0
	void SetKeysColorName(struct FString AnimationName, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2495b60
	void SetKeysColorAllFramesRGBName(struct FString AnimationName, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesRGBName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x24959b0
	void SetKeysColorAllFramesRGB(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesRGB // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2495800
	void SetKeysColorAllFramesName(struct FString AnimationName, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24956b0
	void SetKeysColorAllFrames(int32_t animationId, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2495580
	void SetKeysColor(int32_t animationId, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeysColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2495410
	void SetKeyRowColumnColorName(struct FString AnimationName, int32_t FrameIndex, int32_t Row, int32_t Column, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyRowColumnColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2495100
	void SetKeyNonZeroColorName(struct FString AnimationName, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494fa0
	void SetKeyNonZeroColorAllFramesName(struct FString AnimationName, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494e80
	void SetKeyNonZeroColorAllFrames(int32_t animationId, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494d80
	void SetKeyNonZeroColor(int32_t animationId, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494c30
	void SetKeyColorName(struct FString AnimationName, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494ad0
	void SetKeyColorAllFramesName(struct FString AnimationName, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24949b0
	void SetKeyColorAllFrames(int32_t animationId, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24948b0
	void SetKeyColor(int32_t animationId, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2494760
	void SetKeyboardKeyColor(enum class EChromaSDKKeyboardKey Key, struct FLinearColor& colorParam, struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetKeyboardKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24952b0
	void SetIdleAnimationName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetIdleAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24946d0
	void SetCurrentFrameName(struct FString AnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetCurrentFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494600
	void SetCurrentFrame(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetCurrentFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494540
	void SetChromaCustomFlagName(struct FString AnimationName, bool Flag); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetChromaCustomFlagName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494470
	void SetChromaCustomColorAllFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.SetChromaCustomColorAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24943e0
	void ReverseAllFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReverseAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494350
	void ReverseAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReverseAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24942d0
	void ReduceFramesName(struct FString AnimationName, int32_t N); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReduceFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494200
	void ReduceFrames(int32_t animationId, int32_t N); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ReduceFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494140
	void PreviewFrameName(struct FString AnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PreviewFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2494070
	int32_t PreviewFrame(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PreviewFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493fa0
	void PlayAnimations(struct TArray<struct FString>& animationNames, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimations // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2493e90
	void PlayAnimationName(struct FString AnimationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493cf0
	void PlayAnimationComposite(struct FString AnimationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimationComposite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493dc0
	void PlayAnimation(struct FString AnimationName, bool Loop); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.PlayAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493cf0
	void OverrideFrameDurationName(struct FString AnimationName, float Duration); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OverrideFrameDurationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493c10
	void OpenAnimationFromMemory(struct TArray<char>& Data, struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OpenAnimationFromMemory // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2493b10
	void OffsetNonZeroColorsName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493970
	void OffsetNonZeroColorsAllFramesName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493810
	void OffsetNonZeroColorsAllFrames(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24936d0
	void OffsetNonZeroColors(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetNonZeroColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493540
	void OffsetColorsName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24933a0
	void OffsetColorsAllFramesName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493240
	void OffsetColorsAllFrames(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2493100
	void OffsetColors(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.OffsetColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2492f70
	void MultiplyTargetColorLerpAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyTargetColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492e40
	void MultiplyTargetColorLerpAllFrames(int32_t animationId, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyTargetColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492d20
	void MultiplyNonZeroTargetColorLerpAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyNonZeroTargetColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492bf0
	void MultiplyNonZeroTargetColorLerpAllFrames(int32_t animationId, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyNonZeroTargetColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492ad0
	void MultiplyIntensityRGBName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2492930
	void MultiplyIntensityRGB(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24927a0
	void MultiplyIntensityName(struct FString AnimationName, int32_t frameId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2492680
	void MultiplyIntensityColorName(struct FString AnimationName, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492560
	void MultiplyIntensityColorAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2492480
	void MultiplyIntensityColorAllFrames(int32_t animationId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24923c0
	void MultiplyIntensityColor(int32_t animationId, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24922c0
	void MultiplyIntensityAllFramesRGBName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2492160
	void MultiplyIntensityAllFramesRGB(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2492020
	void MultiplyIntensityAllFramesName(struct FString AnimationName, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491f40
	void MultiplyIntensityAllFrames(int32_t animationId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensityAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491e80
	void MultiplyIntensity(int32_t animationId, int32_t frameId, float Intensity); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyIntensity // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491d80
	void MultiplyColorLerpAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyColorLerpAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2491c50
	void MultiplyColorLerpAllFrames(int32_t animationId, struct FLinearColor& colorParam1, struct FLinearColor& colorParam2); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MultiplyColorLerpAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2491b30
	void MakeBlankFramesRGBName(struct FString AnimationName, int32_t frameCount, float Duration, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491510
	void MakeBlankFramesRGB(int32_t animationId, int32_t frameCount, float Duration, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491340
	void MakeBlankFramesRandomName(struct FString AnimationName, int32_t frameCount, float Duration); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491a10
	void MakeBlankFramesRandomBlackAndWhiteName(struct FString AnimationName, int32_t frameCount, float Duration); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomBlackAndWhiteName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24918f0
	void MakeBlankFramesRandomBlackAndWhite(int32_t animationId, int32_t frameCount, float Duration); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandomBlackAndWhite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24917f0
	void MakeBlankFramesRandom(int32_t animationId, int32_t frameCount, float Duration); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesRandom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24916f0
	void MakeBlankFramesName(struct FString AnimationName, int32_t frameCount, float Duration, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24911e0
	void MakeBlankFrames(int32_t animationId, int32_t frameCount, float Duration, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.MakeBlankFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2491090
	void LoadAnimationName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LoadAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2491000
	void LoadAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LoadAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490f80
	int32_t LerpColorBGR(int32_t From, int32_t To, float T); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LerpColorBGR // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490e80
	struct FLinearColor LerpColor(struct FLinearColor colorParam1, struct FLinearColor colorParam2, float T); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.LerpColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x2490d50
	float Lerp(float Start, float End, float amt); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.Lerp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490c30
	bool IsPlatformWindows(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsPlatformWindows // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x244cc00
	bool IsInitialized(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsInitialized // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490c00
	bool IsAnimationTypePlaying(enum class EChromaSDKDeviceEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsAnimationTypePlaying // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490b80
	bool IsAnimationPlaying(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.IsAnimationPlaying // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490ae0
	void InvertColorsAllFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InvertColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490a50
	void InvertColorsAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InvertColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24909d0
	void InsertFrameName(struct FString AnimationName, int32_t sourceFrame, int32_t targetFrame); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24908c0
	void InsertFrame(int32_t animationId, int32_t sourceFrame, int32_t targetFrame); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24907c0
	void InsertDelayName(struct FString AnimationName, int32_t frameId, int32_t Delay); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertDelayName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24906b0
	void InsertDelay(int32_t animationId, int32_t frameId, int32_t Delay); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.InsertDelay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24905b0
	struct FLinearColor GetRGB(int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetRGB // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x24904a0
	int32_t GetPlayingAnimationId(int32_t Index); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetPlayingAnimationId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490410
	int32_t GetPlayingAnimationCount(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetPlayingAnimationCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24903e0
	struct FLinearColor GetMouseLedColor(enum class EChromaSDKMouseLed led, struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMouseLedColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x24902c0
	int32_t GetMaxRow(enum class EChromaSDKDevice2DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxRow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490240
	int32_t GetMaxLeds(enum class EChromaSDKDevice1DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxLeds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24901c0
	int32_t GetMaxColumn(enum class EChromaSDKDevice2DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetMaxColumn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2490140
	struct FLinearColor GetKeyColorName(struct FString AnimationName, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyColorName // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x248fd90
	struct FLinearColor GetKeyColor(int32_t animationId, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x248fc80
	int32_t GetKeyboardRzKey(enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyboardRzKey // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24900c0
	enum class EChromaSDKKeyboardKey GetKeyboardRazerKey(struct FKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyboardRazerKey // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248ffe0
	struct FLinearColor GetKeyboardKeyColor(enum class EChromaSDKKeyboardKey Key, struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetKeyboardKeyColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248fec0
	int32_t GetFrameCountName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetFrameCountName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248fbe0
	int32_t GetFrameCount(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetFrameCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248fb50
	int32_t GetCurrentFrameName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetCurrentFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248fab0
	int32_t GetCurrentFrame(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetCurrentFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248fa20
	int32_t GetBGRInt(int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetBGRInt // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f920
	struct FString GetAnimationName(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f850
	int32_t GetAnimationIdByIndex(int32_t Index); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationIdByIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f7c0
	int32_t GetAnimationId(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f6f0
	int32_t GetAnimationCount(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimationCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f790
	int32_t GetAnimation(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.GetAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f6f0
	void FillZeroColorRGBName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f550
	void FillZeroColorRGB(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f3c0
	void FillZeroColorName(struct FString AnimationName, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248f2a0
	void FillZeroColorAllFramesRGBName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f140
	void FillZeroColorAllFramesRGB(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248f000
	void FillZeroColorAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248ef20
	void FillZeroColorAllFrames(int32_t animationId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248ee60
	void FillZeroColor(int32_t animationId, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248ed60
	void FillThresholdRGBColorsAllFramesRGBName(struct FString AnimationName, int32_t redThreshold, int32_t greenThreshold, int32_t blueThreshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdRGBColorsAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248eb40
	void FillThresholdRGBColorsAllFramesRGB(int32_t animationId, int32_t redThreshold, int32_t greenThreshold, int32_t blueThreshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdRGBColorsAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248e930
	void FillThresholdColorsRGBName(struct FString AnimationName, int32_t frameId, int32_t Threshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248e760
	void FillThresholdColorsRGB(int32_t animationId, int32_t frameId, int32_t Threshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248e5a0
	void FillThresholdColorsMinMaxAllFramesRGBName(struct FString AnimationName, int32_t minThreshold, int32_t minRed, int32_t minGreen, int32_t minBlue, int32_t maxThreshold, int32_t maxRed, int32_t maxGreen, int32_t maxBlue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsMinMaxAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248e300
	void FillThresholdColorsMinMaxAllFramesRGB(int32_t animationId, int32_t minThreshold, int32_t minRed, int32_t minGreen, int32_t minBlue, int32_t maxThreshold, int32_t maxRed, int32_t maxGreen, int32_t maxBlue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsMinMaxAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248e070
	void FillThresholdColorsAllFramesRGBName(struct FString AnimationName, int32_t Threshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248ded0
	void FillThresholdColorsAllFramesRGB(int32_t animationId, int32_t Threshold, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248dd40
	void FillThresholdColorsAllFramesName(struct FString AnimationName, int32_t Threshold, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248dc20
	void FillThresholdColorsAllFrames(int32_t animationId, int32_t Threshold, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillThresholdColorsAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248db20
	void FillRandomColorsName(struct FString AnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248da50
	void FillRandomColorsBlackAndWhiteName(struct FString AnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d980
	void FillRandomColorsBlackAndWhiteAllFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d8f0
	void FillRandomColorsBlackAndWhiteAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhiteAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d870
	void FillRandomColorsBlackAndWhite(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsBlackAndWhite // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d7b0
	void FillRandomColorsAllFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d720
	void FillRandomColorsAllFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColorsAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d6a0
	void FillRandomColors(int32_t animationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillRandomColors // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d5e0
	void FillNonZeroColorRGBName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d440
	void FillNonZeroColorRGB(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d2b0
	void FillNonZeroColorName(struct FString AnimationName, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248d190
	void FillNonZeroColorAllFramesRGBName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248d030
	void FillNonZeroColorAllFramesRGB(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248cef0
	void FillNonZeroColorAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248ce10
	void FillNonZeroColorAllFrames(int32_t animationId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248cd50
	void FillNonZeroColor(int32_t animationId, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillNonZeroColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248cc50
	void FillColorRGBName(struct FString AnimationName, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248cab0
	void FillColorRGB(int32_t animationId, int32_t frameId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c920
	void FillColorName(struct FString AnimationName, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248c800
	void FillColorAllFramesRGBName(struct FString AnimationName, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesRGBName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c6a0
	void FillColorAllFramesRGB(int32_t animationId, int32_t Red, int32_t Green, int32_t Blue); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesRGB // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c560
	void FillColorAllFramesName(struct FString AnimationName, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFramesName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248c480
	void FillColorAllFrames(int32_t animationId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColorAllFrames // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248c3c0
	void FillColor(int32_t animationId, int32_t frameId, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FillColor // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x248c2c0
	void FadeStartFramesName(struct FString AnimationName, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeStartFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c1f0
	void FadeStartFrames(int32_t animationId, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeStartFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c130
	void FadeEndFramesName(struct FString AnimationName, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeEndFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248c060
	void FadeEndFrames(int32_t animationId, int32_t fade); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.FadeEndFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bfa0
	void DuplicateMirrorFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateMirrorFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bf10
	void DuplicateMirrorFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateMirrorFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248be90
	void DuplicateFramesName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248be00
	void DuplicateFrames(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bd80
	void DuplicateFirstFrameName(struct FString AnimationName, int32_t frameCount); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFirstFrameName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bcb0
	void DuplicateFirstFrame(int32_t animationId, int32_t frameCount); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.DuplicateFirstFrame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bbf0
	struct TArray<struct FChromaSDKColors> CreateRandomColorsBlackAndWhite2D(enum class EChromaSDKDevice2DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColorsBlackAndWhite2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248bb20
	struct TArray<struct FLinearColor> CreateRandomColorsBlackAndWhite1D(enum class EChromaSDKDevice1DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColorsBlackAndWhite1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248ba50
	struct TArray<struct FChromaSDKColors> CreateRandomColors2D(enum class EChromaSDKDevice2DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColors2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b980
	struct TArray<struct FLinearColor> CreateRandomColors1D(enum class EChromaSDKDevice1DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateRandomColors1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b8b0
	struct TArray<struct FChromaSDKColors> CreateColors2D(enum class EChromaSDKDevice2DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateColors2D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b7e0
	struct TArray<struct FLinearColor> CreateColors1D(enum class EChromaSDKDevice1DEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CreateColors1D // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b710
	void CopyZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b620
	void CopyZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b560
	void CopyNonZeroTargetAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b430
	void CopyNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b300
	void CopyNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b200
	void CopyNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b110
	void CopyNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248b050
	void CopyNonZeroTargetAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroTargetAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248af50
	void CopyNonZeroKeysColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x248add0
	void CopyNonZeroKeysColorAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x248ac80
	void CopyNonZeroKeysColorAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x248ab60
	void CopyNonZeroKeysColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeysColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x248aa00
	void CopyNonZeroKeyColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeyColorName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a890
	void CopyNonZeroKeyColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroKeyColor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a750
	void CopyNonZeroAllKeysOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a5e0
	void CopyNonZeroAllKeysOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a4a0
	void CopyNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a370
	void CopyNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a240
	void CopyNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a140
	void CopyNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x248a050
	void CopyNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2489f90
	void CopyNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2489e90
	void CopyKeysColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2489d10
	void CopyKeysColorAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorAllFramesName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2489bc0
	void CopyKeysColorAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColorAllFrames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2489aa0
	void CopyKeysColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t FrameIndex, struct TArray<enum class EChromaSDKKeyboardKey>& Keys); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeysColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2489940
	void CopyKeyColorName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeyColorName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24897d0
	void CopyKeyColor(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t FrameIndex, enum class EChromaSDKKeyboardKey Key); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyKeyColor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2489690
	void CopyAnimationName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24895a0
	void CopyAnimation(int32_t sourceAnimationId, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24894d0
	void CopyAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24893a0
	void CopyAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24892b0
	void CopyAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24891f0
	void CopyAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CopyAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24890f0
	void CloseAnimationName(struct FString AnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CloseAnimationName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2489060
	void CloseAnimation(int32_t animationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CloseAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488fe0
	void CloseAll(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.CloseAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488fc0
	void ClearAnimationType(enum class EChromaSDKDeviceEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ClearAnimationType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488f50
	void ClearAll(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ClearAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488f30
	int32_t ChromaSDKUnInit(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKUnInit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488f00
	int32_t ChromaSDKSetEffect(struct FChromaSDKGuid& EffectId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKSetEffect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2488e50
	int32_t ChromaSDKInitSDK(struct FChromaSDKAppInfoType& appInfo); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKInitSDK // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2488d60
	int32_t ChromaSDKInit(); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKInit // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488d30
	int32_t ChromaSDKDeleteEffect(struct FChromaSDKGuid& EffectId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKDeleteEffect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2488c80
	struct FChromaSDKEffectResult ChromaSDKCreateEffectStatic(enum class EChromaSDKDeviceEnum device, struct FLinearColor& colorParam); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectStatic // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2488b80
	struct FChromaSDKEffectResult ChromaSDKCreateEffectNone(enum class EChromaSDKDeviceEnum device); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectNone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488ad0
	struct FChromaSDKEffectResult ChromaSDKCreateEffectKeyboardCustom2D(struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectKeyboardCustom2D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x24889d0
	struct FChromaSDKEffectResult ChromaSDKCreateEffectCustom2D(enum class EChromaSDKDevice2DEnum device, struct TArray<struct FChromaSDKColors>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectCustom2D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2488890
	struct FChromaSDKEffectResult ChromaSDKCreateEffectCustom1D(enum class EChromaSDKDevice1DEnum device, struct TArray<struct FLinearColor>& Colors); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.ChromaSDKCreateEffectCustom1D // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x2488770
	void AppendAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AppendAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488680
	void AppendAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AppendAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24885c0
	void AddNonZeroTargetAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488490
	void AddNonZeroTargetAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2488390
	void AddNonZeroTargetAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24882a0
	void AddNonZeroTargetAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroTargetAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24881e0
	void AddNonZeroAllKeysName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x24880b0
	void AddNonZeroAllKeysAllFramesOffsetName(struct FString sourceAnimationName, struct FString targetAnimationName, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesOffsetName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2487f80
	void AddNonZeroAllKeysAllFramesOffset(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t Offset); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesOffset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2487e80
	void AddNonZeroAllKeysAllFramesName(struct FString sourceAnimationName, struct FString targetAnimationName); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFramesName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2487d90
	void AddNonZeroAllKeysAllFrames(int32_t sourceAnimationId, int32_t targetAnimationId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeysAllFrames // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2487cd0
	void AddNonZeroAllKeys(int32_t sourceAnimationId, int32_t targetAnimationId, int32_t frameId); // Function ChromaSDKPlugin.ChromaSDKPluginBPLibrary.AddNonZeroAllKeys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2487bd0
};

