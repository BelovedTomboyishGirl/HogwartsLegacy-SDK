// BlueprintGeneratedClass BP_Mesh_Spline.BP_Mesh_Spline_C
// Size: 0x428 (Inherited: 0x248)
struct ABP_Mesh_Spline_C : AActor {
	struct USplineComponent* Spline; // 0x248(0x08)
	struct UBP_SplineCollisionGenerator_C* BP_SplineCollisionGenerator; // 0x250(0x08)
	struct UBP_SplineToolGenerator_C* HISM Generation Component; // 0x258(0x08)
	struct UStaticMesh* StartMesh 01; // 0x260(0x08)
	struct UStaticMesh* StartMesh_02; // 0x268(0x08)
	struct UStaticMesh* StartMesh_03; // 0x270(0x08)
	struct UStaticMesh* StartMesh_04; // 0x278(0x08)
	struct UStaticMesh* EndMesh_01; // 0x280(0x08)
	struct UStaticMesh* EndMesh_02; // 0x288(0x08)
	struct UStaticMesh* EndMesh_03; // 0x290(0x08)
	bool UseHISMToolComponent; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	float Spacing Offset; // 0x29c(0x04)
	bool RotateMeshAtOrigin; // 0x2a0(0x01)
	bool Flip Mesh; // 0x2a1(0x01)
	bool RandomSplineMeshes?; // 0x2a2(0x01)
	char pad_2A3[0x1]; // 0x2a3(0x01)
	struct FRandomStream Random Seed; // 0x2a4(0x08)
	float spacing; // 0x2ac(0x04)
	struct UStaticMesh* Middle Mesh01; // 0x2b0(0x08)
	struct UStaticMesh* MiddleMesh02; // 0x2b8(0x08)
	struct UStaticMesh* MiddleMesh03; // 0x2c0(0x08)
	struct UStaticMesh* MiddleMesh04; // 0x2c8(0x08)
	float TangentScale; // 0x2d0(0x04)
	enum class ECollisionEnabled Collision For SplineMeshes?; // 0x2d4(0x01)
	bool Start and End Mesh; // 0x2d5(0x01)
	bool StartMesh_2; // 0x2d6(0x01)
	bool StartMesh_3; // 0x2d7(0x01)
	bool StartMesh_4; // 0x2d8(0x01)
	bool StartMesh_5; // 0x2d9(0x01)
	bool StartMesh_None; // 0x2da(0x01)
	char pad_2DB[0x1]; // 0x2db(0x01)
	int32_t StartMeshIndex; // 0x2dc(0x04)
	struct UStaticMesh* EndMesh_04; // 0x2e0(0x08)
	bool EndMeshOn?; // 0x2e8(0x01)
	bool EndMesh_2; // 0x2e9(0x01)
	bool EndMesh_3; // 0x2ea(0x01)
	bool EndMesh_4; // 0x2eb(0x01)
	bool EndMesh_5; // 0x2ec(0x01)
	bool EndMesh_None; // 0x2ed(0x01)
	char pad_2EE[0x2]; // 0x2ee(0x02)
	int32_t EndMeshIndex; // 0x2f0(0x04)
	char pad_2F4[0x4]; // 0x2f4(0x04)
	struct USplineMeshComponent* NewVar; // 0x2f8(0x08)
	int32_t CurrentSplineIndex; // 0x300(0x04)
	int32_t NumberOfSplinePoints; // 0x304(0x04)
	int32_t NextSplineIndex; // 0x308(0x04)
	struct FVector StartLocation; // 0x30c(0x0c)
	struct FVector StartTangent; // 0x318(0x0c)
	struct FVector EndLocation; // 0x324(0x0c)
	struct FVector EndTangent; // 0x330(0x0c)
	enum class ECollisionEnabled CollisionsStartEndMeshes?; // 0x33c(0x01)
	char pad_33D[0x3]; // 0x33d(0x03)
	int32_t Use Mesh 0,1,2 or 3; // 0x340(0x04)
	struct FRandomStream Random Seed Not Broken; // 0x344(0x08)
	bool StartMesh_Flip; // 0x34c(0x01)
	bool EndMesh_Flip; // 0x34d(0x01)
	bool DisableCameraCollision?; // 0x34e(0x01)
	char pad_34F[0x1]; // 0x34f(0x01)
	struct UHierarchicalInstancedStaticMeshComponent* CollisionHISM; // 0x350(0x08)
	float CheckDistance; // 0x358(0x04)
	float AngleThreshold; // 0x35c(0x04)
	float BoxHeight; // 0x360(0x04)
	float BoxWidth; // 0x364(0x04)
	struct FText Report; // 0x368(0x18)
	bool UsePitch; // 0x380(0x01)
	char pad_381[0x3]; // 0x381(0x03)
	struct FLinearColor Wall Color; // 0x384(0x10)
	char pad_394[0x4]; // 0x394(0x04)
	struct UPhysicalMaterial* PhysicsMaterial; // 0x398(0x08)
	bool GenerateOverlapEvents; // 0x3a0(0x01)
	bool UseBaseCollisionProfile; // 0x3a1(0x01)
	char pad_3A2[0x2]; // 0x3a2(0x02)
	struct FName BaseCollisionProfileName; // 0x3a4(0x08)
	enum class ECollisionEnabled CollisionEnabled; // 0x3ac(0x01)
	enum class ECollisionChannel ObjectType; // 0x3ad(0x01)
	char pad_3AE[0x2]; // 0x3ae(0x02)
	struct TMap<enum class ECollisionChannel, enum class ECollisionResponse> TraceResponsesOverrides; // 0x3b0(0x50)
	bool CreateBoxCollisions; // 0x400(0x01)
	char pad_401[0x3]; // 0x401(0x03)
	struct FName In Collision Profile Name; // 0x404(0x08)
	bool Use Spline Mesh by Max Angle; // 0x40c(0x01)
	char pad_40D[0x3]; // 0x40d(0x03)
	float Max Angle Delta; // 0x410(0x04)
	int32_t Use HISMThreshold; // 0x414(0x04)
	bool Enable Debugging; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	int32_t Debug ISM Components Count; // 0x41c(0x04)
	int32_t Debug Spline Mesh Components Count; // 0x420(0x04)
	int32_t Debug ISM Instances Count; // 0x424(0x04)

	void Request Destroy Spline Helper(struct USplineComponent* SplineHelper, bool& Success); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.Request Destroy Spline Helper // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void RequestDestroyComponent(struct UInstancedStaticMeshComponent* ISM Component, bool& Success); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.RequestDestroyComponent // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	struct UStaticMesh* RandomSplineMesh(); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.RandomSplineMesh // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void EndMeshSelection(); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.EndMeshSelection // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void StartMeshSelection(); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.StartMeshSelection // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
	void UserConstructionScript(); // Function BP_Mesh_Spline.BP_Mesh_Spline_C.UserConstructionScript // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x38a7480
};

